[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8465714454650879, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2073209285736084, 1.5927985906600952, 1.1443896293640137, 0.9699559807777405, 0.9001743793487549, 0.8370533585548401, 0.7933341264724731, 0.7445614337921143, 0.7051653265953064, 0.6932969093322754, 0.6888387799263, 0.6666018962860107, 0.6435158848762512, 0.6636979579925537, 0.6285580992698669, 0.6118215918540955, 0.5857593417167664, 0.5864808559417725, 0.5804654359817505, 0.579655110836029, 0.5517528057098389, 0.5507845878601074, 0.5467886328697205, 0.5290315747261047, 0.5310065150260925, 0.5160227417945862, 0.5146201252937317, 0.5097499489784241, 0.5033513307571411, 0.49781450629234314, 0.49394166469573975, 0.48111653327941895, 0.48012539744377136, 0.4657832682132721, 0.47217702865600586, 0.46740806102752686, 0.468532532453537, 0.4539499580860138, 0.4466188848018646, 0.4529077112674713, 0.43236178159713745, 0.43506479263305664, 0.42325082421302795, 0.4381116032600403], "accuracy": [0.27024170756340027, 0.50785893201828, 0.603090763092041, 0.6576409935951233, 0.6742834448814392, 0.6919825673103333, 0.7162858247756958, 0.7259278893470764, 0.7384757399559021, 0.7424382567405701, 0.7442874312400818, 0.7536653280258179, 0.7629110813140869, 0.7543256878852844, 0.7648923397064209, 0.7683265209197998, 0.7794214487075806, 0.7770439982414246, 0.7866860628128052, 0.7865539789199829, 0.7927618622779846, 0.7955356240272522, 0.8004226684570312, 0.800818920135498, 0.8053097128868103, 0.8084797263145447, 0.8127063512802124, 0.8123101592063904, 0.8113855719566345, 0.8158763647079468, 0.8137630224227905, 0.821820080280304, 0.8245938420295715, 0.829216718673706, 0.8239334225654602, 0.8267071843147278, 0.8261788487434387, 0.8294808864593506, 0.8342359066009521, 0.8322546482086182, 0.8411042094230652, 0.8376700282096863, 0.8441421389579773, 0.8359529972076416], "val_loss": [1.9092395305633545, 1.1016474962234497, 0.8954204320907593, 0.8499152660369873, 0.7540274262428284, 0.7564853429794312, 0.723382830619812, 0.6567188501358032, 0.6702338457107544, 0.6194809675216675, 0.6176899075508118, 0.6477785110473633, 0.5891312956809998, 0.6132333874702454, 0.5706913471221924, 0.5654815435409546, 0.5732457041740417, 0.566823422908783, 0.5526807308197021, 0.5405154824256897, 0.5398532748222351, 0.5385627150535583, 0.5319945216178894, 0.5225831270217896, 0.5237603783607483, 0.5108539462089539, 0.5073206424713135, 0.524808943271637, 0.49506112933158875, 0.5128658413887024, 0.4993263781070709, 0.5080028176307678, 0.4837792217731476, 0.48996007442474365, 0.48344287276268005, 0.48369908332824707, 0.47341254353523254, 0.47774064540863037, 0.464229017496109, 0.4689891040325165, 0.46846407651901245, 0.4669453799724579, 0.46990641951560974, 0.46390941739082336], "val_accuracy": [0.5923333168029785, 0.6629999876022339, 0.6800000071525574, 0.6866666674613953, 0.7223333120346069, 0.7266666889190674, 0.7260000109672546, 0.7513333559036255, 0.7453333139419556, 0.7683333158493042, 0.7770000100135803, 0.7509999871253967, 0.7816666960716248, 0.7720000147819519, 0.7839999794960022, 0.7916666865348816, 0.7850000262260437, 0.7896666526794434, 0.7993333339691162, 0.7963333129882812, 0.7946666479110718, 0.7950000166893005, 0.8050000071525574, 0.8103333115577698, 0.8116666674613953, 0.8163333535194397, 0.8180000185966492, 0.8069999814033508, 0.8236666917800903, 0.8076666593551636, 0.8076666593551636, 0.8193333148956299, 0.8226666450500488, 0.8273333311080933, 0.8243333101272583, 0.8203333616256714, 0.8299999833106995, 0.8256666660308838, 0.8323333263397217, 0.831333339214325, 0.831333339214325, 0.8293333053588867, 0.8276666402816772, 0.8303333520889282]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [1, 3, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 5], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 3, 7, 2], [0, 1, 6, 4, 5], [0], [1], [0], [4], [0]], "fitness": -0.17657142877578735, "mapping_values": [1, 10, 5, 5, 1, 9, 6, 3, 2, 9, 4, 5, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, grad), alpha), tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), grad), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.320188522338867, 2.2328109741210938, 2.368879795074463, 2.344362735748291, 2.3079607486724854, 2.3038582801818848, 2.3034136295318604], "accuracy": [0.21793685853481293, 0.15889579057693481, 0.16061286628246307, 0.1426495909690857, 0.0940430611371994, 0.09721305221319199, 0.09325055778026581], "val_loss": [2.300320863723755, 2.3022329807281494, 2.3093597888946533, 2.3118860721588135, 2.303798198699951, 2.303009510040283, 2.3029959201812744], "val_accuracy": [0.09566666930913925, 0.179666668176651, 0.10066666454076767, 0.09966666996479034, 0.09966666996479034, 0.10133333504199982, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 0, 5], [0, 2, 1, 2, 2], [76, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [7, 0, 0, 7, 0, 5, 5, 4], [5, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 7, 0, 2, 3, 7, 0], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 12, 8, 4, 1, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), grad), tf.math.subtract(alpha, tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.negative(grad)), tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [4442552572837888.0, 1.3365481531146572e+34, 67994.5078125, 18652660.0, 4710158336.0, 1220070211584.0], "accuracy": [0.15532954037189484, 0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [9.264311460526083e+34, 2712.97802734375, 690613.875, 176789584.0, 45258129408.0, 11586081128448.0], "val_accuracy": [0.10133333504199982, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 8, 8, 5], [0, 0, 2, 1, 2], [26, 39, 8], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [5, 9, 4, 7, 5, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [7, 3, 0, 1, 1, 9], [0, 1, 1, 4], [78, 73], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 2, 2, 0, 1, 10, 6, 4, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.subtract(alpha, alpha), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1.318239011386143e+27, 49.69049835205078, 152.35018920898438, 312.675537109375, 530.404296875, 805.8809204101562], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [21.920406341552734, 100.65986633300781, 236.9445037841797, 430.7635803222656, 682.1618041992188, 991.0980224609375], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [1, 2, 3, 1, 3, 5, 1, 2, 0, 4, 2, 6, 8, 3, 4, 3, 8, 6, 7, 3, 5, 6, 4], [1, 0, 0, 0, 2, 1, 3, 3, 3, 1, 1, 0, 0, 2, 3, 3, 1, 1, 0], [26, 39, 39, 58, 75, 71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [2, 0, 4, 7, 2, 5, 8, 4, 0, 9], [1, 2, 0, 4, 0, 3, 1], [16, 88, 38], [0, 0, 0, 1, 0, 1, 1, 1], [5, 3, 4, 2], [0, 1, 1, 4], [0], [1], [0], [0], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 42, 23, 19, 6, 15, 10, 5, 3, 8, 4, 4, 1, 1, 0, 1, 1], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.subtract(tf.math.add(alpha, tf.math.negative(grad)), tf.math.pow(grad, tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(grad, tf.math.pow(tf.math.multiply(tf.math.sqrt(alpha), tf.math.divide_no_nan(alpha, tf.math.add(tf.math.multiply(tf.math.square(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), grad))), grad))), grad), tf.math.divide_no_nan(tf.math.pow(alpha, alpha), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.square(beta), tf.math.sqrt(tf.math.pow(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)))), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3104751110076904, 2.3102035522460938, 2.30938458442688, 2.310884714126587, 2.3108432292938232, 2.310204267501831], "accuracy": [0.09179764986038208, 0.09377889335155487, 0.09126931428909302, 0.08849557489156723, 0.09047681838274002, 0.09034473448991776], "val_loss": [2.309535264968872, 2.309535264968872, 2.309535264968872, 2.309535264968872, 2.309535264968872, 2.309535264968872], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]