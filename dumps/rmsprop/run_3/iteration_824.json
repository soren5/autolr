[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8145714402198792, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212620258331299, 1.6145286560058594, 1.1475850343704224, 0.9939115643501282, 0.8767780661582947, 0.8259729743003845, 0.8118223547935486, 0.7738723754882812, 0.7219944596290588, 0.7112343907356262, 0.7271511554718018, 0.6843414902687073, 0.6545125842094421, 0.6324412822723389, 0.6463761925697327, 0.6166287064552307, 0.6213586330413818, 0.5988349318504333, 0.5860844254493713, 0.5710400342941284, 0.5691966414451599, 0.5761860609054565, 0.5546311736106873, 0.5490229725837708, 0.5496740937232971, 0.5254743099212646, 0.5266709923744202, 0.5244884490966797, 0.5088922381401062, 0.5222538113594055, 0.507211446762085, 0.4981411099433899, 0.5080720782279968, 0.49059170484542847, 0.48115089535713196, 0.47816070914268494, 0.4755995571613312, 0.47423693537712097, 0.4590890109539032], "accuracy": [0.2662792205810547, 0.502971887588501, 0.602562427520752, 0.6400739550590515, 0.6789063811302185, 0.6997754573822021, 0.700171709060669, 0.7148329019546509, 0.7308149337768555, 0.733588695526123, 0.7343811988830566, 0.7415136694908142, 0.754589855670929, 0.7605336308479309, 0.7560427784919739, 0.7692511081695557, 0.7695152759552002, 0.7802139520645142, 0.7794214487075806, 0.7935543656349182, 0.791441023349762, 0.7808743715286255, 0.7968564033508301, 0.8001585006713867, 0.7981772422790527, 0.8083476424217224, 0.8115176558494568, 0.8095363974571228, 0.8109893202781677, 0.8058380484580994, 0.8137630224227905, 0.8170651197433472, 0.8117818236351013, 0.8216879963874817, 0.8256505131721497, 0.8241975903511047, 0.8271034359931946, 0.8249900937080383, 0.8342359066009521], "val_loss": [1.9274688959121704, 1.123355507850647, 0.9043220281600952, 0.7848499417304993, 0.7517929673194885, 0.7286996841430664, 0.6946821212768555, 0.6223448514938354, 0.6144413948059082, 0.6258874535560608, 0.6251421570777893, 0.618075430393219, 0.5610421299934387, 0.5910248756408691, 0.5269421339035034, 0.5234161615371704, 0.5155444145202637, 0.5173825025558472, 0.49244770407676697, 0.4924345016479492, 0.4866856336593628, 0.5240021347999573, 0.4857660233974457, 0.48500025272369385, 0.4685825705528259, 0.46555498242378235, 0.4501977562904358, 0.4738120138645172, 0.4458981156349182, 0.44704875349998474, 0.4394611716270447, 0.47975316643714905, 0.4305393099784851, 0.4268150329589844, 0.4411291480064392, 0.43868041038513184, 0.4295235574245453, 0.41430094838142395, 0.41463109850883484], "val_accuracy": [0.581333339214325, 0.6353333592414856, 0.6783333420753479, 0.7233333587646484, 0.734333336353302, 0.7296666502952576, 0.7266666889190674, 0.765333354473114, 0.762666642665863, 0.7636666893959045, 0.7506666779518127, 0.7726666927337646, 0.7823333144187927, 0.7763333320617676, 0.7946666479110718, 0.7986666560173035, 0.8103333115577698, 0.7919999957084656, 0.8186666369438171, 0.8186666369438171, 0.8166666626930237, 0.8016666769981384, 0.8233333230018616, 0.8226666450500488, 0.8320000171661377, 0.8306666612625122, 0.8336666822433472, 0.8199999928474426, 0.8366666436195374, 0.8273333311080933, 0.8420000076293945, 0.809333324432373, 0.8416666388511658, 0.8460000157356262, 0.8303333520889282, 0.8326666951179504, 0.8396666646003723, 0.840666651725769, 0.8456666469573975]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 1, 3, 5], [0, 0, 1, 2, 1], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [2, 9, 4, 7, 0, 9, 5, 4], [1, 2, 0, 3, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [90], [1], [0], [6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 8, 6, 2, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(grad, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [6.414837837219238, 2.3103432655334473, 2.304487943649292, 2.3032925128936768, 2.302891254425049, 2.3029544353485107], "accuracy": [0.16919825971126556, 0.09800554811954498, 0.09245806187391281, 0.09813763201236725, 0.09642054885625839, 0.09747721254825592], "val_loss": [2.3158695697784424, 2.3052048683166504, 2.3032894134521484, 2.302811861038208, 2.302671194076538, 2.3026223182678223], "val_accuracy": [0.10133333504199982, 0.10100000351667404, 0.09966666996479034, 0.09799999743700027, 0.10000000149011612, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0], [6, 39, 16], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 5, 4, 2, 0, 5, 3, 4, 9], [1, 1, 0, 4, 0, 3, 1], [97, 38, 74], [0, 1, 0, 1, 0, 1, 1, 1], [7, 3, 0, 9], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 14, 9, 5, 3, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(alpha)), tf.math.multiply(tf.math.pow(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3043947219848633, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09734513610601425, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [1, 2, 3, 1, 3, 5, 8, 4], [1, 0, 1, 0, 2, 3, 2], [76, 22, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [2, 8, 4, 7, 0, 5, 5, 4, 0, 4], [1, 0, 5, 0, 0, 3, 1], [59, 1, 99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [7, 3, 0, 2, 2, 5, 8, 4, 8, 0], [0, 1, 1, 4, 6, 5], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 2, 16, 10, 6, 3, 16, 10, 6, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), grad), tf.math.sqrt(tf.math.pow(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(tf.math.square(tf.math.pow(tf.math.negative(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(alpha, tf.math.square(grad)))), tf.math.sqrt(tf.math.pow(tf.math.sqrt(tf.math.negative(grad)), grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 8], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [2, 9, 4, 7, 2, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 2, 1, 4], [0], [1], [0], [0], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 0, 8, 4, 4, 1, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3099114894866943, 2.3098745346069336, 2.3096864223480225, 2.310594320297241, 2.3092832565307617, 2.3097989559173584], "accuracy": [0.09179764986038208, 0.09192973375320435, 0.0944393053650856, 0.08691058307886124, 0.0944393053650856, 0.09087307006120682], "val_loss": [2.3080554008483887, 2.3080554008483887, 2.3080554008483887, 2.3080554008483887, 2.3080554008483887, 2.3080554008483887], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]