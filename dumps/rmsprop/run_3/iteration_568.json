[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8351428508758545, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211993932723999, 1.6070575714111328, 1.1439871788024902, 0.9278985857963562, 0.917066752910614, 0.8137874007225037, 0.7835128307342529, 0.7397756576538086, 0.7278716564178467, 0.6848976612091064, 0.6736699342727661, 0.6788200736045837, 0.6380538940429688, 0.6416922807693481, 0.6153867244720459, 0.6083042025566101, 0.590404212474823, 0.5944921374320984, 0.5815261602401733, 0.5901513695716858, 0.557969868183136, 0.5505644083023071, 0.5510553121566772, 0.5378624200820923, 0.5245804786682129, 0.5273582935333252, 0.5078957080841064, 0.5084598064422607, 0.5146163702011108, 0.4873742163181305, 0.4859365224838257, 0.48167940974235535, 0.48499247431755066, 0.4838881492614746, 0.46999436616897583, 0.4739519953727722, 0.47113674879074097, 0.4604550004005432, 0.45338621735572815, 0.45461612939834595, 0.43926241993904114, 0.44516417384147644, 0.4298546612262726, 0.4285665452480316, 0.4223422110080719, 0.42461109161376953, 0.4222685396671295], "accuracy": [0.2639017403125763, 0.5074626803398132, 0.5980715751647949, 0.6695284843444824, 0.6667547225952148, 0.7029454708099365, 0.7170783281326294, 0.7251353859901428, 0.7347774505615234, 0.7471932172775269, 0.755118191242218, 0.7442874312400818, 0.7638356685638428, 0.7638356685638428, 0.7705719470977783, 0.7784969210624695, 0.7773081660270691, 0.778232753276825, 0.7821952104568481, 0.7862898111343384, 0.7886672616004944, 0.7956677079200745, 0.8000264167785645, 0.8024039268493652, 0.8064984679222107, 0.8053097128868103, 0.8144234418869019, 0.8123101592063904, 0.8117818236351013, 0.8191784620285034, 0.819442629814148, 0.8227446675300598, 0.8232730031013489, 0.8224804997444153, 0.8273676037788391, 0.8261788487434387, 0.8236692547798157, 0.8301413059234619, 0.8337075710296631, 0.8323867321014404, 0.8362171649932861, 0.8334434032440186, 0.8388587832450867, 0.8400475382804871, 0.8500858545303345, 0.8441421389579773, 0.8467837572097778], "val_loss": [1.9307105541229248, 1.1027907133102417, 0.9095685482025146, 0.8078869581222534, 0.7483782768249512, 0.7100245952606201, 0.6615654230117798, 0.6596107482910156, 0.6334542036056519, 0.6068857908248901, 0.6239083409309387, 0.5861492156982422, 0.6073833703994751, 0.5854023694992065, 0.5518375635147095, 0.5608658790588379, 0.5432807207107544, 0.5348807573318481, 0.5313664674758911, 0.5495269894599915, 0.5306838154792786, 0.5064885020256042, 0.524048924446106, 0.49418896436691284, 0.48868075013160706, 0.4865449070930481, 0.48376789689064026, 0.47489747405052185, 0.4723741114139557, 0.4726004898548126, 0.46407121419906616, 0.47017455101013184, 0.45475101470947266, 0.4704913794994354, 0.45409855246543884, 0.4988735020160675, 0.4626522958278656, 0.45403626561164856, 0.4450435936450958, 0.4510718584060669, 0.4462457597255707, 0.42894473671913147, 0.43229442834854126, 0.43373608589172363, 0.4326344132423401, 0.4278588891029358, 0.44128280878067017], "val_accuracy": [0.534333348274231, 0.6650000214576721, 0.6983333230018616, 0.7039999961853027, 0.7333333492279053, 0.7356666922569275, 0.7519999742507935, 0.7493333220481873, 0.7630000114440918, 0.7763333320617676, 0.7596666812896729, 0.7713333368301392, 0.7683333158493042, 0.7786666750907898, 0.7903333306312561, 0.7879999876022339, 0.7976666688919067, 0.809333324432373, 0.8050000071525574, 0.7860000133514404, 0.7963333129882812, 0.8119999766349792, 0.8033333420753479, 0.8169999718666077, 0.8173333406448364, 0.815666675567627, 0.8176666498184204, 0.824999988079071, 0.8209999799728394, 0.8240000009536743, 0.82833331823349, 0.828000009059906, 0.8343333601951599, 0.8226666450500488, 0.8360000252723694, 0.8186666369438171, 0.8253333568572998, 0.8363333344459534, 0.8379999995231628, 0.8353333473205566, 0.8336666822433472, 0.843999981880188, 0.8420000076293945, 0.8383333086967468, 0.8416666388511658, 0.843666672706604, 0.8379999995231628]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 9, 5], [2, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1], [0, 2, 4, 6, 0, 9, 5, 4, 5], [2, 2, 1, 2, 0, 3, 1, 4], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0], [7, 3, 0, 3, 9, 2, 6, 3, 8, 8, 0, 9, 9], [0, 1, 1, 2], [0, 23, 70, 63], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 2, 13, 9, 4, 1, 17, 13, 4, 4, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(beta)), tf.math.pow(tf.math.square(beta), alpha)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.sqrt(alpha))), tf.math.sqrt(tf.math.negative(beta))))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3035764694213867, 2.303764820098877, 2.304466962814331, 2.305509328842163, 2.3129634857177734, 2.3151638507843018, 2.3260486125946045, 2.3333230018615723, 2.3532984256744385, 2.3824338912963867, 2.419160842895508], "accuracy": [0.09932637959718704, 0.09668471664190292, 0.1010434553027153, 0.09655263274908066, 0.09826971590518951, 0.1014397069811821, 0.10236428678035736, 0.09972262382507324, 0.09509972482919693, 0.0936468094587326, 0.10342095047235489], "val_loss": [2.3025624752044678, 2.3027729988098145, 2.303792715072632, 2.3106253147125244, 2.3148458003997803, 2.318185806274414, 2.3317294120788574, 2.348867893218994, 2.370755434036255, 2.400120496749878, 2.3876230716705322], "val_accuracy": [0.10000000149011612, 0.09799999743700027, 0.10066666454076767, 0.0989999994635582, 0.10300000011920929, 0.10366666316986084, 0.09966666996479034, 0.09966666996479034, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 9, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 2, 3, 5, 5, 4], [2, 2, 1, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [9, 3, 0, 3], [0, 3, 1, 2], [89], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 5, 2, 3, 0, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3035686016082764, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [1, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 1, 4, 6, 3, 0, 5, 4], [2, 0, 0, 4, 0, 3, 1], [16, 1, 29], [0, 0, 1, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [0, 0, 1, 0, 1, 1], [0, 3, 3], [1, 7, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 15, 8, 7, 3, 6, 3, 3, 1, 6, 3, 3, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.multiply(grad, grad)))", "other_info": {"loss": [2.3101775646209717, 2.3104684352874756, 2.3095359802246094, 2.6605522632598877, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09166556596755981, 0.08994849026203156, 0.09642054885625839, 0.09192973375320435, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3086652755737305, 2.308814764022827, 2.3091156482696533, 686387167232.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09266666322946548, 0.09200000017881393, 0.09200000017881393, 0.09866666793823242, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 1, 2], [26, 39, 81], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1], [7, 9, 8, 3, 8], [0, 1, 1, 2], [0, 1], [1], [0], [1], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 11, 6, 5, 2, 13, 7, 6, 2, 7, 5, 2, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(alpha), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.multiply(tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3099682331085205, 2.311593770980835, 2.3093924522399902, 2.3097221851348877, 2.3104071617126465, 2.310680389404297], "accuracy": [0.09245806187391281, 0.08994849026203156, 0.09338264167308807, 0.09417514503002167, 0.09034473448991776, 0.09126931428909302], "val_loss": [2.3084754943847656, 2.3084754943847656, 2.3084754943847656, 2.3084754943847656, 2.3084754943847656, 2.3084754943847656], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]