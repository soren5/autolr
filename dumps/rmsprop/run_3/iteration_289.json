[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8539999723434448, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2108490467071533, 1.6031280755996704, 1.1586053371429443, 1.0017169713974, 0.9027997255325317, 0.8509687781333923, 0.7821087837219238, 0.7510325312614441, 0.7681663632392883, 0.7239335179328918, 0.7042371034622192, 0.6705950498580933, 0.6701738238334656, 0.6410457491874695, 0.6455509066581726, 0.6122079491615295, 0.6216953992843628, 0.6117597222328186, 0.5990164279937744, 0.5723549127578735, 0.5750733613967896, 0.5654271245002747, 0.5603346228599548, 0.5531269907951355, 0.543151319026947, 0.5325374007225037, 0.523846447467804, 0.515398383140564, 0.5130863785743713, 0.5047292113304138, 0.511211097240448, 0.489170640707016, 0.4864640533924103, 0.4842982292175293, 0.47540971636772156, 0.4720350503921509, 0.46809497475624084, 0.46228352189064026, 0.46422722935676575, 0.4534793794155121, 0.45032545924186707, 0.44704577326774597, 0.43839192390441895, 0.4372914135456085, 0.44019392132759094, 0.4282222390174866, 0.414899617433548, 0.42131656408309937, 0.4295532703399658, 0.4157116115093231, 0.39912712574005127, 0.4099557399749756, 0.4104830026626587, 0.40346992015838623, 0.40090474486351013, 0.38478195667266846, 0.39120081067085266, 0.38766616582870483, 0.3841533958911896, 0.37545040249824524, 0.37709566950798035, 0.37396249175071716, 0.36828750371932983, 0.36231529712677, 0.37067341804504395, 0.36960527300834656, 0.36422786116600037, 0.3631508946418762, 0.3479906916618347, 0.3558589220046997, 0.35364899039268494, 0.34216275811195374, 0.3413783013820648], "accuracy": [0.2658829689025879, 0.5038964748382568, 0.5926561951637268, 0.6362435817718506, 0.6732267737388611, 0.6902654767036438, 0.711530864238739, 0.7235503792762756, 0.7207766771316528, 0.7279091477394104, 0.7391361594200134, 0.7582882046699524, 0.746268630027771, 0.7626469135284424, 0.759609043598175, 0.7754589915275574, 0.7625148296356201, 0.7757231593132019, 0.7700436115264893, 0.7889314293861389, 0.7889314293861389, 0.7868181467056274, 0.7898560166358948, 0.7997622489929199, 0.798309326171875, 0.8030643463134766, 0.8080834746360779, 0.8125742673873901, 0.8132346868515015, 0.8161405324935913, 0.8128384351730347, 0.8238013386726379, 0.8271034359931946, 0.8224804997444153, 0.8290846943855286, 0.8278959393501282, 0.830669641494751, 0.833179235458374, 0.833179235458374, 0.8341038227081299, 0.837537944316864, 0.8366134166717529, 0.8391229510307312, 0.843481719493866, 0.8399154543876648, 0.8416325449943542, 0.8506141901016235, 0.848368763923645, 0.8404437899589539, 0.8453308939933777, 0.8536521196365356, 0.8490291833877563, 0.8507462739944458, 0.8562937378883362, 0.8520671129226685, 0.8610487580299377, 0.8573504090309143, 0.8595958352088928, 0.8590674996376038, 0.8631620407104492, 0.8622375130653381, 0.8631620407104492, 0.8681812286376953, 0.8667283058166504, 0.8626337051391602, 0.8658037185668945, 0.8628978729248047, 0.8687095642089844, 0.8659358024597168, 0.868049144744873, 0.8716153502464294, 0.874389111995697, 0.8757099509239197], "val_loss": [1.9235763549804688, 1.1314831972122192, 0.8731655478477478, 0.807879626750946, 0.7705962061882019, 0.6980771422386169, 0.6661664247512817, 0.697576105594635, 0.66929030418396, 0.5976685285568237, 0.5922770500183105, 0.5830627679824829, 0.6373900771141052, 0.5411273837089539, 0.5578807592391968, 0.5548969507217407, 0.5392282009124756, 0.5990676879882812, 0.5256581902503967, 0.5300251245498657, 0.5082780718803406, 0.5017443299293518, 0.5056119561195374, 0.5075571537017822, 0.4926685094833374, 0.47513166069984436, 0.4797607362270355, 0.4600391089916229, 0.46047335863113403, 0.5116149187088013, 0.4663454294204712, 0.452178955078125, 0.4634062945842743, 0.44287997484207153, 0.4433993399143219, 0.43838903307914734, 0.43588727712631226, 0.4394426941871643, 0.43417826294898987, 0.43312549591064453, 0.4629688262939453, 0.431441068649292, 0.4245022237300873, 0.41809216141700745, 0.4273024797439575, 0.40897610783576965, 0.41044068336486816, 0.45049646496772766, 0.4001186192035675, 0.4124038815498352, 0.4094165861606598, 0.3972887098789215, 0.39708682894706726, 0.39355671405792236, 0.39122965931892395, 0.40282538533210754, 0.3918760120868683, 0.3897528350353241, 0.3919954299926758, 0.39045262336730957, 0.40663614869117737, 0.3902661204338074, 0.37542790174484253, 0.3986421823501587, 0.3837566673755646, 0.3817605674266815, 0.37363508343696594, 0.37688878178596497, 0.37387850880622864, 0.387358158826828, 0.3793269991874695, 0.36945849657058716, 0.38200435042381287], "val_accuracy": [0.5073333382606506, 0.6323333382606506, 0.7126666903495789, 0.70333331823349, 0.7099999785423279, 0.7419999837875366, 0.7593333125114441, 0.7426666617393494, 0.7416666746139526, 0.7753333449363708, 0.7826666831970215, 0.7836666703224182, 0.7506666779518127, 0.8023333549499512, 0.8023333549499512, 0.7903333306312561, 0.7916666865348816, 0.7573333382606506, 0.8106666803359985, 0.8083333373069763, 0.8216666579246521, 0.8140000104904175, 0.8166666626930237, 0.812666654586792, 0.8216666579246521, 0.8276666402816772, 0.8323333263397217, 0.8420000076293945, 0.8433333039283752, 0.8066666722297668, 0.8323333263397217, 0.8443333506584167, 0.8296666741371155, 0.8426666855812073, 0.8416666388511658, 0.8450000286102295, 0.8426666855812073, 0.847000002861023, 0.8496666550636292, 0.8516666889190674, 0.8263333439826965, 0.8443333506584167, 0.8500000238418579, 0.8519999980926514, 0.8479999899864197, 0.8579999804496765, 0.8553333282470703, 0.8206666707992554, 0.8616666793823242, 0.8510000109672546, 0.8573333621025085, 0.8616666793823242, 0.8576666712760925, 0.8633333444595337, 0.8633333444595337, 0.859000027179718, 0.8603333234786987, 0.8636666536331177, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197, 0.8616666793823242, 0.8709999918937683, 0.8606666922569275, 0.8673333525657654, 0.862666666507721, 0.8709999918937683, 0.8726666569709778, 0.8696666955947876, 0.8606666922569275, 0.8693333268165588, 0.871999979019165, 0.8656666874885559]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.819428563117981, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2119953632354736, 1.621464490890503, 1.1787371635437012, 0.9743760228157043, 0.8836784362792969, 0.8399519324302673, 0.804215133190155, 0.7468926310539246, 0.7149335741996765, 0.7085539698600769, 0.6994562149047852, 0.6725707054138184, 0.6551796793937683, 0.6412510275840759, 0.633732795715332, 0.5994783639907837, 0.611504077911377, 0.6045269966125488, 0.5719108581542969, 0.5818454027175903, 0.5672672390937805, 0.5630430579185486, 0.5427565574645996, 0.5469738245010376, 0.5359606742858887, 0.5271037220954895, 0.5079237818717957, 0.509086549282074, 0.5037888884544373, 0.5131281018257141, 0.4929661452770233, 0.4791751503944397, 0.4936359226703644, 0.47542983293533325, 0.47943633794784546, 0.4641827642917633, 0.46804457902908325, 0.46704113483428955, 0.44717898964881897, 0.45918089151382446, 0.4466104209423065, 0.4401148855686188, 0.43500298261642456, 0.44634753465652466, 0.4289085268974304, 0.42687568068504333, 0.4183785617351532, 0.40434399247169495, 0.4105367064476013, 0.40449032187461853, 0.39971262216567993, 0.40991830825805664], "accuracy": [0.26984545588493347, 0.5042926669120789, 0.5923920273780823, 0.6501122713088989, 0.6787742972373962, 0.6936996579170227, 0.7033417224884033, 0.7219653725624084, 0.7318716049194336, 0.7289658188819885, 0.7360982894897461, 0.7483819723129272, 0.750759482383728, 0.7569673657417297, 0.7643640041351318, 0.7725531458854675, 0.7660810947418213, 0.7700436115264893, 0.785629391670227, 0.7825914621353149, 0.7852331399917603, 0.7874785661697388, 0.7952714562416077, 0.7944789528846741, 0.8016114234924316, 0.7973847389221191, 0.8115176558494568, 0.8088759779930115, 0.8072909712791443, 0.8062343001365662, 0.8181217908859253, 0.8203672170639038, 0.8202351331710815, 0.8207634687423706, 0.8234050869941711, 0.8277638554573059, 0.8289526104927063, 0.8211596608161926, 0.8339717388153076, 0.8276317715644836, 0.8360850811004639, 0.8372738361358643, 0.8383304476737976, 0.8368775844573975, 0.8407079577445984, 0.8430854678153992, 0.8466516733169556, 0.8473120927810669, 0.8490291833877563, 0.8495575189590454, 0.8514066934585571, 0.8491612672805786], "val_loss": [1.9261301755905151, 1.108255386352539, 0.938252866268158, 0.7697495818138123, 0.7239301204681396, 0.6991472244262695, 0.6472584009170532, 0.6280379891395569, 0.614673912525177, 0.620092511177063, 0.6811487674713135, 0.6005017757415771, 0.6158219575881958, 0.6036340594291687, 0.5504993200302124, 0.5526053309440613, 0.5411662459373474, 0.5380825400352478, 0.5201306343078613, 0.5250874161720276, 0.4948074519634247, 0.5078568458557129, 0.5221705436706543, 0.48478150367736816, 0.49443691968917847, 0.47728443145751953, 0.49571049213409424, 0.46914854645729065, 0.4676241874694824, 0.4573551416397095, 0.4581191837787628, 0.4649692475795746, 0.4474514126777649, 0.44950640201568604, 0.44334879517555237, 0.4616711437702179, 0.4390561878681183, 0.427757203578949, 0.4505418837070465, 0.4443759620189667, 0.43106409907341003, 0.433749258518219, 0.4283291697502136, 0.4166407585144043, 0.42351049184799194, 0.4142707586288452, 0.410146564245224, 0.4137142300605774, 0.4134970009326935, 0.4216950535774231, 0.43404683470726013, 0.411918044090271], "val_accuracy": [0.5640000104904175, 0.6413333415985107, 0.6603333353996277, 0.731333315372467, 0.7279999852180481, 0.7369999885559082, 0.7563333511352539, 0.765999972820282, 0.765333354473114, 0.7483333349227905, 0.731333315372467, 0.7680000066757202, 0.7593333125114441, 0.7639999985694885, 0.7953333258628845, 0.7929999828338623, 0.7846666574478149, 0.7919999957084656, 0.7963333129882812, 0.8053333163261414, 0.8173333406448364, 0.8096666932106018, 0.8009999990463257, 0.8176666498184204, 0.8153333067893982, 0.8190000057220459, 0.8119999766349792, 0.82833331823349, 0.8266666531562805, 0.828000009059906, 0.8320000171661377, 0.8253333568572998, 0.8360000252723694, 0.8420000076293945, 0.8393333554267883, 0.8316666483879089, 0.8376666903495789, 0.8473333120346069, 0.824999988079071, 0.8443333506584167, 0.8479999899864197, 0.8336666822433472, 0.8463333249092102, 0.8536666631698608, 0.8503333330154419, 0.8529999852180481, 0.8560000061988831, 0.8496666550636292, 0.847000002861023, 0.847000002861023, 0.8519999980926514, 0.8486666679382324]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 7, 6, 0, 4, 4, 2, 0, 2], [0, 6, 5, 0, 7, 4, 4], [0, 52], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 0, 16, 9, 7, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.pow(tf.math.add(grad, grad), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [6, 1, 8, 1, 3, 5], [0, 0, 1, 0, 3], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [0, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 2], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 1, 0, 1, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [96.51236724853516, 10742.361328125, 185307.25, 1281842.375, 5702671.5, 18813548.0], "accuracy": [0.10077928751707077, 0.10315678268671036, 0.09879804402589798, 0.10051512718200684, 0.10249637067317963, 0.10130762308835983], "val_loss": [811.1110229492188, 39802.953125, 422960.5, 2298967.25, 8600166.0, 25350672.0], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [6, 2, 3, 1, 3, 5], [0, 0, 2, 0, 0, 2], [0, 39, 39, 81], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 1, 3, 6, 2, 5, 6, 3, 2, 6], [2, 0, 3, 1, 0, 0, 3, 4, 4, 2], [16, 1, 80], [1, 0, 1, 1], [0, 7], [5, 6], [0], [0, 0, 1, 0, 1], [0, 6, 0], [2, 0], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 12, 6, 6, 4, 22, 12, 10, 3, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.add(tf.math.divide_no_nan(grad, grad), beta)))))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(beta, tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3092761039733887, 2.310082197189331, 2.3104095458984375, 2.3098769187927246, 2.3102385997772217, 2.3101279735565186], "accuracy": [0.09576013684272766, 0.08994849026203156, 0.09100515395402908, 0.09219389408826828, 0.08796724677085876, 0.08994849026203156], "val_loss": [2.308868408203125, 2.308868408203125, 2.308868408203125, 2.308868408203125, 2.308868408203125, 2.308868408203125], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 0, 1, 6, 5], [0, 0, 1, 0, 3], [0, 39, 39], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 7, 6, 4, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [4, 7, 5, 6, 8, 7, 5, 3, 1, 4, 4, 3, 6], [0, 0, 2, 5, 6, 6, 4, 1, 2, 4, 2], [0, 3], [1], [0], [2], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 0, 24, 13, 11, 2, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.square(tf.math.multiply(grad, tf.math.subtract(tf.math.pow(grad, grad), tf.math.pow(tf.math.multiply(tf.math.divide_no_nan(alpha, beta), grad), beta))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098368644714355, 2.3098127841949463, 2.309357166290283, 2.3097312450408936, 2.309845209121704, 2.3100898265838623], "accuracy": [0.08955223858356476, 0.09126931428909302, 0.08849557489156723, 0.09179764986038208, 0.09140139818191528, 0.09285431355237961], "val_loss": [2.308865785598755, 2.308865785598755, 2.308865785598755, 2.308865785598755, 2.308865785598755, 2.308865785598755], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]