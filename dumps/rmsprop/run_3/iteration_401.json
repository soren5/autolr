[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8554285764694214, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213676929473877, 1.6260327100753784, 1.143683910369873, 0.9742980599403381, 0.905768096446991, 0.8351218104362488, 0.7851074934005737, 0.7412269115447998, 0.7395317554473877, 0.711415708065033, 0.7069402933120728, 0.678230345249176, 0.6367061138153076, 0.6509361267089844, 0.6249479651451111, 0.6181301474571228, 0.596510112285614, 0.5996518135070801, 0.5853984355926514, 0.566254198551178, 0.5746713280677795, 0.5576147437095642, 0.5446452498435974, 0.5396304726600647, 0.5172899961471558, 0.545619010925293, 0.5207965970039368, 0.5165130496025085, 0.5015321969985962, 0.4937669634819031, 0.48441874980926514, 0.4920797646045685, 0.47626858949661255, 0.47793251276016235, 0.4731525182723999, 0.4620440900325775, 0.46651312708854675, 0.45247113704681396, 0.45586317777633667, 0.4512108266353607, 0.44254299998283386, 0.4377943277359009, 0.4450337886810303, 0.433260977268219, 0.4311376214027405, 0.4237311780452728, 0.42902952432632446, 0.4136289060115814, 0.41453227400779724, 0.4130176901817322, 0.39844590425491333, 0.39945289492607117, 0.39990946650505066, 0.39090973138809204, 0.39613914489746094, 0.3962012231349945, 0.3925626873970032, 0.39203161001205444, 0.3823232650756836], "accuracy": [0.2662792205810547, 0.5065380930900574, 0.6066569685935974, 0.659490168094635, 0.6744155287742615, 0.6980583667755127, 0.713908314704895, 0.7283053994178772, 0.7260599732398987, 0.7359662055969238, 0.7403249144554138, 0.7495707273483276, 0.7663452625274658, 0.7577598690986633, 0.7709681391716003, 0.7713643908500671, 0.778761088848114, 0.7790252566337585, 0.7824593782424927, 0.7913089394569397, 0.7848368883132935, 0.7928939461708069, 0.798309326171875, 0.7967243194580078, 0.8094043135643005, 0.800290584564209, 0.811649739742279, 0.8087438941001892, 0.8164047002792358, 0.8144234418869019, 0.8235371708869934, 0.8183859586715698, 0.822348415851593, 0.8281601071357727, 0.8276317715644836, 0.8322546482086182, 0.8293488025665283, 0.8367455005645752, 0.8325188159942627, 0.8381983637809753, 0.8393871188163757, 0.8422929644584656, 0.8403117060661316, 0.844010055065155, 0.8459912538528442, 0.8491612672805786, 0.8459912538528442, 0.8487650156021118, 0.8511425256729126, 0.8516708612442017, 0.8597279191017151, 0.8533879518508911, 0.8537842035293579, 0.8578787446022034, 0.8557654023170471, 0.8599920868873596, 0.8584070801734924, 0.8605204224586487, 0.8598600029945374], "val_loss": [1.9311139583587646, 1.1074284315109253, 0.9771608710289001, 0.7858006358146667, 0.7151148915290833, 0.6789993643760681, 0.6691451072692871, 0.6397503614425659, 0.6217755675315857, 0.637182354927063, 0.5786056518554688, 0.5710426568984985, 0.5599858164787292, 0.5515573024749756, 0.54337477684021, 0.5200293660163879, 0.526112973690033, 0.5345032811164856, 0.5103436708450317, 0.5099934935569763, 0.49562308192253113, 0.5069106221199036, 0.48209962248802185, 0.47433871030807495, 0.4906598627567291, 0.5204798579216003, 0.4671025276184082, 0.4671674370765686, 0.46530061960220337, 0.4500419795513153, 0.446654736995697, 0.43762192130088806, 0.44438207149505615, 0.4439742863178253, 0.44161567091941833, 0.4331801235675812, 0.44725513458251953, 0.4252970814704895, 0.42855703830718994, 0.4254489839076996, 0.4155900180339813, 0.4370979070663452, 0.4190300703048706, 0.4254917800426483, 0.4138663709163666, 0.421396940946579, 0.40383246541023254, 0.39836356043815613, 0.4188055694103241, 0.4012039005756378, 0.4035666882991791, 0.41997474431991577, 0.40390560030937195, 0.38472822308540344, 0.40163907408714294, 0.3912980854511261, 0.3859305679798126, 0.3892076015472412, 0.3987250030040741], "val_accuracy": [0.5730000138282776, 0.6159999966621399, 0.6100000143051147, 0.6980000138282776, 0.7269999980926514, 0.7519999742507935, 0.7483333349227905, 0.7603333592414856, 0.7559999823570251, 0.7463333606719971, 0.7726666927337646, 0.7856666445732117, 0.7846666574478149, 0.79666668176651, 0.7906666398048401, 0.8029999732971191, 0.7990000247955322, 0.7929999828338623, 0.8146666884422302, 0.8116666674613953, 0.8086666464805603, 0.8040000200271606, 0.8196666836738586, 0.8266666531562805, 0.8116666674613953, 0.8046666383743286, 0.8289999961853027, 0.8270000219345093, 0.8266666531562805, 0.8296666741371155, 0.8339999914169312, 0.8396666646003723, 0.8323333263397217, 0.8420000076293945, 0.8383333086967468, 0.8363333344459534, 0.8299999833106995, 0.843666672706604, 0.8416666388511658, 0.8433333039283752, 0.8486666679382324, 0.8370000123977661, 0.8506666421890259, 0.8403333425521851, 0.8506666421890259, 0.8393333554267883, 0.8503333330154419, 0.8526666760444641, 0.8460000157356262, 0.8556666374206543, 0.8536666631698608, 0.8456666469573975, 0.8553333282470703, 0.8600000143051147, 0.8546666502952576, 0.859000027179718, 0.8586666584014893, 0.8569999933242798, 0.8553333282470703]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8214285969734192, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2101047039031982, 1.609298586845398, 1.1394633054733276, 1.009674310684204, 0.9011032581329346, 0.8409737348556519, 0.7966525554656982, 0.7711462378501892, 0.7258331179618835, 0.7108864784240723, 0.6910073757171631, 0.6682620644569397, 0.6732125282287598, 0.6363212466239929, 0.6272692680358887, 0.6342660784721375, 0.6104855537414551, 0.6160441040992737, 0.5780962705612183, 0.5646898746490479, 0.5666986107826233, 0.5664493441581726, 0.5655800104141235, 0.5396304130554199, 0.5339823365211487, 0.5270139575004578, 0.5218416452407837, 0.5118575692176819, 0.5052320957183838, 0.4997698962688446, 0.4932205379009247, 0.5000183582305908, 0.475737601518631, 0.48419561982154846, 0.4704807698726654, 0.4660869538784027, 0.4624637961387634, 0.4503927230834961, 0.4448574185371399, 0.4555829167366028, 0.44175347685813904, 0.43088752031326294, 0.43810591101646423, 0.429652601480484, 0.4220639765262604, 0.4185706079006195, 0.4216025769710541, 0.4151635766029358, 0.4098694324493408, 0.4041067659854889, 0.4071055054664612], "accuracy": [0.26244881749153137, 0.505349338054657, 0.5955620408058167, 0.6383568644523621, 0.6730946898460388, 0.6955488324165344, 0.7054550051689148, 0.7190595865249634, 0.7326641082763672, 0.7294940948486328, 0.7417778372764587, 0.7516840696334839, 0.7421740889549255, 0.7633073329925537, 0.7651565074920654, 0.7553823590278625, 0.7778365015983582, 0.767930269241333, 0.7833839654922485, 0.7913089394569397, 0.7895918488502502, 0.7893276810646057, 0.789988100528717, 0.7976489067077637, 0.8042530417442322, 0.8010830879211426, 0.8094043135643005, 0.811649739742279, 0.8131026029586792, 0.8150838613510132, 0.8165367841720581, 0.8162726163864136, 0.8206313848495483, 0.8198388814926147, 0.8274996876716614, 0.8276317715644836, 0.8264430165290833, 0.8335754871368408, 0.8366134166717529, 0.8284242749214172, 0.8315942287445068, 0.8391229510307312, 0.8339717388153076, 0.8385946154594421, 0.843481719493866, 0.8466516733169556, 0.839519202709198, 0.8494254350662231, 0.8459912538528442, 0.8508783578872681, 0.8504821062088013], "val_loss": [1.9162226915359497, 1.0950274467468262, 0.9347986578941345, 0.8308281898498535, 0.7067566514015198, 0.6846874356269836, 0.660290539264679, 0.6329376697540283, 0.6182876229286194, 0.6203412413597107, 0.5921205282211304, 0.6229603886604309, 0.5692434906959534, 0.5450342893600464, 0.5796204209327698, 0.5359628796577454, 0.540090024471283, 0.522476315498352, 0.5014598965644836, 0.5207884311676025, 0.5286229848861694, 0.5142580270767212, 0.5052472352981567, 0.4912542402744293, 0.4913853406906128, 0.46572932600975037, 0.47482144832611084, 0.4840947985649109, 0.4537525773048401, 0.4485936760902405, 0.45952826738357544, 0.4515243470668793, 0.4413573741912842, 0.4532497823238373, 0.4432368874549866, 0.429311066865921, 0.43511343002319336, 0.42804086208343506, 0.4490602910518646, 0.4315674901008606, 0.41449373960494995, 0.4191489517688751, 0.4422869384288788, 0.412204384803772, 0.4321993291378021, 0.4126759469509125, 0.40370556712150574, 0.40973788499832153, 0.4044346511363983, 0.41366299986839294, 0.42722028493881226], "val_accuracy": [0.562333345413208, 0.6486666798591614, 0.6803333163261414, 0.671999990940094, 0.7459999918937683, 0.750333309173584, 0.7616666555404663, 0.7710000276565552, 0.7649999856948853, 0.7739999890327454, 0.7693333625793457, 0.7620000243186951, 0.7943333387374878, 0.7946666479110718, 0.7753333449363708, 0.7929999828338623, 0.8019999861717224, 0.8040000200271606, 0.8193333148956299, 0.8080000281333923, 0.7940000295639038, 0.8169999718666077, 0.8113333582878113, 0.8270000219345093, 0.8193333148956299, 0.8336666822433472, 0.8259999752044678, 0.8259999752044678, 0.8403333425521851, 0.8386666774749756, 0.8346666693687439, 0.8379999995231628, 0.8413333296775818, 0.8376666903495789, 0.8396666646003723, 0.8496666550636292, 0.843999981880188, 0.843666672706604, 0.82833331823349, 0.847000002861023, 0.8513333201408386, 0.847000002861023, 0.831333339214325, 0.8533333539962769, 0.8443333506584167, 0.859666645526886, 0.8579999804496765, 0.8536666631698608, 0.8566666841506958, 0.8533333539962769, 0.8413333296775818]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 2, 3, 1, 3, 5, 2, 7, 1], [0, 1, 1, 0, 2, 0, 2, 1, 0], [0, 5, 39, 32], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 4, 2, 0], [3, 0, 4, 2, 0, 4], [16, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 7, 6, 0, 8, 1, 5, 4, 8, 4, 4, 2, 8, 0, 5, 8, 9], [0, 6, 7, 5, 5, 1, 1], [0, 8], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 9, 9, 4, 14, 8, 6, 2, 24, 17, 7, 2, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.math.square(alpha), tf.math.add(tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.subtract(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad)), tf.math.sqrt(tf.math.subtract(tf.math.square(grad), tf.math.pow(tf.math.sqrt(tf.math.pow(tf.math.pow(tf.math.add(grad, tf.math.sqrt(tf.math.negative(tf.math.square(tf.math.sqrt(grad))))), alpha), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0], [7, 2, 2, 1, 3, 6, 5, 7, 4, 7, 8, 8, 0, 6, 8, 1, 5, 8, 2, 6, 5, 3, 4, 3, 4, 4, 0, 0, 5, 8, 1, 2, 5, 9, 5, 9], [0, 0, 1, 0, 2, 3, 1, 1, 3, 0, 2, 0, 2, 2, 0, 1, 0, 1, 1], [0, 39, 39, 27, 91, 5, 99, 5, 15], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 2, 2, 6, 3, 1, 2], [2, 0, 3, 1, 0, 0, 5], [16, 1, 91], [0, 0, 1, 1], [9, 7], [0, 6], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.add(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(grad, grad)), tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(alpha, alpha)), grad)))), tf.math.square(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(grad, tf.math.divide_no_nan(tf.math.square(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), grad))))), tf.math.multiply(grad, tf.math.pow(tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(alpha, tf.math.negative(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)))), alpha)), tf.math.square(tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.math.square(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}, "mapping_values": [1, 55, 36, 19, 9, 14, 7, 7, 3, 1, 1, 0, 1, 2, 1, 1, 0], "tree_depth": 23}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 1, 1, 0, 2], [0, 69, 39], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 2, 6, 3, 8, 2], [2, 0, 1, 1, 0], [16, 23], [1, 0, 1, 1], [0, 7], [4, 6], [0], [1], [0], [2], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098437786102295, 2.309931516647339, 2.3110179901123047, 2.3101611137390137, 2.3109822273254395, 2.310471773147583], "accuracy": [0.09325055778026581, 0.09338264167308807, 0.08109892904758453, 0.09232597798109055, 0.08942015469074249, 0.09509972482919693], "val_loss": [2.308328628540039, 2.308328628540039, 2.308328628540039, 2.308328628540039, 2.308328628540039, 2.308328628540039], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 1, 3, 8], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 0], [2, 0, 3, 1, 1], [16, 5], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 2, 1, 1, 1, 11, 7, 4, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.negative(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309159994125366, 2.3085813522338867, 2.3097758293151855, 2.3089070320129395, 2.3097410202026367, 2.3105478286743164], "accuracy": [0.09496764093637466, 0.09589222073554993, 0.09087307006120682, 0.08942015469074249, 0.08796724677085876, 0.09351472556591034], "val_loss": [2.3091728687286377, 2.3091728687286377, 2.3091728687286377, 2.3091728687286377, 2.3091728687286377, 2.3091728687286377], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]