[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8148571252822876, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2115087509155273, 1.6167839765548706, 1.1633480787277222, 0.9902480840682983, 0.919211745262146, 0.8070309162139893, 0.7833980917930603, 0.7623887658119202, 0.7366020679473877, 0.6989305019378662, 0.6958556771278381, 0.6596449017524719, 0.6565418839454651, 0.6419445872306824, 0.62650066614151, 0.5955983996391296, 0.6035566329956055, 0.5856305360794067, 0.5727840662002563, 0.5588918328285217, 0.5614361763000488, 0.5661091804504395, 0.5539930462837219, 0.5442349314689636, 0.5346671342849731, 0.5187456607818604, 0.5107207298278809, 0.4996878206729889, 0.4930214583873749, 0.48914799094200134, 0.48649704456329346, 0.4754893183708191, 0.4813082218170166, 0.47363364696502686, 0.4693421721458435, 0.45477840304374695, 0.4539772570133209, 0.4520907402038574, 0.45072275400161743, 0.439239501953125, 0.434963583946228, 0.4410935640335083, 0.42977848649024963, 0.4310567080974579], "accuracy": [0.26839256286621094, 0.49689605832099915, 0.5952978730201721, 0.6432439684867859, 0.672170102596283, 0.707040011882782, 0.7121912837028503, 0.7113987803459167, 0.7193237543106079, 0.7437590956687927, 0.7372870445251465, 0.7589486241340637, 0.7548540234565735, 0.7613261342048645, 0.7643640041351318, 0.7769119143486023, 0.7717606425285339, 0.7825914621353149, 0.7817989587783813, 0.7943468689918518, 0.7906485199928284, 0.7876105904579163, 0.7915731072425842, 0.7952714562416077, 0.7985734939575195, 0.8079513907432556, 0.8095363974571228, 0.8136309385299683, 0.8150838613510132, 0.8140271902084351, 0.8224804997444153, 0.8253863453865051, 0.8197067975997925, 0.8256505131721497, 0.8219521641731262, 0.8350284099578857, 0.8323867321014404, 0.8278959393501282, 0.8271034359931946, 0.8430854678153992, 0.8372738361358643, 0.8391229510307312, 0.8422929644584656, 0.835160493850708], "val_loss": [1.927243947982788, 1.0970556735992432, 0.9073718786239624, 0.8939131498336792, 0.7667871713638306, 0.6746551394462585, 0.7218503355979919, 0.6575129628181458, 0.6951492428779602, 0.6249390244483948, 0.6041966080665588, 0.6133056879043579, 0.5949050188064575, 0.5887369513511658, 0.5548974275588989, 0.5433667898178101, 0.5439582467079163, 0.5470163822174072, 0.5192988514900208, 0.5078047513961792, 0.5302779078483582, 0.5228647589683533, 0.5408440232276917, 0.5181978344917297, 0.4978561997413635, 0.48888522386550903, 0.4879794418811798, 0.4870760142803192, 0.4816802442073822, 0.4763258099555969, 0.4674382209777832, 0.46052172780036926, 0.4748130738735199, 0.46095746755599976, 0.44816601276397705, 0.4557724595069885, 0.44450053572654724, 0.49123314023017883, 0.4425503611564636, 0.45564013719558716, 0.44405338168144226, 0.4689834415912628, 0.4516831338405609, 0.4464331865310669], "val_accuracy": [0.5550000071525574, 0.659333348274231, 0.6723333597183228, 0.6633333563804626, 0.6973333358764648, 0.7516666650772095, 0.7303333282470703, 0.7436666488647461, 0.7183333039283752, 0.7443333268165588, 0.7863333225250244, 0.765999972820282, 0.7590000033378601, 0.7593333125114441, 0.7886666655540466, 0.7993333339691162, 0.7933333516120911, 0.7873333096504211, 0.8103333115577698, 0.8119999766349792, 0.7906666398048401, 0.8080000281333923, 0.7996666431427002, 0.8053333163261414, 0.8176666498184204, 0.8203333616256714, 0.824999988079071, 0.8259999752044678, 0.8193333148956299, 0.8226666450500488, 0.8309999704360962, 0.8373333215713501, 0.8220000267028809, 0.8306666612625122, 0.8399999737739563, 0.8360000252723694, 0.843999981880188, 0.8173333406448364, 0.8456666469573975, 0.8396666646003723, 0.8446666598320007, 0.8273333311080933, 0.8339999914169312, 0.8366666436195374]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 3, 2], [51, 39, 39], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [3, 9, 4, 7, 0, 5, 5, 4, 2, 2, 0], [3, 2, 0, 2, 0, 3, 1], [16, 1, 4], [0, 1, 0, 1, 0, 1, 0, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 17, 11, 6, 3, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.negative(tf.math.square(tf.math.square(tf.math.pow(grad, tf.math.add(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.negative(beta)))))), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3067803382873535, 2.303109645843506, 2.473316192626953, 12.982492446899414, 237.435791015625, 5034.79443359375, 108739.0546875], "accuracy": [0.09509972482919693, 0.10117553919553757, 0.09972262382507324, 0.09972262382507324, 0.09945846349000931, 0.09998679161071777, 0.09945846349000931], "val_loss": [2.3015661239624023, 2.307408571243286, 3.8309426307678223, 50.233219146728516, 1018.1613159179688, 21852.255859375, 471449.4375], "val_accuracy": [0.07633333653211594, 0.10366666316986084, 0.10366666316986084, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 1], [74, 39, 39], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 7, 1, 3, 8, 2], [1, 2, 3, 4, 4, 3, 1], [69, 35], [0, 0, 1, 1], [0, 7], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 13, 7, 6, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.subtract(beta, grad)), tf.math.multiply(tf.math.sqrt(tf.math.add(grad, grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3037006855010986, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 1], [26, 39, 39], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [2, 9, 4, 7, 2, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 1, 1, 0, 1, 0, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 10, 5, 5, 3, 1, 0, 1, 0, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.310349225997925, 2.3085739612579346, 2.3094377517700195, 2.309704303741455, 2.310605764389038, 2.3103415966033936], "accuracy": [0.09153348207473755, 0.09272222965955734, 0.09008057415485382, 0.09536388516426086, 0.08955223858356476, 0.09377889335155487], "val_loss": [2.3087995052337646, 2.3087995052337646, 2.3087995052337646, 2.3087995052337646, 2.3087995052337646, 2.3087995052337646], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 1, 2, 3, 1, 8], [0, 0, 1, 0, 2, 0, 1, 0, 2], [5, 61, 39, 15, 20], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 5, 0, 6, 5, 8, 2], [2, 1, 3, 1, 0], [16, 1], [0, 1, 1, 1, 0, 1, 1, 1], [0, 7, 8, 9], [0, 6], [0, 27], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 3, 0, 3, 7, 2, 8, 3, 0, 7, 2, 8, 3, 8, 9, 0], [3, 7, 7, 5, 6, 7, 6, 6], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 20, 11, 9, 5, 4, 3, 1, 0, 2, 1, 1, 1, 24, 16, 8, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.sqrt(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.add(sigma, tf.math.add(grad, grad)), tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(grad, grad), tf.math.sqrt(tf.math.multiply(tf.math.sqrt(grad), tf.constant(0.0, shape=shape, dtype=tf.float32))))), tf.math.negative(grad))))), grad))", "other_info": {"loss": [2.3095314502716064, 2.3095834255218506, 2.3091678619384766, 2.3091773986816406, 2.3101370334625244, 2.3093478679656982, 2.3083138465881348, 2.3090269565582275, 2.3088510036468506, 2.3085267543792725, 2.3087852001190186, 2.308856725692749, 2.3078579902648926, 2.30816912651062, 2.3077943325042725, 2.308074951171875, 2.3065202236175537, 2.308340072631836, 2.3083558082580566, 2.3069751262664795, 2.307526111602783, 2.3086044788360596, 2.3074111938476562, 2.3074843883514404, 2.3072874546051025, 2.3084278106689453, 2.30755615234375, 2.3069071769714355, 2.3056092262268066, 2.3056886196136475, 2.306910991668701], "accuracy": [0.09219389408826828, 0.09140139818191528, 0.09206181764602661, 0.09285431355237961, 0.09153348207473755, 0.08796724677085876, 0.09113723784685135, 0.09298639744520187, 0.08915598690509796, 0.09285431355237961, 0.09100515395402908, 0.09021265059709549, 0.09219389408826828, 0.09100515395402908, 0.09272222965955734, 0.09206181764602661, 0.09457138925790787, 0.09377889335155487, 0.09206181764602661, 0.09866596013307571, 0.09272222965955734, 0.0944393053650856, 0.09206181764602661, 0.09668471664190292, 0.09536388516426086, 0.09285431355237961, 0.08955223858356476, 0.09338264167308807, 0.09747721254825592, 0.09747721254825592, 0.09945846349000931], "val_loss": [2.308748960494995, 2.3086159229278564, 2.308464765548706, 2.3083300590515137, 2.3081793785095215, 2.308042287826538, 2.3079559803009033, 2.307847023010254, 2.3077309131622314, 2.3076279163360596, 2.3075363636016846, 2.307400703430176, 2.307295799255371, 2.3072216510772705, 2.3071348667144775, 2.307037830352783, 2.306966781616211, 2.3068795204162598, 2.3067891597747803, 2.306715726852417, 2.3066389560699463, 2.306551218032837, 2.3064675331115723, 2.306401252746582, 2.3063414096832275, 2.3062679767608643, 2.3061790466308594, 2.3061137199401855, 2.306051015853882, 2.305997610092163, 2.3059144020080566], "val_accuracy": [0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08933333307504654, 0.09000000357627869, 0.09000000357627869, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09066666662693024, 0.09066666662693024, 0.09133332967758179, 0.09166666865348816, 0.09200000017881393, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09266666322946548, 0.09266666322946548, 0.09333333373069763, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09333333373069763, 0.09333333373069763, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09399999678134918]}}]