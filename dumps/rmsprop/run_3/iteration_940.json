[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8199999928474426, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2077648639678955, 1.601751685142517, 1.1524453163146973, 0.9756379723548889, 0.8928530812263489, 0.813173234462738, 0.7959322929382324, 0.7601079344749451, 0.7427806854248047, 0.7021321058273315, 0.6764771342277527, 0.6834812760353088, 0.6480595469474792, 0.6302738189697266, 0.6175363063812256, 0.6339877247810364, 0.6084052324295044, 0.5969181060791016, 0.5825201869010925, 0.5807852745056152, 0.5763043165206909, 0.5553213357925415, 0.5469050407409668, 0.5270859003067017, 0.5574455857276917, 0.5245177745819092, 0.5264519453048706, 0.5150242447853088, 0.5009375214576721, 0.5007494688034058, 0.49505001306533813, 0.4993079900741577, 0.48596295714378357, 0.4803314208984375, 0.4698658287525177, 0.47057756781578064, 0.4729161858558655, 0.4526779055595398, 0.45814281702041626, 0.4514143168926239, 0.44371700286865234, 0.43639206886291504, 0.4370344281196594, 0.4356043040752411, 0.42884522676467896, 0.4201609194278717, 0.4179566204547882, 0.41589444875717163, 0.41291800141334534, 0.41904544830322266, 0.4206171929836273], "accuracy": [0.2709021270275116, 0.501518964767456, 0.599128246307373, 0.6527539491653442, 0.6717738509178162, 0.7024171352386475, 0.7098137736320496, 0.7207766771316528, 0.720380425453186, 0.7388719916343689, 0.7471932172775269, 0.7456082701683044, 0.761590301990509, 0.7650244235992432, 0.7709681391716003, 0.7598732113838196, 0.7745344042778015, 0.7794214487075806, 0.7812706232070923, 0.7844406366348267, 0.7845727205276489, 0.7918372750282288, 0.7959318161010742, 0.8009510040283203, 0.7932901978492737, 0.8067626357078552, 0.8087438941001892, 0.809140145778656, 0.816008448600769, 0.8175934553146362, 0.8162726163864136, 0.8149517774581909, 0.8211596608161926, 0.8249900937080383, 0.830669641494751, 0.8219521641731262, 0.8289526104927063, 0.8352925777435303, 0.8356888294219971, 0.8339717388153076, 0.8374059200286865, 0.8364813327789307, 0.837537944316864, 0.8362171649932861, 0.8426892161369324, 0.8477083444595337, 0.8477083444595337, 0.8488970994949341, 0.8474441766738892, 0.8462554216384888, 0.8474441766738892], "val_loss": [1.9116894006729126, 1.0903127193450928, 0.9138089418411255, 0.7984565496444702, 0.7222046852111816, 0.7072904706001282, 0.6496406197547913, 0.6876404881477356, 0.6279929876327515, 0.6294140219688416, 0.6067843437194824, 0.5824457406997681, 0.5727753043174744, 0.5525770783424377, 0.5680785179138184, 0.549689531326294, 0.5355163216590881, 0.5315719246864319, 0.5885849595069885, 0.5275847911834717, 0.5090678930282593, 0.5171684622764587, 0.5065754652023315, 0.5178490281105042, 0.48524975776672363, 0.48233041167259216, 0.5061814188957214, 0.47302043437957764, 0.4699881672859192, 0.49089059233665466, 0.48655086755752563, 0.46335193514823914, 0.45967626571655273, 0.4661702811717987, 0.4492800235748291, 0.45273417234420776, 0.4441530704498291, 0.4357576370239258, 0.4454844295978546, 0.4325309097766876, 0.4374028742313385, 0.4494049847126007, 0.42899101972579956, 0.42157992720603943, 0.4308103024959564, 0.4211265444755554, 0.4242126941680908, 0.4282546043395996, 0.4397199749946594, 0.4149302840232849, 0.4349020719528198], "val_accuracy": [0.5716666579246521, 0.6666666865348816, 0.6676666736602783, 0.7059999704360962, 0.7193333506584167, 0.7213333249092102, 0.7606666684150696, 0.7289999723434448, 0.7553333044052124, 0.7643333077430725, 0.7770000100135803, 0.7986666560173035, 0.7986666560173035, 0.8073333501815796, 0.7993333339691162, 0.7913333177566528, 0.8059999942779541, 0.8106666803359985, 0.7789999842643738, 0.8016666769981384, 0.8133333325386047, 0.8259999752044678, 0.8243333101272583, 0.8199999928474426, 0.8346666693687439, 0.8383333086967468, 0.8266666531562805, 0.8393333554267883, 0.8393333554267883, 0.8159999847412109, 0.8346666693687439, 0.8376666903495789, 0.840666651725769, 0.8363333344459534, 0.8476666808128357, 0.8413333296775818, 0.8473333120346069, 0.8483333587646484, 0.8423333168029785, 0.8496666550636292, 0.8513333201408386, 0.8343333601951599, 0.8489999771118164, 0.8543333411216736, 0.8386666774749756, 0.8550000190734863, 0.8513333201408386, 0.8489999771118164, 0.8410000205039978, 0.8550000190734863, 0.8396666646003723]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 3, 0, 3], [93, 39, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0], [6, 9, 4, 7, 0, 5, 5, 1, 3, 7, 0, 6, 9], [1, 2, 0, 4, 0, 3, 1], [16, 1, 76, 0], [0, 0, 0, 1, 0, 1, 1, 1], [7, 0, 7, 2], [0, 1, 1, 3], [0], [1], [0], [6], [0]], "fitness": -0.2619999945163727, "mapping_values": [1, 10, 5, 5, 3, 19, 13, 6, 4, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.negative(tf.math.square(tf.math.square(alpha))), tf.math.subtract(tf.math.multiply(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)), tf.math.add(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), sigma), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.312839984893799, 2.964548110961914, 2.408123731613159, 2.5476834774017334, 2.2247214317321777, 2.3100225925445557], "accuracy": [0.21172896027565002, 0.15942411124706268, 0.1784440577030182, 0.11359133571386337, 0.19931316375732422, 0.09549596905708313], "val_loss": [2.0304508209228516, 2.242602825164795, 3.720039129257202, 2.259564161300659, 2.3116304874420166, 2.303957223892212], "val_accuracy": [0.26366665959358215, 0.2536666691303253, 0.14399999380111694, 0.2043333351612091, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 89, 39], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], [0, 2, 0, 6, 3, 8, 2], [1, 2, 4, 4, 0, 3, 1], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1], [0, 7, 9, 5, 4], [4, 6], [83, 21], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 1, 0, 1, 0, 7, 5, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [211.35479736328125, 7.561978575642095e+26, 8.036720275878906, 20.019054412841797, 38.27019119262695, 62.67523193359375], "accuracy": [0.08281600475311279, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3262054656.0, 4.711404800415039, 14.127760887145996, 29.842344284057617, 51.7916259765625, 79.99817657470703], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [4, 9, 1, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [7, 3, 0, 2, 8, 2, 8], [0, 1, 1, 4, 3], [16], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 12, 8, 4, 2, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha)), alpha), tf.math.add(grad, tf.math.sqrt(sigma))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3034424781799316, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 21], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0], [2, 9, 4, 7, 0, 5, 5, 4, 6, 7, 8, 8, 5, 6, 9], [1, 2, 0, 4, 0, 3, 1], [16, 1, 35, 94], [0, 1, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 21, 15, 6, 4, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.negative(tf.math.square(tf.math.square(tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))))), tf.math.sqrt(tf.math.square(tf.math.divide_no_nan(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), grad)))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [62.11146545410156, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2094835489988327, 0.10328886657953262, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [106187.7421875, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}]