[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8105714321136475, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211747646331787, 1.6120668649673462, 1.151608943939209, 0.986438512802124, 0.8786035180091858, 0.8405599594116211, 0.7973779439926147, 0.7521362900733948, 0.7410977482795715, 0.7028488516807556, 0.6866686940193176, 0.6888084411621094, 0.6499994993209839, 0.654870867729187, 0.641145646572113, 0.6241171956062317, 0.6015336513519287, 0.5900285840034485, 0.5723863840103149, 0.573705792427063, 0.5700498819351196, 0.5503109693527222, 0.5458704233169556, 0.5435793399810791, 0.536609947681427, 0.5224376320838928, 0.5225641131401062, 0.5131685733795166, 0.5325868725776672, 0.4961731433868408, 0.5112026333808899, 0.4910079836845398, 0.4818495512008667, 0.4927201569080353, 0.47613751888275146, 0.47767746448516846, 0.45952948927879333, 0.4565163254737854, 0.46207675337791443, 0.4545726776123047, 0.45404288172721863, 0.43898916244506836, 0.4478062689304352, 0.4347994327545166, 0.4424552321434021, 0.4423465430736542, 0.4309721291065216, 0.4313275218009949, 0.41707950830459595, 0.4154016375541687, 0.4198969602584839, 0.405900776386261, 0.40957024693489075, 0.4005555212497711, 0.3976520001888275, 0.40032270550727844, 0.391091525554657, 0.3965685963630676, 0.3931695222854614, 0.38946065306663513, 0.37755346298217773, 0.383044570684433, 0.3798331022262573, 0.37037381529808044, 0.366072416305542, 0.3637843430042267, 0.373644083738327, 0.3685080409049988], "accuracy": [0.27116629481315613, 0.497820645570755, 0.5950337052345276, 0.6429798007011414, 0.6833971738815308, 0.6985867023468018, 0.707568347454071, 0.7174745798110962, 0.7217012047767639, 0.7400607466697693, 0.744419515132904, 0.7433628439903259, 0.7651565074920654, 0.7585523724555969, 0.7656848430633545, 0.7685906887054443, 0.7736098170280457, 0.7802139520645142, 0.7858935594558716, 0.7848368883132935, 0.7893276810646057, 0.7975168228149414, 0.8012151718139648, 0.8025360107421875, 0.8038568496704102, 0.8074230551719666, 0.8063663840293884, 0.8108572363853455, 0.7988376617431641, 0.8173292875289917, 0.8086118102073669, 0.8197067975997925, 0.8173292875289917, 0.8157442808151245, 0.8285563588142395, 0.8232730031013489, 0.8278959393501282, 0.8300092220306396, 0.8267071843147278, 0.8290846943855286, 0.828820526599884, 0.8411042094230652, 0.8335754871368408, 0.8383304476737976, 0.837537944316864, 0.8384625315666199, 0.8429533839225769, 0.8418967127799988, 0.843481719493866, 0.8475762605667114, 0.846387505531311, 0.8508783578872681, 0.8482366800308228, 0.8491612672805786, 0.8529917001724243, 0.8491612672805786, 0.8519350290298462, 0.8529917001724243, 0.8565579056739807, 0.8543124794960022, 0.8581429123878479, 0.854708731174469, 0.8605204224586487, 0.8602562546730042, 0.860652506351471, 0.8656716346740723, 0.8638224601745605, 0.8605204224586487], "val_loss": [1.9247360229492188, 1.1147887706756592, 0.882636308670044, 0.8474450707435608, 0.7652904987335205, 0.7096008062362671, 0.6715050339698792, 0.6311590075492859, 0.6314167976379395, 0.6304425597190857, 0.6139088273048401, 0.5986627340316772, 0.6023207902908325, 0.5804757475852966, 0.5742998719215393, 0.5375374555587769, 0.529363214969635, 0.5651020407676697, 0.5345928072929382, 0.5277919769287109, 0.4987219572067261, 0.5214937925338745, 0.49668028950691223, 0.5102782249450684, 0.48474785685539246, 0.4778556227684021, 0.467500239610672, 0.515274167060852, 0.4670114815235138, 0.4698914885520935, 0.46348991990089417, 0.46223902702331543, 0.46465158462524414, 0.4478311836719513, 0.446769118309021, 0.44313907623291016, 0.43252208828926086, 0.43846622109413147, 0.4402070641517639, 0.4380226731300354, 0.42376619577407837, 0.4224291145801544, 0.41959038376808167, 0.4137556850910187, 0.41478854417800903, 0.41902974247932434, 0.4167833626270294, 0.4157681167125702, 0.40371862053871155, 0.42185118794441223, 0.4133853614330292, 0.4065665006637573, 0.4020039141178131, 0.3995600640773773, 0.3999421000480652, 0.40762898325920105, 0.3909016251564026, 0.4006090760231018, 0.3933164179325104, 0.3898429274559021, 0.39644330739974976, 0.3905791938304901, 0.38261717557907104, 0.384751558303833, 0.38308095932006836, 0.3898523449897766, 0.4038928151130676, 0.3836321532726288], "val_accuracy": [0.5193333625793457, 0.6106666922569275, 0.6953333616256714, 0.6899999976158142, 0.7086666822433472, 0.7356666922569275, 0.7423333525657654, 0.7676666378974915, 0.7620000243186951, 0.7603333592414856, 0.7630000114440918, 0.7706666588783264, 0.7726666927337646, 0.7919999957084656, 0.7900000214576721, 0.7946666479110718, 0.8073333501815796, 0.7856666445732117, 0.7933333516120911, 0.7976666688919067, 0.8213333487510681, 0.79666668176651, 0.812333345413208, 0.8063333630561829, 0.8296666741371155, 0.824999988079071, 0.8316666483879089, 0.7990000247955322, 0.8256666660308838, 0.828000009059906, 0.8273333311080933, 0.8323333263397217, 0.824999988079071, 0.8429999947547913, 0.8339999914169312, 0.8403333425521851, 0.843666672706604, 0.8386666774749756, 0.8376666903495789, 0.8370000123977661, 0.8456666469573975, 0.8473333120346069, 0.8496666550636292, 0.8529999852180481, 0.8510000109672546, 0.8489999771118164, 0.8453333377838135, 0.8476666808128357, 0.8553333282470703, 0.8446666598320007, 0.8510000109672546, 0.8586666584014893, 0.8536666631698608, 0.8546666502952576, 0.8569999933242798, 0.8526666760444641, 0.859333336353302, 0.8533333539962769, 0.8603333234786987, 0.8616666793823242, 0.8600000143051147, 0.8579999804496765, 0.8643333315849304, 0.8600000143051147, 0.859666645526886, 0.8603333234786987, 0.8486666679382324, 0.8579999804496765]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 3, 1, 0, 3], [26, 39, 39], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 2, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [1, 1, 0, 1, 0, 1, 0, 0], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.36085712909698486, "mapping_values": [1, 11, 6, 5, 2, 3, 2, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad), tf.math.square(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.638700246810913, 8.643671637724278e+31, NaN, NaN, NaN, NaN], "accuracy": [0.19218069314956665, 0.13829085230827332, 0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.179195880889893, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.36500000953674316, 0.09466666728258133, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5, 5, 3, 8], [3, 0, 1, 2, 1, 0], [26, 45, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 6, 5, 5, 4], [1, 2, 1, 4, 0, 3, 1], [16, 1], [0, 0, 1, 1, 0, 1, 1, 0], [7, 3, 0, 0], [0, 4, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.1851428598165512, "mapping_values": [1, 15, 9, 6, 2, 13, 8, 5, 2, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.square(grad)), tf.math.multiply(alpha, tf.math.sqrt(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.square(beta), tf.math.square(tf.math.pow(alpha, grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3087236881256104, 2.300823211669922, 2.4082467555999756, NaN, NaN, NaN, NaN], "accuracy": [0.09245806187391281, 0.10474177449941635, 0.11121384054422379, 0.10328886657953262, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.307234048843384, 2.2864651679992676, 2.4036142826080322, NaN, NaN, NaN, NaN], "val_accuracy": [0.08500000089406967, 0.1850000023841858, 0.17733334004878998, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 93, 39], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 6, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 0], [8, 3, 5, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 3, 2, 1, 1, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303483486175537, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 4, 3, 1, 3, 5], [0, 0, 1, 0, 1], [26, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 7, 5, 5, 0], [1, 2, 0, 4, 0, 3, 1], [49, 1], [0, 0, 0, 1, 0, 1, 1, 0], [8, 9, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 1, 0, 1, 0, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]