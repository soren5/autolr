[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8554285764694214, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213676929473877, 1.6260327100753784, 1.143683910369873, 0.9742980599403381, 0.905768096446991, 0.8351218104362488, 0.7851074934005737, 0.7412269115447998, 0.7395317554473877, 0.711415708065033, 0.7069402933120728, 0.678230345249176, 0.6367061138153076, 0.6509361267089844, 0.6249479651451111, 0.6181301474571228, 0.596510112285614, 0.5996518135070801, 0.5853984355926514, 0.566254198551178, 0.5746713280677795, 0.5576147437095642, 0.5446452498435974, 0.5396304726600647, 0.5172899961471558, 0.545619010925293, 0.5207965970039368, 0.5165130496025085, 0.5015321969985962, 0.4937669634819031, 0.48441874980926514, 0.4920797646045685, 0.47626858949661255, 0.47793251276016235, 0.4731525182723999, 0.4620440900325775, 0.46651312708854675, 0.45247113704681396, 0.45586317777633667, 0.4512108266353607, 0.44254299998283386, 0.4377943277359009, 0.4450337886810303, 0.433260977268219, 0.4311376214027405, 0.4237311780452728, 0.42902952432632446, 0.4136289060115814, 0.41453227400779724, 0.4130176901817322, 0.39844590425491333, 0.39945289492607117, 0.39990946650505066, 0.39090973138809204, 0.39613914489746094, 0.3962012231349945, 0.3925626873970032, 0.39203161001205444, 0.3823232650756836], "accuracy": [0.2662792205810547, 0.5065380930900574, 0.6066569685935974, 0.659490168094635, 0.6744155287742615, 0.6980583667755127, 0.713908314704895, 0.7283053994178772, 0.7260599732398987, 0.7359662055969238, 0.7403249144554138, 0.7495707273483276, 0.7663452625274658, 0.7577598690986633, 0.7709681391716003, 0.7713643908500671, 0.778761088848114, 0.7790252566337585, 0.7824593782424927, 0.7913089394569397, 0.7848368883132935, 0.7928939461708069, 0.798309326171875, 0.7967243194580078, 0.8094043135643005, 0.800290584564209, 0.811649739742279, 0.8087438941001892, 0.8164047002792358, 0.8144234418869019, 0.8235371708869934, 0.8183859586715698, 0.822348415851593, 0.8281601071357727, 0.8276317715644836, 0.8322546482086182, 0.8293488025665283, 0.8367455005645752, 0.8325188159942627, 0.8381983637809753, 0.8393871188163757, 0.8422929644584656, 0.8403117060661316, 0.844010055065155, 0.8459912538528442, 0.8491612672805786, 0.8459912538528442, 0.8487650156021118, 0.8511425256729126, 0.8516708612442017, 0.8597279191017151, 0.8533879518508911, 0.8537842035293579, 0.8578787446022034, 0.8557654023170471, 0.8599920868873596, 0.8584070801734924, 0.8605204224586487, 0.8598600029945374], "val_loss": [1.9311139583587646, 1.1074284315109253, 0.9771608710289001, 0.7858006358146667, 0.7151148915290833, 0.6789993643760681, 0.6691451072692871, 0.6397503614425659, 0.6217755675315857, 0.637182354927063, 0.5786056518554688, 0.5710426568984985, 0.5599858164787292, 0.5515573024749756, 0.54337477684021, 0.5200293660163879, 0.526112973690033, 0.5345032811164856, 0.5103436708450317, 0.5099934935569763, 0.49562308192253113, 0.5069106221199036, 0.48209962248802185, 0.47433871030807495, 0.4906598627567291, 0.5204798579216003, 0.4671025276184082, 0.4671674370765686, 0.46530061960220337, 0.4500419795513153, 0.446654736995697, 0.43762192130088806, 0.44438207149505615, 0.4439742863178253, 0.44161567091941833, 0.4331801235675812, 0.44725513458251953, 0.4252970814704895, 0.42855703830718994, 0.4254489839076996, 0.4155900180339813, 0.4370979070663452, 0.4190300703048706, 0.4254917800426483, 0.4138663709163666, 0.421396940946579, 0.40383246541023254, 0.39836356043815613, 0.4188055694103241, 0.4012039005756378, 0.4035666882991791, 0.41997474431991577, 0.40390560030937195, 0.38472822308540344, 0.40163907408714294, 0.3912980854511261, 0.3859305679798126, 0.3892076015472412, 0.3987250030040741], "val_accuracy": [0.5730000138282776, 0.6159999966621399, 0.6100000143051147, 0.6980000138282776, 0.7269999980926514, 0.7519999742507935, 0.7483333349227905, 0.7603333592414856, 0.7559999823570251, 0.7463333606719971, 0.7726666927337646, 0.7856666445732117, 0.7846666574478149, 0.79666668176651, 0.7906666398048401, 0.8029999732971191, 0.7990000247955322, 0.7929999828338623, 0.8146666884422302, 0.8116666674613953, 0.8086666464805603, 0.8040000200271606, 0.8196666836738586, 0.8266666531562805, 0.8116666674613953, 0.8046666383743286, 0.8289999961853027, 0.8270000219345093, 0.8266666531562805, 0.8296666741371155, 0.8339999914169312, 0.8396666646003723, 0.8323333263397217, 0.8420000076293945, 0.8383333086967468, 0.8363333344459534, 0.8299999833106995, 0.843666672706604, 0.8416666388511658, 0.8433333039283752, 0.8486666679382324, 0.8370000123977661, 0.8506666421890259, 0.8403333425521851, 0.8506666421890259, 0.8393333554267883, 0.8503333330154419, 0.8526666760444641, 0.8460000157356262, 0.8556666374206543, 0.8536666631698608, 0.8456666469573975, 0.8553333282470703, 0.8600000143051147, 0.8546666502952576, 0.859000027179718, 0.8586666584014893, 0.8569999933242798, 0.8553333282470703]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.7774285674095154, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2074027061462402, 1.5862467288970947, 1.140574336051941, 0.9881950616836548, 0.8693156838417053, 0.8115284442901611, 0.7893874049186707, 0.7383162975311279, 0.7492119669914246, 0.7048136591911316, 0.6943421959877014, 0.6544457674026489, 0.6422338485717773, 0.6633068919181824, 0.6183310747146606, 0.6137722134590149, 0.6066561341285706], "accuracy": [0.2642979919910431, 0.516180157661438, 0.6026945114135742, 0.6380926966667175, 0.6853784322738647, 0.6995112895965576, 0.7128516435623169, 0.7251353859901428, 0.7257958054542542, 0.7368907928466797, 0.7395324110984802, 0.7548540234565735, 0.7565711140632629, 0.7518161535263062, 0.7755910754203796, 0.7759873270988464, 0.7729493975639343], "val_loss": [1.9095431566238403, 1.1123507022857666, 0.9016173481941223, 0.8060818910598755, 0.7334469556808472, 0.6766072511672974, 0.6867071986198425, 0.6515793204307556, 0.6382627487182617, 0.6894570589065552, 0.5951634645462036, 0.565194845199585, 0.5700489282608032, 0.5645350217819214, 0.5395253300666809, 0.5642225742340088, 0.5471094846725464], "val_accuracy": [0.5533333420753479, 0.6489999890327454, 0.6693333387374878, 0.6933333277702332, 0.7360000014305115, 0.7513333559036255, 0.7386666536331177, 0.75, 0.7519999742507935, 0.7413333058357239, 0.7846666574478149, 0.796999990940094, 0.7799999713897705, 0.7916666865348816, 0.7953333258628845, 0.7876666784286499, 0.7950000166893005]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [0, 2, 0, 6, 3, 8, 2, 0, 5], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 1], [0, 7, 8], [0, 6], [0], [1], [0], [6], [0]], "fitness": -0.24714285135269165, "mapping_values": [1, 6, 3, 3, 2, 14, 9, 5, 2, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.5584282875061035, 2.2880945205688477, 2.283928632736206, 2.2616021633148193, 3.5880887508392334, 2.304443359375, 2.300755262374878, 2.2258732318878174], "accuracy": [0.1834632158279419, 0.1612732857465744, 0.13234710693359375, 0.1632545292377472, 0.18293488025665283, 0.09866596013307571, 0.10289261490106583, 0.19402985274791718], "val_loss": [2.3009846210479736, 2.3020639419555664, 2.1886379718780518, 2.112964153289795, 2.3048458099365234, 2.3022828102111816, 2.2797582149505615, 2.3055739402770996], "val_accuracy": [0.09933333098888397, 0.09566666930913925, 0.2329999953508377, 0.18799999356269836, 0.11599999666213989, 0.10333333164453506, 0.16366666555404663, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1], [1, 2, 2, 1, 3, 5], [0, 0, 0, 0, 2], [0, 12, 39, 95], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 7, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 1, 1], [0, 9], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 4, 4, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3037726879119873, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 2, 0, 8, 3, 5, 5, 3, 8, 5, 8, 8], [0, 0, 3, 0, 0], [0, 45, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 8, 6, 3, 8, 2, 4, 8, 0], [2, 0, 0, 1, 5, 1], [16, 99], [1, 0, 1, 1], [0, 7], [7, 6], [25], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 12, 4, 3, 16, 10, 6, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(tf.math.multiply(grad, tf.math.sqrt(tf.math.square(tf.math.sqrt(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), tf.math.sqrt(grad)))), tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 4, 3, 6, 8, 5], [0, 0, 2, 0, 2], [0, 39, 24], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 2, 3, 3, 0], [56, 1], [0, 0, 1, 0, 1], [0, 7, 8], [0, 6], [28], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 0, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309957504272461, 2.310307741165161, 2.3095579147338867, 2.3110315799713135, 2.310593605041504, 2.3100292682647705], "accuracy": [0.08836349099874496, 0.09615638852119446, 0.09747721254825592, 0.09113723784685135, 0.0882314071059227, 0.09034473448991776], "val_loss": [2.3085715770721436, 2.3085715770721436, 2.3085715770721436, 2.3085715770721436, 2.3085715770721436, 2.3085715770721436], "val_accuracy": [0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337]}}]