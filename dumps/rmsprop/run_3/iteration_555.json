[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 3], [16, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [7, 3, 0, 3, 5, 6, 3, 7, 2, 1, 5, 7, 2, 1, 4, 9, 7, 9, 6, 9, 4, 3, 2, 2, 0, 1, 2, 2, 9, 3, 9], [0, 4, 1, 2, 3, 5, 2, 4, 5, 3, 2, 7, 5, 4, 1, 7, 2, 6], [0, 11, 38, 23, 69, 26], [1], [0], [1], [0]], "fitness": -0.8614285588264465, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 49, 31, 18, 6, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.subtract(beta, sigma), tf.math.square(grad))), beta))), tf.math.add(tf.math.add(grad, grad), tf.math.subtract(tf.math.pow(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(tf.math.add(sigma, tf.math.add(beta, tf.math.negative(grad))), tf.math.subtract(grad, tf.math.add(tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(alpha, grad)))), beta)))), grad))), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1096482276916504, 1.1867666244506836, 0.7987219095230103, 0.6991950869560242, 0.6145243048667908, 0.5672423839569092, 0.5288673639297485, 0.49369561672210693, 0.46841108798980713, 0.4542764723300934, 0.43740376830101013, 0.42582106590270996, 0.3989811837673187, 0.3766123950481415, 0.3740644156932831, 0.35786283016204834, 0.35733458399772644, 0.34161022305488586, 0.32728099822998047, 0.32009783387184143, 0.3107418417930603, 0.3003917932510376, 0.3003977835178375, 0.2877829968929291, 0.2832549512386322, 0.2748294770717621, 0.2709665298461914], "accuracy": [0.2884691655635834, 0.591731607913971, 0.7028133869171143, 0.7339849472045898, 0.7635715007781982, 0.7839123010635376, 0.7955356240272522, 0.8127063512802124, 0.8235371708869934, 0.8296129703521729, 0.8345000743865967, 0.8405758738517761, 0.8524633646011353, 0.8582749962806702, 0.8573504090309143, 0.8692378997802734, 0.8652753829956055, 0.8701624870300293, 0.878879964351654, 0.8808611631393433, 0.8817857503890991, 0.8835028409957886, 0.8849557638168335, 0.8911636471748352, 0.8864086866378784, 0.893541157245636, 0.8976356983184814], "val_loss": [1.092637300491333, 0.7241820693016052, 0.6446208953857422, 0.550047755241394, 0.519809901714325, 0.48012956976890564, 0.45743680000305176, 0.44276559352874756, 0.43091657757759094, 0.41445887088775635, 0.39638224244117737, 0.3811008036136627, 0.3770937919616699, 0.37328270077705383, 0.3690839409828186, 0.36885881423950195, 0.36609897017478943, 0.37109676003456116, 0.3564363718032837, 0.354712575674057, 0.3477727174758911, 0.35606926679611206, 0.3644925057888031, 0.35253214836120605, 0.34676864743232727, 0.3536384701728821, 0.3436289131641388], "val_accuracy": [0.6086666584014893, 0.7293333411216736, 0.7583333253860474, 0.7860000133514404, 0.7960000038146973, 0.812333345413208, 0.8186666369438171, 0.8193333148956299, 0.840666651725769, 0.8446666598320007, 0.8633333444595337, 0.8646666407585144, 0.8640000224113464, 0.8679999709129333, 0.8690000176429749, 0.8629999756813049, 0.8669999837875366, 0.8723333477973938, 0.8683333396911621, 0.875333309173584, 0.8799999952316284, 0.8820000290870667, 0.8666666746139526, 0.8736666440963745, 0.8793333172798157, 0.8776666522026062, 0.8790000081062317]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8411428332328796, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2105872631073, 1.5982547998428345, 1.1445893049240112, 0.9556151032447815, 0.855524480342865, 0.8215922713279724, 0.7666575312614441, 0.7493740320205688, 0.7091132998466492, 0.6795362830162048, 0.6773746013641357, 0.6542908549308777, 0.6247397661209106, 0.6185914874076843, 0.619799792766571, 0.587529718875885, 0.5913421511650085, 0.5745203495025635, 0.5648886561393738, 0.5498476624488831, 0.5409926772117615, 0.5396292209625244, 0.5327722430229187, 0.5195121765136719, 0.5230141282081604, 0.5103786587715149, 0.5019175410270691, 0.4970046579837799, 0.47799357771873474, 0.49087387323379517, 0.48313456773757935, 0.4732128083705902, 0.46827372908592224, 0.46878257393836975, 0.45654505491256714, 0.4487241208553314, 0.45228949189186096, 0.4460608959197998, 0.4405384361743927, 0.4296155571937561, 0.44202402234077454, 0.429155558347702], "accuracy": [0.2727513015270233, 0.5119535326957703, 0.599128246307373, 0.6592260003089905, 0.6881521344184875, 0.7025492191314697, 0.7253995537757874, 0.7264562249183655, 0.7388719916343689, 0.7460044622421265, 0.7490423917770386, 0.7536653280258179, 0.7726852297782898, 0.7717606425285339, 0.7650244235992432, 0.7810064554214478, 0.7744023203849792, 0.7885351777076721, 0.791441023349762, 0.7956677079200745, 0.8005547523498535, 0.8009510040283203, 0.7993659973144531, 0.8119139075279236, 0.8034605979919434, 0.8061022162437439, 0.8162726163864136, 0.816008448600769, 0.8253863453865051, 0.8169330358505249, 0.8228767514228821, 0.8230088353157043, 0.82683926820755, 0.8226125836372375, 0.8297450542449951, 0.8338396549224854, 0.8318583965301514, 0.8393871188163757, 0.8370096683502197, 0.8416325449943542, 0.8352925777435303, 0.8445383906364441], "val_loss": [1.9179068803787231, 1.0761460065841675, 0.8677250146865845, 0.8083348274230957, 0.7550930976867676, 0.6948854327201843, 0.6683034896850586, 0.6156163215637207, 0.6219787001609802, 0.5824899673461914, 0.6001719832420349, 0.5813794136047363, 0.5405964255332947, 0.5385141968727112, 0.5320501923561096, 0.5356664061546326, 0.512826681137085, 0.5597230792045593, 0.5208885073661804, 0.49707624316215515, 0.5134735107421875, 0.4919384717941284, 0.4825913608074188, 0.4880867600440979, 0.485857218503952, 0.48057499527931213, 0.4681110978126526, 0.4655891954898834, 0.46301522850990295, 0.47156399488449097, 0.4614834487438202, 0.45281851291656494, 0.505321204662323, 0.45333316922187805, 0.4539506733417511, 0.4391382932662964, 0.4311255216598511, 0.43639782071113586, 0.43817585706710815, 0.4339078664779663, 0.4358925521373749, 0.4304080009460449], "val_accuracy": [0.6206666827201843, 0.6713333129882812, 0.6963333487510681, 0.7089999914169312, 0.7073333263397217, 0.7396666407585144, 0.7493333220481873, 0.7720000147819519, 0.765666663646698, 0.7866666913032532, 0.765666663646698, 0.7816666960716248, 0.8080000281333923, 0.809333324432373, 0.7979999780654907, 0.7906666398048401, 0.8176666498184204, 0.7956666946411133, 0.8073333501815796, 0.8270000219345093, 0.8056666851043701, 0.8220000267028809, 0.8303333520889282, 0.8206666707992554, 0.8183333277702332, 0.8289999961853027, 0.8366666436195374, 0.8353333473205566, 0.8360000252723694, 0.828000009059906, 0.8303333520889282, 0.8399999737739563, 0.8063333630561829, 0.8423333168029785, 0.8336666822433472, 0.8429999947547913, 0.8519999980926514, 0.8460000157356262, 0.8429999947547913, 0.843666672706604, 0.8463333249092102, 0.8486666679382324]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 1, 3, 5], [0, 0, 2, 0, 2], [42, 49, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 0, 0, 4, 0, 3, 1], [16, 1, 27], [0, 0, 0, 1, 0, 1, 1, 1], [2, 9, 0, 9], [0, 1, 1, 4], [38, 60], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 15, 8, 7, 3, 4, 3, 1, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.304351806640625, 2.3039863109588623, 2.3047900199890137, 2.3055083751678467, 2.3054938316345215, 2.306833028793335], "accuracy": [0.09325055778026581, 0.09826971590518951, 0.09853387624025345, 0.09589222073554993, 0.09668471664190292, 0.09853387624025345], "val_loss": [2.3024725914001465, 2.3035531044006348, 2.303729772567749, 2.304572820663452, 2.3069441318511963, 2.306699275970459], "val_accuracy": [0.10166666656732559, 0.09833333641290665, 0.10000000149011612, 0.09833333641290665, 0.09566666930913925, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 1, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 8, 4, 2], [2, 2, 0, 4, 0, 3, 1, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [4, 1, 1, 2], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 17, 9, 8, 2, 8, 4, 4, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303781032562256, 2.3025407791137695, 2.3025600910186768, 2.302546501159668, 2.302548408508301, 2.3025431632995605], "accuracy": [0.10210011899471283, 0.10698718577623367, 0.10619468986988068, 0.09998679161071777, 0.10474177449941635, 0.09998679161071777], "val_loss": [2.302581787109375, 2.3025779724121094, 2.3025741577148438, 2.3025758266448975, 2.3025670051574707, 2.3025636672973633], "val_accuracy": [0.10133333504199982, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 2, 2, 2], [0, 39, 91], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 4, 2, 2], [2, 2, 0, 0, 0, 3, 1], [16, 1], [0, 0, 0, 1, 1, 1, 1, 1], [0, 7, 7, 7], [1, 1, 1], [0, 39], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 6, 3, 3, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(alpha, alpha), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309645652770996, 2.309863567352295, 2.3106822967529297, 2.311067581176758, 2.309948682785034, 2.3097498416900635], "accuracy": [0.09021265059709549, 0.09417514503002167, 0.09100515395402908, 0.09272222965955734, 0.09298639744520187, 0.09576013684272766], "val_loss": [2.3097500801086426, 2.3097500801086426, 2.3097500801086426, 2.3097500801086426, 2.3097500801086426, 2.3097500801086426], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]