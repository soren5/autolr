[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8182857036590576, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2109787464141846, 1.6037724018096924, 1.1467039585113525, 0.9825586676597595, 0.866524338722229, 0.8342129588127136, 0.7745316624641418, 0.7607187628746033, 0.7454376816749573, 0.7102025151252747, 0.685579776763916, 0.6778286099433899, 0.6576039791107178, 0.6521937847137451, 0.6369968056678772, 0.6226294636726379, 0.6129301190376282, 0.5966241955757141, 0.5944268703460693, 0.583797037601471, 0.580144464969635, 0.5762434005737305, 0.5564270615577698, 0.5551795959472656, 0.5373712182044983, 0.5294824242591858, 0.5351187586784363, 0.524951159954071, 0.5237640738487244, 0.524820864200592, 0.5056635141372681, 0.5111708641052246, 0.4959225654602051, 0.48583438992500305, 0.49651914834976196, 0.4858001470565796, 0.4733242094516754, 0.46520352363586426, 0.46731823682785034, 0.46998611092567444, 0.45860281586647034, 0.45674940943717957, 0.4450322687625885, 0.4394298791885376, 0.43946364521980286, 0.4359589219093323, 0.4373026192188263, 0.43524283170700073], "accuracy": [0.2681283950805664, 0.5101043581962585, 0.6000528335571289, 0.6507726907730103, 0.6885483860969543, 0.6950204968452454, 0.7220974564552307, 0.7174745798110962, 0.7271166443824768, 0.7427024245262146, 0.7490423917770386, 0.7401928305625916, 0.7560427784919739, 0.7486461400985718, 0.7614582180976868, 0.7696473598480225, 0.7714964747428894, 0.7765156626701355, 0.7773081660270691, 0.783119797706604, 0.7843085527420044, 0.7853652238845825, 0.7928939461708069, 0.7918372750282288, 0.8006868362426758, 0.8067626357078552, 0.8010830879211426, 0.8079513907432556, 0.8042530417442322, 0.8024039268493652, 0.8104609847068787, 0.8120459914207458, 0.8182538747787476, 0.8189142942428589, 0.8198388814926147, 0.8256505131721497, 0.8257825970649719, 0.8273676037788391, 0.8293488025665283, 0.8261788487434387, 0.8325188159942627, 0.8313300609588623, 0.8327829837799072, 0.8339717388153076, 0.837537944316864, 0.8381983637809753, 0.8403117060661316, 0.839519202709198], "val_loss": [1.9230753183364868, 1.1086783409118652, 0.8939812183380127, 0.8195112347602844, 0.7190129160881042, 0.6974300146102905, 0.6619362235069275, 0.6346115469932556, 0.6535173058509827, 0.6154675483703613, 0.5822372436523438, 0.5705476403236389, 0.5387287139892578, 0.5619936585426331, 0.5447697043418884, 0.5515116453170776, 0.5245077013969421, 0.5132172703742981, 0.5041947960853577, 0.5233829021453857, 0.511753499507904, 0.499520480632782, 0.4755496382713318, 0.4849103093147278, 0.47454947233200073, 0.4867327809333801, 0.4510360658168793, 0.4567347764968872, 0.4892905354499817, 0.4424073398113251, 0.4500283896923065, 0.4387572705745697, 0.46160897612571716, 0.43657660484313965, 0.45182231068611145, 0.42245617508888245, 0.4319423735141754, 0.4551290273666382, 0.4143412411212921, 0.4263601005077362, 0.4078107178211212, 0.4195716083049774, 0.3996184766292572, 0.40115660429000854, 0.40536612272262573, 0.3915310800075531, 0.4098654091358185, 0.39907804131507874], "val_accuracy": [0.5463333129882812, 0.6356666684150696, 0.6759999990463257, 0.6990000009536743, 0.7289999723434448, 0.7210000157356262, 0.7486666440963745, 0.7583333253860474, 0.7540000081062317, 0.7680000066757202, 0.781000018119812, 0.7870000004768372, 0.796999990940094, 0.7766666412353516, 0.7850000262260437, 0.7879999876022339, 0.8063333630561829, 0.8013333082199097, 0.8130000233650208, 0.8059999942779541, 0.8083333373069763, 0.8109999895095825, 0.8193333148956299, 0.8083333373069763, 0.8196666836738586, 0.8119999766349792, 0.8320000171661377, 0.8230000138282776, 0.8056666851043701, 0.8370000123977661, 0.8320000171661377, 0.8326666951179504, 0.8236666917800903, 0.8379999995231628, 0.8366666436195374, 0.8360000252723694, 0.8306666612625122, 0.8190000057220459, 0.8429999947547913, 0.8410000205039978, 0.8463333249092102, 0.8429999947547913, 0.8523333072662354, 0.846666693687439, 0.8446666598320007, 0.8503333330154419, 0.8476666808128357, 0.8506666421890259]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 4, 5], [0, 3, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 4, 4, 4, 5, 5, 8], [2, 2, 0, 4, 0, 3, 1], [57, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 3, 0, 2, 3, 3, 2, 8, 0, 2, 5, 5, 4, 5, 7, 7, 3, 3, 2, 7, 8, 0, 7, 9, 8], [1, 1, 1, 4, 5, 4, 7, 7, 6, 5, 3, 0, 2, 3, 6], [0, 5], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 12, 6, 6, 2, 40, 25, 15, 2, 1, 0, 1, 0], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad), alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.pow(tf.math.square(beta), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.multiply(alpha, alpha), tf.math.multiply(alpha, grad))), grad), tf.math.add(tf.math.sqrt(tf.math.negative(grad)), tf.math.add(grad, tf.math.square(tf.math.square(tf.math.pow(tf.math.square(grad), tf.math.add(tf.math.add(tf.math.multiply(tf.math.multiply(grad, tf.math.add(tf.math.add(grad, sigma), tf.math.sqrt(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))))), tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), beta)), tf.math.sqrt(sigma)), grad))))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.305607318878174, 33.694427490234375, 246.53509521484375, 821.1824340820312, 2216.67529296875, 5484.9794921875], "accuracy": [0.10394927859306335, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.432387351989746, 120.46039581298828, 497.47869873046875, 1441.8924560546875, 3680.75, 8872.7978515625], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5], [1, 0, 2, 0, 2], [26, 39, 39], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [2, 2, 4, 4, 8, 5, 4, 4, 1, 9, 7], [2, 2, 0, 2, 2, 3, 1, 5], [16, 1], [0, 0, 1, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 8, 4, 3, 3, 8, 1, 9], [1, 1, 4, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 19, 11, 8, 2, 6, 3, 3, 1, 12, 8, 4, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(tf.math.pow(tf.math.sqrt(tf.math.square(tf.math.pow(tf.math.pow(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), beta), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), beta)))), beta), grad), alpha), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.pow(alpha, tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.math.subtract(alpha, grad)), tf.constant(0.0, shape=shape, dtype=tf.float32)), sigma))))", "other_info": {"loss": [1140719744.0, 21287264256.0, 98795511808.0, 280051613696.0, 603134099456.0, 1103383887872.0], "accuracy": [0.09800554811954498, 0.10091137140989304, 0.09998679161071777, 0.10051512718200684, 0.10091137140989304, 0.09998679161071777], "val_loss": [5054785536.0, 40433061888.0, 136456814592.0, 323443326976.0, 631716904960.0, 1091612377088.0], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 6, 3, 1, 3, 5, 0], [0, 0, 1, 0, 3], [0, 86, 39], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [3, 2, 4, 4, 0, 5, 5, 4], [2, 1, 0, 4, 0, 1, 1], [16, 1], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1], [6, 7, 3, 8, 0, 8, 7, 0], [0, 6, 0, 1, 4], [0, 45], [1], [0], [2], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 12, 7, 5, 3, 3, 1, 2, 0, 13, 8, 5, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.negative(alpha), grad)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310628652572632, 2.310354232788086, 2.310305595397949, 2.310649871826172, 2.31099009513855, 2.3103888034820557], "accuracy": [0.09047681838274002, 0.09126931428909302, 0.09311848133802414, 0.09391097724437714, 0.09140139818191528, 0.0936468094587326], "val_loss": [2.3088245391845703, 2.3088245391845703, 2.3088245391845703, 2.3088245391845703, 2.3088245391845703, 2.3088245391845703], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [2, 7, 0, 5, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 8, 0, 6, 3, 8, 2], [2, 4, 3, 1, 0], [73, 1], [0, 0, 1, 1], [9, 7], [0, 6], [0], [0, 0, 1, 0, 1, 0, 1, 1], [0, 6, 6, 2], [2, 6, 5, 3], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 7, 4, 3, 2, 1, 0, 1, 0, 1, 1, 0, 1, 8, 4, 4, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(beta, tf.math.divide_no_nan(grad, tf.math.add(grad, sigma))))", "other_info": {"loss": [2.309208393096924, 2.30979585647583, 2.309417247772217, 2.309664011001587, 2.309731960296631, 2.309565544128418], "accuracy": [0.09708096832036972, 0.08836349099874496, 0.09166556596755981, 0.08889182657003403, 0.0936468094587326, 0.09536388516426086], "val_loss": [2.309039354324341, 2.309039354324341, 2.309039354324341, 2.309039354324341, 2.309039354324341, 2.309039354324341], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]