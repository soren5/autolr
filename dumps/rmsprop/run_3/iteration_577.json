[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 1], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8785714507102966, "mapping_values": [1, 10, 5, 5, 3, 1, 0, 1, 0, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1050682067871094, 1.1815825700759888, 0.8048587441444397, 0.6974431276321411, 0.6264962553977966, 0.5851055979728699, 0.5459751486778259, 0.5063755512237549, 0.48523029685020447, 0.4650946855545044, 0.45067840814590454, 0.43502187728881836, 0.406442791223526, 0.39378124475479126, 0.3779959976673126, 0.36472633481025696, 0.3534126877784729, 0.3550412356853485, 0.3358498811721802, 0.32498982548713684, 0.32640719413757324, 0.3066425025463104, 0.30337557196617126, 0.2858830392360687, 0.2915726602077484, 0.2769973576068878, 0.26551592350006104, 0.260730117559433, 0.2533808648586273, 0.24841058254241943, 0.23168815672397614, 0.23232945799827576, 0.23073486983776093, 0.22313959896564484, 0.2100457102060318, 0.20079267024993896, 0.20599855482578278, 0.2046128511428833, 0.20105355978012085, 0.19024629890918732], "accuracy": [0.2926958203315735, 0.598599910736084, 0.6966054439544678, 0.7309470176696777, 0.7602694630622864, 0.7808743715286255, 0.7889314293861389, 0.8121780753135681, 0.8173292875289917, 0.824329674243927, 0.8309338092803955, 0.8358209133148193, 0.8475762605667114, 0.8535200357437134, 0.8585391640663147, 0.86118084192276, 0.8676528930664062, 0.8658037185668945, 0.8754457831382751, 0.8751816153526306, 0.8771628737449646, 0.8835028409957886, 0.8812574148178101, 0.8949940800666809, 0.8897107243537903, 0.8907673954963684, 0.8994848728179932, 0.8994848728179932, 0.9025228023529053, 0.9045040011405945, 0.9084665179252625, 0.9109761118888855, 0.9122969508171082, 0.9132214784622192, 0.9189010858535767, 0.9199577569961548, 0.9179764986038208, 0.9207502603530884, 0.9206181764602661, 0.924448549747467], "val_loss": [1.0888454914093018, 0.7482450604438782, 0.6695888638496399, 0.5846405625343323, 0.5669184923171997, 0.5107728242874146, 0.48147323727607727, 0.46282467246055603, 0.44751131534576416, 0.4391605257987976, 0.4176171123981476, 0.40820661187171936, 0.39385783672332764, 0.3836090564727783, 0.38412076234817505, 0.37465405464172363, 0.3867998719215393, 0.36575454473495483, 0.3644253611564636, 0.3754366934299469, 0.3756275773048401, 0.3704255223274231, 0.3640388250350952, 0.369148313999176, 0.354686439037323, 0.3503943979740143, 0.3611874282360077, 0.3463430106639862, 0.3690204322338104, 0.3586885631084442, 0.3522126376628876, 0.365304172039032, 0.35166463255882263, 0.3601125478744507, 0.36286231875419617, 0.36991482973098755, 0.36083152890205383, 0.3678554594516754, 0.36399587988853455, 0.379854291677475], "val_accuracy": [0.6496666669845581, 0.7289999723434448, 0.737333357334137, 0.7713333368301392, 0.7879999876022339, 0.8056666851043701, 0.8233333230018616, 0.8286666870117188, 0.8389999866485596, 0.8473333120346069, 0.8500000238418579, 0.859000027179718, 0.8646666407585144, 0.8619999885559082, 0.8669999837875366, 0.8709999918937683, 0.8606666922569275, 0.8726666569709778, 0.8706666827201843, 0.8669999837875366, 0.8730000257492065, 0.8706666827201843, 0.8740000128746033, 0.878000020980835, 0.8790000081062317, 0.8796666860580444, 0.8806666731834412, 0.8836666941642761, 0.8713333606719971, 0.8816666603088379, 0.8826666474342346, 0.8809999823570251, 0.8863333463668823, 0.8813333511352539, 0.8866666555404663, 0.8836666941642761, 0.8836666941642761, 0.8826666474342346, 0.8846666812896729, 0.8833333253860474]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.806857168674469, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211289167404175, 1.6175029277801514, 1.1664026975631714, 0.9855533838272095, 0.9235444664955139, 0.8222124576568604, 0.7867133617401123, 0.774910569190979, 0.7243577241897583, 0.7420971989631653, 0.6805040240287781, 0.6718621253967285, 0.63528972864151, 0.6396293640136719, 0.6249343752861023, 0.6421921253204346, 0.6018683910369873, 0.602410078048706, 0.584551990032196, 0.5752971768379211, 0.5724746584892273, 0.5498238801956177, 0.5591392517089844, 0.5374440550804138, 0.5320965051651001, 0.5359548330307007, 0.5275084376335144, 0.5037646889686584, 0.5130756497383118, 0.5087018609046936, 0.4900420308113098, 0.4914064407348633, 0.4899098575115204, 0.4884694516658783, 0.4771552085876465, 0.46500179171562195, 0.4809879660606384, 0.46166113018989563, 0.4568745195865631, 0.45405203104019165], "accuracy": [0.2693171203136444, 0.5091797709465027, 0.5951657891273499, 0.6565843224525452, 0.6671509742736816, 0.702681303024292, 0.7127195596694946, 0.7231541275978088, 0.7317395210266113, 0.7238145470619202, 0.7441553473472595, 0.7485140562057495, 0.7640998363494873, 0.76106196641922, 0.7660810947418213, 0.7637035846710205, 0.7758552432060242, 0.7721568942070007, 0.7852331399917603, 0.785101056098938, 0.7884030938148499, 0.8043851256370544, 0.7924976944923401, 0.8013472557067871, 0.8030643463134766, 0.8025360107421875, 0.8039889335632324, 0.8173292875289917, 0.8086118102073669, 0.81112140417099, 0.8245938420295715, 0.8202351331710815, 0.8178576231002808, 0.819442629814148, 0.8238013386726379, 0.8358209133148193, 0.8186501264572144, 0.830669641494751, 0.8322546482086182, 0.8334434032440186], "val_loss": [1.9240890741348267, 1.1096293926239014, 0.869448721408844, 0.8001968860626221, 0.722216010093689, 0.6897525787353516, 0.6978979706764221, 0.6618825793266296, 0.6337189674377441, 0.6034706234931946, 0.575417697429657, 0.5711313486099243, 0.5747907757759094, 0.5509506464004517, 0.6536906957626343, 0.5495424270629883, 0.6105893850326538, 0.5285276174545288, 0.519480288028717, 0.5134040713310242, 0.5091590285301208, 0.49343782663345337, 0.5014193654060364, 0.48995012044906616, 0.4842263162136078, 0.53289395570755, 0.466016560792923, 0.4669261872768402, 0.4609169065952301, 0.45793643593788147, 0.4578912854194641, 0.4511972665786743, 0.448626309633255, 0.4485548436641693, 0.43933939933776855, 0.46292346715927124, 0.4432738125324249, 0.4423735737800598, 0.432891845703125, 0.43157488107681274], "val_accuracy": [0.6000000238418579, 0.6226666569709778, 0.6916666626930237, 0.687333345413208, 0.7336666584014893, 0.7306666374206543, 0.7250000238418579, 0.7246666550636292, 0.7576666474342346, 0.7599999904632568, 0.7746666669845581, 0.7850000262260437, 0.7746666669845581, 0.7913333177566528, 0.7433333396911621, 0.7889999747276306, 0.7643333077430725, 0.7940000295639038, 0.8056666851043701, 0.7990000247955322, 0.8140000104904175, 0.8109999895095825, 0.8116666674613953, 0.812333345413208, 0.8206666707992554, 0.7916666865348816, 0.8263333439826965, 0.8240000009536743, 0.8289999961853027, 0.8306666612625122, 0.8303333520889282, 0.8353333473205566, 0.828000009059906, 0.8293333053588867, 0.8456666469573975, 0.8253333568572998, 0.8366666436195374, 0.8316666483879089, 0.8413333296775818, 0.8373333215713501]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 8, 1, 3, 5], [0, 0, 1, 2, 2], [95, 95, 26], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 3, 3, 0], [32, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1], [7, 3, 0, 6, 5], [0, 1, 1, 2], [0], [1], [0], [4], [0]], "fitness": -0.2985714375972748, "mapping_values": [1, 7, 4, 3, 2, 15, 8, 7, 2, 9, 5, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), grad)), grad), tf.math.pow(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.square(alpha))), beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3808975219726562, 2.2557461261749268, 2.466188907623291, 2.303273916244507, 2.3288207054138184, 2.3044590950012207, 2.303565263748169], "accuracy": [0.17091533541679382, 0.1682736724615097, 0.12442214041948318, 0.10368511080741882, 0.11689341068267822, 0.09708096832036972, 0.09826971590518951], "val_loss": [2.3020832538604736, 1.8443987369537354, 2.3050425052642822, 2.3008718490600586, 2.3049516677856445, 2.303136110305786, 2.3027567863464355], "val_accuracy": [0.10166666656732559, 0.30300000309944153, 0.09700000286102295, 0.11100000143051147, 0.10100000351667404, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], [3, 2, 3, 1, 3, 5, 8, 9], [0, 0, 1, 0, 2], [26, 39, 68, 86], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [2, 2, 4, 4, 3, 5, 5, 4, 8], [2, 2, 0, 4, 0, 3, 1], [85, 1], [1, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [86], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 4, 16, 9, 7, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), alpha), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), tf.math.sqrt(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 3], [26, 39, 3], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [2, 2, 5, 6, 3, 5, 5, 4], [2, 2, 3, 4, 0, 3, 1], [16, 60, 53], [0, 0, 0, 1, 1, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 6, 3, 3, 0, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.square(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [240.74337768554688, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18451987206935883, 0.0870426595211029, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3173656.25, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]