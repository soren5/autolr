[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8137142658233643, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210620164871216, 1.5976662635803223, 1.1738488674163818, 0.9601982235908508, 0.892528772354126, 0.8559245467185974, 0.7767099142074585, 0.752271294593811, 0.7385778427124023, 0.7081982493400574, 0.6895119547843933, 0.6560298204421997, 0.643846869468689, 0.6354562044143677, 0.6205226182937622, 0.6202217936515808, 0.6013379693031311, 0.598408579826355, 0.5899442434310913, 0.571582019329071, 0.5607106685638428, 0.5550326704978943, 0.5367202758789062, 0.5348431468009949, 0.5307679176330566, 0.523082971572876, 0.5049208402633667, 0.5078478455543518, 0.5015535354614258, 0.49441665410995483, 0.486275315284729, 0.47945618629455566, 0.4789521396160126, 0.47772860527038574, 0.46259835362434387, 0.4683036506175995, 0.46032458543777466, 0.4537050127983093, 0.4499188959598541, 0.4458070695400238, 0.43884390592575073, 0.42874637246131897, 0.4243718385696411, 0.4285312294960022, 0.42071104049682617, 0.4149186611175537], "accuracy": [0.2666754722595215, 0.5085193514823914, 0.5867124795913696, 0.6528860330581665, 0.677189290523529, 0.6892088055610657, 0.7140403985977173, 0.719852089881897, 0.7223616242408752, 0.7449478507041931, 0.7416457533836365, 0.7531369924545288, 0.7635715007781982, 0.7652885913848877, 0.7667415142059326, 0.7655527591705322, 0.7779685854911804, 0.7796856164932251, 0.7815347909927368, 0.7873464822769165, 0.7891955971717834, 0.7947431206703186, 0.7942147850990295, 0.800818920135498, 0.800290584564209, 0.8039889335632324, 0.8112534880638123, 0.8142913579940796, 0.8171972036361694, 0.8187822103500366, 0.8235371708869934, 0.8201030492782593, 0.8234050869941711, 0.821820080280304, 0.830669641494751, 0.8248580098152161, 0.8350284099578857, 0.8334434032440186, 0.8329150676727295, 0.8360850811004639, 0.8400475382804871, 0.8397833704948425, 0.844010055065155, 0.8445383906364441, 0.8438779711723328, 0.8475762605667114], "val_loss": [1.9185580015182495, 1.134028434753418, 0.9375901818275452, 0.8050272464752197, 0.8155542612075806, 0.6920496225357056, 0.6664087772369385, 0.6712408661842346, 0.6591715216636658, 0.662521481513977, 0.6166889667510986, 0.6088154315948486, 0.6136091947555542, 0.5869340300559998, 0.6318761110305786, 0.5545812845230103, 0.5475996136665344, 0.5475252866744995, 0.5434606075286865, 0.5253063440322876, 0.5343524813652039, 0.523348331451416, 0.5107665061950684, 0.5190582871437073, 0.49941760301589966, 0.5144255757331848, 0.4818153381347656, 0.5063428282737732, 0.4905117154121399, 0.4811941683292389, 0.4692703187465668, 0.47710683941841125, 0.4644027650356293, 0.4615142345428467, 0.47553783655166626, 0.4496067762374878, 0.46129515767097473, 0.4600982666015625, 0.45469385385513306, 0.4738956689834595, 0.4385186731815338, 0.44125285744667053, 0.4461206793785095, 0.4394380748271942, 0.4449235498905182, 0.4392840564250946], "val_accuracy": [0.5360000133514404, 0.628333330154419, 0.6779999732971191, 0.7173333168029785, 0.6919999718666077, 0.7509999871253967, 0.7609999775886536, 0.7513333559036255, 0.7570000290870667, 0.7639999985694885, 0.7723333239555359, 0.765666663646698, 0.7676666378974915, 0.7746666669845581, 0.7523333430290222, 0.7996666431427002, 0.7879999876022339, 0.8080000281333923, 0.8006666898727417, 0.8106666803359985, 0.7979999780654907, 0.7973333597183228, 0.8119999766349792, 0.8040000200271606, 0.8203333616256714, 0.8106666803359985, 0.8169999718666077, 0.8149999976158142, 0.8209999799728394, 0.8196666836738586, 0.8336666822433472, 0.8306666612625122, 0.8333333134651184, 0.8243333101272583, 0.8159999847412109, 0.8373333215713501, 0.8360000252723694, 0.8349999785423279, 0.8330000042915344, 0.8233333230018616, 0.8453333377838135, 0.8423333168029785, 0.8379999995231628, 0.8413333296775818, 0.8399999737739563, 0.8410000205039978]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 3, 39], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [35, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], [7, 3, 9, 3, 4, 7, 2, 4, 5, 8, 7, 2, 9], [0, 1, 1, 2, 2, 0, 6, 7], [0, 14, 18, 42], [1], [0], [1], [0]], "fitness": -0.7808571457862854, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 21, 13, 8, 4, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.math.square(tf.math.pow(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.pow(alpha, beta)), beta), tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(grad, tf.math.add(grad, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.075711965560913, 1.416710376739502, 0.9957621693611145, 0.8148165345191956, 0.7554575204849243, 0.7370050549507141, 0.6934940218925476, 0.7081815600395203, 0.6705554127693176, 0.6595932841300964, 0.6898879408836365, 0.7242829203605652, 0.7445300817489624], "accuracy": [0.3019416332244873, 0.5737683176994324, 0.6351869106292725, 0.6954167485237122, 0.7202483415603638, 0.7182670831680298, 0.7465327978134155, 0.7244749665260315, 0.748778223991394, 0.7577598690986633, 0.7412495017051697, 0.7290979027748108, 0.7384757399559021], "val_loss": [1.014414668083191, 0.9196979403495789, 0.7399969696998596, 0.6373724937438965, 0.6155489683151245, 0.5690760612487793, 0.5666512250900269, 0.5555756092071533, 0.5466870069503784, 0.5537290573120117, 0.5818990468978882, 0.5735335350036621, 0.6647970080375671], "val_accuracy": [0.6389999985694885, 0.6646666526794434, 0.722000002861023, 0.7516666650772095, 0.7646666765213013, 0.7753333449363708, 0.7540000081062317, 0.7866666913032532, 0.7823333144187927, 0.7773333191871643, 0.7739999890327454, 0.7793333530426025, 0.7526666522026062]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 5, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 3, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 0, 1], [16, 1, 77], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 15, 8, 7, 3, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303657293319702, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [86, 47, 61], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 8, 4], [1, 2, 0, 3, 0, 3, 3], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 9], [0, 1, 1, 2], [0, 18], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 15, 8, 7, 2, 6, 4, 2, 2, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3032703399658203, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 5, 3, 5], [0, 1, 1, 0, 2], [74, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [2, 5, 2, 6, 3, 5, 5, 4], [0, 1, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [7, 2, 0, 3, 4, 8, 5, 1, 5, 1, 5], [0, 1, 1, 2, 2, 1, 1], [0], [1], [0], [1], [0]], "fitness": -0.08914285898208618, "mapping_values": [1, 7, 4, 3, 1, 8, 4, 4, 2, 18, 11, 7, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha)), tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), tf.math.pow(tf.math.sqrt(tf.math.square(beta)), tf.math.subtract(tf.math.square(tf.math.subtract(tf.math.square(beta), alpha)), alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3104422092437744, 2.3092892169952393, 2.3105897903442383, 2.311082601547241, 2.3102455139160156, 2.309900999069214], "accuracy": [0.09021265059709549, 0.08928807079792023, 0.08981640636920929, 0.08677849918603897, 0.09074098616838455, 0.09206181764602661], "val_loss": [2.308424234390259, 2.308424234390259, 2.308424234390259, 2.308424234390259, 2.308424234390259, 2.308424234390259], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}]