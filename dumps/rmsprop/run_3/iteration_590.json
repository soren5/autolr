[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8182857036590576, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2145209312438965, 1.6159638166427612, 1.1755427122116089, 0.9848670959472656, 0.9224613904953003, 0.8372977375984192, 0.8053246140480042, 0.7705442905426025, 0.745644748210907, 0.7259060740470886, 0.6946181058883667, 0.6772514581680298, 0.6865178346633911, 0.6436178088188171, 0.6401776671409607, 0.6214466691017151, 0.6119533181190491, 0.6058247089385986, 0.5911287069320679, 0.5766944885253906, 0.5885857343673706, 0.5561932921409607, 0.5450676679611206, 0.5570608377456665, 0.5457717180252075, 0.5343805551528931, 0.533832848072052, 0.5219016671180725, 0.5123498439788818, 0.511093258857727, 0.5015239119529724, 0.500859797000885, 0.48947209119796753, 0.48795294761657715, 0.48053333163261414, 0.4721144735813141, 0.4746808111667633, 0.46126511693000793, 0.4577098488807678, 0.4692438542842865, 0.4475904703140259, 0.45176541805267334], "accuracy": [0.2611279785633087, 0.5050851702690125, 0.5906749367713928, 0.6487914323806763, 0.6660943031311035, 0.6934354901313782, 0.7062475085258484, 0.7195879220962524, 0.7177387475967407, 0.7317395210266113, 0.7440232634544373, 0.7493065595626831, 0.7367587089538574, 0.7643640041351318, 0.7644960880279541, 0.7707040309906006, 0.7790252566337585, 0.7729493975639343, 0.7808743715286255, 0.7869502305984497, 0.7803460359573364, 0.796328067779541, 0.7984414100646973, 0.796328067779541, 0.7961959838867188, 0.8033285140991211, 0.8020076751708984, 0.8057059645652771, 0.8101968169212341, 0.8124422430992126, 0.8185180425643921, 0.8132346868515015, 0.8210275769233704, 0.8211596608161926, 0.8241975903511047, 0.826310932636261, 0.8234050869941711, 0.8342359066009521, 0.8338396549224854, 0.8238013386726379, 0.8430854678153992, 0.8370096683502197], "val_loss": [1.9358352422714233, 1.099001169204712, 0.8873351216316223, 0.8166049718856812, 0.747914731502533, 0.7628898024559021, 0.6713143587112427, 0.6392459273338318, 0.6548873782157898, 0.6453624963760376, 0.5967544317245483, 0.6130738854408264, 0.5676385760307312, 0.5848237872123718, 0.5799800157546997, 0.5594375133514404, 0.5371932983398438, 0.5279213190078735, 0.5156972408294678, 0.5643531680107117, 0.521066427230835, 0.49352070689201355, 0.4909210503101349, 0.4990314245223999, 0.4766579568386078, 0.49078354239463806, 0.47705772519111633, 0.47505757212638855, 0.4785035252571106, 0.4655596613883972, 0.4886282682418823, 0.4546072483062744, 0.4531368017196655, 0.4583086371421814, 0.4419865310192108, 0.47959718108177185, 0.4372250437736511, 0.4347916543483734, 0.44205722212791443, 0.4387078881263733, 0.42419612407684326, 0.439553439617157], "val_accuracy": [0.5586666464805603, 0.6650000214576721, 0.7039999961853027, 0.7149999737739563, 0.7206666469573975, 0.706333339214325, 0.762333333492279, 0.7696666717529297, 0.7559999823570251, 0.7453333139419556, 0.7803333401679993, 0.7743333578109741, 0.7953333258628845, 0.7833333611488342, 0.7846666574478149, 0.7916666865348816, 0.7986666560173035, 0.8173333406448364, 0.8213333487510681, 0.7846666574478149, 0.8053333163261414, 0.824999988079071, 0.8296666741371155, 0.8193333148956299, 0.8296666741371155, 0.8330000042915344, 0.8303333520889282, 0.8316666483879089, 0.8190000057220459, 0.8389999866485596, 0.8243333101272583, 0.8370000123977661, 0.8330000042915344, 0.8366666436195374, 0.8420000076293945, 0.8133333325386047, 0.8523333072662354, 0.8486666679382324, 0.8373333215713501, 0.8410000205039978, 0.8523333072662354, 0.8460000157356262]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 2, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], [2, 2, 4, 6, 9, 5, 5, 4], [2, 2, 0, 3, 0, 3, 1], [6, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 2, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 5, 2, 3, 1, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 1, 0, 2], [26, 94, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [2, 2, 4, 6, 3, 5, 5, 4, 1, 3, 4, 8, 2, 5, 4, 9, 6, 0, 2, 3, 7, 6, 1, 8], [2, 2, 0, 4, 0, 3, 1, 2, 5, 0, 0, 1, 4, 5, 4, 4, 4], [16, 1, 81, 24, 49], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [12], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 41, 24, 17, 5, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, alpha)), tf.math.multiply(beta, tf.math.pow(tf.math.sqrt(tf.math.add(grad, tf.math.square(tf.math.pow(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), alpha), grad), tf.math.divide_no_nan(tf.math.subtract(grad, grad), grad))), tf.math.sqrt(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [30255.951171875, 4492893.0, 75678656.0, 543258560.0, 2366014976.0, 7678691328.0], "accuracy": [0.09906221181154251, 0.1014397069811821, 0.10117553919553757, 0.1022322028875351, 0.10342095047235489, 0.10566636174917221], "val_loss": [302238.34375, 16203706.0, 173754608.0, 946949696.0, 3546479872.0, 10460241920.0], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 4, 6, 3, 3, 5, 4, 6, 4], [2, 0, 3, 1, 0, 0, 0, 2, 0, 3], [52, 1, 64, 95, 8], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 7], [0], [1], [0], [1], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 11, 6, 5, 3, 20, 10, 10, 5, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.square(alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.divide_no_nan(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), beta)), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.309597969055176, 2.3094677925109863, 2.3076651096343994, 2.3047561645507812, 2.306628704071045, 2.3049421310424805, 2.3035478591918945, 2.3035895824432373, 2.3020730018615723, 2.30208420753479, 2.3029654026031494, 2.3023855686187744, 2.3023037910461426, 2.3020122051239014, 2.302443742752075], "accuracy": [0.09747721254825592, 0.09232597798109055, 0.0952318087220192, 0.1002509593963623, 0.09259014576673508, 0.09998679161071777, 0.09866596013307571, 0.09747721254825592, 0.09998679161071777, 0.10210011899471283, 0.09153348207473755, 0.09747721254825592, 0.09985470771789551, 0.09338264167308807, 0.09298639744520187], "val_loss": [2.308563709259033, 2.307267665863037, 2.306063175201416, 2.3051748275756836, 2.304487943649292, 2.3038535118103027, 2.303426742553711, 2.3030879497528076, 2.3029189109802246, 2.302816152572632, 2.302708625793457, 2.3026068210601807, 2.302501916885376, 2.3024370670318604, 2.3023910522460938], "val_accuracy": [0.09200000017881393, 0.09366666525602341, 0.0949999988079071, 0.0963333323597908, 0.09566666930913925, 0.09700000286102295, 0.09966666996479034, 0.10000000149011612, 0.1003333330154419, 0.10233332961797714, 0.10133333504199982, 0.10000000149011612, 0.09433333575725555, 0.09133332967758179, 0.08733333647251129]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 3, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [2, 2, 4, 4, 3, 5, 5, 4], [2, 2, 2, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 6, 3, 3, 2, 15, 8, 7, 1, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(beta, tf.math.multiply(beta, tf.math.square(tf.math.square(grad))))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.pow(grad, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.310148000717163, 2.3113434314727783, 2.309709310531616, 2.3109805583953857, 2.3095996379852295, 2.310631036758423], "accuracy": [0.08889182657003403, 0.08968432247638702, 0.09536388516426086, 0.09338264167308807, 0.0936468094587326, 0.08994849026203156], "val_loss": [2.3078925609588623, 2.3078925609588623, 2.3078925609588623, 2.3078925609588623, 2.3078925609588623, 2.3078925609588623], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]