[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.833142876625061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2098724842071533, 1.5964888334274292, 1.1386613845825195, 0.9776390194892883, 0.8714762330055237, 0.829582154750824, 0.8034807443618774, 0.7407782673835754, 0.7324113249778748, 0.6851780414581299, 0.666339635848999, 0.6601521968841553, 0.6480332016944885, 0.6233744621276855, 0.6179583072662354, 0.6109445095062256, 0.5879032611846924, 0.5955392718315125, 0.5607609152793884, 0.5634002089500427, 0.5519549250602722, 0.5397108793258667, 0.5288506150245667, 0.529000997543335, 0.5211026668548584, 0.5154291391372681, 0.5078778266906738, 0.49527156352996826, 0.49552786350250244, 0.48813432455062866, 0.48112818598747253, 0.4809354245662689, 0.4834508001804352, 0.4701216518878937, 0.4619145691394806, 0.46176764369010925, 0.4583453834056854, 0.44910112023353577], "accuracy": [0.27922335267066956, 0.511821448802948, 0.6004490852355957, 0.6514331102371216, 0.6770572066307068, 0.6977941989898682, 0.7066437602043152, 0.7272487282752991, 0.7296261787414551, 0.7384757399559021, 0.7515519857406616, 0.7540615797042847, 0.7577598690986633, 0.7642319202423096, 0.7637035846710205, 0.7692511081695557, 0.7766477465629578, 0.7734777331352234, 0.7901201844215393, 0.7820631265640259, 0.7984414100646973, 0.8004226684570312, 0.802271842956543, 0.8006868362426758, 0.805177628993988, 0.8083476424217224, 0.811649739742279, 0.8168009519577026, 0.8129705190658569, 0.8124422430992126, 0.8214238286018372, 0.8197067975997925, 0.8173292875289917, 0.8249900937080383, 0.8304054737091064, 0.8248580098152161, 0.8272355198860168, 0.8364813327789307], "val_loss": [1.9208368062973022, 1.1151015758514404, 0.9231542944908142, 0.8640326261520386, 0.7161056399345398, 0.7241498231887817, 0.6552374958992004, 0.6400806903839111, 0.6203162670135498, 0.6008725762367249, 0.5810128450393677, 0.6140867471694946, 0.5729517340660095, 0.6346883177757263, 0.5548831224441528, 0.5444127917289734, 0.5297490954399109, 0.5353647470474243, 0.5296446681022644, 0.5097612738609314, 0.5012000203132629, 0.5024828314781189, 0.5097998976707458, 0.4879477620124817, 0.49591299891471863, 0.4758448004722595, 0.481905072927475, 0.47032982110977173, 0.4793725311756134, 0.46785441040992737, 0.4765777885913849, 0.46894916892051697, 0.4571988880634308, 0.46120840311050415, 0.4691823422908783, 0.46225836873054504, 0.4586348533630371, 0.45201000571250916], "val_accuracy": [0.5993333458900452, 0.6489999890327454, 0.6726666688919067, 0.6809999942779541, 0.7356666922569275, 0.7433333396911621, 0.7593333125114441, 0.7570000290870667, 0.7603333592414856, 0.7749999761581421, 0.7846666574478149, 0.7613333463668823, 0.7953333258628845, 0.7453333139419556, 0.7916666865348816, 0.7940000295639038, 0.8036666512489319, 0.8033333420753479, 0.8073333501815796, 0.8213333487510681, 0.8149999976158142, 0.8256666660308838, 0.8149999976158142, 0.8233333230018616, 0.8159999847412109, 0.8316666483879089, 0.8266666531562805, 0.8373333215713501, 0.828000009059906, 0.8343333601951599, 0.8213333487510681, 0.8330000042915344, 0.8410000205039978, 0.8360000252723694, 0.8326666951179504, 0.8286666870117188, 0.8333333134651184, 0.8333333134651184]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 1, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 1, 7, 0, 5, 5, 4], [1, 2, 0, 2, 0, 3, 1], [16, 1], [0, 1, 0, 1, 0, 1, 1, 1], [7, 7, 0, 2], [0, 1, 1, 4], [0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 1, 1, 8, 4], [1, 5, 6, 6, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 12, 8, 4, 2, 6, 3, 3, 1, 11, 6, 5, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.sqrt(alpha), grad), tf.math.pow(grad, grad)), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 2, 3, 1, 3, 5], [2, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 8, 7, 1, 5, 5, 4], [1, 2, 1, 0, 0, 3, 1], [77, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 3, 0, 2, 2, 2, 7, 9, 1, 5], [0, 1, 1, 2, 2, 1, 7], [0, 5], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 12, 8, 4, 2, 17, 10, 7, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.subtract(alpha, tf.math.square(beta)), tf.math.square(tf.math.pow(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(alpha, beta))), beta)), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.square(alpha), grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08030643314123154, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [2, 9, 7, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0], [7, 3, 0, 2, 4, 9], [0, 1, 1, 4], [0, 10], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 3, 2, 1, 1, 10, 6, 4, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha)), grad), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 1, 1], [26, 46, 39], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 1, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 43], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [7, 3, 0, 2, 2], [0, 1, 1, 6, 3], [0], [1], [0], [1], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 10, 5, 5, 2, 1, 0, 1, 0, 10, 5, 5, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, alpha))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, alpha), grad)), sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3100314140319824, 2.309915542602539, 2.308941125869751, 2.3096728324890137, 2.3101706504821777, 2.3100833892822266], "accuracy": [0.09034473448991776, 0.09272222965955734, 0.09245806187391281, 0.09166556596755981, 0.08942015469074249, 0.09008057415485382], "val_loss": [2.309333086013794, 2.309333086013794, 2.309333086013794, 2.309333086013794, 2.309333086013794, 2.309333086013794], "val_accuracy": [0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337]}}]