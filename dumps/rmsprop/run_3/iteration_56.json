[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8488571643829346, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.20965838432312, 1.605275273323059, 1.174899697303772, 0.9858217835426331, 0.8854502439498901, 0.8390660285949707, 0.7964760661125183, 0.7493116855621338, 0.7368370890617371, 0.7423945665359497, 0.6912937164306641, 0.652807354927063, 0.6722995042800903, 0.6303475499153137, 0.638758659362793, 0.6335452795028687, 0.6118106245994568, 0.5839931964874268, 0.6074797511100769, 0.5692148208618164, 0.5713926553726196, 0.5606203079223633, 0.5617382526397705, 0.5447259545326233, 0.5329451560974121, 0.5268599390983582, 0.5340890884399414, 0.513875424861908, 0.5041987299919128, 0.5130024552345276, 0.494832307100296, 0.49036717414855957, 0.4784986972808838, 0.4866924583911896, 0.47488248348236084, 0.47904762625694275, 0.46592438220977783, 0.45425689220428467, 0.45789527893066406, 0.4461337625980377, 0.46881693601608276, 0.44601550698280334, 0.44031885266304016, 0.44752898812294006, 0.4237683117389679, 0.4238412082195282, 0.4305957853794098, 0.42562389373779297, 0.4144071340560913, 0.4031882882118225, 0.4081343710422516, 0.40373241901397705, 0.4025316536426544, 0.39863044023513794, 0.4013623595237732, 0.39603057503700256, 0.3858937621116638, 0.37867599725723267, 0.38853347301483154, 0.3791296184062958, 0.38104328513145447], "accuracy": [0.27380794286727905, 0.49848103523254395, 0.5904107689857483, 0.6441685557365417, 0.6736230254173279, 0.6915863156318665, 0.7107383608818054, 0.7235503792762756, 0.7215691208839417, 0.7257958054542542, 0.744419515132904, 0.7537974119186401, 0.7428345084190369, 0.76106196641922, 0.7605336308479309, 0.7605336308479309, 0.7684586048126221, 0.7832518815994263, 0.7713643908500671, 0.7872143983840942, 0.7841764688491821, 0.7869502305984497, 0.785629391670227, 0.7952714562416077, 0.8018755912780762, 0.8061022162437439, 0.7924976944923401, 0.8094043135643005, 0.8152159452438354, 0.809140145778656, 0.8157442808151245, 0.8182538747787476, 0.8231409192085266, 0.8165367841720581, 0.8222163319587708, 0.8197067975997925, 0.8285563588142395, 0.8327829837799072, 0.8318583965301514, 0.8350284099578857, 0.8256505131721497, 0.8327829837799072, 0.8381983637809753, 0.830669641494751, 0.8444063067436218, 0.8425571322441101, 0.8422929644584656, 0.8389908671379089, 0.846387505531311, 0.848368763923645, 0.8449346423149109, 0.8486329317092896, 0.8486329317092896, 0.852331280708313, 0.8451988101005554, 0.8479725122451782, 0.8595958352088928, 0.8597279191017151, 0.8549728989601135, 0.86118084192276, 0.8515387773513794], "val_loss": [1.9230862855911255, 1.0929569005966187, 0.8973206281661987, 0.804622232913971, 0.7767345309257507, 0.6857672333717346, 0.6721967458724976, 0.6734874844551086, 0.6915271878242493, 0.6241103410720825, 0.6087749600410461, 0.5950765609741211, 0.5749830603599548, 0.5841686725616455, 0.5530827641487122, 0.5793383121490479, 0.5353695750236511, 0.5145910382270813, 0.5285325646400452, 0.5221818685531616, 0.5045897364616394, 0.5228636264801025, 0.5050208568572998, 0.492615282535553, 0.5042333006858826, 0.48819345235824585, 0.47438427805900574, 0.4683537483215332, 0.4591546952724457, 0.4624483585357666, 0.45263615250587463, 0.45954930782318115, 0.460252970457077, 0.47306180000305176, 0.44545361399650574, 0.4519936442375183, 0.4357885718345642, 0.4363263249397278, 0.4398147761821747, 0.4561229944229126, 0.43614399433135986, 0.4212207794189453, 0.43167099356651306, 0.4146358370780945, 0.41952022910118103, 0.42774438858032227, 0.4073605239391327, 0.40770068764686584, 0.41299423575401306, 0.40159663558006287, 0.405976265668869, 0.4202680289745331, 0.40908488631248474, 0.4110962748527527, 0.3965720534324646, 0.38916847109794617, 0.3874070346355438, 0.3962351977825165, 0.4036594331264496, 0.39962854981422424, 0.390293687582016], "val_accuracy": [0.4936666786670685, 0.6496666669845581, 0.6783333420753479, 0.690666675567627, 0.7013333439826965, 0.7403333187103271, 0.7459999918937683, 0.7223333120346069, 0.7160000205039978, 0.7713333368301392, 0.7720000147819519, 0.7730000019073486, 0.7853333353996277, 0.7749999761581421, 0.7973333597183228, 0.7603333592414856, 0.79666668176651, 0.8023333549499512, 0.8036666512489319, 0.8069999814033508, 0.8106666803359985, 0.800000011920929, 0.8059999942779541, 0.8190000057220459, 0.8169999718666077, 0.8166666626930237, 0.8213333487510681, 0.8266666531562805, 0.8306666612625122, 0.8299999833106995, 0.8323333263397217, 0.8296666741371155, 0.8230000138282776, 0.8226666450500488, 0.8336666822433472, 0.8286666870117188, 0.8383333086967468, 0.8386666774749756, 0.8343333601951599, 0.8299999833106995, 0.8413333296775818, 0.8443333506584167, 0.8323333263397217, 0.8473333120346069, 0.8423333168029785, 0.8450000286102295, 0.8506666421890259, 0.8526666760444641, 0.8503333330154419, 0.8546666502952576, 0.847000002861023, 0.8426666855812073, 0.8533333539962769, 0.8500000238418579, 0.8579999804496765, 0.8633333444595337, 0.8613333106040955, 0.8573333621025085, 0.8496666550636292, 0.8519999980926514, 0.8603333234786987]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8302857279777527, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2118473052978516, 1.6008859872817993, 1.1450831890106201, 0.9597310423851013, 0.9015222787857056, 0.8443015217781067, 0.7818948030471802, 0.7620111107826233, 0.7309568524360657, 0.7160826921463013, 0.6775166392326355, 0.6665412187576294, 0.6368963122367859, 0.6449994444847107, 0.616553783416748, 0.6055896282196045, 0.6011754274368286, 0.5765491724014282, 0.5609810948371887, 0.5739018321037292, 0.5477126836776733, 0.5504289865493774, 0.5298685431480408, 0.522811233997345, 0.5178117156028748, 0.5206161141395569, 0.5135385990142822, 0.5085712671279907, 0.5014805197715759, 0.4867691099643707, 0.4759802520275116, 0.4954977333545685, 0.47360318899154663, 0.46787574887275696, 0.47319576144218445, 0.45003125071525574, 0.44304323196411133, 0.4487728178501129, 0.45052334666252136, 0.44498997926712036, 0.43196332454681396, 0.4347614645957947, 0.421936959028244, 0.41878601908683777, 0.4127509593963623, 0.41203534603118896], "accuracy": [0.2616563141345978, 0.5071985125541687, 0.598599910736084, 0.6518293619155884, 0.6779817938804626, 0.6843217611312866, 0.713379979133606, 0.7154933214187622, 0.7306828498840332, 0.7321357727050781, 0.7495707273483276, 0.7531369924545288, 0.7633073329925537, 0.7574957013130188, 0.7676661014556885, 0.7741381525993347, 0.774798572063446, 0.7868181467056274, 0.791969358921051, 0.7848368883132935, 0.8013472557067871, 0.7942147850990295, 0.8009510040283203, 0.802271842956543, 0.8090080618858337, 0.8070268034934998, 0.8083476424217224, 0.8131026029586792, 0.8141592741012573, 0.8132346868515015, 0.8222163319587708, 0.8156121969223022, 0.8310658931732178, 0.8322546482086182, 0.8265751004219055, 0.837141752243042, 0.8392550349235535, 0.834632158279419, 0.8363492488861084, 0.8355567455291748, 0.8421608805656433, 0.8412362933158875, 0.848368763923645, 0.845859169960022, 0.8527275323867798, 0.8477083444595337], "val_loss": [1.9277706146240234, 1.1625460386276245, 0.9071717858314514, 0.8669955134391785, 0.7212982773780823, 0.7039229273796082, 0.6846578121185303, 0.6733387112617493, 0.6352441310882568, 0.624544084072113, 0.6123946309089661, 0.5924338102340698, 0.5850324034690857, 0.593490481376648, 0.6013554930686951, 0.584674596786499, 0.5839062929153442, 0.5430817008018494, 0.5460814833641052, 0.5317219495773315, 0.5315238237380981, 0.5232682228088379, 0.5210849046707153, 0.522336483001709, 0.5112175941467285, 0.5000773668289185, 0.496155709028244, 0.5064535737037659, 0.49296459555625916, 0.48421740531921387, 0.47439897060394287, 0.49347633123397827, 0.48293423652648926, 0.5464344620704651, 0.4884965121746063, 0.4667710065841675, 0.4636707305908203, 0.46076855063438416, 0.461270272731781, 0.46047160029411316, 0.45140209794044495, 0.44848552346229553, 0.4519053101539612, 0.44763994216918945, 0.45339852571487427, 0.4800717830657959], "val_accuracy": [0.5440000295639038, 0.612333357334137, 0.6700000166893005, 0.6866666674613953, 0.737333357334137, 0.7353333234786987, 0.7423333525657654, 0.7559999823570251, 0.7683333158493042, 0.768666684627533, 0.7696666717529297, 0.7883333563804626, 0.7739999890327454, 0.7953333258628845, 0.7710000276565552, 0.7873333096504211, 0.7693333625793457, 0.7996666431427002, 0.7923333048820496, 0.8059999942779541, 0.8023333549499512, 0.8090000152587891, 0.8130000233650208, 0.8016666769981384, 0.8116666674613953, 0.8183333277702332, 0.8243333101272583, 0.8223333358764648, 0.8209999799728394, 0.8236666917800903, 0.8356666564941406, 0.8240000009536743, 0.8383333086967468, 0.7863333225250244, 0.8196666836738586, 0.8360000252723694, 0.8403333425521851, 0.8363333344459534, 0.8403333425521851, 0.8393333554267883, 0.8473333120346069, 0.8463333249092102, 0.8423333168029785, 0.847000002861023, 0.8399999737739563, 0.8216666579246521]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 9, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1, 1], [2, 7], [0, 6, 4], [0], [1], [0], [7], [0]], "fitness": -0.7988571524620056, "mapping_values": [1, 4, 2, 2, 2, 4, 2, 2, 1, 5, 2, 3, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3126232624053955, 2.3441567420959473, 2.3993425369262695, 2.2776451110839844, 2.024557590484619, 2.023994207382202, 1.4730637073516846, 1.4717077016830444, 1.1512073278427124, 1.1659905910491943, 0.9631774425506592, 0.8556753396987915, 0.7833890318870544, 0.7868210673332214, 0.7277809381484985, 0.6938514709472656, 0.7155323624610901, 0.6689950823783875, 0.6288692951202393, 0.6890857219696045, 0.5691300630569458, 0.5652709603309631, 0.5460607409477234], "accuracy": [0.1838594675064087, 0.19799233973026276, 0.1220446452498436, 0.15902787446975708, 0.2810725271701813, 0.29679039120674133, 0.5399550795555115, 0.5130101442337036, 0.6218464970588684, 0.6129969358444214, 0.6606789231300354, 0.6975300312042236, 0.7170783281326294, 0.7214370369911194, 0.7397965788841248, 0.7442874312400818, 0.7409853339195251, 0.7569673657417297, 0.763967752456665, 0.7470611333847046, 0.7884030938148499, 0.793422281742096, 0.7931581139564514], "val_loss": [2.2961626052856445, 2.8885135650634766, 2.3025195598602295, 2.2562453746795654, 1.509980320930481, 1.3754538297653198, 1.5941166877746582, 1.0688841342926025, 1.0548994541168213, 0.7541412711143494, 0.7405447363853455, 0.7370237112045288, 0.7089966535568237, 0.6437100172042847, 0.6027588844299316, 0.6089499592781067, 0.5973840355873108, 0.5431519150733948, 0.785450279712677, 0.5514777898788452, 0.5781608819961548, 0.5086168646812439, 0.5040245056152344], "val_accuracy": [0.11100000143051147, 0.2136666625738144, 0.10000000149011612, 0.22499999403953552, 0.46566668152809143, 0.5496666431427002, 0.5846666693687439, 0.6243333220481873, 0.6696666479110718, 0.7256666421890259, 0.7310000061988831, 0.6896666884422302, 0.7266666889190674, 0.7683333158493042, 0.7786666750907898, 0.7806666493415833, 0.7766666412353516, 0.8069999814033508, 0.7066666483879089, 0.7893333435058594, 0.7906666398048401, 0.8026666641235352, 0.8009999990463257]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [2, 2, 3, 1, 7, 5], [0, 0, 1, 0, 1, 1], [69, 39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 7, 8, 9], [2, 5, 4, 1, 3], [16, 1], [1, 0, 1, 1], [0, 7], [6, 6], [0], [1], [0], [2], [0]], "fitness": -0.28114286065101624, "mapping_values": [1, 12, 6, 6, 3, 5, 3, 2, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), grad)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302574872970581, 2.280942916870117, 2.302039623260498, 2.2209854125976562, 2.2634024620056152, 2.339482069015503, 2.3053817749023438, 2.3035268783569336, 2.3029141426086426, 2.302229881286621], "accuracy": [0.1970677524805069, 0.18835029006004333, 0.12442214041948318, 0.15229164063930511, 0.16338661313056946, 0.19376568496227264, 0.09747721254825592, 0.09628847241401672, 0.09972262382507324, 0.1080438494682312], "val_loss": [2.2973275184631348, 2.3156447410583496, 2.166534423828125, 2.3020756244659424, 2.178400993347168, 2.306044340133667, 2.303213119506836, 2.302481174468994, 2.302138328552246, 2.300262928009033], "val_accuracy": [0.1850000023841858, 0.10000000149011612, 0.18733333051204681, 0.12966667115688324, 0.2826666533946991, 0.10433333367109299, 0.10433333367109299, 0.09666666388511658, 0.10066666454076767, 0.1066666692495346]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 8, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 7, 0, 6, 3, 3, 2, 3, 8], [3, 3, 3, 1, 0, 0, 1], [16, 1], [0, 1, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 16, 9, 7, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.multiply(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08836349099874496, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5, 8, 2, 1, 4, 1, 3, 9, 6, 4, 0, 1, 1, 0, 3, 9, 4, 4, 3, 2, 8, 0, 2, 6, 8, 4, 4, 9, 7, 5, 7, 0, 1, 1, 2, 2, 1, 4, 6, 4, 8, 8, 3, 5, 1, 5, 8, 4, 9, 8, 7, 8, 5, 2, 3, 3, 2, 5], [1, 0, 0, 0, 2, 3, 0, 3, 3, 2, 2, 3, 3, 3, 1, 2, 2, 2, 0, 2, 3, 2, 2, 1, 1, 2, 3, 3, 1, 1, 0, 3, 0, 3, 3, 2, 2], [55, 39, 39, 19, 27, 75, 28, 57, 10, 61, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 4, 0], [2, 5, 3, 2, 0], [16, 15], [0, 0, 1, 1], [0, 7], [0, 6], [0], [0, 0, 0, 1, 1], [0, 7, 8], [2, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 100, 63, 37, 11, 13, 8, 5, 1, 4, 2, 2, 1, 5, 3, 2, 0], "tree_depth": 39, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(alpha, tf.math.square(tf.math.sqrt(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.math.subtract(grad, tf.math.negative(tf.math.multiply(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), grad)))))), grad), tf.math.pow(tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.pow(tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), grad), grad)), tf.math.add(tf.math.square(grad), grad)))), tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.subtract(grad, tf.math.add(tf.math.add(grad, grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.pow(tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(grad), tf.math.sqrt(grad)), tf.math.multiply(tf.math.square(grad), grad)), alpha), alpha))))), grad), tf.math.subtract(tf.math.square(tf.math.sqrt(tf.math.pow(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, tf.math.sqrt(grad)))))), alpha))), alpha), tf.math.square(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))), tf.math.multiply(tf.math.add(grad, grad), grad)), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(tf.math.pow(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(beta), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08070268481969833, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]