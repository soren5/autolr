[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8077142834663391, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.208946943283081, 1.588697910308838, 1.1439684629440308, 0.9871996641159058, 0.8763734698295593, 0.8383358716964722, 0.803895890712738, 0.7541677355766296, 0.7327466011047363, 0.7234776616096497, 0.6872718930244446, 0.6651108860969543, 0.6551452875137329, 0.6447048783302307, 0.631039559841156, 0.6147494316101074, 0.5978509783744812, 0.5861790776252747, 0.5796203017234802, 0.5605857372283936, 0.562231719493866, 0.549017071723938, 0.5485826730728149, 0.5360965728759766, 0.5309551358222961, 0.5187899470329285, 0.5075975060462952, 0.5127094388008118, 0.49667027592658997, 0.5085405111312866, 0.49880555272102356, 0.47312599420547485, 0.4744729995727539, 0.4840872287750244, 0.4645163118839264, 0.4619927704334259, 0.4643245041370392, 0.4518161714076996, 0.45837852358818054, 0.44918763637542725, 0.4396292567253113, 0.44476237893104553, 0.43425145745277405, 0.43912848830223083, 0.414965957403183], "accuracy": [0.266939640045166, 0.520671010017395, 0.6037511825561523, 0.6510368585586548, 0.6852463483810425, 0.6888125538825989, 0.7020208835601807, 0.7248712182044983, 0.7292299270629883, 0.7301545143127441, 0.7395324110984802, 0.7449478507041931, 0.7532690763473511, 0.7584202885627747, 0.7663452625274658, 0.7684586048126221, 0.7783648371696472, 0.7862898111343384, 0.7792893648147583, 0.791969358921051, 0.7931581139564514, 0.7991018295288086, 0.7890635132789612, 0.8025360107421875, 0.8026680946350098, 0.8074230551719666, 0.8090080618858337, 0.8112534880638123, 0.8088759779930115, 0.8124422430992126, 0.8142913579940796, 0.8257825970649719, 0.8231409192085266, 0.8178576231002808, 0.8253863453865051, 0.8277638554573059, 0.8290846943855286, 0.8345000743865967, 0.8293488025665283, 0.8356888294219971, 0.8403117060661316, 0.8379341959953308, 0.8396512866020203, 0.8358209133148193, 0.8487650156021118], "val_loss": [1.915827751159668, 1.1060792207717896, 0.9044857025146484, 0.8100120425224304, 0.7399327158927917, 0.7437694668769836, 0.6544077396392822, 0.6174926161766052, 0.6762931942939758, 0.6143747568130493, 0.6279276609420776, 0.5575296878814697, 0.570356011390686, 0.5523929595947266, 0.5626192092895508, 0.553731381893158, 0.5549902319908142, 0.5126610398292542, 0.5032473802566528, 0.49899470806121826, 0.4833908975124359, 0.49019336700439453, 0.47932642698287964, 0.4813239872455597, 0.47654157876968384, 0.49163174629211426, 0.4591916799545288, 0.47505998611450195, 0.4704948365688324, 0.47811490297317505, 0.4563240706920624, 0.45476970076560974, 0.47436922788619995, 0.45730268955230713, 0.4509226977825165, 0.4578486680984497, 0.4296054244041443, 0.42151904106140137, 0.42333507537841797, 0.4138965308666229, 0.4405008554458618, 0.41698405146598816, 0.4126908779144287, 0.42063188552856445, 0.41292062401771545], "val_accuracy": [0.596666693687439, 0.6463333368301392, 0.6679999828338623, 0.6983333230018616, 0.7136666774749756, 0.6926666498184204, 0.7486666440963745, 0.7580000162124634, 0.7336666584014893, 0.746666669845581, 0.7423333525657654, 0.7806666493415833, 0.778333306312561, 0.7883333563804626, 0.7613333463668823, 0.784333348274231, 0.7749999761581421, 0.7983333468437195, 0.8033333420753479, 0.8040000200271606, 0.8086666464805603, 0.8130000233650208, 0.812333345413208, 0.8149999976158142, 0.8149999976158142, 0.8100000023841858, 0.8216666579246521, 0.809333324432373, 0.8193333148956299, 0.8073333501815796, 0.8209999799728394, 0.8273333311080933, 0.8073333501815796, 0.8176666498184204, 0.8246666789054871, 0.8236666917800903, 0.8336666822433472, 0.8356666564941406, 0.8333333134651184, 0.843999981880188, 0.8296666741371155, 0.8399999737739563, 0.8429999947547913, 0.8366666436195374, 0.8403333425521851]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [3, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [2, 9, 9, 7, 0, 5, 5, 4], [0, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [7, 3, 0, 2, 0, 2, 9], [4, 1, 6, 4], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 3, 3, 0, 2, 11, 7, 4, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.add(alpha, grad))), tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [109.72974395751953, 12189.6435546875, 210997.96875, 1479893.875, 6505609.5, 21176404.0], "accuracy": [0.09893012791872025, 0.10328886657953262, 0.09853387624025345, 0.09932637959718704, 0.09893012791872025, 0.09602430462837219], "val_loss": [926.2162475585938, 45833.94140625, 487386.5, 2649647.0, 9912785.0, 29220990.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 6, 1, 3, 5], [0, 1, 1, 3, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 3, 2, 7, 1, 0, 4, 3, 4, 3, 1, 8, 6, 8, 4, 7], [1, 2, 0, 1, 0, 3, 1, 3, 1, 2, 0, 3, 5, 5, 2, 0], [16, 1, 46, 26], [0, 0, 0, 1, 0, 1, 1, 1], [0, 8, 1, 5], [7, 1, 1, 4], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 36, 20, 16, 4, 6, 4, 2, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.math.add(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.math.negative(alpha))), tf.math.pow(tf.math.multiply(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.math.sqrt(tf.math.divide_no_nan(grad, alpha)), tf.math.sqrt(beta)), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, grad)), grad), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.subtract(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10434553027153015, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [9, 5, 3, 2, 8, 5], [1, 0, 1, 1, 2], [0, 39, 24], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [5, 1, 0, 4, 0, 3, 1], [16, 1], [0, 1, 1, 1], [0, 7], [0, 1, 1, 4], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 3, 2, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 6, 7, 5, 7, 8, 0, 7, 5], [0, 0, 1, 0, 2, 3, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 9, 3, 8, 2], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [7, 3, 0, 2, 7, 0, 4, 7], [0, 4, 7, 5, 4, 1, 2], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 11, 7, 3, 5, 4, 1, 1, 15, 8, 7, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.math.add(tf.math.sqrt(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.negative(grad))), tf.math.add(tf.math.square(grad), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad)), tf.math.negative(tf.math.pow(grad, grad))), tf.math.add(alpha, beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]