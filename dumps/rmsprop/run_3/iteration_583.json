[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8102856874465942, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2130930423736572, 1.6140846014022827, 1.1518579721450806, 0.9742703437805176, 0.8634481430053711, 0.8366467952728271, 0.771048903465271, 0.7586292028427124, 0.7235336303710938, 0.7197527885437012, 0.6672267913818359, 0.6517619490623474, 0.6477068662643433, 0.6516052484512329, 0.6203469634056091, 0.6126308441162109, 0.5856673717498779, 0.5908871293067932, 0.5741528868675232, 0.5619837641716003, 0.5435066819190979, 0.5433210134506226, 0.5462362766265869, 0.5357792377471924, 0.5262970328330994, 0.5154470205307007, 0.5121106505393982, 0.49973589181900024, 0.5104034543037415, 0.5011441707611084, 0.4869300127029419, 0.4750014543533325, 0.4778558313846588, 0.4737545847892761, 0.4585757553577423, 0.45379769802093506, 0.4705590009689331, 0.4740043580532074, 0.4529741406440735, 0.4512005150318146, 0.43742239475250244, 0.4452652037143707, 0.4330194890499115, 0.4339892864227295], "accuracy": [0.2631092369556427, 0.5031039714813232, 0.5915995240211487, 0.6513010263442993, 0.6989829540252686, 0.6913221478462219, 0.7168141603469849, 0.7149649858474731, 0.7281733155250549, 0.7269845604896545, 0.748778223991394, 0.755118191242218, 0.7572315335273743, 0.7534011602401733, 0.7667415142059326, 0.7689869403839111, 0.7833839654922485, 0.7734777331352234, 0.7833839654922485, 0.7864218950271606, 0.7926297783851624, 0.7979130744934082, 0.7960638999938965, 0.7948752045631409, 0.8006868362426758, 0.8041210174560547, 0.806630551815033, 0.8181217908859253, 0.8105930685997009, 0.8137630224227905, 0.8168009519577026, 0.8259146809577942, 0.8228767514228821, 0.8198388814926147, 0.8252542614936829, 0.8304054737091064, 0.8211596608161926, 0.8193105459213257, 0.8337075710296631, 0.8359529972076416, 0.8399154543876648, 0.8321225643157959, 0.8392550349235535, 0.8392550349235535], "val_loss": [1.9284316301345825, 1.1141343116760254, 0.8733263611793518, 0.7668069005012512, 0.749383807182312, 0.729149580001831, 0.6616839170455933, 0.6396068334579468, 0.6414235234260559, 0.6017866134643555, 0.5838135480880737, 0.5954673290252686, 0.5692887902259827, 0.5470158457756042, 0.5573977828025818, 0.5344877243041992, 0.5449197292327881, 0.5379807949066162, 0.5425546169281006, 0.5072186589241028, 0.4984204173088074, 0.5139868259429932, 0.4851236045360565, 0.4992723762989044, 0.49083635210990906, 0.5140341520309448, 0.4669073522090912, 0.46835774183273315, 0.49660465121269226, 0.47737210988998413, 0.452259361743927, 0.45138654112815857, 0.44921639561653137, 0.4504992961883545, 0.44701480865478516, 0.4398585557937622, 0.4435080885887146, 0.46687281131744385, 0.4365801215171814, 0.44082820415496826, 0.4312003254890442, 0.42667117714881897, 0.42530277371406555, 0.4286251366138458], "val_accuracy": [0.5270000100135803, 0.6346666812896729, 0.6886666417121887, 0.715666651725769, 0.7149999737739563, 0.7153333425521851, 0.7546666860580444, 0.7419999837875366, 0.7536666393280029, 0.7696666717529297, 0.7749999761581421, 0.7646666765213013, 0.7906666398048401, 0.7893333435058594, 0.7799999713897705, 0.8006666898727417, 0.7903333306312561, 0.7916666865348816, 0.7883333563804626, 0.8013333082199097, 0.8090000152587891, 0.793666660785675, 0.812333345413208, 0.8053333163261414, 0.8180000185966492, 0.7990000247955322, 0.8203333616256714, 0.8216666579246521, 0.8066666722297668, 0.8096666932106018, 0.8316666483879089, 0.8309999704360962, 0.8256666660308838, 0.8299999833106995, 0.8303333520889282, 0.8383333086967468, 0.8223333358764648, 0.8186666369438171, 0.8399999737739563, 0.8333333134651184, 0.8330000042915344, 0.8396666646003723, 0.8386666774749756, 0.8363333344459534]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 2], [16, 1], [1, 0, 0, 1, 1, 1, 1, 0], [7, 3, 0, 3], [0, 1, 2, 6], [42], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 5, 3, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303542137145996, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 3, 3, 2], [26, 62, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0], [2, 2, 4, 6, 3, 5, 5, 4, 7, 2, 6, 9], [1, 2, 4, 4, 0, 3, 1, 4, 4], [16, 1, 55], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [7, 3, 0, 5, 5, 3, 8, 3], [0, 1, 7, 2, 0], [0, 37], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 13, 7, 6, 1, 13, 8, 5, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.multiply(beta, grad), grad)), tf.math.square(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.square(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))), alpha), tf.math.multiply(tf.math.sqrt(grad), tf.math.multiply(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [6.45182428062679e+19, 6.799466133117676, 21.534109115600586, 43.37063980102539, 71.96688842773438, 107.42432403564453], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.142273426055908, 14.345061302185059, 33.327091217041016, 59.17353057861328, 91.78421020507812, 131.21197509765625], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [6, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [0, 92, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [2, 2, 4, 6, 3, 3, 5, 4], [2, 0, 3, 2, 0, 4, 4], [24, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [7, 3, 0, 3, 2, 0, 0, 9], [0, 6, 7, 1], [0, 66], [1], [0], [1], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 1, 0, 1, 1, 14, 7, 7, 2, 12, 8, 4, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.multiply(tf.math.square(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad)), tf.math.multiply(grad, tf.math.add(tf.math.negative(tf.math.negative(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.309244155883789, 2.310059070587158, 2.310854196548462, 2.3106000423431396, 2.3098831176757812, 2.309832811355591], "accuracy": [0.08994849026203156, 0.08955223858356476, 0.09615638852119446, 0.09681680053472519, 0.09272222965955734, 0.09351472556591034], "val_loss": [2.3090827465057373, 2.3090827465057373, 2.3090827465057373, 2.3090827465057373, 2.3090827465057373, 2.3090827465057373], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 1, 2], [26, 75, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [39, 1], [1, 0, 0, 1, 0, 1, 1, 1], [0, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 11, 6, 5, 2, 15, 8, 7, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(alpha), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3108255863189697, 2.309016227722168, 2.3096487522125244, 2.3107364177703857, 2.3104488849639893, 2.310539484024048], "accuracy": [0.09259014576673508, 0.09457138925790787, 0.09906221181154251, 0.09219389408826828, 0.09100515395402908, 0.09113723784685135], "val_loss": [2.3086791038513184, 2.3086791038513184, 2.3086791038513184, 2.3086791038513184, 2.3086791038513184, 2.3086791038513184], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}]