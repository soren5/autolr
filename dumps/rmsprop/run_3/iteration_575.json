[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8277142643928528, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2110352516174316, 1.6031566858291626, 1.1371902227401733, 1.0154751539230347, 0.8720769286155701, 0.8305037021636963, 0.802810549736023, 0.7702242136001587, 0.7212362289428711, 0.7037118673324585, 0.7019075155258179, 0.6694929003715515, 0.6724238991737366, 0.6585924625396729, 0.6345232129096985, 0.6239481568336487, 0.6164101362228394, 0.5884536504745483, 0.5988841652870178, 0.5804028511047363, 0.5750010013580322, 0.5621994733810425, 0.543741762638092, 0.5585702657699585, 0.5451521873474121, 0.5403327345848083, 0.5188716053962708, 0.5199321508407593, 0.5154227018356323, 0.5073019862174988, 0.5031196475028992, 0.48844558000564575, 0.4804939329624176, 0.49622461199760437, 0.4818013310432434, 0.474114328622818, 0.46244901418685913, 0.4749314486980438, 0.4640539288520813, 0.4697624742984772, 0.4606795310974121, 0.4555690884590149, 0.4538930356502533, 0.4446178376674652, 0.43684887886047363, 0.43701082468032837, 0.43023207783699036, 0.4271356761455536, 0.426699161529541, 0.4245888590812683, 0.4209877550601959, 0.41326719522476196, 0.4199945330619812, 0.40629294514656067, 0.40760937333106995, 0.3976554870605469, 0.4023401141166687, 0.4000188410282135, 0.3884953558444977, 0.38579893112182617, 0.39364832639694214, 0.379700243473053, 0.377813458442688, 0.37952789664268494, 0.371796578168869, 0.37250638008117676, 0.37004515528678894, 0.37440237402915955, 0.36435985565185547, 0.3588663935661316, 0.352215975522995, 0.35393404960632324, 0.3579621911048889, 0.3588883876800537, 0.34825417399406433], "accuracy": [0.26363757252693176, 0.509840190410614, 0.6021661758422852, 0.6383568644523621, 0.6900013089179993, 0.7029454708099365, 0.7022850513458252, 0.7149649858474731, 0.7390040755271912, 0.7437590956687927, 0.7395324110984802, 0.752212405204773, 0.752212405204773, 0.7553823590278625, 0.765949010848999, 0.770439863204956, 0.7697794437408447, 0.7833839654922485, 0.7781006693840027, 0.7853652238845825, 0.789459764957428, 0.7911768555641174, 0.8014793395996094, 0.7946110367774963, 0.8017435073852539, 0.8030643463134766, 0.8095363974571228, 0.809140145778656, 0.8112534880638123, 0.8136309385299683, 0.8212917447090149, 0.8265751004219055, 0.8245938420295715, 0.8175934553146362, 0.8234050869941711, 0.8265751004219055, 0.8333113193511963, 0.8267071843147278, 0.832650899887085, 0.8251221776008606, 0.8330471515655518, 0.8364813327789307, 0.8348963260650635, 0.8337075710296631, 0.8372738361358643, 0.8381983637809753, 0.8448025584220886, 0.8470479249954224, 0.845859169960022, 0.8485008478164673, 0.8424250483512878, 0.8495575189590454, 0.8471800088882446, 0.8539162874221802, 0.8514066934585571, 0.8553691506385803, 0.8516708612442017, 0.8521991968154907, 0.8593316674232483, 0.8540483713150024, 0.8541803956031799, 0.8614450097084045, 0.8580108284950256, 0.8584070801734924, 0.8632941246032715, 0.8631620407104492, 0.8659358024597168, 0.8658037185668945, 0.8665962219238281, 0.868049144744873, 0.8693699836730957, 0.8684453964233398, 0.8688416481018066, 0.8710870146751404, 0.8728041052818298], "val_loss": [1.918605923652649, 1.1201211214065552, 0.9920457601547241, 0.8442781567573547, 0.7302547097206116, 0.7136757969856262, 0.6944777965545654, 0.6529238820075989, 0.6508103609085083, 0.6265119314193726, 0.6418676972389221, 0.6053048372268677, 0.6611823439598083, 0.5834583044052124, 0.6014660000801086, 0.5947147607803345, 0.5448368787765503, 0.5618810653686523, 0.5368826985359192, 0.550614595413208, 0.5273230671882629, 0.5093043446540833, 0.5206347703933716, 0.4988870322704315, 0.5194501876831055, 0.48735204339027405, 0.4806838929653168, 0.48405590653419495, 0.5012134313583374, 0.4809977114200592, 0.4719011187553406, 0.4595954716205597, 0.484198659658432, 0.4585855305194855, 0.4575705826282501, 0.45160815119743347, 0.4380437433719635, 0.4359990656375885, 0.48789697885513306, 0.4352959394454956, 0.4452248513698578, 0.4294169247150421, 0.42275547981262207, 0.42729422450065613, 0.43313902616500854, 0.43569043278694153, 0.4354093372821808, 0.4141121506690979, 0.40824437141418457, 0.4375741481781006, 0.41196155548095703, 0.4066651165485382, 0.42857107520103455, 0.4083711802959442, 0.41462621092796326, 0.4115341305732727, 0.39722150564193726, 0.39916130900382996, 0.3908579647541046, 0.39418384432792664, 0.39283618330955505, 0.38566410541534424, 0.3967300355434418, 0.38350626826286316, 0.38614529371261597, 0.3797582983970642, 0.39338988065719604, 0.3956977128982544, 0.38420572876930237, 0.3754672408103943, 0.3924848139286041, 0.3766721189022064, 0.37814754247665405, 0.3807389438152313, 0.37291252613067627], "val_accuracy": [0.5866666436195374, 0.6386666893959045, 0.6539999842643738, 0.703000009059906, 0.7293333411216736, 0.7319999933242798, 0.7390000224113464, 0.753333330154419, 0.7559999823570251, 0.7630000114440918, 0.7360000014305115, 0.7543333172798157, 0.762333333492279, 0.7796666622161865, 0.7633333206176758, 0.7493333220481873, 0.7913333177566528, 0.7856666445732117, 0.7953333258628845, 0.7866666913032532, 0.7973333597183228, 0.8096666932106018, 0.796999990940094, 0.8149999976158142, 0.8116666674613953, 0.8216666579246521, 0.8193333148956299, 0.8166666626930237, 0.8106666803359985, 0.8133333325386047, 0.824999988079071, 0.8253333568572998, 0.8169999718666077, 0.831333339214325, 0.8320000171661377, 0.8326666951179504, 0.8393333554267883, 0.8393333554267883, 0.7963333129882812, 0.8373333215713501, 0.8333333134651184, 0.843999981880188, 0.8493333458900452, 0.8413333296775818, 0.8429999947547913, 0.8339999914169312, 0.8326666951179504, 0.8513333201408386, 0.8523333072662354, 0.8323333263397217, 0.846666693687439, 0.8496666550636292, 0.8396666646003723, 0.8536666631698608, 0.8426666855812073, 0.8476666808128357, 0.8513333201408386, 0.8546666502952576, 0.8546666502952576, 0.859333336353302, 0.8603333234786987, 0.8619999885559082, 0.8553333282470703, 0.8606666922569275, 0.8633333444595337, 0.8610000014305115, 0.8553333282470703, 0.8550000190734863, 0.8566666841506958, 0.8659999966621399, 0.856333315372467, 0.8636666536331177, 0.8636666536331177, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [66, 39, 39], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 2, 6, 6, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.2094285786151886, "mapping_values": [1, 10, 5, 5, 3, 13, 7, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.6108527183532715, 5.721440961310134e+27, NaN, NaN, NaN, NaN], "accuracy": [0.2814687490463257, 0.12930920720100403, 0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [79.79365539550781, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.20933333039283752, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 2, 5], [0, 0, 1, 0, 2], [2, 39, 46], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 8, 5, 4], [2, 2, 0, 3, 0, 3, 1], [16, 1], [1, 0, 0, 1, 0, 1, 0, 1], [7, 2, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.304661512374878, 2.3039233684539795, 2.3039824962615967, 2.303748369216919, 2.3036201000213623, 2.3037338256835938], "accuracy": [0.09734513610601425, 0.09866596013307571, 0.0948355570435524, 0.09813763201236725, 0.10170386731624603, 0.09549596905708313], "val_loss": [2.3027172088623047, 2.302777051925659, 2.3032641410827637, 2.30316162109375, 2.3030080795288086, 2.3028361797332764], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09966666996479034, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [26, 91, 39], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 3, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 0, 4, 2], [34, 67], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 13, 7, 6, 1, 8, 4, 4, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.square(tf.math.square(grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), grad)), beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 4, 2, 5], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 6, 4, 4], [0], [0, 0, 1, 0, 1, 0], [0, 1, 1, 9], [1, 1], [0]], "fitness": -0.08885714411735535, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 6, 4, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(beta, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(alpha, tf.math.subtract(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3116025924682617, 2.30887508392334, 2.3102917671203613, 2.3103315830230713, 2.3097078800201416, 2.3101484775543213], "accuracy": [0.08902391046285629, 0.09747721254825592, 0.09338264167308807, 0.09060890227556229, 0.09589222073554993, 0.09272222965955734], "val_loss": [2.3084042072296143, 2.3084042072296143, 2.3084042072296143, 2.3084042072296143, 2.3084042072296143, 2.3084042072296143], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]