[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.819428563117981, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2106761932373047, 1.607651710510254, 1.1375551223754883, 0.9926833510398865, 0.8993794322013855, 0.8393957614898682, 0.8196184635162354, 0.7407127022743225, 0.7478125095367432, 0.7225782871246338, 0.6886051893234253, 0.6690099835395813, 0.6606143116950989, 0.6433557868003845, 0.6196839213371277, 0.6202570796012878, 0.6076836585998535, 0.5983781218528748, 0.5868876576423645, 0.5822758674621582, 0.5636979341506958, 0.5581966638565063, 0.5505460500717163, 0.5419023036956787, 0.5443045496940613, 0.5350822806358337, 0.5228864550590515, 0.524755597114563, 0.5068430304527283, 0.49938276410102844, 0.5157628655433655, 0.48299306631088257, 0.5084158778190613, 0.48162543773651123, 0.47349753975868225, 0.4827798902988434, 0.4725092351436615, 0.461264431476593, 0.4586985111236572, 0.4496297538280487, 0.45975345373153687, 0.44495946168899536, 0.43763604760169983, 0.4482484459877014, 0.42754632234573364, 0.43034762144088745, 0.422974556684494], "accuracy": [0.2650904655456543, 0.49966979026794434, 0.5983357429504395, 0.6446968913078308, 0.6808875799179077, 0.6939638257026672, 0.6989829540252686, 0.7263241410255432, 0.7191916704177856, 0.7368907928466797, 0.7437590956687927, 0.7512878179550171, 0.7506273984909058, 0.7556465268135071, 0.7705719470977783, 0.7676661014556885, 0.7736098170280457, 0.7786290049552917, 0.7788931727409363, 0.789459764957428, 0.7873464822769165, 0.7930260300636292, 0.7981772422790527, 0.800290584564209, 0.7928939461708069, 0.8053097128868103, 0.8041210174560547, 0.8041210174560547, 0.8136309385299683, 0.81548011302948, 0.809140145778656, 0.8220842480659485, 0.8095363974571228, 0.8260467648506165, 0.8285563588142395, 0.8193105459213257, 0.8238013386726379, 0.8278959393501282, 0.8325188159942627, 0.8380662798881531, 0.829216718673706, 0.833179235458374, 0.839519202709198, 0.830669641494751, 0.8446704745292664, 0.8399154543876648, 0.8400475382804871], "val_loss": [1.9259371757507324, 1.113269329071045, 0.9637439250946045, 0.8192871809005737, 0.7694535255432129, 0.8092883825302124, 0.6808496117591858, 0.6844807863235474, 0.6440734267234802, 0.6348034143447876, 0.6393528580665588, 0.6174466013908386, 0.5977581739425659, 0.5732749700546265, 0.5764119029045105, 0.5635691285133362, 0.5579206347465515, 0.5740085244178772, 0.5516934394836426, 0.5478905439376831, 0.5359023213386536, 0.5168879628181458, 0.521307110786438, 0.525076150894165, 0.5151680707931519, 0.49610385298728943, 0.49973294138908386, 0.4942026436328888, 0.4964260160923004, 0.5067136883735657, 0.4819541871547699, 0.47500619292259216, 0.47579824924468994, 0.5084787607192993, 0.4907289147377014, 0.47413891553878784, 0.4657432734966278, 0.4561716318130493, 0.45788130164146423, 0.5273905992507935, 0.46285220980644226, 0.4482702314853668, 0.46004578471183777, 0.4606841504573822, 0.44076481461524963, 0.45079678297042847, 0.4443771243095398], "val_accuracy": [0.527999997138977, 0.6556666493415833, 0.6510000228881836, 0.6990000009536743, 0.7146666646003723, 0.6776666641235352, 0.7566666603088379, 0.7360000014305115, 0.7620000243186951, 0.7593333125114441, 0.7526666522026062, 0.7606666684150696, 0.7900000214576721, 0.7926666736602783, 0.7836666703224182, 0.7943333387374878, 0.7986666560173035, 0.7879999876022339, 0.8040000200271606, 0.7876666784286499, 0.8073333501815796, 0.8243333101272583, 0.815666675567627, 0.8056666851043701, 0.8180000185966492, 0.8233333230018616, 0.8263333439826965, 0.8259999752044678, 0.8199999928474426, 0.8203333616256714, 0.8323333263397217, 0.8336666822433472, 0.8253333568572998, 0.8066666722297668, 0.8196666836738586, 0.8303333520889282, 0.8366666436195374, 0.8396666646003723, 0.8370000123977661, 0.8033333420753479, 0.8339999914169312, 0.8460000157356262, 0.8326666951179504, 0.8413333296775818, 0.8446666598320007, 0.8453333377838135, 0.8410000205039978]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 8, 1, 5, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 2, 4, 6, 3, 1, 5, 4, 0], [2, 0, 3, 1, 0, 1, 5, 5], [16, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [7, 3, 0, 3, 6, 2, 5, 5, 4, 5, 2, 2, 2, 8, 1], [0, 1, 1, 2, 0, 0, 5, 5, 3, 6, 3], [0, 14, 75], [1], [0], [4], [0]], "fitness": -0.24171428382396698, "mapping_values": [1, 7, 4, 3, 2, 17, 9, 8, 2, 26, 15, 11, 3, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.subtract(tf.math.square(alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.math.pow(alpha, grad)), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.square(alpha), alpha), beta), tf.math.square(tf.math.pow(tf.math.square(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.add(grad, tf.math.add(grad, tf.math.sqrt(tf.math.subtract(sigma, grad)))), sigma)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.45255184173584, 2.2932138442993164, 2.309067964553833, 2.2815914154052734, 2.2686028480529785, 2.3069396018981934, 2.3037781715393066, 2.3035547733306885], "accuracy": [0.19138818979263306, 0.13393211364746094, 0.11689341068267822, 0.21384228765964508, 0.16391493380069733, 0.10091137140989304, 0.09840179979801178, 0.09496764093637466], "val_loss": [2.3024919033050537, 2.3524484634399414, 2.269852876663208, 2.3032824993133545, 2.3096468448638916, 2.3033390045166016, 2.302738904953003, 2.3026084899902344], "val_accuracy": [0.0989999994635582, 0.15166667103767395, 0.2303333282470703, 0.10300000011920929, 0.09966666996479034, 0.10266666859388351, 0.10266666859388351, 0.10999999940395355]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 2, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 82], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [2, 2, 9, 6, 3, 5, 5, 4], [3, 2, 0, 4, 0, 1, 1], [16, 1, 74], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1], [7, 3, 0, 3, 7, 2, 8, 5], [0, 4, 1, 2, 3, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 13, 8, 5, 3, 14, 8, 6, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.square(beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.pow(grad, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), beta), tf.math.add(sigma, tf.math.sqrt(tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3035213947296143, 2.3028066158294678, 2.302520513534546, 2.303293466567993, 2.3044042587280273, 2.3083114624023438], "accuracy": [0.09893012791872025, 0.1022322028875351, 0.10170386731624603, 0.1006472036242485, 0.09906221181154251, 0.09721305221319199], "val_loss": [2.302849531173706, 2.3030455112457275, 2.303239583969116, 2.304474353790283, 2.3071420192718506, 2.314993143081665], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0], [26, 0, 98, 47], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 3, 0, 4, 0, 3, 2], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 4, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 4, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(grad), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303980588912964, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09430722147226334, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 0, 3, 1, 3, 5], [0, 2, 1, 0, 2], [26, 54, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [2, 2, 4, 6, 3, 1, 5, 4, 4], [2, 2, 0, 4, 3, 3, 1, 0, 5], [26, 1], [1, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [0, 1], [0], [1], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 10, 5, 5, 2, 18, 9, 9, 2, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad), alpha)), tf.math.multiply(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(beta, tf.math.square(tf.math.pow(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad))), grad), grad)), alpha), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.310805559158325, 2.3099424839019775, 2.310605764389038, 2.310528039932251, 2.310917854309082, 2.3111162185668945], "accuracy": [0.09298639744520187, 0.09430722147226334, 0.09179764986038208, 0.09153348207473755, 0.09060890227556229, 0.08228767663240433], "val_loss": [2.3089144229888916, 2.3089144229888916, 2.3089144229888916, 2.3089144229888916, 2.3089144229888916, 2.3089144229888916], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]