[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8008571267127991, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.214362621307373, 1.6176258325576782, 1.1326913833618164, 0.9755445122718811, 0.8763344287872314, 0.8344982862472534, 0.7907118797302246, 0.7463663816452026, 0.7377955317497253, 0.7170456647872925, 0.6800874471664429, 0.6858292818069458, 0.6446795463562012, 0.6522721648216248, 0.6389095783233643, 0.6210217475891113, 0.6052334904670715, 0.6042905449867249, 0.5924630165100098, 0.568487823009491, 0.5615720748901367, 0.5693273544311523, 0.5540444850921631, 0.5387945771217346, 0.5382869243621826, 0.5168883204460144, 0.5263381600379944, 0.5100558400154114, 0.5019497275352478, 0.5080751776695251, 0.49086645245552063, 0.49541187286376953, 0.4875893294811249, 0.4767875075340271, 0.46826133131980896, 0.4779062271118164, 0.4666959345340729, 0.46900609135627747, 0.4591512084007263, 0.4475921094417572, 0.45146527886390686, 0.43820294737815857, 0.43756791949272156], "accuracy": [0.26403382420539856, 0.5031039714813232, 0.6020340919494629, 0.655527651309967, 0.6836613416671753, 0.698718786239624, 0.7094175219535828, 0.7252674698829651, 0.7256637215614319, 0.7359662055969238, 0.7483819723129272, 0.7432307600975037, 0.7655527591705322, 0.7660810947418213, 0.7675340175628662, 0.7684586048126221, 0.7796856164932251, 0.7741381525993347, 0.7866860628128052, 0.7926297783851624, 0.7932901978492737, 0.7907806038856506, 0.7973847389221191, 0.8067626357078552, 0.8030643463134766, 0.8153480291366577, 0.8115176558494568, 0.8171972036361694, 0.81548011302948, 0.8142913579940796, 0.8240655064582825, 0.8236692547798157, 0.8234050869941711, 0.8274996876716614, 0.8341038227081299, 0.8294808864593506, 0.830669641494751, 0.8272355198860168, 0.8396512866020203, 0.8368775844573975, 0.8356888294219971, 0.8436138033866882, 0.8396512866020203], "val_loss": [1.9353805780410767, 1.1095571517944336, 0.8884065747261047, 0.7881725430488586, 0.779249370098114, 0.7371569275856018, 0.7154747843742371, 0.6730234622955322, 0.6294574737548828, 0.6266208291053772, 0.5982052683830261, 0.579872727394104, 0.6036841869354248, 0.5804458260536194, 0.555096447467804, 0.5589312314987183, 0.5898880362510681, 0.5520289540290833, 0.5205900073051453, 0.53305983543396, 0.5647228956222534, 0.5230690240859985, 0.4974650740623474, 0.5167449712753296, 0.489676296710968, 0.47387194633483887, 0.48267149925231934, 0.48378801345825195, 0.49871304631233215, 0.46093448996543884, 0.4600755274295807, 0.48817458748817444, 0.46491947770118713, 0.4537167251110077, 0.44142717123031616, 0.4566085636615753, 0.45056501030921936, 0.4345608055591583, 0.44311511516571045, 0.45021265745162964, 0.4310271143913269, 0.4387388825416565, 0.4260639548301697], "val_accuracy": [0.5920000076293945, 0.6416666507720947, 0.6830000281333923, 0.7103333473205566, 0.7053333520889282, 0.7200000286102295, 0.7253333330154419, 0.7406666874885559, 0.7646666765213013, 0.7730000019073486, 0.7733333110809326, 0.7829999923706055, 0.7666666507720947, 0.7906666398048401, 0.7906666398048401, 0.7916666865348816, 0.7846666574478149, 0.7900000214576721, 0.8046666383743286, 0.7986666560173035, 0.781333327293396, 0.8009999990463257, 0.8159999847412109, 0.8063333630561829, 0.8183333277702332, 0.8213333487510681, 0.8196666836738586, 0.8220000267028809, 0.8059999942779541, 0.8289999961853027, 0.8263333439826965, 0.8066666722297668, 0.8253333568572998, 0.8333333134651184, 0.8376666903495789, 0.8230000138282776, 0.8309999704360962, 0.8416666388511658, 0.8326666951179504, 0.8363333344459534, 0.8376666903495789, 0.8320000171661377, 0.8370000123977661]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [4, 5, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 12], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [8, 9, 4, 7, 0, 5, 5, 8], [1, 2, 0, 4, 0, 3, 1], [16, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [7, 3, 2, 2, 1, 6, 5, 4, 5, 4, 6], [0, 1, 1, 7, 7, 4, 3, 4, 6, 7], [37], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 2, 2, 0, 1, 21, 11, 10, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.square(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), grad), tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.square(tf.math.pow(grad, tf.math.square(sigma)))), tf.math.pow(tf.math.divide_no_nan(grad, grad), grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [6, 2, 3, 1, 3, 5, 9], [0, 2, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [2, 4, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 7], [0, 1, 7, 4], [0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 7, 4, 1, 2, 0, 4, 6, 9, 5, 0], [1, 4, 6, 6, 7, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 12, 7, 5, 2, 8, 4, 4, 1, 17, 11, 6, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(tf.math.negative(tf.math.pow(tf.math.divide_no_nan(grad, grad), grad)), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.negative(grad))), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 2, 4, 1, 3, 5], [0, 0, 2, 0, 2], [75, 39, 95], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [2, 3, 3, 7, 5, 3, 5, 4], [1, 2, 4, 4, 0, 3, 1], [93, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 4, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 12, 6, 6, 1, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.math.multiply(beta, tf.math.multiply(tf.math.add(grad, grad), tf.math.square(tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.304955244064331, 2.304654598236084, 2.3041021823883057, 2.3055741786956787, 2.3057024478912354, 2.3073694705963135, 2.307948589324951, 2.307067632675171, 2.3091275691986084, 2.312516927719116], "accuracy": [0.09628847241401672, 0.09826971590518951, 0.09959053993225098, 0.0944393053650856, 0.10051512718200684, 0.1014397069811821, 0.09866596013307571, 0.10091137140989304, 0.09866596013307571, 0.10196803510189056], "val_loss": [2.302696704864502, 2.304349660873413, 2.3044228553771973, 2.3054540157318115, 2.3040692806243896, 2.304145336151123, 2.3077547550201416, 2.309278964996338, 2.3089821338653564, 2.3096702098846436], "val_accuracy": [0.09866666793823242, 0.0989999994635582, 0.10233332961797714, 0.0989999994635582, 0.10300000011920929, 0.10100000351667404, 0.09833333641290665, 0.09866666793823242, 0.10100000351667404, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [9, 7, 4, 1, 5, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [95, 75], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [8, 3, 0, 2, 1, 2, 3, 1, 9, 1, 1, 3, 2, 4, 8, 8, 7], [3, 3, 1, 4, 4, 4, 6, 1, 0, 6, 5, 0], [0, 4, 60], [0, 0], [0, 9], [1], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 1, 0, 1, 1, 1, 1, 0, 1, 29, 17, 12, 3, 2, 2, 0, 1], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.math.add(sigma, tf.math.subtract(sigma, alpha))), tf.math.add(tf.math.multiply(tf.math.subtract(grad, grad), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.subtract(tf.math.multiply(grad, tf.math.add(tf.math.pow(grad, alpha), tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), grad))))), grad), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.309326410293579, 2.3099236488342285, 2.3104922771453857, 2.3093297481536865, 2.3092613220214844, 2.310349941253662], "accuracy": [0.09126931428909302, 0.08875974267721176, 0.08849557489156723, 0.09272222965955734, 0.08968432247638702, 0.09192973375320435], "val_loss": [2.3087198734283447, 2.3087198734283447, 2.3087198734283447, 2.3087198734283447, 2.3087198734283447, 2.3087198734283447], "val_accuracy": [0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076]}}]