[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8554285764694214, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213676929473877, 1.6260327100753784, 1.143683910369873, 0.9742980599403381, 0.905768096446991, 0.8351218104362488, 0.7851074934005737, 0.7412269115447998, 0.7395317554473877, 0.711415708065033, 0.7069402933120728, 0.678230345249176, 0.6367061138153076, 0.6509361267089844, 0.6249479651451111, 0.6181301474571228, 0.596510112285614, 0.5996518135070801, 0.5853984355926514, 0.566254198551178, 0.5746713280677795, 0.5576147437095642, 0.5446452498435974, 0.5396304726600647, 0.5172899961471558, 0.545619010925293, 0.5207965970039368, 0.5165130496025085, 0.5015321969985962, 0.4937669634819031, 0.48441874980926514, 0.4920797646045685, 0.47626858949661255, 0.47793251276016235, 0.4731525182723999, 0.4620440900325775, 0.46651312708854675, 0.45247113704681396, 0.45586317777633667, 0.4512108266353607, 0.44254299998283386, 0.4377943277359009, 0.4450337886810303, 0.433260977268219, 0.4311376214027405, 0.4237311780452728, 0.42902952432632446, 0.4136289060115814, 0.41453227400779724, 0.4130176901817322, 0.39844590425491333, 0.39945289492607117, 0.39990946650505066, 0.39090973138809204, 0.39613914489746094, 0.3962012231349945, 0.3925626873970032, 0.39203161001205444, 0.3823232650756836], "accuracy": [0.2662792205810547, 0.5065380930900574, 0.6066569685935974, 0.659490168094635, 0.6744155287742615, 0.6980583667755127, 0.713908314704895, 0.7283053994178772, 0.7260599732398987, 0.7359662055969238, 0.7403249144554138, 0.7495707273483276, 0.7663452625274658, 0.7577598690986633, 0.7709681391716003, 0.7713643908500671, 0.778761088848114, 0.7790252566337585, 0.7824593782424927, 0.7913089394569397, 0.7848368883132935, 0.7928939461708069, 0.798309326171875, 0.7967243194580078, 0.8094043135643005, 0.800290584564209, 0.811649739742279, 0.8087438941001892, 0.8164047002792358, 0.8144234418869019, 0.8235371708869934, 0.8183859586715698, 0.822348415851593, 0.8281601071357727, 0.8276317715644836, 0.8322546482086182, 0.8293488025665283, 0.8367455005645752, 0.8325188159942627, 0.8381983637809753, 0.8393871188163757, 0.8422929644584656, 0.8403117060661316, 0.844010055065155, 0.8459912538528442, 0.8491612672805786, 0.8459912538528442, 0.8487650156021118, 0.8511425256729126, 0.8516708612442017, 0.8597279191017151, 0.8533879518508911, 0.8537842035293579, 0.8578787446022034, 0.8557654023170471, 0.8599920868873596, 0.8584070801734924, 0.8605204224586487, 0.8598600029945374], "val_loss": [1.9311139583587646, 1.1074284315109253, 0.9771608710289001, 0.7858006358146667, 0.7151148915290833, 0.6789993643760681, 0.6691451072692871, 0.6397503614425659, 0.6217755675315857, 0.637182354927063, 0.5786056518554688, 0.5710426568984985, 0.5599858164787292, 0.5515573024749756, 0.54337477684021, 0.5200293660163879, 0.526112973690033, 0.5345032811164856, 0.5103436708450317, 0.5099934935569763, 0.49562308192253113, 0.5069106221199036, 0.48209962248802185, 0.47433871030807495, 0.4906598627567291, 0.5204798579216003, 0.4671025276184082, 0.4671674370765686, 0.46530061960220337, 0.4500419795513153, 0.446654736995697, 0.43762192130088806, 0.44438207149505615, 0.4439742863178253, 0.44161567091941833, 0.4331801235675812, 0.44725513458251953, 0.4252970814704895, 0.42855703830718994, 0.4254489839076996, 0.4155900180339813, 0.4370979070663452, 0.4190300703048706, 0.4254917800426483, 0.4138663709163666, 0.421396940946579, 0.40383246541023254, 0.39836356043815613, 0.4188055694103241, 0.4012039005756378, 0.4035666882991791, 0.41997474431991577, 0.40390560030937195, 0.38472822308540344, 0.40163907408714294, 0.3912980854511261, 0.3859305679798126, 0.3892076015472412, 0.3987250030040741], "val_accuracy": [0.5730000138282776, 0.6159999966621399, 0.6100000143051147, 0.6980000138282776, 0.7269999980926514, 0.7519999742507935, 0.7483333349227905, 0.7603333592414856, 0.7559999823570251, 0.7463333606719971, 0.7726666927337646, 0.7856666445732117, 0.7846666574478149, 0.79666668176651, 0.7906666398048401, 0.8029999732971191, 0.7990000247955322, 0.7929999828338623, 0.8146666884422302, 0.8116666674613953, 0.8086666464805603, 0.8040000200271606, 0.8196666836738586, 0.8266666531562805, 0.8116666674613953, 0.8046666383743286, 0.8289999961853027, 0.8270000219345093, 0.8266666531562805, 0.8296666741371155, 0.8339999914169312, 0.8396666646003723, 0.8323333263397217, 0.8420000076293945, 0.8383333086967468, 0.8363333344459534, 0.8299999833106995, 0.843666672706604, 0.8416666388511658, 0.8433333039283752, 0.8486666679382324, 0.8370000123977661, 0.8506666421890259, 0.8403333425521851, 0.8506666421890259, 0.8393333554267883, 0.8503333330154419, 0.8526666760444641, 0.8460000157356262, 0.8556666374206543, 0.8536666631698608, 0.8456666469573975, 0.8553333282470703, 0.8600000143051147, 0.8546666502952576, 0.859000027179718, 0.8586666584014893, 0.8569999933242798, 0.8553333282470703]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8019999861717224, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2099876403808594, 1.599976897239685, 1.1631829738616943, 1.016620397567749, 0.8851730823516846, 0.8249451518058777, 0.7924729585647583, 0.7603834271430969, 0.7277955412864685, 0.69610995054245, 0.6819118857383728, 0.6781405806541443, 0.6516450047492981, 0.6562893986701965, 0.643906831741333, 0.6088018417358398, 0.6041416525840759, 0.5910236239433289, 0.5794512033462524, 0.5791065692901611, 0.5688533186912537, 0.564108669757843, 0.5456384420394897, 0.5507592558860779, 0.5349506735801697, 0.5239298939704895, 0.5277073383331299, 0.5040064454078674], "accuracy": [0.2728833854198456, 0.5074626803398132, 0.5980715751647949, 0.6425835490226746, 0.6761326193809509, 0.7000396251678467, 0.711530864238739, 0.7164179086685181, 0.7288337349891663, 0.7334566116333008, 0.7433628439903259, 0.7470611333847046, 0.7530049085617065, 0.755118191242218, 0.7577598690986633, 0.7733456492424011, 0.774270236492157, 0.7778365015983582, 0.7841764688491821, 0.7853652238845825, 0.7891955971717834, 0.7837802171707153, 0.7965922355651855, 0.7973847389221191, 0.800290584564209, 0.8100647330284119, 0.7987055778503418, 0.8149517774581909], "val_loss": [1.9166005849838257, 1.0994751453399658, 0.862217128276825, 0.7671459913253784, 0.7394393086433411, 0.7345200777053833, 0.7033071517944336, 0.6830169558525085, 0.6193873286247253, 0.593080461025238, 0.5719553828239441, 0.6399023532867432, 0.5932575464248657, 0.550477147102356, 0.5629528164863586, 0.5328264832496643, 0.5472930669784546, 0.5421282052993774, 0.519087016582489, 0.5114424824714661, 0.514707088470459, 0.499629408121109, 0.4868465065956116, 0.4946167767047882, 0.487629234790802, 0.4790838360786438, 0.49473315477371216, 0.468361496925354], "val_accuracy": [0.5356666445732117, 0.6639999747276306, 0.7073333263397217, 0.7250000238418579, 0.7176666855812073, 0.7106666564941406, 0.7210000157356262, 0.7279999852180481, 0.75, 0.7820000052452087, 0.7850000262260437, 0.7353333234786987, 0.7519999742507935, 0.7976666688919067, 0.7973333597183228, 0.8013333082199097, 0.7916666865348816, 0.7996666431427002, 0.7996666431427002, 0.8073333501815796, 0.8100000023841858, 0.8206666707992554, 0.8339999914169312, 0.8213333487510681, 0.8233333230018616, 0.8263333439826965, 0.8240000009536743, 0.8296666741371155]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 7, 3, 1, 3, 5], [0, 0, 1, 0, 0], [0, 39, 39, 31], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 2, 8, 3], [5, 0, 3, 1, 1], [16, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 7, 7, 4, 7, 5, 2, 2, 5, 4, 5, 2, 0], [0, 6, 3, 2, 6, 1, 7, 4, 3], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.add(tf.math.square(grad), tf.math.add(sigma, tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.square(grad), tf.math.add(alpha, grad)))))), tf.math.negative(grad)), sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [31.103227615356445, 35.991641998291016, 37.738197326660156, 48.21245193481445, 38.22400665283203, 59.81258010864258, 64.1740951538086, 85.1151351928711, 75.40025329589844], "accuracy": [0.09655263274908066, 0.10210011899471283, 0.10513802617788315, 0.09430722147226334, 0.10170386731624603, 0.1014397069811821, 0.10368511080741882, 0.09853387624025345, 0.09826971590518951], "val_loss": [26.972434997558594, 39.993629455566406, 54.298011779785156, 47.05080032348633, 52.6092414855957, 73.61304473876953, 68.17664337158203, 87.78916931152344, 81.45889282226562], "val_accuracy": [0.09833333641290665, 0.10066666454076767, 0.09799999743700027, 0.10199999809265137, 0.09933333098888397, 0.10066666454076767, 0.09966666996479034, 0.09799999743700027, 0.10066666454076767]}, "mapping_values": [1, 11, 6, 5, 4, 10, 6, 4, 1, 22, 13, 9, 1, 1, 0, 1, 0], "tree_depth": 23}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [7, 2, 0, 6, 7, 8, 2, 6, 5, 3, 4, 4, 3, 5, 8, 4, 3, 5], [2, 0, 3, 1, 0, 4, 5, 4, 4, 1, 3, 3, 1], [16, 1], [1, 0, 1, 1], [0, 7], [0, 0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 31, 18, 13, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(grad, alpha), tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.math.multiply(tf.math.pow(grad, tf.math.pow(tf.math.multiply(grad, tf.math.square(grad)), tf.math.sqrt(tf.math.pow(grad, alpha)))), tf.math.multiply(grad, tf.math.square(grad)))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 1, 3, 1, 3, 5, 8, 7, 8, 2, 6, 6, 5, 4, 2, 8, 2, 6, 2, 1, 0, 3, 8, 6, 3, 2, 3, 6, 8, 6, 2, 4, 7, 6, 4, 4, 4, 5, 8, 6, 3, 7, 3, 1, 6, 5, 0, 9, 7, 5, 6, 9, 3, 1, 4, 1, 3, 9, 2, 7, 5], [0, 0, 1, 1, 2, 3, 2, 1, 3, 3, 1, 1, 3, 2, 3, 0, 0, 2, 0, 3, 0, 2, 1, 0, 3, 0, 1, 1, 2, 1, 3, 2, 0, 3, 1, 3, 2, 3, 2, 0, 0], [0, 39, 39, 30, 75, 72, 72, 34, 89, 21, 90, 7, 35, 77], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 4, 0, 9, 8, 2], [3, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 3], [0, 6], [0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], [0, 7, 6, 2, 7, 8, 6, 4, 8, 7, 0, 5], [2, 1, 0, 1, 7, 1, 1, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 102, 61, 41, 14, 2, 1, 1, 0, 4, 2, 2, 1, 20, 12, 8, 1], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.sqrt(alpha)), tf.math.add(tf.math.sqrt(tf.math.add(grad, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(grad), grad), tf.math.pow(alpha, tf.math.add(tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.math.negative(tf.math.multiply(tf.math.sqrt(grad), tf.math.divide_no_nan(grad, alpha))), tf.math.multiply(tf.math.add(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.add(grad, tf.math.pow(grad, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.math.pow(grad, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.pow(grad, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))))), alpha), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), grad), tf.math.sqrt(tf.math.divide_no_nan(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.multiply(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.square(tf.math.negative(alpha)), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha))), tf.math.square(tf.math.divide_no_nan(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.subtract(tf.math.pow(grad, tf.math.subtract(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), grad)), alpha))))), tf.math.add(grad, tf.math.add(grad, grad)))))), grad)), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))), tf.math.square(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(tf.math.pow(alpha, tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), alpha)), tf.math.add(grad, alpha))), alpha), tf.math.negative(tf.math.square(grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [9, 2, 3, 1, 3, 5], [0, 0, 0, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 8, 3, 8, 2], [2, 0, 3, 5, 0], [16, 1], [0, 0, 0, 1, 1, 1, 0], [6, 7, 6, 9], [0, 6, 2], [0, 55], [1], [0], [2], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 1, 1, 0, 1, 2, 1, 1, 0, 7, 4, 3, 2, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), beta), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310917854309082, 2.309563636779785, 2.309877395629883, 2.3099379539489746, 2.3098385334014893, 2.309002161026001], "accuracy": [0.09377889335155487, 0.09219389408826828, 0.09774138033390045, 0.0940430611371994, 0.09668471664190292, 0.09338264167308807], "val_loss": [2.3076422214508057, 2.3076422214508057, 2.3076422214508057, 2.3076422214508057, 2.3076422214508057, 2.3076422214508057], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]