[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8539999723434448, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2108490467071533, 1.6031280755996704, 1.1586053371429443, 1.0017169713974, 0.9027997255325317, 0.8509687781333923, 0.7821087837219238, 0.7510325312614441, 0.7681663632392883, 0.7239335179328918, 0.7042371034622192, 0.6705950498580933, 0.6701738238334656, 0.6410457491874695, 0.6455509066581726, 0.6122079491615295, 0.6216953992843628, 0.6117597222328186, 0.5990164279937744, 0.5723549127578735, 0.5750733613967896, 0.5654271245002747, 0.5603346228599548, 0.5531269907951355, 0.543151319026947, 0.5325374007225037, 0.523846447467804, 0.515398383140564, 0.5130863785743713, 0.5047292113304138, 0.511211097240448, 0.489170640707016, 0.4864640533924103, 0.4842982292175293, 0.47540971636772156, 0.4720350503921509, 0.46809497475624084, 0.46228352189064026, 0.46422722935676575, 0.4534793794155121, 0.45032545924186707, 0.44704577326774597, 0.43839192390441895, 0.4372914135456085, 0.44019392132759094, 0.4282222390174866, 0.414899617433548, 0.42131656408309937, 0.4295532703399658, 0.4157116115093231, 0.39912712574005127, 0.4099557399749756, 0.4104830026626587, 0.40346992015838623, 0.40090474486351013, 0.38478195667266846, 0.39120081067085266, 0.38766616582870483, 0.3841533958911896, 0.37545040249824524, 0.37709566950798035, 0.37396249175071716, 0.36828750371932983, 0.36231529712677, 0.37067341804504395, 0.36960527300834656, 0.36422786116600037, 0.3631508946418762, 0.3479906916618347, 0.3558589220046997, 0.35364899039268494, 0.34216275811195374, 0.3413783013820648], "accuracy": [0.2658829689025879, 0.5038964748382568, 0.5926561951637268, 0.6362435817718506, 0.6732267737388611, 0.6902654767036438, 0.711530864238739, 0.7235503792762756, 0.7207766771316528, 0.7279091477394104, 0.7391361594200134, 0.7582882046699524, 0.746268630027771, 0.7626469135284424, 0.759609043598175, 0.7754589915275574, 0.7625148296356201, 0.7757231593132019, 0.7700436115264893, 0.7889314293861389, 0.7889314293861389, 0.7868181467056274, 0.7898560166358948, 0.7997622489929199, 0.798309326171875, 0.8030643463134766, 0.8080834746360779, 0.8125742673873901, 0.8132346868515015, 0.8161405324935913, 0.8128384351730347, 0.8238013386726379, 0.8271034359931946, 0.8224804997444153, 0.8290846943855286, 0.8278959393501282, 0.830669641494751, 0.833179235458374, 0.833179235458374, 0.8341038227081299, 0.837537944316864, 0.8366134166717529, 0.8391229510307312, 0.843481719493866, 0.8399154543876648, 0.8416325449943542, 0.8506141901016235, 0.848368763923645, 0.8404437899589539, 0.8453308939933777, 0.8536521196365356, 0.8490291833877563, 0.8507462739944458, 0.8562937378883362, 0.8520671129226685, 0.8610487580299377, 0.8573504090309143, 0.8595958352088928, 0.8590674996376038, 0.8631620407104492, 0.8622375130653381, 0.8631620407104492, 0.8681812286376953, 0.8667283058166504, 0.8626337051391602, 0.8658037185668945, 0.8628978729248047, 0.8687095642089844, 0.8659358024597168, 0.868049144744873, 0.8716153502464294, 0.874389111995697, 0.8757099509239197], "val_loss": [1.9235763549804688, 1.1314831972122192, 0.8731655478477478, 0.807879626750946, 0.7705962061882019, 0.6980771422386169, 0.6661664247512817, 0.697576105594635, 0.66929030418396, 0.5976685285568237, 0.5922770500183105, 0.5830627679824829, 0.6373900771141052, 0.5411273837089539, 0.5578807592391968, 0.5548969507217407, 0.5392282009124756, 0.5990676879882812, 0.5256581902503967, 0.5300251245498657, 0.5082780718803406, 0.5017443299293518, 0.5056119561195374, 0.5075571537017822, 0.4926685094833374, 0.47513166069984436, 0.4797607362270355, 0.4600391089916229, 0.46047335863113403, 0.5116149187088013, 0.4663454294204712, 0.452178955078125, 0.4634062945842743, 0.44287997484207153, 0.4433993399143219, 0.43838903307914734, 0.43588727712631226, 0.4394426941871643, 0.43417826294898987, 0.43312549591064453, 0.4629688262939453, 0.431441068649292, 0.4245022237300873, 0.41809216141700745, 0.4273024797439575, 0.40897610783576965, 0.41044068336486816, 0.45049646496772766, 0.4001186192035675, 0.4124038815498352, 0.4094165861606598, 0.3972887098789215, 0.39708682894706726, 0.39355671405792236, 0.39122965931892395, 0.40282538533210754, 0.3918760120868683, 0.3897528350353241, 0.3919954299926758, 0.39045262336730957, 0.40663614869117737, 0.3902661204338074, 0.37542790174484253, 0.3986421823501587, 0.3837566673755646, 0.3817605674266815, 0.37363508343696594, 0.37688878178596497, 0.37387850880622864, 0.387358158826828, 0.3793269991874695, 0.36945849657058716, 0.38200435042381287], "val_accuracy": [0.5073333382606506, 0.6323333382606506, 0.7126666903495789, 0.70333331823349, 0.7099999785423279, 0.7419999837875366, 0.7593333125114441, 0.7426666617393494, 0.7416666746139526, 0.7753333449363708, 0.7826666831970215, 0.7836666703224182, 0.7506666779518127, 0.8023333549499512, 0.8023333549499512, 0.7903333306312561, 0.7916666865348816, 0.7573333382606506, 0.8106666803359985, 0.8083333373069763, 0.8216666579246521, 0.8140000104904175, 0.8166666626930237, 0.812666654586792, 0.8216666579246521, 0.8276666402816772, 0.8323333263397217, 0.8420000076293945, 0.8433333039283752, 0.8066666722297668, 0.8323333263397217, 0.8443333506584167, 0.8296666741371155, 0.8426666855812073, 0.8416666388511658, 0.8450000286102295, 0.8426666855812073, 0.847000002861023, 0.8496666550636292, 0.8516666889190674, 0.8263333439826965, 0.8443333506584167, 0.8500000238418579, 0.8519999980926514, 0.8479999899864197, 0.8579999804496765, 0.8553333282470703, 0.8206666707992554, 0.8616666793823242, 0.8510000109672546, 0.8573333621025085, 0.8616666793823242, 0.8576666712760925, 0.8633333444595337, 0.8633333444595337, 0.859000027179718, 0.8603333234786987, 0.8636666536331177, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197, 0.8616666793823242, 0.8709999918937683, 0.8606666922569275, 0.8673333525657654, 0.862666666507721, 0.8709999918937683, 0.8726666569709778, 0.8696666955947876, 0.8606666922569275, 0.8693333268165588, 0.871999979019165, 0.8656666874885559]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8377143144607544, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2109034061431885, 1.602550745010376, 1.1527668237686157, 0.9680679440498352, 0.8711642026901245, 0.8048338294029236, 0.7626584768295288, 0.7341110706329346, 0.720572292804718, 0.6987598538398743, 0.6735822558403015, 0.6432709097862244, 0.6216943264007568, 0.6219795942306519, 0.6027480363845825, 0.6037293672561646, 0.5852665305137634, 0.5782327055931091, 0.571453332901001, 0.5645818114280701, 0.5431275963783264, 0.551263689994812, 0.522972822189331, 0.5258854627609253, 0.5136131048202515, 0.5089266300201416, 0.4999427795410156, 0.49808433651924133, 0.5040745735168457, 0.49136945605278015, 0.47842079401016235, 0.47512370347976685, 0.46721982955932617, 0.4567524492740631, 0.45937150716781616, 0.452396422624588, 0.45799520611763, 0.4349404275417328, 0.434120237827301, 0.4360494017601013, 0.4383574426174164, 0.4271247684955597, 0.42347419261932373], "accuracy": [0.27460044622421265, 0.5105006098747253, 0.5958262085914612, 0.6491876840591431, 0.6860388517379761, 0.7124554514884949, 0.7218332886695862, 0.7308149337768555, 0.7413815855979919, 0.7454761862754822, 0.7563069462776184, 0.7695152759552002, 0.7794214487075806, 0.7701756954193115, 0.7779685854911804, 0.78113853931427, 0.7849689722061157, 0.7844406366348267, 0.7907806038856506, 0.7930260300636292, 0.7979130744934082, 0.7979130744934082, 0.8096684813499451, 0.8045172095298767, 0.8112534880638123, 0.8117818236351013, 0.8164047002792358, 0.817461371421814, 0.8141592741012573, 0.8210275769233704, 0.8264430165290833, 0.8272355198860168, 0.8350284099578857, 0.8359529972076416, 0.8339717388153076, 0.83119797706604, 0.835160493850708, 0.8428213000297546, 0.8416325449943542, 0.8372738361358643, 0.8413683772087097, 0.8455950617790222, 0.8499537706375122], "val_loss": [1.9273940324783325, 1.1069105863571167, 0.9027141332626343, 0.767385721206665, 0.7608437538146973, 0.7245187759399414, 0.6741822957992554, 0.6297423243522644, 0.6261642575263977, 0.6199522614479065, 0.6037843823432922, 0.5786436200141907, 0.6327410340309143, 0.5687757730484009, 0.6305963397026062, 0.5606979727745056, 0.5997732877731323, 0.5388045310974121, 0.5763545632362366, 0.5422422885894775, 0.5173709988594055, 0.5131159424781799, 0.5050634741783142, 0.5118194818496704, 0.5017589330673218, 0.5099986791610718, 0.4897994101047516, 0.4888225495815277, 0.4855884313583374, 0.46942225098609924, 0.47049251198768616, 0.4612051546573639, 0.4698638617992401, 0.48982974886894226, 0.4527793228626251, 0.44651761651039124, 0.45287781953811646, 0.4425295293331146, 0.4444962441921234, 0.4491002559661865, 0.4460855722427368, 0.4476824402809143, 0.4402385354042053], "val_accuracy": [0.5536666512489319, 0.6293333172798157, 0.6830000281333923, 0.7266666889190674, 0.7086666822433472, 0.7139999866485596, 0.7400000095367432, 0.7663333415985107, 0.765999972820282, 0.762333333492279, 0.7590000033378601, 0.7770000100135803, 0.746999979019165, 0.7796666622161865, 0.7483333349227905, 0.7836666703224182, 0.7609999775886536, 0.8083333373069763, 0.7829999923706055, 0.7996666431427002, 0.8036666512489319, 0.8146666884422302, 0.8253333568572998, 0.8080000281333923, 0.8149999976158142, 0.8096666932106018, 0.8256666660308838, 0.824999988079071, 0.8293333053588867, 0.8299999833106995, 0.8353333473205566, 0.8296666741371155, 0.828000009059906, 0.8220000267028809, 0.8323333263397217, 0.8379999995231628, 0.8326666951179504, 0.8446666598320007, 0.8346666693687439, 0.8360000252723694, 0.8373333215713501, 0.8339999914169312, 0.8410000205039978]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 2, 3, 4, 3, 5, 9, 7, 7, 9, 3], [0, 0, 1, 0, 0, 1, 0], [0, 39, 39, 31, 73, 17, 24], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [1, 2, 0, 6, 3, 8, 2, 5, 3, 2, 2, 4, 3, 0, 5, 4, 0, 1, 6, 6, 9, 8, 4, 3, 2, 1, 6, 3, 8, 7, 1, 7, 1, 6, 4, 3, 0, 1], [0, 0, 3, 0, 0, 3, 2, 4, 2, 0, 0, 3, 5, 4, 0, 5, 0, 4, 4, 1, 1, 3, 2, 4, 2, 5, 5, 2], [16, 21, 52, 72, 72, 23, 37, 86, 21], [1, 1, 0, 1], [0, 7], [0, 0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 11, 7, 7, 66, 38, 28, 9, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), alpha))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), alpha)), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(tf.math.add(tf.math.add(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(tf.math.negative(grad), beta), grad)), tf.math.square(tf.math.pow(beta, tf.math.negative(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.divide_no_nan(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.math.add(grad, grad), tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(grad, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), grad), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.subtract(tf.math.add(tf.math.subtract(grad, tf.math.divide_no_nan(alpha, alpha)), tf.math.pow(grad, tf.math.multiply(tf.math.negative(beta), grad))), beta))))), grad))))))), tf.math.subtract(grad, beta)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 2], [1, 0, 1, 0, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 0, 6, 1, 8, 2, 2, 1, 2, 8, 1, 5, 6, 9, 0], [2, 0, 5, 1, 0, 5, 3, 2, 0], [17, 1, 70, 80], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 2, 25, 16, 9, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.subtract(tf.math.sqrt(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), grad), alpha), tf.math.add(tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.square(tf.math.divide_no_nan(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), grad)), grad)))), tf.math.negative(beta)), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [788.3836059570312, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [33989292.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [4, 2, 0, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 0, 6, 3, 8, 2], [4, 0, 3, 1, 0], [16, 1], [1, 0, 1, 0], [0, 8], [5, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08677849918603897, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 3, 3, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 9], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [0, 0], [0, 9], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 6, 3, 3, 1, 1, 0, 1, 0, 4, 2, 2, 1, 2, 2, 0, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3093631267547607, 2.3112802505493164, 2.3093323707580566, 2.3100476264953613, 2.310079336166382, 2.309584140777588], "accuracy": [0.09192973375320435, 0.09166556596755981, 0.0956280529499054, 0.08955223858356476, 0.09721305221319199, 0.09325055778026581], "val_loss": [2.3084888458251953, 2.3084888458251953, 2.3084888458251953, 2.3084888458251953, 2.3084888458251953, 2.3084888458251953], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]