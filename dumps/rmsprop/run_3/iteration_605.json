[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8277142643928528, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.208319664001465, 1.5962797403335571, 1.1701580286026, 0.9834251999855042, 0.9111801385879517, 0.8302772045135498, 0.7681942582130432, 0.7542905211448669, 0.7262860536575317, 0.6956115365028381, 0.6717793345451355, 0.6884703040122986, 0.658407986164093, 0.6246961951255798, 0.6076858043670654, 0.6238546967506409, 0.6071113348007202, 0.5910288095474243, 0.5688578486442566, 0.5738945007324219, 0.5564823746681213, 0.5473358631134033, 0.5340834856033325, 0.5274209976196289, 0.5182993412017822, 0.5218911170959473, 0.5128894448280334, 0.5251536965370178, 0.4990536868572235, 0.4872761368751526, 0.48872992396354675, 0.48367154598236084, 0.48006588220596313, 0.48808082938194275, 0.46698951721191406], "accuracy": [0.2689208686351776, 0.49768856167793274, 0.5822216272354126, 0.6522256135940552, 0.6729626059532166, 0.7053229212760925, 0.7177387475967407, 0.7174745798110962, 0.7313432693481445, 0.7458723783493042, 0.7528728246688843, 0.7437590956687927, 0.7541936039924622, 0.7705719470977783, 0.7729493975639343, 0.7708360552787781, 0.7732135653495789, 0.7800818681716919, 0.7865539789199829, 0.787082314491272, 0.7956677079200745, 0.802271842956543, 0.804649293422699, 0.8059701323509216, 0.8062343001365662, 0.8057059645652771, 0.8105930685997009, 0.8079513907432556, 0.8227446675300598, 0.822348415851593, 0.8177255392074585, 0.8224804997444153, 0.8260467648506165, 0.821820080280304, 0.8284242749214172], "val_loss": [1.9127706289291382, 1.1601651906967163, 0.9384805560112, 0.794692873954773, 0.7481731176376343, 0.6966058611869812, 0.6829341053962708, 0.7198752164840698, 0.6270555853843689, 0.6136430501937866, 0.5939133167266846, 0.6014883518218994, 0.584112286567688, 0.5611066222190857, 0.539286732673645, 0.5404742360115051, 0.5613089203834534, 0.5548563003540039, 0.5379811525344849, 0.5084273219108582, 0.5075963139533997, 0.4937666952610016, 0.500653862953186, 0.49485960602760315, 0.4896550178527832, 0.481128990650177, 0.4733333885669708, 0.4728858172893524, 0.47947534918785095, 0.4598117172718048, 0.48432666063308716, 0.4599551558494568, 0.48914194107055664, 0.46451830863952637, 0.47370877861976624], "val_accuracy": [0.5316666960716248, 0.5773333311080933, 0.6316666603088379, 0.7143333554267883, 0.7200000286102295, 0.7403333187103271, 0.7319999933242798, 0.7490000128746033, 0.7726666927337646, 0.7693333625793457, 0.7760000228881836, 0.7703333497047424, 0.7820000052452087, 0.793666660785675, 0.8090000152587891, 0.8029999732971191, 0.7743333578109741, 0.7773333191871643, 0.8086666464805603, 0.8119999766349792, 0.812333345413208, 0.82833331823349, 0.8226666450500488, 0.8090000152587891, 0.8223333358764648, 0.8213333487510681, 0.8293333053588867, 0.8243333101272583, 0.8333333134651184, 0.8353333473205566, 0.8109999895095825, 0.8343333601951599, 0.8209999799728394, 0.8330000042915344, 0.8286666870117188]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 1, 1, 0, 2], [26, 39, 39], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 4, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 79], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3, 6], [0, 1, 1, 2, 6], [0], [1], [0], [1], [0]], "fitness": -0.7648571133613586, "mapping_values": [1, 10, 5, 5, 2, 1, 0, 1, 0, 10, 5, 5, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.math.divide_no_nan(alpha, beta))), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0872116088867188, 1.403496503829956, 1.0114092826843262, 0.7898041009902954, 0.7574361562728882, NaN, NaN, NaN, NaN], "accuracy": [0.2919033169746399, 0.5686171054840088, 0.6404702067375183, 0.7005679607391357, 0.7104741930961609, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.0586588382720947, 0.9175211787223816, 0.6818445920944214, 0.6489654779434204, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.6190000176429749, 0.6953333616256714, 0.734000027179718, 0.7523333430290222, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [3, 2, 3, 1, 3, 5], [0, 2, 1, 1, 2, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [2, 2, 9, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [57, 1, 95], [1, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 6], [0, 1, 4, 2], [42], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 7, 1, 0, 9, 6, 6, 5, 8, 6, 7, 1], [3, 3, 4, 5, 5, 4, 5], [0]], "fitness": -0.17085714638233185, "mapping_values": [1, 11, 5, 6, 1, 13, 8, 5, 3, 1, 0, 1, 1, 19, 12, 7, 1], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(alpha, grad)), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.pow(grad, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.math.subtract(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.divide_no_nan(sigma, grad), tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(grad, tf.math.subtract(grad, grad)), grad)))))))", "other_info": {"loss": [9.985030938934836e+21, 1.202342881017704e+22, 1.175653986675953e+22, 1.1263632146542897e+22, 1.2050549487133065e+22, 1.4394819460167297e+22, 1.7364764396332952e+22, 2.2018134607011374e+22, 2.646864805377424e+22, 3.335275812038042e+22, 4.017412178517826e+22, 4.79559996677028e+22, 5.61906424351654e+22, 6.579832464262221e+22, 7.583914054424138e+22, 8.641826720572051e+22], "accuracy": [0.09760929644107819, 0.09959053993225098, 0.10566636174917221, 0.10487385839223862, 0.10474177449941635, 0.1080438494682312, 0.10500594228506088, 0.11451591551303864, 0.10857218503952026, 0.1072513535618782, 0.10777968913316727, 0.10342095047235489, 0.10157178342342377, 0.10645885765552521, 0.11200633645057678, 0.10910051316022873], "val_loss": [9.281647490133043e+21, 9.112557590323604e+21, 9.138505642526653e+21, 9.221338098673065e+21, 1.0662469150283347e+22, 1.2954828382212693e+22, 1.5918209321921455e+22, 1.9548313283565307e+22, 2.388526621392421e+22, 2.8890116479821044e+22, 3.4635108574678267e+22, 4.1140684337204515e+22, 4.823809614116203e+22, 5.5881141557973616e+22, 6.4038407980238366e+22, 7.270595926188196e+22], "val_accuracy": [0.09566666930913925, 0.10466666519641876, 0.10733333230018616, 0.11166666448116302, 0.12399999797344208, 0.14433333277702332, 0.16366666555404663, 0.17100000381469727, 0.17366667091846466, 0.17666666209697723, 0.17800000309944153, 0.17766666412353516, 0.17666666209697723, 0.17533333599567413, 0.17533333599567413, 0.17599999904632568]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 5, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 37, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [2, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 12, 6, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [5.585549354553223, 2.306670904159546, 2.3034508228302, 2.303201913833618, 2.3030331134796143, 2.303051233291626, 2.3033578395843506, 2.3031325340270996, 2.3030335903167725, 2.3028688430786133, 2.3029282093048096, 2.303008794784546, 2.303041458129883], "accuracy": [0.19019944965839386, 0.09694888442754745, 0.09840179979801178, 0.09879804402589798, 0.09760929644107819, 0.0956280529499054, 0.09311848133802414, 0.0948355570435524, 0.09576013684272766, 0.10038304328918457, 0.09536388516426086, 0.09747721254825592, 0.09787346422672272], "val_loss": [2.3099443912506104, 2.303807020187378, 2.302744150161743, 2.302783250808716, 2.30250883102417, 2.302577257156372, 2.3027377128601074, 2.3026163578033447, 2.3025519847869873, 2.3024983406066895, 2.302497148513794, 2.3026111125946045, 2.3025553226470947], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09966666996479034, 0.09566666930913925, 0.1003333330154419, 0.09833333641290665, 0.09733333438634872, 0.10466666519641876, 0.0989999994635582, 0.09833333641290665, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [2, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 6, 0, 3], [4, 1, 4, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 5, 6, 3, 15, 8, 7, 2, 8, 4, 4, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.divide_no_nan(tf.math.negative(grad), tf.math.multiply(alpha, grad)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09245806187391281, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]