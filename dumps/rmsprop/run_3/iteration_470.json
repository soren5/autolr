[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8554285764694214, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213676929473877, 1.6260327100753784, 1.143683910369873, 0.9742980599403381, 0.905768096446991, 0.8351218104362488, 0.7851074934005737, 0.7412269115447998, 0.7395317554473877, 0.711415708065033, 0.7069402933120728, 0.678230345249176, 0.6367061138153076, 0.6509361267089844, 0.6249479651451111, 0.6181301474571228, 0.596510112285614, 0.5996518135070801, 0.5853984355926514, 0.566254198551178, 0.5746713280677795, 0.5576147437095642, 0.5446452498435974, 0.5396304726600647, 0.5172899961471558, 0.545619010925293, 0.5207965970039368, 0.5165130496025085, 0.5015321969985962, 0.4937669634819031, 0.48441874980926514, 0.4920797646045685, 0.47626858949661255, 0.47793251276016235, 0.4731525182723999, 0.4620440900325775, 0.46651312708854675, 0.45247113704681396, 0.45586317777633667, 0.4512108266353607, 0.44254299998283386, 0.4377943277359009, 0.4450337886810303, 0.433260977268219, 0.4311376214027405, 0.4237311780452728, 0.42902952432632446, 0.4136289060115814, 0.41453227400779724, 0.4130176901817322, 0.39844590425491333, 0.39945289492607117, 0.39990946650505066, 0.39090973138809204, 0.39613914489746094, 0.3962012231349945, 0.3925626873970032, 0.39203161001205444, 0.3823232650756836], "accuracy": [0.2662792205810547, 0.5065380930900574, 0.6066569685935974, 0.659490168094635, 0.6744155287742615, 0.6980583667755127, 0.713908314704895, 0.7283053994178772, 0.7260599732398987, 0.7359662055969238, 0.7403249144554138, 0.7495707273483276, 0.7663452625274658, 0.7577598690986633, 0.7709681391716003, 0.7713643908500671, 0.778761088848114, 0.7790252566337585, 0.7824593782424927, 0.7913089394569397, 0.7848368883132935, 0.7928939461708069, 0.798309326171875, 0.7967243194580078, 0.8094043135643005, 0.800290584564209, 0.811649739742279, 0.8087438941001892, 0.8164047002792358, 0.8144234418869019, 0.8235371708869934, 0.8183859586715698, 0.822348415851593, 0.8281601071357727, 0.8276317715644836, 0.8322546482086182, 0.8293488025665283, 0.8367455005645752, 0.8325188159942627, 0.8381983637809753, 0.8393871188163757, 0.8422929644584656, 0.8403117060661316, 0.844010055065155, 0.8459912538528442, 0.8491612672805786, 0.8459912538528442, 0.8487650156021118, 0.8511425256729126, 0.8516708612442017, 0.8597279191017151, 0.8533879518508911, 0.8537842035293579, 0.8578787446022034, 0.8557654023170471, 0.8599920868873596, 0.8584070801734924, 0.8605204224586487, 0.8598600029945374], "val_loss": [1.9311139583587646, 1.1074284315109253, 0.9771608710289001, 0.7858006358146667, 0.7151148915290833, 0.6789993643760681, 0.6691451072692871, 0.6397503614425659, 0.6217755675315857, 0.637182354927063, 0.5786056518554688, 0.5710426568984985, 0.5599858164787292, 0.5515573024749756, 0.54337477684021, 0.5200293660163879, 0.526112973690033, 0.5345032811164856, 0.5103436708450317, 0.5099934935569763, 0.49562308192253113, 0.5069106221199036, 0.48209962248802185, 0.47433871030807495, 0.4906598627567291, 0.5204798579216003, 0.4671025276184082, 0.4671674370765686, 0.46530061960220337, 0.4500419795513153, 0.446654736995697, 0.43762192130088806, 0.44438207149505615, 0.4439742863178253, 0.44161567091941833, 0.4331801235675812, 0.44725513458251953, 0.4252970814704895, 0.42855703830718994, 0.4254489839076996, 0.4155900180339813, 0.4370979070663452, 0.4190300703048706, 0.4254917800426483, 0.4138663709163666, 0.421396940946579, 0.40383246541023254, 0.39836356043815613, 0.4188055694103241, 0.4012039005756378, 0.4035666882991791, 0.41997474431991577, 0.40390560030937195, 0.38472822308540344, 0.40163907408714294, 0.3912980854511261, 0.3859305679798126, 0.3892076015472412, 0.3987250030040741], "val_accuracy": [0.5730000138282776, 0.6159999966621399, 0.6100000143051147, 0.6980000138282776, 0.7269999980926514, 0.7519999742507935, 0.7483333349227905, 0.7603333592414856, 0.7559999823570251, 0.7463333606719971, 0.7726666927337646, 0.7856666445732117, 0.7846666574478149, 0.79666668176651, 0.7906666398048401, 0.8029999732971191, 0.7990000247955322, 0.7929999828338623, 0.8146666884422302, 0.8116666674613953, 0.8086666464805603, 0.8040000200271606, 0.8196666836738586, 0.8266666531562805, 0.8116666674613953, 0.8046666383743286, 0.8289999961853027, 0.8270000219345093, 0.8266666531562805, 0.8296666741371155, 0.8339999914169312, 0.8396666646003723, 0.8323333263397217, 0.8420000076293945, 0.8383333086967468, 0.8363333344459534, 0.8299999833106995, 0.843666672706604, 0.8416666388511658, 0.8433333039283752, 0.8486666679382324, 0.8370000123977661, 0.8506666421890259, 0.8403333425521851, 0.8506666421890259, 0.8393333554267883, 0.8503333330154419, 0.8526666760444641, 0.8460000157356262, 0.8556666374206543, 0.8536666631698608, 0.8456666469573975, 0.8553333282470703, 0.8600000143051147, 0.8546666502952576, 0.859000027179718, 0.8586666584014893, 0.8569999933242798, 0.8553333282470703]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8394285440444946, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2075355052948, 1.6045249700546265, 1.1506130695343018, 0.9749543070793152, 0.8915827870368958, 0.8320257067680359, 0.7981671690940857, 0.7744197249412537, 0.7230406403541565, 0.7428256273269653, 0.6717557907104492, 0.6698357462882996, 0.6602766513824463, 0.6468331217765808, 0.6264601349830627, 0.6215349435806274, 0.5934309959411621, 0.6080549359321594, 0.5976482033729553, 0.5760322213172913, 0.574542224407196, 0.5563373565673828, 0.5505022406578064, 0.5522825717926025, 0.5259591937065125, 0.5269084572792053, 0.5250535607337952, 0.5127850770950317, 0.5034869313240051, 0.4911586046218872, 0.49209392070770264, 0.4875759482383728, 0.4990796446800232, 0.4843037724494934, 0.4749080538749695, 0.4733123481273651, 0.4674714207649231, 0.4569554626941681, 0.453347384929657, 0.4499686360359192, 0.4486997723579407, 0.44961872696876526], "accuracy": [0.27763834595680237, 0.507330596446991, 0.5964865684509277, 0.6535464525222778, 0.6742834448814392, 0.6971337795257568, 0.7069079279899597, 0.7123233675956726, 0.7357020378112793, 0.7194558382034302, 0.7547219395637512, 0.7515519857406616, 0.7526086568832397, 0.7601373791694641, 0.7691190242767334, 0.7773081660270691, 0.7803460359573364, 0.7718927264213562, 0.7810064554214478, 0.7876105904579163, 0.7853652238845825, 0.7960638999938965, 0.7957997918128967, 0.7968564033508301, 0.8047813773155212, 0.8038568496704102, 0.8062343001365662, 0.8170651197433472, 0.8133667707443237, 0.8202351331710815, 0.824329674243927, 0.8202351331710815, 0.8177255392074585, 0.8210275769233704, 0.8267071843147278, 0.8267071843147278, 0.8323867321014404, 0.8387266993522644, 0.8366134166717529, 0.8364813327789307, 0.8359529972076416, 0.8362171649932861], "val_loss": [1.9187496900558472, 1.1134178638458252, 0.9278749823570251, 0.8605143427848816, 0.7596573233604431, 0.7165048718452454, 0.6960618495941162, 0.7022364735603333, 0.6399242877960205, 0.6164442300796509, 0.6184655427932739, 0.6079996228218079, 0.5878056287765503, 0.5635471940040588, 0.5645036101341248, 0.5440751314163208, 0.5794001221656799, 0.5509095788002014, 0.5304009318351746, 0.5259976983070374, 0.5105158090591431, 0.5520868897438049, 0.5125203728675842, 0.5015736222267151, 0.49791622161865234, 0.5095863938331604, 0.4968656301498413, 0.47965267300605774, 0.4856754541397095, 0.47606220841407776, 0.4634479284286499, 0.4701792895793915, 0.47180935740470886, 0.45674821734428406, 0.4646519422531128, 0.45807307958602905, 0.4469113051891327, 0.44828614592552185, 0.44138485193252563, 0.44391658902168274, 0.4614150822162628, 0.4306246340274811], "val_accuracy": [0.6050000190734863, 0.6486666798591614, 0.6676666736602783, 0.6840000152587891, 0.7163333296775818, 0.7353333234786987, 0.7353333234786987, 0.7456666827201843, 0.762666642665863, 0.7799999713897705, 0.7716666460037231, 0.7680000066757202, 0.7796666622161865, 0.8006666898727417, 0.7923333048820496, 0.8073333501815796, 0.7723333239555359, 0.7956666946411133, 0.8056666851043701, 0.8069999814033508, 0.8153333067893982, 0.793666660785675, 0.8130000233650208, 0.8223333358764648, 0.8173333406448364, 0.8113333582878113, 0.8230000138282776, 0.8220000267028809, 0.8199999928474426, 0.8270000219345093, 0.8296666741371155, 0.8266666531562805, 0.8259999752044678, 0.8399999737739563, 0.8299999833106995, 0.8296666741371155, 0.8410000205039978, 0.8346666693687439, 0.8353333473205566, 0.8360000252723694, 0.8299999833106995, 0.8386666774749756]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 3, 0], [16, 1], [0, 0, 1, 0, 1, 1], [0, 7, 6], [0, 6, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 5, 3, 2, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303020715713501, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 8, 3, 1, 3, 5], [0, 0, 1, 0, 0], [25, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 9, 4, 6, 7, 2, 2, 3, 6, 6, 8, 1, 4, 6, 9], [2, 0, 3, 1, 1, 3, 4, 4, 0, 0, 2, 0, 2, 5], [16, 1, 57, 50, 99, 28], [0, 0, 1, 0, 1, 1], [0, 7, 1], [0, 6, 2], [72], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 8, 7, 0, 1, 4, 7, 7, 1, 8, 8], [2, 6, 5, 7, 4, 7, 7, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 35, 21, 14, 6, 6, 3, 3, 1, 20, 12, 8, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))), tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, grad), tf.math.sqrt(grad)), tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), beta)))), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), beta), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.negative(grad))), tf.math.subtract(tf.math.pow(tf.math.add(tf.math.add(tf.math.subtract(grad, grad), grad), tf.math.sqrt(grad)), grad), tf.math.sqrt(grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 0], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [5, 6], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 4, 2, 2, 1, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [26767.197265625, 544092880896.0, 8.891743386998931e+18, 7.400168717248415e+25, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09959053993225098, 0.1006472036242485, 0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1952499.75, 34612984152064.0, 5.748282326228738e+20, 2.3025853633880615, NaN, NaN, NaN, NaN, 2.3025853633880615], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09600000083446503, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 6, 3, 5], [0, 2, 1, 0, 2], [78, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 6, 3, 8, 2], [2, 0, 1, 1, 0], [16, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 7, 0, 3, 0, 1], [0, 5, 4, 2], [0], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 1, 0, 1, 1, 3, 2, 1, 0, 10, 6, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.subtract(grad, grad)), beta)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3108434677124023, 2.3091938495635986, 2.3104302883148193, 2.31024169921875, 2.3090085983276367, 2.307864189147949], "accuracy": [0.09153348207473755, 0.09219389408826828, 0.08994849026203156, 0.08730682730674744, 0.09496764093637466, 0.0940430611371994], "val_loss": [2.3083770275115967, 2.3083770275115967, 2.3083770275115967, 2.3083770275115967, 2.3083770275115967, 2.3083770275115967], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]