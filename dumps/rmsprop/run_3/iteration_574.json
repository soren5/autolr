[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8382856845855713, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.204132318496704, 1.5828845500946045, 1.141650676727295, 0.9535516500473022, 0.8833678364753723, 0.8386098742485046, 0.7819523215293884, 0.7524608373641968, 0.723767101764679, 0.7034968733787537, 0.6832076907157898, 0.6668685078620911, 0.6595805883407593, 0.6462298035621643, 0.6149813532829285, 0.6201715469360352, 0.5892074108123779, 0.5975573062896729, 0.5728028416633606, 0.5542474389076233, 0.5668591856956482, 0.5658988356590271, 0.545370876789093, 0.544394850730896, 0.5459437966346741, 0.5216281414031982, 0.508001983165741, 0.5053437352180481, 0.4988659620285034, 0.5032325387001038, 0.48853355646133423, 0.48542264103889465, 0.4734765589237213, 0.4772133231163025, 0.467221200466156, 0.4575009346008301, 0.4575689435005188, 0.4581150710582733, 0.4560074210166931, 0.44716018438339233, 0.44685307145118713, 0.45831912755966187, 0.4296700954437256, 0.4223721921443939, 0.4282703995704651, 0.41563066840171814, 0.42869678139686584, 0.41271135210990906, 0.4074167311191559, 0.4208914041519165, 0.40167877078056335, 0.39657580852508545, 0.4021027088165283, 0.3963192105293274, 0.3921884596347809, 0.387883722782135, 0.3833693563938141], "accuracy": [0.27816668152809143, 0.5169726610183716, 0.5979394912719727, 0.6610751748085022, 0.6795667409896851, 0.6906617283821106, 0.71100252866745, 0.722757875919342, 0.7304186820983887, 0.7368907928466797, 0.7437590956687927, 0.7532690763473511, 0.7532690763473511, 0.7564390301704407, 0.7707040309906006, 0.7662131786346436, 0.7814027070999146, 0.776251494884491, 0.7833839654922485, 0.7926297783851624, 0.7800818681716919, 0.7917051911354065, 0.7991018295288086, 0.7989697456359863, 0.7928939461708069, 0.8059701323509216, 0.8136309385299683, 0.8171972036361694, 0.819442629814148, 0.8158763647079468, 0.8190463781356812, 0.8161405324935913, 0.8244617581367493, 0.8232730031013489, 0.8285563588142395, 0.8308017253875732, 0.8315942287445068, 0.8368775844573975, 0.8317263126373291, 0.8393871188163757, 0.8323867321014404, 0.8363492488861084, 0.8391229510307312, 0.8413683772087097, 0.843481719493866, 0.8479725122451782, 0.8374059200286865, 0.848368763923645, 0.8511425256729126, 0.8444063067436218, 0.8548408150672913, 0.8506141901016235, 0.8504821062088013, 0.8499537706375122, 0.8527275323867798, 0.8588033318519592, 0.8588033318519592], "val_loss": [1.9025267362594604, 1.08208167552948, 0.8300120234489441, 0.8268689513206482, 0.716788649559021, 0.6668288707733154, 0.6909831762313843, 0.6466240882873535, 0.6378621459007263, 0.6138242483139038, 0.5972022414207458, 0.6004598140716553, 0.5684603452682495, 0.5617645978927612, 0.5390916466712952, 0.525801420211792, 0.5342630743980408, 0.5134124159812927, 0.518447756767273, 0.5115494132041931, 0.5756374597549438, 0.49324604868888855, 0.49810847640037537, 0.5001609921455383, 0.5101306438446045, 0.4657188653945923, 0.4611586630344391, 0.4850016236305237, 0.49206045269966125, 0.45813655853271484, 0.45892471075057983, 0.4458440840244293, 0.44667690992355347, 0.45987069606781006, 0.4375024437904358, 0.44765612483024597, 0.4465270936489105, 0.4362260699272156, 0.4327593445777893, 0.4214822053909302, 0.46958276629447937, 0.4202427566051483, 0.4339020550251007, 0.4200655221939087, 0.4164293706417084, 0.4156249165534973, 0.407992422580719, 0.4105820655822754, 0.42408543825149536, 0.4269599914550781, 0.4093801975250244, 0.4083063006401062, 0.4135913550853729, 0.4033603370189667, 0.39822477102279663, 0.3994811475276947, 0.3991788327693939], "val_accuracy": [0.5756666660308838, 0.6773333549499512, 0.721666693687439, 0.6963333487510681, 0.734000027179718, 0.7630000114440918, 0.7363333106040955, 0.7546666860580444, 0.753333330154419, 0.7663333415985107, 0.7839999794960022, 0.7676666378974915, 0.7816666960716248, 0.79666668176651, 0.793666660785675, 0.8040000200271606, 0.800000011920929, 0.8106666803359985, 0.8023333549499512, 0.8069999814033508, 0.784333348274231, 0.8190000057220459, 0.815666675567627, 0.8223333358764648, 0.8106666803359985, 0.8309999704360962, 0.8276666402816772, 0.8236666917800903, 0.8146666884422302, 0.8330000042915344, 0.8236666917800903, 0.8343333601951599, 0.8316666483879089, 0.8270000219345093, 0.8383333086967468, 0.8383333086967468, 0.8376666903495789, 0.8353333473205566, 0.8420000076293945, 0.8456666469573975, 0.8223333358764648, 0.8483333587646484, 0.8376666903495789, 0.8503333330154419, 0.8473333120346069, 0.8503333330154419, 0.8546666502952576, 0.8526666760444641, 0.8456666469573975, 0.8366666436195374, 0.8473333120346069, 0.8576666712760925, 0.8510000109672546, 0.8423333168029785, 0.8526666760444641, 0.8543333411216736, 0.8576666712760925]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 5, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 2, 4, 2, 3, 5, 5, 2], [2, 2, 0, 4, 0, 3, 3], [16, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [7, 3, 0, 3, 1], [4, 1, 1, 2, 3], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 2, 1, 1, 0, 10, 5, 5, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.math.multiply(alpha, alpha)), tf.math.subtract(beta, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3079593181610107, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09470347315073013, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 0, 1, 0, 2], [26, 90, 39], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 9, 5, 4], [1, 2, 0, 4, 0, 3, 1], [8, 1], [0, 0, 1, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 4, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 1, 0, 1, 0, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.multiply(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3035712242126465, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 6, 6, 1, 3, 5], [0, 0, 1, 0, 2], [63, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [90, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 3, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 13, 7, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, sigma)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3030238151550293, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 3, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [8, 2, 4, 0, 3, 0, 5, 4], [2, 2, 0, 4, 3, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 13, 8, 5, 1, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.pow(beta, tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0948355570435524, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]