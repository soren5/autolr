[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8131428360939026, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.21527099609375, 1.6314623355865479, 1.1478463411331177, 0.9991007447242737, 0.913308322429657, 0.8463913798332214, 0.782787024974823, 0.7712175250053406, 0.7295976877212524, 0.7257232666015625, 0.6972252726554871, 0.6890295147895813, 0.6651014685630798, 0.6310775279998779, 0.6355040669441223, 0.6069408059120178, 0.5991091728210449, 0.5870499610900879, 0.5826975107192993, 0.5707961916923523, 0.5828513503074646, 0.5500824451446533, 0.548407256603241, 0.5420567393302917, 0.5275604724884033, 0.5300900340080261, 0.5036654472351074, 0.508141815662384, 0.4996873736381531, 0.49900975823402405, 0.5058732628822327, 0.486593097448349, 0.4905456304550171, 0.4826754331588745, 0.4684019386768341, 0.4679412841796875, 0.46170690655708313, 0.4659055173397064, 0.4582519233226776, 0.4441700875759125, 0.4441405236721039, 0.4334889352321625, 0.42834311723709106, 0.4389435350894928, 0.4216229021549225, 0.4304726719856262, 0.4257420599460602, 0.42275509238243103, 0.40438127517700195, 0.403378427028656, 0.4047229588031769, 0.411356657743454, 0.3966541588306427, 0.40450507402420044, 0.3959147334098816, 0.38887253403663635, 0.3929368257522583, 0.37975022196769714, 0.3889876902103424, 0.3814970552921295, 0.3743860125541687, 0.38149693608283997, 0.37538519501686096, 0.36326876282691956, 0.36726582050323486, 0.36983993649482727, 0.3598337769508362], "accuracy": [0.2642979919910431, 0.499009370803833, 0.5996565818786621, 0.6452252268791199, 0.6693964004516602, 0.694360077381134, 0.7113987803459167, 0.717870831489563, 0.7331924438476562, 0.7292299270629883, 0.7415136694908142, 0.7425703406333923, 0.7491744756698608, 0.7675340175628662, 0.7642319202423096, 0.776251494884491, 0.7729493975639343, 0.7821952104568481, 0.7836481332778931, 0.7877426743507385, 0.7799497842788696, 0.7988376617431641, 0.8001585006713867, 0.8047813773155212, 0.8058380484580994, 0.8054417967796326, 0.8101968169212341, 0.8145555257797241, 0.8136309385299683, 0.8178576231002808, 0.8146876096725464, 0.8171972036361694, 0.8177255392074585, 0.8202351331710815, 0.8318583965301514, 0.8300092220306396, 0.8278959393501282, 0.8276317715644836, 0.834632158279419, 0.8359529972076416, 0.8366134166717529, 0.8378021121025085, 0.8438779711723328, 0.8355567455291748, 0.846387505531311, 0.8401796221733093, 0.8424250483512878, 0.8457271456718445, 0.8511425256729126, 0.8507462739944458, 0.8541803956031799, 0.8453308939933777, 0.8541803956031799, 0.8512746095657349, 0.8504821062088013, 0.8564258217811584, 0.8532558679580688, 0.8625016212463379, 0.8577466607093811, 0.8602562546730042, 0.8626337051391602, 0.8626337051391602, 0.8610487580299377, 0.8639545440673828, 0.8672566413879395, 0.8618412613868713, 0.8697662353515625], "val_loss": [1.9382199048995972, 1.1074888706207275, 0.9674814343452454, 0.7988091111183167, 0.7545598745346069, 0.685575008392334, 0.658903181552887, 0.6322106122970581, 0.6879740953445435, 0.6051515340805054, 0.5755855441093445, 0.713484525680542, 0.561739981174469, 0.5699304342269897, 0.5559289455413818, 0.5673286318778992, 0.543805718421936, 0.5170703530311584, 0.5168944597244263, 0.53122478723526, 0.5065750479698181, 0.5090891122817993, 0.5035990476608276, 0.4965924620628357, 0.4900725781917572, 0.4740271270275116, 0.47641894221305847, 0.48623359203338623, 0.4692528545856476, 0.4602620303630829, 0.4632793664932251, 0.4459664225578308, 0.44913017749786377, 0.459679514169693, 0.4443809390068054, 0.44109994173049927, 0.4426317811012268, 0.44106435775756836, 0.4238549768924713, 0.42433223128318787, 0.42441511154174805, 0.42403414845466614, 0.4359200894832611, 0.42119133472442627, 0.42722904682159424, 0.4357142746448517, 0.41150155663490295, 0.4166368842124939, 0.4032987356185913, 0.40771275758743286, 0.40249618887901306, 0.3952900469303131, 0.41960904002189636, 0.4091835021972656, 0.39829394221305847, 0.39178240299224854, 0.3947048783302307, 0.3937687873840332, 0.38970234990119934, 0.3912275731563568, 0.3889913260936737, 0.3815002739429474, 0.37824317812919617, 0.3797386884689331, 0.37616103887557983, 0.39088425040245056, 0.38208210468292236], "val_accuracy": [0.5636666417121887, 0.6606666445732117, 0.6769999861717224, 0.7120000123977661, 0.7289999723434448, 0.7409999966621399, 0.7580000162124634, 0.7746666669845581, 0.7153333425521851, 0.7736666798591614, 0.7996666431427002, 0.7223333120346069, 0.8056666851043701, 0.7853333353996277, 0.7979999780654907, 0.793666660785675, 0.7953333258628845, 0.812666654586792, 0.815666675567627, 0.7886666655540466, 0.8236666917800903, 0.812333345413208, 0.8186666369438171, 0.8203333616256714, 0.8233333230018616, 0.8303333520889282, 0.8263333439826965, 0.8136666417121887, 0.8299999833106995, 0.840666651725769, 0.8353333473205566, 0.843999981880188, 0.8420000076293945, 0.8273333311080933, 0.8370000123977661, 0.8463333249092102, 0.847000002861023, 0.8383333086967468, 0.8403333425521851, 0.8460000157356262, 0.8453333377838135, 0.8496666550636292, 0.8379999995231628, 0.8443333506584167, 0.8463333249092102, 0.846666693687439, 0.8539999723434448, 0.8453333377838135, 0.8523333072662354, 0.8546666502952576, 0.8513333201408386, 0.8573333621025085, 0.8376666903495789, 0.8543333411216736, 0.8519999980926514, 0.8579999804496765, 0.8619999885559082, 0.8610000014305115, 0.859333336353302, 0.8616666793823242, 0.8553333282470703, 0.8686666488647461, 0.8633333444595337, 0.862666666507721, 0.862666666507721, 0.8529999852180481, 0.8646666407585144]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [3, 2, 0, 4, 0, 3, 1], [16, 1], [1, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.7845714092254639, "mapping_values": [1, 10, 5, 5, 2, 15, 8, 7, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(grad, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0761611461639404, 1.53729248046875, 1.0547995567321777, 0.841118335723877, 0.7801942825317383, 0.7363914847373962, 0.714515209197998, 0.7200680375099182, 0.7001176476478577, 0.6914899349212646, 0.7202147841453552, 0.7293952703475952, 0.7771321535110474, 1.9946484565734863, 1.6057829856872559, 1.6216537952423096], "accuracy": [0.29282790422439575, 0.55791836977005, 0.6308281421661377, 0.6828688383102417, 0.7028133869171143, 0.719852089881897, 0.7264562249183655, 0.7296261787414551, 0.7345132827758789, 0.7405890822410583, 0.7318716049194336, 0.7345132827758789, 0.7321357727050781, 0.6148461103439331, 0.544710099697113, 0.5630695819854736], "val_loss": [1.0428944826126099, 1.040116548538208, 0.6877710819244385, 0.6263583898544312, 0.6311349868774414, 0.5758177042007446, 0.5694607496261597, 0.5730776786804199, 0.5626353025436401, 0.5735353827476501, 0.5566564798355103, 0.5695366859436035, 0.706466555595398, 1.0660483837127686, 1.0784176588058472, 1.1222976446151733], "val_accuracy": [0.6366666555404663, 0.6383333206176758, 0.7296666502952576, 0.7576666474342346, 0.7513333559036255, 0.7670000195503235, 0.7720000147819519, 0.7723333239555359, 0.7816666960716248, 0.7689999938011169, 0.7919999957084656, 0.7839999794960022, 0.7493333220481873, 0.6443333625793457, 0.6206666827201843, 0.6613333225250244]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 4, 3, 8, 3, 5], [0, 2, 1, 0, 2], [26, 39, 39], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [2, 1, 4, 6, 3, 5, 2, 4], [2, 2, 3, 4, 3, 3, 3], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [10], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 14, 7, 7, 0, 8, 4, 4, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.multiply(tf.math.sqrt(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), grad), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.math.add(grad, grad)), grad), grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [6, 2, 3, 1, 3, 5], [1, 0, 2, 0, 1, 0], [29, 39, 23], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 9, 6, 3, 5, 5, 3], [2, 2, 0, 4, 0, 3, 1], [16, 1, 9], [0, 0, 0, 1, 0, 1, 1, 1], [2, 3, 5, 3], [4, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 3, 13, 8, 5, 3, 8, 4, 4, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.square(grad), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10355303436517715, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 9, 3, 1, 3, 5], [0, 0, 0, 0, 2], [50, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 1, 4, 0, 3, 1], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1], [7, 3, 0, 3, 9], [0, 1, 1, 2], [0, 21], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 15, 8, 7, 1, 8, 5, 3, 2, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(alpha, grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3037595748901367, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}]