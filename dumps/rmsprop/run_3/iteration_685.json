[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8171428442001343, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2103431224823, 1.6185269355773926, 1.1454715728759766, 0.9765370488166809, 0.8608441352844238, 0.8160775899887085, 0.7655806541442871, 0.7489666938781738, 0.7081450819969177, 0.689075767993927, 0.680787205696106, 0.660196840763092, 0.6359013319015503, 0.6153272390365601, 0.6214520931243896, 0.5956103205680847, 0.5833376049995422, 0.5702933073043823, 0.5722965598106384, 0.5422801971435547, 0.5378818511962891, 0.5247145891189575, 0.5134243369102478, 0.5322259068489075, 0.508288562297821, 0.52144455909729, 0.4913593828678131, 0.4960867166519165, 0.4916958212852478, 0.4827677607536316, 0.48497331142425537, 0.4627687633037567, 0.4589988887310028, 0.45430538058280945, 0.4531622529029846, 0.4456689655780792, 0.4492347240447998, 0.4302442967891693, 0.4361986517906189, 0.43032482266426086, 0.4279352128505707, 0.4252893626689911, 0.4157411456108093, 0.4146697223186493, 0.4161575138568878, 0.4077185392379761, 0.4008723795413971, 0.3940088450908661, 0.40192100405693054, 0.39056360721588135], "accuracy": [0.26799631118774414, 0.4979526996612549, 0.605468213558197, 0.6474705934524536, 0.689869225025177, 0.7017567157745361, 0.7223616242408752, 0.722757875919342, 0.7411174178123474, 0.7456082701683044, 0.744419515132904, 0.7556465268135071, 0.7625148296356201, 0.7741381525993347, 0.7730814814567566, 0.7784969210624695, 0.7861577272415161, 0.7901201844215393, 0.7876105904579163, 0.7987055778503418, 0.802800178527832, 0.8047813773155212, 0.8088759779930115, 0.802271842956543, 0.8149517774581909, 0.8076872229576111, 0.8228767514228821, 0.8185180425643921, 0.8181217908859253, 0.8206313848495483, 0.8224804997444153, 0.8354246616363525, 0.8327829837799072, 0.8360850811004639, 0.8335754871368408, 0.8383304476737976, 0.8348963260650635, 0.8428213000297546, 0.8374059200286865, 0.8461233377456665, 0.8430854678153992, 0.8413683772087097, 0.8533879518508911, 0.8469158411026001, 0.8482366800308228, 0.8527275323867798, 0.8514066934585571, 0.8557654023170471, 0.8540483713150024, 0.856689989566803], "val_loss": [1.9207665920257568, 1.0953460931777954, 0.8703029751777649, 0.8052341938018799, 0.7334846258163452, 0.7356318235397339, 0.6885229349136353, 0.6618414521217346, 0.6753482818603516, 0.6341203451156616, 0.6347675919532776, 0.6119018793106079, 0.572102963924408, 0.5747831463813782, 0.5611734986305237, 0.5472673177719116, 0.5322766900062561, 0.5439033508300781, 0.5216007232666016, 0.5117383599281311, 0.5162948966026306, 0.4922972023487091, 0.5484331250190735, 0.4758145213127136, 0.4820491075515747, 0.47633910179138184, 0.47299084067344666, 0.4755486249923706, 0.4714941084384918, 0.46880748867988586, 0.4582189917564392, 0.45665013790130615, 0.4438154697418213, 0.44751566648483276, 0.43671125173568726, 0.4502410590648651, 0.45496660470962524, 0.4330836534500122, 0.4450567662715912, 0.42297354340553284, 0.42443957924842834, 0.4184982180595398, 0.4209480881690979, 0.4181024134159088, 0.41524046659469604, 0.42504557967185974, 0.4211892783641815, 0.4100400507450104, 0.40723171830177307, 0.4078340530395508], "val_accuracy": [0.5230000019073486, 0.6586666703224182, 0.6949999928474426, 0.70333331823349, 0.7229999899864197, 0.7020000219345093, 0.734333336353302, 0.7446666955947876, 0.7176666855812073, 0.750333309173584, 0.7603333592414856, 0.7699999809265137, 0.781000018119812, 0.7883333563804626, 0.7860000133514404, 0.7940000295639038, 0.7879999876022339, 0.7836666703224182, 0.8063333630561829, 0.8090000152587891, 0.7979999780654907, 0.8163333535194397, 0.7746666669845581, 0.8199999928474426, 0.8176666498184204, 0.8270000219345093, 0.8266666531562805, 0.8169999718666077, 0.8180000185966492, 0.8216666579246521, 0.831333339214325, 0.8293333053588867, 0.8353333473205566, 0.8299999833106995, 0.8399999737739563, 0.8343333601951599, 0.8226666450500488, 0.8366666436195374, 0.8326666951179504, 0.8450000286102295, 0.843999981880188, 0.8456666469573975, 0.8486666679382324, 0.8446666598320007, 0.8533333539962769, 0.8403333425521851, 0.8503333330154419, 0.8510000109672546, 0.8489999771118164, 0.8460000157356262]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1], [7, 3, 0, 2, 9], [6, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.7202857136726379, "mapping_values": [1, 10, 5, 5, 3, 12, 7, 5, 2, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0549864768981934, 1.7084918022155762, 1.2471014261245728, 1.1851534843444824, 2.1701836585998535, 55533.38671875, NaN, NaN], "accuracy": [0.30220577120780945, 0.5263505578041077, 0.5717870593070984, 0.6107515692710876, 0.5025756359100342, 0.3086778521537781, 0.11411966383457184, 0.09998679161071777], "val_loss": [1.315432071685791, 1.1527503728866577, 0.784798800945282, 1.0647343397140503, 1.9998857975006104, 5189019893760.0, NaN, NaN], "val_accuracy": [0.5476666688919067, 0.6103333234786987, 0.7369999885559082, 0.640999972820282, 0.42633333802223206, 0.10000000149011612, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 7, 5], [0, 0, 1, 2, 2], [26, 39, 39], [1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 3], [2, 2, 0, 4, 0, 1, 1], [16, 1], [0, 0, 1, 1, 0, 0, 1, 1], [7, 3, 0, 8], [0, 1, 0, 4], [0, 27], [1], [0], [1], [0]], "fitness": -0.2565714418888092, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 0, 7, 4, 3, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), grad), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.negative(tf.math.sqrt(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.793030261993408, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2164839506149292, 0.1278562992811203, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.1871838569641113, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.25566667318344116, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [3, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [2, 2, 4, 4, 0, 0, 5, 4, 3, 4, 7, 8, 3, 6, 9, 7, 7, 9], [2, 2, 0, 4, 3, 3, 1, 5, 0, 3, 3], [16, 1, 72, 72], [0, 1, 0, 1], [5, 7], [6, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 29, 18, 11, 4, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(beta), tf.math.negative(tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(grad, tf.math.add(grad, tf.math.sqrt(tf.math.multiply(tf.math.divide_no_nan(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))))))), grad), tf.math.add(grad, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [7, 2, 3, 1, 3, 5], [0, 0, 2, 1, 2], [35, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 5, 0, 3, 1], [16, 1], [0, 0, 1, 1, 1, 1, 0, 1], [7, 3, 0, 2], [0, 1, 1, 4], [80], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 4, 5, 2, 14, 8, 6, 2, 5, 2, 3, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), alpha), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09087307006120682, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]