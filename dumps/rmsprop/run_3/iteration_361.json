[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8539999723434448, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2108490467071533, 1.6031280755996704, 1.1586053371429443, 1.0017169713974, 0.9027997255325317, 0.8509687781333923, 0.7821087837219238, 0.7510325312614441, 0.7681663632392883, 0.7239335179328918, 0.7042371034622192, 0.6705950498580933, 0.6701738238334656, 0.6410457491874695, 0.6455509066581726, 0.6122079491615295, 0.6216953992843628, 0.6117597222328186, 0.5990164279937744, 0.5723549127578735, 0.5750733613967896, 0.5654271245002747, 0.5603346228599548, 0.5531269907951355, 0.543151319026947, 0.5325374007225037, 0.523846447467804, 0.515398383140564, 0.5130863785743713, 0.5047292113304138, 0.511211097240448, 0.489170640707016, 0.4864640533924103, 0.4842982292175293, 0.47540971636772156, 0.4720350503921509, 0.46809497475624084, 0.46228352189064026, 0.46422722935676575, 0.4534793794155121, 0.45032545924186707, 0.44704577326774597, 0.43839192390441895, 0.4372914135456085, 0.44019392132759094, 0.4282222390174866, 0.414899617433548, 0.42131656408309937, 0.4295532703399658, 0.4157116115093231, 0.39912712574005127, 0.4099557399749756, 0.4104830026626587, 0.40346992015838623, 0.40090474486351013, 0.38478195667266846, 0.39120081067085266, 0.38766616582870483, 0.3841533958911896, 0.37545040249824524, 0.37709566950798035, 0.37396249175071716, 0.36828750371932983, 0.36231529712677, 0.37067341804504395, 0.36960527300834656, 0.36422786116600037, 0.3631508946418762, 0.3479906916618347, 0.3558589220046997, 0.35364899039268494, 0.34216275811195374, 0.3413783013820648], "accuracy": [0.2658829689025879, 0.5038964748382568, 0.5926561951637268, 0.6362435817718506, 0.6732267737388611, 0.6902654767036438, 0.711530864238739, 0.7235503792762756, 0.7207766771316528, 0.7279091477394104, 0.7391361594200134, 0.7582882046699524, 0.746268630027771, 0.7626469135284424, 0.759609043598175, 0.7754589915275574, 0.7625148296356201, 0.7757231593132019, 0.7700436115264893, 0.7889314293861389, 0.7889314293861389, 0.7868181467056274, 0.7898560166358948, 0.7997622489929199, 0.798309326171875, 0.8030643463134766, 0.8080834746360779, 0.8125742673873901, 0.8132346868515015, 0.8161405324935913, 0.8128384351730347, 0.8238013386726379, 0.8271034359931946, 0.8224804997444153, 0.8290846943855286, 0.8278959393501282, 0.830669641494751, 0.833179235458374, 0.833179235458374, 0.8341038227081299, 0.837537944316864, 0.8366134166717529, 0.8391229510307312, 0.843481719493866, 0.8399154543876648, 0.8416325449943542, 0.8506141901016235, 0.848368763923645, 0.8404437899589539, 0.8453308939933777, 0.8536521196365356, 0.8490291833877563, 0.8507462739944458, 0.8562937378883362, 0.8520671129226685, 0.8610487580299377, 0.8573504090309143, 0.8595958352088928, 0.8590674996376038, 0.8631620407104492, 0.8622375130653381, 0.8631620407104492, 0.8681812286376953, 0.8667283058166504, 0.8626337051391602, 0.8658037185668945, 0.8628978729248047, 0.8687095642089844, 0.8659358024597168, 0.868049144744873, 0.8716153502464294, 0.874389111995697, 0.8757099509239197], "val_loss": [1.9235763549804688, 1.1314831972122192, 0.8731655478477478, 0.807879626750946, 0.7705962061882019, 0.6980771422386169, 0.6661664247512817, 0.697576105594635, 0.66929030418396, 0.5976685285568237, 0.5922770500183105, 0.5830627679824829, 0.6373900771141052, 0.5411273837089539, 0.5578807592391968, 0.5548969507217407, 0.5392282009124756, 0.5990676879882812, 0.5256581902503967, 0.5300251245498657, 0.5082780718803406, 0.5017443299293518, 0.5056119561195374, 0.5075571537017822, 0.4926685094833374, 0.47513166069984436, 0.4797607362270355, 0.4600391089916229, 0.46047335863113403, 0.5116149187088013, 0.4663454294204712, 0.452178955078125, 0.4634062945842743, 0.44287997484207153, 0.4433993399143219, 0.43838903307914734, 0.43588727712631226, 0.4394426941871643, 0.43417826294898987, 0.43312549591064453, 0.4629688262939453, 0.431441068649292, 0.4245022237300873, 0.41809216141700745, 0.4273024797439575, 0.40897610783576965, 0.41044068336486816, 0.45049646496772766, 0.4001186192035675, 0.4124038815498352, 0.4094165861606598, 0.3972887098789215, 0.39708682894706726, 0.39355671405792236, 0.39122965931892395, 0.40282538533210754, 0.3918760120868683, 0.3897528350353241, 0.3919954299926758, 0.39045262336730957, 0.40663614869117737, 0.3902661204338074, 0.37542790174484253, 0.3986421823501587, 0.3837566673755646, 0.3817605674266815, 0.37363508343696594, 0.37688878178596497, 0.37387850880622864, 0.387358158826828, 0.3793269991874695, 0.36945849657058716, 0.38200435042381287], "val_accuracy": [0.5073333382606506, 0.6323333382606506, 0.7126666903495789, 0.70333331823349, 0.7099999785423279, 0.7419999837875366, 0.7593333125114441, 0.7426666617393494, 0.7416666746139526, 0.7753333449363708, 0.7826666831970215, 0.7836666703224182, 0.7506666779518127, 0.8023333549499512, 0.8023333549499512, 0.7903333306312561, 0.7916666865348816, 0.7573333382606506, 0.8106666803359985, 0.8083333373069763, 0.8216666579246521, 0.8140000104904175, 0.8166666626930237, 0.812666654586792, 0.8216666579246521, 0.8276666402816772, 0.8323333263397217, 0.8420000076293945, 0.8433333039283752, 0.8066666722297668, 0.8323333263397217, 0.8443333506584167, 0.8296666741371155, 0.8426666855812073, 0.8416666388511658, 0.8450000286102295, 0.8426666855812073, 0.847000002861023, 0.8496666550636292, 0.8516666889190674, 0.8263333439826965, 0.8443333506584167, 0.8500000238418579, 0.8519999980926514, 0.8479999899864197, 0.8579999804496765, 0.8553333282470703, 0.8206666707992554, 0.8616666793823242, 0.8510000109672546, 0.8573333621025085, 0.8616666793823242, 0.8576666712760925, 0.8633333444595337, 0.8633333444595337, 0.859000027179718, 0.8603333234786987, 0.8636666536331177, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197, 0.8616666793823242, 0.8709999918937683, 0.8606666922569275, 0.8673333525657654, 0.862666666507721, 0.8709999918937683, 0.8726666569709778, 0.8696666955947876, 0.8606666922569275, 0.8693333268165588, 0.871999979019165, 0.8656666874885559]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8202857375144958, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213197946548462, 1.617964506149292, 1.1636499166488647, 1.012774109840393, 0.8830518126487732, 0.8447962403297424, 0.7919273972511292, 0.7688047289848328, 0.7399149537086487, 0.7186486721038818, 0.7108219861984253, 0.68691086769104, 0.6865463256835938, 0.6368972659111023, 0.6420159339904785, 0.6262298226356506, 0.6110016107559204, 0.6007376909255981, 0.5872952342033386, 0.5867458581924438, 0.5760224461555481, 0.5605059862136841, 0.5657113790512085, 0.5468853116035461, 0.5295451879501343, 0.5347925424575806, 0.5202515721321106, 0.5074365735054016, 0.504562258720398, 0.5182647705078125, 0.4940863847732544, 0.4916418790817261, 0.4928722381591797, 0.47590959072113037, 0.48236531019210815, 0.477792888879776, 0.4736742377281189, 0.4681550860404968, 0.4624016582965851, 0.4480856955051422, 0.44753387570381165, 0.4460206925868988, 0.4393555521965027, 0.43804970383644104, 0.4298928678035736, 0.4375826120376587, 0.4277612566947937, 0.43264639377593994, 0.4174475073814392], "accuracy": [0.2685246467590332, 0.49451854825019836, 0.594241201877594, 0.6394135355949402, 0.6839255094528198, 0.6972658634185791, 0.7111346125602722, 0.7185312509536743, 0.7279091477394104, 0.7433628439903259, 0.7383436560630798, 0.7441553473472595, 0.7383436560630798, 0.7671377658843994, 0.7652885913848877, 0.7671377658843994, 0.7738739848136902, 0.7807422876358032, 0.7802139520645142, 0.7866860628128052, 0.7860256433486938, 0.7926297783851624, 0.7905164361000061, 0.800290584564209, 0.8055738806724548, 0.8014793395996094, 0.8055738806724548, 0.8144234418869019, 0.8124422430992126, 0.8137630224227905, 0.8177255392074585, 0.819970965385437, 0.8201030492782593, 0.8247259259223938, 0.8231409192085266, 0.8241975903511047, 0.8260467648506165, 0.8269713521003723, 0.8297450542449951, 0.8364813327789307, 0.8385946154594421, 0.8358209133148193, 0.8383304476737976, 0.8417646288871765, 0.8425571322441101, 0.8381983637809753, 0.8450667262077332, 0.8411042094230652, 0.8496896028518677], "val_loss": [1.932268738746643, 1.108809232711792, 0.9510838985443115, 0.8035117387771606, 0.7422567009925842, 0.6757748126983643, 0.6576375961303711, 0.6286027431488037, 0.6113317608833313, 0.5877156853675842, 0.5939315557479858, 0.5706418752670288, 0.5782980918884277, 0.5509185194969177, 0.5443321466445923, 0.5680644512176514, 0.5368047952651978, 0.5275943279266357, 0.5033472776412964, 0.5392929911613464, 0.5141794085502625, 0.49241095781326294, 0.5062906742095947, 0.4827320873737335, 0.498495489358902, 0.48697608709335327, 0.5072121024131775, 0.4772653877735138, 0.4619404971599579, 0.4694407880306244, 0.4664422869682312, 0.49139463901519775, 0.4702552556991577, 0.450108140707016, 0.4526490867137909, 0.4446096122264862, 0.4396093785762787, 0.44015321135520935, 0.44225069880485535, 0.42937543988227844, 0.43253663182258606, 0.4352092146873474, 0.43053296208381653, 0.4224138855934143, 0.43541911244392395, 0.4195951819419861, 0.41204434633255005, 0.42041754722595215, 0.4222242832183838], "val_accuracy": [0.4959999918937683, 0.6483333110809326, 0.6263333559036255, 0.721666693687439, 0.7283333539962769, 0.7509999871253967, 0.753333330154419, 0.7580000162124634, 0.7699999809265137, 0.781333327293396, 0.7746666669845581, 0.7916666865348816, 0.7789999842643738, 0.7850000262260437, 0.7986666560173035, 0.7730000019073486, 0.8016666769981384, 0.7906666398048401, 0.8059999942779541, 0.7956666946411133, 0.8003333210945129, 0.8199999928474426, 0.79666668176651, 0.8196666836738586, 0.8076666593551636, 0.8226666450500488, 0.8046666383743286, 0.8196666836738586, 0.8339999914169312, 0.8213333487510681, 0.824999988079071, 0.8143333196640015, 0.8230000138282776, 0.8349999785423279, 0.8299999833106995, 0.8306666612625122, 0.8413333296775818, 0.8383333086967468, 0.8423333168029785, 0.8429999947547913, 0.8373333215713501, 0.8403333425521851, 0.8410000205039978, 0.8476666808128357, 0.8286666870117188, 0.8453333377838135, 0.847000002861023, 0.8476666808128357, 0.8429999947547913]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [5, 2, 3, 1, 0, 5], [0, 0, 1, 0, 2], [0, 65, 39], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 0, 4, 1, 8, 4, 2, 0, 6, 9, 4, 1, 4, 2, 7, 2, 7, 8, 9, 5, 9], [2, 0, 3, 1, 0, 0, 4, 1, 1, 0, 3, 4, 5, 0], [16, 1, 51, 82, 36, 58, 59, 11], [0, 0, 1, 0, 0, 1, 1, 1], [1, 7, 0, 2], [5, 3, 4, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 41, 27, 14, 8, 8, 4, 4, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(grad, tf.math.negative(alpha)), tf.math.divide_no_nan(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(tf.math.add(tf.math.sqrt(grad), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))), grad), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(grad, tf.math.negative(tf.math.add(sigma, grad))), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 3], [9, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 2, 7, 4, 1, 5, 5, 1, 8, 9, 1, 4, 0, 8, 8, 1, 3, 1, 0, 0, 1, 2, 2, 1, 4, 7, 0, 8, 4, 9, 4, 8, 0, 0, 6, 5, 3, 7, 0, 7, 2], [2, 0, 4, 1, 0, 1, 2, 0, 4, 5, 3, 2, 2, 2, 2, 1, 1, 1, 4, 2, 5, 0, 0, 3, 1, 4], [33, 1, 6, 13, 0, 84, 43], [0, 0, 1, 1], [0, 2], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 73, 47, 26, 7, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.add(tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.math.subtract(tf.math.square(tf.math.square(alpha)), tf.math.subtract(tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.sqrt(tf.math.sqrt(alpha))), beta)))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), grad)), grad), tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.negative(grad)), tf.math.subtract(tf.math.add(tf.math.add(tf.math.subtract(tf.math.pow(beta, beta), beta), tf.math.add(beta, alpha)), tf.math.negative(alpha)), tf.math.sqrt(tf.math.pow(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))))), tf.math.pow(grad, tf.math.sqrt(tf.math.negative(tf.math.negative(tf.math.divide_no_nan(beta, tf.math.square(grad))))))), tf.math.multiply(tf.math.add(tf.math.negative(tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), grad), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [1, 2, 3, 1, 3, 9], [0, 0, 1, 0, 0], [0, 39, 39, 88], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [6, 2, 0, 6, 7, 4, 2, 1, 7, 4, 3, 0, 3, 0, 9, 3, 7, 3, 7, 9, 2, 9, 9], [2, 0, 3, 1, 0, 0, 1, 3, 3, 1, 2, 2, 2], [16, 1, 86, 78, 98, 90, 65], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 4, 5, 4, 36, 23, 13, 7, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.pow(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(alpha), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.math.add(tf.math.multiply(tf.math.add(grad, alpha), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), beta))), beta), beta)), tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [23.920190811157227, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17791573703289032, 0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [72589.5859375, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 9, 8], [0, 0, 1, 0, 2], [0, 65, 39, 79], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 5, 4], [2, 0, 3, 1, 0, 4], [16, 1], [1, 1, 1, 1], [0, 7], [0, 6], [23], [0, 0, 1, 0, 0, 0, 0], [0, 6, 5, 5, 0, 9], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 11, 7, 4, 4, 15, 9, 6, 2, 1, 0, 1, 1, 7, 6, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(grad), tf.math.pow(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(beta, tf.math.square(tf.math.square(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [2.3094754219055176, 2.3102128505706787, 2.3097617626190186, 2.3105030059814453, 2.3096916675567627, 2.308133363723755], "accuracy": [0.09285431355237961, 0.09668471664190292, 0.09140139818191528, 0.09311848133802414, 0.09074098616838455, 0.09721305221319199], "val_loss": [2.3089864253997803, 2.3089864253997803, 2.3089864253997803, 2.3089864253997803, 2.3089864253997803, 2.3089864253997803], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]