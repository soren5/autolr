[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.7851428389549255, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.205906391143799, 1.5914541482925415, 1.133352518081665, 0.9783087372779846, 0.8967785835266113, 0.822177529335022, 0.7759219408035278, 0.741990327835083, 0.7300775051116943, 0.700359046459198, 0.7012295722961426, 0.6573399901390076, 0.6663907766342163, 0.6379214525222778, 0.6457741260528564, 0.6152864694595337, 0.5914950966835022, 0.591203510761261], "accuracy": [0.2723550498485565, 0.5077268481254578, 0.6000528335571289, 0.6576409935951233, 0.6693964004516602, 0.703209638595581, 0.7131158113479614, 0.7297582626342773, 0.7306828498840332, 0.7424382567405701, 0.7343811988830566, 0.7547219395637512, 0.752740740776062, 0.7627789974212646, 0.7577598690986633, 0.7718927264213562, 0.7817989587783813, 0.780610203742981], "val_loss": [1.9062200784683228, 1.0683245658874512, 0.9241930246353149, 0.779177188873291, 0.7617935538291931, 0.6533552408218384, 0.6569567322731018, 0.6699557900428772, 0.589618444442749, 0.5881526470184326, 0.571316659450531, 0.5659330487251282, 0.5354086756706238, 0.5386878252029419, 0.5600059628486633, 0.5278851389884949, 0.5224618315696716, 0.5365124940872192], "val_accuracy": [0.5766666531562805, 0.6653333306312561, 0.6553333401679993, 0.7020000219345093, 0.6993333101272583, 0.7576666474342346, 0.7516666650772095, 0.7473333477973938, 0.7756666541099548, 0.7739999890327454, 0.7876666784286499, 0.7786666750907898, 0.7960000038146973, 0.7910000085830688, 0.7919999957084656, 0.7960000038146973, 0.7860000133514404, 0.7760000228881836]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 2, 2], [26, 39, 69], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 3, 2, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [7, 3, 0, 3, 1, 4, 2, 6, 3, 8, 6, 6, 9, 1, 3, 8], [0, 1, 1, 2, 7, 6, 0, 0, 3, 0, 7, 6], [0, 35, 37, 82, 9], [1], [0], [4], [0]], "fitness": -0.2677142918109894, "mapping_values": [1, 6, 3, 3, 2, 13, 7, 6, 1, 28, 16, 12, 5, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.square(tf.math.square(grad))), beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.math.subtract(alpha, tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(beta, tf.math.divide_no_nan(grad, grad))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), sigma)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))))), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.236060380935669, 2.7066667079925537, 2.410090208053589, 2.304908037185669, 2.303525686264038, 2.303082227706909, 2.30326509475708], "accuracy": [0.21133272349834442, 0.16523577272891998, 0.1158367469906807, 0.1002509593963623, 0.09813763201236725, 0.10566636174917221, 0.09549596905708313], "val_loss": [2.2113349437713623, 2.566159963607788, 2.305344343185425, 2.3030569553375244, 2.3026678562164307, 2.302557945251465, 2.302518606185913], "val_accuracy": [0.25699999928474426, 0.2619999945163727, 0.10166666656732559, 0.10166666656732559, 0.09866666793823242, 0.09966666996479034, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [2, 0, 1, 0, 2], [27, 39, 39], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4, 0, 5, 3], [2, 2, 0, 4, 0, 3, 1, 5, 3], [16, 1], [0, 0, 0, 1, 1, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [77], [1], [0], [1], [0]], "fitness": -0.1459999978542328, "mapping_values": [1, 11, 6, 5, 2, 17, 10, 7, 2, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.negative(tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3088371753692627, 2.3092100620269775, 2.3050920963287354, 2.3025548458099365, 2.300097703933716, 2.3001227378845215, 2.3003883361816406, 2.3005497455596924, 2.300956964492798, 2.301217555999756, 2.301774501800537, 2.301976203918457, 2.302180528640747, 2.302239179611206, 2.302424192428589], "accuracy": [0.09417514503002167, 0.09602430462837219, 0.09972262382507324, 0.09919429570436478, 0.10447761416435242, 0.10579843819141388, 0.10381719470024109, 0.11002509295940399, 0.11557257920503616, 0.12310130894184113, 0.12323339283466339, 0.13247919082641602, 0.12891295552253723, 0.12138422578573227, 0.11227050423622131], "val_loss": [2.307978630065918, 2.305588722229004, 2.302849292755127, 2.300689220428467, 2.299875259399414, 2.3000173568725586, 2.3003828525543213, 2.3008296489715576, 2.301227331161499, 2.3015785217285156, 2.3019003868103027, 2.3021256923675537, 2.3023202419281006, 2.302492618560791, 2.302610397338867], "val_accuracy": [0.09466666728258133, 0.09433333575725555, 0.10100000351667404, 0.11133333295583725, 0.11100000143051147, 0.11133333295583725, 0.10466666519641876, 0.1106666699051857, 0.13366666436195374, 0.15166667103767395, 0.1496666669845581, 0.13099999725818634, 0.10866666585206985, 0.09600000083446503, 0.0949999988079071]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [2, 0, 4, 6, 3, 6, 5, 4, 0, 5, 3], [2, 3, 0, 4, 2, 3, 1, 1, 3], [16, 1], [0, 0, 0, 1, 1, 1, 1, 1], [7, 3, 0, 3], [0, 4, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 19, 11, 8, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.negative(beta)), tf.math.square(grad)))), tf.math.multiply(alpha, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303365707397461, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 8, 3, 1, 3, 5], [2, 0, 1, 0, 2], [26, 39, 39], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 4, 5, 5, 8], [2, 2, 0, 4, 0, 3, 1], [80, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 3, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 7, 4, 3, 1, 13, 7, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.subtract(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.pow(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(sigma, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3090851306915283, 2.30938982963562, 2.309739112854004, 2.310828924179077, 2.310636281967163, 2.310612916946411], "accuracy": [0.09642054885625839, 0.09430722147226334, 0.08994849026203156, 0.08889182657003403, 0.09047681838274002, 0.09008057415485382], "val_loss": [2.3080546855926514, 2.3080546855926514, 2.3080546855926514, 2.3080546855926514, 2.3080546855926514, 2.3080546855926514], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]