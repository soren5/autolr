[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8320000171661377, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2061171531677246, 1.5919177532196045, 1.1406044960021973, 0.9733476638793945, 0.8775901198387146, 0.8033733367919922, 0.7989903688430786, 0.7563478946685791, 0.6878443956375122, 0.7180713415145874, 0.6734745502471924, 0.6614505648612976, 0.6612508893013, 0.6504606008529663, 0.6130635738372803, 0.6358528137207031, 0.594990074634552, 0.5931385159492493, 0.564831554889679, 0.5855821371078491, 0.5538193583488464, 0.5561748743057251, 0.5418288111686707, 0.5495215654373169, 0.5319117903709412, 0.5238116979598999, 0.5302910804748535, 0.5101057887077332, 0.5092687010765076, 0.5042567253112793, 0.4960123598575592, 0.4897359013557434, 0.47960805892944336, 0.47483450174331665, 0.47516730427742004, 0.4805750250816345, 0.458891898393631, 0.4634804129600525, 0.45726481080055237, 0.4421902596950531, 0.4463407099246979, 0.43716585636138916, 0.4371718466281891, 0.43468278646469116, 0.43105387687683105, 0.42228570580482483, 0.42714637517929077, 0.4199408292770386, 0.4149337410926819, 0.41295039653778076, 0.4033278524875641, 0.4024517238140106, 0.39648187160491943], "accuracy": [0.270109623670578, 0.514198899269104, 0.6042794585227966, 0.6524897813796997, 0.683529257774353, 0.7083608508110046, 0.707568347454071, 0.7153612375259399, 0.7427024245262146, 0.72672039270401, 0.748249888420105, 0.7510236501693726, 0.7499669790267944, 0.7614582180976868, 0.7707040309906006, 0.7540615797042847, 0.7733456492424011, 0.7740060687065125, 0.7858935594558716, 0.7786290049552917, 0.7915731072425842, 0.791441023349762, 0.7938185334205627, 0.7940827012062073, 0.8021397590637207, 0.8063663840293884, 0.8005547523498535, 0.8096684813499451, 0.8104609847068787, 0.8098005652427673, 0.8183859586715698, 0.8185180425643921, 0.8203672170639038, 0.8220842480659485, 0.8244617581367493, 0.8198388814926147, 0.8260467648506165, 0.8298771381378174, 0.8310658931732178, 0.8347642421722412, 0.8321225643157959, 0.8355567455291748, 0.8362171649932861, 0.8391229510307312, 0.8360850811004639, 0.8385946154594421, 0.837141752243042, 0.8413683772087097, 0.8412362933158875, 0.8481045961380005, 0.8462554216384888, 0.8536521196365356, 0.8556333184242249], "val_loss": [1.9122599363327026, 1.1248769760131836, 0.8831555247306824, 0.7793955206871033, 0.7155672311782837, 0.6841138601303101, 0.6929969787597656, 0.6215474605560303, 0.6270912885665894, 0.5961153507232666, 0.5634886622428894, 0.5900835990905762, 0.5963221192359924, 0.5352770090103149, 0.5358967781066895, 0.5391198992729187, 0.5125016570091248, 0.5195835828781128, 0.5177884101867676, 0.4872312843799591, 0.5041847229003906, 0.4870060980319977, 0.5105993747711182, 0.4693422317504883, 0.48247388005256653, 0.4594404995441437, 0.46087646484375, 0.4582088589668274, 0.4602077901363373, 0.45487216114997864, 0.4552499055862427, 0.4349724054336548, 0.45188644528388977, 0.4251154661178589, 0.43574100732803345, 0.4271291196346283, 0.43111294507980347, 0.41934216022491455, 0.42237162590026855, 0.42360278964042664, 0.40846750140190125, 0.427437961101532, 0.4222477972507477, 0.4079541563987732, 0.41225558519363403, 0.4152238368988037, 0.4089813530445099, 0.3944143056869507, 0.4025472402572632, 0.40355944633483887, 0.3981574773788452, 0.40397167205810547, 0.4069145619869232], "val_accuracy": [0.562666654586792, 0.6463333368301392, 0.6836666464805603, 0.6970000267028809, 0.7419999837875366, 0.7316666841506958, 0.7193333506584167, 0.7646666765213013, 0.7463333606719971, 0.7726666927337646, 0.7803333401679993, 0.762666642665863, 0.7756666541099548, 0.7926666736602783, 0.7913333177566528, 0.8006666898727417, 0.8106666803359985, 0.7953333258628845, 0.7926666736602783, 0.8163333535194397, 0.8006666898727417, 0.8149999976158142, 0.8083333373069763, 0.8306666612625122, 0.8090000152587891, 0.8299999833106995, 0.8333333134651184, 0.831333339214325, 0.82833331823349, 0.828000009059906, 0.8253333568572998, 0.843666672706604, 0.8330000042915344, 0.8396666646003723, 0.8309999704360962, 0.8473333120346069, 0.8389999866485596, 0.8450000286102295, 0.8483333587646484, 0.8450000286102295, 0.8496666550636292, 0.840666651725769, 0.8396666646003723, 0.8533333539962769, 0.8413333296775818, 0.8510000109672546, 0.8503333330154419, 0.8566666841506958, 0.8513333201408386, 0.8503333330154419, 0.8510000109672546, 0.8433333039283752, 0.8446666598320007]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [2, 0, 4, 7, 0, 5, 2, 4, 8, 7, 9, 1, 9, 2, 6], [1, 2, 0, 4, 0, 3, 1, 4], [16, 1, 87, 38], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 5, 1, 4], [0], [1], [0], [5], [0]], "fitness": -0.5405714511871338, "mapping_values": [1, 10, 5, 5, 3, 23, 15, 8, 4, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(tf.math.add(tf.math.pow(tf.math.sqrt(beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad))), tf.math.subtract(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.divide_no_nan(grad, alpha), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [5.430324554443359, 2.291185140609741, 2.30491304397583, 2.303863763809204, 2.3030052185058594, 2.3005144596099854, 2.1330840587615967, 2.205958604812622, 2.309633731842041, 2.3967576026916504, 2.307070255279541, 2.304002046585083], "accuracy": [0.19059570133686066, 0.1426495909690857, 0.09668471664190292, 0.09417514503002167, 0.09760929644107819, 0.10593052208423615, 0.22480517625808716, 0.2739400267601013, 0.10791176557540894, 0.13961167633533478, 0.10130762308835983, 0.09589222073554993], "val_loss": [2.2775166034698486, 2.304224967956543, 2.3030059337615967, 2.302433967590332, 2.301699638366699, 2.2891154289245605, 1.3691084384918213, 2.316500425338745, 2.285534143447876, 2.3098933696746826, 2.304231882095337, 2.3029937744140625], "val_accuracy": [0.10533333569765091, 0.1003333330154419, 0.10233332961797714, 0.10166666656732559, 0.09733333438634872, 0.13500000536441803, 0.5460000038146973, 0.09799999743700027, 0.1276666671037674, 0.09799999743700027, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 7, 3, 2, 3, 7, 0, 0], [0, 1, 1, 0, 2, 3, 3, 1], [26, 16, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 8, 5, 5, 4], [2, 0, 0, 1, 0], [94, 1], [1, 0, 1, 1], [0, 7], [0, 1, 1, 4], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 10, 8, 2, 5, 3, 2, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.add(grad, grad), tf.math.negative(grad)), tf.math.negative(alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.pow(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [2, 7, 4, 1, 0, 5, 9, 4], [1, 2, 0, 4, 0, 3, 1], [48, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 8, 4, 2, 2, 9, 3], [1, 4, 2, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 5, 2, 3, 1, 4, 2, 2, 1, 11, 7, 4, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(alpha, beta), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.pow(alpha, tf.math.add(tf.math.add(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], [6, 7, 3, 1, 3, 5, 6, 4, 8, 0, 1, 6, 0, 6, 0, 7, 8, 5, 8, 8, 5, 2, 1, 3, 8, 3, 4, 2, 9], [0, 0, 1, 0, 2, 1, 0, 3, 2, 3, 2, 1, 2, 3, 0, 0, 1], [77, 39, 39, 80, 92, 65, 15], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [2, 4, 7, 7, 0, 5, 5, 4, 9, 5], [1, 3, 0, 4, 0, 3, 1], [16, 54, 98], [0, 0, 0, 1, 0, 1, 1, 1], [7, 6, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 46, 29, 17, 7, 15, 10, 5, 3, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.math.pow(alpha, tf.math.sqrt(tf.math.negative(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(grad, tf.math.negative(grad))), tf.math.add(tf.math.sqrt(tf.math.square(tf.math.sqrt(tf.math.sqrt(tf.math.square(grad))))), tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.sqrt(grad), alpha), grad), tf.math.multiply(grad, tf.math.pow(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), alpha)))))), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.square(grad)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.square(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]