[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8282856941223145, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2132468223571777, 1.6130789518356323, 1.138018250465393, 0.9828651547431946, 0.903211772441864, 0.8388042449951172, 0.7966873049736023, 0.7787479162216187, 0.7314741015434265, 0.7333890795707703, 0.7065529227256775, 0.6770751476287842, 0.6524442434310913, 0.6491072177886963, 0.6260202527046204, 0.62123042345047, 0.5995900630950928, 0.5898269414901733, 0.6060948967933655, 0.5885547399520874, 0.5675064921379089, 0.5637375116348267, 0.5558047294616699, 0.551101803779602, 0.5417435765266418], "accuracy": [0.26403382420539856, 0.4974243938922882, 0.5955620408058167, 0.6474705934524536, 0.674679696559906, 0.6970016956329346, 0.7047945857048035, 0.7099458575248718, 0.7292299270629883, 0.7280412316322327, 0.7343811988830566, 0.7535332441329956, 0.7605336308479309, 0.761590301990509, 0.7688548564910889, 0.7700436115264893, 0.7773081660270691, 0.7808743715286255, 0.7751948237419128, 0.7815347909927368, 0.7877426743507385, 0.7886672616004944, 0.7915731072425842, 0.7931581139564514, 0.7964601516723633], "val_loss": [1.923902988433838, 1.0880863666534424, 0.9999890327453613, 0.916570782661438, 0.7274342179298401, 0.7001022696495056, 0.7359204888343811, 0.6193661689758301, 0.6435402631759644, 0.6049963235855103, 0.5796006917953491, 0.5788005590438843, 0.5529201626777649, 0.5544856190681458, 0.5605157017707825, 0.5223876237869263, 0.5496895909309387, 0.528756320476532, 0.519702672958374, 0.48973071575164795, 0.49153468012809753, 0.5023273229598999, 0.48123112320899963, 0.4792211055755615, 0.48831576108932495], "val_accuracy": [0.5716666579246521, 0.6786666512489319, 0.628333330154419, 0.6733333468437195, 0.7383333444595337, 0.7436666488647461, 0.722000002861023, 0.7599999904632568, 0.7566666603088379, 0.765999972820282, 0.7829999923706055, 0.7699999809265137, 0.7956666946411133, 0.7789999842643738, 0.7876666784286499, 0.8009999990463257, 0.7896666526794434, 0.793666660785675, 0.7940000295639038, 0.8253333568572998, 0.812333345413208, 0.8036666512489319, 0.8223333358764648, 0.8176666498184204, 0.8086666464805603]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 35, 39], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [2, 9, 6, 0, 0, 5, 5, 7, 7, 7, 8, 3, 9, 0, 7, 1, 8, 4, 5, 6, 7, 1, 3, 3, 0, 3, 1, 5, 8, 7, 8, 1, 2, 7, 4, 1, 8, 4, 2, 6, 6, 7, 7, 6, 7, 8, 5, 5, 9, 2, 5, 5, 7], [1, 2, 0, 4, 0, 3, 1, 4, 1, 2, 5, 3, 4, 1, 0, 0, 5, 5, 2, 4, 3, 4, 5, 3, 1, 3, 2, 3, 4, 3], [16, 20, 77, 92, 64, 43, 6], [0, 0, 0, 1, 0, 1, 1, 0], [0, 3, 0, 2], [0, 1, 1, 4], [62], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 83, 53, 30, 7, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.math.square(tf.math.square(tf.math.add(tf.math.add(tf.math.add(tf.math.sqrt(alpha), beta), tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.negative(grad)))))), tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(tf.math.pow(tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.subtract(grad, tf.math.multiply(tf.math.multiply(tf.math.negative(alpha), grad), tf.math.multiply(alpha, beta))), tf.math.subtract(tf.math.square(tf.math.sqrt(tf.math.add(grad, tf.math.sqrt(grad)))), grad)), tf.math.subtract(alpha, tf.math.add(tf.math.add(tf.math.pow(tf.math.subtract(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)))), beta), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(tf.math.divide_no_nan(grad, grad), tf.math.add(grad, tf.math.sqrt(grad)))), alpha), grad)), tf.math.square(tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(tf.math.square(beta), grad))), tf.math.square(tf.math.add(grad, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [29337.287109375, 4503638.0, 76504616.0, 554520896.0, 2411089664.0, 7874176512.0], "accuracy": [0.09668471664190292, 0.09932637959718704, 0.09985470771789551, 0.09906221181154251, 0.1018359512090683, 0.09549596905708313], "val_loss": [302603.1875, 16223274.0, 173964400.0, 948092288.0, 3550764288.0, 10472852480.0], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0], [26, 39, 39, 19], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [0, 9, 4, 7, 0, 5, 9, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 1, 0, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [0, 0, 1, 1], [0, 4], [1, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 4, 2, 1, 1, 0, 8, 4, 4, 1, 4, 2, 2, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(alpha, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 9, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [2, 8, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [1, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [5, 6, 1, 4], [0], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 3, 1, 2, 11, 7, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.square(beta))), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 69], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [0, 2, 0, 4, 0, 3, 1], [16, 42, 63], [0, 1, 1, 1, 0, 1, 1, 1], [4, 3, 0, 2], [5, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.09971428662538528, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(grad, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [893346.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20776647329330444, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [113694939807744.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}]