[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8305714130401611, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2104525566101074, 1.6085987091064453, 1.1525088548660278, 0.9776445627212524, 0.8800925612449646, 0.818741500377655, 0.8066417574882507, 0.7406816482543945, 0.7173950672149658, 0.7009407877922058, 0.6942087411880493, 0.6527940630912781, 0.6480877995491028, 0.6251960396766663, 0.6403192281723022, 0.5955784320831299, 0.6080959439277649, 0.5691859722137451, 0.5898296236991882, 0.5622567534446716, 0.54505854845047, 0.5584385991096497, 0.5326002836227417, 0.523369312286377, 0.5222066044807434, 0.5146755576133728, 0.5020653009414673, 0.5125933289527893, 0.5118141174316406, 0.48331892490386963, 0.48527640104293823, 0.47259092330932617, 0.47082260251045227, 0.47568607330322266, 0.45862022042274475, 0.4618853032588959, 0.45139652490615845, 0.46381089091300964, 0.43704333901405334, 0.4426244795322418, 0.4419967830181122, 0.42767438292503357, 0.4356573522090912, 0.42005035281181335, 0.4216877520084381, 0.4159940779209137, 0.4130339026451111, 0.4174753427505493, 0.40875500440597534, 0.4028085172176361, 0.40057000517845154, 0.4017445147037506, 0.3954460024833679, 0.3927329182624817, 0.39201316237449646, 0.3779304027557373, 0.3769932985305786, 0.3824905753135681, 0.3743070662021637, 0.36837249994277954, 0.3701760470867157, 0.3608735501766205, 0.3592013120651245, 0.36322495341300964, 0.36255091428756714], "accuracy": [0.27024170756340027, 0.5120856165885925, 0.5914674401283264, 0.6583014130592346, 0.6778497099876404, 0.7049266695976257, 0.7013604640960693, 0.7277770638465881, 0.7304186820983887, 0.7403249144554138, 0.7404569983482361, 0.7581561207771301, 0.7547219395637512, 0.7737419009208679, 0.7627789974212646, 0.7744023203849792, 0.7700436115264893, 0.7848368883132935, 0.7803460359573364, 0.7909126877784729, 0.7979130744934082, 0.7931581139564514, 0.7979130744934082, 0.804649293422699, 0.8033285140991211, 0.8096684813499451, 0.8171972036361694, 0.8070268034934998, 0.809140145778656, 0.8214238286018372, 0.8144234418869019, 0.8253863453865051, 0.8310658931732178, 0.8244617581367493, 0.833179235458374, 0.8317263126373291, 0.8321225643157959, 0.8285563588142395, 0.8359529972076416, 0.8370096683502197, 0.8383304476737976, 0.8475762605667114, 0.8428213000297546, 0.8474441766738892, 0.8466516733169556, 0.8445383906364441, 0.8519350290298462, 0.8473120927810669, 0.8482366800308228, 0.8525954484939575, 0.8561616539955139, 0.8527275323867798, 0.8578787446022034, 0.8585391640663147, 0.8577466607093811, 0.8654074668884277, 0.8560295701026917, 0.854708731174469, 0.8621054291725159, 0.8644828796386719, 0.8603883385658264, 0.8687095642089844, 0.8627657890319824, 0.8664641380310059, 0.8726720213890076], "val_loss": [1.9166709184646606, 1.092181921005249, 0.9293594360351562, 0.7707874178886414, 0.7643740773200989, 0.6816664338111877, 0.641676664352417, 0.6083168983459473, 0.645641028881073, 0.6527660489082336, 0.5904924273490906, 0.5989384055137634, 0.563777506351471, 0.5625427961349487, 0.5505544543266296, 0.5614376664161682, 0.5300756692886353, 0.5380574464797974, 0.5275090336799622, 0.5182616114616394, 0.5115000009536743, 0.49992790818214417, 0.49205338954925537, 0.4969662129878998, 0.5018667578697205, 0.4771370589733124, 0.4703589379787445, 0.4888245463371277, 0.4705151319503784, 0.4815981090068817, 0.45671987533569336, 0.4480394423007965, 0.48234426975250244, 0.455691397190094, 0.45309415459632874, 0.4511685371398926, 0.43701764941215515, 0.45540308952331543, 0.4282594919204712, 0.4283998906612396, 0.4242684841156006, 0.4324071407318115, 0.4205056130886078, 0.4204026162624359, 0.4154512584209442, 0.42424634099006653, 0.43803706765174866, 0.41805243492126465, 0.40738925337791443, 0.4057752788066864, 0.4106125831604004, 0.42179545760154724, 0.41475871205329895, 0.40994173288345337, 0.39330706000328064, 0.41193872690200806, 0.403790682554245, 0.41381609439849854, 0.39926350116729736, 0.39116543531417847, 0.38644811511039734, 0.3926412761211395, 0.3915318250656128, 0.40711262822151184, 0.38602450489997864], "val_accuracy": [0.5210000276565552, 0.6456666588783264, 0.6366666555404663, 0.7193333506584167, 0.7269999980926514, 0.7459999918937683, 0.7583333253860474, 0.7746666669845581, 0.7549999952316284, 0.7369999885559082, 0.7823333144187927, 0.7636666893959045, 0.7749999761581421, 0.7873333096504211, 0.7916666865348816, 0.7919999957084656, 0.7976666688919067, 0.8059999942779541, 0.8023333549499512, 0.8006666898727417, 0.812666654586792, 0.8230000138282776, 0.8190000057220459, 0.8203333616256714, 0.8146666884422302, 0.828000009059906, 0.828000009059906, 0.8186666369438171, 0.831333339214325, 0.8253333568572998, 0.8333333134651184, 0.8463333249092102, 0.8230000138282776, 0.8360000252723694, 0.8353333473205566, 0.8326666951179504, 0.8493333458900452, 0.8320000171661377, 0.8489999771118164, 0.8443333506584167, 0.8550000190734863, 0.847000002861023, 0.8533333539962769, 0.8573333621025085, 0.8576666712760925, 0.8519999980926514, 0.8379999995231628, 0.8500000238418579, 0.8600000143051147, 0.8619999885559082, 0.8576666712760925, 0.847000002861023, 0.8526666760444641, 0.8523333072662354, 0.8653333187103271, 0.8533333539962769, 0.862666666507721, 0.8463333249092102, 0.8583333492279053, 0.8686666488647461, 0.8659999966621399, 0.859333336353302, 0.8610000014305115, 0.8569999933242798, 0.8640000224113464]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5, 8, 8], [0, 1, 1, 0, 2], [26, 39, 39], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [2, 2, 8, 4, 0, 5, 5, 2], [2, 2, 0, 4, 0, 1, 1], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2, 1, 9, 4], [4, 7, 1, 4, 0], [0, 62], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 2, 5, 2, 3, 1, 12, 7, 5, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.square(alpha))), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), tf.math.pow(alpha, grad)), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 7, 3, 1, 3, 5, 5], [1, 0, 1, 0, 3], [26, 47, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4, 6, 3, 6, 0, 4, 6, 0, 0, 9], [2, 2, 0, 4, 3, 3, 1, 5, 3, 3], [16, 1], [1, 0, 1, 1, 0, 1, 0, 1], [7, 9, 0, 2], [5, 2, 1, 3], [65], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 2, 27, 17, 10, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(alpha, tf.math.square(tf.math.square(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(tf.math.pow(tf.math.negative(tf.math.square(tf.math.square(beta))), tf.math.pow(tf.math.divide_no_nan(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), grad), grad), tf.math.multiply(tf.math.divide_no_nan(alpha, tf.math.negative(tf.math.pow(tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), grad))), grad)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1095.105224609375, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17870822548866272, 0.10777968913316727, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1190.391357421875, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.05900000035762787, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 0, 0, 2], [26, 1, 39, 74], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [2, 2, 4, 2, 2, 5, 7, 4, 4, 7, 1, 0, 5, 2, 8, 0, 3, 1, 3, 5, 7, 9, 0], [2, 2, 0, 4, 0, 3, 1, 4, 3, 2, 5, 4, 5, 3, 0], [16, 1, 10, 39], [0, 0, 1, 1, 1, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 4, 38, 23, 15, 4, 5, 2, 3, 1, 2, 1, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(tf.math.add(tf.math.add(tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.pow(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), alpha), tf.math.subtract(tf.math.negative(grad), tf.math.square(grad))), tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.math.multiply(beta, tf.math.square(tf.math.add(grad, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))), grad), grad))), grad)), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [Infinity, 46.899818420410156, 146.4765167236328, 302.86419677734375, 515.6806030273438, 786.2683715820312], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [20.207626342773438, 96.4193344116211, 229.41050720214844, 419.1375427246094, 665.6483764648438, 968.8209838867188], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 0, 3, 1, 3, 5], [1, 1, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 7, 3, 8, 2, 8], [2, 2, 0, 4, 0, 3, 1], [56, 1], [0, 1, 1, 1], [4, 7], [0, 1, 1, 4], [0], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 5, 3, 2, 0, 4, 3, 1, 0, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3095080852508545, 2.3100674152374268, 2.311201333999634, 2.310453176498413, 2.3100764751434326, 2.3115878105163574], "accuracy": [0.09655263274908066, 0.08836349099874496, 0.08625016361474991, 0.09430722147226334, 0.09325055778026581, 0.08532558381557465], "val_loss": [2.3085718154907227, 2.3085718154907227, 2.3085718154907227, 2.3085718154907227, 2.3085718154907227, 2.3085718154907227], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]