[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8322857022285461, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2089786529541016, 1.5951303243637085, 1.1295583248138428, 0.9579657912254333, 0.8835057020187378, 0.8034579157829285, 0.7650055289268494, 0.7577029466629028, 0.7197880744934082, 0.7243346571922302, 0.6735702157020569, 0.6769388914108276, 0.6633941531181335, 0.6376195549964905, 0.6329976320266724, 0.6133683323860168, 0.5987625122070312, 0.5930514931678772, 0.594918966293335, 0.5708757638931274, 0.5734211206436157, 0.5623748898506165, 0.5594066977500916, 0.5373768210411072, 0.534367024898529, 0.5304381251335144, 0.5243561863899231, 0.5158324837684631, 0.5059555768966675, 0.5248495936393738, 0.49830809235572815, 0.49967122077941895, 0.4767621159553528, 0.4877443313598633, 0.4759361445903778, 0.4693545997142792, 0.4746240973472595, 0.46528130769729614, 0.45996275544166565, 0.4672759771347046, 0.46102893352508545, 0.4410178065299988, 0.4431202709674835, 0.4391411244869232, 0.4295753538608551, 0.43427222967147827, 0.4209963083267212, 0.422620564699173, 0.4112400710582733], "accuracy": [0.2631092369556427, 0.5087835192680359, 0.6103553175926208, 0.6580372452735901, 0.6837934255599976, 0.7092854380607605, 0.7152291536331177, 0.715889573097229, 0.7351737022399902, 0.7308149337768555, 0.7486461400985718, 0.744419515132904, 0.7530049085617065, 0.7582882046699524, 0.7605336308479309, 0.7725531458854675, 0.7795535326004028, 0.7769119143486023, 0.7745344042778015, 0.7827235460281372, 0.7812706232070923, 0.791441023349762, 0.793950617313385, 0.8041210174560547, 0.7976489067077637, 0.8026680946350098, 0.8055738806724548, 0.8092722296714783, 0.8088759779930115, 0.8024039268493652, 0.8137630224227905, 0.8128384351730347, 0.8195747137069702, 0.8158763647079468, 0.8264430165290833, 0.8247259259223938, 0.824329674243927, 0.8271034359931946, 0.8272355198860168, 0.8248580098152161, 0.8297450542449951, 0.8323867321014404, 0.8329150676727295, 0.8381983637809753, 0.839519202709198, 0.8380662798881531, 0.8424250483512878, 0.8388587832450867, 0.8490291833877563], "val_loss": [1.9152716398239136, 1.0830819606781006, 0.8644190430641174, 0.801382303237915, 0.7439466118812561, 0.6621963977813721, 0.6459195017814636, 0.6229203343391418, 0.6566563248634338, 0.6032571792602539, 0.587774395942688, 0.5712070465087891, 0.5877397656440735, 0.5430540442466736, 0.5508778691291809, 0.5304439663887024, 0.5442903637886047, 0.5224123597145081, 0.5017105937004089, 0.5130885243415833, 0.5174300670623779, 0.49451109766960144, 0.4797312319278717, 0.4720071256160736, 0.4681744873523712, 0.4627828001976013, 0.4689692258834839, 0.4620871841907501, 0.47976380586624146, 0.44981104135513306, 0.4515799283981323, 0.44088876247406006, 0.44118839502334595, 0.4525417983531952, 0.4365392327308655, 0.43891680240631104, 0.43422937393188477, 0.42571255564689636, 0.4460936188697815, 0.41670870780944824, 0.41579505801200867, 0.4352504014968872, 0.40944167971611023, 0.4010373055934906, 0.4108008146286011, 0.4018482565879822, 0.4005347490310669, 0.40209147334098816, 0.4004569947719574], "val_accuracy": [0.5693333148956299, 0.6520000100135803, 0.7046666741371155, 0.7113333344459534, 0.7166666388511658, 0.7369999885559082, 0.753000020980835, 0.7606666684150696, 0.746666669845581, 0.7703333497047424, 0.7763333320617676, 0.7710000276565552, 0.7683333158493042, 0.7906666398048401, 0.7730000019073486, 0.8009999990463257, 0.778333306312561, 0.7933333516120911, 0.8069999814033508, 0.8080000281333923, 0.7923333048820496, 0.8153333067893982, 0.8270000219345093, 0.8296666741371155, 0.8183333277702332, 0.8303333520889282, 0.8119999766349792, 0.8180000185966492, 0.8133333325386047, 0.8346666693687439, 0.8339999914169312, 0.8383333086967468, 0.8330000042915344, 0.8276666402816772, 0.8373333215713501, 0.8326666951179504, 0.8429999947547913, 0.8450000286102295, 0.8299999833106995, 0.8386666774749756, 0.8460000157356262, 0.8376666903495789, 0.8523333072662354, 0.8553333282470703, 0.8473333120346069, 0.8496666550636292, 0.8510000109672546, 0.8513333201408386, 0.8476666808128357]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 6, 4, 3, 5], [0, 0, 1, 0, 2], [26, 10, 30], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [2, 2, 4, 4, 3, 5, 5, 4], [3, 3, 0, 4, 0, 3, 1], [16, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [7, 3, 0, 2, 4, 1, 3, 3, 7, 6, 7, 3, 7, 3, 4, 9, 7], [0, 1, 1, 0, 5, 2, 4, 2, 3, 4, 6, 3, 7, 4, 7], [2, 74, 30], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 13, 7, 6, 2, 30, 16, 14, 3, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(grad, tf.math.pow(tf.math.multiply(tf.math.square(grad), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.negative(tf.math.add(tf.math.pow(alpha, tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, grad)), tf.math.divide_no_nan(tf.math.add(beta, sigma), tf.math.multiply(grad, tf.math.add(grad, sigma))))), tf.math.multiply(tf.math.pow(grad, grad), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.207171411289525e+31, 231825.375, 411415.59375, 592388.75, 772157.9375, 952042.9375], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [157691.84375, 337910.0625, 518127.1875, 698343.125, 878558.0625, 1058771.75], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 6, 1, 2, 5], [0, 0, 1, 0, 2], [26, 39, 39], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [2, 2, 4, 0, 2, 5, 5, 3, 7], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [7, 3, 0, 2, 4, 1, 3, 3, 7, 6, 7, 3, 7, 0, 4, 9, 7, 9], [0, 1, 2, 4, 2, 3, 6, 4, 7, 7, 3, 0, 4, 4, 6], [0, 89, 28, 32], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 31, 18, 13, 4, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.divide_no_nan(alpha, beta), grad), tf.math.add(beta, tf.math.multiply(tf.math.add(sigma, tf.math.negative(tf.math.pow(grad, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), grad))), grad), tf.math.add(grad, sigma)), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [29693.861328125, 4478648.0, 75411016.0, 532697728.0, 2365968128.0, 7769836544.0], "accuracy": [0.0956280529499054, 0.10434553027153015, 0.09959053993225098, 0.10342095047235489, 0.10210011899471283, 0.09853387624025345], "val_loss": [302882.46875, 16238335.0, 174126224.0, 948975104.0, 3554070528.0, 10482614272.0], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 9], [0, 0, 1, 0, 2], [26, 39, 39, 88], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [2, 2, 9, 4, 0, 5, 4, 4], [2, 2, 2, 0, 0, 3, 1], [16, 84], [0, 0, 0, 1, 1, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [0, 0, 1], [0, 0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 4, 5, 3, 2, 1, 6, 3, 3, 1, 3, 2, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(alpha))", "other_info": {"loss": [2.303513765335083, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [7, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2, 0], [26, 67, 39, 63], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [6, 2, 0, 4, 0, 5, 5, 4, 7], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], [7, 3, 2, 2, 1, 2, 3, 2, 8, 5, 7, 6, 5], [5, 1, 1, 4, 2, 0, 7, 2, 1, 0, 1], [0, 75], [0, 0, 1], [0, 5], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 4, 15, 9, 6, 2, 24, 13, 11, 2, 3, 2, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(grad), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(beta), tf.math.pow(beta, tf.math.negative(tf.math.square(tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(alpha, grad))), tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.square(beta)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]