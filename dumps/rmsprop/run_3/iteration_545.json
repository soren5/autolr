[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 4, 0, 3, 5, 5], [2, 0, 3, 4, 0], [16, 1], [0, 0, 1, 1], [0, 3], [0, 1], [0], [1], [0], [1], [0]], "fitness": -0.8640000224113464, "mapping_values": [1, 10, 5, 5, 3, 11, 7, 4, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(beta, tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.square(tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.094151735305786, 1.3882733583450317, 0.9449622631072998, 0.7542887330055237, 0.6653364300727844, 0.6123809814453125, 0.571014404296875, 0.5415046811103821, 0.5136042237281799, 0.48325100541114807, 0.45103219151496887, 0.43477341532707214, 0.42370668053627014, 0.4172060489654541, 0.39630377292633057, 0.38267725706100464, 0.37752974033355713, 0.36027809977531433, 0.3463052809238434, 0.3435782790184021, 0.3393411934375763, 0.3196658492088318, 0.31609436869621277, 0.3181915283203125, 0.3138122856616974, 0.2917603552341461, 0.2874463200569153, 0.27969828248023987, 0.2698565721511841, 0.2599274516105652, 0.25458863377571106, 0.268848717212677, 0.2537553608417511, 0.2403108775615692, 0.24829329550266266, 0.2326507717370987, 0.2241906225681305, 0.2228294163942337, 0.22097860276699066, 0.20976707339286804, 0.2046913504600525, 0.21091116964817047, 0.2057671695947647, 0.19242450594902039, 0.18294739723205566, 0.1845606416463852], "accuracy": [0.2851670980453491, 0.5489367246627808, 0.64667809009552, 0.7067758440971375, 0.7434949278831482, 0.7548540234565735, 0.7779685854911804, 0.789459764957428, 0.8068947196006775, 0.8158763647079468, 0.8226125836372375, 0.8379341959953308, 0.8403117060661316, 0.8413683772087097, 0.8490291833877563, 0.8512746095657349, 0.8558974862098694, 0.8642187118530273, 0.8654074668884277, 0.8679170608520508, 0.8671245574951172, 0.8775591254234314, 0.8751816153526306, 0.8787478804588318, 0.8836349248886108, 0.8857482671737671, 0.8899748921394348, 0.8905032277107239, 0.8924844861030579, 0.9027869701385498, 0.901862382888794, 0.8956544995307922, 0.9006736278533936, 0.9056927561759949, 0.901862382888794, 0.9097873568534851, 0.9124290347099304, 0.9115044474601746, 0.9108440279960632, 0.9166556596755981, 0.9190331697463989, 0.9158631563186646, 0.9196935892105103, 0.9228635430335999, 0.9249768853187561, 0.9260335564613342], "val_loss": [1.0477627515792847, 0.9874409437179565, 0.6845077276229858, 0.6230834126472473, 0.5759083032608032, 0.5278292894363403, 0.5029460191726685, 0.478335440158844, 0.44320377707481384, 0.4312228262424469, 0.40777865052223206, 0.3948100507259369, 0.39689648151397705, 0.3989790081977844, 0.3827349841594696, 0.3775750398635864, 0.3734096586704254, 0.3735611140727997, 0.3611333966255188, 0.36832085251808167, 0.3563389480113983, 0.3623865842819214, 0.3597482442855835, 0.3594178855419159, 0.3642641305923462, 0.35348454117774963, 0.36682093143463135, 0.3597624599933624, 0.34932851791381836, 0.36092066764831543, 0.37269604206085205, 0.3598594665527344, 0.36875495314598083, 0.35989511013031006, 0.3553566038608551, 0.36101233959198, 0.36627131700515747, 0.3812447786331177, 0.3623507618904114, 0.365321546792984, 0.36226433515548706, 0.3815944790840149, 0.3795269727706909, 0.37946492433547974, 0.3673567771911621, 0.3782532513141632], "val_accuracy": [0.6520000100135803, 0.6643333435058594, 0.7296666502952576, 0.7516666650772095, 0.7676666378974915, 0.7940000295639038, 0.796999990940094, 0.8100000023841858, 0.8306666612625122, 0.8379999995231628, 0.8503333330154419, 0.8610000014305115, 0.8569999933242798, 0.8566666841506958, 0.8606666922569275, 0.8666666746139526, 0.8633333444595337, 0.8659999966621399, 0.8730000257492065, 0.8713333606719971, 0.8706666827201843, 0.8723333477973938, 0.8769999742507935, 0.8736666440963745, 0.8766666650772095, 0.8803333044052124, 0.8830000162124634, 0.8759999871253967, 0.8813333511352539, 0.8786666393280029, 0.8799999952316284, 0.8836666941642761, 0.8816666603088379, 0.8799999952316284, 0.8826666474342346, 0.8843333125114441, 0.8823333382606506, 0.8840000033378601, 0.8880000114440918, 0.8826666474342346, 0.890666663646698, 0.8793333172798157, 0.8830000162124634, 0.8846666812896729, 0.8849999904632568, 0.8899999856948853]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8174285888671875, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2105016708374023, 1.6036322116851807, 1.1660181283950806, 0.9675884246826172, 0.8821943402290344, 0.8346264958381653, 0.7962743639945984, 0.7654656767845154, 0.7223287224769592, 0.7225446105003357, 0.6823294758796692, 0.671977162361145, 0.6423256397247314, 0.6675902605056763, 0.6128819584846497, 0.6302371025085449, 0.6058790683746338, 0.5840591788291931, 0.5824451446533203, 0.5764936804771423, 0.563656747341156, 0.5608142018318176, 0.5484304428100586, 0.5338686108589172, 0.5319985747337341], "accuracy": [0.26443007588386536, 0.5155197381973267, 0.5938449501991272, 0.6629242897033691, 0.6848500967025757, 0.6992471218109131, 0.7091533541679382, 0.7214370369911194, 0.7429665923118591, 0.7341170310974121, 0.7536653280258179, 0.755118191242218, 0.7666094303131104, 0.7561748623847961, 0.7733456492424011, 0.7712323069572449, 0.7815347909927368, 0.7860256433486938, 0.7861577272415161, 0.7877426743507385, 0.7987055778503418, 0.7973847389221191, 0.8001585006713867, 0.8078193068504333, 0.8039889335632324], "val_loss": [1.914556622505188, 1.2022943496704102, 0.8997395634651184, 0.8046950101852417, 0.7341970205307007, 0.6962810158729553, 0.6506993174552917, 0.6831520199775696, 0.6111541390419006, 0.5941041707992554, 0.5783733129501343, 0.5746493935585022, 0.6484299302101135, 0.5428740382194519, 0.5538562536239624, 0.5452784895896912, 0.527047872543335, 0.5323705673217773, 0.5113961696624756, 0.4911978244781494, 0.5016444325447083, 0.4888918399810791, 0.5276975631713867, 0.49228164553642273, 0.5140356421470642], "val_accuracy": [0.6186666488647461, 0.5853333473205566, 0.6763333082199097, 0.6869999766349792, 0.7286666631698608, 0.7450000047683716, 0.7596666812896729, 0.7519999742507935, 0.765666663646698, 0.7760000228881836, 0.7870000004768372, 0.7823333144187927, 0.7436666488647461, 0.7943333387374878, 0.7926666736602783, 0.7900000214576721, 0.8013333082199097, 0.8026666641235352, 0.8029999732971191, 0.8253333568572998, 0.8190000057220459, 0.8206666707992554, 0.7960000038146973, 0.8073333501815796, 0.8016666769981384]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 8, 3, 1, 3, 5, 7, 7, 8, 7, 2, 3, 6, 2, 5], [0, 0, 1, 0, 2, 2, 3, 0, 1, 0, 1], [26, 39, 46, 62, 41], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 4, 0, 3, 5, 5], [2, 0, 3, 0, 0], [16, 1], [0, 0, 1, 1], [0, 3], [2, 1], [0], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 15, 11, 5, 7, 4, 3, 1, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.math.add(tf.math.add(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.multiply(grad, tf.math.divide_no_nan(grad, tf.math.add(tf.math.square(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), alpha))))))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [1, 2, 4, 0, 3, 0, 5], [2, 0, 3, 4, 0], [16, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [2, 3, 8, 3, 3, 9], [0, 1, 2, 7], [0, 69], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 8, 4, 4, 1, 10, 6, 4, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.pow(beta, tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, beta)), tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [29667.419921875, 4368707.5, 76999768.0, 536792096.0, 2376076800.0, 7753952768.0], "accuracy": [0.09879804402589798, 0.1002509593963623, 0.10315678268671036, 0.09906221181154251, 0.10038304328918457, 0.1014397069811821], "val_loss": [304544.5625, 16328023.0, 175088912.0, 954224064.0, 3573733888.0, 10540579840.0], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [1, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [9, 2, 4, 0, 3, 5, 5], [2, 3, 3, 5, 0], [16, 1], [0, 0, 0, 1, 0, 1, 1], [0, 3, 3, 0], [0, 6, 6], [63], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 1, 1, 0, 1, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [91.95545196533203, 10723.1943359375, 182493.921875, 1288971.0, 5549192.0, 18647950.0], "accuracy": [0.09615638852119446, 0.09985470771789551, 0.09681680053472519, 0.09417514503002167, 0.10051512718200684, 0.10091137140989304], "val_loss": [806.9641723632812, 39627.8125, 421129.25, 2289056.25, 8563155.0, 25241662.0], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 2, 8, 4], [0, 0, 1, 0, 2, 0, 3], [26, 39, 39, 51], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 4, 0, 3, 5, 5], [2, 3, 1, 4, 0], [16, 1], [0, 0, 1, 1], [0, 6], [0, 1], [0], [1], [0], [0], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 16, 9, 7, 4, 11, 7, 4, 0, 4, 2, 2, 1, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(beta, tf.math.negative(tf.math.multiply(grad, alpha))), tf.math.square(tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.309774160385132, 2.309316396713257, 2.3090884685516357, 2.3111166954040527, 2.3097691535949707, 2.309763193130493], "accuracy": [0.09206181764602661, 0.09206181764602661, 0.09285431355237961, 0.08902391046285629, 0.08796724677085876, 0.0944393053650856], "val_loss": [2.308634042739868, 2.308634042739868, 2.308634042739868, 2.308634042739868, 2.308634042739868, 2.308634042739868], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]