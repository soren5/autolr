[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8539999723434448, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2108490467071533, 1.6031280755996704, 1.1586053371429443, 1.0017169713974, 0.9027997255325317, 0.8509687781333923, 0.7821087837219238, 0.7510325312614441, 0.7681663632392883, 0.7239335179328918, 0.7042371034622192, 0.6705950498580933, 0.6701738238334656, 0.6410457491874695, 0.6455509066581726, 0.6122079491615295, 0.6216953992843628, 0.6117597222328186, 0.5990164279937744, 0.5723549127578735, 0.5750733613967896, 0.5654271245002747, 0.5603346228599548, 0.5531269907951355, 0.543151319026947, 0.5325374007225037, 0.523846447467804, 0.515398383140564, 0.5130863785743713, 0.5047292113304138, 0.511211097240448, 0.489170640707016, 0.4864640533924103, 0.4842982292175293, 0.47540971636772156, 0.4720350503921509, 0.46809497475624084, 0.46228352189064026, 0.46422722935676575, 0.4534793794155121, 0.45032545924186707, 0.44704577326774597, 0.43839192390441895, 0.4372914135456085, 0.44019392132759094, 0.4282222390174866, 0.414899617433548, 0.42131656408309937, 0.4295532703399658, 0.4157116115093231, 0.39912712574005127, 0.4099557399749756, 0.4104830026626587, 0.40346992015838623, 0.40090474486351013, 0.38478195667266846, 0.39120081067085266, 0.38766616582870483, 0.3841533958911896, 0.37545040249824524, 0.37709566950798035, 0.37396249175071716, 0.36828750371932983, 0.36231529712677, 0.37067341804504395, 0.36960527300834656, 0.36422786116600037, 0.3631508946418762, 0.3479906916618347, 0.3558589220046997, 0.35364899039268494, 0.34216275811195374, 0.3413783013820648], "accuracy": [0.2658829689025879, 0.5038964748382568, 0.5926561951637268, 0.6362435817718506, 0.6732267737388611, 0.6902654767036438, 0.711530864238739, 0.7235503792762756, 0.7207766771316528, 0.7279091477394104, 0.7391361594200134, 0.7582882046699524, 0.746268630027771, 0.7626469135284424, 0.759609043598175, 0.7754589915275574, 0.7625148296356201, 0.7757231593132019, 0.7700436115264893, 0.7889314293861389, 0.7889314293861389, 0.7868181467056274, 0.7898560166358948, 0.7997622489929199, 0.798309326171875, 0.8030643463134766, 0.8080834746360779, 0.8125742673873901, 0.8132346868515015, 0.8161405324935913, 0.8128384351730347, 0.8238013386726379, 0.8271034359931946, 0.8224804997444153, 0.8290846943855286, 0.8278959393501282, 0.830669641494751, 0.833179235458374, 0.833179235458374, 0.8341038227081299, 0.837537944316864, 0.8366134166717529, 0.8391229510307312, 0.843481719493866, 0.8399154543876648, 0.8416325449943542, 0.8506141901016235, 0.848368763923645, 0.8404437899589539, 0.8453308939933777, 0.8536521196365356, 0.8490291833877563, 0.8507462739944458, 0.8562937378883362, 0.8520671129226685, 0.8610487580299377, 0.8573504090309143, 0.8595958352088928, 0.8590674996376038, 0.8631620407104492, 0.8622375130653381, 0.8631620407104492, 0.8681812286376953, 0.8667283058166504, 0.8626337051391602, 0.8658037185668945, 0.8628978729248047, 0.8687095642089844, 0.8659358024597168, 0.868049144744873, 0.8716153502464294, 0.874389111995697, 0.8757099509239197], "val_loss": [1.9235763549804688, 1.1314831972122192, 0.8731655478477478, 0.807879626750946, 0.7705962061882019, 0.6980771422386169, 0.6661664247512817, 0.697576105594635, 0.66929030418396, 0.5976685285568237, 0.5922770500183105, 0.5830627679824829, 0.6373900771141052, 0.5411273837089539, 0.5578807592391968, 0.5548969507217407, 0.5392282009124756, 0.5990676879882812, 0.5256581902503967, 0.5300251245498657, 0.5082780718803406, 0.5017443299293518, 0.5056119561195374, 0.5075571537017822, 0.4926685094833374, 0.47513166069984436, 0.4797607362270355, 0.4600391089916229, 0.46047335863113403, 0.5116149187088013, 0.4663454294204712, 0.452178955078125, 0.4634062945842743, 0.44287997484207153, 0.4433993399143219, 0.43838903307914734, 0.43588727712631226, 0.4394426941871643, 0.43417826294898987, 0.43312549591064453, 0.4629688262939453, 0.431441068649292, 0.4245022237300873, 0.41809216141700745, 0.4273024797439575, 0.40897610783576965, 0.41044068336486816, 0.45049646496772766, 0.4001186192035675, 0.4124038815498352, 0.4094165861606598, 0.3972887098789215, 0.39708682894706726, 0.39355671405792236, 0.39122965931892395, 0.40282538533210754, 0.3918760120868683, 0.3897528350353241, 0.3919954299926758, 0.39045262336730957, 0.40663614869117737, 0.3902661204338074, 0.37542790174484253, 0.3986421823501587, 0.3837566673755646, 0.3817605674266815, 0.37363508343696594, 0.37688878178596497, 0.37387850880622864, 0.387358158826828, 0.3793269991874695, 0.36945849657058716, 0.38200435042381287], "val_accuracy": [0.5073333382606506, 0.6323333382606506, 0.7126666903495789, 0.70333331823349, 0.7099999785423279, 0.7419999837875366, 0.7593333125114441, 0.7426666617393494, 0.7416666746139526, 0.7753333449363708, 0.7826666831970215, 0.7836666703224182, 0.7506666779518127, 0.8023333549499512, 0.8023333549499512, 0.7903333306312561, 0.7916666865348816, 0.7573333382606506, 0.8106666803359985, 0.8083333373069763, 0.8216666579246521, 0.8140000104904175, 0.8166666626930237, 0.812666654586792, 0.8216666579246521, 0.8276666402816772, 0.8323333263397217, 0.8420000076293945, 0.8433333039283752, 0.8066666722297668, 0.8323333263397217, 0.8443333506584167, 0.8296666741371155, 0.8426666855812073, 0.8416666388511658, 0.8450000286102295, 0.8426666855812073, 0.847000002861023, 0.8496666550636292, 0.8516666889190674, 0.8263333439826965, 0.8443333506584167, 0.8500000238418579, 0.8519999980926514, 0.8479999899864197, 0.8579999804496765, 0.8553333282470703, 0.8206666707992554, 0.8616666793823242, 0.8510000109672546, 0.8573333621025085, 0.8616666793823242, 0.8576666712760925, 0.8633333444595337, 0.8633333444595337, 0.859000027179718, 0.8603333234786987, 0.8636666536331177, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197, 0.8616666793823242, 0.8709999918937683, 0.8606666922569275, 0.8673333525657654, 0.862666666507721, 0.8709999918937683, 0.8726666569709778, 0.8696666955947876, 0.8606666922569275, 0.8693333268165588, 0.871999979019165, 0.8656666874885559]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8045714497566223, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2131831645965576, 1.605956792831421, 1.1548075675964355, 0.9684103727340698, 0.9275152683258057, 0.8165780901908875, 0.8027802109718323, 0.7628975510597229, 0.7204979658126831, 0.7034165859222412, 0.6735495924949646, 0.6806554198265076, 0.6643040776252747, 0.6479642987251282, 0.6299855709075928, 0.6123152375221252, 0.5950746536254883, 0.6086416244506836, 0.5837806463241577, 0.5771877765655518, 0.5694058537483215, 0.5686593055725098, 0.5433738231658936, 0.5497094988822937, 0.5339000225067139, 0.5236231684684753, 0.525212824344635, 0.5154588222503662, 0.5051783323287964, 0.500241219997406, 0.49657660722732544, 0.48698902130126953, 0.48423945903778076, 0.4748612940311432, 0.4733778238296509, 0.4793791174888611, 0.464861124753952, 0.45765820145606995, 0.4609984755516052, 0.4631710350513458, 0.45550814270973206, 0.45062291622161865, 0.4363866448402405, 0.4386063814163208, 0.4298015832901001, 0.41851574182510376, 0.42994096875190735], "accuracy": [0.2635054886341095, 0.5040285587310791, 0.5946374535560608, 0.6581693291664124, 0.661471426486969, 0.7098137736320496, 0.7111346125602722, 0.7191916704177856, 0.7310791015625, 0.739400327205658, 0.7467969655990601, 0.7446836829185486, 0.7516840696334839, 0.7593448758125305, 0.7692511081695557, 0.7677981853485107, 0.7750627398490906, 0.7700436115264893, 0.783119797706604, 0.7828556299209595, 0.789459764957428, 0.7898560166358948, 0.8004226684570312, 0.7964601516723633, 0.8031964302062988, 0.8074230551719666, 0.8012151718139648, 0.8062343001365662, 0.8117818236351013, 0.8185180425643921, 0.8171972036361694, 0.8212917447090149, 0.8226125836372375, 0.8293488025665283, 0.8236692547798157, 0.8267071843147278, 0.8257825970649719, 0.8318583965301514, 0.8277638554573059, 0.8294808864593506, 0.8355567455291748, 0.8333113193511963, 0.8433496356010437, 0.8364813327789307, 0.8446704745292664, 0.8510104417800903, 0.8404437899589539], "val_loss": [1.92573082447052, 1.1007511615753174, 0.9278834462165833, 0.8198538422584534, 0.7512262463569641, 0.7513453960418701, 0.6785218715667725, 0.6397121548652649, 0.6574983596801758, 0.6050010323524475, 0.5943337678909302, 0.591526210308075, 0.5713143944740295, 0.5647457838058472, 0.5716570615768433, 0.5382726192474365, 0.5542451739311218, 0.5408207774162292, 0.5488150119781494, 0.5145611763000488, 0.5220537781715393, 0.5237058401107788, 0.5023136138916016, 0.4947488605976105, 0.48396700620651245, 0.4771752953529358, 0.4680021107196808, 0.4746374487876892, 0.4894368052482605, 0.4735499620437622, 0.4506163001060486, 0.4618643820285797, 0.4487658739089966, 0.4371388256549835, 0.4488808512687683, 0.45080891251564026, 0.43637749552726746, 0.4380476176738739, 0.4450559616088867, 0.4399940073490143, 0.42333152890205383, 0.422171950340271, 0.42731717228889465, 0.4231188893318176, 0.4167303144931793, 0.42473673820495605, 0.4122072756290436], "val_accuracy": [0.5983333587646484, 0.6589999794960022, 0.6930000185966492, 0.7026666402816772, 0.7333333492279053, 0.749666690826416, 0.7429999709129333, 0.7616666555404663, 0.7406666874885559, 0.7753333449363708, 0.7866666913032532, 0.7816666960716248, 0.7883333563804626, 0.7883333563804626, 0.7746666669845581, 0.8076666593551636, 0.7929999828338623, 0.8029999732971191, 0.7926666736602783, 0.8106666803359985, 0.8036666512489319, 0.8013333082199097, 0.8090000152587891, 0.8159999847412109, 0.8233333230018616, 0.8253333568572998, 0.8326666951179504, 0.8236666917800903, 0.8159999847412109, 0.8173333406448364, 0.8363333344459534, 0.8273333311080933, 0.8320000171661377, 0.8403333425521851, 0.8333333134651184, 0.8259999752044678, 0.8373333215713501, 0.8443333506584167, 0.8289999961853027, 0.840666651725769, 0.8453333377838135, 0.8483333587646484, 0.843999981880188, 0.8450000286102295, 0.8476666808128357, 0.8453333377838135, 0.8463333249092102]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 4, 3, 5], [0, 0, 1, 0, 2], [93, 92, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], [5, 2, 0, 6, 3, 8, 2], [2, 4, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 0, 1, 0], [0, 7, 7, 5, 0, 9], [0, 6], [0, 95], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 5, 3, 2, 0, 8, 6, 2, 2, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.negative(beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(grad))), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3133761882781982, 2.330348491668701, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09311848133802414, 0.0956280529499054, 0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.318735361099243, 2.347930431365967, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.0976666659116745, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], [0, 2, 3, 4, 3, 5], [0, 0, 1, 3, 2], [0, 91, 79], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 2, 6, 1, 6], [2, 0, 0, 1, 3, 3, 5, 0, 4], [16, 1, 33], [0, 0, 1, 0, 1, 1], [0, 7, 7], [0, 6, 3], [0], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 20, 11, 9, 3, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), alpha), grad))), tf.math.divide_no_nan(grad, grad)), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, sigma))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [176807968.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19931316375732422, 0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.340278148540924e+18, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [2, 2, 3, 1, 3, 5, 8], [0, 0, 2, 1, 2, 3], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 7, 8, 5, 8, 7, 5, 9], [0, 6], [0, 40], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 2, 5, 3, 2, 1, 10, 8, 2, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(alpha, tf.math.square(grad))), tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.square(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.square(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3032569885253906, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 6, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 6, 0, 5, 6, 8, 2, 6, 8], [2, 0, 3, 1, 0], [23, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 7, 5, 0, 1, 7, 1, 4, 5, 2, 1], [0, 6, 2, 1, 3, 2, 7, 5], [0], [1], [0], [2], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 11, 6, 5, 3, 14, 9, 5, 2, 19, 11, 8, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.sqrt(beta), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.divide_no_nan(grad, alpha), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.pow(grad, tf.math.square(tf.math.add(beta, alpha))), sigma), tf.math.subtract(beta, grad)), grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3091766834259033, 2.311248779296875, 2.3101282119750977, 2.3094534873962402, 2.310134172439575, 2.3093624114990234], "accuracy": [0.09311848133802414, 0.08770307898521423, 0.09377889335155487, 0.09245806187391281, 0.09034473448991776, 0.09509972482919693], "val_loss": [2.3081159591674805, 2.3081159591674805, 2.3081159591674805, 2.3081159591674805, 2.3081159591674805, 2.3081159591674805], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]