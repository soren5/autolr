[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8048571348190308, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210344076156616, 1.6078243255615234, 1.1424970626831055, 0.9681902527809143, 0.883126437664032, 0.8329263925552368, 0.7757999897003174, 0.7880510687828064, 0.7164469957351685, 0.707139253616333, 0.6712058782577515, 0.6868010759353638, 0.6456523537635803, 0.6631861329078674, 0.6149691343307495, 0.6085469722747803, 0.6107323169708252, 0.5838292241096497, 0.5713688135147095, 0.5750511288642883, 0.554565966129303, 0.5642726421356201, 0.5497645139694214, 0.5342112183570862, 0.5314539670944214, 0.5185353755950928, 0.5192750692367554, 0.5141116976737976, 0.4974273145198822, 0.5129848122596741, 0.48820996284484863, 0.4864766299724579, 0.4861908555030823, 0.47745412588119507, 0.4790109097957611, 0.48059386014938354, 0.4626271724700928, 0.4592197835445404, 0.4571186304092407, 0.45586076378822327, 0.44624799489974976, 0.44656577706336975, 0.43646594882011414, 0.4330393671989441, 0.43545329570770264, 0.4307546615600586, 0.41833773255348206, 0.4255613684654236, 0.40687698125839233, 0.4124082028865814, 0.4171997010707855, 0.4065101444721222, 0.3977589011192322, 0.39515578746795654, 0.39186689257621765, 0.38704952597618103, 0.39331573247909546, 0.38588035106658936, 0.3770579397678375, 0.3808232545852661, 0.37571632862091064, 0.3771853744983673, 0.3694617450237274, 0.3701644837856293, 0.35919690132141113], "accuracy": [0.2658829689025879, 0.5086514353752136, 0.5968828201293945, 0.6580372452735901, 0.678642213344574, 0.6995112895965576, 0.7116629481315613, 0.7099458575248718, 0.7337207794189453, 0.733588695526123, 0.7493065595626831, 0.7424382567405701, 0.7569673657417297, 0.7532690763473511, 0.7693831920623779, 0.7745344042778015, 0.7635715007781982, 0.7866860628128052, 0.7886672616004944, 0.7828556299209595, 0.7935543656349182, 0.787082314491272, 0.7964601516723633, 0.8014793395996094, 0.8049134612083435, 0.8075551390647888, 0.8043851256370544, 0.8068947196006775, 0.8149517774581909, 0.8090080618858337, 0.8228767514228821, 0.8175934553146362, 0.819970965385437, 0.8257825970649719, 0.8249900937080383, 0.8232730031013489, 0.8294808864593506, 0.8296129703521729, 0.8343679904937744, 0.830669641494751, 0.8335754871368408, 0.8309338092803955, 0.8384625315666199, 0.8400475382804871, 0.8359529972076416, 0.8407079577445984, 0.843481719493866, 0.8421608805656433, 0.8506141901016235, 0.8502179384231567, 0.8441421389579773, 0.8461233377456665, 0.8553691506385803, 0.8593316674232483, 0.859199583530426, 0.8597279191017151, 0.8597279191017151, 0.8529917001724243, 0.8584070801734924, 0.8589354157447815, 0.8643507957458496, 0.8598600029945374, 0.8613129258155823, 0.8647470474243164, 0.8676528930664062], "val_loss": [1.9239906072616577, 1.0838264226913452, 0.8454719185829163, 0.7642815709114075, 0.8589751124382019, 0.681615948677063, 0.6814673542976379, 0.6184442043304443, 0.6035346388816833, 0.5807327628135681, 0.571137547492981, 0.6125190854072571, 0.5459532737731934, 0.5431076288223267, 0.535171627998352, 0.5544573664665222, 0.5211061239242554, 0.5073195099830627, 0.5096123814582825, 0.5000401139259338, 0.5248656272888184, 0.5484713315963745, 0.4872095584869385, 0.47468799352645874, 0.4722980856895447, 0.4587712287902832, 0.47147953510284424, 0.4474233388900757, 0.45662134885787964, 0.45956921577453613, 0.46140405535697937, 0.44932931661605835, 0.4498845636844635, 0.452057808637619, 0.44135570526123047, 0.426129549741745, 0.42083001136779785, 0.4404776990413666, 0.43502962589263916, 0.41753503680229187, 0.41369953751564026, 0.41347572207450867, 0.42767056822776794, 0.40995854139328003, 0.410849928855896, 0.40438857674598694, 0.4004130959510803, 0.40487679839134216, 0.39598119258880615, 0.4003625214099884, 0.4079417586326599, 0.3954612612724304, 0.3888968825340271, 0.3912902772426605, 0.39019307494163513, 0.3841730058193207, 0.393368661403656, 0.3787589371204376, 0.3873369097709656, 0.3751010298728943, 0.3918515145778656, 0.3735901415348053, 0.3774887025356293, 0.3715859353542328, 0.3826504647731781], "val_accuracy": [0.5193333625793457, 0.6733333468437195, 0.7070000171661377, 0.7279999852180481, 0.6926666498184204, 0.7443333268165588, 0.746666669845581, 0.7646666765213013, 0.7676666378974915, 0.7713333368301392, 0.7839999794960022, 0.7506666779518127, 0.7956666946411133, 0.7850000262260437, 0.79666668176651, 0.7896666526794434, 0.7996666431427002, 0.8059999942779541, 0.8069999814033508, 0.8199999928474426, 0.8003333210945129, 0.7796666622161865, 0.8163333535194397, 0.8270000219345093, 0.8133333325386047, 0.82833331823349, 0.8176666498184204, 0.8323333263397217, 0.8326666951179504, 0.8196666836738586, 0.8226666450500488, 0.8336666822433472, 0.8336666822433472, 0.8273333311080933, 0.8309999704360962, 0.8423333168029785, 0.8479999899864197, 0.8336666822433472, 0.8360000252723694, 0.8500000238418579, 0.843666672706604, 0.8443333506584167, 0.8356666564941406, 0.8503333330154419, 0.8526666760444641, 0.8463333249092102, 0.8539999723434448, 0.8513333201408386, 0.8553333282470703, 0.8513333201408386, 0.8453333377838135, 0.8583333492279053, 0.8636666536331177, 0.8539999723434448, 0.8519999980926514, 0.8603333234786987, 0.8583333492279053, 0.8706666827201843, 0.8603333234786987, 0.871666669845581, 0.8573333621025085, 0.8656666874885559, 0.8663333058357239, 0.8666666746139526, 0.8633333444595337]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 67], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [3, 2, 0, 4, 0, 3, 1], [41, 1], [0, 0, 0, 1, 0, 1, 1, 1], [9, 3, 0, 8], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 12, 8, 4, 2, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2392430305480957, 2.3238348960876465, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16721701622009277, 0.09840179979801178, 0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3277668952941895, 2.313699960708618, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10199999809265137, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 7, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [7, 3, 0, 2, 6, 0], [0, 1, 1, 5, 1], [0], [0, 0, 1, 0, 1, 0], [0, 7, 4, 9], [1, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 11, 6, 5, 1, 6, 4, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.negative(grad)))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(sigma, tf.constant(0.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 3, 0, 2], [26, 39, 97], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 6, 5, 5, 1], [1, 2, 0, 4, 0, 3, 1], [16, 1, 59], [1, 0, 1, 0, 1, 1, 1, 1], [7, 3, 0, 6], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 13, 8, 5, 3, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.square(tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [9.126758575439453, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.21278563141822815, 0.10487385839223862, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [312.3428649902344, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [4, 1, 3, 1, 3, 5, 6, 6, 9], [0, 3, 1, 0, 2, 0, 3], [26, 39, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [6, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [7, 3, 0, 2, 0, 3], [0, 6, 1, 4, 3], [0], [1], [0], [0], [0]], "fitness": -0.09457142651081085, "mapping_values": [1, 16, 9, 7, 4, 8, 5, 3, 2, 11, 6, 5, 1, 1, 0, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(alpha))), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(beta, tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.negative(alpha))), tf.math.multiply(grad, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3095602989196777, 2.310513973236084, 2.310065269470215, 2.3101959228515625, 2.309868097305298, 2.30964732170105], "accuracy": [0.0952318087220192, 0.09377889335155487, 0.09034473448991776, 0.09536388516426086, 0.09338264167308807, 0.09232597798109055], "val_loss": [2.3087430000305176, 2.3087430000305176, 2.3087430000305176, 2.3087430000305176, 2.3087430000305176, 2.3087430000305176], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]