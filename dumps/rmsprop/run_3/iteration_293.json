[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8539999723434448, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2108490467071533, 1.6031280755996704, 1.1586053371429443, 1.0017169713974, 0.9027997255325317, 0.8509687781333923, 0.7821087837219238, 0.7510325312614441, 0.7681663632392883, 0.7239335179328918, 0.7042371034622192, 0.6705950498580933, 0.6701738238334656, 0.6410457491874695, 0.6455509066581726, 0.6122079491615295, 0.6216953992843628, 0.6117597222328186, 0.5990164279937744, 0.5723549127578735, 0.5750733613967896, 0.5654271245002747, 0.5603346228599548, 0.5531269907951355, 0.543151319026947, 0.5325374007225037, 0.523846447467804, 0.515398383140564, 0.5130863785743713, 0.5047292113304138, 0.511211097240448, 0.489170640707016, 0.4864640533924103, 0.4842982292175293, 0.47540971636772156, 0.4720350503921509, 0.46809497475624084, 0.46228352189064026, 0.46422722935676575, 0.4534793794155121, 0.45032545924186707, 0.44704577326774597, 0.43839192390441895, 0.4372914135456085, 0.44019392132759094, 0.4282222390174866, 0.414899617433548, 0.42131656408309937, 0.4295532703399658, 0.4157116115093231, 0.39912712574005127, 0.4099557399749756, 0.4104830026626587, 0.40346992015838623, 0.40090474486351013, 0.38478195667266846, 0.39120081067085266, 0.38766616582870483, 0.3841533958911896, 0.37545040249824524, 0.37709566950798035, 0.37396249175071716, 0.36828750371932983, 0.36231529712677, 0.37067341804504395, 0.36960527300834656, 0.36422786116600037, 0.3631508946418762, 0.3479906916618347, 0.3558589220046997, 0.35364899039268494, 0.34216275811195374, 0.3413783013820648], "accuracy": [0.2658829689025879, 0.5038964748382568, 0.5926561951637268, 0.6362435817718506, 0.6732267737388611, 0.6902654767036438, 0.711530864238739, 0.7235503792762756, 0.7207766771316528, 0.7279091477394104, 0.7391361594200134, 0.7582882046699524, 0.746268630027771, 0.7626469135284424, 0.759609043598175, 0.7754589915275574, 0.7625148296356201, 0.7757231593132019, 0.7700436115264893, 0.7889314293861389, 0.7889314293861389, 0.7868181467056274, 0.7898560166358948, 0.7997622489929199, 0.798309326171875, 0.8030643463134766, 0.8080834746360779, 0.8125742673873901, 0.8132346868515015, 0.8161405324935913, 0.8128384351730347, 0.8238013386726379, 0.8271034359931946, 0.8224804997444153, 0.8290846943855286, 0.8278959393501282, 0.830669641494751, 0.833179235458374, 0.833179235458374, 0.8341038227081299, 0.837537944316864, 0.8366134166717529, 0.8391229510307312, 0.843481719493866, 0.8399154543876648, 0.8416325449943542, 0.8506141901016235, 0.848368763923645, 0.8404437899589539, 0.8453308939933777, 0.8536521196365356, 0.8490291833877563, 0.8507462739944458, 0.8562937378883362, 0.8520671129226685, 0.8610487580299377, 0.8573504090309143, 0.8595958352088928, 0.8590674996376038, 0.8631620407104492, 0.8622375130653381, 0.8631620407104492, 0.8681812286376953, 0.8667283058166504, 0.8626337051391602, 0.8658037185668945, 0.8628978729248047, 0.8687095642089844, 0.8659358024597168, 0.868049144744873, 0.8716153502464294, 0.874389111995697, 0.8757099509239197], "val_loss": [1.9235763549804688, 1.1314831972122192, 0.8731655478477478, 0.807879626750946, 0.7705962061882019, 0.6980771422386169, 0.6661664247512817, 0.697576105594635, 0.66929030418396, 0.5976685285568237, 0.5922770500183105, 0.5830627679824829, 0.6373900771141052, 0.5411273837089539, 0.5578807592391968, 0.5548969507217407, 0.5392282009124756, 0.5990676879882812, 0.5256581902503967, 0.5300251245498657, 0.5082780718803406, 0.5017443299293518, 0.5056119561195374, 0.5075571537017822, 0.4926685094833374, 0.47513166069984436, 0.4797607362270355, 0.4600391089916229, 0.46047335863113403, 0.5116149187088013, 0.4663454294204712, 0.452178955078125, 0.4634062945842743, 0.44287997484207153, 0.4433993399143219, 0.43838903307914734, 0.43588727712631226, 0.4394426941871643, 0.43417826294898987, 0.43312549591064453, 0.4629688262939453, 0.431441068649292, 0.4245022237300873, 0.41809216141700745, 0.4273024797439575, 0.40897610783576965, 0.41044068336486816, 0.45049646496772766, 0.4001186192035675, 0.4124038815498352, 0.4094165861606598, 0.3972887098789215, 0.39708682894706726, 0.39355671405792236, 0.39122965931892395, 0.40282538533210754, 0.3918760120868683, 0.3897528350353241, 0.3919954299926758, 0.39045262336730957, 0.40663614869117737, 0.3902661204338074, 0.37542790174484253, 0.3986421823501587, 0.3837566673755646, 0.3817605674266815, 0.37363508343696594, 0.37688878178596497, 0.37387850880622864, 0.387358158826828, 0.3793269991874695, 0.36945849657058716, 0.38200435042381287], "val_accuracy": [0.5073333382606506, 0.6323333382606506, 0.7126666903495789, 0.70333331823349, 0.7099999785423279, 0.7419999837875366, 0.7593333125114441, 0.7426666617393494, 0.7416666746139526, 0.7753333449363708, 0.7826666831970215, 0.7836666703224182, 0.7506666779518127, 0.8023333549499512, 0.8023333549499512, 0.7903333306312561, 0.7916666865348816, 0.7573333382606506, 0.8106666803359985, 0.8083333373069763, 0.8216666579246521, 0.8140000104904175, 0.8166666626930237, 0.812666654586792, 0.8216666579246521, 0.8276666402816772, 0.8323333263397217, 0.8420000076293945, 0.8433333039283752, 0.8066666722297668, 0.8323333263397217, 0.8443333506584167, 0.8296666741371155, 0.8426666855812073, 0.8416666388511658, 0.8450000286102295, 0.8426666855812073, 0.847000002861023, 0.8496666550636292, 0.8516666889190674, 0.8263333439826965, 0.8443333506584167, 0.8500000238418579, 0.8519999980926514, 0.8479999899864197, 0.8579999804496765, 0.8553333282470703, 0.8206666707992554, 0.8616666793823242, 0.8510000109672546, 0.8573333621025085, 0.8616666793823242, 0.8576666712760925, 0.8633333444595337, 0.8633333444595337, 0.859000027179718, 0.8603333234786987, 0.8636666536331177, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197, 0.8616666793823242, 0.8709999918937683, 0.8606666922569275, 0.8673333525657654, 0.862666666507721, 0.8709999918937683, 0.8726666569709778, 0.8696666955947876, 0.8606666922569275, 0.8693333268165588, 0.871999979019165, 0.8656666874885559]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8274285793304443, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209348678588867, 1.595436930656433, 1.1294952630996704, 0.9833747744560242, 0.8762364983558655, 0.8210781812667847, 0.7713562250137329, 0.7319619059562683, 0.712806761264801, 0.6942827105522156, 0.6813948154449463, 0.6703154444694519, 0.644789457321167, 0.6332098841667175, 0.6117875576019287, 0.6134805083274841, 0.5962144136428833, 0.5940859913825989, 0.5700991749763489, 0.5733734369277954, 0.5492205619812012, 0.5732427835464478, 0.5316299200057983, 0.5270795822143555, 0.5184439420700073, 0.5281928777694702, 0.513779878616333, 0.5072439908981323, 0.4956921339035034, 0.5015085935592651, 0.4955437183380127, 0.48147743940353394, 0.4919458329677582], "accuracy": [0.2681283950805664, 0.5103685259819031, 0.6112799048423767, 0.6518293619155884, 0.6859067678451538, 0.7053229212760925, 0.7181349992752075, 0.7269845604896545, 0.7351737022399902, 0.739400327205658, 0.7433628439903259, 0.752212405204773, 0.7631752490997314, 0.7658169269561768, 0.7791573405265808, 0.7711002230644226, 0.7814027070999146, 0.7771760821342468, 0.7858935594558716, 0.7906485199928284, 0.7960638999938965, 0.7817989587783813, 0.805177628993988, 0.811649739742279, 0.8150838613510132, 0.8088759779930115, 0.8101968169212341, 0.8145555257797241, 0.8219521641731262, 0.8123101592063904, 0.8119139075279236, 0.8247259259223938, 0.8210275769233704], "val_loss": [1.9233005046844482, 1.0945086479187012, 0.9012359976768494, 0.8534966111183167, 0.7334402799606323, 0.7267842888832092, 0.6590503454208374, 0.6505519151687622, 0.6386640667915344, 0.643521249294281, 0.6173067092895508, 0.5872864723205566, 0.588505744934082, 0.55431067943573, 0.5513390302658081, 0.5487067103385925, 0.5680544972419739, 0.5343531370162964, 0.5249127745628357, 0.5116797089576721, 0.5223867297172546, 0.517278254032135, 0.5023652911186218, 0.4936766028404236, 0.49508336186408997, 0.4916094243526459, 0.4789624810218811, 0.4901393949985504, 0.48604458570480347, 0.47389498353004456, 0.4740772843360901, 0.49863386154174805, 0.480796217918396], "val_accuracy": [0.5440000295639038, 0.640999972820282, 0.6683333516120911, 0.6743333339691162, 0.7226666808128357, 0.7213333249092102, 0.7480000257492065, 0.7493333220481873, 0.7423333525657654, 0.7583333253860474, 0.7616666555404663, 0.7776666879653931, 0.7706666588783264, 0.7973333597183228, 0.7996666431427002, 0.7889999747276306, 0.7856666445732117, 0.7990000247955322, 0.8149999976158142, 0.8143333196640015, 0.8096666932106018, 0.8103333115577698, 0.8140000104904175, 0.8206666707992554, 0.8193333148956299, 0.8209999799728394, 0.8256666660308838, 0.8299999833106995, 0.8240000009536743, 0.8233333230018616, 0.82833331823349, 0.8193333148956299, 0.8240000009536743]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 9, 1, 3, 5], [3, 0, 1, 0, 2], [40, 39, 28], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [8, 2, 0, 6, 3, 8, 2, 1, 0, 6, 7, 4, 3, 1, 2, 3, 8, 2, 5, 8, 7, 9, 1, 7, 8, 9, 6, 9, 1, 3, 6, 6, 9, 7, 6, 6, 2, 4, 2, 6, 8, 7, 4, 4, 7, 2, 3, 7, 1, 3, 2, 5, 7, 0, 8, 2, 5, 6, 2, 5, 2, 3, 1, 1, 1, 0, 0, 1, 5, 0, 5, 7, 4, 6, 3, 7, 4, 2, 2, 8, 7, 7, 6, 5, 8], [2, 0, 3, 1, 0, 1, 4, 1, 1, 4, 4, 2, 5, 4, 4, 4, 5, 1, 0, 2, 3, 1, 4, 3, 5, 3, 2, 5, 1, 3, 0, 5, 5, 0, 3, 5, 3, 4, 4, 5, 4, 3, 1, 2, 5, 2, 2, 5, 1, 3, 3, 4, 3, 2, 1, 3], [16, 1, 35, 35, 88, 6, 14, 11, 40], [1, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 141, 85, 56, 9, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 63, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(grad, tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.math.multiply(alpha, tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(grad, tf.math.square(tf.math.sqrt(alpha)))), alpha)))), grad), tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(grad, tf.math.sqrt(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(beta, grad), tf.math.divide_no_nan(grad, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.math.add(grad, grad), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(grad, alpha)), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.pow(beta, tf.math.add(tf.math.add(tf.math.multiply(grad, alpha), grad), tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.square(grad), tf.math.add(tf.math.negative(tf.math.sqrt(grad)), grad)), beta), tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.add(grad, tf.math.multiply(tf.math.subtract(alpha, grad), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, grad)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.subtract(grad, tf.math.negative(grad))))), grad)), tf.math.negative(tf.math.subtract(grad, tf.math.square(tf.math.negative(tf.math.square(grad)))))), grad), grad)))))), tf.math.add(tf.math.pow(alpha, beta), tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(tf.math.pow(beta, tf.math.add(beta, grad)), alpha)), grad))))), tf.math.add(tf.math.sqrt(grad), tf.math.add(tf.math.add(tf.math.divide_no_nan(grad, grad), beta), tf.math.square(alpha)))))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0], [7, 2, 3, 1, 6, 3, 3, 1, 7, 6, 8, 6, 2, 3, 7, 6, 7, 4, 9], [0, 0, 1, 0, 2, 2, 2, 1, 2, 2, 1, 0, 1, 2, 3, 2, 1], [24, 39, 39, 19, 66], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 1, 0, 2, 7, 6, 5, 7], [0, 0, 3, 1, 0, 5, 3, 3, 2, 2], [16, 1, 35], [0, 0, 1, 0, 1, 1], [0, 4, 1], [0, 7, 7], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 36, 19, 17, 5, 24, 14, 10, 3, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(tf.math.divide_no_nan(grad, tf.math.sqrt(grad)), tf.math.divide_no_nan(grad, alpha)), grad)))), grad), tf.math.add(tf.math.multiply(tf.math.add(tf.math.divide_no_nan(alpha, tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, grad))), grad), grad), alpha)), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.subtract(grad, alpha), tf.math.negative(tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.divide_no_nan(grad, grad))))))), tf.math.square(tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 7, 9, 3, 8, 2], [2, 0, 3, 1, 0], [16, 4], [0, 0, 1, 0, 0, 1, 1, 1], [0, 7, 1, 6], [3, 6, 3, 1], [0], [1], [0], [2], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 8, 4, 4, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.math.subtract(tf.math.divide_no_nan(grad, sigma), alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309544324874878, 2.310662269592285, 2.311282157897949, 2.3098669052124023, 2.3099727630615234, 2.3111486434936523], "accuracy": [0.09576013684272766, 0.09325055778026581, 0.08625016361474991, 0.09153348207473755, 0.09417514503002167, 0.08717474341392517], "val_loss": [2.308702230453491, 2.308702230453491, 2.308702230453491, 2.308702230453491, 2.308702230453491, 2.308702230453491], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0], [0, 7, 3, 8, 3, 5], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 5, 8, 2], [2, 0, 2, 1, 5], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [1], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3116238117218018, 2.3113760948181152, 2.310976982116699, 2.3105521202087402, 2.309364080429077, 2.3111014366149902], "accuracy": [0.08677849918603897, 0.08730682730674744, 0.09074098616838455, 0.09179764986038208, 0.09721305221319199, 0.08466517180204391], "val_loss": [2.309095621109009, 2.309095621109009, 2.309095621109009, 2.309095621109009, 2.309095621109009, 2.309095621109009], "val_accuracy": [0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076]}}]