[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8554285764694214, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213676929473877, 1.6260327100753784, 1.143683910369873, 0.9742980599403381, 0.905768096446991, 0.8351218104362488, 0.7851074934005737, 0.7412269115447998, 0.7395317554473877, 0.711415708065033, 0.7069402933120728, 0.678230345249176, 0.6367061138153076, 0.6509361267089844, 0.6249479651451111, 0.6181301474571228, 0.596510112285614, 0.5996518135070801, 0.5853984355926514, 0.566254198551178, 0.5746713280677795, 0.5576147437095642, 0.5446452498435974, 0.5396304726600647, 0.5172899961471558, 0.545619010925293, 0.5207965970039368, 0.5165130496025085, 0.5015321969985962, 0.4937669634819031, 0.48441874980926514, 0.4920797646045685, 0.47626858949661255, 0.47793251276016235, 0.4731525182723999, 0.4620440900325775, 0.46651312708854675, 0.45247113704681396, 0.45586317777633667, 0.4512108266353607, 0.44254299998283386, 0.4377943277359009, 0.4450337886810303, 0.433260977268219, 0.4311376214027405, 0.4237311780452728, 0.42902952432632446, 0.4136289060115814, 0.41453227400779724, 0.4130176901817322, 0.39844590425491333, 0.39945289492607117, 0.39990946650505066, 0.39090973138809204, 0.39613914489746094, 0.3962012231349945, 0.3925626873970032, 0.39203161001205444, 0.3823232650756836], "accuracy": [0.2662792205810547, 0.5065380930900574, 0.6066569685935974, 0.659490168094635, 0.6744155287742615, 0.6980583667755127, 0.713908314704895, 0.7283053994178772, 0.7260599732398987, 0.7359662055969238, 0.7403249144554138, 0.7495707273483276, 0.7663452625274658, 0.7577598690986633, 0.7709681391716003, 0.7713643908500671, 0.778761088848114, 0.7790252566337585, 0.7824593782424927, 0.7913089394569397, 0.7848368883132935, 0.7928939461708069, 0.798309326171875, 0.7967243194580078, 0.8094043135643005, 0.800290584564209, 0.811649739742279, 0.8087438941001892, 0.8164047002792358, 0.8144234418869019, 0.8235371708869934, 0.8183859586715698, 0.822348415851593, 0.8281601071357727, 0.8276317715644836, 0.8322546482086182, 0.8293488025665283, 0.8367455005645752, 0.8325188159942627, 0.8381983637809753, 0.8393871188163757, 0.8422929644584656, 0.8403117060661316, 0.844010055065155, 0.8459912538528442, 0.8491612672805786, 0.8459912538528442, 0.8487650156021118, 0.8511425256729126, 0.8516708612442017, 0.8597279191017151, 0.8533879518508911, 0.8537842035293579, 0.8578787446022034, 0.8557654023170471, 0.8599920868873596, 0.8584070801734924, 0.8605204224586487, 0.8598600029945374], "val_loss": [1.9311139583587646, 1.1074284315109253, 0.9771608710289001, 0.7858006358146667, 0.7151148915290833, 0.6789993643760681, 0.6691451072692871, 0.6397503614425659, 0.6217755675315857, 0.637182354927063, 0.5786056518554688, 0.5710426568984985, 0.5599858164787292, 0.5515573024749756, 0.54337477684021, 0.5200293660163879, 0.526112973690033, 0.5345032811164856, 0.5103436708450317, 0.5099934935569763, 0.49562308192253113, 0.5069106221199036, 0.48209962248802185, 0.47433871030807495, 0.4906598627567291, 0.5204798579216003, 0.4671025276184082, 0.4671674370765686, 0.46530061960220337, 0.4500419795513153, 0.446654736995697, 0.43762192130088806, 0.44438207149505615, 0.4439742863178253, 0.44161567091941833, 0.4331801235675812, 0.44725513458251953, 0.4252970814704895, 0.42855703830718994, 0.4254489839076996, 0.4155900180339813, 0.4370979070663452, 0.4190300703048706, 0.4254917800426483, 0.4138663709163666, 0.421396940946579, 0.40383246541023254, 0.39836356043815613, 0.4188055694103241, 0.4012039005756378, 0.4035666882991791, 0.41997474431991577, 0.40390560030937195, 0.38472822308540344, 0.40163907408714294, 0.3912980854511261, 0.3859305679798126, 0.3892076015472412, 0.3987250030040741], "val_accuracy": [0.5730000138282776, 0.6159999966621399, 0.6100000143051147, 0.6980000138282776, 0.7269999980926514, 0.7519999742507935, 0.7483333349227905, 0.7603333592414856, 0.7559999823570251, 0.7463333606719971, 0.7726666927337646, 0.7856666445732117, 0.7846666574478149, 0.79666668176651, 0.7906666398048401, 0.8029999732971191, 0.7990000247955322, 0.7929999828338623, 0.8146666884422302, 0.8116666674613953, 0.8086666464805603, 0.8040000200271606, 0.8196666836738586, 0.8266666531562805, 0.8116666674613953, 0.8046666383743286, 0.8289999961853027, 0.8270000219345093, 0.8266666531562805, 0.8296666741371155, 0.8339999914169312, 0.8396666646003723, 0.8323333263397217, 0.8420000076293945, 0.8383333086967468, 0.8363333344459534, 0.8299999833106995, 0.843666672706604, 0.8416666388511658, 0.8433333039283752, 0.8486666679382324, 0.8370000123977661, 0.8506666421890259, 0.8403333425521851, 0.8506666421890259, 0.8393333554267883, 0.8503333330154419, 0.8526666760444641, 0.8460000157356262, 0.8556666374206543, 0.8536666631698608, 0.8456666469573975, 0.8553333282470703, 0.8600000143051147, 0.8546666502952576, 0.859000027179718, 0.8586666584014893, 0.8569999933242798, 0.8553333282470703]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.828000009059906, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2137553691864014, 1.6126716136932373, 1.1556042432785034, 0.9619486927986145, 0.8633722066879272, 0.8317722678184509, 0.7880717515945435, 0.7529647350311279, 0.710749626159668, 0.7227357625961304, 0.6625839471817017, 0.6634131073951721, 0.6383237242698669, 0.6548824906349182, 0.6139333844184875, 0.6112762689590454, 0.6060848832130432, 0.5925111174583435, 0.5787078738212585, 0.5684872269630432, 0.5658206343650818, 0.5551771521568298, 0.5400511026382446, 0.5698444247245789, 0.5247300267219543, 0.5236296653747559, 0.5147925019264221, 0.519699215888977, 0.5159251689910889, 0.502321720123291, 0.509406328201294, 0.4810136556625366, 0.47662198543548584, 0.47972968220710754, 0.46887698769569397, 0.46406540274620056, 0.46552416682243347, 0.45827531814575195, 0.45275065302848816, 0.4453263580799103, 0.44300803542137146, 0.4492984414100647, 0.43991440534591675, 0.4346493184566498, 0.429752916097641, 0.42205652594566345, 0.42794784903526306, 0.41944074630737305, 0.41475844383239746, 0.4090660810470581], "accuracy": [0.2661471366882324, 0.5064060091972351, 0.5918636918067932, 0.6598864197731018, 0.6872276067733765, 0.694360077381134, 0.7165499925613403, 0.7236824631690979, 0.7401928305625916, 0.7317395210266113, 0.7555144429206848, 0.7574957013130188, 0.7701756954193115, 0.7515519857406616, 0.7720248103141785, 0.7765156626701355, 0.7800818681716919, 0.7807422876358032, 0.7860256433486938, 0.7913089394569397, 0.7928939461708069, 0.7969884872436523, 0.8045172095298767, 0.7881389260292053, 0.8057059645652771, 0.8083476424217224, 0.8124422430992126, 0.8084797263145447, 0.8109893202781677, 0.8166688680648804, 0.8146876096725464, 0.8251221776008606, 0.828292191028595, 0.8244617581367493, 0.828820526599884, 0.8310658931732178, 0.8315942287445068, 0.837141752243042, 0.834632158279419, 0.8404437899589539, 0.8364813327789307, 0.8425571322441101, 0.8401796221733093, 0.8424250483512878, 0.8454629778862, 0.8481045961380005, 0.8453308939933777, 0.846387505531311, 0.8487650156021118, 0.8544445633888245], "val_loss": [1.923499345779419, 1.079569697380066, 0.8969969749450684, 0.7320180535316467, 0.7825765013694763, 0.7133033871650696, 0.6992234587669373, 0.6091219782829285, 0.6307374238967896, 0.6096116900444031, 0.5753046870231628, 0.5696212649345398, 0.5486263036727905, 0.5447331666946411, 0.5607052445411682, 0.5435768365859985, 0.5307724475860596, 0.5309630036354065, 0.5040133595466614, 0.5337439179420471, 0.5006702542304993, 0.4984632134437561, 0.5448046922683716, 0.4896494448184967, 0.4719591736793518, 0.47896552085876465, 0.4766007363796234, 0.4955872893333435, 0.4671900272369385, 0.46309977769851685, 0.45314040780067444, 0.4482232332229614, 0.452892541885376, 0.4648365080356598, 0.4469645917415619, 0.4379238188266754, 0.4300692677497864, 0.4403230845928192, 0.43236666917800903, 0.4268547296524048, 0.4258914887905121, 0.42154112458229065, 0.42977672815322876, 0.4223538339138031, 0.40887075662612915, 0.41914722323417664, 0.42202961444854736, 0.4228038191795349, 0.41806966066360474, 0.41182172298431396], "val_accuracy": [0.5346666574478149, 0.6556666493415833, 0.6743333339691162, 0.7300000190734863, 0.7003333568572998, 0.737333357334137, 0.7263333201408386, 0.7796666622161865, 0.7513333559036255, 0.778333306312561, 0.781000018119812, 0.7896666526794434, 0.7973333597183228, 0.8006666898727417, 0.7829999923706055, 0.796999990940094, 0.7863333225250244, 0.8013333082199097, 0.8163333535194397, 0.8013333082199097, 0.8186666369438171, 0.8159999847412109, 0.7896666526794434, 0.8130000233650208, 0.8259999752044678, 0.8230000138282776, 0.8293333053588867, 0.8106666803359985, 0.8253333568572998, 0.8259999752044678, 0.8353333473205566, 0.8353333473205566, 0.8306666612625122, 0.8286666870117188, 0.8339999914169312, 0.8383333086967468, 0.8460000157356262, 0.8413333296775818, 0.8429999947547913, 0.8473333120346069, 0.8446666598320007, 0.8416666388511658, 0.8403333425521851, 0.8483333587646484, 0.8556666374206543, 0.8460000157356262, 0.8403333425521851, 0.8503333330154419, 0.8489999771118164, 0.8513333201408386]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0], [0, 2, 0, 6, 3, 6, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 7], [0], [1], [0], [4], [0]], "fitness": -0.20028571784496307, "mapping_values": [1, 1, 0, 1, 1, 5, 3, 2, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.419419765472412, 2.338627576828003, 2.276075601577759, 2.305468797683716, 2.3538873195648193, 2.3075528144836426, 2.3036293983459473], "accuracy": [0.16549994051456451, 0.1526878923177719, 0.12574297189712524, 0.109232597053051, 0.16114120185375214, 0.09602430462837219, 0.09509972482919693], "val_loss": [2.247544050216675, 2.138733148574829, 2.3045237064361572, 2.303316354751587, 2.3141534328460693, 2.3035969734191895, 2.302946090698242], "val_accuracy": [0.1066666692495346, 0.19466666877269745, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09866666793823242, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 6, 7], [0, 0, 1, 0, 2, 2, 0], [62, 74, 39, 36], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 6, 2], [2, 0, 3, 1, 3, 4, 3], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [4], [0]], "fitness": -0.10885713994503021, "mapping_values": [1, 15, 8, 7, 4, 16, 9, 7, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(grad, alpha), tf.math.add(grad, grad)))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.33077073097229, 2.3519816398620605, 2.3073928356170654, 2.303412437438965, 2.303151845932007, 2.3029890060424805], "accuracy": [0.19297318160533905, 0.21014396846294403, 0.10011887550354004, 0.1002509593963623, 0.09589222073554993, 0.09893012791872025], "val_loss": [2.289658784866333, 2.312190055847168, 2.303541660308838, 2.3028128147125244, 2.3026130199432373, 2.3025550842285156], "val_accuracy": [0.10533333569765091, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.09799999743700027, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0], [0, 5, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 2, 0, 2, 5, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [26], [0, 0, 0, 1, 1], [0, 6, 0], [2, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 9, 6, 3, 1, 4, 2, 2, 1, 5, 3, 2, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.sqrt(beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(beta), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [2, 2, 3, 0, 3, 3], [1, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 1, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(alpha, grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}, "mapping_values": [1, 7, 3, 4, 2, 10, 6, 4, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 11}]