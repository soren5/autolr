[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.803428590297699, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.21185564994812, 1.602829098701477, 1.1627588272094727, 0.9697954654693604, 0.8823429942131042, 0.8121203184127808, 0.7986006736755371, 0.752174973487854, 0.7171193957328796, 0.7224258184432983, 0.6732822060585022, 0.6638718843460083, 0.6506787538528442, 0.6425876021385193, 0.6280413866043091, 0.6250113248825073, 0.5977787375450134, 0.5928308367729187, 0.5766317248344421, 0.5706529021263123, 0.5681599974632263, 0.5539969205856323, 0.5510882139205933, 0.5489422082901001, 0.5250295996665955, 0.5319687724113464, 0.5160555839538574, 0.5217118263244629, 0.5102210640907288, 0.4967089593410492, 0.5016214847564697, 0.4964781403541565, 0.48978254199028015, 0.4840080738067627, 0.4763486981391907, 0.4647742807865143, 0.4702356159687042, 0.4703289270401001, 0.450665146112442, 0.4488171339035034, 0.4516211748123169], "accuracy": [0.2595430016517639, 0.5134063959121704, 0.5930524468421936, 0.6584334969520569, 0.6822084188461304, 0.7037379741668701, 0.7054550051689148, 0.7268524765968323, 0.737022876739502, 0.7320036888122559, 0.7561748623847961, 0.7512878179550171, 0.7581561207771301, 0.7577598690986633, 0.767930269241333, 0.765949010848999, 0.7784969210624695, 0.7781006693840027, 0.7836481332778931, 0.7898560166358948, 0.7907806038856506, 0.7931581139564514, 0.7960638999938965, 0.7950072884559631, 0.8083476424217224, 0.8057059645652771, 0.8104609847068787, 0.8070268034934998, 0.8145555257797241, 0.8206313848495483, 0.8124422430992126, 0.8152159452438354, 0.8186501264572144, 0.8171972036361694, 0.8215559124946594, 0.826310932636261, 0.8286884427070618, 0.8231409192085266, 0.8362171649932861, 0.8339717388153076, 0.8323867321014404], "val_loss": [1.9224008321762085, 1.0763232707977295, 0.8761002421379089, 0.8245319128036499, 0.7553345561027527, 0.7053098082542419, 0.6994230151176453, 0.6467724442481995, 0.6239541172981262, 0.6037721633911133, 0.6578629612922668, 0.6039565801620483, 0.5765725374221802, 0.5763891935348511, 0.5666807293891907, 0.5982457399368286, 0.5496120452880859, 0.557244062423706, 0.5462362766265869, 0.5498999357223511, 0.5586462616920471, 0.5230500102043152, 0.5113661885261536, 0.5060907006263733, 0.5241532921791077, 0.5090007185935974, 0.4915096163749695, 0.48853766918182373, 0.5038452744483948, 0.4940029978752136, 0.49130383133888245, 0.47272852063179016, 0.47831517457962036, 0.4641386866569519, 0.48027095198631287, 0.4570038914680481, 0.4954926669597626, 0.46973860263824463, 0.4660387635231018, 0.4688071310520172, 0.46114420890808105], "val_accuracy": [0.5389999747276306, 0.6776666641235352, 0.6959999799728394, 0.7009999752044678, 0.7310000061988831, 0.7266666889190674, 0.737666666507721, 0.7606666684150696, 0.7710000276565552, 0.7806666493415833, 0.7409999966621399, 0.7776666879653931, 0.7933333516120911, 0.7839999794960022, 0.7940000295639038, 0.7649999856948853, 0.7950000166893005, 0.7996666431427002, 0.8043333292007446, 0.7926666736602783, 0.7873333096504211, 0.8063333630561829, 0.8086666464805603, 0.8213333487510681, 0.8080000281333923, 0.8180000185966492, 0.8223333358764648, 0.8259999752044678, 0.8130000233650208, 0.8149999976158142, 0.8169999718666077, 0.8270000219345093, 0.8213333487510681, 0.8349999785423279, 0.8243333101272583, 0.8379999995231628, 0.8016666769981384, 0.8303333520889282, 0.8273333311080933, 0.8226666450500488, 0.8273333311080933]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5], [2, 0, 1, 0, 2], [26, 39, 39], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 2, 5, 7, 4, 9], [2, 2, 0, 4, 0, 3, 1], [16, 1, 71], [0, 1, 0, 1, 0, 0, 1, 1], [7, 3, 0, 5], [0, 1, 0, 2], [20, 14], [0, 0, 1], [0, 0], [4], [0]], "fitness": -0.29257142543792725, "mapping_values": [1, 6, 3, 3, 1, 1, 0, 1, 0, 7, 4, 3, 2, 3, 2, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.negative(tf.math.square(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(grad))", "other_info": {"loss": [2.2420878410339355, 2.3256442546844482, 2.2896928787231445, 2.321244478225708, 2.852842330932617, 2.305720806121826], "accuracy": [0.2133139669895172, 0.1942940205335617, 0.1434420794248581, 0.108440101146698, 0.1632545292377472, 0.09998679161071777], "val_loss": [2.1474201679229736, 2.3195080757141113, 2.346311092376709, 2.1912684440612793, 2.3073463439941406, 2.303438425064087], "val_accuracy": [0.3009999990463257, 0.09866666793823242, 0.12200000137090683, 0.0989999994635582, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 19, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [3, 2, 4, 6, 3, 5, 5, 4, 3, 6, 9, 4, 1, 3, 4, 7, 6, 9, 3, 8, 4, 3], [2, 2, 0, 4, 3, 3, 1, 1, 2, 4, 1, 1, 1, 4, 2, 4], [16, 1, 93], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [7, 1, 0, 3, 4, 2, 7], [4, 1, 1, 2, 7, 1, 1], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 38, 22, 16, 3, 14, 7, 7, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), grad))), tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))), tf.math.pow(tf.math.subtract(tf.math.multiply(tf.math.pow(alpha, tf.math.add(tf.math.divide_no_nan(alpha, beta), grad)), alpha), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.multiply(tf.math.sqrt(alpha), tf.math.pow(grad, tf.math.multiply(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.subtract(tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.add(alpha, alpha), beta), tf.math.add(grad, alpha))), alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303495407104492, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1022322028875351, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 6, 3, 5], [0, 0, 1, 0, 2], [90, 39, 39], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [8, 2, 4, 6, 3, 5, 5, 4], [2, 2, 3, 4, 0, 3, 1], [80, 1], [0, 1, 0, 1, 0, 1, 1, 1], [3, 3, 6, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 0, 7, 3, 4, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.sqrt(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.divide_no_nan(alpha, beta))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3035929203033447, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 1, 1, 0, 2], [0, 39, 39], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 2, 5, 7, 4, 9], [2, 2, 0, 3, 0, 3, 3], [16, 10, 71], [1, 1, 0, 1, 0, 0, 1, 1], [7, 3, 2, 3], [0, 4, 6, 0], [0, 31], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 0, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]