[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.7968571186065674, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212294816970825, 1.5947842597961426, 1.1364948749542236, 0.9857729077339172, 0.8601391911506653, 0.835858166217804, 0.7800487875938416, 0.7572613954544067, 0.7325417399406433, 0.7234992384910583, 0.6845693588256836, 0.6890071630477905, 0.6642467379570007, 0.6573657393455505, 0.6390135884284973, 0.6233963370323181, 0.6251429915428162, 0.6022023558616638, 0.5826132893562317], "accuracy": [0.26495838165283203, 0.5213313698768616, 0.6009774208068848, 0.6498481035232544, 0.6951525807380676, 0.6934354901313782, 0.7120591998100281, 0.7236824631690979, 0.7333245277404785, 0.7323999404907227, 0.7461365461349487, 0.7420420050621033, 0.7561748623847961, 0.754589855670929, 0.7650244235992432, 0.7746664881706238, 0.7689869403839111, 0.7812706232070923, 0.7876105904579163], "val_loss": [1.921933889389038, 1.114206075668335, 1.023162603378296, 0.769904613494873, 0.74922776222229, 0.6795358657836914, 0.6917840242385864, 0.6886569261550903, 0.6901702284812927, 0.6497461199760437, 0.5948500633239746, 0.6011244654655457, 0.5891348719596863, 0.5632784962654114, 0.5737231969833374, 0.5561797022819519, 0.5499855279922485, 0.5361976623535156, 0.556713342666626], "val_accuracy": [0.5713333487510681, 0.5943333506584167, 0.6073333621025085, 0.7080000042915344, 0.7179999947547913, 0.7403333187103271, 0.7419999837875366, 0.7456666827201843, 0.7440000176429749, 0.7456666827201843, 0.7673333287239075, 0.7693333625793457, 0.7720000147819519, 0.7976666688919067, 0.781000018119812, 0.7960000038146973, 0.7893333435058594, 0.7926666736602783, 0.7933333516120911]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0], [26, 39, 39], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [2, 6, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [3, 1, 0, 4], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 8, 4, 4, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(sigma), tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [29353.466796875, 4531586.0, 75251128.0, 535354080.0, 2368210944.0, 7759294976.0], "accuracy": [0.09985470771789551, 0.09628847241401672, 0.10130762308835983, 0.10302469879388809, 0.09457138925790787, 0.10077928751707077], "val_loss": [303947.90625, 16295827.0, 174743488.0, 952341376.0, 3566680320.0, 10519801856.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 0, 2, 2], [26, 39, 39], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [2, 2, 4, 4, 0, 4, 5, 4, 9], [2, 2, 0, 4, 0, 3, 1], [16, 1, 24], [0, 0, 0, 1, 0, 1, 1, 1], [5, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 15, 9, 6, 3, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(beta, tf.math.negative(tf.math.pow(tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [28766.25, 4451135.5, 75997400.0, 532449120.0, 2331243008.0, 7895014912.0], "accuracy": [0.09747721254825592, 0.0952318087220192, 0.09972262382507324, 0.09747721254825592, 0.10289261490106583, 0.09813763201236725], "val_loss": [297526.875, 15949548.0, 171026576.0, 932077376.0, 3490778112.0, 10295889920.0], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 2, 4, 4, 0, 5, 2, 9], [2, 0, 3, 1, 0, 0], [6, 1, 72], [0, 0, 1, 1, 1], [7, 3, 0, 2], [0, 6, 2], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 13, 8, 5, 3, 5, 2, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.negative(grad))), tf.math.square(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 2, 1], [78, 39, 39], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 1, 0, 0, 0, 1, 1], [7, 5, 0, 8, 1], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 10, 5, 5, 2, 5, 2, 3, 1, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.sqrt(tf.math.subtract(alpha, alpha)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.310556650161743, 2.3098151683807373, 2.3098549842834473, 2.3113584518432617, 2.3105406761169434, 2.3095149993896484], "accuracy": [0.09457138925790787, 0.09391097724437714, 0.0944393053650856, 0.08532558381557465, 0.09126931428909302, 0.09351472556591034], "val_loss": [2.30873703956604, 2.30873703956604, 2.30873703956604, 2.30873703956604, 2.30873703956604, 2.30873703956604], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}]