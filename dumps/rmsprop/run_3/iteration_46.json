[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8488571643829346, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.20965838432312, 1.605275273323059, 1.174899697303772, 0.9858217835426331, 0.8854502439498901, 0.8390660285949707, 0.7964760661125183, 0.7493116855621338, 0.7368370890617371, 0.7423945665359497, 0.6912937164306641, 0.652807354927063, 0.6722995042800903, 0.6303475499153137, 0.638758659362793, 0.6335452795028687, 0.6118106245994568, 0.5839931964874268, 0.6074797511100769, 0.5692148208618164, 0.5713926553726196, 0.5606203079223633, 0.5617382526397705, 0.5447259545326233, 0.5329451560974121, 0.5268599390983582, 0.5340890884399414, 0.513875424861908, 0.5041987299919128, 0.5130024552345276, 0.494832307100296, 0.49036717414855957, 0.4784986972808838, 0.4866924583911896, 0.47488248348236084, 0.47904762625694275, 0.46592438220977783, 0.45425689220428467, 0.45789527893066406, 0.4461337625980377, 0.46881693601608276, 0.44601550698280334, 0.44031885266304016, 0.44752898812294006, 0.4237683117389679, 0.4238412082195282, 0.4305957853794098, 0.42562389373779297, 0.4144071340560913, 0.4031882882118225, 0.4081343710422516, 0.40373241901397705, 0.4025316536426544, 0.39863044023513794, 0.4013623595237732, 0.39603057503700256, 0.3858937621116638, 0.37867599725723267, 0.38853347301483154, 0.3791296184062958, 0.38104328513145447], "accuracy": [0.27380794286727905, 0.49848103523254395, 0.5904107689857483, 0.6441685557365417, 0.6736230254173279, 0.6915863156318665, 0.7107383608818054, 0.7235503792762756, 0.7215691208839417, 0.7257958054542542, 0.744419515132904, 0.7537974119186401, 0.7428345084190369, 0.76106196641922, 0.7605336308479309, 0.7605336308479309, 0.7684586048126221, 0.7832518815994263, 0.7713643908500671, 0.7872143983840942, 0.7841764688491821, 0.7869502305984497, 0.785629391670227, 0.7952714562416077, 0.8018755912780762, 0.8061022162437439, 0.7924976944923401, 0.8094043135643005, 0.8152159452438354, 0.809140145778656, 0.8157442808151245, 0.8182538747787476, 0.8231409192085266, 0.8165367841720581, 0.8222163319587708, 0.8197067975997925, 0.8285563588142395, 0.8327829837799072, 0.8318583965301514, 0.8350284099578857, 0.8256505131721497, 0.8327829837799072, 0.8381983637809753, 0.830669641494751, 0.8444063067436218, 0.8425571322441101, 0.8422929644584656, 0.8389908671379089, 0.846387505531311, 0.848368763923645, 0.8449346423149109, 0.8486329317092896, 0.8486329317092896, 0.852331280708313, 0.8451988101005554, 0.8479725122451782, 0.8595958352088928, 0.8597279191017151, 0.8549728989601135, 0.86118084192276, 0.8515387773513794], "val_loss": [1.9230862855911255, 1.0929569005966187, 0.8973206281661987, 0.804622232913971, 0.7767345309257507, 0.6857672333717346, 0.6721967458724976, 0.6734874844551086, 0.6915271878242493, 0.6241103410720825, 0.6087749600410461, 0.5950765609741211, 0.5749830603599548, 0.5841686725616455, 0.5530827641487122, 0.5793383121490479, 0.5353695750236511, 0.5145910382270813, 0.5285325646400452, 0.5221818685531616, 0.5045897364616394, 0.5228636264801025, 0.5050208568572998, 0.492615282535553, 0.5042333006858826, 0.48819345235824585, 0.47438427805900574, 0.4683537483215332, 0.4591546952724457, 0.4624483585357666, 0.45263615250587463, 0.45954930782318115, 0.460252970457077, 0.47306180000305176, 0.44545361399650574, 0.4519936442375183, 0.4357885718345642, 0.4363263249397278, 0.4398147761821747, 0.4561229944229126, 0.43614399433135986, 0.4212207794189453, 0.43167099356651306, 0.4146358370780945, 0.41952022910118103, 0.42774438858032227, 0.4073605239391327, 0.40770068764686584, 0.41299423575401306, 0.40159663558006287, 0.405976265668869, 0.4202680289745331, 0.40908488631248474, 0.4110962748527527, 0.3965720534324646, 0.38916847109794617, 0.3874070346355438, 0.3962351977825165, 0.4036594331264496, 0.39962854981422424, 0.390293687582016], "val_accuracy": [0.4936666786670685, 0.6496666669845581, 0.6783333420753479, 0.690666675567627, 0.7013333439826965, 0.7403333187103271, 0.7459999918937683, 0.7223333120346069, 0.7160000205039978, 0.7713333368301392, 0.7720000147819519, 0.7730000019073486, 0.7853333353996277, 0.7749999761581421, 0.7973333597183228, 0.7603333592414856, 0.79666668176651, 0.8023333549499512, 0.8036666512489319, 0.8069999814033508, 0.8106666803359985, 0.800000011920929, 0.8059999942779541, 0.8190000057220459, 0.8169999718666077, 0.8166666626930237, 0.8213333487510681, 0.8266666531562805, 0.8306666612625122, 0.8299999833106995, 0.8323333263397217, 0.8296666741371155, 0.8230000138282776, 0.8226666450500488, 0.8336666822433472, 0.8286666870117188, 0.8383333086967468, 0.8386666774749756, 0.8343333601951599, 0.8299999833106995, 0.8413333296775818, 0.8443333506584167, 0.8323333263397217, 0.8473333120346069, 0.8423333168029785, 0.8450000286102295, 0.8506666421890259, 0.8526666760444641, 0.8503333330154419, 0.8546666502952576, 0.847000002861023, 0.8426666855812073, 0.8533333539962769, 0.8500000238418579, 0.8579999804496765, 0.8633333444595337, 0.8613333106040955, 0.8573333621025085, 0.8496666550636292, 0.8519999980926514, 0.8603333234786987]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8351428508758545, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213930606842041, 1.6180806159973145, 1.156488060951233, 1.0053166151046753, 0.8851688504219055, 0.8491400480270386, 0.7857944965362549, 0.763029158115387, 0.7346664667129517, 0.717875599861145, 0.6806902289390564, 0.6574698090553284, 0.6399338245391846, 0.6464181542396545, 0.6093662977218628, 0.5888811945915222, 0.59883052110672, 0.6047093272209167, 0.5781776905059814, 0.5568500757217407, 0.5466323494911194, 0.5379173159599304, 0.5329998135566711, 0.524945855140686, 0.5200534462928772, 0.5331270694732666, 0.5057113170623779, 0.49804338812828064, 0.4834795296192169, 0.4877093434333801, 0.47744250297546387, 0.46388888359069824, 0.46909797191619873, 0.4644402861595154, 0.445234090089798, 0.45838606357574463, 0.45156896114349365, 0.45263123512268066, 0.4439188241958618, 0.4341971278190613, 0.434112548828125, 0.4185246229171753, 0.4247792363166809, 0.4213586747646332, 0.4138796329498291, 0.4123435616493225, 0.4034094214439392, 0.39107581973075867, 0.4041610062122345, 0.4007132947444916, 0.39833152294158936, 0.39348533749580383], "accuracy": [0.2616563141345978, 0.5071985125541687, 0.6009774208068848, 0.6373002529144287, 0.6812838315963745, 0.6881521344184875, 0.7125874757766724, 0.722757875919342, 0.7298903465270996, 0.7297582626342773, 0.7460044622421265, 0.7586844563484192, 0.7597411274909973, 0.7611940503120422, 0.7733456492424011, 0.7829877138137817, 0.7808743715286255, 0.7732135653495789, 0.7868181467056274, 0.7961959838867188, 0.7947431206703186, 0.8034605979919434, 0.8030643463134766, 0.8076872229576111, 0.8100647330284119, 0.7989697456359863, 0.8142913579940796, 0.8164047002792358, 0.8222163319587708, 0.8206313848495483, 0.8248580098152161, 0.8329150676727295, 0.8273676037788391, 0.8272355198860168, 0.8318583965301514, 0.828292191028595, 0.8322546482086182, 0.8360850811004639, 0.8342359066009521, 0.8428213000297546, 0.8404437899589539, 0.8457271456718445, 0.8432175517082214, 0.8482366800308228, 0.8498216867446899, 0.8535200357437134, 0.8540483713150024, 0.8568220734596252, 0.8515387773513794, 0.8531237840652466, 0.8510104417800903, 0.8531237840652466], "val_loss": [1.9326560497283936, 1.1249500513076782, 0.8832074999809265, 0.7977950572967529, 0.7456353306770325, 0.7258473038673401, 0.6643931865692139, 0.6554322242736816, 0.6434338092803955, 0.5955398082733154, 0.5942897200584412, 0.5932907462120056, 0.5655154585838318, 0.5726796388626099, 0.5426576137542725, 0.5538360476493835, 0.5180276036262512, 0.5481535196304321, 0.5025450587272644, 0.5030669569969177, 0.49124404788017273, 0.5047251582145691, 0.5095145106315613, 0.4988826513290405, 0.4919446110725403, 0.46473830938339233, 0.45962420105934143, 0.4731155335903168, 0.4477882385253906, 0.4562087953090668, 0.44738131761550903, 0.4476618766784668, 0.4502703547477722, 0.4370058476924896, 0.4428830146789551, 0.44014808535575867, 0.4380004405975342, 0.43650496006011963, 0.4244071841239929, 0.4169056713581085, 0.4201402962207794, 0.4252914488315582, 0.4120926558971405, 0.4201975464820862, 0.43274781107902527, 0.40889835357666016, 0.404418021440506, 0.42250382900238037, 0.40832453966140747, 0.39945244789123535, 0.39826276898384094, 0.40024685859680176], "val_accuracy": [0.5820000171661377, 0.6456666588783264, 0.6853333115577698, 0.7089999914169312, 0.7173333168029785, 0.7293333411216736, 0.7513333559036255, 0.7390000224113464, 0.7519999742507935, 0.7829999923706055, 0.7739999890327454, 0.7680000066757202, 0.7896666526794434, 0.781333327293396, 0.800000011920929, 0.7943333387374878, 0.8053333163261414, 0.8003333210945129, 0.8100000023841858, 0.8136666417121887, 0.8113333582878113, 0.8100000023841858, 0.8130000233650208, 0.8009999990463257, 0.8149999976158142, 0.8209999799728394, 0.8286666870117188, 0.8246666789054871, 0.8356666564941406, 0.8356666564941406, 0.8366666436195374, 0.8446666598320007, 0.8326666951179504, 0.8396666646003723, 0.8463333249092102, 0.8370000123977661, 0.8393333554267883, 0.8410000205039978, 0.847000002861023, 0.8526666760444641, 0.8479999899864197, 0.8446666598320007, 0.8533333539962769, 0.8519999980926514, 0.8456666469573975, 0.856333315372467, 0.8616666793823242, 0.8416666388511658, 0.8456666469573975, 0.859666645526886, 0.859000027179718, 0.8613333106040955]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [3, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 2], [16, 1], [0, 0, 1, 1, 0, 1], [2, 7, 0], [0, 6, 0], [0, 48], [1], [0], [7], [0]], "fitness": -0.5282857418060303, "mapping_values": [1, 11, 6, 5, 2, 12, 7, 5, 1, 6, 3, 3, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, alpha))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [3.224766254425049, 2.2839975357055664, 2.2017769813537598, 2.1633169651031494, 4.475881099700928, 2.305889844894409, 2.3038887977600098], "accuracy": [0.19376568496227264, 0.12481838464736938, 0.1728965789079666, 0.22678641974925995, 0.10051512718200684, 0.09655263274908066, 0.09747721254825592], "val_loss": [2.313877820968628, 1.8549898862838745, 2.292278528213501, 3.275559186935425, 2.3081634044647217, 2.3039605617523193, 2.3030107021331787], "val_accuracy": [0.10000000149011612, 0.5263333320617676, 0.12966667115688324, 0.0976666659116745, 0.0976666659116745, 0.10066666454076767, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [3, 0, 2, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1], [0, 2, 0, 0, 3, 1, 4], [2, 5, 3, 1, 0], [65, 1], [0, 1, 1, 1], [0, 7], [0, 6], [78], [1], [0], [5], [0]], "fitness": -0.1728571355342865, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.344498872756958, 2.4278836250305176, 2.3054137229919434, 2.303490400314331, 2.303046703338623, 2.302947998046875], "accuracy": [0.187689870595932, 0.19416193664073944, 0.1002509593963623, 0.09985470771789551, 0.0948355570435524, 0.09721305221319199], "val_loss": [2.296123743057251, 2.30715012550354, 2.303283929824829, 2.302776575088501, 2.302605390548706, 2.3026509284973145], "val_accuracy": [0.17933332920074463, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.10333333164453506, 0.10166666656732559]}, "mapping_values": [1, 11, 6, 5, 2, 4, 2, 2, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5, 2, 0], [0, 0, 1, 0, 2, 3], [0, 24, 24], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 5, 9, 2, 2, 6, 2, 8, 8, 6, 7, 4, 5, 0, 9], [2, 0, 3, 1, 0, 1, 2, 5, 0, 3], [16, 1, 42, 46, 56], [0, 1, 1, 1], [0, 7], [0, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 3, 31, 21, 10, 5, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), alpha)), tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(grad, tf.math.negative(grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.math.square(tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), alpha), beta))), grad), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 6, 3, 1, 3, 5], [3, 0, 1, 1, 2], [0, 63, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 5, 4, 2, 8, 7, 0, 8], [2, 2, 3, 1, 0, 2, 4, 5], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 22, 14, 8, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.square(beta))), tf.math.pow(grad, alpha)), tf.math.add(tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]