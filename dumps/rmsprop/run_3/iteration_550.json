[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8191428780555725, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2099921703338623, 1.608967900276184, 1.1496433019638062, 1.000758171081543, 0.8965088725090027, 0.8273366093635559, 0.784904420375824, 0.7657443284988403, 0.7227079272270203, 0.7122927904129028, 0.6899062991142273, 0.6607929468154907, 0.6664050221443176, 0.6336549520492554, 0.6193796992301941, 0.6220690011978149, 0.598767101764679, 0.5841770172119141, 0.5740963220596313, 0.5779908299446106, 0.5642603635787964, 0.539592981338501, 0.542609691619873, 0.5402648448944092, 0.526866614818573, 0.5111696124076843, 0.5105065107345581, 0.4960254430770874, 0.49443164467811584, 0.4949858784675598, 0.48236241936683655, 0.4735684096813202, 0.47437208890914917, 0.4663333296775818, 0.4638121724128723, 0.466067910194397, 0.4527720808982849, 0.447832316160202, 0.4470897614955902, 0.44426408410072327, 0.42968496680259705, 0.44122177362442017, 0.42327043414115906, 0.4273946285247803, 0.41951602697372437, 0.41695135831832886, 0.4141727089881897, 0.40643951296806335], "accuracy": [0.2694492042064667, 0.5040285587310791, 0.6019020080566406, 0.6427156329154968, 0.6705851554870605, 0.7042662501335144, 0.7160216569900513, 0.7211728692054749, 0.7359662055969238, 0.7425703406333923, 0.7466648817062378, 0.7581561207771301, 0.7470611333847046, 0.767401933670044, 0.767930269241333, 0.7729493975639343, 0.7802139520645142, 0.7803460359573364, 0.789988100528717, 0.7827235460281372, 0.7890635132789612, 0.800818920135498, 0.8026680946350098, 0.8020076751708984, 0.806630551815033, 0.8132346868515015, 0.8112534880638123, 0.8198388814926147, 0.819442629814148, 0.819970965385437, 0.8255184292793274, 0.8274996876716614, 0.8267071843147278, 0.8355567455291748, 0.8330471515655518, 0.8318583965301514, 0.8370096683502197, 0.835160493850708, 0.8376700282096863, 0.8389908671379089, 0.8451988101005554, 0.8372738361358643, 0.8466516733169556, 0.8437458872795105, 0.8481045961380005, 0.850350022315979, 0.8520671129226685, 0.8511425256729126], "val_loss": [1.920852541923523, 1.1080219745635986, 0.873441219329834, 0.8008967041969299, 0.781589925289154, 0.6598458886146545, 0.6375333070755005, 0.6095731854438782, 0.5995845794677734, 0.5972606539726257, 0.5801454186439514, 0.5547744035720825, 0.5809457898139954, 0.5802529454231262, 0.5427611470222473, 0.5582170486450195, 0.5181061029434204, 0.5113215446472168, 0.5111928582191467, 0.5135713815689087, 0.48497042059898376, 0.4983287751674652, 0.47636157274246216, 0.488798052072525, 0.4700874984264374, 0.45930948853492737, 0.47687292098999023, 0.4624524712562561, 0.45407605171203613, 0.4739803373813629, 0.43965673446655273, 0.43559521436691284, 0.44249093532562256, 0.43532025814056396, 0.4468640983104706, 0.4279906153678894, 0.4234493672847748, 0.4405379593372345, 0.4191025495529175, 0.41838929057121277, 0.42091700434684753, 0.4169853627681732, 0.40601858496665955, 0.4058854281902313, 0.4053243100643158, 0.4253503084182739, 0.4036603271961212, 0.3977939188480377], "val_accuracy": [0.5753333568572998, 0.6510000228881836, 0.6909999847412109, 0.699999988079071, 0.6993333101272583, 0.7549999952316284, 0.7646666765213013, 0.7639999985694885, 0.7683333158493042, 0.7746666669845581, 0.7770000100135803, 0.7879999876022339, 0.762333333492279, 0.7829999923706055, 0.7973333597183228, 0.7900000214576721, 0.8050000071525574, 0.8073333501815796, 0.8059999942779541, 0.8046666383743286, 0.8106666803359985, 0.8019999861717224, 0.8223333358764648, 0.8086666464805603, 0.8196666836738586, 0.8240000009536743, 0.8149999976158142, 0.8203333616256714, 0.8246666789054871, 0.8203333616256714, 0.8393333554267883, 0.8373333215713501, 0.8266666531562805, 0.8363333344459534, 0.8299999833106995, 0.8403333425521851, 0.8420000076293945, 0.8373333215713501, 0.8333333134651184, 0.8433333039283752, 0.8453333377838135, 0.8493333458900452, 0.8529999852180481, 0.8453333377838135, 0.8500000238418579, 0.8386666774749756, 0.8503333330154419, 0.8523333072662354]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 3, 1, 3, 5], [3, 0, 0, 0, 2], [26, 39, 39], [0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], [0, 2, 4, 0, 3, 5, 5], [2, 5, 0, 5, 0, 3, 1], [16, 1], [0, 1, 0, 1, 0, 1, 1, 1], [0, 3, 7, 4], [0, 1, 6, 5], [69], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [53.7823371887207, 5621.888671875, 94732.59375, 630225.125, 2889732.25, 8421140.0], "accuracy": [0.09932637959718704, 0.10434553027153015, 0.09457138925790787, 0.09496764093637466, 0.09576013684272766, 0.1010434553027153], "val_loss": [432.7936706542969, 20256.50390625, 212224.171875, 958993.75, 2210472.5, 10754600.0], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 2, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 3, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(sigma, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3030521869659424, 2.3026087284088135, 2.3026318550109863, 2.30265212059021, 2.302755117416382, 2.302809953689575], "accuracy": [0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09721305221319199, 0.09998679161071777, 0.10077928751707077], "val_loss": [2.302565813064575, 2.3025341033935547, 2.3025293350219727, 2.302549123764038, 2.302581787109375, 2.30263352394104], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10166666656732559, 0.10166666656732559, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 2, 4, 3, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 4, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 0, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, grad)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3036675453186035, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 8, 9, 3, 5], [0, 0, 1, 0, 2], [38, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [3, 2, 0, 4, 0, 1, 1], [16, 1], [0, 0, 1, 1, 0, 1, 0, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 15, 8, 7, 2, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(grad, tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(tf.math.pow(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.30412220954895, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}]