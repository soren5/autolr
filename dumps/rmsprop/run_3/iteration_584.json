[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8062857389450073, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212514638900757, 1.6063613891601562, 1.16825270652771, 1.0086227655410767, 0.8764969706535339, 0.8320246338844299, 0.7836402058601379, 0.7851011753082275, 0.7381499409675598, 0.6771531105041504, 0.6967412829399109, 0.6743401288986206, 0.6500855684280396, 0.6579986214637756, 0.6260765194892883, 0.6167431473731995, 0.6163710355758667, 0.5963737368583679, 0.5818837285041809, 0.5807033777236938, 0.5686480402946472, 0.5613577365875244, 0.559467077255249, 0.5408776998519897, 0.5483259558677673, 0.5223730802536011, 0.5388081073760986, 0.5094543099403381, 0.5092564225196838, 0.5048090815544128, 0.4862658679485321, 0.48655080795288086, 0.48135197162628174, 0.48377254605293274, 0.47180497646331787, 0.4694006145000458, 0.46996307373046875, 0.47221899032592773, 0.45888227224349976, 0.4474566876888275, 0.45257365703582764, 0.44860541820526123, 0.43989065289497375, 0.4328010678291321, 0.4305467903614044, 0.4301099479198456, 0.43233129382133484, 0.41851261258125305, 0.412577748298645, 0.4129306375980377, 0.4052577614784241, 0.4078626036643982, 0.40088140964508057], "accuracy": [0.26522254943847656, 0.5188218355178833, 0.5910711884498596, 0.6436402201652527, 0.6911900639533997, 0.7036058902740479, 0.711530864238739, 0.7063795924186707, 0.728701651096344, 0.7520803213119507, 0.7383436560630798, 0.7549861073493958, 0.7556465268135071, 0.7540615797042847, 0.7677981853485107, 0.7708360552787781, 0.7711002230644226, 0.7814027070999146, 0.787082314491272, 0.7837802171707153, 0.791441023349762, 0.7981772422790527, 0.7936864495277405, 0.8038568496704102, 0.7967243194580078, 0.8083476424217224, 0.798309326171875, 0.8141592741012573, 0.8142913579940796, 0.8137630224227905, 0.8216879963874817, 0.817989706993103, 0.8216879963874817, 0.8238013386726379, 0.8290846943855286, 0.8241975903511047, 0.8245938420295715, 0.8244617581367493, 0.828292191028595, 0.8362171649932861, 0.834632158279419, 0.8347642421722412, 0.8385946154594421, 0.8411042094230652, 0.839519202709198, 0.8426892161369324, 0.8411042094230652, 0.8424250483512878, 0.8500858545303345, 0.847840428352356, 0.8486329317092896, 0.8515387773513794, 0.8524633646011353], "val_loss": [1.928351879119873, 1.1234612464904785, 0.9335632920265198, 0.7740458846092224, 0.7555285096168518, 0.6713033318519592, 0.6693211793899536, 0.6769985556602478, 0.6165618300437927, 0.5974647402763367, 0.5794717669487, 0.5724161267280579, 0.5656501054763794, 0.5755269527435303, 0.5411757826805115, 0.5355789661407471, 0.5609303116798401, 0.5418907999992371, 0.5084439516067505, 0.5071552991867065, 0.4993736445903778, 0.5091869831085205, 0.5230872631072998, 0.5323190689086914, 0.48544225096702576, 0.48822665214538574, 0.4753381311893463, 0.4722886085510254, 0.4591819643974304, 0.4555460512638092, 0.4526842534542084, 0.4598536491394043, 0.45577770471572876, 0.44660884141921997, 0.43935611844062805, 0.4468354880809784, 0.4340110719203949, 0.43457990884780884, 0.4341979920864105, 0.4323643743991852, 0.43728673458099365, 0.4264184236526489, 0.42026594281196594, 0.4192177653312683, 0.4126605689525604, 0.4180833697319031, 0.4204274117946625, 0.3993890881538391, 0.41156885027885437, 0.4040200710296631, 0.3988734185695648, 0.42278704047203064, 0.4016651511192322], "val_accuracy": [0.5363333225250244, 0.6346666812896729, 0.6460000276565552, 0.7080000042915344, 0.7123333215713501, 0.7419999837875366, 0.7329999804496765, 0.7540000081062317, 0.7563333511352539, 0.7689999938011169, 0.7733333110809326, 0.7850000262260437, 0.7733333110809326, 0.7910000085830688, 0.7910000085830688, 0.79666668176651, 0.7839999794960022, 0.7710000276565552, 0.8023333549499512, 0.8073333501815796, 0.8043333292007446, 0.8130000233650208, 0.784333348274231, 0.7896666526794434, 0.812333345413208, 0.8166666626930237, 0.8270000219345093, 0.8220000267028809, 0.8223333358764648, 0.8303333520889282, 0.8266666531562805, 0.8196666836738586, 0.8296666741371155, 0.8320000171661377, 0.8349999785423279, 0.8346666693687439, 0.8366666436195374, 0.8396666646003723, 0.8339999914169312, 0.8410000205039978, 0.831333339214325, 0.8379999995231628, 0.8423333168029785, 0.8450000286102295, 0.8473333120346069, 0.8426666855812073, 0.8360000252723694, 0.8553333282470703, 0.8420000076293945, 0.8496666550636292, 0.8510000109672546, 0.8443333506584167, 0.8446666598320007]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 58], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 0, 6, 3, 5, 5, 4], [2, 2, 3, 4, 0, 1, 1], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1], [7, 3, 0, 3, 0], [0, 1, 1, 2], [7], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 1, 9, 5, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(grad, grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), alpha)), alpha), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [6.310477256774902, 2.8915359879911276e+27, NaN, NaN, NaN, NaN], "accuracy": [0.2160876989364624, 0.10302469879388809, 0.09642054885625839, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.4619505405426025, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09700000286102295, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [3, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2, 3], [26, 39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [9, 1, 5, 6, 3, 5, 9, 4], [2, 2, 0, 3, 0, 3, 1], [16, 1], [0, 0, 0, 1, 1, 1, 1, 1], [7, 3, 0, 3], [0, 0, 4, 2], [0, 94], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 5, 6, 3, 1, 1, 0, 1, 6, 3, 3, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.310304880142212, 2.3111538887023926, 2.315706729888916, 2.3194267749786377, 2.3247618675231934, 2.3374924659729004, 2.351173162460327, 2.408465623855591, 1.0858589120310402e+32, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09060890227556229, 0.09285431355237961, 0.09100515395402908, 0.0948355570435524, 0.09457138925790787, 0.09536388516426086, 0.09536388516426086, 0.09879804402589798, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.310079336166382, 2.312260627746582, 2.315457582473755, 2.3195016384124756, 2.3243067264556885, 2.3314406871795654, 2.34777569770813, 2.4549736976623535, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09066666662693024, 0.0949999988079071, 0.09666666388511658, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 8, 3, 5], [0, 0, 2, 0, 2], [26, 29, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 9, 6, 3, 5, 6, 4, 4], [1, 2, 0, 4, 0, 3, 1], [26, 1, 70], [0, 0, 1, 1], [9, 2], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 16, 9, 7, 3, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.square(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), alpha), tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.divide_no_nan(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), grad))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 6, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 97], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 3, 2, 6, 3, 5, 8, 4], [1, 2, 3, 4, 0, 0, 1], [16, 1], [1, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.08914285898208618, "mapping_values": [1, 10, 5, 5, 3, 13, 7, 6, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.add(alpha, beta), tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.square(tf.math.sqrt(grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.310584783554077, 2.3086161613464355, 2.309603452682495, 2.310565233230591, 2.3104970455169678, 2.309436559677124], "accuracy": [0.08651433140039444, 0.09219389408826828, 0.09206181764602661, 0.08598599582910538, 0.08915598690509796, 0.08981640636920929], "val_loss": [2.3080620765686035, 2.3080620765686035, 2.3080620765686035, 2.3080620765686035, 2.3080620765686035, 2.3080620765686035], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]