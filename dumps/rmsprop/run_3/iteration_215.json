[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8539999723434448, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2108490467071533, 1.6031280755996704, 1.1586053371429443, 1.0017169713974, 0.9027997255325317, 0.8509687781333923, 0.7821087837219238, 0.7510325312614441, 0.7681663632392883, 0.7239335179328918, 0.7042371034622192, 0.6705950498580933, 0.6701738238334656, 0.6410457491874695, 0.6455509066581726, 0.6122079491615295, 0.6216953992843628, 0.6117597222328186, 0.5990164279937744, 0.5723549127578735, 0.5750733613967896, 0.5654271245002747, 0.5603346228599548, 0.5531269907951355, 0.543151319026947, 0.5325374007225037, 0.523846447467804, 0.515398383140564, 0.5130863785743713, 0.5047292113304138, 0.511211097240448, 0.489170640707016, 0.4864640533924103, 0.4842982292175293, 0.47540971636772156, 0.4720350503921509, 0.46809497475624084, 0.46228352189064026, 0.46422722935676575, 0.4534793794155121, 0.45032545924186707, 0.44704577326774597, 0.43839192390441895, 0.4372914135456085, 0.44019392132759094, 0.4282222390174866, 0.414899617433548, 0.42131656408309937, 0.4295532703399658, 0.4157116115093231, 0.39912712574005127, 0.4099557399749756, 0.4104830026626587, 0.40346992015838623, 0.40090474486351013, 0.38478195667266846, 0.39120081067085266, 0.38766616582870483, 0.3841533958911896, 0.37545040249824524, 0.37709566950798035, 0.37396249175071716, 0.36828750371932983, 0.36231529712677, 0.37067341804504395, 0.36960527300834656, 0.36422786116600037, 0.3631508946418762, 0.3479906916618347, 0.3558589220046997, 0.35364899039268494, 0.34216275811195374, 0.3413783013820648], "accuracy": [0.2658829689025879, 0.5038964748382568, 0.5926561951637268, 0.6362435817718506, 0.6732267737388611, 0.6902654767036438, 0.711530864238739, 0.7235503792762756, 0.7207766771316528, 0.7279091477394104, 0.7391361594200134, 0.7582882046699524, 0.746268630027771, 0.7626469135284424, 0.759609043598175, 0.7754589915275574, 0.7625148296356201, 0.7757231593132019, 0.7700436115264893, 0.7889314293861389, 0.7889314293861389, 0.7868181467056274, 0.7898560166358948, 0.7997622489929199, 0.798309326171875, 0.8030643463134766, 0.8080834746360779, 0.8125742673873901, 0.8132346868515015, 0.8161405324935913, 0.8128384351730347, 0.8238013386726379, 0.8271034359931946, 0.8224804997444153, 0.8290846943855286, 0.8278959393501282, 0.830669641494751, 0.833179235458374, 0.833179235458374, 0.8341038227081299, 0.837537944316864, 0.8366134166717529, 0.8391229510307312, 0.843481719493866, 0.8399154543876648, 0.8416325449943542, 0.8506141901016235, 0.848368763923645, 0.8404437899589539, 0.8453308939933777, 0.8536521196365356, 0.8490291833877563, 0.8507462739944458, 0.8562937378883362, 0.8520671129226685, 0.8610487580299377, 0.8573504090309143, 0.8595958352088928, 0.8590674996376038, 0.8631620407104492, 0.8622375130653381, 0.8631620407104492, 0.8681812286376953, 0.8667283058166504, 0.8626337051391602, 0.8658037185668945, 0.8628978729248047, 0.8687095642089844, 0.8659358024597168, 0.868049144744873, 0.8716153502464294, 0.874389111995697, 0.8757099509239197], "val_loss": [1.9235763549804688, 1.1314831972122192, 0.8731655478477478, 0.807879626750946, 0.7705962061882019, 0.6980771422386169, 0.6661664247512817, 0.697576105594635, 0.66929030418396, 0.5976685285568237, 0.5922770500183105, 0.5830627679824829, 0.6373900771141052, 0.5411273837089539, 0.5578807592391968, 0.5548969507217407, 0.5392282009124756, 0.5990676879882812, 0.5256581902503967, 0.5300251245498657, 0.5082780718803406, 0.5017443299293518, 0.5056119561195374, 0.5075571537017822, 0.4926685094833374, 0.47513166069984436, 0.4797607362270355, 0.4600391089916229, 0.46047335863113403, 0.5116149187088013, 0.4663454294204712, 0.452178955078125, 0.4634062945842743, 0.44287997484207153, 0.4433993399143219, 0.43838903307914734, 0.43588727712631226, 0.4394426941871643, 0.43417826294898987, 0.43312549591064453, 0.4629688262939453, 0.431441068649292, 0.4245022237300873, 0.41809216141700745, 0.4273024797439575, 0.40897610783576965, 0.41044068336486816, 0.45049646496772766, 0.4001186192035675, 0.4124038815498352, 0.4094165861606598, 0.3972887098789215, 0.39708682894706726, 0.39355671405792236, 0.39122965931892395, 0.40282538533210754, 0.3918760120868683, 0.3897528350353241, 0.3919954299926758, 0.39045262336730957, 0.40663614869117737, 0.3902661204338074, 0.37542790174484253, 0.3986421823501587, 0.3837566673755646, 0.3817605674266815, 0.37363508343696594, 0.37688878178596497, 0.37387850880622864, 0.387358158826828, 0.3793269991874695, 0.36945849657058716, 0.38200435042381287], "val_accuracy": [0.5073333382606506, 0.6323333382606506, 0.7126666903495789, 0.70333331823349, 0.7099999785423279, 0.7419999837875366, 0.7593333125114441, 0.7426666617393494, 0.7416666746139526, 0.7753333449363708, 0.7826666831970215, 0.7836666703224182, 0.7506666779518127, 0.8023333549499512, 0.8023333549499512, 0.7903333306312561, 0.7916666865348816, 0.7573333382606506, 0.8106666803359985, 0.8083333373069763, 0.8216666579246521, 0.8140000104904175, 0.8166666626930237, 0.812666654586792, 0.8216666579246521, 0.8276666402816772, 0.8323333263397217, 0.8420000076293945, 0.8433333039283752, 0.8066666722297668, 0.8323333263397217, 0.8443333506584167, 0.8296666741371155, 0.8426666855812073, 0.8416666388511658, 0.8450000286102295, 0.8426666855812073, 0.847000002861023, 0.8496666550636292, 0.8516666889190674, 0.8263333439826965, 0.8443333506584167, 0.8500000238418579, 0.8519999980926514, 0.8479999899864197, 0.8579999804496765, 0.8553333282470703, 0.8206666707992554, 0.8616666793823242, 0.8510000109672546, 0.8573333621025085, 0.8616666793823242, 0.8576666712760925, 0.8633333444595337, 0.8633333444595337, 0.859000027179718, 0.8603333234786987, 0.8636666536331177, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197, 0.8616666793823242, 0.8709999918937683, 0.8606666922569275, 0.8673333525657654, 0.862666666507721, 0.8709999918937683, 0.8726666569709778, 0.8696666955947876, 0.8606666922569275, 0.8693333268165588, 0.871999979019165, 0.8656666874885559]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8157142996788025, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2086167335510254, 1.6015843152999878, 1.1318460702896118, 0.9988729953765869, 0.8930568099021912, 0.8437583446502686, 0.7842642664909363, 0.7480990886688232, 0.7483024597167969, 0.6906552910804749, 0.6817987561225891, 0.693703293800354, 0.6387423872947693, 0.6456153988838196, 0.6332952976226807, 0.6204562783241272, 0.6225107312202454, 0.5925803184509277, 0.5768179297447205, 0.5849317312240601, 0.5686851739883423, 0.5654932260513306, 0.552577555179596, 0.5419930815696716, 0.5426168441772461, 0.5187651515007019, 0.5215890407562256, 0.5174159407615662, 0.5106304287910461, 0.5028402805328369, 0.49169251322746277, 0.5040773153305054, 0.4930998682975769, 0.4807276725769043, 0.479885071516037, 0.4646606147289276, 0.46812617778778076, 0.45871689915657043, 0.47493821382522583, 0.4566461443901062, 0.4481290280818939, 0.448276162147522, 0.4478248953819275, 0.43456852436065674, 0.43783289194107056, 0.42641481757164, 0.4345089793205261, 0.4295435845851898, 0.42049551010131836, 0.4145398437976837, 0.4140893220901489, 0.40917396545410156, 0.407103568315506, 0.4077114760875702, 0.4056330621242523, 0.3973413109779358, 0.3934580981731415, 0.388967901468277, 0.3888038396835327, 0.3880985677242279, 0.3841589093208313, 0.38628777861595154, 0.3746958076953888, 0.3796220123767853, 0.36967894434928894, 0.37079042196273804], "accuracy": [0.26482629776000977, 0.5114251971244812, 0.6071853041648865, 0.6520935297012329, 0.6796988248825073, 0.6976621150970459, 0.7120591998100281, 0.7337207794189453, 0.726192057132721, 0.7453441023826599, 0.748249888420105, 0.7483819723129272, 0.759609043598175, 0.7630431652069092, 0.7638356685638428, 0.7703077793121338, 0.7664773464202881, 0.7890635132789612, 0.7837802171707153, 0.7840443849563599, 0.7909126877784729, 0.7910447716712952, 0.793422281742096, 0.8000264167785645, 0.7996301651000977, 0.8075551390647888, 0.8058380484580994, 0.8152159452438354, 0.8101968169212341, 0.819970965385437, 0.8216879963874817, 0.8115176558494568, 0.8182538747787476, 0.8232730031013489, 0.824329674243927, 0.8322546482086182, 0.8252542614936829, 0.8356888294219971, 0.8300092220306396, 0.8347642421722412, 0.8393871188163757, 0.8388587832450867, 0.8354246616363525, 0.8437458872795105, 0.8400475382804871, 0.8432175517082214, 0.8424250483512878, 0.8446704745292664, 0.8425571322441101, 0.8496896028518677, 0.8485008478164673, 0.8500858545303345, 0.8498216867446899, 0.8494254350662231, 0.8521991968154907, 0.8568220734596252, 0.8576145768165588, 0.8545766472816467, 0.8599920868873596, 0.8618412613868713, 0.858671247959137, 0.8564258217811584, 0.8654074668884277, 0.860652506351471, 0.8638224601745605, 0.8638224601745605], "val_loss": [1.9224705696105957, 1.1187889575958252, 0.9436196088790894, 0.7961017489433289, 0.8907998204231262, 0.7133960127830505, 0.6696224808692932, 0.7053777575492859, 0.6395000219345093, 0.606545090675354, 0.6102616190910339, 0.5763959884643555, 0.6207385063171387, 0.5644994378089905, 0.5633596777915955, 0.5417591333389282, 0.5724421143531799, 0.528138279914856, 0.5207483172416687, 0.5385499596595764, 0.514441967010498, 0.5119479894638062, 0.5055222511291504, 0.5491299033164978, 0.48839452862739563, 0.5103685259819031, 0.4903770387172699, 0.48945003747940063, 0.4676835834980011, 0.45911914110183716, 0.4749033749103546, 0.44830676913261414, 0.4551822543144226, 0.4473334848880768, 0.43325984477996826, 0.44457754492759705, 0.4288594424724579, 0.4681958854198456, 0.4367894232273102, 0.4275633990764618, 0.4116652309894562, 0.4156884253025055, 0.4108154773712158, 0.4104471802711487, 0.4215453267097473, 0.42471078038215637, 0.4055415093898773, 0.4007120728492737, 0.40308037400245667, 0.41081205010414124, 0.4032687246799469, 0.3925251364707947, 0.41472142934799194, 0.4043360948562622, 0.398868203163147, 0.3999117910861969, 0.38620710372924805, 0.39570972323417664, 0.3870387077331543, 0.3839409053325653, 0.38445255160331726, 0.3835127055644989, 0.3915884494781494, 0.3795419931411743, 0.37987565994262695, 0.3740019202232361], "val_accuracy": [0.6029999852180481, 0.6496666669845581, 0.6549999713897705, 0.7139999866485596, 0.6869999766349792, 0.7200000286102295, 0.7433333396911621, 0.7289999723434448, 0.7609999775886536, 0.7710000276565552, 0.7763333320617676, 0.7823333144187927, 0.765999972820282, 0.793666660785675, 0.7746666669845581, 0.7956666946411133, 0.7753333449363708, 0.8106666803359985, 0.8090000152587891, 0.7963333129882812, 0.812666654586792, 0.7986666560173035, 0.8143333196640015, 0.7979999780654907, 0.8176666498184204, 0.7956666946411133, 0.8106666803359985, 0.815666675567627, 0.8263333439826965, 0.8343333601951599, 0.8199999928474426, 0.8360000252723694, 0.8399999737739563, 0.831333339214325, 0.8410000205039978, 0.8356666564941406, 0.843666672706604, 0.8199999928474426, 0.840666651725769, 0.8399999737739563, 0.8526666760444641, 0.8489999771118164, 0.8536666631698608, 0.8513333201408386, 0.8456666469573975, 0.8429999947547913, 0.8539999723434448, 0.8539999723434448, 0.8516666889190674, 0.8473333120346069, 0.8510000109672546, 0.8573333621025085, 0.843999981880188, 0.8503333330154419, 0.8493333458900452, 0.8513333201408386, 0.8606666922569275, 0.8516666889190674, 0.8579999804496765, 0.8629999756813049, 0.8659999966621399, 0.8610000014305115, 0.8569999933242798, 0.8633333444595337, 0.8603333234786987, 0.859333336353302]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 2, 3, 1, 4, 5, 2, 4, 9, 7, 1, 0, 1, 1, 3, 8, 1, 5, 1, 8, 2, 3, 7, 5, 0, 7, 7, 6, 4, 9], [0, 0, 1, 0, 2, 2, 0, 2, 3, 2, 3, 0, 1, 0, 3, 2, 2, 2, 3], [0, 39, 39, 89, 59, 11, 73, 86], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 3, 2, 1, 3, 5, 6, 8, 7], [2, 0, 3, 1, 0, 1, 2, 3, 2, 1], [16, 1], [1, 1, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 49, 30, 19, 8, 23, 13, 10, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.math.pow(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.subtract(tf.math.negative(tf.math.subtract(grad, tf.math.subtract(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.sqrt(tf.math.subtract(tf.math.square(tf.math.subtract(grad, grad)), tf.math.sqrt(grad))))))), tf.math.add(tf.math.multiply(tf.math.add(tf.math.square(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.negative(alpha)), tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), grad), grad)), grad)), grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(grad, alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.square(tf.math.divide_no_nan(alpha, tf.math.sqrt(beta))), grad))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 1, 3, 7, 6, 3, 2], [0, 0, 1, 0, 1, 0, 1, 0, 2, 3, 3], [0, 39, 39, 40, 36], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 2, 2], [2, 0, 2, 1, 0], [16, 1], [0, 1, 0, 0], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 12, 11, 5, 4, 2, 2, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(alpha, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303886890411377, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 8], [0, 0, 1, 0, 2], [0, 67, 39], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 1, 1], [0, 9], [0, 6], [31], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303314208984375, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 2, 1, 1, 3, 5, 2, 8, 4, 6], [0, 1, 1, 0, 2, 2, 3, 2], [0, 39, 44], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [0, 2, 3, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 52], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 18, 10, 8, 2, 2, 1, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.square(alpha)), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.math.pow(tf.math.divide_no_nan(grad, grad), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310070037841797, 2.3111953735351562, 2.3089792728424072, 2.3091204166412354, 2.3096935749053955, 2.310582399368286], "accuracy": [0.09747721254825592, 0.08928807079792023, 0.09721305221319199, 0.09047681838274002, 0.09377889335155487, 0.08308017253875732], "val_loss": [2.308743476867676, 2.308743476867676, 2.308743476867676, 2.308743476867676, 2.308743476867676, 2.308743476867676], "val_accuracy": [0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707]}}]