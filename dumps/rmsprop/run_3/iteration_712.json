[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8225714564323425, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2104976177215576, 1.6051799058914185, 1.1681568622589111, 0.9699797034263611, 0.8758728504180908, 0.8396899700164795, 0.7992438673973083, 0.7674227952957153, 0.7355813384056091, 0.7137249708175659, 0.6842737793922424, 0.6610527038574219, 0.6667457222938538, 0.6337786316871643, 0.632534384727478, 0.6106817722320557, 0.5903028249740601, 0.588882327079773, 0.5817389488220215, 0.5738422274589539, 0.5547352433204651, 0.5677794218063354, 0.5434640645980835, 0.5469209551811218, 0.5350756049156189, 0.5259851813316345, 0.510606050491333, 0.5010851621627808, 0.5102910399436951, 0.5067960619926453], "accuracy": [0.2657508850097656, 0.5124818682670593, 0.5983357429504395, 0.656980574131012, 0.6843217611312866, 0.6940959095954895, 0.7077004313468933, 0.7169462442398071, 0.7326641082763672, 0.7382115721702576, 0.7446836829185486, 0.7582882046699524, 0.7556465268135071, 0.7681944370269775, 0.7676661014556885, 0.7711002230644226, 0.7814027070999146, 0.7876105904579163, 0.7881389260292053, 0.7876105904579163, 0.7947431206703186, 0.785101056098938, 0.8016114234924316, 0.7967243194580078, 0.8054417967796326, 0.8087438941001892, 0.8115176558494568, 0.8222163319587708, 0.8166688680648804, 0.8157442808151245], "val_loss": [1.9272353649139404, 1.105034351348877, 0.8951922059059143, 0.7925629615783691, 0.8693567514419556, 0.6877397298812866, 0.6649501323699951, 0.6757981777191162, 0.6221815347671509, 0.6004289388656616, 0.6275643706321716, 0.5971471071243286, 0.5723366737365723, 0.5926980972290039, 0.5776361227035522, 0.5467615723609924, 0.5291376709938049, 0.5905318260192871, 0.5346858501434326, 0.5204647779464722, 0.5107353329658508, 0.5044540762901306, 0.501693606376648, 0.4977932870388031, 0.4806132912635803, 0.4761775732040405, 0.4859800338745117, 0.46795085072517395, 0.4853397607803345, 0.4730861485004425], "val_accuracy": [0.6069999933242798, 0.6489999890327454, 0.6786666512489319, 0.7003333568572998, 0.6610000133514404, 0.7353333234786987, 0.7463333606719971, 0.7456666827201843, 0.7599999904632568, 0.7639999985694885, 0.7390000224113464, 0.7620000243186951, 0.7886666655540466, 0.7806666493415833, 0.7799999713897705, 0.8023333549499512, 0.7990000247955322, 0.7696666717529297, 0.8003333210945129, 0.7940000295639038, 0.8059999942779541, 0.8203333616256714, 0.8226666450500488, 0.8119999766349792, 0.8270000219345093, 0.8256666660308838, 0.8236666917800903, 0.8246666789054871, 0.8163333535194397, 0.8149999976158142]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 3, 0], [26, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 2, 5, 4, 0, 3, 1], [16, 1], [0, 1, 0, 1, 0, 1, 1, 1], [0, 7, 8, 3], [3, 5, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.7862856984138489, "mapping_values": [1, 11, 6, 5, 2, 5, 3, 2, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(grad, tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.292116165161133, 2.1738007068634033, 1.6609652042388916, 1.3547029495239258, 0.9794779419898987, 0.9121320247650146, 0.8705832958221436, 0.8126888871192932, 0.7933933734893799, 0.754324197769165, 0.7255222797393799, 0.7073466181755066, 0.7004027962684631, 0.6621956825256348, 0.6628919243812561, 0.6877378821372986, 0.694649875164032, 0.6845035552978516, 0.6835860013961792, 0.6751556396484375, 0.6654370427131653, 0.6639798283576965, 0.6708205342292786], "accuracy": [0.13657376170158386, 0.3327169418334961, 0.4542332589626312, 0.5671641826629639, 0.6465460062026978, 0.6675472259521484, 0.6901333928108215, 0.6975300312042236, 0.6980583667755127, 0.719852089881897, 0.7235503792762756, 0.7366266250610352, 0.7395324110984802, 0.7535332441329956, 0.7565711140632629, 0.7416457533836365, 0.737947404384613, 0.7374191284179688, 0.7510236501693726, 0.748249888420105, 0.7520803213119507, 0.7622507214546204, 0.7528728246688843], "val_loss": [2.2410948276519775, 1.9527851343154907, 1.00968337059021, 0.8528270125389099, 0.8286830186843872, 0.7122935652732849, 0.6983264684677124, 0.6725512146949768, 0.6629930734634399, 0.618506133556366, 0.5809811949729919, 0.5921708941459656, 0.591692328453064, 0.5773776173591614, 0.5792065858840942, 0.5769789218902588, 0.5941874384880066, 0.5733397603034973, 0.59971022605896, 0.5628445744514465, 0.573601245880127, 0.564150333404541, 0.5804032683372498], "val_accuracy": [0.4180000126361847, 0.45233333110809326, 0.6356666684150696, 0.6909999847412109, 0.7153333425521851, 0.731333315372467, 0.737333357334137, 0.7440000176429749, 0.7433333396911621, 0.762666642665863, 0.7760000228881836, 0.7713333368301392, 0.7716666460037231, 0.7739999890327454, 0.7736666798591614, 0.778333306312561, 0.7760000228881836, 0.7820000052452087, 0.7743333578109741, 0.7720000147819519, 0.7770000100135803, 0.7776666879653931, 0.7799999713897705]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 2, 7, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 6, 8, 0], [5, 0, 3, 0, 0, 3], [16, 1, 73], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [7, 3, 0, 2, 1, 1, 8, 0, 6, 7, 4, 0, 9, 9, 4, 6, 9, 3, 0], [0, 1, 1, 4, 6, 3, 3, 6, 3], [97, 42, 10, 92], [0, 1], [0], [5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 16, 10, 6, 3, 28, 19, 9, 4, 2, 1, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.negative(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), alpha), tf.math.negative(tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.sqrt(alpha), tf.math.negative(tf.math.divide_no_nan(tf.math.add(grad, tf.math.pow(tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), grad))), sigma), tf.math.pow(tf.math.divide_no_nan(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), sigma), tf.math.multiply(grad, tf.math.negative(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09430722147226334, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 9, 5, 4], [2, 2, 4, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 5, 1, 4], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 1, 0, 1, 0, 8, 4, 4, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [8.605061531066895, 381243744.0, 2.3342745304107666, 2.4832704067230225, 2.9247281551361084, 4.034060478210449, 6.679417133331299], "accuracy": [0.10196803510189056, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [9.766916275024414, 2.311859130859375, 2.3906121253967285, 2.6685640811920166, 3.3963406085968018, 5.167262077331543, 9.354637145996094], "val_accuracy": [0.0989999994635582, 0.10066666454076767, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 8, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 31], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [2, 5, 4, 4, 8, 5, 5, 0], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 3, 2, 2], [6, 1, 1, 5, 1], [45], [1], [0], [3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 2, 12, 8, 4, 1, 9, 4, 5, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.pow(tf.math.pow(tf.math.sqrt(tf.math.square(tf.math.square(beta))), tf.math.negative(beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.add(grad, tf.math.add(alpha, alpha)), grad), alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}]