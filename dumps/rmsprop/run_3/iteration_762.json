[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8351428508758545, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2088801860809326, 1.6035549640655518, 1.1511867046356201, 0.9646639823913574, 0.8958899974822998, 0.828565776348114, 0.816592812538147, 0.7655283212661743, 0.7360420823097229, 0.6951678991317749, 0.7066352367401123, 0.6595360636711121, 0.6683990359306335, 0.6422242522239685, 0.6307860016822815, 0.5958763957023621, 0.6034870743751526, 0.5859489440917969, 0.5805990695953369, 0.5804522037506104, 0.5618679523468018, 0.554165244102478, 0.548699676990509, 0.5287425518035889, 0.5376129150390625, 0.5325507521629333, 0.512146532535553, 0.5161033272743225, 0.5077630281448364, 0.4913092851638794, 0.48840850591659546, 0.504392683506012, 0.47515031695365906, 0.471824586391449, 0.46633532643318176, 0.4598920941352844, 0.46372368931770325, 0.4578567445278168, 0.4433206021785736, 0.45298847556114197, 0.4414787292480469, 0.4335629940032959, 0.4298231899738312], "accuracy": [0.2763175368309021, 0.5156518220901489, 0.5935807824134827, 0.6637167930603027, 0.6748117804527283, 0.6979262828826904, 0.7021529674530029, 0.7169462442398071, 0.7359662055969238, 0.7382115721702576, 0.7372870445251465, 0.7564390301704407, 0.7526086568832397, 0.7619865536689758, 0.7685906887054443, 0.7817989587783813, 0.7746664881706238, 0.7807422876358032, 0.7881389260292053, 0.7878747582435608, 0.7927618622779846, 0.7922335267066956, 0.7998943328857422, 0.8067626357078552, 0.8016114234924316, 0.8016114234924316, 0.8137630224227905, 0.8133667707443237, 0.8115176558494568, 0.8187822103500366, 0.8234050869941711, 0.8165367841720581, 0.8271034359931946, 0.8280280232429504, 0.8273676037788391, 0.8309338092803955, 0.8322546482086182, 0.8333113193511963, 0.8397833704948425, 0.8302733898162842, 0.8421608805656433, 0.8407079577445984, 0.8392550349235535], "val_loss": [1.9258248805999756, 1.1074589490890503, 0.8793368935585022, 0.7578336000442505, 0.7927624583244324, 0.7458908557891846, 0.6746401190757751, 0.6379213333129883, 0.6669211387634277, 0.6069784164428711, 0.606371283531189, 0.5772078633308411, 0.5653135180473328, 0.5919581055641174, 0.5446516871452332, 0.5451286435127258, 0.5406264066696167, 0.5237296223640442, 0.566299557685852, 0.5195044875144958, 0.5403002500534058, 0.5005633234977722, 0.4922337234020233, 0.49446776509284973, 0.48825812339782715, 0.48189470171928406, 0.471448689699173, 0.5017070174217224, 0.46004733443260193, 0.4639888405799866, 0.47038936614990234, 0.46054843068122864, 0.4677793085575104, 0.4524346590042114, 0.45192253589630127, 0.44618985056877136, 0.47152090072631836, 0.430329829454422, 0.4492793679237366, 0.4381055533885956, 0.42914387583732605, 0.44463589787483215, 0.4281885623931885], "val_accuracy": [0.6056666374206543, 0.6386666893959045, 0.6913333535194397, 0.7269999980926514, 0.7013333439826965, 0.7179999947547913, 0.7436666488647461, 0.7596666812896729, 0.7353333234786987, 0.7756666541099548, 0.7756666541099548, 0.7693333625793457, 0.7860000133514404, 0.7583333253860474, 0.7973333597183228, 0.7873333096504211, 0.7993333339691162, 0.8069999814033508, 0.7753333449363708, 0.8069999814033508, 0.7950000166893005, 0.8100000023841858, 0.8209999799728394, 0.8226666450500488, 0.8256666660308838, 0.8206666707992554, 0.8270000219345093, 0.8096666932106018, 0.8316666483879089, 0.8330000042915344, 0.8306666612625122, 0.8360000252723694, 0.8289999961853027, 0.8376666903495789, 0.8293333053588867, 0.8376666903495789, 0.8243333101272583, 0.8479999899864197, 0.8346666693687439, 0.8433333039283752, 0.8456666469573975, 0.8346666693687439, 0.8396666646003723]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 2, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 5, 4, 7, 0, 5, 5, 5], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 1, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [5], [0]], "fitness": -0.33142855763435364, "mapping_values": [1, 11, 6, 5, 3, 12, 8, 4, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.356661081314087, 2.132094383239746, 3.2619924545288086, 2.5513010025024414, 2.306368350982666, 2.304016351699829], "accuracy": [0.19310526549816132, 0.2487121969461441, 0.17751948535442352, 0.12323339283466339, 0.10077928751707077, 0.09602430462837219], "val_loss": [2.223168134689331, 9.533392906188965, 2.314798355102539, 2.3122007846832275, 2.303471565246582, 2.3027091026306152], "val_accuracy": [0.3256666660308838, 0.2329999953508377, 0.10300000011920929, 0.10066666454076767, 0.09866666793823242, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [19], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 8, 5, 3, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3039889335632324, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 1], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 1, 0, 4, 0, 3, 1], [16, 1], [0, 1, 1, 1, 0, 1], [7, 3, 3, 2], [0, 4, 0], [0, 66], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(alpha)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [5285042716672.0, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [171910428098560.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [3, 0, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 8, 4, 9], [3, 2, 0, 4, 0, 3, 1], [43, 1, 15], [0, 0, 1, 1, 0, 1, 1, 1], [7, 3, 0, 0], [7, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 11, 6, 5, 3, 12, 9, 3, 3, 6, 3, 3, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.sqrt(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(grad, alpha), tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.309917688369751, 2.3095905780792236, 2.3094332218170166, 2.3089535236358643, 2.3099048137664795, 2.310901403427124], "accuracy": [0.08968432247638702, 0.09047681838274002, 0.09642054885625839, 0.09509972482919693, 0.08955223858356476, 0.09219389408826828], "val_loss": [2.30871844291687, 2.30871844291687, 2.30871844291687, 2.30871844291687, 2.30871844291687, 2.30871844291687], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]