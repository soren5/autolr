[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [2, 3, 0, 0, 2], [26, 39, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 1], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 1, 0, 1, 1, 1, 1, 0], [7, 1, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8137142658233643, "mapping_values": [1, 10, 5, 5, 2, 11, 6, 5, 2, 5, 2, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, grad), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad), tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0817055702209473, 1.379852533340454, 0.950149655342102, 0.7958841323852539, 0.7271642684936523, 0.6771157383918762, 0.6384755969047546, 0.6202009916305542, 0.5813968777656555, 0.5606105327606201, 0.5538372993469238, 0.5418204665184021, 0.5379562377929688, 0.5213467478752136, 0.5372951030731201, 0.5178922414779663, 0.5335529446601868, 0.5505436062812805, 0.5452055335044861], "accuracy": [0.29626205563545227, 0.5641262531280518, 0.6522256135940552, 0.6955488324165344, 0.7246070504188538, 0.7327961921691895, 0.750759482383728, 0.7625148296356201, 0.7730814814567566, 0.7874785661697388, 0.7882710099220276, 0.793950617313385, 0.7895918488502502, 0.8031964302062988, 0.7942147850990295, 0.8031964302062988, 0.8026680946350098, 0.7946110367774963, 0.8005547523498535], "val_loss": [1.0109434127807617, 0.815127432346344, 0.7093381285667419, 0.6339439153671265, 0.6016800403594971, 0.5860259532928467, 0.5437701940536499, 0.5248787999153137, 0.5078331828117371, 0.5092819929122925, 0.4833775758743286, 0.4770830571651459, 0.48307421803474426, 0.4740554094314575, 0.4897924065589905, 0.5172408819198608, 0.5347123742103577, 0.5591456890106201, 0.5489472150802612], "val_accuracy": [0.6259999871253967, 0.7056666612625122, 0.7263333201408386, 0.7440000176429749, 0.7540000081062317, 0.784333348274231, 0.7796666622161865, 0.8009999990463257, 0.8083333373069763, 0.809333324432373, 0.8206666707992554, 0.8180000185966492, 0.8286666870117188, 0.8336666822433472, 0.8306666612625122, 0.8180000185966492, 0.8240000009536743, 0.8130000233650208, 0.8203333616256714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8094285726547241, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2129921913146973, 1.6124224662780762, 1.1527893543243408, 0.9934247732162476, 0.8991243839263916, 0.8091164231300354, 0.8072329759597778, 0.7507467269897461, 0.7272830605506897, 0.7181006073951721, 0.6918442845344543, 0.6726442575454712, 0.6483914256095886, 0.6366230249404907, 0.6163859963417053, 0.624939501285553, 0.6075686812400818, 0.5975334644317627, 0.5897892713546753, 0.5763124823570251, 0.5613216757774353, 0.5483170747756958, 0.5662292838096619, 0.5367864966392517, 0.5409016013145447, 0.518035888671875, 0.5328009128570557, 0.5072146058082581, 0.49663665890693665, 0.48679155111312866, 0.4949977993965149], "accuracy": [0.2661471366882324, 0.5023114681243896, 0.6048077940940857, 0.6454893946647644, 0.6729626059532166, 0.69673752784729, 0.7025492191314697, 0.7232862114906311, 0.7255316376686096, 0.7326641082763672, 0.739928662776947, 0.7493065595626831, 0.76106196641922, 0.7584202885627747, 0.7658169269561768, 0.7602694630622864, 0.7740060687065125, 0.7778365015983582, 0.7832518815994263, 0.7796856164932251, 0.7909126877784729, 0.802800178527832, 0.7895918488502502, 0.8000264167785645, 0.8013472557067871, 0.8108572363853455, 0.8025360107421875, 0.8104609847068787, 0.8100647330284119, 0.8162726163864136, 0.817461371421814], "val_loss": [1.9343675374984741, 1.1503782272338867, 0.9193618893623352, 0.8270078301429749, 0.737308919429779, 0.7091354131698608, 0.7397016882896423, 0.6429104804992676, 0.6369584202766418, 0.6791967749595642, 0.6208547949790955, 0.6267644762992859, 0.6149048209190369, 0.5784890055656433, 0.5806722044944763, 0.592370867729187, 0.5535846948623657, 0.545684814453125, 0.5337253212928772, 0.5421225428581238, 0.531131386756897, 0.5341670513153076, 0.5154148936271667, 0.5063233375549316, 0.5085985660552979, 0.49355459213256836, 0.4920928478240967, 0.5016922354698181, 0.4900178909301758, 0.4828081727027893, 0.47373631596565247], "val_accuracy": [0.5093333125114441, 0.6206666827201843, 0.6643333435058594, 0.6899999976158142, 0.7279999852180481, 0.7163333296775818, 0.7126666903495789, 0.7506666779518127, 0.753333330154419, 0.7406666874885559, 0.7616666555404663, 0.7699999809265137, 0.7580000162124634, 0.7846666574478149, 0.7903333306312561, 0.7580000162124634, 0.784333348274231, 0.8026666641235352, 0.8053333163261414, 0.7960000038146973, 0.8053333163261414, 0.8046666383743286, 0.8116666674613953, 0.812666654586792, 0.8169999718666077, 0.8246666789054871, 0.8233333230018616, 0.8169999718666077, 0.812666654586792, 0.8209999799728394, 0.8220000267028809]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 3, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4, 6, 1, 1, 0, 6, 8, 1, 3, 7], [2, 2, 0, 4, 0, 3, 1, 0, 4, 1, 1, 5, 1], [16, 1, 83], [0, 0, 0, 1, 0, 1, 1, 1], [2, 3, 0, 7], [0, 1, 1, 4], [8], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 30, 17, 13, 3, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.subtract(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.multiply(grad, tf.math.add(alpha, alpha)), grad)), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303119421005249, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 4, 5], [0, 0, 1, 0, 3], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [2, 9, 4, 4, 0, 5, 2, 4, 7], [4, 2, 0, 4, 0, 3, 1], [16, 1, 22], [0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 3, 7, 2], [0, 6, 1, 4, 0], [0, 91], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 15, 9, 6, 3, 9, 4, 5, 2, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.add(tf.math.pow(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha)), grad), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3035261631011963, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 2, 0, 6, 3, 2, 3], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0], [8, 8], [0, 6], [0], [0, 0, 1], [0, 0], [2], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 11, 6, 5, 3, 2, 1, 1, 0, 3, 2, 1, 1, 3, 2, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(beta))", "other_info": {"loss": [2.310856342315674, 2.3095178604125977, 2.30997633934021, 2.3096494674682617, 2.3116095066070557, 2.3092269897460938], "accuracy": [0.0940430611371994, 0.09549596905708313, 0.09074098616838455, 0.08955223858356476, 0.0882314071059227, 0.09377889335155487], "val_loss": [2.3087477684020996, 2.3087477684020996, 2.3087477684020996, 2.3087477684020996, 2.3087477684020996, 2.3087477684020996], "val_accuracy": [0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337, 0.08633333444595337]}}]