[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8311428427696228, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2115824222564697, 1.613014578819275, 1.1551231145858765, 1.0179862976074219, 0.8940343260765076, 0.8477102518081665, 0.7951300144195557, 0.7731637954711914, 0.7500411868095398, 0.715499758720398, 0.6983044147491455, 0.6728792786598206, 0.6627535820007324, 0.6562929749488831, 0.6297023296356201, 0.6223086714744568, 0.6234431266784668, 0.6050582528114319, 0.580604612827301, 0.5773237943649292, 0.5711204409599304, 0.5594183802604675, 0.5617513656616211, 0.5517836213111877, 0.5375773906707764, 0.5295509696006775, 0.5336838364601135, 0.5103632807731628, 0.5101965069770813, 0.5140923857688904, 0.4977833032608032, 0.4827505052089691, 0.486585795879364, 0.4850367605686188, 0.4653756320476532, 0.47115853428840637, 0.4739992320537567, 0.46942248940467834, 0.45736217498779297, 0.4506961405277252, 0.452466756105423, 0.44747912883758545, 0.4454576373100281, 0.44611528515815735, 0.43284890055656433], "accuracy": [0.26522254943847656, 0.5101043581962585, 0.5845991373062134, 0.6408664584159851, 0.674679696559906, 0.6872276067733765, 0.707040011882782, 0.7084929347038269, 0.7187954187393188, 0.7305507659912109, 0.7346453666687012, 0.7456082701683044, 0.7450799345970154, 0.754589855670929, 0.7600052952766418, 0.7695152759552002, 0.7662131786346436, 0.7692511081695557, 0.778761088848114, 0.7843085527420044, 0.787082314491272, 0.7869502305984497, 0.7903843522071838, 0.7895918488502502, 0.7971205711364746, 0.7993659973144531, 0.7918372750282288, 0.8088759779930115, 0.8112534880638123, 0.807158887386322, 0.8104609847068787, 0.8153480291366577, 0.8132346868515015, 0.8195747137069702, 0.8272355198860168, 0.8224804997444153, 0.8204993009567261, 0.8231409192085266, 0.8300092220306396, 0.8297450542449951, 0.8298771381378174, 0.8335754871368408, 0.8329150676727295, 0.8294808864593506, 0.8374059200286865], "val_loss": [1.932523250579834, 1.1274715662002563, 1.0108122825622559, 0.8361939191818237, 0.7828892469406128, 0.721164882183075, 0.7064525485038757, 0.6710803508758545, 0.6920193433761597, 0.6153495907783508, 0.6280645132064819, 0.6270844340324402, 0.593842625617981, 0.5809534788131714, 0.5901619791984558, 0.5756212472915649, 0.5594317317008972, 0.539311408996582, 0.5205152034759521, 0.5361130237579346, 0.5490910410881042, 0.5328058004379272, 0.537164568901062, 0.5026454925537109, 0.5076175332069397, 0.5172492861747742, 0.4963350296020508, 0.47956013679504395, 0.5216385722160339, 0.47044795751571655, 0.46970507502555847, 0.47646793723106384, 0.4869931638240814, 0.47300633788108826, 0.45853933691978455, 0.47071659564971924, 0.46562862396240234, 0.45878735184669495, 0.45231202244758606, 0.44518038630485535, 0.43840739130973816, 0.44653424620628357, 0.46395254135131836, 0.4550302028656006, 0.43409407138824463], "val_accuracy": [0.5096666812896729, 0.6503333449363708, 0.6439999938011169, 0.6853333115577698, 0.6959999799728394, 0.7303333282470703, 0.7403333187103271, 0.7276666760444641, 0.7200000286102295, 0.7649999856948853, 0.762666642665863, 0.7353333234786987, 0.7573333382606506, 0.7680000066757202, 0.7696666717529297, 0.781333327293396, 0.7796666622161865, 0.7953333258628845, 0.8069999814033508, 0.7983333468437195, 0.7799999713897705, 0.7889999747276306, 0.7910000085830688, 0.8169999718666077, 0.8113333582878113, 0.8036666512489319, 0.8163333535194397, 0.8233333230018616, 0.8009999990463257, 0.8303333520889282, 0.831333339214325, 0.8223333358764648, 0.8153333067893982, 0.8309999704360962, 0.8393333554267883, 0.828000009059906, 0.8326666951179504, 0.8320000171661377, 0.8383333086967468, 0.846666693687439, 0.8420000076293945, 0.8403333425521851, 0.8330000042915344, 0.8309999704360962, 0.8450000286102295]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 2, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [8, 3, 0, 3], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.7994285821914673, "mapping_values": [1, 10, 5, 5, 2, 15, 8, 7, 2, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0678751468658447, 1.2569589614868164, 0.907459557056427, 0.7713131904602051, 0.6952593922615051, 0.6815453767776489, 0.6487485766410828, 0.6387136578559875, 0.6105848550796509, 0.5993881821632385, 0.624707043170929, 0.5992178320884705, 0.6159633994102478, 0.6062682271003723, 0.6161962151527405, 0.6744132041931152, 0.8037765622138977, 0.9234918355941772, 1.0437066555023193], "accuracy": [0.30207371711730957, 0.5989961624145508, 0.6691322326660156, 0.7166820764541626, 0.7421740889549255, 0.7464007139205933, 0.7534011602401733, 0.7604015469551086, 0.7651565074920654, 0.7689869403839111, 0.7600052952766418, 0.7759873270988464, 0.7721568942070007, 0.7757231593132019, 0.767401933670044, 0.754589855670929, 0.7156254053115845, 0.6919825673103333, 0.6557918190956116], "val_loss": [1.1591241359710693, 0.8542640209197998, 0.712705135345459, 0.6127076148986816, 0.5959782600402832, 0.5947090983390808, 0.5575388669967651, 0.5410690307617188, 0.5229803323745728, 0.5403643250465393, 0.5236474275588989, 0.5352624654769897, 0.5423280596733093, 0.5783138871192932, 0.6574811339378357, 0.6507806777954102, 0.7659205794334412, 0.845811128616333, 0.7859392762184143], "val_accuracy": [0.6136666536331177, 0.6933333277702332, 0.7136666774749756, 0.762333333492279, 0.7736666798591614, 0.7706666588783264, 0.7820000052452087, 0.7933333516120911, 0.8006666898727417, 0.7926666736602783, 0.8113333582878113, 0.7979999780654907, 0.800000011920929, 0.8130000233650208, 0.7803333401679993, 0.7736666798591614, 0.7476666569709778, 0.6803333163261414, 0.7276666760444641]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 2, 0, 2], [26, 0, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [0, 2, 0, 4, 0, 3, 1], [16, 1, 55], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 4], [31], [1], [0], [4], [0]], "fitness": -0.40714284777641296, "mapping_values": [1, 2, 1, 1, 1, 15, 8, 7, 3, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [4.626765251159668, 2.768813133239746, 2.19474458694458, 2.257812976837158, 2.3052525520324707, 2.3024215698242188, 2.1745893955230713, 2.490776300430298, 2.306288719177246, 2.304421901702881, 2.3044517040252686, 2.3036389350891113], "accuracy": [0.21238937973976135, 0.12059172987937927, 0.19852067530155182, 0.1542728841304779, 0.11781799048185349, 0.10593052208423615, 0.21555937826633453, 0.1302337795495987, 0.09998679161071777, 0.09668471664190292, 0.10170386731624603, 0.09457138925790787], "val_loss": [5.445826053619385, 2.149825096130371, 2.3028202056884766, 2.229245185852051, 2.302685260772705, 2.295349359512329, 3.419506072998047, 2.3038861751556396, 2.3033738136291504, 2.302619695663452, 2.3025894165039062, 2.3025572299957275], "val_accuracy": [0.14100000262260437, 0.22499999403953552, 0.109333336353302, 0.28333333134651184, 0.10000000149011612, 0.11800000071525574, 0.4023333191871643, 0.10000000149011612, 0.0989999994635582, 0.10300000011920929, 0.10100000351667404, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 78], [0, 1, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 15, 8, 7, 2, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(grad))), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303598165512085, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 3, 4, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [2, 2, 4, 6, 3, 4, 5, 4, 5], [2, 0, 3, 1, 0, 4, 2, 5], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 2, 1, 1, 17, 9, 8, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.pow(tf.math.square(alpha), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), beta), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]