[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8294285535812378, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2115440368652344, 1.6044940948486328, 1.125759482383728, 0.971005380153656, 0.8773199915885925, 0.838807225227356, 0.776576578617096, 0.7545703649520874, 0.7092597484588623, 0.6975619792938232, 0.6962155103683472, 0.6628924012184143, 0.6436235904693604, 0.623805582523346, 0.6352876424789429, 0.6094685792922974, 0.5933931469917297, 0.5926224589347839, 0.5671920776367188, 0.5516177415847778, 0.5569517612457275, 0.5450162887573242, 0.5320148468017578, 0.5304461121559143, 0.5173553228378296, 0.5068485736846924, 0.5098473429679871, 0.5048822164535522, 0.4896847903728485, 0.47804656624794006, 0.48718252778053284, 0.4756182134151459, 0.4742532968521118, 0.46386897563934326, 0.46009084582328796, 0.4674172103404999, 0.4552052319049835, 0.4570119082927704, 0.4477982819080353, 0.44519293308258057, 0.4419715404510498, 0.42940086126327515, 0.4196712076663971, 0.41694125533103943, 0.4191548526287079, 0.41404739022254944, 0.40050411224365234, 0.4094994366168976, 0.4075048565864563, 0.40671923756599426], "accuracy": [0.27063795924186707, 0.5071985125541687, 0.6098269820213318, 0.6527539491653442, 0.6758684515953064, 0.6903975605964661, 0.711530864238739, 0.7193237543106079, 0.7378153204917908, 0.739928662776947, 0.7339849472045898, 0.7553823590278625, 0.7556465268135071, 0.765949010848999, 0.7637035846710205, 0.7684586048126221, 0.7773081660270691, 0.7763835787773132, 0.7839123010635376, 0.7915731072425842, 0.7964601516723633, 0.7957997918128967, 0.7971205711364746, 0.7996301651000977, 0.8095363974571228, 0.8096684813499451, 0.8123101592063904, 0.8096684813499451, 0.8169330358505249, 0.8181217908859253, 0.8211596608161926, 0.8272355198860168, 0.8251221776008606, 0.8248580098152161, 0.8297450542449951, 0.8264430165290833, 0.835160493850708, 0.8360850811004639, 0.8368775844573975, 0.837141752243042, 0.8330471515655518, 0.8412362933158875, 0.8444063067436218, 0.8495575189590454, 0.8416325449943542, 0.8475762605667114, 0.8548408150672913, 0.8436138033866882, 0.847840428352356, 0.8466516733169556], "val_loss": [1.9310507774353027, 1.1348652839660645, 0.9385216236114502, 0.8673145174980164, 0.8554598689079285, 0.7998611927032471, 0.692191481590271, 0.6555724740028381, 0.6581166386604309, 0.6332058906555176, 0.6460055112838745, 0.5964775681495667, 0.5773766040802002, 0.5840582847595215, 0.5948731303215027, 0.5597290992736816, 0.5397988557815552, 0.5676784515380859, 0.5250452756881714, 0.5264694690704346, 0.5418503284454346, 0.5380010008811951, 0.5095988512039185, 0.520268976688385, 0.5061134099960327, 0.4916988015174866, 0.4807640314102173, 0.48613452911376953, 0.4768802225589752, 0.49275821447372437, 0.47290536761283875, 0.47514867782592773, 0.4713153839111328, 0.46046778559684753, 0.4670379161834717, 0.465401828289032, 0.484902948141098, 0.44605687260627747, 0.4645760953426361, 0.4477522075176239, 0.44623106718063354, 0.4367433786392212, 0.45373544096946716, 0.43810325860977173, 0.43037116527557373, 0.4256424605846405, 0.4263891279697418, 0.4344286024570465, 0.4398028254508972, 0.4219054877758026], "val_accuracy": [0.5266666412353516, 0.6589999794960022, 0.6683333516120911, 0.6433333158493042, 0.6723333597183228, 0.6990000009536743, 0.7326666712760925, 0.7506666779518127, 0.7383333444595337, 0.7456666827201843, 0.7540000081062317, 0.7736666798591614, 0.7789999842643738, 0.7739999890327454, 0.7760000228881836, 0.7793333530426025, 0.7926666736602783, 0.7710000276565552, 0.7983333468437195, 0.796999990940094, 0.8026666641235352, 0.7929999828338623, 0.8103333115577698, 0.8036666512489319, 0.8066666722297668, 0.8143333196640015, 0.8199999928474426, 0.8206666707992554, 0.8206666707992554, 0.8143333196640015, 0.8173333406448364, 0.8206666707992554, 0.8266666531562805, 0.8246666789054871, 0.828000009059906, 0.8286666870117188, 0.8113333582878113, 0.8330000042915344, 0.8253333568572998, 0.8330000042915344, 0.8336666822433472, 0.8363333344459534, 0.8320000171661377, 0.8356666564941406, 0.843999981880188, 0.8393333554267883, 0.8399999737739563, 0.8343333601951599, 0.8320000171661377, 0.8429999947547913]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 38], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [2, 9, 4, 7, 0, 5, 5, 4, 4, 7, 9], [2, 0, 5, 3, 0], [16, 16, 90, 15], [1, 0, 0, 1, 0, 1, 1, 1], [6, 7, 5, 6], [0, 6, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 16, 11, 5, 4, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(beta, tf.math.add(tf.math.negative(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.pow(tf.math.pow(tf.math.add(grad, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 8, 1, 0, 5], [0, 0, 1, 0, 2], [26, 39, 39], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 9, 4, 7, 1, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 1, 0, 1, 1], [7, 0, 0, 2], [0, 2, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 2, 1, 0, 1, 0, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.square(alpha))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 8, 1, 3, 5, 9], [3, 0, 1, 1, 2], [26, 39, 39], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4, 2, 9, 5], [1, 2, 2, 4, 0, 3, 1], [16, 1], [1, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [90], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 7, 3, 2, 15, 11, 4, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.subtract(grad, tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.negative(tf.math.square(tf.math.square(tf.math.pow(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha), beta)))), beta), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 1], [26, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [6, 3, 8, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [46, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 4, 0, 2], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 13, 8, 5, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(alpha), tf.math.add(beta, tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.square(tf.math.pow(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303217649459839, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]