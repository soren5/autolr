[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8220000267028809, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210488796234131, 1.5972065925598145, 1.13149893283844, 0.9693931341171265, 0.8900576233863831, 0.7980459332466125, 0.7557299137115479, 0.7571650743484497, 0.7322893142700195, 0.6828056573867798, 0.6754236221313477, 0.6565559506416321, 0.6571901440620422, 0.6446125507354736, 0.6284059882164001, 0.5989835262298584, 0.5803147554397583, 0.5984066724777222, 0.584317147731781, 0.5683633685112, 0.567779004573822, 0.5525226593017578, 0.5354007482528687, 0.5461543202400208, 0.5270100235939026, 0.5249350666999817, 0.5127167701721191, 0.4994608759880066, 0.4958803057670593, 0.4950881600379944, 0.49045535922050476, 0.4822635054588318, 0.4779660403728485, 0.4709080159664154, 0.4707176387310028, 0.4579346179962158, 0.4529902935028076, 0.46381875872612, 0.46204009652137756], "accuracy": [0.2604675590991974, 0.5069343447685242, 0.6037511825561523, 0.6489235162734985, 0.6758684515953064, 0.7078325152397156, 0.7157574892044067, 0.7191916704177856, 0.7252674698829651, 0.7403249144554138, 0.7400607466697693, 0.7577598690986633, 0.754589855670929, 0.7598732113838196, 0.7597411274909973, 0.7783648371696472, 0.7820631265640259, 0.7761194109916687, 0.7757231593132019, 0.7845727205276489, 0.7907806038856506, 0.7960638999938965, 0.8024039268493652, 0.7984414100646973, 0.8041210174560547, 0.8050455451011658, 0.8084797263145447, 0.8128384351730347, 0.81548011302948, 0.8166688680648804, 0.8171972036361694, 0.8195747137069702, 0.8206313848495483, 0.8265751004219055, 0.8296129703521729, 0.832650899887085, 0.8322546482086182, 0.8267071843147278, 0.8297450542449951], "val_loss": [1.9228450059890747, 1.0932790040969849, 0.9036931395530701, 0.798509955406189, 0.7115623354911804, 0.730477511882782, 0.6505776643753052, 0.6484573483467102, 0.6108262538909912, 0.6214630603790283, 0.6068474650382996, 0.5666136145591736, 0.5618901252746582, 0.5691431760787964, 0.569945216178894, 0.5346612930297852, 0.5143436193466187, 0.5380204916000366, 0.5082255005836487, 0.5095183253288269, 0.5041762590408325, 0.48419368267059326, 0.4809079170227051, 0.47898128628730774, 0.477003812789917, 0.47374263405799866, 0.4734146296977997, 0.45950332283973694, 0.48752954602241516, 0.45132189989089966, 0.4489980936050415, 0.4355950951576233, 0.4341455101966858, 0.43456730246543884, 0.43177294731140137, 0.44956570863723755, 0.43114912509918213, 0.4444335997104645, 0.4192887246608734], "val_accuracy": [0.5803333520889282, 0.6523333191871643, 0.6756666898727417, 0.7016666531562805, 0.737666666507721, 0.7099999785423279, 0.7480000257492065, 0.7436666488647461, 0.7689999938011169, 0.7603333592414856, 0.778333306312561, 0.7913333177566528, 0.8056666851043701, 0.7836666703224182, 0.7793333530426025, 0.8019999861717224, 0.8069999814033508, 0.796999990940094, 0.8146666884422302, 0.8209999799728394, 0.8096666932106018, 0.8266666531562805, 0.8223333358764648, 0.8316666483879089, 0.8253333568572998, 0.8286666870117188, 0.8233333230018616, 0.8339999914169312, 0.8073333501815796, 0.8356666564941406, 0.8386666774749756, 0.846666693687439, 0.846666693687439, 0.8513333201408386, 0.8443333506584167, 0.8330000042915344, 0.8433333039283752, 0.8379999995231628, 0.8479999899864197]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 2, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [7, 3, 0, 2, 7, 2, 4, 8], [0, 0, 1, 4, 1, 1, 4], [0, 54], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 8, 5, 3, 2, 15, 8, 7, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(beta, tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.add(tf.math.add(grad, alpha), tf.math.pow(tf.math.sqrt(alpha), grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3037569522857666, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 1, 3, 0], [0, 0, 3, 0, 2], [0, 39, 39], [0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 0, 3, 1, 0], [16, 1], [1, 0, 1, 0, 0, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 3, 2, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 9, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 19], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [6, 9, 3, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [68, 1], [1, 0, 0, 0, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 3, 12, 8, 4, 2, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.add(tf.math.negative(tf.math.square(tf.math.square(tf.math.pow(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [69832544.0, 10440355840.0, 177655185408.0, 1229317603328.0, 5506144927744.0, 18016475545600.0], "accuracy": [0.09998679161071777, 0.09866596013307571, 0.09747721254825592, 0.10302469879388809, 0.10553427785634995, 0.10051512718200684], "val_loss": [697296384.0, 37581336576.0, 403355467776.0, 2198932160512.0, 8236454379520.0, 24295086489600.0], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 4, 0, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [2, 9, 4, 3, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 3, 0, 2, 0, 3, 6, 3, 1, 4, 1, 5, 7, 2, 0, 6, 9, 6, 2, 6, 9, 1, 5, 1, 9, 2, 6, 1, 9, 0, 1, 5, 8, 1, 3, 6], [0, 1, 1, 4, 7, 6, 1, 1, 5, 5, 6, 5, 0, 6, 6, 3, 4, 1, 6, 0], [0, 39, 84, 74, 2, 55, 12], [1], [0], [1], [0]], "fitness": -0.09942857176065445, "mapping_values": [1, 9, 5, 4, 3, 8, 5, 3, 2, 56, 36, 20, 7, 1, 0, 1, 0], "tree_depth": 39, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.multiply(beta, tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.square(tf.math.add(tf.math.add(tf.math.negative(tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), grad)), tf.math.divide_no_nan(grad, tf.math.add(tf.math.divide_no_nan(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(alpha), tf.math.subtract(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(grad, grad), grad))))), grad))), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.subtract(tf.math.square(grad), tf.math.sqrt(grad)))))), tf.math.subtract(tf.math.multiply(sigma, grad), alpha))), tf.math.divide_no_nan(grad, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1960371456.0, 258543777218560.0, 2.2124232236620317e+19, 3.240702958051835e+24, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09734513610601425, 0.09959053993225098, 0.10130762308835983, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [66304688128.0, 7060299706269696.0, 5.7054087614636124e+20, 9.337420876764892e+25, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.09799999743700027, 0.10100000351667404, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]