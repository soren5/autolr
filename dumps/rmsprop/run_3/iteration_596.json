[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8197143077850342, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2103517055511475, 1.6158089637756348, 1.1346378326416016, 0.9820639491081238, 0.890172004699707, 0.8167315721511841, 0.7819532155990601, 0.7658930420875549, 0.7079283595085144, 0.6921663880348206, 0.6923715472221375, 0.6771990060806274, 0.6421974897384644, 0.6420198082923889, 0.6129558086395264, 0.6158695220947266, 0.5963599681854248, 0.57851642370224, 0.5735238790512085, 0.5596278309822083, 0.5765812397003174, 0.5437198281288147, 0.55304354429245, 0.5364950895309448, 0.5278258323669434, 0.5192363858222961, 0.5136488080024719, 0.5092290639877319, 0.49751850962638855, 0.4901910126209259, 0.4855433702468872, 0.49936753511428833, 0.477920264005661, 0.48407235741615295, 0.4717040956020355, 0.4720044434070587, 0.4671482741832733, 0.4571102261543274, 0.4571225345134735, 0.44284072518348694, 0.445230633020401, 0.4408514201641083, 0.43750476837158203, 0.4328833818435669, 0.4277859032154083, 0.42771968245506287, 0.42074188590049744, 0.4153011739253998, 0.4045759439468384, 0.40665292739868164, 0.40334153175354004, 0.4052389860153198, 0.40528181195259094, 0.4006040096282959, 0.39701396226882935, 0.38853999972343445, 0.3791591227054596, 0.38496240973472595, 0.3789943754673004, 0.38478532433509827, 0.37185922265052795, 0.3828527331352234, 0.3695099353790283, 0.3649071455001831, 0.3755398392677307, 0.35944488644599915, 0.3512600362300873, 0.3556367754936218, 0.3567827641963959, 0.35540518164634705, 0.34140992164611816, 0.344545841217041, 0.34431561827659607, 0.33530449867248535, 0.34659868478775024, 0.34482067823410034], "accuracy": [0.2697133719921112, 0.5011227130889893, 0.6112799048423767, 0.6474705934524536, 0.6736230254173279, 0.7055870890617371, 0.7058512568473816, 0.7149649858474731, 0.7343811988830566, 0.7416457533836365, 0.7375511527061462, 0.7403249144554138, 0.761590301990509, 0.7604015469551086, 0.7687227725982666, 0.767401933670044, 0.7761194109916687, 0.7798177003860474, 0.7807422876358032, 0.7918372750282288, 0.7829877138137817, 0.7944789528846741, 0.7923656105995178, 0.7980451583862305, 0.8063663840293884, 0.8045172095298767, 0.8068947196006775, 0.8078193068504333, 0.8104609847068787, 0.817461371421814, 0.8119139075279236, 0.8113855719566345, 0.8216879963874817, 0.8191784620285034, 0.8235371708869934, 0.8240655064582825, 0.822348415851593, 0.8321225643157959, 0.829216718673706, 0.8330471515655518, 0.835160493850708, 0.8366134166717529, 0.8352925777435303, 0.8376700282096863, 0.8399154543876648, 0.8355567455291748, 0.8401796221733093, 0.8446704745292664, 0.8445383906364441, 0.8457271456718445, 0.8474441766738892, 0.845859169960022, 0.8498216867446899, 0.8540483713150024, 0.8511425256729126, 0.852859616279602, 0.8598600029945374, 0.8515387773513794, 0.8588033318519592, 0.8533879518508911, 0.86118084192276, 0.858671247959137, 0.8613129258155823, 0.8644828796386719, 0.8562937378883362, 0.8672566413879395, 0.8669924736022949, 0.8679170608520508, 0.8656716346740723, 0.8692378997802734, 0.872407853603363, 0.8676528930664062, 0.8720116019248962, 0.8746532797813416, 0.8722757697105408, 0.870030403137207], "val_loss": [1.9256657361984253, 1.0918806791305542, 0.9286159873008728, 0.8444464802742004, 0.7729759812355042, 0.7290636301040649, 0.7291635870933533, 0.6669881939888, 0.6640117168426514, 0.6685739159584045, 0.6400703191757202, 0.604960560798645, 0.5884755253791809, 0.582314133644104, 0.6165603399276733, 0.5762590169906616, 0.5585823655128479, 0.5472661256790161, 0.538338840007782, 0.5383490920066833, 0.5378113389015198, 0.5324002504348755, 0.5145980715751648, 0.5131581425666809, 0.5050275921821594, 0.49178385734558105, 0.4817862808704376, 0.49845829606056213, 0.48699837923049927, 0.479684978723526, 0.49694085121154785, 0.4702465832233429, 0.48679566383361816, 0.47379475831985474, 0.4826616644859314, 0.464101105928421, 0.4618065655231476, 0.44396328926086426, 0.4596269130706787, 0.4354059100151062, 0.45655590295791626, 0.4388873279094696, 0.45067232847213745, 0.42926326394081116, 0.4242093563079834, 0.42789387702941895, 0.42173418402671814, 0.42338117957115173, 0.4373270273208618, 0.42999789118766785, 0.4210904836654663, 0.432773232460022, 0.420572429895401, 0.4108876585960388, 0.41313931345939636, 0.3958968222141266, 0.40059414505958557, 0.3889046609401703, 0.41754090785980225, 0.4088252782821655, 0.3985002934932709, 0.3902292549610138, 0.39116472005844116, 0.40260741114616394, 0.3848141133785248, 0.4025686979293823, 0.38562288880348206, 0.3844408094882965, 0.39686286449432373, 0.37301382422447205, 0.37234431505203247, 0.3750084638595581, 0.3706384599208832, 0.36876773834228516, 0.3937112092971802, 0.37445566058158875], "val_accuracy": [0.5686666369438171, 0.6679999828338623, 0.6643333435058594, 0.6973333358764648, 0.7239999771118164, 0.7153333425521851, 0.7366666793823242, 0.737666666507721, 0.7663333415985107, 0.7556666731834412, 0.7576666474342346, 0.7666666507720947, 0.7739999890327454, 0.7863333225250244, 0.7666666507720947, 0.7850000262260437, 0.7996666431427002, 0.7933333516120911, 0.8013333082199097, 0.7996666431427002, 0.796999990940094, 0.793666660785675, 0.8083333373069763, 0.8053333163261414, 0.8220000267028809, 0.8206666707992554, 0.8199999928474426, 0.8153333067893982, 0.8180000185966492, 0.8253333568572998, 0.8109999895095825, 0.8320000171661377, 0.8119999766349792, 0.824999988079071, 0.8193333148956299, 0.8353333473205566, 0.8263333439826965, 0.8420000076293945, 0.8296666741371155, 0.8460000157356262, 0.8339999914169312, 0.8453333377838135, 0.8326666951179504, 0.8476666808128357, 0.8463333249092102, 0.8476666808128357, 0.8489999771118164, 0.847000002861023, 0.8386666774749756, 0.8500000238418579, 0.8476666808128357, 0.8363333344459534, 0.8456666469573975, 0.8533333539962769, 0.856333315372467, 0.8606666922569275, 0.8586666584014893, 0.8629999756813049, 0.8516666889190674, 0.8493333458900452, 0.8636666536331177, 0.8560000061988831, 0.8610000014305115, 0.8493333458900452, 0.8640000224113464, 0.8493333458900452, 0.8573333621025085, 0.8633333444595337, 0.8529999852180481, 0.8679999709129333, 0.8696666955947876, 0.8643333315849304, 0.8643333315849304, 0.8679999709129333, 0.8553333282470703, 0.8663333058357239]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 5], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 4, 5, 4], [3, 3, 0, 4, 0, 3, 1], [53, 1], [0, 0, 0, 1, 0, 1, 1, 1], [8, 3, 6, 2], [0, 1, 1, 2], [0], [1], [0], [4], [0]], "fitness": -0.30571427941322327, "mapping_values": [1, 10, 5, 5, 3, 14, 7, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(grad, tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.square(grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), beta)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.7957398891448975, 2.5808825492858887, 2.3050127029418945, 2.3033931255340576, 2.3030290603637695, 2.296574831008911, 2.374101400375366, 2.3047924041748047, 2.3032920360565186, 2.3030965328216553, 2.303091526031494], "accuracy": [0.2285034954547882, 0.13432836532592773, 0.09893012791872025, 0.10196803510189056, 0.09760929644107819, 0.11742173880338669, 0.12772421538829803, 0.09840179979801178, 0.10038304328918457, 0.09998679161071777, 0.09602430462837219], "val_loss": [2.2464447021484375, 2.305232286453247, 2.303189516067505, 2.302638292312622, 2.301568031311035, 2.2751927375793457, 2.3067264556884766, 2.303532123565674, 2.30283260345459, 2.3025975227355957, 2.3026254177093506], "val_accuracy": [0.21666666865348816, 0.10333333164453506, 0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.29499998688697815, 0.09866666793823242, 0.09866666793823242, 0.10333333164453506, 0.10333333164453506, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [6, 2, 4, 9, 3, 5, 6, 4], [2, 2, 0, 4, 2, 3, 1], [81, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 3, 2, 3, 8, 7, 0, 2, 2, 2], [0, 1, 1, 2, 5, 0, 7, 5, 2], [0, 3], [1], [0], [1], [0]], "fitness": -0.10257142782211304, "mapping_values": [1, 11, 6, 5, 3, 14, 8, 6, 2, 19, 10, 9, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.pow(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.pow(grad, beta), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.sqrt(alpha))), tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(grad, tf.math.add(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), grad)), grad)))), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3102355003356934, 2.308903217315674, 2.3074958324432373, 2.3055574893951416, 2.3063952922821045, 2.3051984310150146, 2.3033013343811035, 2.3031885623931885, 2.302142858505249, 2.3032073974609375, 2.302790403366089, 2.3024492263793945, 2.3023829460144043], "accuracy": [0.09021265059709549, 0.09351472556591034, 0.09642054885625839, 0.09457138925790787, 0.09060890227556229, 0.09391097724437714, 0.09840179979801178, 0.09774138033390045, 0.10011887550354004, 0.09628847241401672, 0.09800554811954498, 0.09589222073554993, 0.09232597798109055], "val_loss": [2.308464288711548, 2.307091474533081, 2.30576229095459, 2.3048253059387207, 2.304081439971924, 2.3034963607788086, 2.3030788898468018, 2.30277419090271, 2.302602529525757, 2.3025126457214355, 2.302466630935669, 2.302388906478882, 2.302302837371826], "val_accuracy": [0.08900000154972076, 0.09166666865348816, 0.09533333033323288, 0.09733333438634872, 0.0989999994635582, 0.10066666454076767, 0.10199999809265137, 0.10366666316986084, 0.10199999809265137, 0.10333333164453506, 0.10300000011920929, 0.09866666793823242, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [8, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 2, 66], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 2], [2, 2, 0, 4, 0, 3, 1], [90, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [69], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 13, 7, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 0], [16, 81, 17], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [7, 3, 0, 3, 2], [0, 1, 1, 2, 7], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 15, 8, 7, 3, 10, 5, 5, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), grad), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303579330444336, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091]}}]