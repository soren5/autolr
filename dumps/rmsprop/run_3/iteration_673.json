[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.819428563117981, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2137298583984375, 1.610164761543274, 1.1477727890014648, 1.0022563934326172, 0.878667950630188, 0.8568132519721985, 0.776343047618866, 0.763779878616333, 0.735605001449585, 0.7269817590713501, 0.7070512175559998, 0.6548992395401001, 0.6643698811531067, 0.6511247754096985, 0.6286494135856628, 0.6134258508682251, 0.6104228496551514, 0.5979157090187073, 0.5987305045127869, 0.5722048282623291, 0.5698208808898926, 0.5547515153884888, 0.5475152730941772, 0.5329908728599548, 0.5451147556304932, 0.5275931358337402, 0.5123705267906189, 0.5078272223472595, 0.5113955736160278, 0.5027592778205872, 0.4987001419067383, 0.4940669536590576, 0.4786238968372345, 0.4708333909511566, 0.4621526896953583, 0.48020631074905396, 0.4624134302139282, 0.45056748390197754, 0.4655395448207855, 0.45307788252830505, 0.442947655916214, 0.44893282651901245, 0.43515244126319885, 0.42475658655166626, 0.4367087185382843, 0.41205865144729614, 0.4206581711769104, 0.4205007553100586, 0.4172471761703491, 0.41587963700294495, 0.40780213475227356, 0.4036279618740082, 0.40769368410110474, 0.3987841308116913, 0.3904193043708801, 0.39893510937690735, 0.3843603730201721, 0.38707393407821655, 0.37787362933158875, 0.379487544298172, 0.37709274888038635, 0.37109482288360596, 0.37587499618530273, 0.3643159568309784, 0.3693475127220154], "accuracy": [0.2587504982948303, 0.5091797709465027, 0.5979394912719727, 0.6380926966667175, 0.6884163022041321, 0.6888125538825989, 0.7135120630264282, 0.7170783281326294, 0.7252674698829651, 0.7259278893470764, 0.7360982894897461, 0.7555144429206848, 0.7450799345970154, 0.748249888420105, 0.7650244235992432, 0.7677981853485107, 0.7718927264213562, 0.7709681391716003, 0.7769119143486023, 0.7866860628128052, 0.7902522683143616, 0.7927618622779846, 0.7948752045631409, 0.7993659973144531, 0.793422281742096, 0.8064984679222107, 0.8109893202781677, 0.8067626357078552, 0.8124422430992126, 0.8127063512802124, 0.8140271902084351, 0.8177255392074585, 0.8252542614936829, 0.8278959393501282, 0.8290846943855286, 0.826310932636261, 0.8343679904937744, 0.8325188159942627, 0.8285563588142395, 0.8348963260650635, 0.8370096683502197, 0.8322546482086182, 0.8379341959953308, 0.8422929644584656, 0.8391229510307312, 0.8438779711723328, 0.8469158411026001, 0.8412362933158875, 0.8428213000297546, 0.8461233377456665, 0.8465195894241333, 0.8525954484939575, 0.8511425256729126, 0.8537842035293579, 0.8599920868873596, 0.8508783578872681, 0.8580108284950256, 0.8580108284950256, 0.859199583530426, 0.8622375130653381, 0.8614450097084045, 0.8628978729248047, 0.8634262084960938, 0.8648791313171387, 0.8617091774940491], "val_loss": [1.9287034273147583, 1.1040353775024414, 0.9461249113082886, 0.8518285155296326, 0.7117719054222107, 0.7172448039054871, 0.7430362105369568, 0.6375980973243713, 0.610924482345581, 0.6451972723007202, 0.5931405425071716, 0.6197242140769958, 0.5651746392250061, 0.5619686841964722, 0.584176778793335, 0.5282657742500305, 0.5374152660369873, 0.5987553596496582, 0.5066900253295898, 0.520661473274231, 0.5106945633888245, 0.5113846063613892, 0.5105262994766235, 0.47563859820365906, 0.4649721384048462, 0.4591439962387085, 0.46998172998428345, 0.4847794473171234, 0.47142815589904785, 0.4496535658836365, 0.45397061109542847, 0.4506130814552307, 0.44653835892677307, 0.4365009367465973, 0.4247108995914459, 0.4396856725215912, 0.4282558560371399, 0.43425968289375305, 0.4208168089389801, 0.4359641373157501, 0.41513320803642273, 0.42554956674575806, 0.4077737331390381, 0.4137955605983734, 0.4107828736305237, 0.40587788820266724, 0.4169151484966278, 0.3969530761241913, 0.441188246011734, 0.3987084627151489, 0.3964674174785614, 0.39774560928344727, 0.3902430534362793, 0.389064222574234, 0.3953028917312622, 0.3935709595680237, 0.38202306628227234, 0.38998568058013916, 0.38632699847221375, 0.3725886940956116, 0.38266852498054504, 0.38683342933654785, 0.376604825258255, 0.37498316168785095, 0.3789033591747284], "val_accuracy": [0.5503333210945129, 0.6583333611488342, 0.6486666798591614, 0.6769999861717224, 0.7323333621025085, 0.7143333554267883, 0.7289999723434448, 0.7516666650772095, 0.762666642665863, 0.7440000176429749, 0.7763333320617676, 0.7369999885559082, 0.7933333516120911, 0.7766666412353516, 0.7663333415985107, 0.8059999942779541, 0.8026666641235352, 0.7490000128746033, 0.8086666464805603, 0.7993333339691162, 0.8033333420753479, 0.7956666946411133, 0.8053333163261414, 0.8256666660308838, 0.8276666402816772, 0.8316666483879089, 0.8166666626930237, 0.8153333067893982, 0.8190000057220459, 0.8330000042915344, 0.831333339214325, 0.8393333554267883, 0.843666672706604, 0.8393333554267883, 0.8426666855812073, 0.8396666646003723, 0.843666672706604, 0.8450000286102295, 0.8500000238418579, 0.840666651725769, 0.8510000109672546, 0.8486666679382324, 0.8576666712760925, 0.8496666550636292, 0.8486666679382324, 0.8576666712760925, 0.847000002861023, 0.8600000143051147, 0.8370000123977661, 0.8529999852180481, 0.8560000061988831, 0.8606666922569275, 0.8633333444595337, 0.8616666793823242, 0.8569999933242798, 0.8616666793823242, 0.8640000224113464, 0.8613333106040955, 0.8583333492279053, 0.8690000176429749, 0.8636666536331177, 0.8640000224113464, 0.8633333444595337, 0.862666666507721, 0.8646666407585144]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 3, 5, 4], [4, 2, 0, 4, 2, 0, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(grad, tf.math.pow(beta, tf.math.negative(tf.math.multiply(tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), beta)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.30322265625, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 7, 5], [0, 0, 1, 0, 2], [23, 39, 39], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 1, 0, 2, 2, 3, 1], [16, 1], [0, 0, 0, 1, 1, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [63], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 1, 0, 1, 0, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3044443130493164, 2.3038268089294434, 2.3041887283325195, 2.3048794269561768, 2.304791212081909, 2.3045811653137207, 2.3034379482269287, 2.304539680480957, 2.3061063289642334], "accuracy": [0.0878351628780365, 0.09932637959718704, 0.09549596905708313, 0.09602430462837219, 0.09126931428909302, 0.09642054885625839, 0.0952318087220192, 0.10011887550354004, 0.09985470771789551], "val_loss": [2.3026998043060303, 2.3027637004852295, 2.3027257919311523, 2.30285906791687, 2.303107500076294, 2.303316831588745, 2.3034911155700684, 2.3026411533355713, 2.302966356277466], "val_accuracy": [0.10100000351667404, 0.09866666793823242, 0.10100000351667404, 0.10199999809265137, 0.09933333098888397, 0.10199999809265137, 0.09933333098888397, 0.10199999809265137, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 3, 3, 5], [0, 0, 1, 0, 2], [32, 39, 39], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [2, 2, 4, 8, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 1, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [61], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3038923740386963, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [7, 2, 3, 1, 3, 5, 4, 3, 5], [3, 0, 2, 3, 3, 2, 2, 0], [26, 39, 39], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 8, 4, 0, 5, 5, 4], [2, 2, 2, 4, 0, 3, 1], [20, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 0, 1, 4], [0, 53], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 9, 8, 2, 6, 3, 3, 0, 8, 4, 4, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(grad, tf.math.square(grad))), tf.math.pow(tf.math.multiply(grad, tf.math.square(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.sqrt(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]