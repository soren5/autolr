[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8385714292526245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2071945667266846, 1.5826530456542969, 1.1420754194259644, 0.9602375626564026, 0.9024509191513062, 0.7964468002319336, 0.7708581686019897, 0.7309776544570923, 0.7190178632736206, 0.7079097628593445, 0.6645691990852356, 0.6718683838844299, 0.6264382600784302, 0.6278120875358582, 0.6372507214546204, 0.5972231030464172, 0.6008566617965698, 0.5669425129890442, 0.5704490542411804, 0.5715922117233276, 0.5426824688911438, 0.5361405611038208, 0.5307276248931885, 0.5281819701194763, 0.5176852941513062, 0.515248715877533, 0.50690758228302, 0.4947645664215088, 0.4920397400856018, 0.481381893157959, 0.4822407364845276, 0.4789578318595886, 0.47417116165161133, 0.4669131934642792, 0.4531499147415161, 0.454037606716156], "accuracy": [0.2779025137424469, 0.5168405771255493, 0.5976753234863281, 0.6583014130592346, 0.6773213744163513, 0.7091533541679382, 0.7211728692054749, 0.7305507659912109, 0.7296261787414551, 0.7357020378112793, 0.7524765729904175, 0.7490423917770386, 0.7709681391716003, 0.7720248103141785, 0.7646281719207764, 0.7732135653495789, 0.7766477465629578, 0.789459764957428, 0.789988100528717, 0.7882710099220276, 0.7994980812072754, 0.8005547523498535, 0.806630551815033, 0.8043851256370544, 0.8083476424217224, 0.8140271902084351, 0.8150838613510132, 0.8202351331710815, 0.8187822103500366, 0.8264430165290833, 0.8216879963874817, 0.8231409192085266, 0.8249900937080383, 0.8251221776008606, 0.8315942287445068, 0.8333113193511963], "val_loss": [1.9148222208023071, 1.0891375541687012, 0.9056211113929749, 0.8016678094863892, 0.760240912437439, 0.7038585543632507, 0.6770634055137634, 0.6463528871536255, 0.6302468180656433, 0.6203481554985046, 0.6302914023399353, 0.590358316898346, 0.618607759475708, 0.5765666365623474, 0.5648512244224548, 0.5980960130691528, 0.570862352848053, 0.5760148167610168, 0.5375343561172485, 0.559295654296875, 0.5193827152252197, 0.5377711653709412, 0.5133692026138306, 0.5084794163703918, 0.5028876662254333, 0.5047078728675842, 0.5013857483863831, 0.4947488605976105, 0.4889155328273773, 0.4944532513618469, 0.47344210743904114, 0.4975704252719879, 0.47418901324272156, 0.4700135588645935, 0.47032633423805237, 0.4672855734825134], "val_accuracy": [0.550000011920929, 0.6420000195503235, 0.6753333210945129, 0.6966666579246521, 0.7206666469573975, 0.7390000224113464, 0.7423333525657654, 0.7590000033378601, 0.7583333253860474, 0.7606666684150696, 0.7576666474342346, 0.7786666750907898, 0.768666684627533, 0.7796666622161865, 0.7956666946411133, 0.7693333625793457, 0.7820000052452087, 0.7749999761581421, 0.8009999990463257, 0.7850000262260437, 0.8076666593551636, 0.7979999780654907, 0.812333345413208, 0.8190000057220459, 0.8153333067893982, 0.8230000138282776, 0.812666654586792, 0.8236666917800903, 0.8263333439826965, 0.8223333358764648, 0.8383333086967468, 0.8216666579246521, 0.8303333520889282, 0.8303333520889282, 0.8253333568572998, 0.8273333311080933]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8299999833106995, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2100577354431152, 1.5873901844024658, 1.1275038719177246, 0.9613522291183472, 0.8602179288864136, 0.8135800361633301, 0.7774547934532166, 0.7456919550895691, 0.7349908351898193, 0.6917651295661926, 0.6945157647132874, 0.6586016416549683, 0.6499537825584412, 0.6253289580345154, 0.6453982591629028, 0.5960158109664917, 0.6029127836227417, 0.5894086360931396, 0.5611248016357422, 0.5602885484695435, 0.5598879456520081, 0.5532834529876709, 0.5391382575035095, 0.5412510633468628, 0.5286988019943237, 0.5172552466392517, 0.5203638672828674, 0.500848114490509], "accuracy": [0.27222296595573425, 0.525029718875885, 0.6122044920921326, 0.6567164063453674, 0.6840575933456421, 0.7000396251678467, 0.7098137736320496, 0.7234182953834534, 0.7255316376686096, 0.744419515132904, 0.7421740889549255, 0.7531369924545288, 0.7506273984909058, 0.7635715007781982, 0.7549861073493958, 0.778232753276825, 0.7741381525993347, 0.7790252566337585, 0.7930260300636292, 0.7885351777076721, 0.7884030938148499, 0.7952714562416077, 0.7975168228149414, 0.7984414100646973, 0.8021397590637207, 0.8076872229576111, 0.8090080618858337, 0.8140271902084351], "val_loss": [1.9206753969192505, 1.0902442932128906, 0.8939089179039001, 0.7910431027412415, 0.7467959523200989, 0.7522978782653809, 0.7015779614448547, 0.6761341691017151, 0.6496711373329163, 0.6777553558349609, 0.5956953763961792, 0.5909251570701599, 0.6027134656906128, 0.5661748647689819, 0.567433774471283, 0.5817503929138184, 0.5396687984466553, 0.5279747843742371, 0.5480512976646423, 0.5216508507728577, 0.534112811088562, 0.5709903240203857, 0.49393510818481445, 0.5115372538566589, 0.49092280864715576, 0.4886050522327423, 0.4922858476638794, 0.5014790296554565], "val_accuracy": [0.5963333249092102, 0.6623333096504211, 0.6673333048820496, 0.7053333520889282, 0.7143333554267883, 0.7136666774749756, 0.731333315372467, 0.7426666617393494, 0.7516666650772095, 0.7423333525657654, 0.7693333625793457, 0.7703333497047424, 0.7636666893959045, 0.7839999794960022, 0.7873333096504211, 0.7803333401679993, 0.7900000214576721, 0.8040000200271606, 0.7839999794960022, 0.8016666769981384, 0.7943333387374878, 0.7726666927337646, 0.824999988079071, 0.8009999990463257, 0.8103333115577698, 0.8140000104904175, 0.8190000057220459, 0.8086666464805603]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 9], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 5, 3, 2, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30281662940979, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10210011899471283, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [6, 2, 0, 6, 3, 8, 2], [2, 0, 3, 5, 0], [87, 14], [0, 0, 1, 1], [0, 2], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), grad), grad)), tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 2, 1, 1, 1, 11, 6, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [2, 0, 0, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 5, 1, 3], [16, 1], [0, 0, 1, 0, 1, 1], [0, 7, 6], [0, 6, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 5, 3, 2, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3033947944641113, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [3, 8, 1, 1, 3, 5, 3, 4, 7, 6, 6, 6, 6, 7, 0, 9, 4, 2], [0, 2, 1, 0, 2, 2, 1, 0, 1, 0, 0, 1, 2, 0], [0, 39, 39, 65, 41, 29, 81], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 5, 5], [0, 0, 3, 1, 0], [16, 1], [0, 1, 0, 1], [0, 7], [0, 0], [79], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 32, 18, 14, 7, 2, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(alpha))), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad)))), tf.math.add(tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), tf.math.pow(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3034088611602783, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]