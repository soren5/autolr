[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8354285955429077, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2076494693756104, 1.5895003080368042, 1.1374119520187378, 0.9756653904914856, 0.8775516748428345, 0.8285184502601624, 0.7712317705154419, 0.7626111507415771, 0.7265251874923706, 0.6890599727630615, 0.7034197449684143, 0.6592921018600464, 0.6537715196609497, 0.6287105679512024, 0.6398354172706604, 0.5944136381149292, 0.599561870098114, 0.5858465433120728, 0.5797262191772461, 0.5698409676551819, 0.5673636794090271, 0.5678008198738098, 0.5483428835868835, 0.5497634410858154, 0.532749354839325, 0.5236347913742065, 0.5333042144775391, 0.5095058083534241, 0.5045353174209595, 0.4975518584251404, 0.49094048142433167, 0.48709431290626526, 0.4827359914779663, 0.47575145959854126, 0.4656561017036438, 0.4684356153011322, 0.4587475657463074, 0.45351696014404297, 0.4503467381000519, 0.44706904888153076, 0.4428337514400482, 0.4504402279853821, 0.4375488758087158, 0.4348781108856201, 0.4314349293708801, 0.4204988479614258, 0.4160529375076294, 0.41635751724243164, 0.4083843529224396, 0.41915130615234375, 0.3926546275615692, 0.3994418680667877, 0.39947429299354553, 0.39852213859558105, 0.38550063967704773, 0.3829444646835327, 0.38881176710128784, 0.3870673179626465], "accuracy": [0.2670717239379883, 0.5099722743034363, 0.6059965491294861, 0.6465460062026978, 0.6819442510604858, 0.6993792057037354, 0.7156254053115845, 0.7154933214187622, 0.7325320243835449, 0.7477215528488159, 0.7413815855979919, 0.754589855670929, 0.7576277852058411, 0.7687227725982666, 0.7609298825263977, 0.7808743715286255, 0.7751948237419128, 0.7857614755630493, 0.7820631265640259, 0.7847048044204712, 0.7885351777076721, 0.7841764688491821, 0.7948752045631409, 0.7967243194580078, 0.8014793395996094, 0.8082155585289001, 0.7989697456359863, 0.8128384351730347, 0.8148196935653687, 0.8173292875289917, 0.8204993009567261, 0.8189142942428589, 0.8216879963874817, 0.8241975903511047, 0.8294808864593506, 0.828292191028595, 0.8300092220306396, 0.8348963260650635, 0.8323867321014404, 0.8315942287445068, 0.8367455005645752, 0.8314621448516846, 0.8396512866020203, 0.8392550349235535, 0.8358209133148193, 0.8399154543876648, 0.8471800088882446, 0.8409721255302429, 0.8499537706375122, 0.8441421389579773, 0.8515387773513794, 0.8507462739944458, 0.8521991968154907, 0.847840428352356, 0.8553691506385803, 0.8564258217811584, 0.8640866279602051, 0.8568220734596252], "val_loss": [1.914455771446228, 1.098812222480774, 0.9037179350852966, 0.7973130941390991, 0.8333348631858826, 0.693468451499939, 0.6644936203956604, 0.6506484150886536, 0.6173715591430664, 0.6210986375808716, 0.5944542288780212, 0.6101794838905334, 0.6049332618713379, 0.5678420662879944, 0.5504077076911926, 0.5474206805229187, 0.5673835277557373, 0.5303572416305542, 0.5376460552215576, 0.5251771211624146, 0.5542807579040527, 0.5196876525878906, 0.4951358139514923, 0.5042799711227417, 0.4859860837459564, 0.4721200466156006, 0.4810442626476288, 0.4756927788257599, 0.4606706202030182, 0.4577302634716034, 0.4765312969684601, 0.4611821174621582, 0.4441245496273041, 0.45925650000572205, 0.43767690658569336, 0.4454924464225769, 0.4279358685016632, 0.4360511004924774, 0.4190458655357361, 0.4398726522922516, 0.4353370666503906, 0.4248499274253845, 0.4196159243583679, 0.412628173828125, 0.4085123836994171, 0.4140365719795227, 0.40604719519615173, 0.40636157989501953, 0.40317851305007935, 0.40036603808403015, 0.39294856786727905, 0.39414963126182556, 0.3889599144458771, 0.4041719436645508, 0.39571818709373474, 0.39369702339172363, 0.3879936635494232, 0.3911684453487396], "val_accuracy": [0.5433333516120911, 0.6543333530426025, 0.6790000200271606, 0.7089999914169312, 0.6819999814033508, 0.7409999966621399, 0.7436666488647461, 0.7580000162124634, 0.7776666879653931, 0.7753333449363708, 0.7906666398048401, 0.7670000195503235, 0.7799999713897705, 0.8016666769981384, 0.8019999861717224, 0.7986666560173035, 0.784333348274231, 0.8090000152587891, 0.7979999780654907, 0.8040000200271606, 0.800000011920929, 0.8109999895095825, 0.8213333487510681, 0.812333345413208, 0.8286666870117188, 0.831333339214325, 0.8206666707992554, 0.8193333148956299, 0.8333333134651184, 0.8289999961853027, 0.8186666369438171, 0.82833331823349, 0.843999981880188, 0.8320000171661377, 0.8413333296775818, 0.8416666388511658, 0.846666693687439, 0.8473333120346069, 0.8496666550636292, 0.8339999914169312, 0.8423333168029785, 0.8510000109672546, 0.8489999771118164, 0.8486666679382324, 0.8526666760444641, 0.856333315372467, 0.8610000014305115, 0.8533333539962769, 0.8606666922569275, 0.8579999804496765, 0.8619999885559082, 0.859666645526886, 0.8650000095367432, 0.8556666374206543, 0.8573333621025085, 0.8606666922569275, 0.8606666922569275, 0.8603333234786987]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0], [0, 2, 3, 1, 3, 5, 7, 9], [2, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [2, 2, 4, 9, 3, 5, 5, 4, 4, 0, 8], [2, 2, 0, 4, 0, 3, 1], [14, 1, 25], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 1], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 3, 17, 11, 6, 3, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)))), tf.math.pow(tf.math.negative(tf.math.sqrt(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3030507564544678, 2.3084747791290283, 8.94804573059082, NaN, NaN, NaN], "accuracy": [0.10249637067317963, 0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.302626371383667, 2.4191784858703613, 130.5085906982422, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 36], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 1, 4], [2, 2, 0, 3, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [1, 1, 4, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 8, 4, 4, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(alpha), tf.math.multiply(alpha, grad)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303445339202881, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [3, 2, 3, 1, 3, 5], [0, 1, 1, 0, 2, 3], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [3, 2, 0, 0, 0, 3, 1], [16, 1, 95], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.09971428662538528, "mapping_values": [1, 11, 5, 6, 2, 15, 8, 7, 3, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(grad, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3101863861083984, 2.3112995624542236, 2.3137357234954834, 2.3163018226623535, 2.3245015144348145, 2.3329098224639893, 2.3466155529022217, 2.3943300247192383, 364.5451965332031], "accuracy": [0.08981640636920929, 0.09153348207473755, 0.09285431355237961, 0.09853387624025345, 0.09906221181154251, 0.0956280529499054, 0.10011887550354004, 0.10328886657953262, 0.10117553919553757], "val_loss": [2.3096399307250977, 2.3116276264190674, 2.3141534328460693, 2.3172385692596436, 2.3210957050323486, 2.327230453491211, 2.3405351638793945, 2.409404993057251, 8.647210901469921e+18], "val_accuracy": [0.09566666930913925, 0.09733333438634872, 0.0989999994635582, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]