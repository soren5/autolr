[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8554285764694214, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.213676929473877, 1.6260327100753784, 1.143683910369873, 0.9742980599403381, 0.905768096446991, 0.8351218104362488, 0.7851074934005737, 0.7412269115447998, 0.7395317554473877, 0.711415708065033, 0.7069402933120728, 0.678230345249176, 0.6367061138153076, 0.6509361267089844, 0.6249479651451111, 0.6181301474571228, 0.596510112285614, 0.5996518135070801, 0.5853984355926514, 0.566254198551178, 0.5746713280677795, 0.5576147437095642, 0.5446452498435974, 0.5396304726600647, 0.5172899961471558, 0.545619010925293, 0.5207965970039368, 0.5165130496025085, 0.5015321969985962, 0.4937669634819031, 0.48441874980926514, 0.4920797646045685, 0.47626858949661255, 0.47793251276016235, 0.4731525182723999, 0.4620440900325775, 0.46651312708854675, 0.45247113704681396, 0.45586317777633667, 0.4512108266353607, 0.44254299998283386, 0.4377943277359009, 0.4450337886810303, 0.433260977268219, 0.4311376214027405, 0.4237311780452728, 0.42902952432632446, 0.4136289060115814, 0.41453227400779724, 0.4130176901817322, 0.39844590425491333, 0.39945289492607117, 0.39990946650505066, 0.39090973138809204, 0.39613914489746094, 0.3962012231349945, 0.3925626873970032, 0.39203161001205444, 0.3823232650756836], "accuracy": [0.2662792205810547, 0.5065380930900574, 0.6066569685935974, 0.659490168094635, 0.6744155287742615, 0.6980583667755127, 0.713908314704895, 0.7283053994178772, 0.7260599732398987, 0.7359662055969238, 0.7403249144554138, 0.7495707273483276, 0.7663452625274658, 0.7577598690986633, 0.7709681391716003, 0.7713643908500671, 0.778761088848114, 0.7790252566337585, 0.7824593782424927, 0.7913089394569397, 0.7848368883132935, 0.7928939461708069, 0.798309326171875, 0.7967243194580078, 0.8094043135643005, 0.800290584564209, 0.811649739742279, 0.8087438941001892, 0.8164047002792358, 0.8144234418869019, 0.8235371708869934, 0.8183859586715698, 0.822348415851593, 0.8281601071357727, 0.8276317715644836, 0.8322546482086182, 0.8293488025665283, 0.8367455005645752, 0.8325188159942627, 0.8381983637809753, 0.8393871188163757, 0.8422929644584656, 0.8403117060661316, 0.844010055065155, 0.8459912538528442, 0.8491612672805786, 0.8459912538528442, 0.8487650156021118, 0.8511425256729126, 0.8516708612442017, 0.8597279191017151, 0.8533879518508911, 0.8537842035293579, 0.8578787446022034, 0.8557654023170471, 0.8599920868873596, 0.8584070801734924, 0.8605204224586487, 0.8598600029945374], "val_loss": [1.9311139583587646, 1.1074284315109253, 0.9771608710289001, 0.7858006358146667, 0.7151148915290833, 0.6789993643760681, 0.6691451072692871, 0.6397503614425659, 0.6217755675315857, 0.637182354927063, 0.5786056518554688, 0.5710426568984985, 0.5599858164787292, 0.5515573024749756, 0.54337477684021, 0.5200293660163879, 0.526112973690033, 0.5345032811164856, 0.5103436708450317, 0.5099934935569763, 0.49562308192253113, 0.5069106221199036, 0.48209962248802185, 0.47433871030807495, 0.4906598627567291, 0.5204798579216003, 0.4671025276184082, 0.4671674370765686, 0.46530061960220337, 0.4500419795513153, 0.446654736995697, 0.43762192130088806, 0.44438207149505615, 0.4439742863178253, 0.44161567091941833, 0.4331801235675812, 0.44725513458251953, 0.4252970814704895, 0.42855703830718994, 0.4254489839076996, 0.4155900180339813, 0.4370979070663452, 0.4190300703048706, 0.4254917800426483, 0.4138663709163666, 0.421396940946579, 0.40383246541023254, 0.39836356043815613, 0.4188055694103241, 0.4012039005756378, 0.4035666882991791, 0.41997474431991577, 0.40390560030937195, 0.38472822308540344, 0.40163907408714294, 0.3912980854511261, 0.3859305679798126, 0.3892076015472412, 0.3987250030040741], "val_accuracy": [0.5730000138282776, 0.6159999966621399, 0.6100000143051147, 0.6980000138282776, 0.7269999980926514, 0.7519999742507935, 0.7483333349227905, 0.7603333592414856, 0.7559999823570251, 0.7463333606719971, 0.7726666927337646, 0.7856666445732117, 0.7846666574478149, 0.79666668176651, 0.7906666398048401, 0.8029999732971191, 0.7990000247955322, 0.7929999828338623, 0.8146666884422302, 0.8116666674613953, 0.8086666464805603, 0.8040000200271606, 0.8196666836738586, 0.8266666531562805, 0.8116666674613953, 0.8046666383743286, 0.8289999961853027, 0.8270000219345093, 0.8266666531562805, 0.8296666741371155, 0.8339999914169312, 0.8396666646003723, 0.8323333263397217, 0.8420000076293945, 0.8383333086967468, 0.8363333344459534, 0.8299999833106995, 0.843666672706604, 0.8416666388511658, 0.8433333039283752, 0.8486666679382324, 0.8370000123977661, 0.8506666421890259, 0.8403333425521851, 0.8506666421890259, 0.8393333554267883, 0.8503333330154419, 0.8526666760444641, 0.8460000157356262, 0.8556666374206543, 0.8536666631698608, 0.8456666469573975, 0.8553333282470703, 0.8600000143051147, 0.8546666502952576, 0.859000027179718, 0.8586666584014893, 0.8569999933242798, 0.8553333282470703]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8434285521507263, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209240198135376, 1.6052253246307373, 1.1458842754364014, 0.9916499853134155, 0.8731774687767029, 0.8112763166427612, 0.78901207447052, 0.7512853145599365, 0.754819929599762, 0.6949198842048645, 0.7077736854553223, 0.6661927103996277, 0.672816276550293, 0.6309724450111389, 0.6303423047065735, 0.6166990995407104, 0.6149331331253052, 0.5906824469566345, 0.5781298279762268, 0.5673744082450867, 0.5672783255577087, 0.5725301504135132, 0.5540030002593994, 0.5453358888626099, 0.5494527220726013, 0.5327668190002441, 0.5254557728767395, 0.5337263345718384, 0.5122244954109192, 0.511428713798523, 0.49035951495170593, 0.4992104768753052, 0.48720163106918335, 0.48519575595855713, 0.4731748402118683, 0.4805845618247986, 0.48247772455215454, 0.45513245463371277, 0.47480717301368713, 0.4482106864452362, 0.4537769854068756, 0.4409070312976837, 0.4425208270549774, 0.4299166202545166], "accuracy": [0.2654867172241211, 0.5134063959121704, 0.600581169128418, 0.6477347612380981, 0.6840575933456421, 0.7025492191314697, 0.7102100253105164, 0.7228899598121643, 0.7186633348464966, 0.7386078238487244, 0.7349095344543457, 0.7504953145980835, 0.7403249144554138, 0.7646281719207764, 0.7646281719207764, 0.7689869403839111, 0.7700436115264893, 0.7868181467056274, 0.7800818681716919, 0.7887993454933167, 0.791969358921051, 0.7864218950271606, 0.7906485199928284, 0.8021397590637207, 0.7954035401344299, 0.8033285140991211, 0.8061022162437439, 0.8034605979919434, 0.811649739742279, 0.8076872229576111, 0.8238013386726379, 0.8191784620285034, 0.817989706993103, 0.8230088353157043, 0.8261788487434387, 0.8234050869941711, 0.8203672170639038, 0.8376700282096863, 0.8227446675300598, 0.8358209133148193, 0.8337075710296631, 0.8378021121025085, 0.8378021121025085, 0.842028796672821], "val_loss": [1.9147473573684692, 1.087920069694519, 0.875048816204071, 0.7540608048439026, 0.7574230432510376, 0.6716042757034302, 0.6772947311401367, 0.6519500613212585, 0.6590040326118469, 0.6097545027732849, 0.5992184281349182, 0.5864130258560181, 0.5821722149848938, 0.5578266382217407, 0.585529625415802, 0.5423505902290344, 0.5550316572189331, 0.5351769924163818, 0.5243120193481445, 0.524642825126648, 0.5300858020782471, 0.5248081088066101, 0.5081793069839478, 0.5174676775932312, 0.492565393447876, 0.48955315351486206, 0.5519551038742065, 0.5086597204208374, 0.464541494846344, 0.4638756513595581, 0.47828060388565063, 0.45877769589424133, 0.4542229473590851, 0.4536878168582916, 0.46888208389282227, 0.4413950741291046, 0.43652108311653137, 0.4345308840274811, 0.4342292845249176, 0.4371527433395386, 0.4488072991371155, 0.42835572361946106, 0.4275016188621521, 0.435945063829422], "val_accuracy": [0.6323333382606506, 0.6430000066757202, 0.6940000057220459, 0.7236666679382324, 0.7196666598320007, 0.7440000176429749, 0.7300000190734863, 0.7646666765213013, 0.7513333559036255, 0.7703333497047424, 0.7746666669845581, 0.7829999923706055, 0.7803333401679993, 0.7953333258628845, 0.7749999761581421, 0.7986666560173035, 0.7896666526794434, 0.8059999942779541, 0.8076666593551636, 0.8036666512489319, 0.7996666431427002, 0.7963333129882812, 0.8146666884422302, 0.8019999861717224, 0.8223333358764648, 0.8176666498184204, 0.7833333611488342, 0.8029999732971191, 0.831333339214325, 0.8299999833106995, 0.8246666789054871, 0.8349999785423279, 0.8330000042915344, 0.8366666436195374, 0.8213333487510681, 0.8370000123977661, 0.8399999737739563, 0.840666651725769, 0.843999981880188, 0.8366666436195374, 0.8273333311080933, 0.8429999947547913, 0.843666672706604, 0.8343333601951599]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 1, 7, 5], [0, 0, 1, 0, 2, 1, 0], [0, 39, 39, 96], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 1, 6, 3, 8, 2], [2, 0, 3, 1, 4], [78, 6], [1, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [5], [0]], "fitness": -0.23914285004138947, "mapping_values": [1, 15, 8, 7, 4, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.add(tf.math.square(alpha), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2926876544952393, 5.606633186340332, 2.306833028793335, 2.273076295852661, 2.309124231338501, 2.301928758621216], "accuracy": [0.19733192026615143, 0.16457535326480865, 0.10381719470024109, 0.1450270712375641, 0.09813763201236725, 0.10157178342342377], "val_loss": [2.2772727012634277, 2.310493230819702, 2.3008267879486084, 2.3301892280578613, 2.3030896186828613, 2.2956979274749756], "val_accuracy": [0.23066666722297668, 0.0989999994635582, 0.0989999994635582, 0.10199999809265137, 0.0989999994635582, 0.18533332645893097]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 1, 3, 8, 5], [2, 0, 4, 1, 0], [16, 1], [1, 0, 1, 1], [0, 7], [0, 6], [0], [0, 0, 1, 0, 0, 1], [0, 2, 8, 5], [0, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 4, 2, 2, 1, 1, 0, 1, 1, 6, 4, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.square(beta))))", "other_info": {"loss": [29166.89453125, 503872356352.0, 8.569698080490783e+18, 6.575366367009667e+25, NaN, NaN], "accuracy": [0.1022322028875351, 0.10408136248588562, 0.09417514503002167, 0.10711926966905594, 0.09998679161071777, 0.09998679161071777], "val_loss": [1950918.125, 34584666308608.0, 5.759642304445059e+20, 2.3025853633880615, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.10433333367109299, 0.10333333164453506, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 2, 5, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 4, 6, 7, 8, 2, 3], [2, 1, 5, 1, 0, 4, 4], [89, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [0, 0, 0, 1, 1, 1], [0, 4, 6], [2, 0, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 2, 15, 8, 7, 1, 4, 2, 2, 1, 6, 3, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.divide_no_nan(beta, tf.constant(0.0, shape=shape, dtype=tf.float32)), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [7, 2, 3, 1, 3, 7, 4, 1, 4, 6, 2, 0, 6, 9, 3, 4, 9, 2, 8, 8, 4, 1, 9, 3], [0, 2, 1, 0, 2, 0, 0, 2, 0, 3, 0, 0, 3, 1, 2, 1], [0, 39, 39, 75, 38, 68, 60, 12, 98, 35], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 4], [16, 1], [0, 0, 1, 1], [0, 6], [0, 6], [73], [1], [0], [2], [0]], "fitness": -0.09399999678134918, "mapping_values": [1, 40, 24, 16, 10, 1, 0, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.negative(grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.divide_no_nan(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), grad)), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha))))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3104281425476074, 2.3093717098236084, 2.310612440109253, 2.3093349933624268, 2.309774160385132, 2.3095805644989014], "accuracy": [0.09285431355237961, 0.09298639744520187, 0.09232597798109055, 0.0936468094587326, 0.09470347315073013, 0.09272222965955734], "val_loss": [2.3081791400909424, 2.3081791400909424, 2.3081791400909424, 2.3081791400909424, 2.3081791400909424, 2.3081791400909424], "val_accuracy": [0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076]}}]