[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.7917143106460571, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2126407623291016, 1.6083329916000366, 1.118450403213501, 1.0016579627990723, 0.894062340259552, 0.8203905820846558, 0.7760260701179504, 0.7616775035858154, 0.7335511445999146, 0.7232434153556824, 0.6860958337783813, 0.6701987385749817, 0.6747996211051941, 0.6189606189727783, 0.6498189568519592, 0.6191512942314148, 0.6006860136985779, 0.6087175607681274], "accuracy": [0.26376965641975403, 0.5060097575187683, 0.6115440726280212, 0.6433760523796082, 0.68101966381073, 0.6980583667755127, 0.7164179086685181, 0.7182670831680298, 0.7272487282752991, 0.7314753532409668, 0.7450799345970154, 0.7473253011703491, 0.7474573850631714, 0.7692511081695557, 0.7560427784919739, 0.7733456492424011, 0.77677983045578, 0.7692511081695557], "val_loss": [1.926984190940857, 1.1014002561569214, 0.8812962174415588, 0.8687722086906433, 0.766001284122467, 0.7113756537437439, 0.7007098197937012, 0.6638686656951904, 0.6483018398284912, 0.6225232481956482, 0.5969353318214417, 0.7003533244132996, 0.5688460469245911, 0.6304436326026917, 0.584827721118927, 0.5559878945350647, 0.5541368126869202, 0.5551552772521973], "val_accuracy": [0.5373333096504211, 0.6506666541099548, 0.6936666369438171, 0.6786666512489319, 0.7149999737739563, 0.7329999804496765, 0.7200000286102295, 0.7429999709129333, 0.7453333139419556, 0.7726666927337646, 0.7739999890327454, 0.7229999899864197, 0.7923333048820496, 0.7630000114440918, 0.7773333191871643, 0.7913333177566528, 0.778333306312561, 0.7886666655540466]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [7, 2, 3, 1, 3, 0, 2, 8, 6, 4, 3, 3], [0, 0, 2, 0, 2, 0, 1, 2, 2, 3, 2], [0, 39, 39, 57], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2, 9, 2, 4, 1, 5, 0, 4, 0, 6, 5, 6, 2, 5, 7, 8, 8, 2, 6, 1, 9, 9, 3, 6, 7, 8], [2, 0, 3, 4, 0, 5, 3, 1, 5, 2, 3, 1, 0, 5, 1, 2], [16, 1, 97, 96, 55, 20], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [7], [0]], "fitness": -0.350857138633728, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)))), tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(grad, grad)), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.square(grad), tf.math.negative(grad))))), tf.math.pow(tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), grad)), grad)), alpha)), tf.math.divide_no_nan(tf.math.add(tf.math.square(grad), tf.math.add(tf.math.sqrt(tf.math.sqrt(beta)), tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(alpha), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), grad))), alpha))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4368462562561035, 2.2022244930267334, 2.7267630100250244, 2.2687604427337646, 2.304762840270996, 2.316885232925415], "accuracy": [0.20235107839107513, 0.20961563289165497, 0.10976093262434006, 0.14410249888896942, 0.10117553919553757, 0.10857218503952026], "val_loss": [1.9679045677185059, 4.988684177398682, 2.3033950328826904, 2.3055150508880615, 2.3002066612243652, 2.303511619567871], "val_accuracy": [0.3316666781902313, 0.09700000286102295, 0.09833333641290665, 0.10433333367109299, 0.1003333330154419, 0.09833333641290665]}, "mapping_values": [1, 23, 12, 11, 4, 48, 32, 16, 6, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 25}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 5, 5], [3, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 4, 1], [91, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [7, 3, 1, 2, 2, 4, 8, 9, 7, 1, 6, 2, 8, 7, 1, 2, 9, 2, 7], [0, 1, 1, 6, 4, 3, 4, 6, 0, 5, 5, 1, 0, 6], [0, 38, 86, 98, 20], [1], [0], [7], [0]], "fitness": -0.1168571412563324, "mapping_values": [1, 1, 0, 1, 0, 11, 6, 5, 2, 33, 19, 14, 5, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, beta), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.negative(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, alpha), tf.math.pow(tf.math.sqrt(grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), grad), tf.math.add(tf.math.subtract(tf.math.divide_no_nan(sigma, tf.math.add(tf.math.sqrt(tf.math.add(grad, tf.math.subtract(tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), grad))), grad)), tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4011411666870117, 2.2341790199279785, 2.2038159370422363, 2.196955680847168, 2.3054404258728027, 2.30373215675354, 2.3034329414367676, 2.3031065464019775, 2.302833080291748, 2.2921485900878906, 2.3523781299591064, 2.3061470985412598, 2.303760290145874, 2.3033337593078613, 2.302816390991211], "accuracy": [0.2114647924900055, 0.18835029006004333, 0.19284109771251678, 0.1884823739528656, 0.1014397069811821, 0.09338264167308807, 0.09179764986038208, 0.10130762308835983, 0.09959053993225098, 0.14159291982650757, 0.19152027368545532, 0.10249637067317963, 0.09021265059709549, 0.10011887550354004, 0.1002509593963623], "val_loss": [2.3207814693450928, 2.291872501373291, 2.317521095275879, 2.30692458152771, 2.3034706115722656, 2.3029592037200928, 2.302610397338867, 2.3023502826690674, 2.3017807006835938, 2.2823503017425537, 2.30745267868042, 2.3032288551330566, 2.3028955459594727, 2.3024988174438477, 2.3025741577148438], "val_accuracy": [0.09666666388511658, 0.10199999809265137, 0.10166666656732559, 0.10300000011920929, 0.09933333098888397, 0.09866666793823242, 0.10166666656732559, 0.10199999809265137, 0.1133333370089531, 0.12066666781902313, 0.10166666656732559, 0.09866666793823242, 0.10100000351667404, 0.09866666793823242, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [9, 2, 3, 1, 3, 5], [1, 0, 1, 1, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [5, 2, 0, 5, 0, 3, 1], [16, 1], [0, 0, 1, 1, 1], [7, 3, 0, 2], [0, 7, 1, 4], [0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 5, 7, 1, 0, 3, 1, 2, 8, 6, 8, 5, 0, 1, 0, 8], [1, 7, 2, 6, 5, 0, 3, 5, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 12, 7, 5, 2, 5, 2, 3, 1, 26, 17, 9, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.multiply(grad, tf.math.subtract(beta, tf.math.add(grad, tf.math.sqrt(tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.square(tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma))))))))), tf.math.negative(grad)))), tf.math.sqrt(grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 1], [26, 39, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 4, 4, 0, 5, 5, 4], [2, 4, 0, 1, 0, 3, 1], [16, 1], [1, 1, 0, 1, 0, 0, 1, 1], [7, 3, 0, 2], [0, 5, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 9, 4, 5, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(grad, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.304084300994873, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09430722147226334, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]