[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8140000104904175, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2098968029022217, 1.6082415580749512, 1.1458656787872314, 0.9775831699371338, 0.89306640625, 0.8328083753585815, 0.805414080619812, 0.7588399648666382, 0.7222521305084229, 0.7280885577201843, 0.6954373717308044, 0.6577322483062744, 0.6841440200805664, 0.6302506923675537, 0.62661212682724, 0.6223518252372742, 0.6248286366462708, 0.6110828518867493, 0.574408233165741, 0.5889409184455872, 0.5556235313415527, 0.5851269960403442, 0.5532436966896057, 0.556455671787262, 0.5578617453575134, 0.5392261743545532, 0.5218358039855957, 0.5301926136016846, 0.5181267261505127, 0.5114927291870117, 0.5032818913459778], "accuracy": [0.26839256286621094, 0.5046889185905457, 0.6017699241638184, 0.6499801874160767, 0.6787742972373962, 0.6926429867744446, 0.6980583667755127, 0.7218332886695862, 0.7296261787414551, 0.7236824631690979, 0.7317395210266113, 0.7515519857406616, 0.7387399077415466, 0.7646281719207764, 0.7677981853485107, 0.763967752456665, 0.7635715007781982, 0.7683265209197998, 0.7817989587783813, 0.7827235460281372, 0.7942147850990295, 0.7745344042778015, 0.7915731072425842, 0.793950617313385, 0.7928939461708069, 0.798309326171875, 0.8103289008140564, 0.800818920135498, 0.8092722296714783, 0.8098005652427673, 0.8108572363853455], "val_loss": [1.9203128814697266, 1.084041714668274, 0.8586641550064087, 0.7698147892951965, 0.7107694745063782, 0.7520990371704102, 0.6914758086204529, 0.6363365650177002, 0.6414806246757507, 0.5897629261016846, 0.5968337059020996, 0.5883143544197083, 0.5787099599838257, 0.5439992547035217, 0.5431790947914124, 0.5527973771095276, 0.5350294709205627, 0.5269723534584045, 0.5101808309555054, 0.5270686149597168, 0.5187848210334778, 0.4927912950515747, 0.4995805621147156, 0.48726293444633484, 0.5033342242240906, 0.47200387716293335, 0.4827786982059479, 0.47553110122680664, 0.46948230266571045, 0.47083544731140137, 0.4861527383327484], "val_accuracy": [0.5973333120346069, 0.6710000038146973, 0.6863333582878113, 0.7166666388511658, 0.7393333315849304, 0.7129999995231628, 0.734666645526886, 0.750333309173584, 0.7400000095367432, 0.7870000004768372, 0.7799999713897705, 0.7689999938011169, 0.7789999842643738, 0.8050000071525574, 0.8003333210945129, 0.8006666898727417, 0.8083333373069763, 0.8076666593551636, 0.8166666626930237, 0.8019999861717224, 0.8013333082199097, 0.8296666741371155, 0.8186666369438171, 0.8236666917800903, 0.8166666626930237, 0.8303333520889282, 0.8246666789054871, 0.8293333053588867, 0.8286666870117188, 0.8266666531562805, 0.8159999847412109]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 2, 3, 5, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 4, 5, 5, 4], [2, 2, 0, 4, 3, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [4, 0, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.7942857146263123, "mapping_values": [1, 10, 5, 5, 3, 12, 6, 6, 1, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.pow(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.square(grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.239954948425293, 1.7122738361358643, 1.2031121253967285, 1.0162025690078735, 0.8972873687744141, 0.8402775526046753, 0.8183203935623169, 0.7640661597251892, 0.7162204384803772, 0.7000563144683838, 0.7196773290634155, 0.6822892427444458, 0.6695205569267273, 0.6493796110153198, 0.63568115234375, 0.6230374574661255, 0.6174487471580505, 0.6116851568222046, 0.606454074382782, 0.6074443459510803, 0.5934731960296631, 0.5723980069160461], "accuracy": [0.22493726015090942, 0.4571390748023987, 0.579447865486145, 0.640338122844696, 0.672170102596283, 0.6947563290596008, 0.6976621150970459, 0.7121912837028503, 0.7280412316322327, 0.7409853339195251, 0.7250033020973206, 0.7436270117759705, 0.7526086568832397, 0.7531369924545288, 0.7598732113838196, 0.7637035846710205, 0.7691190242767334, 0.7720248103141785, 0.772288978099823, 0.7726852297782898, 0.7770439982414246, 0.7825914621353149], "val_loss": [2.0349793434143066, 1.1780449151992798, 0.9828887581825256, 0.8165563344955444, 0.7465566992759705, 0.7179682850837708, 0.6923332810401917, 0.66032475233078, 0.6373754739761353, 0.6320503950119019, 0.6219369173049927, 0.6121975779533386, 0.5713440775871277, 0.5720610618591309, 0.562604546546936, 0.6059455275535583, 0.5348469018936157, 0.5842868685722351, 0.5772143006324768, 0.5417628884315491, 0.5204710960388184, 0.5546172857284546], "val_accuracy": [0.4180000126361847, 0.6316666603088379, 0.6116666793823242, 0.6959999799728394, 0.7070000171661377, 0.7390000224113464, 0.7423333525657654, 0.7393333315849304, 0.7450000047683716, 0.7436666488647461, 0.7580000162124634, 0.7553333044052124, 0.7850000262260437, 0.7870000004768372, 0.7833333611488342, 0.75, 0.7996666431427002, 0.7596666812896729, 0.7649999856948853, 0.7893333435058594, 0.7983333468437195, 0.7833333611488342]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], [6, 2, 3, 1, 3, 5, 2, 9], [0, 0, 1, 0, 2, 1], [26, 39, 39, 63], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 2, 4, 6, 0, 2, 5, 4], [2, 2, 0, 4, 0, 3, 3], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 2, 0, 3], [0, 1, 1, 2], [67], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 4, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad)), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3100857734680176, 2.312288522720337, 2.3203835487365723, 2.342756986618042, 2.9539031982421875, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09338264167308807, 0.09681680053472519, 0.09113723784685135, 0.09628847241401672, 0.10038304328918457, 0.10236428678035736, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3102691173553467, 2.314425468444824, 2.3218085765838623, 2.346675157546997, 145.5325164794922, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09200000017881393, 0.0949999988079071, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [2, 0, 1, 0, 2], [26, 72, 30], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 15, 8, 7, 2, 8, 4, 4, 1, 2, 1, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0878351628780365, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 6, 5], [0, 0, 1, 0, 2], [33, 57, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 3, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 1, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.math.square(beta)), tf.math.pow(beta, grad)), grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3899597298442453e+24, 7.468047201416444e+25, 1.3044515632243937e+24, 1.1142193708490759e+24, 3.673573245679187e+23, 7.585423372788856e+25], "accuracy": [0.09879804402589798, 0.10276053100824356, 0.1022322028875351, 0.10315678268671036, 0.10342095047235489, 0.10236428678035736], "val_loss": [1.6089453383504658e+24, 2.172646131901653e+24, 2.172646131901653e+24, 2.172646131901653e+24, 2.172646131901653e+24, 2.172646131901653e+24], "val_accuracy": [0.1080000028014183, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091]}}]