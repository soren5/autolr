[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8371428847312927, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2085413932800293, 1.5910520553588867, 1.107389211654663, 0.979327380657196, 0.8486676812171936, 0.8329287171363831, 0.763761579990387, 0.742412269115448, 0.720736026763916, 0.6974049210548401, 0.7005794644355774, 0.6402139663696289, 0.642137885093689, 0.6260386109352112, 0.6128373146057129, 0.6156258583068848, 0.5874882936477661, 0.5794040560722351, 0.5900081992149353, 0.5710760951042175, 0.5490044951438904, 0.5377602577209473, 0.5445677042007446, 0.5439413189888, 0.5214940905570984, 0.5220795273780823, 0.5036191940307617, 0.506662130355835, 0.5022688508033752, 0.483201801776886, 0.4863835573196411, 0.48211562633514404, 0.4759696125984192, 0.47157683968544006, 0.46929335594177246, 0.4549221098423004, 0.4634004831314087, 0.45752036571502686, 0.45316341519355774, 0.4476762115955353, 0.44195809960365295, 0.4333890676498413, 0.44066953659057617, 0.4272637367248535, 0.4316275417804718], "accuracy": [0.275260865688324, 0.5254259705543518, 0.6148461103439331, 0.6567164063453674, 0.6944921612739563, 0.6948884129524231, 0.720380425453186, 0.7257958054542542, 0.7326641082763672, 0.7416457533836365, 0.7397965788841248, 0.7630431652069092, 0.7601373791694641, 0.7697794437408447, 0.7729493975639343, 0.770439863204956, 0.778232753276825, 0.7840443849563599, 0.7779685854911804, 0.787082314491272, 0.7952714562416077, 0.7947431206703186, 0.7993659973144531, 0.7987055778503418, 0.8062343001365662, 0.8067626357078552, 0.811649739742279, 0.8140271902084351, 0.8156121969223022, 0.8235371708869934, 0.8189142942428589, 0.8204993009567261, 0.8248580098152161, 0.8257825970649719, 0.8298771381378174, 0.8341038227081299, 0.8297450542449951, 0.8319904804229736, 0.8329150676727295, 0.8364813327789307, 0.8411042094230652, 0.835160493850708, 0.8364813327789307, 0.8409721255302429, 0.8378021121025085], "val_loss": [1.9245431423187256, 1.1228729486465454, 0.9268928170204163, 0.7960740327835083, 0.8160350918769836, 0.7469254732131958, 0.6884879469871521, 0.6761900186538696, 0.6630963683128357, 0.6361643671989441, 0.6151304244995117, 0.6129847168922424, 0.6028593182563782, 0.5883307456970215, 0.6295952796936035, 0.5690328478813171, 0.5550101399421692, 0.5555979609489441, 0.533449649810791, 0.5310667157173157, 0.5493072271347046, 0.5157661437988281, 0.5283043384552002, 0.5110000967979431, 0.5250660181045532, 0.5032237768173218, 0.5147265791893005, 0.5125638842582703, 0.5038096904754639, 0.48695018887519836, 0.47685155272483826, 0.4745873212814331, 0.4710085093975067, 0.4798928201198578, 0.4811079800128937, 0.47095391154289246, 0.46995702385902405, 0.4608735740184784, 0.46611833572387695, 0.45307457447052, 0.44789689779281616, 0.46760767698287964, 0.45880386233329773, 0.4624297618865967, 0.4405818581581116], "val_accuracy": [0.6079999804496765, 0.6420000195503235, 0.690666675567627, 0.7239999771118164, 0.7113333344459534, 0.7193333506584167, 0.7406666874885559, 0.7416666746139526, 0.7509999871253967, 0.7739999890327454, 0.7763333320617676, 0.7609999775886536, 0.781333327293396, 0.7883333563804626, 0.7480000257492065, 0.7876666784286499, 0.7946666479110718, 0.7903333306312561, 0.8053333163261414, 0.8026666641235352, 0.7946666479110718, 0.8096666932106018, 0.8109999895095825, 0.812333345413208, 0.812333345413208, 0.8163333535194397, 0.7993333339691162, 0.8066666722297668, 0.8173333406448364, 0.8220000267028809, 0.8223333358764648, 0.8243333101272583, 0.8243333101272583, 0.8180000185966492, 0.8109999895095825, 0.8293333053588867, 0.8266666531562805, 0.8293333053588867, 0.82833331823349, 0.8376666903495789, 0.8346666693687439, 0.8226666450500488, 0.8276666402816772, 0.8259999752044678, 0.8346666693687439]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 3, 5, 0, 5, 5, 8], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [0, 2, 2, 4, 0, 3, 1], [71, 1], [0, 0, 0, 0, 0, 1, 1, 1], [7, 3, 0, 2, 9], [0, 1, 1, 4], [87, 22], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 10, 5, 3, 14, 8, 6, 2, 8, 5, 3, 2, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.square(tf.math.sqrt(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(beta, grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [2, 3, 1, 0, 0], [26, 39, 39], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [1, 2, 4, 5, 0, 5, 5, 4], [2, 2, 0, 4, 3, 3, 1], [16, 63], [0, 0, 0, 1, 0, 1, 1, 1], [7, 8, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 11, 7, 4, 1, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, grad), alpha), tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(beta, tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3036949634552, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [7, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 11, 6, 5, 2, 8, 4, 4, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303668975830078, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 1, 3, 1, 5, 5], [0, 0, 1, 0, 1], [26, 39, 39], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 2, 4, 1, 0, 8, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [2, 1, 1, 3], [17], [1], [0], [1], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 11, 6, 5, 3, 4, 2, 2, 0, 8, 4, 4, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.square(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(beta), tf.math.add(alpha, alpha)), sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3101954460144043, 2.3112056255340576, 2.3085880279541016, 2.310276508331299, 2.309343099594116, 2.3095431327819824], "accuracy": [0.08955223858356476, 0.09338264167308807, 0.09576013684272766, 0.08915598690509796, 0.09219389408826828, 0.09655263274908066], "val_loss": [2.308375835418701, 2.308375835418701, 2.308375835418701, 2.308375835418701, 2.308375835418701, 2.308375835418701], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]