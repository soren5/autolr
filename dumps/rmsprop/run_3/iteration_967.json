[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8225714564323425, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211810827255249, 1.6026018857955933, 1.113390326499939, 0.9793364405632019, 0.8554658889770508, 0.8524049520492554, 0.7532255053520203, 0.7467138767242432, 0.719106137752533, 0.7071883678436279, 0.6668843030929565, 0.6535963416099548, 0.6394016742706299, 0.6177690029144287, 0.6170263886451721, 0.6128195524215698, 0.5774210095405579, 0.5813771486282349, 0.581216037273407, 0.555528461933136, 0.5594287514686584, 0.5434479117393494, 0.5371134281158447, 0.5309364199638367, 0.5112376809120178, 0.5265138149261475, 0.5062920451164246, 0.5007879734039307, 0.5036159753799438, 0.490027517080307, 0.48552635312080383, 0.484646201133728, 0.4635511338710785, 0.4736451804637909, 0.4623032212257385, 0.4521563649177551, 0.4426734745502472, 0.4436832070350647, 0.45037317276000977, 0.44651341438293457, 0.44125527143478394, 0.4399116039276123, 0.42334139347076416], "accuracy": [0.2736758589744568, 0.5037643909454346, 0.6188086271286011, 0.6509047746658325, 0.6959450244903564, 0.6942279934883118, 0.7215691208839417, 0.7210407853126526, 0.7322678565979004, 0.7331924438476562, 0.754589855670929, 0.7555144429206848, 0.76106196641922, 0.7684586048126221, 0.7697794437408447, 0.7726852297782898, 0.7865539789199829, 0.783119797706604, 0.7862898111343384, 0.7931581139564514, 0.7854973077774048, 0.8014793395996094, 0.8021397590637207, 0.8038568496704102, 0.8096684813499451, 0.8053097128868103, 0.8170651197433472, 0.8138951063156128, 0.8099326491355896, 0.821820080280304, 0.8248580098152161, 0.8264430165290833, 0.8253863453865051, 0.8259146809577942, 0.8338396549224854, 0.8333113193511963, 0.8399154543876648, 0.8350284099578857, 0.8363492488861084, 0.8308017253875732, 0.8389908671379089, 0.8393871188163757, 0.8466516733169556], "val_loss": [1.9225645065307617, 1.1107511520385742, 0.860180675983429, 0.8128582239151001, 0.7713395953178406, 0.697746753692627, 0.6343316435813904, 0.6791182160377502, 0.6337910294532776, 0.6046144962310791, 0.5625221133232117, 0.5731180310249329, 0.5355749130249023, 0.5345402956008911, 0.5436064600944519, 0.5500069856643677, 0.5315020084381104, 0.5000166296958923, 0.49353063106536865, 0.4910445213317871, 0.5114839673042297, 0.520762026309967, 0.4942563474178314, 0.4669168293476105, 0.4770458936691284, 0.47084224224090576, 0.45138731598854065, 0.49086377024650574, 0.45102548599243164, 0.44529569149017334, 0.44401314854621887, 0.4479289650917053, 0.43286246061325073, 0.43383923172950745, 0.42810356616973877, 0.4237225651741028, 0.426291823387146, 0.4082272946834564, 0.42375317215919495, 0.4153861105442047, 0.4156211316585541, 0.4239175617694855, 0.40756240487098694], "val_accuracy": [0.5270000100135803, 0.6416666507720947, 0.6993333101272583, 0.7089999914169312, 0.715666651725769, 0.7289999723434448, 0.7646666765213013, 0.7176666855812073, 0.762666642665863, 0.7770000100135803, 0.793666660785675, 0.7916666865348816, 0.7990000247955322, 0.8019999861717224, 0.8046666383743286, 0.7829999923706055, 0.7916666865348816, 0.8106666803359985, 0.8169999718666077, 0.8146666884422302, 0.8029999732971191, 0.7990000247955322, 0.824999988079071, 0.82833331823349, 0.8216666579246521, 0.8256666660308838, 0.8353333473205566, 0.8159999847412109, 0.8363333344459534, 0.8330000042915344, 0.8376666903495789, 0.8306666612625122, 0.8443333506584167, 0.8349999785423279, 0.8426666855812073, 0.8483333587646484, 0.8433333039283752, 0.8533333539962769, 0.8450000286102295, 0.843999981880188, 0.8426666855812073, 0.843999981880188, 0.8489999771118164]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 6, 4, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [2, 9, 4, 9, 0, 5, 5, 4], [3, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2, 3, 4, 4], [0, 1, 1, 4, 0, 0, 0], [0, 94, 16, 87], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 5, 4, 1, 2, 14, 7, 7, 4, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(alpha, alpha), tf.math.pow(grad, tf.math.pow(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [6.771085679478428e+31, 95684.5546875, 170358.6875, 244448.0625, 318717.8125, 393059.75], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [64883.31640625, 139030.0, 213170.53125, 287304.96875, 361433.1875, 435555.25], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 5, 3, 5], [0, 0, 1, 0, 2], [26, 39, 68], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 1, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [7, 3, 0, 2, 1, 6, 8, 2, 3, 0, 4, 7, 3, 0], [4, 1, 1, 4, 4, 3, 0, 7, 4, 6, 4], [33], [0, 1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 3, 2, 1, 1, 25, 14, 11, 1, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, alpha)), tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.pow(grad, sigma)), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(grad, grad), tf.math.negative(grad))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09391097724437714, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 2, 3, 1, 2, 5], [0, 3, 1, 0, 2], [0, 70, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1], [2, 9, 9, 0, 0, 7, 5, 4], [2, 0, 3, 1, 0], [16, 1], [1, 1, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 3, 3, 0, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [107.20943450927734, 12469.2373046875, 207280.46875, 1465601.125, 6481896.5, 21422832.0], "accuracy": [0.09721305221319199, 0.09813763201236725, 0.09721305221319199, 0.10434553027153015, 0.09998679161071777, 0.10540219396352768], "val_loss": [930.469970703125, 46039.87109375, 489584.21875, 2661609.5, 9957565.0, 29353034.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 4, 1, 7, 5], [0, 0, 1, 3, 2], [26, 53, 39], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 0, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 0, 1, 1], [7, 3, 0, 2], [0, 6, 1, 4], [84], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 0, 5, 2, 3, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(alpha), grad)), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310410976409912, 2.310029983520508, 2.31033992767334, 2.3109781742095947, 2.3106889724731445, 2.3101844787597656], "accuracy": [0.0886276587843895, 0.09536388516426086, 0.09126931428909302, 0.09311848133802414, 0.0956280529499054, 0.09470347315073013], "val_loss": [2.3077733516693115, 2.3077733516693115, 2.3077733516693115, 2.3077733516693115, 2.3077733516693115, 2.3077733516693115], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]