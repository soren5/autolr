[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 9, 3, 5, 2, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1, 78], [0, 0, 0, 1, 0, 1, 1, 0, 1], [2, 3, 0, 3, 8], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8682857155799866, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 3, 9, 5, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.add(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), tf.math.sqrt(beta)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0963454246520996, 1.2886945009231567, 0.871271550655365, 0.7419908046722412, 0.6529368162155151, 0.6014928221702576, 0.554746150970459, 0.5288757085800171, 0.5072214603424072, 0.465374231338501, 0.45181703567504883, 0.4261474013328552, 0.40937140583992004, 0.41299742460250854, 0.40256208181381226, 0.39167383313179016, 0.38166093826293945, 0.36799973249435425, 0.3629496097564697, 0.3507647216320038, 0.3381422460079193, 0.3199073076248169, 0.31126946210861206, 0.307109534740448, 0.2864183783531189, 0.2835296094417572, 0.2824155390262604, 0.2714639902114868, 0.264655739068985, 0.2588462233543396, 0.24729974567890167, 0.24014954268932343, 0.2300412356853485, 0.2212071567773819], "accuracy": [0.29084664583206177, 0.5805045366287231, 0.6778497099876404, 0.7153612375259399, 0.7494386434555054, 0.7709681391716003, 0.7886672616004944, 0.800818920135498, 0.8059701323509216, 0.8267071843147278, 0.8319904804229736, 0.8438779711723328, 0.8487650156021118, 0.8467837572097778, 0.8498216867446899, 0.8500858545303345, 0.8553691506385803, 0.8589354157447815, 0.8669924736022949, 0.8729361891746521, 0.8762382864952087, 0.8799365758895874, 0.8786157965660095, 0.8815215826034546, 0.8919561505317688, 0.8914278149604797, 0.8938053250312805, 0.893541157245636, 0.8996169567108154, 0.9015982151031494, 0.906749427318573, 0.9122969508171082, 0.9121648669242859, 0.9142781496047974], "val_loss": [1.0925781726837158, 0.7909930944442749, 0.7144176363945007, 0.5963270664215088, 0.5655269622802734, 0.518647313117981, 0.49299755692481995, 0.4839927554130554, 0.4458474814891815, 0.4242435693740845, 0.4154525697231293, 0.4046207368373871, 0.42344117164611816, 0.4016001522541046, 0.39085957407951355, 0.39447513222694397, 0.37317708134651184, 0.3695204555988312, 0.37191492319107056, 0.362530916929245, 0.3583807051181793, 0.3498481810092926, 0.3563143014907837, 0.3489355742931366, 0.34966614842414856, 0.34060317277908325, 0.3485907018184662, 0.3439284563064575, 0.3427904546260834, 0.347586065530777, 0.34558653831481934, 0.3578869700431824, 0.3496890366077423, 0.3612722158432007], "val_accuracy": [0.6176666617393494, 0.7149999737739563, 0.7390000224113464, 0.7549999952316284, 0.7770000100135803, 0.7983333468437195, 0.8090000152587891, 0.815666675567627, 0.8323333263397217, 0.8456666469573975, 0.8446666598320007, 0.8489999771118164, 0.8510000109672546, 0.8539999723434448, 0.8606666922569275, 0.8576666712760925, 0.862666666507721, 0.8679999709129333, 0.8646666407585144, 0.8723333477973938, 0.8743333220481873, 0.8756666779518127, 0.8776666522026062, 0.8809999823570251, 0.8756666779518127, 0.8806666731834412, 0.8799999952316284, 0.871999979019165, 0.8853333592414856, 0.8830000162124634, 0.8833333253860474, 0.8773333430290222, 0.878000020980835, 0.8820000290870667]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.836571455001831, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2107815742492676, 1.6027979850769043, 1.1561824083328247, 0.9751983284950256, 0.8762587904930115, 0.8384298086166382, 0.7709715962409973, 0.7538766860961914, 0.7243910431861877, 0.7375945448875427, 0.6755494475364685, 0.6413819193840027, 0.6587281823158264, 0.6442268490791321, 0.6158909201622009, 0.6118892431259155, 0.6063839793205261, 0.5917022228240967, 0.5749971866607666, 0.5826398134231567, 0.5508995056152344, 0.5544451475143433, 0.5618830919265747, 0.5430077910423279, 0.5260568261146545, 0.5291251540184021, 0.5200692415237427, 0.5093278288841248, 0.4958840310573578, 0.4798085391521454, 0.5010563135147095, 0.48367199301719666, 0.4782431423664093, 0.48498818278312683, 0.46710532903671265, 0.451299250125885, 0.46180686354637146, 0.44461455941200256, 0.4624859392642975, 0.4451599419116974, 0.439730703830719, 0.4388454556465149, 0.4354507029056549, 0.41671523451805115, 0.4255836606025696, 0.43065720796585083, 0.42080414295196533, 0.413904070854187, 0.40870699286460876, 0.405029833316803, 0.4073874354362488, 0.3997350335121155, 0.39905300736427307, 0.392901211977005, 0.4015771746635437, 0.3874456584453583, 0.3865088224411011, 0.3826991319656372, 0.38668525218963623, 0.3751426637172699, 0.36642545461654663, 0.36624816060066223, 0.3636299669742584, 0.3638902008533478], "accuracy": [0.2615242302417755, 0.5025756359100342, 0.5933166146278381, 0.6539427042007446, 0.6848500967025757, 0.6936996579170227, 0.7240787148475647, 0.7244749665260315, 0.7326641082763672, 0.7228899598121643, 0.7500990629196167, 0.7609298825263977, 0.7549861073493958, 0.7582882046699524, 0.770439863204956, 0.7728173136711121, 0.774798572063446, 0.7745344042778015, 0.7844406366348267, 0.7833839654922485, 0.7988376617431641, 0.7910447716712952, 0.789988100528717, 0.7936864495277405, 0.8006868362426758, 0.8017435073852539, 0.8107251524925232, 0.8161405324935913, 0.8129705190658569, 0.8207634687423706, 0.81548011302948, 0.8190463781356812, 0.828292191028595, 0.817989706993103, 0.8290846943855286, 0.8319904804229736, 0.8300092220306396, 0.8347642421722412, 0.8330471515655518, 0.8392550349235535, 0.8441421389579773, 0.8384625315666199, 0.8384625315666199, 0.8455950617790222, 0.8430854678153992, 0.8459912538528442, 0.8437458872795105, 0.8516708612442017, 0.8466516733169556, 0.8539162874221802, 0.8520671129226685, 0.8532558679580688, 0.8499537706375122, 0.859199583530426, 0.8568220734596252, 0.8568220734596252, 0.8545766472816467, 0.8585391640663147, 0.8570862412452698, 0.8619733452796936, 0.86553955078125, 0.8659358024597168, 0.8671245574951172, 0.8640866279602051], "val_loss": [1.916245460510254, 1.1082087755203247, 0.8695785999298096, 0.7953295707702637, 0.7512708306312561, 0.6996210217475891, 0.6563025116920471, 0.6315600872039795, 0.668279230594635, 0.6162528395652771, 0.5665699243545532, 0.5705443620681763, 0.5454999208450317, 0.5475201606750488, 0.5622525811195374, 0.5328758358955383, 0.5061556100845337, 0.5059835314750671, 0.5024930834770203, 0.5010235905647278, 0.4860316514968872, 0.5612449049949646, 0.4819333553314209, 0.4894164204597473, 0.4620808959007263, 0.46770840883255005, 0.457518070936203, 0.4538586735725403, 0.4524151682853699, 0.4518679678440094, 0.43314221501350403, 0.43294772505760193, 0.42650920152664185, 0.4283948242664337, 0.4263059198856354, 0.4227255880832672, 0.422270804643631, 0.4265660345554352, 0.42839810252189636, 0.4164057970046997, 0.41510677337646484, 0.4334464371204376, 0.4021144211292267, 0.4017055928707123, 0.4073643684387207, 0.4282347559928894, 0.3906935751438141, 0.39583590626716614, 0.40310153365135193, 0.39261120557785034, 0.40090227127075195, 0.3836466372013092, 0.38531145453453064, 0.3895387053489685, 0.3822389841079712, 0.40835562348365784, 0.38341665267944336, 0.3749651312828064, 0.37806588411331177, 0.3789396286010742, 0.37445777654647827, 0.38543498516082764, 0.38165003061294556, 0.3814361095428467], "val_accuracy": [0.574999988079071, 0.640999972820282, 0.7049999833106995, 0.7096666693687439, 0.7243333458900452, 0.749666690826416, 0.7433333396911621, 0.7703333497047424, 0.7423333525657654, 0.7639999985694885, 0.7773333191871643, 0.7816666960716248, 0.796999990940094, 0.7826666831970215, 0.7786666750907898, 0.8046666383743286, 0.8196666836738586, 0.8113333582878113, 0.8180000185966492, 0.8140000104904175, 0.8276666402816772, 0.7863333225250244, 0.8196666836738586, 0.8166666626930237, 0.8346666693687439, 0.8299999833106995, 0.840666651725769, 0.8349999785423279, 0.8366666436195374, 0.831333339214325, 0.843999981880188, 0.8473333120346069, 0.8479999899864197, 0.840666651725769, 0.8456666469573975, 0.8493333458900452, 0.8483333587646484, 0.8486666679382324, 0.8460000157356262, 0.8526666760444641, 0.8460000157356262, 0.8396666646003723, 0.8576666712760925, 0.8533333539962769, 0.8486666679382324, 0.8379999995231628, 0.859000027179718, 0.8569999933242798, 0.8519999980926514, 0.8550000190734863, 0.8516666889190674, 0.862666666507721, 0.8573333621025085, 0.8600000143051147, 0.8636666536331177, 0.8506666421890259, 0.862666666507721, 0.8629999756813049, 0.8646666407585144, 0.8566666841506958, 0.862666666507721, 0.859000027179718, 0.8610000014305115, 0.862333357334137]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [2, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 3, 0, 2, 0, 3, 1], [18, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 1, 0, 3], [0, 1, 2, 2], [15], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(grad), tf.math.square(tf.math.pow(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), beta))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, beta)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [29720.68359375, 4514004.0, 76860992.0, 531515776.0, 2368241152.0, 7912172544.0], "accuracy": [0.09879804402589798, 0.09945846349000931, 0.09576013684272766, 0.1018359512090683, 0.09985470771789551, 0.09457138925790787], "val_loss": [304807.96875, 16342554.0, 175245520.0, 955078912.0, 3576935936.0, 10550055936.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 2, 9, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 1, 3, 0, 5, 4], [2, 2, 0, 2, 1, 3, 1], [16, 1], [0, 1, 0, 1, 0, 1, 1, 1], [9, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 4, 13, 7, 6, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.square(beta))), alpha), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [61025744.0, 5047627776.0, 43401916416.0, 162116550656.0, 402794512384.0, 826077347840.0], "accuracy": [0.1002509593963623, 0.09853387624025345, 0.10011887550354004, 0.10276053100824356, 0.1018359512090683, 0.10236428678035736], "val_loss": [540768320.0, 14207294464.0, 74146742272.0, 216584011776.0, 476950200320.0, 890639482880.0], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 5, 3, 1, 4, 5], [2, 1, 2, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 7, 4, 3, 0, 13, 7, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.subtract(grad, alpha), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3103649616241455, 2.3095154762268066, 2.309473991394043, 2.3090336322784424, 2.310168504714966, 2.310065984725952], "accuracy": [0.0882314071059227, 0.09060890227556229, 0.09298639744520187, 0.09153348207473755, 0.08968432247638702, 0.08902391046285629], "val_loss": [2.3090686798095703, 2.309041976928711, 2.309002161026001, 2.308948040008545, 2.308880090713501, 2.3087973594665527], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09266666322946548, 0.09266666322946548, 0.09233333170413971]}}]