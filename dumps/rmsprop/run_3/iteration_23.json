[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8385714292526245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2071945667266846, 1.5826530456542969, 1.1420754194259644, 0.9602375626564026, 0.9024509191513062, 0.7964468002319336, 0.7708581686019897, 0.7309776544570923, 0.7190178632736206, 0.7079097628593445, 0.6645691990852356, 0.6718683838844299, 0.6264382600784302, 0.6278120875358582, 0.6372507214546204, 0.5972231030464172, 0.6008566617965698, 0.5669425129890442, 0.5704490542411804, 0.5715922117233276, 0.5426824688911438, 0.5361405611038208, 0.5307276248931885, 0.5281819701194763, 0.5176852941513062, 0.515248715877533, 0.50690758228302, 0.4947645664215088, 0.4920397400856018, 0.481381893157959, 0.4822407364845276, 0.4789578318595886, 0.47417116165161133, 0.4669131934642792, 0.4531499147415161, 0.454037606716156], "accuracy": [0.2779025137424469, 0.5168405771255493, 0.5976753234863281, 0.6583014130592346, 0.6773213744163513, 0.7091533541679382, 0.7211728692054749, 0.7305507659912109, 0.7296261787414551, 0.7357020378112793, 0.7524765729904175, 0.7490423917770386, 0.7709681391716003, 0.7720248103141785, 0.7646281719207764, 0.7732135653495789, 0.7766477465629578, 0.789459764957428, 0.789988100528717, 0.7882710099220276, 0.7994980812072754, 0.8005547523498535, 0.806630551815033, 0.8043851256370544, 0.8083476424217224, 0.8140271902084351, 0.8150838613510132, 0.8202351331710815, 0.8187822103500366, 0.8264430165290833, 0.8216879963874817, 0.8231409192085266, 0.8249900937080383, 0.8251221776008606, 0.8315942287445068, 0.8333113193511963], "val_loss": [1.9148222208023071, 1.0891375541687012, 0.9056211113929749, 0.8016678094863892, 0.760240912437439, 0.7038585543632507, 0.6770634055137634, 0.6463528871536255, 0.6302468180656433, 0.6203481554985046, 0.6302914023399353, 0.590358316898346, 0.618607759475708, 0.5765666365623474, 0.5648512244224548, 0.5980960130691528, 0.570862352848053, 0.5760148167610168, 0.5375343561172485, 0.559295654296875, 0.5193827152252197, 0.5377711653709412, 0.5133692026138306, 0.5084794163703918, 0.5028876662254333, 0.5047078728675842, 0.5013857483863831, 0.4947488605976105, 0.4889155328273773, 0.4944532513618469, 0.47344210743904114, 0.4975704252719879, 0.47418901324272156, 0.4700135588645935, 0.47032633423805237, 0.4672855734825134], "val_accuracy": [0.550000011920929, 0.6420000195503235, 0.6753333210945129, 0.6966666579246521, 0.7206666469573975, 0.7390000224113464, 0.7423333525657654, 0.7590000033378601, 0.7583333253860474, 0.7606666684150696, 0.7576666474342346, 0.7786666750907898, 0.768666684627533, 0.7796666622161865, 0.7956666946411133, 0.7693333625793457, 0.7820000052452087, 0.7749999761581421, 0.8009999990463257, 0.7850000262260437, 0.8076666593551636, 0.7979999780654907, 0.812333345413208, 0.8190000057220459, 0.8153333067893982, 0.8230000138282776, 0.812666654586792, 0.8236666917800903, 0.8263333439826965, 0.8223333358764648, 0.8383333086967468, 0.8216666579246521, 0.8303333520889282, 0.8303333520889282, 0.8253333568572998, 0.8273333311080933]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8122857213020325, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2058985233306885, 1.59256911277771, 1.1289379596710205, 0.9829846024513245, 0.8594532012939453, 0.8266343474388123, 0.793644368648529, 0.7619802355766296, 0.7078683376312256, 0.7081173062324524, 0.6749086380004883, 0.6754955649375916, 0.6402954459190369, 0.6417791843414307, 0.6145705580711365, 0.622705340385437, 0.5870839953422546, 0.5750794410705566, 0.5830755233764648, 0.5707139372825623, 0.5546483993530273, 0.5492628812789917, 0.529262363910675, 0.5476329922676086, 0.5234613418579102, 0.5105031728744507, 0.4978478252887726, 0.5015899538993835, 0.49546903371810913, 0.4989170730113983, 0.4825805425643921, 0.46906614303588867, 0.4748973846435547, 0.47225767374038696, 0.462133526802063, 0.4578858017921448, 0.45449864864349365, 0.450017511844635, 0.43431907892227173, 0.44150325655937195, 0.4348282217979431], "accuracy": [0.26997753977775574, 0.5031039714813232, 0.6056002974510193, 0.6429798007011414, 0.6894729733467102, 0.6934354901313782, 0.7055870890617371, 0.7131158113479614, 0.7407211661338806, 0.7362303733825684, 0.7445515990257263, 0.746268630027771, 0.7593448758125305, 0.7601373791694641, 0.7736098170280457, 0.7618544697761536, 0.7790252566337585, 0.7765156626701355, 0.7783648371696472, 0.7889314293861389, 0.7948752045631409, 0.7944789528846741, 0.8033285140991211, 0.7923656105995178, 0.8016114234924316, 0.8087438941001892, 0.8144234418869019, 0.813498854637146, 0.8149517774581909, 0.8171972036361694, 0.8208954930305481, 0.8227446675300598, 0.8244617581367493, 0.8212917447090149, 0.8305375576019287, 0.8259146809577942, 0.8335754871368408, 0.8290846943855286, 0.8396512866020203, 0.8335754871368408, 0.8343679904937744], "val_loss": [1.909622073173523, 1.084405779838562, 0.8903975486755371, 0.7619208097457886, 0.7754042744636536, 0.6953588724136353, 0.6691376566886902, 0.6390049457550049, 0.6284233927726746, 0.5990373492240906, 0.5724342465400696, 0.5797941088676453, 0.5482284426689148, 0.5503446459770203, 0.5356175303459167, 0.5282116532325745, 0.536942720413208, 0.5068140029907227, 0.5115815997123718, 0.48939892649650574, 0.5277099609375, 0.48490580916404724, 0.5212517380714417, 0.4932176470756531, 0.4631090462207794, 0.462093710899353, 0.49952638149261475, 0.4549165368080139, 0.454932302236557, 0.4479483664035797, 0.45144450664520264, 0.4324738681316376, 0.4343172311782837, 0.4336753189563751, 0.445422887802124, 0.42234620451927185, 0.43382298946380615, 0.42957109212875366, 0.43093961477279663, 0.4263462722301483, 0.4231783449649811], "val_accuracy": [0.5490000247955322, 0.6076666712760925, 0.6656666398048401, 0.715666651725769, 0.6893333196640015, 0.7246666550636292, 0.7213333249092102, 0.7596666812896729, 0.7606666684150696, 0.7683333158493042, 0.777999997138977, 0.7756666541099548, 0.7926666736602783, 0.7863333225250244, 0.7943333387374878, 0.7993333339691162, 0.7753333449363708, 0.8169999718666077, 0.8063333630561829, 0.8103333115577698, 0.8023333549499512, 0.8213333487510681, 0.7956666946411133, 0.8176666498184204, 0.82833331823349, 0.8273333311080933, 0.8033333420753479, 0.8336666822433472, 0.8306666612625122, 0.8360000252723694, 0.8389999866485596, 0.8416666388511658, 0.8420000076293945, 0.8399999737739563, 0.8336666822433472, 0.8460000157356262, 0.8423333168029785, 0.8426666855812073, 0.8443333506584167, 0.8456666469573975, 0.8456666469573975]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 8], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 2, 2], [0, 0, 3, 1, 0], [16, 1], [1, 0, 1, 1], [4, 7], [0, 1], [0], [0, 1], [0], [7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 4, 2, 2, 2, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [83, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 7, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 1, 1], [0, 7, 2], [0, 6, 3], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 12, 7, 5, 2, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 2], [0, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 2, 0, 6, 3, 8, 1], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1, 0, 0, 1, 1], [7, 7, 0, 2], [0, 6, 7, 4], [56], [0, 0, 1], [0, 8], [2], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 0, 8, 4, 4, 1, 3, 2, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(beta))", "other_info": {"loss": [2.3093178272247314, 2.3085567951202393, 2.309080123901367, 2.3086109161376953, 2.3101682662963867, 2.3089096546173096], "accuracy": [0.09457138925790787, 0.09536388516426086, 0.09391097724437714, 0.09126931428909302, 0.09047681838274002, 0.09681680053472519], "val_loss": [2.308467388153076, 2.308467388153076, 2.308467388153076, 2.308467388153076, 2.308467388153076, 2.308467388153076], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 1, 8, 2], [2, 0, 5, 5, 0], [16, 1], [1, 1, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 7, 4, 3, 2, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3094775676727295, 2.3085923194885254, 2.3094072341918945, 2.3102855682373047, 2.3091769218444824, 2.3089914321899414], "accuracy": [0.0936468094587326, 0.09232597798109055, 0.09668471664190292, 0.08796724677085876, 0.09179764986038208, 0.09721305221319199], "val_loss": [2.3091304302215576, 2.3091304302215576, 2.3091304302215576, 2.3091304302215576, 2.3091304302215576, 2.3091304302215576], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]