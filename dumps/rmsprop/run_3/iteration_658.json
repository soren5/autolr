[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.7911428809165955, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2123429775238037, 1.6076643466949463, 1.1582111120224, 0.9740610718727112, 0.8872073888778687, 0.8458483219146729, 0.7909019589424133, 0.7586370706558228, 0.7622100710868835, 0.7004982233047485, 0.72688889503479, 0.6906523108482361, 0.6555029153823853, 0.647490382194519, 0.6312427520751953, 0.6309806108474731, 0.6151623725891113], "accuracy": [0.27301543951034546, 0.5017831325531006, 0.5941091179847717, 0.6573768258094788, 0.6802271604537964, 0.693831741809845, 0.717870831489563, 0.7210407853126526, 0.7217012047767639, 0.7397965788841248, 0.7304186820983887, 0.7401928305625916, 0.7557786107063293, 0.7577598690986633, 0.7662131786346436, 0.7623828053474426, 0.7725531458854675], "val_loss": [1.9263502359390259, 1.1397873163223267, 0.9202762842178345, 0.7968577742576599, 0.7576260566711426, 0.6889060735702515, 0.6653181314468384, 0.7311967015266418, 0.616351842880249, 0.6516237854957581, 0.5921351909637451, 0.5695090293884277, 0.5965591073036194, 0.6042243838310242, 0.5968322157859802, 0.5959234833717346, 0.5500164031982422], "val_accuracy": [0.5473333597183228, 0.5889999866485596, 0.67166668176651, 0.70333331823349, 0.7226666808128357, 0.753333330154419, 0.7526666522026062, 0.7123333215713501, 0.7670000195503235, 0.7436666488647461, 0.765666663646698, 0.7860000133514404, 0.762666642665863, 0.7563333511352539, 0.7713333368301392, 0.7646666765213013, 0.7816666960716248]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 1], [26, 39, 38], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 6, 7], [1, 4, 0, 2, 0, 3, 1], [16, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 3, 0, 2, 9, 2], [0, 6, 1, 4], [0, 62], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 4, 2, 2, 0, 10, 6, 4, 2, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.add(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303290367126465, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [9, 2, 3, 1, 3, 5], [0, 3, 0, 2, 2], [62, 39, 39], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 8, 6, 4], [2, 2, 0, 4, 0, 5, 1], [16, 1], [0, 0, 0, 1, 1, 1, 1, 1], [7, 3, 0, 2], [7, 1, 1, 1], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 0, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [35367301120.0, 5441894481920.0, 93264292085760.0, 667410336055296.0, 2896184762957824.0, 9576728024317952.0], "accuracy": [0.09985470771789551, 0.10210011899471283, 0.10276053100824356, 0.10315678268671036, 0.09906221181154251, 0.09391097724437714], "val_loss": [370797641728.0, 19989536964608.0, 214566483001344.0, 1169826819080192.0, 4381018307952640.0, 1.2922184351612928e+16], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [9, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [1, 0, 0, 1, 0, 0, 0, 0], [7, 4, 0, 2], [5, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 12, 7, 5, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.pow(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.square(tf.math.square(grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [29818.244140625, 4355775.0, 76653784.0, 539488512.0, 2353878272.0, 7754329600.0], "accuracy": [0.09919429570436478, 0.10421344637870789, 0.09576013684272766, 0.09919429570436478, 0.10210011899471283, 0.09853387624025345], "val_loss": [304502.5625, 16325495.0, 175061328.0, 954072896.0, 3573164288.0, 10538910720.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [3, 2, 0, 1, 3, 5, 7, 3, 0, 6, 9, 3, 6, 3, 9, 0, 3, 1, 7, 7, 8], [0, 0, 1, 0, 0, 3, 2, 1, 3, 1, 1, 1, 1], [26, 39, 39, 91, 51, 69], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 4, 5, 7, 4], [2, 2, 0, 4, 0, 3, 1], [90, 1], [0, 1, 0, 1, 0, 1, 1, 0], [7, 7, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 34, 21, 13, 6, 1, 0, 1, 0, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), grad), tf.math.negative(alpha)), tf.math.multiply(grad, tf.math.subtract(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(alpha)), alpha))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.309924602508545, 2.3101511001586914, 2.30991792678833, 2.31081223487854, 2.311412811279297, 2.312497615814209], "accuracy": [0.0944393053650856, 0.08836349099874496, 0.09298639744520187, 0.08889182657003403, 0.08757099509239197, 0.08968432247638702], "val_loss": [2.310150623321533, 2.310150623321533, 2.310150623321533, 2.310150623321533, 2.310150623321533, 2.310150623321533], "val_accuracy": [0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914]}}]