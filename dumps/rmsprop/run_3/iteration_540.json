[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 4, 0, 3, 5, 5], [2, 0, 3, 4, 0], [16, 1], [0, 0, 1, 1], [0, 3], [0, 1], [0], [1], [0], [1], [0]], "fitness": -0.8640000224113464, "mapping_values": [1, 10, 5, 5, 3, 11, 7, 4, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(beta, tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.square(tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.094151735305786, 1.3882733583450317, 0.9449622631072998, 0.7542887330055237, 0.6653364300727844, 0.6123809814453125, 0.571014404296875, 0.5415046811103821, 0.5136042237281799, 0.48325100541114807, 0.45103219151496887, 0.43477341532707214, 0.42370668053627014, 0.4172060489654541, 0.39630377292633057, 0.38267725706100464, 0.37752974033355713, 0.36027809977531433, 0.3463052809238434, 0.3435782790184021, 0.3393411934375763, 0.3196658492088318, 0.31609436869621277, 0.3181915283203125, 0.3138122856616974, 0.2917603552341461, 0.2874463200569153, 0.27969828248023987, 0.2698565721511841, 0.2599274516105652, 0.25458863377571106, 0.268848717212677, 0.2537553608417511, 0.2403108775615692, 0.24829329550266266, 0.2326507717370987, 0.2241906225681305, 0.2228294163942337, 0.22097860276699066, 0.20976707339286804, 0.2046913504600525, 0.21091116964817047, 0.2057671695947647, 0.19242450594902039, 0.18294739723205566, 0.1845606416463852], "accuracy": [0.2851670980453491, 0.5489367246627808, 0.64667809009552, 0.7067758440971375, 0.7434949278831482, 0.7548540234565735, 0.7779685854911804, 0.789459764957428, 0.8068947196006775, 0.8158763647079468, 0.8226125836372375, 0.8379341959953308, 0.8403117060661316, 0.8413683772087097, 0.8490291833877563, 0.8512746095657349, 0.8558974862098694, 0.8642187118530273, 0.8654074668884277, 0.8679170608520508, 0.8671245574951172, 0.8775591254234314, 0.8751816153526306, 0.8787478804588318, 0.8836349248886108, 0.8857482671737671, 0.8899748921394348, 0.8905032277107239, 0.8924844861030579, 0.9027869701385498, 0.901862382888794, 0.8956544995307922, 0.9006736278533936, 0.9056927561759949, 0.901862382888794, 0.9097873568534851, 0.9124290347099304, 0.9115044474601746, 0.9108440279960632, 0.9166556596755981, 0.9190331697463989, 0.9158631563186646, 0.9196935892105103, 0.9228635430335999, 0.9249768853187561, 0.9260335564613342], "val_loss": [1.0477627515792847, 0.9874409437179565, 0.6845077276229858, 0.6230834126472473, 0.5759083032608032, 0.5278292894363403, 0.5029460191726685, 0.478335440158844, 0.44320377707481384, 0.4312228262424469, 0.40777865052223206, 0.3948100507259369, 0.39689648151397705, 0.3989790081977844, 0.3827349841594696, 0.3775750398635864, 0.3734096586704254, 0.3735611140727997, 0.3611333966255188, 0.36832085251808167, 0.3563389480113983, 0.3623865842819214, 0.3597482442855835, 0.3594178855419159, 0.3642641305923462, 0.35348454117774963, 0.36682093143463135, 0.3597624599933624, 0.34932851791381836, 0.36092066764831543, 0.37269604206085205, 0.3598594665527344, 0.36875495314598083, 0.35989511013031006, 0.3553566038608551, 0.36101233959198, 0.36627131700515747, 0.3812447786331177, 0.3623507618904114, 0.365321546792984, 0.36226433515548706, 0.3815944790840149, 0.3795269727706909, 0.37946492433547974, 0.3673567771911621, 0.3782532513141632], "val_accuracy": [0.6520000100135803, 0.6643333435058594, 0.7296666502952576, 0.7516666650772095, 0.7676666378974915, 0.7940000295639038, 0.796999990940094, 0.8100000023841858, 0.8306666612625122, 0.8379999995231628, 0.8503333330154419, 0.8610000014305115, 0.8569999933242798, 0.8566666841506958, 0.8606666922569275, 0.8666666746139526, 0.8633333444595337, 0.8659999966621399, 0.8730000257492065, 0.8713333606719971, 0.8706666827201843, 0.8723333477973938, 0.8769999742507935, 0.8736666440963745, 0.8766666650772095, 0.8803333044052124, 0.8830000162124634, 0.8759999871253967, 0.8813333511352539, 0.8786666393280029, 0.8799999952316284, 0.8836666941642761, 0.8816666603088379, 0.8799999952316284, 0.8826666474342346, 0.8843333125114441, 0.8823333382606506, 0.8840000033378601, 0.8880000114440918, 0.8826666474342346, 0.890666663646698, 0.8793333172798157, 0.8830000162124634, 0.8846666812896729, 0.8849999904632568, 0.8899999856948853]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8360000252723694, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2105624675750732, 1.6008058786392212, 1.1223838329315186, 1.0168005228042603, 0.8768700361251831, 0.8579704165458679, 0.7964529395103455, 0.7468286156654358, 0.7362509965896606, 0.708617627620697, 0.6935144066810608, 0.682515025138855, 0.647864043712616, 0.6499935984611511, 0.619983971118927, 0.6292982697486877, 0.594752311706543, 0.5951658487319946, 0.5650019645690918, 0.5672809481620789, 0.5610376596450806, 0.5505775213241577, 0.5377082228660583, 0.5573602318763733, 0.5225692391395569, 0.5169146656990051, 0.5236977934837341, 0.5097032189369202, 0.4947180151939392, 0.5041594505310059, 0.49812033772468567, 0.48764026165008545, 0.4713086485862732, 0.4873664975166321, 0.4820120930671692, 0.47227245569229126, 0.4633113145828247, 0.45611488819122314, 0.4476025700569153, 0.44139403104782104, 0.44412317872047424, 0.43941712379455566, 0.4428122043609619, 0.4382038712501526, 0.42562296986579895, 0.42671433091163635, 0.42896658182144165, 0.4109469950199127, 0.4147239029407501, 0.4144836366176605, 0.3997282385826111, 0.4006596803665161], "accuracy": [0.2591467499732971, 0.5132743120193481, 0.6009774208068848, 0.6310923099517822, 0.683000922203064, 0.6852463483810425, 0.7041342258453369, 0.722757875919342, 0.7191916704177856, 0.7325320243835449, 0.7378153204917908, 0.7425703406333923, 0.7565711140632629, 0.7504953145980835, 0.7664773464202881, 0.7589486241340637, 0.7734777331352234, 0.7707040309906006, 0.7881389260292053, 0.7853652238845825, 0.7862898111343384, 0.7951393723487854, 0.7996301651000977, 0.7873464822769165, 0.8021397590637207, 0.8049134612083435, 0.7996301651000977, 0.8090080618858337, 0.8113855719566345, 0.8072909712791443, 0.8079513907432556, 0.8131026029586792, 0.8232730031013489, 0.8112534880638123, 0.819970965385437, 0.8232730031013489, 0.828820526599884, 0.8253863453865051, 0.8280280232429504, 0.8341038227081299, 0.8350284099578857, 0.839519202709198, 0.8337075710296631, 0.8355567455291748, 0.844010055065155, 0.8355567455291748, 0.8424250483512878, 0.8500858545303345, 0.8413683772087097, 0.8469158411026001, 0.8536521196365356, 0.8514066934585571], "val_loss": [1.9243245124816895, 1.1003987789154053, 0.977674663066864, 0.801906406879425, 0.8462059497833252, 0.7102420926094055, 0.6887331604957581, 0.6957916021347046, 0.6323760747909546, 0.6423095464706421, 0.6272804141044617, 0.620639443397522, 0.5773565173149109, 0.6065847277641296, 0.5655696392059326, 0.5591340065002441, 0.5362887382507324, 0.5290501117706299, 0.5289891958236694, 0.5107880234718323, 0.5054669380187988, 0.5099841952323914, 0.5026155710220337, 0.5100083947181702, 0.4944033920764923, 0.49578312039375305, 0.5132678747177124, 0.47011590003967285, 0.4643356204032898, 0.4907616078853607, 0.468830406665802, 0.458365261554718, 0.468382328748703, 0.4632794260978699, 0.4586874544620514, 0.44796857237815857, 0.4508955776691437, 0.42926689982414246, 0.42708757519721985, 0.43228092789649963, 0.42217785120010376, 0.43909314274787903, 0.4357542395591736, 0.41769319772720337, 0.41259485483169556, 0.4157995283603668, 0.41540151834487915, 0.41847214102745056, 0.42810294032096863, 0.4072646498680115, 0.42505019903182983, 0.4040871560573578], "val_accuracy": [0.5720000267028809, 0.6546666622161865, 0.6073333621025085, 0.7110000252723694, 0.6499999761581421, 0.734000027179718, 0.7413333058357239, 0.7153333425521851, 0.7463333606719971, 0.7586666941642761, 0.7459999918937683, 0.7526666522026062, 0.7799999713897705, 0.7563333511352539, 0.7853333353996277, 0.7900000214576721, 0.7833333611488342, 0.7956666946411133, 0.7863333225250244, 0.8053333163261414, 0.8096666932106018, 0.8033333420753479, 0.7983333468437195, 0.8006666898727417, 0.8069999814033508, 0.8149999976158142, 0.8019999861717224, 0.8159999847412109, 0.8206666707992554, 0.8056666851043701, 0.8216666579246521, 0.8289999961853027, 0.8133333325386047, 0.8259999752044678, 0.8276666402816772, 0.8339999914169312, 0.8296666741371155, 0.8423333168029785, 0.8443333506584167, 0.8360000252723694, 0.8420000076293945, 0.8356666564941406, 0.8339999914169312, 0.846666693687439, 0.8483333587646484, 0.8463333249092102, 0.8533333539962769, 0.843666672706604, 0.8346666693687439, 0.8513333201408386, 0.8423333168029785, 0.8519999980926514]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 2, 2], [26, 39, 39], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 4, 0, 3, 5, 5], [2, 0, 3, 4, 0], [16, 1], [1, 0, 0, 1], [0, 3], [4, 1], [0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 4, 3, 7, 4, 4, 7, 8, 1, 5, 8, 8, 7, 0], [1, 0, 4, 6, 7, 6, 0, 4, 5], [0, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 1, 0, 1, 0, 1, 0, 1, 0, 23, 14, 9, 2], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.multiply(alpha, tf.math.add(tf.math.pow(tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.subtract(tf.math.square(grad), tf.math.sqrt(tf.math.sqrt(tf.math.add(grad, tf.math.negative(grad))))))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), grad)), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10766666382551193, 0.10766666382551193, 0.10766666382551193, 0.10766666382551193, 0.10766666382551193, 0.10766666382551193]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 3, 1, 8, 5], [1, 0, 1, 0, 2], [0, 39, 39], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 7, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 50], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 7, 2, 7, 8, 1, 4, 7, 9], [0, 6, 3, 6, 0, 6], [0, 88, 85], [0, 0, 0, 0, 1, 1], [0, 6, 9, 6], [2, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 2, 1, 1, 0, 15, 9, 6, 3, 6, 4, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(grad), tf.math.subtract(tf.math.pow(sigma, grad), tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(beta, sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [3, 0, 1, 0, 2], [26, 39, 72], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [7, 2, 4, 0, 3, 5, 5], [2, 2, 3, 4, 0], [16, 1], [0, 1, 1, 1], [3, 3], [0, 1], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 7, 3, 4, 0, 3, 1, 2, 1, 2, 1, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.pow(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 4, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 4, 0, 3, 5, 1], [2, 0, 3, 4, 0], [16, 1], [1, 1, 0, 0], [0, 3], [0, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303917646408081, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]