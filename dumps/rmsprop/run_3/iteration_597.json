[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [2, 2, 4, 6, 3, 5, 5, 2, 5, 7, 4, 9], [2, 2, 0, 4, 0, 3, 1, 3], [16, 1, 71], [0, 0, 0, 1, 0, 1, 1, 1], [0, 7, 7, 2], [0, 6, 6, 0], [0, 68], [1], [0], [1], [0]], "fitness": -0.8717142939567566, "mapping_values": [1, 10, 5, 5, 3, 20, 12, 8, 3, 8, 4, 4, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(grad, tf.math.pow(alpha, grad)))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1086058616638184, 1.2092599868774414, 0.8675811290740967, 0.7330759763717651, 0.6472359299659729, 0.5882971882820129, 0.5622535943984985, 0.5283945202827454, 0.504242479801178, 0.4768378436565399, 0.44613802433013916, 0.43243327736854553, 0.41318491101264954, 0.40372011065483093, 0.3850686252117157, 0.37694722414016724, 0.36784982681274414, 0.360460102558136, 0.35195356607437134, 0.3332546055316925, 0.31934407353401184, 0.3099307119846344, 0.3148147463798523, 0.30086225271224976, 0.28902605175971985, 0.3012200891971588, 0.29116231203079224, 0.2845350205898285, 0.2657979130744934], "accuracy": [0.29322415590286255, 0.5801082849502563, 0.6730946898460388, 0.720380425453186, 0.750231146812439, 0.7761194109916687, 0.7823272943496704, 0.7976489067077637, 0.8094043135643005, 0.817461371421814, 0.8290846943855286, 0.8393871188163757, 0.8432175517082214, 0.8536521196365356, 0.8584070801734924, 0.8602562546730042, 0.8594637513160706, 0.8654074668884277, 0.8676528930664062, 0.873860776424408, 0.8784837126731873, 0.8792761564254761, 0.8809932470321655, 0.8865407705307007, 0.8939374089241028, 0.8887861371040344, 0.8825782537460327, 0.8944657444953918, 0.8989565372467041], "val_loss": [1.088018536567688, 0.7856868505477905, 0.6846418380737305, 0.5656459331512451, 0.5347966551780701, 0.5180050730705261, 0.47896459698677063, 0.4663708508014679, 0.4437192678451538, 0.4235422909259796, 0.40794217586517334, 0.3982260823249817, 0.3887570798397064, 0.3699662387371063, 0.3766413629055023, 0.37760570645332336, 0.3695996105670929, 0.3565162718296051, 0.3498848080635071, 0.3473506271839142, 0.342357337474823, 0.35200926661491394, 0.34038183093070984, 0.33526718616485596, 0.3520803153514862, 0.3462543189525604, 0.34169265627861023, 0.33734631538391113, 0.3430655002593994], "val_accuracy": [0.6499999761581421, 0.7086666822433472, 0.7436666488647461, 0.7823333144187927, 0.7910000085830688, 0.8009999990463257, 0.8059999942779541, 0.812666654586792, 0.8379999995231628, 0.8453333377838135, 0.8473333120346069, 0.8533333539962769, 0.8646666407585144, 0.8659999966621399, 0.8646666407585144, 0.8619999885559082, 0.8690000176429749, 0.8793333172798157, 0.8766666650772095, 0.8773333430290222, 0.8816666603088379, 0.8796666860580444, 0.8806666731834412, 0.8853333592414856, 0.8803333044052124, 0.874666690826416, 0.8849999904632568, 0.8816666603088379, 0.8853333592414856]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8225714564323425, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2139856815338135, 1.6267386674880981, 1.176002025604248, 0.9761951565742493, 0.875787615776062, 0.8507448434829712, 0.794987142086029, 0.7382003664970398, 0.7120405435562134, 0.7106978893280029, 0.7010090351104736, 0.6598411202430725, 0.6577618718147278, 0.6312451958656311, 0.618064820766449, 0.6131798028945923, 0.5982234477996826, 0.5821169018745422, 0.5836545825004578, 0.5690378546714783, 0.550999104976654, 0.5460101366043091, 0.5353410243988037, 0.5306800603866577, 0.5154536962509155, 0.5152889490127563, 0.5118569135665894, 0.4981783330440521, 0.5010989904403687, 0.4820423424243927], "accuracy": [0.26601505279541016, 0.49253731966018677, 0.588297426700592, 0.6490556001663208, 0.6853784322738647, 0.6900013089179993, 0.7045304179191589, 0.7243428826332092, 0.7428345084190369, 0.7417778372764587, 0.7436270117759705, 0.76106196641922, 0.7584202885627747, 0.7692511081695557, 0.7725531458854675, 0.7757231593132019, 0.7799497842788696, 0.7901201844215393, 0.7804781198501587, 0.7926297783851624, 0.7954035401344299, 0.8029322624206543, 0.8030643463134766, 0.8042530417442322, 0.8133667707443237, 0.8098005652427673, 0.8142913579940796, 0.8189142942428589, 0.8164047002792358, 0.8248580098152161], "val_loss": [1.935269832611084, 1.1220932006835938, 0.9461939930915833, 0.764055073261261, 0.7459143996238708, 0.6806856393814087, 0.6616241335868835, 0.6220018863677979, 0.624467670917511, 0.6048474311828613, 0.5805602073669434, 0.5576276183128357, 0.5481761693954468, 0.5753269195556641, 0.5371713042259216, 0.5467043519020081, 0.5260569453239441, 0.5074881911277771, 0.5050405263900757, 0.5137900710105896, 0.49175727367401123, 0.496683806180954, 0.4861534833908081, 0.47085267305374146, 0.4643155038356781, 0.5180392861366272, 0.46627816557884216, 0.47630396485328674, 0.46471890807151794, 0.46192294359207153], "val_accuracy": [0.518666684627533, 0.625333309173584, 0.6499999761581421, 0.7210000157356262, 0.7263333201408386, 0.737333357334137, 0.7483333349227905, 0.7646666765213013, 0.7590000033378601, 0.7689999938011169, 0.7736666798591614, 0.7820000052452087, 0.7896666526794434, 0.7820000052452087, 0.7940000295639038, 0.7900000214576721, 0.800000011920929, 0.8066666722297668, 0.8130000233650208, 0.8056666851043701, 0.8153333067893982, 0.8106666803359985, 0.8176666498184204, 0.8226666450500488, 0.82833331823349, 0.7990000247955322, 0.8226666450500488, 0.8166666626930237, 0.8266666531562805, 0.8243333101272583]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 2, 1, 2], [0, 49, 27], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 2, 3, 5, 5, 4], [2, 0, 3, 3, 0, 1, 1], [16, 1], [0, 0, 1, 1, 0, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [4], [0]], "fitness": -0.2882857024669647, "mapping_values": [1, 10, 5, 5, 2, 15, 8, 7, 2, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.add(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.pow(grad, grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3247504234313965, 2.275186777114868, 2.797321319580078, 2.3065030574798584, 2.30368709564209, 2.303131580352783, 2.3014798164367676, 2.280529260635376, 2.3517072200775146, 2.5745809078216553, 2.303225517272949, 2.335184097290039, 2.309814929962158, 2.3045425415039062], "accuracy": [0.22123894095420837, 0.1570466309785843, 0.15572579205036163, 0.09589222073554993, 0.09642054885625839, 0.10038304328918457, 0.107647605240345, 0.18412363529205322, 0.15519747138023376, 0.12362963706254959, 0.1010434553027153, 0.16629242897033691, 0.09998679161071777, 0.09932637959718704], "val_loss": [2.469545841217041, 2.272007465362549, 2.3072118759155273, 2.3036141395568848, 2.302809476852417, 2.302168846130371, 2.2905972003936768, 2.3014371395111084, 3.68868088722229, 2.303497076034546, 2.2970316410064697, 2.3140385150909424, 2.305093288421631, 2.302989959716797], "val_accuracy": [0.10100000351667404, 0.19633333384990692, 0.1003333330154419, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.20133332908153534, 0.10333333164453506, 0.2823333442211151, 0.09666666388511658, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 5, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4, 4, 8, 6, 1], [2, 2, 0, 4, 0, 3, 1, 0, 2, 0], [16, 1, 77, 88], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [7, 3, 0, 3, 5, 6, 2, 6, 9, 1, 2, 3, 3, 3, 7, 7, 6, 0, 9, 5, 4, 0, 9, 7, 9, 9, 1, 9], [0, 1, 1, 2, 3, 2, 5, 4, 7, 5, 0, 5], [59, 26, 61, 98, 16, 55, 11, 27], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 22, 12, 10, 4, 40, 28, 12, 8, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.math.square(tf.math.pow(tf.math.pow(tf.math.sqrt(beta), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(sigma, tf.math.multiply(tf.math.multiply(beta, tf.math.multiply(grad, grad)), tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.negative(grad), grad), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.pow(tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))))), tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3037798404693604, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [86, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 3, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.305586338043213, 2.305027961730957, 2.30644154548645, 2.30539608001709, 2.3051013946533203, 2.30434513092041, 2.3048524856567383], "accuracy": [0.09272222965955734, 0.09945846349000931, 0.09813763201236725, 0.09681680053472519, 0.1006472036242485, 0.10011887550354004, 0.09906221181154251], "val_loss": [2.3031327724456787, 2.303637742996216, 2.3055293560028076, 2.3048171997070312, 2.304150104522705, 2.304009199142456, 2.3034982681274414], "val_accuracy": [0.09566666930913925, 0.10133333504199982, 0.0989999994635582, 0.09833333641290665, 0.10100000351667404, 0.10133333504199982, 0.09866666793823242]}}]