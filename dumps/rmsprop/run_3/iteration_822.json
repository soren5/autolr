[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 3], [26, 39, 37], [1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 3, 0, 3, 1], [26, 1], [0, 0, 1, 1, 0, 0, 1, 1], [0, 7, 8, 7], [0, 1, 7, 4], [0], [1], [0], [1], [0]], "fitness": -0.8665714263916016, "mapping_values": [1, 10, 5, 5, 3, 1, 0, 1, 0, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1992363929748535, 1.273482084274292, 0.8406931757926941, 0.7272023558616638, 0.6473951935768127, 0.6033679842948914, 0.5829530358314514, 0.5415701866149902, 0.5163574814796448, 0.49922698736190796, 0.47759220004081726, 0.45868241786956787, 0.4447343051433563, 0.42680326104164124, 0.4193272292613983, 0.4076204299926758, 0.3971075713634491, 0.3855869770050049, 0.3656187951564789, 0.3581242561340332, 0.34635308384895325, 0.3411203920841217, 0.3270321488380432], "accuracy": [0.2588825821876526, 0.5669000148773193, 0.6892088055610657, 0.7218332886695862, 0.7466648817062378, 0.7681944370269775, 0.7771760821342468, 0.7921014428138733, 0.8050455451011658, 0.8132346868515015, 0.8146876096725464, 0.8269713521003723, 0.832650899887085, 0.8429533839225769, 0.8437458872795105, 0.8495575189590454, 0.8518029451370239, 0.8561616539955139, 0.8640866279602051, 0.8631620407104492, 0.872407853603363, 0.8726720213890076, 0.8802007436752319], "val_loss": [1.5937472581863403, 0.8153387308120728, 0.6502975821495056, 0.596270740032196, 0.5620181560516357, 0.5248959064483643, 0.5033344030380249, 0.47726383805274963, 0.4594194293022156, 0.44702160358428955, 0.432172030210495, 0.4183148145675659, 0.41774165630340576, 0.40014559030532837, 0.39529988169670105, 0.4021795690059662, 0.4009353518486023, 0.377908855676651, 0.38009318709373474, 0.3740242123603821, 0.372172087430954, 0.3673158288002014, 0.3712086081504822], "val_accuracy": [0.6083333492279053, 0.7133333086967468, 0.7549999952316284, 0.7713333368301392, 0.7786666750907898, 0.7860000133514404, 0.8013333082199097, 0.8096666932106018, 0.8213333487510681, 0.8253333568572998, 0.8339999914169312, 0.8393333554267883, 0.8373333215713501, 0.8479999899864197, 0.8496666550636292, 0.847000002861023, 0.846666693687439, 0.862333357334137, 0.8526666760444641, 0.859000027179718, 0.8583333492279053, 0.8606666922569275, 0.8619999885559082]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8205714225769043, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2103371620178223, 1.6102380752563477, 1.1631346940994263, 0.9853883981704712, 0.8955712914466858, 0.8266922235488892, 0.7874852418899536, 0.7646218538284302, 0.7330248951911926, 0.6998100280761719, 0.7037408947944641, 0.6929079294204712, 0.656559944152832, 0.6437721848487854, 0.6310243606567383, 0.6176055073738098, 0.5928146839141846, 0.5848985314369202, 0.5901746153831482, 0.5824505686759949, 0.5730991959571838, 0.5589548945426941, 0.5455660820007324, 0.5479198098182678, 0.5333185791969299, 0.5246469974517822, 0.5205995440483093, 0.5096719264984131, 0.5057742595672607, 0.5033095479011536, 0.49488139152526855, 0.4952697157859802, 0.4843065142631531, 0.4917084276676178, 0.48083484172821045, 0.47359639406204224, 0.4588572382926941, 0.46631887555122375, 0.4619443118572235, 0.45451879501342773, 0.45629221200942993, 0.44595974683761597, 0.4398045837879181, 0.4368278980255127, 0.43719542026519775, 0.42608270049095154, 0.42961186170578003], "accuracy": [0.27037379145622253, 0.4962356388568878, 0.5881653428077698, 0.6491876840591431, 0.6742834448814392, 0.6922467350959778, 0.707568347454071, 0.7160216569900513, 0.7234182953834534, 0.7375511527061462, 0.7395324110984802, 0.739928662776947, 0.7548540234565735, 0.7539294958114624, 0.7626469135284424, 0.763967752456665, 0.7807422876358032, 0.7812706232070923, 0.7779685854911804, 0.7823272943496704, 0.7880068421363831, 0.7921014428138733, 0.7975168228149414, 0.7976489067077637, 0.8017435073852539, 0.8001585006713867, 0.8045172095298767, 0.8095363974571228, 0.813498854637146, 0.8128384351730347, 0.8156121969223022, 0.8136309385299683, 0.8195747137069702, 0.8186501264572144, 0.8228767514228821, 0.8244617581367493, 0.8286884427070618, 0.8286884427070618, 0.837537944316864, 0.8364813327789307, 0.8301413059234619, 0.8355567455291748, 0.837141752243042, 0.8355567455291748, 0.8403117060661316, 0.8436138033866882, 0.8378021121025085], "val_loss": [1.9237310886383057, 1.107073187828064, 0.9158045053482056, 0.8107382655143738, 0.7387440800666809, 0.6914498805999756, 0.689555823802948, 0.6530740857124329, 0.662917971611023, 0.6022005081176758, 0.6218194961547852, 0.5899609923362732, 0.5851155519485474, 0.5522552728652954, 0.5496763586997986, 0.550286054611206, 0.5279225707054138, 0.5560564994812012, 0.5258588194847107, 0.5135270953178406, 0.5143192410469055, 0.5152779817581177, 0.4952852725982666, 0.4980398714542389, 0.485791951417923, 0.4910919964313507, 0.48749545216560364, 0.485835462808609, 0.47539079189300537, 0.5095910429954529, 0.46534463763237, 0.5099533200263977, 0.4687644839286804, 0.47581103444099426, 0.45950037240982056, 0.4511679410934448, 0.45837804675102234, 0.44391706585884094, 0.4564124643802643, 0.44233763217926025, 0.4580024480819702, 0.4307602643966675, 0.4387021064758301, 0.4503821134567261, 0.44085589051246643, 0.4432257413864136, 0.4400741755962372], "val_accuracy": [0.47200000286102295, 0.6589999794960022, 0.687666654586792, 0.6936666369438171, 0.7269999980926514, 0.7459999918937683, 0.7326666712760925, 0.7543333172798157, 0.7536666393280029, 0.7526666522026062, 0.753333330154419, 0.7770000100135803, 0.7620000243186951, 0.7860000133514404, 0.7919999957084656, 0.7860000133514404, 0.8113333582878113, 0.778333306312561, 0.8076666593551636, 0.8119999766349792, 0.812666654586792, 0.8119999766349792, 0.8240000009536743, 0.8100000023841858, 0.8216666579246521, 0.8173333406448364, 0.824999988079071, 0.8199999928474426, 0.8263333439826965, 0.7990000247955322, 0.828000009059906, 0.7973333597183228, 0.8326666951179504, 0.8166666626930237, 0.824999988079071, 0.8379999995231628, 0.831333339214325, 0.8420000076293945, 0.8330000042915344, 0.8379999995231628, 0.8299999833106995, 0.843666672706604, 0.843666672706604, 0.8410000205039978, 0.8393333554267883, 0.8353333473205566, 0.8393333554267883]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 2, 3, 1, 3, 5, 1, 9], [0, 0, 1, 0, 2], [26, 39, 39, 75], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0], [0, 2, 4, 6, 3, 8, 2, 1, 6, 7, 9], [2, 2, 0, 0, 0, 5, 5], [16, 1, 74], [0, 0, 1, 1, 0, 1, 1, 1], [0, 7, 7], [0, 6], [91, 82], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 4, 13, 7, 6, 3, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(alpha), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(beta, beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09377889335155487, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [2, 2, 3, 3, 3, 5], [0, 3, 1, 1, 2, 3], [0, 40, 39], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [2, 9, 4, 7, 3, 5, 5, 4], [4, 0, 3, 1, 0], [16, 9], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2, 6, 4, 8, 0, 0, 5, 4, 8], [0, 6, 3, 6, 4, 4, 3], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 5, 6, 1, 5, 3, 2, 2, 19, 12, 7, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(alpha, grad)), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad)), tf.math.add(tf.math.divide_no_nan(tf.math.pow(sigma, tf.math.sqrt(tf.math.negative(tf.math.negative(tf.math.square(tf.math.pow(grad, tf.math.sqrt(grad))))))), grad), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 9, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 4, 4, 7, 0, 4, 5, 4], [1, 3, 0, 4, 0, 3, 1], [15, 1], [0, 1, 0, 1, 0, 1, 1, 1], [7, 7, 0, 2], [0, 1, 1, 3], [0], [0, 0, 0, 1, 1, 0, 1, 1], [0, 7, 3, 7], [1, 7, 6, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 3, 13, 7, 6, 2, 6, 3, 3, 1, 8, 4, 4, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.pow(alpha, grad), tf.math.add(tf.math.negative(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.square(grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(alpha, grad), tf.math.add(grad, grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]