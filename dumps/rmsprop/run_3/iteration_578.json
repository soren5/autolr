[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 2, 6, 8, 3, 5, 9, 1], [2, 2, 0, 4, 0, 3, 1], [16, 1, 10], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 4, 2], [66], [1], [0], [1], [0]], "fitness": -0.8677142858505249, "mapping_values": [1, 10, 5, 5, 3, 13, 8, 5, 3, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.divide_no_nan(beta, tf.math.sqrt(tf.math.multiply(tf.math.square(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, grad)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.106572389602661, 1.218742847442627, 0.8317919969558716, 0.6964254379272461, 0.6215812563896179, 0.5665324926376343, 0.5213344693183899, 0.49266624450683594, 0.47095510363578796, 0.45347052812576294, 0.4326660633087158, 0.42969220876693726, 0.4011179208755493, 0.39153555035591125, 0.3768710196018219, 0.36540600657463074, 0.3531549870967865, 0.3380003273487091, 0.3289670944213867, 0.3253806233406067, 0.3167261481285095, 0.30554115772247314, 0.299711138010025, 0.2899787425994873, 0.28155264258384705, 0.27225756645202637, 0.2643263638019562, 0.2578943073749542, 0.2431536167860031, 0.24054183065891266, 0.2370273917913437], "accuracy": [0.29045039415359497, 0.5954299569129944, 0.6889446377754211, 0.7376832365989685, 0.7635715007781982, 0.787082314491272, 0.805177628993988, 0.8178576231002808, 0.8245938420295715, 0.830669641494751, 0.8355567455291748, 0.8405758738517761, 0.8508783578872681, 0.8540483713150024, 0.8562937378883362, 0.8609166741371155, 0.8648791313171387, 0.8717474341392517, 0.8778232932090759, 0.8799365758895874, 0.8790120482444763, 0.8842953443527222, 0.8828424215316772, 0.8912957310676575, 0.8908994793891907, 0.893541157245636, 0.8976356983184814, 0.8967111110687256, 0.9084665179252625, 0.9033153057098389, 0.9059569239616394], "val_loss": [1.07429039478302, 0.7467848062515259, 0.6801468729972839, 0.5650902986526489, 0.5380007028579712, 0.4952372908592224, 0.4744376540184021, 0.4755990505218506, 0.4519331157207489, 0.432827889919281, 0.42727676033973694, 0.42213037610054016, 0.41297832131385803, 0.41523128747940063, 0.41674739122390747, 0.401231050491333, 0.3934057950973511, 0.3916552662849426, 0.39790526032447815, 0.3960148096084595, 0.37661439180374146, 0.38264477252960205, 0.3784242868423462, 0.38045600056648254, 0.3787247836589813, 0.36394575238227844, 0.3741000294685364, 0.37174883484840393, 0.384734570980072, 0.3687933385372162, 0.37443262338638306], "val_accuracy": [0.6186666488647461, 0.7253333330154419, 0.7583333253860474, 0.7926666736602783, 0.8040000200271606, 0.8216666579246521, 0.8259999752044678, 0.8270000219345093, 0.840666651725769, 0.8429999947547913, 0.8450000286102295, 0.8513333201408386, 0.8579999804496765, 0.8536666631698608, 0.8529999852180481, 0.8556666374206543, 0.8656666874885559, 0.8633333444595337, 0.8616666793823242, 0.8629999756813049, 0.8656666874885559, 0.8663333058357239, 0.8676666617393494, 0.8653333187103271, 0.8676666617393494, 0.8759999871253967, 0.8673333525657654, 0.8730000257492065, 0.8730000257492065, 0.8693333268165588, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 2, 0, 2], [26, 39, 39], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 1, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [7, 3, 0, 3, 8, 3, 6, 6, 6, 4, 6, 2, 8], [0, 1, 1, 0, 2, 1, 3, 5, 6, 6, 6], [0, 21], [1], [0], [1], [0]], "fitness": -0.8302857279777527, "mapping_values": [1, 10, 5, 5, 3, 13, 7, 6, 2, 24, 13, 11, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(tf.math.square(grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha)), alpha), tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), beta), alpha), tf.math.pow(tf.math.divide_no_nan(sigma, grad), grad)), tf.math.add(grad, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2961602210998535, 2.2153923511505127, 1.9207329750061035, 1.400309443473816, 1.2648811340332031, 0.9452134966850281, 0.9074811339378357, 0.8573091626167297, 0.8082682490348816, 0.7513633370399475, 0.7468474507331848, 0.7107611894607544, 0.6891010403633118, 0.663949728012085, 0.631464958190918, 0.6061520576477051, 0.5996680855751038, 0.5885841250419617, 0.5806159377098083, 0.5690303444862366, 0.5633883476257324, 0.546120285987854, 0.5318992733955383, 0.5236405730247498, 0.5192310810089111, 0.51805180311203, 0.5122000575065613, 0.48621878027915955, 0.4798019230365753, 0.48102593421936035, 0.4674072563648224, 0.4692378342151642, 0.4546459913253784, 0.4462416172027588, 0.44645339250564575, 0.42348238825798035, 0.4344649016857147, 0.42882639169692993, 0.42226868867874146, 0.40495824813842773], "accuracy": [0.12178047746419907, 0.29520538449287415, 0.4171179533004761, 0.5159159898757935, 0.5962224006652832, 0.6551313996315002, 0.6633205413818359, 0.6893408894538879, 0.7012283802032471, 0.7147008180618286, 0.7129837274551392, 0.7334566116333008, 0.743891179561615, 0.7512878179550171, 0.7652885913848877, 0.7697794437408447, 0.7705719470977783, 0.7769119143486023, 0.7754589915275574, 0.7880068421363831, 0.7877426743507385, 0.7957997918128967, 0.7993659973144531, 0.8000264167785645, 0.8013472557067871, 0.7991018295288086, 0.8062343001365662, 0.81112140417099, 0.8202351331710815, 0.8193105459213257, 0.8239334225654602, 0.8231409192085266, 0.8294808864593506, 0.83119797706604, 0.8276317715644836, 0.8391229510307312, 0.834632158279419, 0.8378021121025085, 0.8404437899589539, 0.8469158411026001], "val_loss": [2.255923271179199, 2.0936832427978516, 1.4175928831100464, 0.9026663303375244, 0.7601366639137268, 0.7984782457351685, 0.6616251468658447, 0.6599138975143433, 0.6350501179695129, 0.6380241513252258, 0.6220361590385437, 0.5711280703544617, 0.5449496507644653, 0.5428209900856018, 0.5371037721633911, 0.5320599675178528, 0.5222962498664856, 0.5122889280319214, 0.5032212138175964, 0.49582576751708984, 0.4950474500656128, 0.4916125535964966, 0.48286473751068115, 0.4757290184497833, 0.4739363491535187, 0.4673270285129547, 0.4612889885902405, 0.4526260495185852, 0.4649903178215027, 0.44738465547561646, 0.4463578164577484, 0.443563848733902, 0.4387597143650055, 0.42851248383522034, 0.4224282503128052, 0.4272347092628479, 0.42453858256340027, 0.42482495307922363, 0.4292122423648834, 0.43286871910095215], "val_accuracy": [0.3636666536331177, 0.42533332109451294, 0.6159999966621399, 0.6746666431427002, 0.7096666693687439, 0.722000002861023, 0.7456666827201843, 0.7443333268165588, 0.7566666603088379, 0.7633333206176758, 0.7673333287239075, 0.7856666445732117, 0.7953333258628845, 0.7979999780654907, 0.8063333630561829, 0.7916666865348816, 0.8019999861717224, 0.8116666674613953, 0.8109999895095825, 0.8100000023841858, 0.8080000281333923, 0.8169999718666077, 0.8236666917800903, 0.8246666789054871, 0.8209999799728394, 0.8333333134651184, 0.8330000042915344, 0.8396666646003723, 0.8339999914169312, 0.8416666388511658, 0.8443333506584167, 0.8479999899864197, 0.8486666679382324, 0.8516666889190674, 0.8543333411216736, 0.8476666808128357, 0.8506666421890259, 0.8526666760444641, 0.8513333201408386, 0.8516666889190674]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8265714049339294, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2084591388702393, 1.6020218133926392, 1.1591119766235352, 0.9722923040390015, 0.8809828758239746, 0.8407514095306396, 0.8110307455062866, 0.7526499032974243, 0.7298053503036499, 0.7119001150131226, 0.6940466165542603, 0.6582544445991516, 0.6502225995063782, 0.6458003520965576, 0.6278495788574219, 0.6292257308959961, 0.6060962080955505, 0.5818639993667603, 0.5759291648864746, 0.5788931846618652, 0.5817630290985107, 0.5433573722839355, 0.5501647591590881, 0.5451595187187195, 0.5321036577224731, 0.5136704444885254, 0.528344988822937, 0.5027150511741638], "accuracy": [0.25941091775894165, 0.5027077198028564, 0.5954299569129944, 0.6528860330581665, 0.6748117804527283, 0.6897371411323547, 0.6979262828826904, 0.7191916704177856, 0.7280412316322327, 0.7329282760620117, 0.7376832365989685, 0.7561748623847961, 0.7564390301704407, 0.7606657147407532, 0.7631752490997314, 0.7643640041351318, 0.7771760821342468, 0.783119797706604, 0.7880068421363831, 0.7848368883132935, 0.7810064554214478, 0.8001585006713867, 0.7932901978492737, 0.798309326171875, 0.8068947196006775, 0.8140271902084351, 0.7998943328857422, 0.8150838613510132], "val_loss": [1.9182727336883545, 1.097927451133728, 0.9474716782569885, 0.7598531246185303, 0.7286638021469116, 0.759267270565033, 0.6710572838783264, 0.6161625981330872, 0.6550909876823425, 0.6085732579231262, 0.5945096611976624, 0.5862461924552917, 0.5987643003463745, 0.5930447578430176, 0.5438992381095886, 0.5430548787117004, 0.5313144326210022, 0.5124807357788086, 0.5786123275756836, 0.4991523027420044, 0.534701406955719, 0.5324007868766785, 0.4813762307167053, 0.4929232895374298, 0.47534456849098206, 0.48569726943969727, 0.4860874116420746, 0.4836699664592743], "val_accuracy": [0.49166667461395264, 0.6413333415985107, 0.6446666717529297, 0.7289999723434448, 0.7213333249092102, 0.7253333330154419, 0.7570000290870667, 0.7706666588783264, 0.7413333058357239, 0.7620000243186951, 0.7746666669845581, 0.7696666717529297, 0.7570000290870667, 0.7703333497047424, 0.7983333468437195, 0.8016666769981384, 0.8083333373069763, 0.8193333148956299, 0.7726666927337646, 0.8230000138282776, 0.7916666865348816, 0.7996666431427002, 0.8246666789054871, 0.8176666498184204, 0.8243333101272583, 0.8180000185966492, 0.8193333148956299, 0.8169999718666077]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 54], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 2, 2, 3, 5, 5, 4], [1, 2, 0, 1, 0, 3, 3], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 13, 7, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.add(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(alpha))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.30496883392334, 2.3036882877349854, 2.3042237758636475, 2.304321765899658, 2.304490566253662, 2.306307315826416, 2.306231737136841, 2.306889533996582, 2.3071062564849854], "accuracy": [0.09457138925790787, 0.09206181764602661, 0.09879804402589798, 0.10210011899471283, 0.09879804402589798, 0.09668471664190292, 0.09708096832036972, 0.10210011899471283, 0.1002509593963623], "val_loss": [2.3028311729431152, 2.3033459186553955, 2.3042590618133545, 2.3035314083099365, 2.303844451904297, 2.3035852909088135, 2.304598569869995, 2.306476354598999, 2.307154655456543], "val_accuracy": [0.09733333438634872, 0.0989999994635582, 0.10000000149011612, 0.10300000011920929, 0.09566666930913925, 0.10000000149011612, 0.10300000011920929, 0.10000000149011612, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 3, 1, 3, 5], [0, 0, 1, 2, 2], [26, 39, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 0, 3, 5, 5, 4], [2, 2, 0, 4, 3, 2, 1], [64, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 4, 4, 2], [0], [1], [0], [1], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 7, 4, 3, 2, 12, 7, 5, 1, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(tf.math.negative(beta), tf.math.multiply(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.square(grad))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.310106039047241, 2.309873580932617, 2.309939384460449, 2.310107946395874, 2.310332775115967, 2.310328483581543], "accuracy": [0.09298639744520187, 0.09126931428909302, 0.09179764986038208, 0.09496764093637466, 0.09760929644107819, 0.09060890227556229], "val_loss": [2.308237075805664, 2.308237075805664, 2.308237075805664, 2.308237075805664, 2.308237075805664, 2.308237075805664], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]