[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8539999723434448, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2108490467071533, 1.6031280755996704, 1.1586053371429443, 1.0017169713974, 0.9027997255325317, 0.8509687781333923, 0.7821087837219238, 0.7510325312614441, 0.7681663632392883, 0.7239335179328918, 0.7042371034622192, 0.6705950498580933, 0.6701738238334656, 0.6410457491874695, 0.6455509066581726, 0.6122079491615295, 0.6216953992843628, 0.6117597222328186, 0.5990164279937744, 0.5723549127578735, 0.5750733613967896, 0.5654271245002747, 0.5603346228599548, 0.5531269907951355, 0.543151319026947, 0.5325374007225037, 0.523846447467804, 0.515398383140564, 0.5130863785743713, 0.5047292113304138, 0.511211097240448, 0.489170640707016, 0.4864640533924103, 0.4842982292175293, 0.47540971636772156, 0.4720350503921509, 0.46809497475624084, 0.46228352189064026, 0.46422722935676575, 0.4534793794155121, 0.45032545924186707, 0.44704577326774597, 0.43839192390441895, 0.4372914135456085, 0.44019392132759094, 0.4282222390174866, 0.414899617433548, 0.42131656408309937, 0.4295532703399658, 0.4157116115093231, 0.39912712574005127, 0.4099557399749756, 0.4104830026626587, 0.40346992015838623, 0.40090474486351013, 0.38478195667266846, 0.39120081067085266, 0.38766616582870483, 0.3841533958911896, 0.37545040249824524, 0.37709566950798035, 0.37396249175071716, 0.36828750371932983, 0.36231529712677, 0.37067341804504395, 0.36960527300834656, 0.36422786116600037, 0.3631508946418762, 0.3479906916618347, 0.3558589220046997, 0.35364899039268494, 0.34216275811195374, 0.3413783013820648], "accuracy": [0.2658829689025879, 0.5038964748382568, 0.5926561951637268, 0.6362435817718506, 0.6732267737388611, 0.6902654767036438, 0.711530864238739, 0.7235503792762756, 0.7207766771316528, 0.7279091477394104, 0.7391361594200134, 0.7582882046699524, 0.746268630027771, 0.7626469135284424, 0.759609043598175, 0.7754589915275574, 0.7625148296356201, 0.7757231593132019, 0.7700436115264893, 0.7889314293861389, 0.7889314293861389, 0.7868181467056274, 0.7898560166358948, 0.7997622489929199, 0.798309326171875, 0.8030643463134766, 0.8080834746360779, 0.8125742673873901, 0.8132346868515015, 0.8161405324935913, 0.8128384351730347, 0.8238013386726379, 0.8271034359931946, 0.8224804997444153, 0.8290846943855286, 0.8278959393501282, 0.830669641494751, 0.833179235458374, 0.833179235458374, 0.8341038227081299, 0.837537944316864, 0.8366134166717529, 0.8391229510307312, 0.843481719493866, 0.8399154543876648, 0.8416325449943542, 0.8506141901016235, 0.848368763923645, 0.8404437899589539, 0.8453308939933777, 0.8536521196365356, 0.8490291833877563, 0.8507462739944458, 0.8562937378883362, 0.8520671129226685, 0.8610487580299377, 0.8573504090309143, 0.8595958352088928, 0.8590674996376038, 0.8631620407104492, 0.8622375130653381, 0.8631620407104492, 0.8681812286376953, 0.8667283058166504, 0.8626337051391602, 0.8658037185668945, 0.8628978729248047, 0.8687095642089844, 0.8659358024597168, 0.868049144744873, 0.8716153502464294, 0.874389111995697, 0.8757099509239197], "val_loss": [1.9235763549804688, 1.1314831972122192, 0.8731655478477478, 0.807879626750946, 0.7705962061882019, 0.6980771422386169, 0.6661664247512817, 0.697576105594635, 0.66929030418396, 0.5976685285568237, 0.5922770500183105, 0.5830627679824829, 0.6373900771141052, 0.5411273837089539, 0.5578807592391968, 0.5548969507217407, 0.5392282009124756, 0.5990676879882812, 0.5256581902503967, 0.5300251245498657, 0.5082780718803406, 0.5017443299293518, 0.5056119561195374, 0.5075571537017822, 0.4926685094833374, 0.47513166069984436, 0.4797607362270355, 0.4600391089916229, 0.46047335863113403, 0.5116149187088013, 0.4663454294204712, 0.452178955078125, 0.4634062945842743, 0.44287997484207153, 0.4433993399143219, 0.43838903307914734, 0.43588727712631226, 0.4394426941871643, 0.43417826294898987, 0.43312549591064453, 0.4629688262939453, 0.431441068649292, 0.4245022237300873, 0.41809216141700745, 0.4273024797439575, 0.40897610783576965, 0.41044068336486816, 0.45049646496772766, 0.4001186192035675, 0.4124038815498352, 0.4094165861606598, 0.3972887098789215, 0.39708682894706726, 0.39355671405792236, 0.39122965931892395, 0.40282538533210754, 0.3918760120868683, 0.3897528350353241, 0.3919954299926758, 0.39045262336730957, 0.40663614869117737, 0.3902661204338074, 0.37542790174484253, 0.3986421823501587, 0.3837566673755646, 0.3817605674266815, 0.37363508343696594, 0.37688878178596497, 0.37387850880622864, 0.387358158826828, 0.3793269991874695, 0.36945849657058716, 0.38200435042381287], "val_accuracy": [0.5073333382606506, 0.6323333382606506, 0.7126666903495789, 0.70333331823349, 0.7099999785423279, 0.7419999837875366, 0.7593333125114441, 0.7426666617393494, 0.7416666746139526, 0.7753333449363708, 0.7826666831970215, 0.7836666703224182, 0.7506666779518127, 0.8023333549499512, 0.8023333549499512, 0.7903333306312561, 0.7916666865348816, 0.7573333382606506, 0.8106666803359985, 0.8083333373069763, 0.8216666579246521, 0.8140000104904175, 0.8166666626930237, 0.812666654586792, 0.8216666579246521, 0.8276666402816772, 0.8323333263397217, 0.8420000076293945, 0.8433333039283752, 0.8066666722297668, 0.8323333263397217, 0.8443333506584167, 0.8296666741371155, 0.8426666855812073, 0.8416666388511658, 0.8450000286102295, 0.8426666855812073, 0.847000002861023, 0.8496666550636292, 0.8516666889190674, 0.8263333439826965, 0.8443333506584167, 0.8500000238418579, 0.8519999980926514, 0.8479999899864197, 0.8579999804496765, 0.8553333282470703, 0.8206666707992554, 0.8616666793823242, 0.8510000109672546, 0.8573333621025085, 0.8616666793823242, 0.8576666712760925, 0.8633333444595337, 0.8633333444595337, 0.859000027179718, 0.8603333234786987, 0.8636666536331177, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197, 0.8616666793823242, 0.8709999918937683, 0.8606666922569275, 0.8673333525657654, 0.862666666507721, 0.8709999918937683, 0.8726666569709778, 0.8696666955947876, 0.8606666922569275, 0.8693333268165588, 0.871999979019165, 0.8656666874885559]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8274285793304443, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.212346076965332, 1.5967798233032227, 1.1491280794143677, 0.967616081237793, 0.8544057607650757, 0.8210378885269165, 0.7852488160133362, 0.7353004813194275, 0.7118017077445984, 0.7130966186523438, 0.6753370761871338, 0.6630167961120605, 0.6480526924133301, 0.6386891603469849, 0.6058034896850586, 0.6171606183052063, 0.6083125472068787, 0.5933954119682312, 0.5711650848388672, 0.5795144438743591, 0.5712226629257202, 0.5523450970649719, 0.5417833924293518, 0.55141282081604, 0.5355162620544434, 0.5241024494171143, 0.5263658761978149, 0.5096966624259949, 0.5116917490959167, 0.5005544424057007, 0.4901329278945923, 0.4932677447795868, 0.4853516221046448, 0.4771241843700409, 0.4752308428287506, 0.472185343503952, 0.4766060411930084, 0.4614575505256653], "accuracy": [0.26522254943847656, 0.5114251971244812, 0.5908070206642151, 0.6602826714515686, 0.6897371411323547, 0.7038700580596924, 0.7107383608818054, 0.7281733155250549, 0.739400327205658, 0.7337207794189453, 0.7479857206344604, 0.7541936039924622, 0.7593448758125305, 0.7618544697761536, 0.7751948237419128, 0.7676661014556885, 0.7720248103141785, 0.7778365015983582, 0.7876105904579163, 0.7849689722061157, 0.7858935594558716, 0.7924976944923401, 0.7993659973144531, 0.7911768555641174, 0.8031964302062988, 0.8035926818847656, 0.8026680946350098, 0.8107251524925232, 0.813498854637146, 0.8156121969223022, 0.816008448600769, 0.8156121969223022, 0.8162726163864136, 0.8231409192085266, 0.8255184292793274, 0.8236692547798157, 0.8235371708869934, 0.8317263126373291], "val_loss": [1.916324257850647, 1.0781220197677612, 0.8797444105148315, 0.7612712979316711, 0.7099881768226624, 0.6808419823646545, 0.6759393811225891, 0.6313709020614624, 0.6419757604598999, 0.6233665943145752, 0.5808109641075134, 0.5787906050682068, 0.572097659111023, 0.5591397881507874, 0.566936194896698, 0.5362450480461121, 0.5278218388557434, 0.522491455078125, 0.5252617001533508, 0.5189549326896667, 0.5111703276634216, 0.5043135285377502, 0.49957048892974854, 0.5011122822761536, 0.503409206867218, 0.497971773147583, 0.48196613788604736, 0.4736846387386322, 0.48542749881744385, 0.47213342785835266, 0.45601311326026917, 0.4613487124443054, 0.4495449960231781, 0.44989627599716187, 0.4509293735027313, 0.46241068840026855, 0.4503346085548401, 0.45754382014274597], "val_accuracy": [0.6129999756813049, 0.6443333625793457, 0.7006666660308838, 0.7239999771118164, 0.746666669845581, 0.7513333559036255, 0.746666669845581, 0.7536666393280029, 0.7549999952316284, 0.7676666378974915, 0.7793333530426025, 0.7853333353996277, 0.7796666622161865, 0.7919999957084656, 0.7776666879653931, 0.8036666512489319, 0.8080000281333923, 0.8063333630561829, 0.79666668176651, 0.8066666722297668, 0.8100000023841858, 0.8113333582878113, 0.8196666836738586, 0.8216666579246521, 0.8149999976158142, 0.8206666707992554, 0.824999988079071, 0.8349999785423279, 0.8220000267028809, 0.8253333568572998, 0.8366666436195374, 0.8333333134651184, 0.846666693687439, 0.8420000076293945, 0.8389999866485596, 0.8320000171661377, 0.8383333086967468, 0.8339999914169312]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [4, 2, 3, 1, 3, 7], [0, 0, 1, 3, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [8, 1, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 2, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.subtract(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [5, 2, 3, 1, 3, 3], [0, 0, 1, 2, 3], [0, 39, 39], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 3, 8], [3, 0, 3, 1, 5], [16, 1], [0, 0, 1, 1], [0, 7], [6, 6], [47], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 0, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09034473448991776, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [3, 2, 4, 1, 3, 7, 5, 3, 6, 0, 3, 3, 8], [0, 0, 1, 3, 2, 1, 2, 0, 2, 3, 3], [53, 24, 39], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 2, 0, 6, 3, 8, 2, 2, 0], [5, 0, 3, 1, 0, 3], [16, 1], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [4, 7, 4, 2, 9, 1, 1, 8, 1, 4, 0, 9, 3, 0, 7, 1, 8, 1, 0], [0, 6, 0, 3, 4, 0, 7, 2, 2, 0, 4], [0, 52, 14, 64, 99, 92], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 13, 11, 3, 15, 9, 6, 2, 30, 19, 11, 6, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.pow(tf.math.subtract(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), grad)), alpha), tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(tf.math.sqrt(grad), grad), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(grad, alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.subtract(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.negative(sigma), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), grad)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(grad), tf.math.add(beta, tf.math.subtract(beta, tf.math.sqrt(tf.math.subtract(tf.math.negative(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), grad))))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 5, 3, 8, 3, 5], [0, 0, 3, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 4], [16, 1], [1, 1, 1, 1], [0, 7], [0, 6], [0], [0, 0, 1, 0, 0, 0], [0, 2, 0, 0, 9], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 1, 0, 1, 1, 9, 5, 4, 1, 1, 0, 1, 1, 6, 5, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3089559078216553, 2.3106939792633057, 2.310192823410034, 2.3099679946899414, 2.3099818229675293, 2.309744119644165], "accuracy": [0.09166556596755981, 0.08558975160121918, 0.08955223858356476, 0.0882314071059227, 0.0886276587843895, 0.09417514503002167], "val_loss": [2.308529853820801, 2.308529853820801, 2.308529853820801, 2.308529853820801, 2.308529853820801, 2.308529853820801], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]