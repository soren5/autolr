[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 43], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 5, 0, 4, 3, 0, 1], [16, 1], [0, 0, 1, 1, 0, 1, 0, 1], [7, 3, 8, 2], [0, 0, 1, 4], [0, 3], [1], [0], [1], [0]], "fitness": -0.87371426820755, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 6, 3, 3, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, grad), tf.math.pow(tf.math.negative(tf.math.square(tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0035603046417236, 1.873105764389038, 1.0282071828842163, 0.7842352390289307, 0.6880284547805786, 0.6103962659835815, 0.5775039196014404, 0.5645629167556763, 0.5305677652359009, 0.49692338705062866, 0.4740166962146759, 0.4555399417877197, 0.43733447790145874, 0.4280223250389099, 0.41722357273101807, 0.3963521718978882, 0.39759451150894165, 0.3742673099040985, 0.36538469791412354, 0.34830042719841003, 0.3387696146965027, 0.33065125346183777, 0.31020769476890564, 0.32516804337501526, 0.31586501002311707, 0.2880033552646637, 0.2868518531322479, 0.27597060799598694, 0.27115824818611145, 0.25977516174316406, 0.2603403329849243], "accuracy": [0.3483027219772339, 0.3469819128513336, 0.6139215230941772, 0.6973979473114014, 0.7384757399559021, 0.7693831920623779, 0.7821952104568481, 0.7866860628128052, 0.7992339134216309, 0.8125742673873901, 0.8231409192085266, 0.8305375576019287, 0.8385946154594421, 0.8411042094230652, 0.8446704745292664, 0.8519350290298462, 0.8532558679580688, 0.8614450097084045, 0.8594637513160706, 0.870030403137207, 0.8721436858177185, 0.8771628737449646, 0.884691596031189, 0.8775591254234314, 0.8779553771018982, 0.8932769894599915, 0.8952582478523254, 0.8945978283882141, 0.8988244533538818, 0.9017302989959717, 0.902390718460083], "val_loss": [1.908865213394165, 1.2026216983795166, 0.7129544019699097, 0.6211049556732178, 0.5380594730377197, 0.5055546164512634, 0.4873240888118744, 0.47189322113990784, 0.455403208732605, 0.4231546223163605, 0.4416670799255371, 0.40071842074394226, 0.4182007908821106, 0.391195684671402, 0.3896847069263458, 0.3870348036289215, 0.37041041254997253, 0.37489017844200134, 0.36830249428749084, 0.38149186968803406, 0.34842023253440857, 0.35458260774612427, 0.352103054523468, 0.3661622703075409, 0.3738401234149933, 0.3493850827217102, 0.36254507303237915, 0.3519051969051361, 0.35199764370918274, 0.3509622812271118, 0.35028332471847534], "val_accuracy": [0.36633333563804626, 0.6106666922569275, 0.703000009059906, 0.7736666798591614, 0.7950000166893005, 0.8069999814033508, 0.8109999895095825, 0.8169999718666077, 0.8336666822433472, 0.8479999899864197, 0.8296666741371155, 0.8516666889190674, 0.8516666889190674, 0.8526666760444641, 0.856333315372467, 0.862333357334137, 0.871666669845581, 0.8706666827201843, 0.8650000095367432, 0.8600000143051147, 0.8776666522026062, 0.8773333430290222, 0.8803333044052124, 0.8743333220481873, 0.8733333349227905, 0.8856666684150696, 0.8803333044052124, 0.8843333125114441, 0.8809999823570251, 0.8813333511352539, 0.8799999952316284]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.842285692691803, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2092385292053223, 1.6114602088928223, 1.146752953529358, 0.9863656759262085, 0.9210488796234131, 0.8175401091575623, 0.8087311387062073, 0.7647565007209778, 0.7279534339904785, 0.7168911695480347, 0.7052227258682251, 0.7034506797790527, 0.6443482637405396, 0.6458590030670166, 0.6331011056900024, 0.6366063952445984, 0.6216023564338684, 0.6041887402534485, 0.5736281275749207, 0.5697729587554932, 0.5711720585823059, 0.5610340237617493, 0.5643459558486938, 0.548317015171051, 0.5440830588340759, 0.5310882925987244, 0.523301362991333, 0.5165477991104126, 0.5140765309333801, 0.5033895969390869, 0.49350103735923767, 0.4903954863548279, 0.4892123341560364, 0.4847913682460785, 0.47444239258766174, 0.46541255712509155, 0.4590112268924713, 0.467457115650177, 0.45477494597435, 0.4660454988479614, 0.4456278085708618, 0.4521978795528412, 0.43948835134506226], "accuracy": [0.2822612524032593, 0.49649980664253235, 0.5976753234863281, 0.6452252268791199, 0.6617355942726135, 0.7046625018119812, 0.6933034062385559, 0.7161537408828735, 0.7346453666687012, 0.7306828498840332, 0.7360982894897461, 0.7417778372764587, 0.763439416885376, 0.7594769597053528, 0.767401933670044, 0.7655527591705322, 0.7625148296356201, 0.7759873270988464, 0.7862898111343384, 0.7890635132789612, 0.7895918488502502, 0.7905164361000061, 0.7905164361000061, 0.798309326171875, 0.7930260300636292, 0.8033285140991211, 0.8055738806724548, 0.8112534880638123, 0.8137630224227905, 0.8129705190658569, 0.8185180425643921, 0.8208954930305481, 0.8215559124946594, 0.8253863453865051, 0.8285563588142395, 0.8314621448516846, 0.8317263126373291, 0.8206313848495483, 0.8348963260650635, 0.8244617581367493, 0.8372738361358643, 0.8319904804229736, 0.8408400416374207], "val_loss": [1.925736665725708, 1.1250303983688354, 0.9126856923103333, 0.8487263917922974, 0.7400719523429871, 0.7273695468902588, 0.6941615343093872, 0.661379337310791, 0.6445327997207642, 0.6295428276062012, 0.6510226726531982, 0.6276126503944397, 0.5714820027351379, 0.5738596320152283, 0.5873032808303833, 0.5546345114707947, 0.560957670211792, 0.5521633625030518, 0.5312586426734924, 0.5674818754196167, 0.531133770942688, 0.5516979694366455, 0.5042597055435181, 0.49884018301963806, 0.49873828887939453, 0.5061848163604736, 0.4892837405204773, 0.4865660071372986, 0.4808087646961212, 0.4724271297454834, 0.47786450386047363, 0.46419596672058105, 0.47104060649871826, 0.4588453471660614, 0.4561706483364105, 0.47527092695236206, 0.4467514753341675, 0.4457923471927643, 0.4679577648639679, 0.4394986629486084, 0.44765353202819824, 0.4534570276737213, 0.4411592185497284], "val_accuracy": [0.5143333077430725, 0.6380000114440918, 0.6773333549499512, 0.6880000233650208, 0.7273333072662354, 0.715666651725769, 0.7403333187103271, 0.746666669845581, 0.7540000081062317, 0.765333354473114, 0.7416666746139526, 0.7506666779518127, 0.7860000133514404, 0.7893333435058594, 0.7826666831970215, 0.7886666655540466, 0.7850000262260437, 0.793666660785675, 0.8046666383743286, 0.7713333368301392, 0.796999990940094, 0.7929999828338623, 0.8116666674613953, 0.8140000104904175, 0.8176666498184204, 0.8140000104904175, 0.824999988079071, 0.8266666531562805, 0.824999988079071, 0.8209999799728394, 0.8259999752044678, 0.8370000123977661, 0.8236666917800903, 0.8326666951179504, 0.8376666903495789, 0.8256666660308838, 0.8370000123977661, 0.8416666388511658, 0.8303333520889282, 0.840666651725769, 0.8389999866485596, 0.8399999737739563, 0.8363333344459534]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 12], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 9, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [7, 3, 0, 2, 6, 7, 4, 7, 4, 5], [0, 1, 1, 4, 7, 0, 3, 2, 0], [0, 32, 55], [1], [0], [1], [0]], "fitness": -0.10685714334249496, "mapping_values": [1, 11, 6, 5, 3, 1, 0, 1, 0, 19, 10, 9, 3, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha)), grad), tf.math.add(tf.math.pow(grad, tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.square(beta)))), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [6.0258893966674805, 2.5682077407836914, 2.4198482036590576, 2.3956401348114014, 2.362309694290161, 2.3910813331604004, 2.384566068649292, 2.3685617446899414, 2.3919625282287598, 2.3835301399230957, 2.3843889236450195], "accuracy": [0.1732928305864334, 0.10896842926740646, 0.10751552134752274, 0.10962884873151779, 0.10355303436517715, 0.1018359512090683, 0.10210011899471283, 0.1006472036242485, 0.09642054885625839, 0.1018359512090683, 0.0948355570435524], "val_loss": [2.5501039028167725, 2.433314800262451, 2.4095876216888428, 2.389333963394165, 2.361586332321167, 2.6680331230163574, 2.3888099193573, 2.409353256225586, 2.375751256942749, 2.360175848007202, 2.3804283142089844], "val_accuracy": [0.10300000011920929, 0.10066666454076767, 0.1080000028014183, 0.10199999809265137, 0.09933333098888397, 0.10999999940395355, 0.10199999809265137, 0.10133333504199982, 0.0963333323597908, 0.10000000149011612, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 8, 3, 1, 3, 3], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [2, 2, 8, 4, 0, 5, 5, 3, 0], [2, 2, 0, 1, 0, 3, 1], [16, 80], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [7, 3, 7, 2, 5], [0, 6, 5, 5, 2], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 14, 9, 5, 2, 10, 5, 5, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.sqrt(beta), tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha)))), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), grad), tf.math.square(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 3], [0, 0, 1, 1, 2], [0, 39, 94], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 4, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 1], [0, 7, 1, 5], [0, 6, 2], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.square(alpha)), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [8927614584487936.0, 17655.37109375, 4584982.5, 1186699264.0, 302003847168.0, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.1006472036242485], "val_loss": [552.2488403320312, 173304.640625, 44441080.0, 11377034240.0, 2912520765440.0, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.09866666793823242]}, "mapping_values": [1, 12, 7, 5, 2, 12, 7, 5, 1, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 16}]