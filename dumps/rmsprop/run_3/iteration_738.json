[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8339999914169312, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2109155654907227, 1.6092137098312378, 1.1753379106521606, 0.9761731028556824, 0.9148465991020203, 0.831783652305603, 0.8216415047645569, 0.7617390155792236, 0.747073769569397, 0.7265300154685974, 0.6916133761405945, 0.6957047581672668, 0.6662052273750305, 0.6533380746841431, 0.6518986821174622, 0.6217518448829651, 0.6317017674446106, 0.6123202443122864, 0.601423442363739, 0.5856770873069763, 0.5883747339248657, 0.5695752501487732, 0.5535703301429749, 0.5579778552055359, 0.5642268061637878, 0.5343210697174072, 0.5257197618484497, 0.5327812433242798, 0.5240725874900818, 0.5180768966674805, 0.5196967124938965, 0.5026372671127319, 0.5004076957702637, 0.48533573746681213, 0.4952563941478729, 0.4786275625228882, 0.47780534625053406, 0.46883049607276917, 0.4648449122905731, 0.4662953019142151, 0.46505048871040344, 0.4523899555206299, 0.4457484781742096, 0.45304176211357117, 0.4436640739440918, 0.4356140196323395, 0.44266918301582336, 0.4392602741718292, 0.44351667165756226, 0.4257964491844177, 0.42680516839027405, 0.41229137778282166, 0.42040279507637024, 0.4110862910747528, 0.40981411933898926, 0.40596121549606323, 0.39648187160491943, 0.3981204628944397, 0.39029866456985474, 0.3894682228565216, 0.39484208822250366, 0.3924448788166046, 0.3782905638217926, 0.386783629655838, 0.3833390772342682, 0.3712117671966553, 0.37710335850715637, 0.3598438501358032, 0.3612792491912842, 0.36850911378860474, 0.3638213574886322, 0.3599347174167633, 0.35778653621673584, 0.34307023882865906, 0.3524931073188782], "accuracy": [0.26760005950927734, 0.5056135058403015, 0.5900145173072815, 0.6519614458084106, 0.669792652130127, 0.6966054439544678, 0.6977941989898682, 0.7201162576675415, 0.7240787148475647, 0.733588695526123, 0.7481178045272827, 0.7452120184898376, 0.7530049085617065, 0.7607977986335754, 0.7518161535263062, 0.767930269241333, 0.7618544697761536, 0.7749306559562683, 0.7744023203849792, 0.7815347909927368, 0.7784969210624695, 0.7895918488502502, 0.8000264167785645, 0.7971205711364746, 0.7913089394569397, 0.8068947196006775, 0.8099326491355896, 0.8068947196006775, 0.8072909712791443, 0.8127063512802124, 0.8098005652427673, 0.8146876096725464, 0.8198388814926147, 0.8202351331710815, 0.8215559124946594, 0.8256505131721497, 0.8226125836372375, 0.8267071843147278, 0.83119797706604, 0.8265751004219055, 0.8335754871368408, 0.8355567455291748, 0.839519202709198, 0.8355567455291748, 0.8403117060661316, 0.8421608805656433, 0.8379341959953308, 0.8400475382804871, 0.8345000743865967, 0.8412362933158875, 0.844010055065155, 0.8521991968154907, 0.846387505531311, 0.8486329317092896, 0.8525954484939575, 0.8551049828529358, 0.8532558679580688, 0.8565579056739807, 0.860652506351471, 0.8581429123878479, 0.8576145768165588, 0.8560295701026917, 0.8640866279602051, 0.8651432991027832, 0.8607845902442932, 0.8605204224586487, 0.8615770936012268, 0.8706908226013184, 0.868049144744873, 0.8619733452796936, 0.8708229064941406, 0.8640866279602051, 0.8679170608520508, 0.8746532797813416, 0.8729361891746521], "val_loss": [1.9257460832595825, 1.1504600048065186, 0.9255905151367188, 0.8658289313316345, 0.7831251621246338, 0.7046771049499512, 0.6769444346427917, 0.6708647012710571, 0.6817702054977417, 0.6443132162094116, 0.6312918066978455, 0.6034832000732422, 0.5782596468925476, 0.5785633325576782, 0.5900814533233643, 0.6088258624076843, 0.5656979084014893, 0.5474161505699158, 0.5353543162345886, 0.5233249664306641, 0.5279443264007568, 0.5143688321113586, 0.5335721969604492, 0.5103038549423218, 0.49485453963279724, 0.48798108100891113, 0.5101563930511475, 0.4846908450126648, 0.506902813911438, 0.49773192405700684, 0.4879058301448822, 0.4599308371543884, 0.4692893922328949, 0.46380314230918884, 0.46048372983932495, 0.4639456868171692, 0.447855144739151, 0.47062861919403076, 0.45519620180130005, 0.45645612478256226, 0.43190670013427734, 0.4292148947715759, 0.44749537110328674, 0.43487095832824707, 0.4310166537761688, 0.4301765561103821, 0.44310131669044495, 0.4527541995048523, 0.42794930934906006, 0.43309926986694336, 0.4119126498699188, 0.41994214057922363, 0.4155484139919281, 0.42998775839805603, 0.41659778356552124, 0.4026828706264496, 0.3954651653766632, 0.4066436290740967, 0.4010203778743744, 0.4234871566295624, 0.40086889266967773, 0.3955349028110504, 0.38973450660705566, 0.39914530515670776, 0.4234229624271393, 0.4033534824848175, 0.39130711555480957, 0.3917781710624695, 0.4066469371318817, 0.38025128841400146, 0.3863237202167511, 0.3868859112262726, 0.38406461477279663, 0.3966304659843445, 0.3891981542110443], "val_accuracy": [0.5653333067893982, 0.6433333158493042, 0.6733333468437195, 0.6830000281333923, 0.7093333601951599, 0.7409999966621399, 0.7546666860580444, 0.753000020980835, 0.7583333253860474, 0.753000020980835, 0.7649999856948853, 0.7730000019073486, 0.7910000085830688, 0.784333348274231, 0.7829999923706055, 0.7649999856948853, 0.7803333401679993, 0.8046666383743286, 0.8076666593551636, 0.8146666884422302, 0.8053333163261414, 0.8149999976158142, 0.8076666593551636, 0.8149999976158142, 0.8196666836738586, 0.8233333230018616, 0.8029999732971191, 0.8236666917800903, 0.8103333115577698, 0.8206666707992554, 0.8276666402816772, 0.8353333473205566, 0.8259999752044678, 0.8316666483879089, 0.8263333439826965, 0.8289999961853027, 0.8389999866485596, 0.8299999833106995, 0.824999988079071, 0.8273333311080933, 0.8429999947547913, 0.8446666598320007, 0.8339999914169312, 0.8413333296775818, 0.8453333377838135, 0.8426666855812073, 0.8320000171661377, 0.8376666903495789, 0.8460000157356262, 0.8339999914169312, 0.8519999980926514, 0.8460000157356262, 0.8476666808128357, 0.8450000286102295, 0.8473333120346069, 0.8523333072662354, 0.8579999804496765, 0.8526666760444641, 0.8543333411216736, 0.8479999899864197, 0.8526666760444641, 0.8586666584014893, 0.859333336353302, 0.8539999723434448, 0.8410000205039978, 0.8533333539962769, 0.859000027179718, 0.8610000014305115, 0.8486666679382324, 0.8643333315849304, 0.8600000143051147, 0.8603333234786987, 0.859666645526886, 0.859666645526886, 0.8603333234786987]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [2, 2, 3, 7, 3, 5], [0, 0, 1, 0, 0], [26, 39, 39], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 1, 1, 0, 1, 1, 0], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [6], [0]], "fitness": -0.30000001192092896, "mapping_values": [1, 7, 3, 4, 3, 10, 5, 5, 2, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3930141925811768, 2.304065227508545, 2.277353048324585, 2.2839818000793457, 2.3036272525787354, 2.3032114505767822, 2.303287982940674, 2.303098440170288], "accuracy": [0.18134988844394684, 0.09906221181154251, 0.15440496802330017, 0.11689341068267822, 0.1018359512090683, 0.09853387624025345, 0.09311848133802414, 0.09866596013307571], "val_loss": [2.305131673812866, 2.301947832107544, 1.8844718933105469, 2.303196907043457, 2.3026013374328613, 2.3025972843170166, 2.3026328086853027, 2.302623748779297], "val_accuracy": [0.09833333641290665, 0.1003333330154419, 0.3149999976158142, 0.10199999809265137, 0.10166666656732559, 0.10199999809265137, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 1, 3, 2], [2, 0, 1, 3, 1], [26, 39, 60], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 4, 0, 6, 3, 8, 2, 6], [3, 2, 0, 4, 0, 3, 1], [16, 80], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 7, 5, 4, 0, 5, 8, 7], [0, 6, 1, 5], [30], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 1, 1, 0, 1, 0, 12, 8, 4, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), alpha), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.pow(tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.sqrt(tf.math.add(grad, alpha))))), grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [30.05267333984375, 1.6373161791351546e+31, 3.4529571533203125, 2.7503271102905273, 3.2057595252990723, 3.0272057056427, 2.767066478729248, 2.802908182144165, 2.838703155517578], "accuracy": [0.20103025436401367, 0.10421344637870789, 0.09893012791872025, 0.09800554811954498, 0.1022322028875351, 0.10038304328918457, 0.1010434553027153, 0.10394927859306335, 0.09708096832036972], "val_loss": [8232.529296875, 3.709777355194092, 3.1575846672058105, 2.9993462562561035, 2.8615481853485107, 3.0075430870056152, 3.0621585845947266, 2.9237165451049805, 2.946800470352173], "val_accuracy": [0.0976666659116745, 0.09966666996479034, 0.09799999743700027, 0.10100000351667404, 0.09966666996479034, 0.0976666659116745, 0.09799999743700027, 0.09933333098888397, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 45, 99], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 9], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302947521209717, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10315678268671036, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [58, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4, 4, 6, 7, 3, 2], [2, 0, 3, 1, 0, 3, 0, 3, 4, 5, 0], [16, 1, 95, 45], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [7, 3, 0, 2, 8, 6, 2, 6], [0, 6, 6, 7, 3, 7, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 24, 13, 11, 4, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.pow(tf.math.pow(grad, alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), grad), tf.math.divide_no_nan(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.multiply(tf.math.add(grad, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]