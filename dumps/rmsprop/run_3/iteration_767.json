[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [9, 7, 4, 1, 5, 5, 5, 4], [3, 0, 0, 4, 0, 3, 1], [80, 75], [0, 0, 0, 0, 1, 1, 1, 1], [8, 3, 0, 2], [0, 1, 1, 4], [44], [1], [0], [1], [0]], "fitness": -0.8697142601013184, "mapping_values": [1, 10, 5, 5, 3, 1, 1, 0, 1, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), alpha)), alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1034915447235107, 1.196496844291687, 0.8073042035102844, 0.6755629777908325, 0.5965654253959656, 0.559497058391571, 0.5185270309448242, 0.5004537105560303, 0.46638065576553345, 0.44596028327941895, 0.42875170707702637, 0.4089866876602173, 0.3948677182197571, 0.3816984295845032, 0.36091697216033936, 0.3578874170780182, 0.3405761122703552, 0.33904990553855896, 0.32817232608795166, 0.32124409079551697, 0.3210184574127197, 0.309684693813324], "accuracy": [0.2900541424751282, 0.5988640785217285, 0.7004358768463135, 0.7478536367416382, 0.7677981853485107, 0.789988100528717, 0.8053097128868103, 0.8164047002792358, 0.8253863453865051, 0.8355567455291748, 0.8400475382804871, 0.8496896028518677, 0.8570862412452698, 0.8590674996376038, 0.8721436858177185, 0.8646149635314941, 0.878879964351654, 0.8800686597824097, 0.8804649114608765, 0.8824461698532104, 0.8796724081039429, 0.8837670087814331], "val_loss": [1.0884246826171875, 0.7798094153404236, 0.6624749302864075, 0.5668090581893921, 0.5305172204971313, 0.49634501338005066, 0.47224169969558716, 0.44154539704322815, 0.4321644604206085, 0.4162864089012146, 0.4046071767807007, 0.39779049158096313, 0.38946011662483215, 0.3833630084991455, 0.36911410093307495, 0.37241142988204956, 0.3582853674888611, 0.35269391536712646, 0.36080074310302734, 0.3796015679836273, 0.35819125175476074, 0.362568736076355], "val_accuracy": [0.6026666760444641, 0.7099999785423279, 0.7459999918937683, 0.7820000052452087, 0.7990000247955322, 0.8109999895095825, 0.8159999847412109, 0.8330000042915344, 0.8386666774749756, 0.8483333587646484, 0.8523333072662354, 0.8553333282470703, 0.856333315372467, 0.8579999804496765, 0.8619999885559082, 0.8633333444595337, 0.875, 0.8709999918937683, 0.8683333396911621, 0.8633333444595337, 0.8690000176429749, 0.871999979019165]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.7965714335441589, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2057406902313232, 1.583160638809204, 1.159731149673462, 0.963228166103363, 0.8813167810440063, 0.7989442348480225, 0.7998749017715454, 0.7496501207351685, 0.7382180094718933, 0.7231461405754089, 0.680813729763031, 0.6608928442001343, 0.6325584650039673, 0.626636266708374, 0.6325320601463318, 0.6027352809906006, 0.6023199558258057, 0.5944679975509644], "accuracy": [0.2709021270275116, 0.5107647776603699, 0.5918636918067932, 0.6557918190956116, 0.6760005354881287, 0.7161537408828735, 0.7042662501335144, 0.7236824631690979, 0.7277770638465881, 0.7306828498840332, 0.7454761862754822, 0.7556465268135071, 0.7648923397064209, 0.7683265209197998, 0.7662131786346436, 0.7746664881706238, 0.7825914621353149, 0.7790252566337585], "val_loss": [1.903019905090332, 1.0738667249679565, 0.9445693492889404, 0.8242701292037964, 0.7195991277694702, 0.7166346311569214, 0.6307194828987122, 0.629396378993988, 0.6353753209114075, 0.5815037488937378, 0.5855117440223694, 0.5512465238571167, 0.5500481128692627, 0.5645030736923218, 0.5442612171173096, 0.5518687963485718, 0.5956883430480957, 0.5261934995651245], "val_accuracy": [0.5866666436195374, 0.6696666479110718, 0.6853333115577698, 0.6909999847412109, 0.7289999723434448, 0.7266666889190674, 0.7593333125114441, 0.7699999809265137, 0.7506666779518127, 0.781000018119812, 0.781000018119812, 0.793666660785675, 0.7983333468437195, 0.7743333578109741, 0.7950000166893005, 0.7926666736602783, 0.7639999985694885, 0.7946666479110718]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 2, 0, 2], [3, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [2, 9, 4, 7, 0, 1, 5, 4, 7, 0], [1, 3, 0, 4, 0, 3, 1], [16, 1, 70], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 9], [2, 3, 1, 4], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 16, 10, 6, 3, 6, 4, 2, 1, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.subtract(grad, tf.math.square(tf.math.pow(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(beta), tf.constant(0.0, shape=shape, dtype=tf.float32)), sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2651.968017578125, 2.321725368499756, 1861722965016576.0, 2.3582053184509277, 2.3469045162200928, 2.32497501373291, 2.3238816261291504, 2.3509020805358887, 2.332515001296997, 2.3175089359283447, 2.3422794342041016, 2.3542580604553223], "accuracy": [0.09549596905708313, 0.09470347315073013, 0.09496764093637466, 0.09325055778026581, 0.09879804402589798, 0.09998679161071777, 0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.1002509593963623, 0.1014397069811821, 0.10276053100824356], "val_loss": [2.31286883354187, 51535000.0, 2.3588058948516846, 2.357206344604492, 2.3356053829193115, 2.319631338119507, 2.3396403789520264, 2.3467938899993896, 2.3123393058776855, 2.3312437534332275, 2.3559024333953857, 2.353700876235962], "val_accuracy": [0.10066666454076767, 0.10133333504199982, 0.09966666996479034, 0.09933333098888397, 0.09799999743700027, 0.09799999743700027, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.09966666996479034, 0.10066666454076767, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 7, 1, 3, 5], [0, 0, 1, 0, 2], [47, 61, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 9, 4, 7, 0, 3, 5, 4, 4, 6], [1, 0, 0, 5, 0, 3, 1], [16, 1, 8, 42], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 5], [0, 4, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 17, 10, 7, 4, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.multiply(tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad))), tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(grad)), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [7, 9, 2, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 29], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [7, 3, 0, 5, 7, 3, 8], [0, 1, 1, 4, 7], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 5, 3, 2, 1, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha))), alpha), tf.math.multiply(grad, tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3033409118652344, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}]