[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8345714211463928, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2100653648376465, 1.6116740703582764, 1.1345347166061401, 0.9687849283218384, 0.8623700737953186, 0.8440997004508972, 0.7739655375480652, 0.7583252787590027, 0.7353566288948059, 0.7062485814094543, 0.6995341777801514, 0.6723417043685913, 0.6599292755126953, 0.6363043785095215, 0.6325706243515015, 0.615993857383728, 0.6172086000442505, 0.5927994251251221, 0.6051489114761353, 0.5778393745422363, 0.5669211149215698, 0.5538500547409058, 0.541823148727417, 0.5486609935760498, 0.5389683842658997, 0.5272172689437866, 0.5092330574989319, 0.5233675837516785, 0.5223945379257202, 0.501017153263092, 0.5037309527397156, 0.4934905171394348, 0.5015606880187988, 0.4834958612918854, 0.4721687436103821, 0.46527543663978577, 0.46513456106185913, 0.46434807777404785, 0.45110857486724854, 0.4472194015979767], "accuracy": [0.26363757252693176, 0.5040285587310791, 0.6092986464500427, 0.6583014130592346, 0.6872276067733765, 0.693831741809845, 0.7189275026321411, 0.7206445932388306, 0.7318716049194336, 0.7390040755271912, 0.7401928305625916, 0.7561748623847961, 0.7567031979560852, 0.7658169269561768, 0.7638356685638428, 0.7740060687065125, 0.7683265209197998, 0.7840443849563599, 0.7733456492424011, 0.7891955971717834, 0.7917051911354065, 0.7991018295288086, 0.8018755912780762, 0.7976489067077637, 0.8004226684570312, 0.8062343001365662, 0.8129705190658569, 0.8083476424217224, 0.8094043135643005, 0.8117818236351013, 0.8141592741012573, 0.8173292875289917, 0.8178576231002808, 0.8231409192085266, 0.8253863453865051, 0.8317263126373291, 0.8364813327789307, 0.8271034359931946, 0.833179235458374, 0.8341038227081299], "val_loss": [1.9206777811050415, 1.1341922283172607, 0.9038016200065613, 0.7842892408370972, 0.7222403883934021, 0.7072468996047974, 0.6792580485343933, 0.6886935234069824, 0.6058481335639954, 0.601987898349762, 0.5982643961906433, 0.5833900570869446, 0.5454311370849609, 0.5480682253837585, 0.5439396500587463, 0.5450642704963684, 0.5198836326599121, 0.4959973692893982, 0.5580472946166992, 0.4946078956127167, 0.49339741468429565, 0.486695796251297, 0.4722050726413727, 0.4842202961444855, 0.45792046189308167, 0.45003294944763184, 0.459038645029068, 0.4555113911628723, 0.4393314719200134, 0.4588928520679474, 0.43900179862976074, 0.4444979727268219, 0.4344615936279297, 0.4199165999889374, 0.4075091481208801, 0.4096790850162506, 0.41754770278930664, 0.40192708373069763, 0.4149025082588196, 0.40653616189956665], "val_accuracy": [0.5346666574478149, 0.6330000162124634, 0.6673333048820496, 0.7143333554267883, 0.7436666488647461, 0.7210000157356262, 0.7366666793823242, 0.746999979019165, 0.7586666941642761, 0.7696666717529297, 0.765999972820282, 0.7699999809265137, 0.7933333516120911, 0.7820000052452087, 0.793666660785675, 0.7760000228881836, 0.796999990940094, 0.8133333325386047, 0.7753333449363708, 0.8063333630561829, 0.815666675567627, 0.8173333406448364, 0.8106666803359985, 0.815666675567627, 0.8323333263397217, 0.8323333263397217, 0.8253333568572998, 0.8236666917800903, 0.8393333554267883, 0.8326666951179504, 0.8366666436195374, 0.8349999785423279, 0.8349999785423279, 0.8413333296775818, 0.8536666631698608, 0.8510000109672546, 0.8423333168029785, 0.8533333539962769, 0.8456666469573975, 0.8486666679382324]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 5, 5, 9], [3, 0, 1, 0, 2], [26, 39, 5], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [3, 2, 0, 2, 0, 5, 4, 4, 1], [2, 2, 4, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 1, 0, 1, 1], [7, 3, 0, 2], [0, 1, 1, 6], [0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 4, 0, 1, 8, 1, 9], [6, 4, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 7, 3, 2, 16, 9, 7, 1, 8, 4, 4, 1, 10, 7, 3, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.math.square(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.square(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.negative(beta), tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.pow(tf.math.pow(tf.math.subtract(grad, grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.negative(tf.math.subtract(tf.math.sqrt(tf.math.subtract(grad, grad)), tf.constant(0.0, shape=shape, dtype=tf.float32))), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 5, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 7, 6, 8, 6, 2], [2, 2, 0, 4, 0, 3, 1, 4, 3], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 2, 21, 12, 9, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(tf.math.pow(tf.math.negative(tf.math.square(tf.math.square(beta))), tf.math.add(tf.math.divide_no_nan(beta, tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3037633895874023, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [5, 2, 3, 5, 3, 5], [0, 0, 1, 0, 2], [51, 39, 39], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [2, 1, 4, 3, 0, 5, 5, 4], [2, 2, 0, 2, 0, 1, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 7, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 12, 7, 5, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.pow(beta, beta), tf.math.multiply(tf.math.negative(tf.math.square(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [942480768.0, 77071007744.0, 785259102208.0, 3553347764224.0, 10704415358976.0, 25517721911296.0], "accuracy": [0.10355303436517715, 0.09840179979801178, 0.10777968913316727, 0.1014397069811821, 0.10368511080741882, 0.10421344637870789], "val_loss": [7906980352.0, 224114622464.0, 1440620740608.0, 5118657298432.0, 13264582868992.0, 28303196946432.0], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5, 4, 8], [1, 0, 1, 0, 2, 1], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 1, 4, 5, 0, 5, 5, 4, 1, 9], [2, 0, 0, 4, 0, 3, 1], [16, 1, 52, 57], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [7, 3, 0, 2, 4, 9], [0, 1, 1, 4], [62, 54], [1], [0], [1], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 14, 8, 6, 2, 15, 10, 5, 4, 10, 6, 4, 2, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.pow(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.pow(beta, tf.math.square(tf.math.negative(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.pow(tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), grad))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(alpha, grad))), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.309344530105591, 2.309237241744995, 2.310739278793335, 2.30989933013916, 2.3101234436035156, 2.3111674785614014], "accuracy": [0.09602430462837219, 0.09549596905708313, 0.09232597798109055, 0.0944393053650856, 0.08981640636920929, 0.09113723784685135], "val_loss": [2.308833122253418, 2.308833122253418, 2.308833122253418, 2.308833122253418, 2.308833122253418, 2.308833122253418], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]