[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.7928571701049805, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2118186950683594, 1.5941526889801025, 1.141190528869629, 0.9691365957260132, 0.8741456270217896, 0.8090574741363525, 0.8015196919441223, 0.7438539862632751, 0.711400032043457, 0.6971784234046936, 0.6852455735206604, 0.6545553803443909, 0.6498190760612488, 0.6242591738700867, 0.6189504265785217, 0.6084267497062683, 0.5884677767753601, 0.5871136784553528, 0.5772580504417419, 0.5653380155563354, 0.5562562346458435, 0.553057849407196], "accuracy": [0.261260062456131, 0.5066701769828796, 0.6057323813438416, 0.6513010263442993, 0.6861709356307983, 0.702681303024292, 0.6983225345611572, 0.7234182953834534, 0.7378153204917908, 0.7367587089538574, 0.7464007139205933, 0.754589855670929, 0.7524765729904175, 0.7660810947418213, 0.763439416885376, 0.7683265209197998, 0.7754589915275574, 0.7808743715286255, 0.7777044177055359, 0.7865539789199829, 0.7931581139564514, 0.7889314293861389], "val_loss": [1.9314789772033691, 1.1484122276306152, 0.9118344783782959, 0.8380641937255859, 0.7491697669029236, 0.7531871795654297, 0.7205840945243835, 0.6724987626075745, 0.6376264095306396, 0.6923037171363831, 0.5911523699760437, 0.6291052103042603, 0.6028288006782532, 0.5699648261070251, 0.5814296007156372, 0.5766767859458923, 0.5560500621795654, 0.5476855635643005, 0.5380589365959167, 0.534134566783905, 0.5293889045715332, 0.5416552424430847], "val_accuracy": [0.5410000085830688, 0.6389999985694885, 0.687666654586792, 0.7046666741371155, 0.7160000205039978, 0.7043333053588867, 0.7276666760444641, 0.7396666407585144, 0.7540000081062317, 0.7300000190734863, 0.7773333191871643, 0.7426666617393494, 0.7636666893959045, 0.7950000166893005, 0.7943333387374878, 0.7826666831970215, 0.8019999861717224, 0.8003333210945129, 0.7976666688919067, 0.7990000247955322, 0.8013333082199097, 0.7986666560173035]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 7, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 7, 0, 6, 3, 8, 2], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [0, 7, 7, 9], [0, 1, 1, 4], [0, 66], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 0, 6, 4, 2, 2, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [654624.6875, 601890432.0, 33042436096.0, 559773384704.0, 4897637400576.0, 28454489686016.0], "accuracy": [0.09708096832036972, 0.09813763201236725, 0.09919429570436478, 0.09893012791872025, 0.1018359512090683, 0.09694888442754745], "val_loss": [10995669.0, 3451332608.0, 111622070272.0, 1360756080640.0, 9607574454272.0, 47814641975296.0], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [5, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [2, 6, 4, 7, 0, 3, 4, 4, 1, 5, 5, 8, 1, 1, 4, 2, 5, 7, 9, 2, 2, 2, 6, 3, 6, 5, 4, 4, 7, 8, 2, 6], [1, 2, 0, 4, 0, 3, 1, 3, 2, 4, 0, 2, 5, 1, 4, 1, 5, 4, 4, 2, 1, 1, 3, 1], [16, 1, 87, 3], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [1, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 56, 32, 24, 4, 8, 4, 4, 0, 1, 0, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.pow(tf.math.subtract(tf.math.square(alpha), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.math.sqrt(tf.math.subtract(tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.square(grad), tf.math.add(alpha, grad)), beta)), grad)))), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.multiply(alpha, tf.math.divide_no_nan(grad, alpha))))), grad)), tf.math.square(grad)), tf.math.pow(tf.math.pow(grad, beta), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(alpha, grad), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(alpha), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3146979808807373, 2.375356674194336, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09100515395402908, 0.09021265059709549, 0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.331799268722534, 2.507784605026245, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10133333504199982, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 7, 4, 7], [1, 0, 1, 0, 2, 3, 2, 2], [26, 39, 51], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [2, 1, 4, 7, 0, 5, 5, 4], [1, 2, 0, 0, 0, 3, 1], [16, 1, 67], [0, 0, 0, 1, 0, 1, 1, 1], [2, 3, 0, 6], [0, 1, 1, 4], [0], [0, 0, 1], [0, 8], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 9, 8, 2, 11, 6, 5, 3, 8, 4, 4, 1, 3, 2, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), tf.math.pow(grad, tf.math.add(grad, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.math.subtract(beta, tf.math.pow(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.square(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 1, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [7, 9, 4, 7, 0, 5, 5, 4], [1, 5, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [7, 3, 0, 6, 9, 3, 0, 2, 5, 6, 7], [0, 7, 1, 4, 0, 2, 4], [67, 30, 25], [1], [0], [0], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 1, 0, 1, 1, 10, 7, 3, 2, 18, 11, 7, 3, 1, 0, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(grad)), tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.math.square(grad))))), tf.math.divide_no_nan(tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3102023601531982, 2.309922218322754, 2.310137987136841, 2.3103294372558594, 2.3093647956848145, 2.3099374771118164], "accuracy": [0.09325055778026581, 0.09681680053472519, 0.09259014576673508, 0.09140139818191528, 0.09747721254825592, 0.08981640636920929], "val_loss": [2.308699131011963, 2.308699131011963, 2.308699131011963, 2.308699131011963, 2.308699131011963, 2.308699131011963], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}]