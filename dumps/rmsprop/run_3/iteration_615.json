[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8479999899864197, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2105889320373535, 1.6020854711532593, 1.1829369068145752, 1.0033706426620483, 0.8737636804580688, 0.8349431753158569, 0.7942571043968201, 0.7632102370262146, 0.7290524244308472, 0.7166087031364441, 0.6719719767570496, 0.6750002503395081, 0.671690046787262, 0.652749240398407, 0.6339622735977173, 0.627574622631073, 0.6064503192901611, 0.6036161184310913, 0.5837879180908203, 0.5855069756507874, 0.5827045440673828, 0.5640499591827393, 0.553585410118103, 0.5685049891471863, 0.5284618735313416, 0.5195185542106628, 0.5219060778617859, 0.5230197310447693, 0.5100439190864563, 0.5137265920639038, 0.5079986453056335, 0.5023165345191956, 0.4908839464187622, 0.4855195879936218, 0.4829636812210083, 0.4661109149456024, 0.47026023268699646, 0.471861332654953, 0.46866777539253235, 0.4560209810733795, 0.458772212266922, 0.45092394948005676, 0.45394355058670044, 0.44128748774528503, 0.43459007143974304, 0.44210004806518555, 0.4327987730503082, 0.4326436519622803], "accuracy": [0.26522254943847656, 0.5127459764480591, 0.5892220139503479, 0.6409985423088074, 0.6880200505256653, 0.6931713223457336, 0.7104741930961609, 0.7182670831680298, 0.7277770638465881, 0.7338528633117676, 0.750759482383728, 0.7457403540611267, 0.752212405204773, 0.7582882046699524, 0.7635715007781982, 0.7589486241340637, 0.7738739848136902, 0.7766477465629578, 0.7869502305984497, 0.7783648371696472, 0.7810064554214478, 0.7923656105995178, 0.7915731072425842, 0.7857614755630493, 0.8083476424217224, 0.8088759779930115, 0.807158887386322, 0.8074230551719666, 0.813498854637146, 0.806630551815033, 0.8138951063156128, 0.8157442808151245, 0.8201030492782593, 0.8257825970649719, 0.8251221776008606, 0.8276317715644836, 0.83119797706604, 0.8289526104927063, 0.8269713521003723, 0.8302733898162842, 0.8315942287445068, 0.8339717388153076, 0.8363492488861084, 0.8372738361358643, 0.8433496356010437, 0.8400475382804871, 0.8387266993522644, 0.8391229510307312], "val_loss": [1.918063998222351, 1.1155483722686768, 0.9165469408035278, 0.7921984195709229, 0.7431625723838806, 0.6976271271705627, 0.7650741338729858, 0.6560220718383789, 0.6246883869171143, 0.6140608191490173, 0.5957919955253601, 0.6022228598594666, 0.5773223638534546, 0.5605939030647278, 0.577538251876831, 0.5440638065338135, 0.5425158143043518, 0.5474092364311218, 0.5232447385787964, 0.5256913304328918, 0.5122997760772705, 0.5019758939743042, 0.4922754764556885, 0.5132149457931519, 0.48813992738723755, 0.4778362512588501, 0.5030822157859802, 0.470376193523407, 0.4893733859062195, 0.4613872468471527, 0.4626520872116089, 0.46002766489982605, 0.4494864046573639, 0.4561718702316284, 0.44750210642814636, 0.43565046787261963, 0.42517921328544617, 0.43559789657592773, 0.4539296329021454, 0.4341820478439331, 0.4182489812374115, 0.4274348020553589, 0.41023027896881104, 0.41658517718315125, 0.4280152916908264, 0.41751691699028015, 0.40596476197242737, 0.40909266471862793], "val_accuracy": [0.5706666707992554, 0.6190000176429749, 0.6753333210945129, 0.7153333425521851, 0.718999981880188, 0.7369999885559082, 0.6966666579246521, 0.750333309173584, 0.7670000195503235, 0.7706666588783264, 0.781333327293396, 0.7760000228881836, 0.7773333191871643, 0.7940000295639038, 0.7799999713897705, 0.7983333468437195, 0.7983333468437195, 0.7846666574478149, 0.8023333549499512, 0.796999990940094, 0.8043333292007446, 0.812333345413208, 0.8216666579246521, 0.8076666593551636, 0.8190000057220459, 0.8213333487510681, 0.8076666593551636, 0.8236666917800903, 0.8140000104904175, 0.8276666402816772, 0.831333339214325, 0.8193333148956299, 0.8363333344459534, 0.8286666870117188, 0.8333333134651184, 0.8423333168029785, 0.8446666598320007, 0.840666651725769, 0.8213333487510681, 0.8383333086967468, 0.847000002861023, 0.8450000286102295, 0.8533333539962769, 0.8463333249092102, 0.8416666388511658, 0.8506666421890259, 0.8510000109672546, 0.8423333168029785]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 78, 39], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [3, 2, 4, 6, 5, 3, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 56], [0, 0, 0, 1, 1, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.7911428809165955, "mapping_values": [1, 10, 5, 5, 3, 13, 7, 6, 2, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(grad), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2461366653442383, 1.7580386400222778, 1.2155067920684814, 1.005893588066101, 0.8856323957443237, 0.8937010169029236, 0.8153024315834045, 0.7524345517158508, 0.736112654209137, 0.711205005645752, 0.6991041302680969, 0.7224575281143188, 0.666705310344696, 0.653601348400116, 0.6294199824333191, 0.657558262348175, 0.6274820566177368, 0.6062198281288147, 0.6097670197486877, 0.5975629687309265, 0.5881224870681763], "accuracy": [0.21965394914150238, 0.4559503495693207, 0.5787875056266785, 0.6341302394866943, 0.6752080321311951, 0.6760005354881287, 0.6966054439544678, 0.7240787148475647, 0.719852089881897, 0.7250033020973206, 0.7371549606323242, 0.7285695672035217, 0.743891179561615, 0.7518161535263062, 0.7640998363494873, 0.7528728246688843, 0.763439416885376, 0.769911527633667, 0.7685906887054443, 0.7740060687065125, 0.7795535326004028], "val_loss": [2.069406032562256, 1.1565831899642944, 0.9034239649772644, 0.8002635836601257, 0.8270816802978516, 0.7448837161064148, 0.6808977127075195, 0.6410983800888062, 0.6305031180381775, 0.6084699630737305, 0.7964559197425842, 0.6006883382797241, 0.6008707284927368, 0.5940094590187073, 0.5816885232925415, 0.5658637881278992, 0.5580857992172241, 0.6064946055412292, 0.5693203210830688, 0.5344367027282715, 0.5269728302955627], "val_accuracy": [0.4860000014305115, 0.6060000061988831, 0.6520000100135803, 0.6993333101272583, 0.6796666383743286, 0.7183333039283752, 0.7333333492279053, 0.7666666507720947, 0.7670000195503235, 0.7706666588783264, 0.7086666822433472, 0.7703333497047424, 0.778333306312561, 0.7620000243186951, 0.7823333144187927, 0.8023333549499512, 0.7946666479110718, 0.737333357334137, 0.7756666541099548, 0.7990000247955322, 0.8019999861717224]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 5, 2, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [2, 6, 4, 6, 3, 5, 6, 4], [2, 2, 0, 4, 0, 3, 1, 0], [16, 1, 48], [0, 1, 1, 1, 0, 1, 1, 1], [7, 3, 0, 3], [4, 1, 1, 2], [0], [0, 0, 1, 0, 1], [0, 1, 5], [1, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 16, 8, 8, 3, 3, 1, 2, 0, 5, 3, 2, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.divide_no_nan(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)), alpha), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(alpha, tf.math.square(grad)))", "other_info": {"loss": [2.342867612838745, 4.110059329332166e+22, 2.3041582107543945, 2.3041694164276123, 2.3048458099365234, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09642054885625839, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09721305221319199, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.302215576171875, 2.304417371749878, 2.304426908493042, 2.3045215606689453, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0676666647195816, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 1, 0, 5], [0, 0, 1, 1, 1], [26, 39, 17], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4, 6, 4, 4, 0, 7], [1, 2, 3, 4, 0, 3, 1, 3, 4, 4, 5], [16, 1, 48], [0, 0, 1, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 8, 4, 4, 2, 24, 13, 11, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(grad, grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(grad, alpha)), tf.math.pow(grad, tf.math.pow(grad, tf.math.negative(tf.math.add(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3101203441619873, 2.3099770545959473, 2.309711456298828, 2.310657501220703, 2.309891939163208, 2.310913562774658], "accuracy": [0.09060890227556229, 0.09708096832036972, 0.09179764986038208, 0.08757099509239197, 0.09192973375320435, 0.08757099509239197], "val_loss": [2.308140277862549, 2.308140277862549, 2.308140277862549, 2.308140277862549, 2.308140277862549, 2.308140277862549], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 1, 2, 5], [0, 1, 1, 2, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 4, 6, 3, 0, 5, 1, 0], [2, 2, 0, 4, 3, 3, 1], [16, 1, 48], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [7, 3, 0, 3, 7, 3, 1, 4, 9, 5], [4, 4, 3, 2, 7, 3, 4], [0], [1], [0], [1], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 6, 3, 3, 1, 16, 9, 7, 1, 17, 10, 7, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(beta), tf.math.square(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.negative(grad))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.add(grad, grad), sigma)), tf.math.multiply(beta, tf.math.subtract(grad, tf.math.pow(sigma, tf.constant(0.0, shape=shape, dtype=tf.float32))))), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3110294342041016, 2.3102450370788574, 2.3097312450408936, 2.309462785720825, 2.3096671104431152, 2.3103997707366943], "accuracy": [0.0948355570435524, 0.09338264167308807, 0.09536388516426086, 0.09259014576673508, 0.09417514503002167, 0.09087307006120682], "val_loss": [2.3088808059692383, 2.3088808059692383, 2.3088808059692383, 2.3088808059692383, 2.3088808059692383, 2.3088808059692383], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]