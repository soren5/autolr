[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8488571643829346, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.20965838432312, 1.605275273323059, 1.174899697303772, 0.9858217835426331, 0.8854502439498901, 0.8390660285949707, 0.7964760661125183, 0.7493116855621338, 0.7368370890617371, 0.7423945665359497, 0.6912937164306641, 0.652807354927063, 0.6722995042800903, 0.6303475499153137, 0.638758659362793, 0.6335452795028687, 0.6118106245994568, 0.5839931964874268, 0.6074797511100769, 0.5692148208618164, 0.5713926553726196, 0.5606203079223633, 0.5617382526397705, 0.5447259545326233, 0.5329451560974121, 0.5268599390983582, 0.5340890884399414, 0.513875424861908, 0.5041987299919128, 0.5130024552345276, 0.494832307100296, 0.49036717414855957, 0.4784986972808838, 0.4866924583911896, 0.47488248348236084, 0.47904762625694275, 0.46592438220977783, 0.45425689220428467, 0.45789527893066406, 0.4461337625980377, 0.46881693601608276, 0.44601550698280334, 0.44031885266304016, 0.44752898812294006, 0.4237683117389679, 0.4238412082195282, 0.4305957853794098, 0.42562389373779297, 0.4144071340560913, 0.4031882882118225, 0.4081343710422516, 0.40373241901397705, 0.4025316536426544, 0.39863044023513794, 0.4013623595237732, 0.39603057503700256, 0.3858937621116638, 0.37867599725723267, 0.38853347301483154, 0.3791296184062958, 0.38104328513145447], "accuracy": [0.27380794286727905, 0.49848103523254395, 0.5904107689857483, 0.6441685557365417, 0.6736230254173279, 0.6915863156318665, 0.7107383608818054, 0.7235503792762756, 0.7215691208839417, 0.7257958054542542, 0.744419515132904, 0.7537974119186401, 0.7428345084190369, 0.76106196641922, 0.7605336308479309, 0.7605336308479309, 0.7684586048126221, 0.7832518815994263, 0.7713643908500671, 0.7872143983840942, 0.7841764688491821, 0.7869502305984497, 0.785629391670227, 0.7952714562416077, 0.8018755912780762, 0.8061022162437439, 0.7924976944923401, 0.8094043135643005, 0.8152159452438354, 0.809140145778656, 0.8157442808151245, 0.8182538747787476, 0.8231409192085266, 0.8165367841720581, 0.8222163319587708, 0.8197067975997925, 0.8285563588142395, 0.8327829837799072, 0.8318583965301514, 0.8350284099578857, 0.8256505131721497, 0.8327829837799072, 0.8381983637809753, 0.830669641494751, 0.8444063067436218, 0.8425571322441101, 0.8422929644584656, 0.8389908671379089, 0.846387505531311, 0.848368763923645, 0.8449346423149109, 0.8486329317092896, 0.8486329317092896, 0.852331280708313, 0.8451988101005554, 0.8479725122451782, 0.8595958352088928, 0.8597279191017151, 0.8549728989601135, 0.86118084192276, 0.8515387773513794], "val_loss": [1.9230862855911255, 1.0929569005966187, 0.8973206281661987, 0.804622232913971, 0.7767345309257507, 0.6857672333717346, 0.6721967458724976, 0.6734874844551086, 0.6915271878242493, 0.6241103410720825, 0.6087749600410461, 0.5950765609741211, 0.5749830603599548, 0.5841686725616455, 0.5530827641487122, 0.5793383121490479, 0.5353695750236511, 0.5145910382270813, 0.5285325646400452, 0.5221818685531616, 0.5045897364616394, 0.5228636264801025, 0.5050208568572998, 0.492615282535553, 0.5042333006858826, 0.48819345235824585, 0.47438427805900574, 0.4683537483215332, 0.4591546952724457, 0.4624483585357666, 0.45263615250587463, 0.45954930782318115, 0.460252970457077, 0.47306180000305176, 0.44545361399650574, 0.4519936442375183, 0.4357885718345642, 0.4363263249397278, 0.4398147761821747, 0.4561229944229126, 0.43614399433135986, 0.4212207794189453, 0.43167099356651306, 0.4146358370780945, 0.41952022910118103, 0.42774438858032227, 0.4073605239391327, 0.40770068764686584, 0.41299423575401306, 0.40159663558006287, 0.405976265668869, 0.4202680289745331, 0.40908488631248474, 0.4110962748527527, 0.3965720534324646, 0.38916847109794617, 0.3874070346355438, 0.3962351977825165, 0.4036594331264496, 0.39962854981422424, 0.390293687582016], "val_accuracy": [0.4936666786670685, 0.6496666669845581, 0.6783333420753479, 0.690666675567627, 0.7013333439826965, 0.7403333187103271, 0.7459999918937683, 0.7223333120346069, 0.7160000205039978, 0.7713333368301392, 0.7720000147819519, 0.7730000019073486, 0.7853333353996277, 0.7749999761581421, 0.7973333597183228, 0.7603333592414856, 0.79666668176651, 0.8023333549499512, 0.8036666512489319, 0.8069999814033508, 0.8106666803359985, 0.800000011920929, 0.8059999942779541, 0.8190000057220459, 0.8169999718666077, 0.8166666626930237, 0.8213333487510681, 0.8266666531562805, 0.8306666612625122, 0.8299999833106995, 0.8323333263397217, 0.8296666741371155, 0.8230000138282776, 0.8226666450500488, 0.8336666822433472, 0.8286666870117188, 0.8383333086967468, 0.8386666774749756, 0.8343333601951599, 0.8299999833106995, 0.8413333296775818, 0.8443333506584167, 0.8323333263397217, 0.8473333120346069, 0.8423333168029785, 0.8450000286102295, 0.8506666421890259, 0.8526666760444641, 0.8503333330154419, 0.8546666502952576, 0.847000002861023, 0.8426666855812073, 0.8533333539962769, 0.8500000238418579, 0.8579999804496765, 0.8633333444595337, 0.8613333106040955, 0.8573333621025085, 0.8496666550636292, 0.8519999980926514, 0.8603333234786987]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8071428537368774, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.207691192626953, 1.582265019416809, 1.1359461545944214, 0.9708492159843445, 0.8810930848121643, 0.7922207713127136, 0.773470401763916, 0.7289641499519348, 0.6981021165847778, 0.6986539959907532, 0.6722325682640076, 0.6590689420700073, 0.6529920697212219, 0.6301742196083069, 0.602836012840271, 0.5976459980010986, 0.5759299397468567, 0.5784761309623718, 0.5765870809555054, 0.5535592436790466, 0.5518499612808228, 0.538939893245697, 0.5290530920028687, 0.5240961313247681, 0.5165635943412781, 0.5086499452590942, 0.5090301036834717, 0.4928162395954132, 0.4894130527973175, 0.4839635491371155, 0.484819620847702, 0.4688951075077057, 0.4755462110042572, 0.46437427401542664, 0.45807650685310364, 0.4597369432449341, 0.4451013207435608, 0.44856178760528564], "accuracy": [0.275260865688324, 0.5182934999465942, 0.600581169128418, 0.6532822847366333, 0.6737551093101501, 0.7062475085258484, 0.7029454708099365, 0.7316074371337891, 0.7428345084190369, 0.7374191284179688, 0.7506273984909058, 0.7497028112411499, 0.7498348951339722, 0.7643640041351318, 0.7777044177055359, 0.7754589915275574, 0.7828556299209595, 0.7843085527420044, 0.7865539789199829, 0.791969358921051, 0.7964601516723633, 0.7987055778503418, 0.8041210174560547, 0.8067626357078552, 0.809140145778656, 0.8124422430992126, 0.8103289008140564, 0.8131026029586792, 0.8251221776008606, 0.8201030492782593, 0.8193105459213257, 0.8255184292793274, 0.8212917447090149, 0.8274996876716614, 0.83119797706604, 0.829216718673706, 0.8396512866020203, 0.8363492488861084], "val_loss": [1.9155749082565308, 1.1023601293563843, 0.9742224812507629, 0.8287298083305359, 0.7777963876724243, 0.7134059071540833, 0.6840845346450806, 0.6596173644065857, 0.6529752612113953, 0.6354179978370667, 0.6231406927108765, 0.6841995716094971, 0.6118711829185486, 0.6105781197547913, 0.5649026036262512, 0.5510457754135132, 0.6007732152938843, 0.5981452465057373, 0.5585008859634399, 0.5236765742301941, 0.539869487285614, 0.5095514059066772, 0.5523291230201721, 0.5008151531219482, 0.5161519646644592, 0.4912596344947815, 0.4947376847267151, 0.4855303466320038, 0.482317715883255, 0.497220903635025, 0.4655081033706665, 0.4959172308444977, 0.4552457332611084, 0.46210628747940063, 0.4702131748199463, 0.45698511600494385, 0.44236186146736145, 0.4557824432849884], "val_accuracy": [0.5419999957084656, 0.6073333621025085, 0.656333327293396, 0.6946666836738586, 0.7046666741371155, 0.718666672706604, 0.7289999723434448, 0.7366666793823242, 0.7366666793823242, 0.7556666731834412, 0.7516666650772095, 0.7233333587646484, 0.7576666474342346, 0.7620000243186951, 0.7906666398048401, 0.7889999747276306, 0.7683333158493042, 0.7696666717529297, 0.7710000276565552, 0.7956666946411133, 0.7883333563804626, 0.8090000152587891, 0.7863333225250244, 0.8146666884422302, 0.7976666688919067, 0.8146666884422302, 0.812333345413208, 0.815666675567627, 0.8130000233650208, 0.7986666560173035, 0.8183333277702332, 0.8009999990463257, 0.8326666951179504, 0.8259999752044678, 0.8169999718666077, 0.8276666402816772, 0.8326666951179504, 0.8193333148956299]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 4, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 5, 0], [16, 1], [0, 0, 1, 1, 1], [2, 7], [0, 6, 4], [0], [1], [0], [7], [0]], "fitness": -0.24257142841815948, "mapping_values": [1, 6, 3, 3, 2, 12, 7, 5, 2, 5, 2, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.373776435852051, 2.302504539489746, 2.27437686920166, 2.2436599731445312, 2.3069825172424316, 2.286517381668091, 2.306363105773926, 2.3043386936187744], "accuracy": [0.19918107986450195, 0.10434553027153015, 0.16972659528255463, 0.228899747133255, 0.10289261490106583, 0.1554616242647171, 0.09840179979801178, 0.09919429570436478], "val_loss": [2.303171396255493, 2.29659366607666, 2.2165110111236572, 2.311070203781128, 2.297621726989746, 2.312176465988159, 2.306640863418579, 2.3038525581359863], "val_accuracy": [0.10400000214576721, 0.2293333262205124, 0.2370000034570694, 0.09966666996479034, 0.14166666567325592, 0.09933333098888397, 0.09966666996479034, 0.11733333021402359]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 2, 3, 1, 4, 5], [0, 0, 1, 3, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 0, 3, 3, 8, 2, 9], [3, 0, 3, 1, 0], [46, 1], [0, 0, 1, 0], [0, 7, 9], [0, 2], [0, 29], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 12, 8, 4, 2, 4, 3, 1, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.multiply(tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5, 1, 3, 0, 3, 7, 4, 6, 4, 6, 4, 0], [0, 0, 1, 0, 2, 0, 3, 2, 0, 0, 3, 0, 3, 3], [0, 90, 39, 50, 73, 35, 57], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 5, 2, 1, 0], [2, 0, 3, 1, 0, 5], [16, 1], [0, 1, 1, 0], [0, 7], [0, 6], [0], [0, 0], [0, 9], [2], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 31, 17, 14, 7, 15, 9, 6, 2, 2, 1, 1, 1, 2, 2, 0, 1], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.math.pow(tf.math.divide_no_nan(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, grad)), tf.math.negative(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), grad)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(tf.math.negative(grad), alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3091447353363037, 2.3095591068267822, 2.3102729320526123, 2.3093714714050293, 2.309343099594116, 2.309354066848755], "accuracy": [0.09694888442754745, 0.09470347315073013, 0.09060890227556229, 0.09734513610601425, 0.09219389408826828, 0.09391097724437714], "val_loss": [2.3082871437072754, 2.3082871437072754, 2.3082871437072754, 2.3082871437072754, 2.3082871437072754, 2.3082871437072754], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 0], [0, 0, 1, 0, 2], [0, 36, 39], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 4, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 7, 6, 1, 2, 4, 9, 7, 0], [0, 6, 7, 0, 3, 0], [0, 46, 83, 56], [1], [0], [2], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 12, 7, 5, 3, 1, 0, 1, 0, 15, 9, 6, 4, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.add(tf.math.pow(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), grad), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.negative(sigma), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3094472885131836, 2.3103678226470947, 2.3097100257873535, 2.309438467025757, 2.310833215713501, 2.310298442840576], "accuracy": [0.09192973375320435, 0.09272222965955734, 0.09391097724437714, 0.08757099509239197, 0.08492933213710785, 0.08770307898521423], "val_loss": [2.3078994750976562, 2.3078994750976562, 2.3078994750976562, 2.3078994750976562, 2.3078994750976562, 2.3078994750976562], "val_accuracy": [0.0846666693687439, 0.0846666693687439, 0.0846666693687439, 0.0846666693687439, 0.0846666693687439, 0.0846666693687439]}}]