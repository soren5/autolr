[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8397142887115479, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2073652744293213, 1.5966824293136597, 1.1579903364181519, 0.9713178873062134, 0.9097420573234558, 0.8081264495849609, 0.7814863920211792, 0.7682687044143677, 0.7133058905601501, 0.6939519047737122, 0.7070180773735046, 0.6788461208343506, 0.6583805680274963, 0.632125198841095, 0.6370096206665039, 0.6166804432868958, 0.5823274254798889, 0.5986574292182922, 0.5831149816513062, 0.565898597240448, 0.5748435258865356, 0.54929119348526, 0.5330430865287781, 0.5572794079780579, 0.5233532190322876, 0.518612802028656, 0.5254170298576355, 0.503798246383667, 0.5019455552101135, 0.48698294162750244, 0.4864279627799988, 0.4788435697555542, 0.48253604769706726, 0.47228434681892395, 0.47011107206344604], "accuracy": [0.2697133719921112, 0.5089156031608582, 0.599128246307373, 0.6536785364151001, 0.6709813475608826, 0.7094175219535828, 0.7079645991325378, 0.7136441469192505, 0.7371549606323242, 0.7434949278831482, 0.7337207794189453, 0.7470611333847046, 0.7563069462776184, 0.7701756954193115, 0.7640998363494873, 0.7696473598480225, 0.7852331399917603, 0.778761088848114, 0.7840443849563599, 0.7907806038856506, 0.7839123010635376, 0.7926297783851624, 0.8063663840293884, 0.7922335267066956, 0.8112534880638123, 0.8083476424217224, 0.8029322624206543, 0.8161405324935913, 0.8158763647079468, 0.8208954930305481, 0.8191784620285034, 0.8253863453865051, 0.8178576231002808, 0.8238013386726379, 0.8264430165290833], "val_loss": [1.9155869483947754, 1.0860222578048706, 0.8952941298484802, 0.81671541929245, 0.7725704908370972, 0.6953007578849792, 0.6694424748420715, 0.6569443941116333, 0.6522749066352844, 0.6149423718452454, 0.6733728647232056, 0.626198947429657, 0.6006419062614441, 0.5769907236099243, 0.6030694842338562, 0.5588589906692505, 0.5406176447868347, 0.5470619201660156, 0.5314297676086426, 0.5287407040596008, 0.5291866660118103, 0.526659369468689, 0.5388754606246948, 0.5243844389915466, 0.5181118249893188, 0.5226088762283325, 0.4933832883834839, 0.4819507598876953, 0.48549556732177734, 0.4821017384529114, 0.4796367287635803, 0.47221776843070984, 0.4835807979106903, 0.4874589145183563, 0.46906355023384094], "val_accuracy": [0.534333348274231, 0.6636666655540466, 0.7006666660308838, 0.6983333230018616, 0.7099999785423279, 0.7426666617393494, 0.7473333477973938, 0.7426666617393494, 0.7546666860580444, 0.7723333239555359, 0.7369999885559082, 0.7649999856948853, 0.777999997138977, 0.7850000262260437, 0.7683333158493042, 0.7863333225250244, 0.8036666512489319, 0.7956666946411133, 0.7990000247955322, 0.8023333549499512, 0.8063333630561829, 0.7986666560173035, 0.7946666479110718, 0.8106666803359985, 0.8133333325386047, 0.8043333292007446, 0.8113333582878113, 0.8240000009536743, 0.8203333616256714, 0.8246666789054871, 0.8230000138282776, 0.8240000009536743, 0.8186666369438171, 0.8246666789054871, 0.8243333101272583]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 2, 3, 3, 3, 5, 6, 9, 7, 0, 0, 9], [0, 0, 1, 0, 2], [26, 39, 39, 69, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 0, 1, 0], [7, 9, 0, 2], [0, 1, 1, 4], [0, 32], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 12, 5, 5, 14, 8, 6, 2, 4, 3, 1, 2, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.negative(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [271.55712890625, 1106.891845703125, 1938.4599609375, 2790.073486328125, 3635.700927734375, 4465.47412109375], "accuracy": [0.12508255243301392, 0.09708096832036972, 0.09972262382507324, 0.09879804402589798, 0.09721305221319199, 0.09589222073554993], "val_loss": [744.3665771484375, 1590.8824462890625, 2435.89404296875, 3279.316650390625, 4121.1796875, 4961.4677734375], "val_accuracy": [0.1003333330154419, 0.09966666996479034, 0.1003333330154419, 0.09966666996479034, 0.10000000149011612, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [4, 7, 3, 1, 3, 5], [3, 0, 1, 0, 2, 0], [26, 39, 39], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [2, 2, 4, 4, 0, 5, 2, 4], [2, 2, 0, 4, 0, 5, 1], [16, 1], [0, 0, 0, 1, 1, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 5, 6, 3, 11, 6, 5, 2, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.negative(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0944393053650856, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [84, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 4, 5, 4, 6], [2, 2, 0, 4, 5, 3, 1, 5], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0], [7, 3, 0, 7, 2, 2, 7, 9], [0, 1, 1, 4, 5, 4], [0, 7], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 17, 9, 8, 1, 14, 8, 6, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.square(tf.math.pow(tf.math.divide_no_nan(grad, grad), grad)), alpha)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha)), tf.math.add(grad, tf.math.add(grad, grad))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.852182626724243, 2.407329559326172, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18861444294452667, 0.1088363528251648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3214974403381348, 2.3301031589508057, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10100000351667404, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 1, 1, 3, 5], [0, 0, 1, 0, 2], [58, 39, 39], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [2, 2, 4, 6, 0, 4, 5, 3, 1, 6, 7, 3, 8, 0, 2], [2, 2, 0, 4, 0, 3, 1, 1, 4, 2, 2, 4], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [4, 1, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 27, 15, 12, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.subtract(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.square(tf.math.multiply(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, alpha))), tf.math.divide_no_nan(tf.math.add(tf.math.multiply(alpha, grad), tf.math.sqrt(beta)), tf.math.negative(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.subtract(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303436517715454, 2.302631139755249, 2.3026323318481445, 2.3026232719421387, 2.3026275634765625, 2.3026223182678223], "accuracy": [0.09602430462837219, 0.09642054885625839, 0.09708096832036972, 0.09536388516426086, 0.09457138925790787, 0.09998679161071777], "val_loss": [2.3025827407836914, 2.30257511138916, 2.3025741577148438, 2.3025805950164795, 2.302579402923584, 2.302586555480957], "val_accuracy": [0.10300000011920929, 0.10166666656732559, 0.09966666996479034, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}]