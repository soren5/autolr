[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8408571481704712, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209204912185669, 1.6081050634384155, 1.161476731300354, 0.9678649306297302, 0.899207592010498, 0.8232849836349487, 0.7964221835136414, 0.7670251131057739, 0.7151143550872803, 0.7232852578163147, 0.6928330659866333, 0.6900194883346558, 0.6638800501823425, 0.6410666108131409, 0.6445415019989014, 0.6238628029823303, 0.6050806641578674, 0.6062654256820679, 0.6054876446723938, 0.5779222846031189, 0.5754972696304321, 0.5662747025489807, 0.5547845363616943, 0.5507774353027344, 0.5444126725196838, 0.5355641841888428, 0.5315195918083191, 0.5141485929489136, 0.5141818523406982, 0.5107905864715576, 0.4940224289894104, 0.4948002099990845, 0.48966988921165466, 0.49368324875831604, 0.48305007815361023], "accuracy": [0.2709021270275116, 0.5081230998039246, 0.5918636918067932, 0.6536785364151001, 0.6773213744163513, 0.7038700580596924, 0.7065116763114929, 0.7166820764541626, 0.7314753532409668, 0.7312111854553223, 0.7403249144554138, 0.7430986762046814, 0.7483819723129272, 0.7611940503120422, 0.7574957013130188, 0.7617223858833313, 0.7766477465629578, 0.7753269076347351, 0.7773081660270691, 0.7815347909927368, 0.7861577272415161, 0.7858935594558716, 0.7935543656349182, 0.7981772422790527, 0.7930260300636292, 0.7989697456359863, 0.8000264167785645, 0.8075551390647888, 0.8087438941001892, 0.8082155585289001, 0.8187822103500366, 0.8127063512802124, 0.8198388814926147, 0.8129705190658569, 0.8231409192085266], "val_loss": [1.9204610586166382, 1.0973323583602905, 0.9051154255867004, 0.8009482622146606, 0.7550463676452637, 0.7217044234275818, 0.70241779088974, 0.6428935527801514, 0.6966601610183716, 0.6115002632141113, 0.6210461258888245, 0.5895910263061523, 0.5705165863037109, 0.5769955515861511, 0.5662602782249451, 0.5527670383453369, 0.5588268041610718, 0.5412476658821106, 0.5247086882591248, 0.5263548493385315, 0.5256267786026001, 0.5076400637626648, 0.5014045238494873, 0.5240923166275024, 0.48969894647598267, 0.5047947764396667, 0.507024884223938, 0.4826339781284332, 0.48471590876579285, 0.4589489698410034, 0.4656035304069519, 0.46268877387046814, 0.4774232506752014, 0.46105366945266724, 0.45907488465309143], "val_accuracy": [0.559333324432373, 0.6496666669845581, 0.6726666688919067, 0.7076666951179504, 0.731333315372467, 0.7233333587646484, 0.7310000061988831, 0.7513333559036255, 0.7360000014305115, 0.7643333077430725, 0.7646666765213013, 0.7756666541099548, 0.7789999842643738, 0.7906666398048401, 0.7950000166893005, 0.7946666479110718, 0.7850000262260437, 0.8023333549499512, 0.8166666626930237, 0.809333324432373, 0.7979999780654907, 0.8149999976158142, 0.8199999928474426, 0.79666668176651, 0.8223333358764648, 0.8196666836738586, 0.8196666836738586, 0.8146666884422302, 0.8136666417121887, 0.8360000252723694, 0.8320000171661377, 0.8356666564941406, 0.8233333230018616, 0.8306666612625122, 0.8303333520889282]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 2], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 6, 4, 0, 5, 5, 4], [2, 0, 0, 4, 5, 1, 1], [16, 73, 59], [1, 0, 1, 1, 1, 1, 1, 1], [7, 3, 0, 2], [0, 5, 1, 4], [81], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 14, 8, 6, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.divide_no_nan(beta, tf.math.pow(tf.math.negative(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.pow(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad)))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [30780.86328125, 4394182.0, 75432488.0, 531528352.0, 2347398144.0, 7728858112.0], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.10077928751707077, 0.09747721254825592, 0.09906221181154251, 0.09985470771789551], "val_loss": [300940.28125, 16133418.0, 172999744.0, 942833408.0, 3531067392.0, 10414734336.0], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 5], [0, 0, 1, 0, 2], [26, 63, 39], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4, 7, 7, 2, 4, 8, 6, 5, 1, 5, 4, 2, 8, 0, 1, 5, 8, 8, 8, 4, 3, 5, 2, 3, 2, 4, 2, 1, 0, 7, 8, 2, 0], [1, 2, 0, 4, 0, 3, 1, 3, 2, 3, 4, 4, 2, 0, 3, 2, 2, 5, 4, 5, 0, 0, 0, 0, 4], [16, 64, 77, 2, 70, 91, 68], [1, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [1, 3, 1, 4], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 65, 40, 25, 7, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 42, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(tf.math.pow(tf.math.negative(tf.math.square(tf.math.square(tf.math.pow(tf.math.add(tf.math.add(alpha, beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), tf.math.pow(tf.math.sqrt(grad), tf.math.divide_no_nan(alpha, tf.math.square(tf.math.subtract(tf.math.square(tf.math.pow(tf.math.add(grad, tf.math.sqrt(tf.math.negative(tf.math.subtract(beta, grad)))), tf.math.square(tf.math.sqrt(grad)))), tf.math.sqrt(tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.math.square(tf.math.add(tf.math.multiply(grad, tf.math.add(tf.math.pow(beta, tf.math.add(tf.math.subtract(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), grad), beta)), beta)), grad)), tf.math.negative(grad)), tf.math.add(tf.math.sqrt(grad), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))))))))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [2, 2, 4, 4, 0, 8, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [7, 3, 3, 9, 7, 5, 3, 6, 4, 8], [0, 1, 1, 4, 2, 2, 5], [0, 73], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 12, 7, 5, 2, 17, 10, 7, 2, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(beta), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.square(grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), alpha)), alpha), tf.math.square(tf.math.multiply(grad, tf.math.divide_no_nan(beta, tf.math.pow(tf.math.sqrt(beta), grad))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3038527965545654, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3, 5], [2, 0, 1, 0, 1], [87, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 7, 4, 4, 0, 5, 5, 7, 8], [2, 2, 0, 4, 0, 3, 1], [16, 1], [1, 0, 0, 1, 0, 1, 1, 0], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 10, 5, 5, 2, 15, 9, 6, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3104002475738525, 2.3109254837036133, 2.310070753097534, 2.3093135356903076, 2.3093013763427734, 2.309892177581787], "accuracy": [0.08968432247638702, 0.09126931428909302, 0.08981640636920929, 0.09470347315073013, 0.09457138925790787, 0.09192973375320435], "val_loss": [2.308748722076416, 2.308748722076416, 2.308748722076416, 2.308748722076416, 2.308748722076416, 2.308748722076416], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]