[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.7888571619987488, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2105493545532227, 1.6070852279663086, 1.148512601852417, 0.9809394478797913, 0.887009859085083, 0.8245506286621094, 0.7843016386032104, 0.7612271904945374, 0.7281783223152161, 0.7000922560691833, 0.6663909554481506, 0.6718000769615173, 0.6683705449104309, 0.6275393962860107, 0.605336606502533, 0.6060529947280884, 0.6061777472496033, 0.5829780101776123, 0.5706114768981934], "accuracy": [0.26918503642082214, 0.4986131191253662, 0.598599910736084, 0.6465460062026978, 0.6769251227378845, 0.6939638257026672, 0.7137762308120728, 0.7145687341690063, 0.7259278893470764, 0.7351737022399902, 0.7518161535263062, 0.7541936039924622, 0.7489103078842163, 0.7680623531341553, 0.7708360552787781, 0.7692511081695557, 0.7695152759552002, 0.7794214487075806, 0.7861577272415161], "val_loss": [1.9240975379943848, 1.1054565906524658, 0.9970763325691223, 0.785731852054596, 0.7574021816253662, 0.7368104457855225, 0.6805310845375061, 0.6717995405197144, 0.666383683681488, 0.6200507879257202, 0.6712386012077332, 0.6608292460441589, 0.5844532251358032, 0.576321542263031, 0.5612916946411133, 0.591677188873291, 0.5831394195556641, 0.5553368330001831, 0.5462287664413452], "val_accuracy": [0.5276666879653931, 0.6446666717529297, 0.6143333315849304, 0.7229999899864197, 0.7236666679382324, 0.734000027179718, 0.7493333220481873, 0.7286666631698608, 0.7413333058357239, 0.7573333382606506, 0.7549999952316284, 0.7333333492279053, 0.778333306312561, 0.7983333468437195, 0.7879999876022339, 0.7806666493415833, 0.7839999794960022, 0.7879999876022339, 0.7823333144187927]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 3, 1, 0, 2], [5, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 5, 4, 4, 0, 5, 5, 4, 0, 5], [2, 0, 0, 4, 0, 3, 1], [60, 1, 61], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], [7, 2, 0, 2, 1, 0, 9], [0, 1, 1, 4], [11, 32], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 15, 10, 5, 3, 11, 7, 4, 2, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.multiply(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.square(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(tf.math.square(tf.math.pow(tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.math.square(grad)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), alpha), tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.negative(grad), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [42.27497863769531, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19601109623908997, 0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [83.85581970214844, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09133332967758179, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 7, 3, 1, 6, 5], [3, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 4, 0, 4, 0, 3, 1], [16, 1], [0, 0, 1, 1, 0, 1, 1, 1], [7, 3, 2, 2], [7, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 14, 8, 6, 2, 7, 3, 4, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(grad, tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.square(grad))), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(grad, alpha), tf.math.add(alpha, beta)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3034250736236572, 2.304237127304077, 2.3060033321380615, 2.308290958404541, 2.318758010864258, 2.321589469909668], "accuracy": [0.09457138925790787, 0.09721305221319199, 0.1026284471154213, 0.09509972482919693, 0.09694888442754745, 0.09879804402589798], "val_loss": [2.3024847507476807, 2.3029375076293945, 2.3050448894500732, 2.3181042671203613, 2.3197109699249268, 2.3272101879119873], "val_accuracy": [0.10433333367109299, 0.0989999994635582, 0.10199999809265137, 0.09933333098888397, 0.10233332961797714, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 1, 3, 5], [0, 3, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], [0, 2, 0, 6, 3, 8, 8], [2, 0, 1, 1, 0], [16, 1], [0, 0, 1, 0], [0, 0], [0, 6], [38], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 5, 3, 2, 1, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3039824962615967, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 4, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4, 5, 1, 5, 5], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 8, 3, 3, 3, 6, 3, 7, 0, 2, 1, 1, 8, 6, 1, 9, 3, 0, 2, 4, 6], [0, 6, 4, 0, 0, 2, 1, 3, 1, 4, 3, 2, 0, 2, 3], [0, 52, 90, 12, 55], [1], [0], [1], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 2, 1, 1, 1, 19, 12, 7, 2, 36, 21, 15, 5, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.square(tf.math.pow(grad, tf.math.square(tf.math.subtract(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.square(grad))))))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(grad, grad), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), beta))), tf.math.subtract(tf.math.subtract(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, tf.math.negative(tf.math.add(alpha, grad)))), sigma))), tf.math.pow(beta, tf.math.divide_no_nan(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), beta)))), sigma))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.309628963470459, 2.3102691173553467, 2.310182571411133, 2.3104405403137207, 2.309227705001831, 2.309981346130371], "accuracy": [0.09100515395402908, 0.08928807079792023, 0.0936468094587326, 0.09219389408826828, 0.09694888442754745, 0.08915598690509796], "val_loss": [2.3084919452667236, 2.3084919452667236, 2.3084919452667236, 2.3084919452667236, 2.3084919452667236, 2.3084919452667236], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]