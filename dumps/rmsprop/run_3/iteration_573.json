[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [4, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 1, 1, 1, 1], [7, 3, 0, 4], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8697142601013184, "mapping_values": [1, 10, 5, 5, 3, 13, 7, 6, 2, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1054697036743164, 1.240713119506836, 0.8835309743881226, 0.715859591960907, 0.6383464336395264, 0.5812420845031738, 0.52707439661026, 0.49565389752388, 0.4729361832141876, 0.44791379570961, 0.43101897835731506, 0.41178685426712036, 0.3918114900588989, 0.3650550842285156, 0.36021801829338074, 0.3527897298336029, 0.3416568636894226, 0.3241651952266693, 0.3114911615848541, 0.30148327350616455, 0.2971181869506836, 0.2926179766654968, 0.2696421444416046, 0.2764252722263336, 0.26549237966537476, 0.2513359785079956], "accuracy": [0.29718664288520813, 0.5906749367713928, 0.6804913282394409, 0.7243428826332092, 0.7592127919197083, 0.7845727205276489, 0.8045172095298767, 0.8197067975997925, 0.8257825970649719, 0.8347642421722412, 0.8426892161369324, 0.8535200357437134, 0.8535200357437134, 0.8688416481018066, 0.8720116019248962, 0.8684453964233398, 0.8754457831382751, 0.8803328275680542, 0.8856161832809448, 0.889578640460968, 0.8870691061019897, 0.8870691061019897, 0.9009377956390381, 0.8939374089241028, 0.9008057117462158, 0.9104477763175964], "val_loss": [1.11708402633667, 0.9228919148445129, 0.6804075241088867, 0.6057890057563782, 0.5350754261016846, 0.4930304288864136, 0.4501688778400421, 0.4363635182380676, 0.43337446451187134, 0.41878417134284973, 0.39920270442962646, 0.3926183581352234, 0.38454097509384155, 0.3754727244377136, 0.36804676055908203, 0.37842631340026855, 0.36923080682754517, 0.35776469111442566, 0.35040581226348877, 0.3519493043422699, 0.3530230224132538, 0.3561364710330963, 0.35359951853752136, 0.34051087498664856, 0.3493269979953766, 0.3550257682800293], "val_accuracy": [0.609333336353302, 0.6956666707992554, 0.7289999723434448, 0.7570000290870667, 0.781333327293396, 0.8026666641235352, 0.8240000009536743, 0.8360000252723694, 0.8366666436195374, 0.8399999737739563, 0.8450000286102295, 0.8493333458900452, 0.8486666679382324, 0.8569999933242798, 0.859333336353302, 0.8576666712760925, 0.8600000143051147, 0.8643333315849304, 0.8700000047683716, 0.859000027179718, 0.8726666569709778, 0.8643333315849304, 0.8723333477973938, 0.8676666617393494, 0.871666669845581, 0.8709999918937683]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8171428442001343, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210733413696289, 1.5988949537277222, 1.1197222471237183, 0.9720345139503479, 0.8822392821311951, 0.8355566263198853, 0.7838939428329468, 0.7560996413230896, 0.7298641204833984, 0.7199657559394836, 0.6793277263641357, 0.6629525423049927, 0.6504150629043579, 0.6411027312278748, 0.6384740471839905, 0.6129975318908691, 0.6190380454063416, 0.593446671962738, 0.5841782689094543, 0.5791574716567993, 0.5601047873497009, 0.5579935908317566, 0.5516003370285034, 0.5418275594711304, 0.5328664183616638, 0.5235057473182678, 0.5161787867546082, 0.5112157464027405, 0.5073497295379639, 0.5035503506660461, 0.512572169303894, 0.47923746705055237, 0.47399207949638367, 0.47614848613739014, 0.47584933042526245, 0.4859761893749237, 0.4612998962402344, 0.45825183391571045, 0.45259255170822144, 0.449968159198761, 0.4506700932979584, 0.4465797245502472, 0.4455927908420563, 0.42830079793930054, 0.43036049604415894, 0.41814956068992615, 0.4199625849723816, 0.4178060293197632, 0.4179423749446869], "accuracy": [0.2576938271522522, 0.5075947642326355, 0.6141856908798218, 0.653150200843811, 0.6711134314537048, 0.6888125538825989, 0.7136441469192505, 0.7174745798110962, 0.7302865982055664, 0.7306828498840332, 0.7445515990257263, 0.7440232634544373, 0.7585523724555969, 0.7607977986335754, 0.7619865536689758, 0.7700436115264893, 0.7663452625274658, 0.7779685854911804, 0.7825914621353149, 0.7845727205276489, 0.7902522683143616, 0.7923656105995178, 0.7895918488502502, 0.7954035401344299, 0.7965922355651855, 0.8082155585289001, 0.8101968169212341, 0.8067626357078552, 0.8094043135643005, 0.8125742673873901, 0.8129705190658569, 0.8219521641731262, 0.8222163319587708, 0.8211596608161926, 0.8241975903511047, 0.8202351331710815, 0.8244617581367493, 0.8276317715644836, 0.8314621448516846, 0.8338396549224854, 0.8296129703521729, 0.8383304476737976, 0.8347642421722412, 0.8362171649932861, 0.8387266993522644, 0.8446704745292664, 0.8515387773513794, 0.8475762605667114, 0.8397833704948425], "val_loss": [1.9248769283294678, 1.1151355504989624, 0.8954790830612183, 0.8120361566543579, 0.7249866724014282, 0.6934859156608582, 0.6660815477371216, 0.6883850693702698, 0.6477863788604736, 0.5975843071937561, 0.5964275002479553, 0.5702053308486938, 0.5555819272994995, 0.5511819124221802, 0.549281656742096, 0.5753843784332275, 0.5172905325889587, 0.5480161905288696, 0.5145881175994873, 0.49761471152305603, 0.49337002635002136, 0.4875030219554901, 0.5026244521141052, 0.4866310954093933, 0.4843626022338867, 0.4575584828853607, 0.47884154319763184, 0.4639725685119629, 0.47753962874412537, 0.4742423892021179, 0.43855020403862, 0.44021549820899963, 0.44658780097961426, 0.42670947313308716, 0.43880656361579895, 0.4203353226184845, 0.4267030358314514, 0.4060254991054535, 0.41030117869377136, 0.4109518229961395, 0.41789737343788147, 0.4189838171005249, 0.3986439108848572, 0.38771557807922363, 0.39539632201194763, 0.39774152636528015, 0.4031716287136078, 0.4050865173339844, 0.3899694085121155], "val_accuracy": [0.5419999957084656, 0.6476666927337646, 0.6726666688919067, 0.6846666932106018, 0.7273333072662354, 0.7453333139419556, 0.7446666955947876, 0.718666672706604, 0.7429999709129333, 0.7723333239555359, 0.781333327293396, 0.7950000166893005, 0.7943333387374878, 0.7946666479110718, 0.800000011920929, 0.7730000019073486, 0.8130000233650208, 0.7923333048820496, 0.8109999895095825, 0.8183333277702332, 0.8166666626930237, 0.8213333487510681, 0.8046666383743286, 0.8199999928474426, 0.8153333067893982, 0.8273333311080933, 0.8196666836738586, 0.824999988079071, 0.82833331823349, 0.8240000009536743, 0.8389999866485596, 0.8360000252723694, 0.8299999833106995, 0.8460000157356262, 0.8356666564941406, 0.8453333377838135, 0.8370000123977661, 0.8503333330154419, 0.8510000109672546, 0.8473333120346069, 0.8486666679382324, 0.8399999737739563, 0.8516666889190674, 0.8579999804496765, 0.8539999723434448, 0.8539999723434448, 0.8510000109672546, 0.843999981880188, 0.8560000061988831]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 0, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [4, 1, 3, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 13, 7, 6, 2, 8, 4, 4, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.math.multiply(alpha, sigma)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [30201.697265625, 4485356.5, 76037896.0, 535410528.0, 2356288000.0, 7905650688.0], "accuracy": [0.10196803510189056, 0.09972262382507324, 0.10210011899471283, 0.09906221181154251, 0.09998679161071777, 0.09906221181154251], "val_loss": [307229.625, 16472539.0, 176640000.0, 962680000.0, 3605402624.0, 10634027008.0], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [3, 0, 0, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 2, 0, 0, 3, 8, 2, 2], [2, 0, 3, 1, 0, 4], [16, 1, 15], [0, 0, 0, 1, 0, 1, 1, 1], [0, 7, 3, 1], [0, 0, 2, 4], [72, 60], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 5, 3, 2, 1, 8, 4, 4, 2, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), beta)), grad)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [248387102310400.0, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17976489663124084, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [Infinity, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 1, 1], [26, 39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 2, 5, 3, 5, 1], [2, 2, 0, 1, 0, 3, 1], [16, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1], [7, 3, 0, 3, 3, 4, 4, 8, 0], [0, 1, 4, 2, 5, 3, 3], [0], [1], [0], [1], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 10, 5, 5, 2, 13, 7, 6, 2, 16, 9, 7, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, beta), tf.math.add(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), grad)), tf.math.pow(tf.math.pow(tf.math.sqrt(beta), grad), sigma)), tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3107707500457764, 2.310483932495117, 2.3098976612091064, 2.3108019828796387, 2.310816526412964, 2.310793399810791], "accuracy": [0.08889182657003403, 0.09259014576673508, 0.08994849026203156, 0.08849557489156723, 0.08558975160121918, 0.09338264167308807], "val_loss": [2.309088945388794, 2.309088945388794, 2.309088945388794, 2.309088945388794, 2.309088945388794, 2.309088945388794], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]