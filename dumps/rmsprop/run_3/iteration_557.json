[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8142856955528259, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.209454298019409, 1.6127328872680664, 1.1577036380767822, 1.0000667572021484, 0.8940235376358032, 0.8313353657722473, 0.8191149830818176, 0.7567101716995239, 0.7230721712112427, 0.7265490293502808, 0.6720001697540283, 0.6621698141098022, 0.6810057759284973, 0.6276668310165405, 0.6191155314445496, 0.6068962812423706, 0.6044610738754272, 0.5920946002006531, 0.5902557373046875, 0.5656545162200928, 0.5638101100921631, 0.5563697814941406, 0.5365741848945618, 0.5394725203514099, 0.5264036059379578, 0.5141502022743225, 0.5140985250473022, 0.5164878368377686, 0.5031906962394714, 0.49888038635253906, 0.48771151900291443], "accuracy": [0.27182671427726746, 0.4951789677143097, 0.5958262085914612, 0.6449610590934753, 0.6763967871665955, 0.7038700580596924, 0.6976621150970459, 0.7220974564552307, 0.7271166443824768, 0.7300224304199219, 0.7508915662765503, 0.7568352818489075, 0.7453441023826599, 0.7683265209197998, 0.7667415142059326, 0.7753269076347351, 0.7749306559562683, 0.7837802171707153, 0.778761088848114, 0.789459764957428, 0.7898560166358948, 0.7959318161010742, 0.7975168228149414, 0.7988376617431641, 0.8029322624206543, 0.8101968169212341, 0.8095363974571228, 0.8035926818847656, 0.8129705190658569, 0.819970965385437, 0.8173292875289917], "val_loss": [1.9163239002227783, 1.0848513841629028, 0.9007374048233032, 0.7857944369316101, 0.7352588176727295, 0.7255719304084778, 0.6364985108375549, 0.6698284149169922, 0.6013935804367065, 0.5998858213424683, 0.5757039189338684, 0.6237238049507141, 0.5638188719749451, 0.5440974235534668, 0.5307080745697021, 0.5157186388969421, 0.5093899965286255, 0.5228144526481628, 0.4847196340560913, 0.4852772653102875, 0.4839838147163391, 0.4809410870075226, 0.4600110948085785, 0.4943687319755554, 0.4646070897579193, 0.44918790459632874, 0.4689209759235382, 0.4572378695011139, 0.4704116880893707, 0.44063031673431396, 0.4478529393672943], "val_accuracy": [0.5106666684150696, 0.6706666946411133, 0.6830000281333923, 0.7076666951179504, 0.7229999899864197, 0.7269999980926514, 0.7646666765213013, 0.7273333072662354, 0.7733333110809326, 0.7739999890327454, 0.7816666960716248, 0.7576666474342346, 0.7853333353996277, 0.8043333292007446, 0.8063333630561829, 0.812333345413208, 0.8119999766349792, 0.7986666560173035, 0.82833331823349, 0.8213333487510681, 0.8276666402816772, 0.8299999833106995, 0.8293333053588867, 0.8166666626930237, 0.8333333134651184, 0.8379999995231628, 0.8233333230018616, 0.8373333215713501, 0.824999988079071, 0.8336666822433472, 0.828000009059906]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 2, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4, 3, 0, 3, 2, 8, 8, 1, 1, 0, 2, 2, 3, 8, 0, 1, 2, 6, 9, 9, 0, 4], [2, 2, 0, 4, 0, 3, 1, 5, 5, 0, 0, 0, 5, 3, 5, 0, 5, 0, 0], [16, 38, 67, 32, 82, 55, 59, 51], [1, 0, 1, 1, 0, 1, 0, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8002856969833374, "mapping_values": [1, 10, 5, 5, 3, 46, 29, 17, 8, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 36, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.add(tf.math.sqrt(grad), tf.math.sqrt(alpha)), tf.math.subtract(tf.math.subtract(tf.math.negative(grad), grad), tf.math.add(tf.math.add(tf.math.multiply(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.negative(tf.math.subtract(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), grad))))), grad), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))))))), grad), tf.math.negative(tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.2967581748962402, 2.213279962539673, 1.940097689628601, 1.4087402820587158, 1.2503412961959839, 0.9467230439186096, 0.9044691324234009, 0.8652454614639282, 0.8170511722564697, 0.763210654258728, 0.7557191848754883, 0.7317872643470764, 0.7009468078613281, 0.6722356081008911, 0.6548040509223938, 0.6248812675476074, 0.6252421140670776, 0.6113519072532654, 0.5853150486946106, 0.5874512195587158, 0.5733684301376343, 0.5603922605514526, 0.5539156198501587, 0.5293712615966797, 0.5187452435493469, 0.5087019801139832, 0.5043666958808899, 0.49579140543937683, 0.4851579964160919, 0.47566917538642883, 0.4740219712257385, 0.4765889346599579, 0.4665956497192383, 0.44831743836402893, 0.45958733558654785, 0.44796159863471985, 0.44783109426498413, 0.43776699900627136, 0.4218367636203766, 0.4336181879043579, 0.4288850426673889, 0.42841458320617676, 0.41758474707603455, 0.40735185146331787, 0.41128769516944885, 0.3997413218021393, 0.39686083793640137, 0.39084336161613464], "accuracy": [0.11676132678985596, 0.30260202288627625, 0.4019284248352051, 0.5038964748382568, 0.5995244979858398, 0.6539427042007446, 0.6701889038085938, 0.6946242451667786, 0.7034738063812256, 0.7168141603469849, 0.7220974564552307, 0.7302865982055664, 0.737947404384613, 0.744419515132904, 0.7543256878852844, 0.7617223858833313, 0.765949010848999, 0.7687227725982666, 0.7766477465629578, 0.7810064554214478, 0.7843085527420044, 0.7832518815994263, 0.7931581139564514, 0.8017435073852539, 0.8067626357078552, 0.8020076751708984, 0.8035926818847656, 0.81548011302948, 0.8128384351730347, 0.8146876096725464, 0.8191784620285034, 0.8204993009567261, 0.8219521641731262, 0.8304054737091064, 0.8284242749214172, 0.8297450542449951, 0.8273676037788391, 0.8368775844573975, 0.8403117060661316, 0.8362171649932861, 0.8321225643157959, 0.8396512866020203, 0.8368775844573975, 0.8385946154594421, 0.8411042094230652, 0.8487650156021118, 0.8488970994949341, 0.8429533839225769], "val_loss": [2.2552380561828613, 2.098884344100952, 1.4382809400558472, 0.9195934534072876, 0.8070276975631714, 0.8207481503486633, 0.7075979709625244, 0.7065992951393127, 0.6729506254196167, 0.6537219882011414, 0.6235339641571045, 0.5973606109619141, 0.570388674736023, 0.5666104555130005, 0.5505143404006958, 0.5462779998779297, 0.5365143418312073, 0.5237386226654053, 0.5132636427879333, 0.5177515745162964, 0.520601212978363, 0.5103061199188232, 0.4902229905128479, 0.49623289704322815, 0.49112531542778015, 0.4782784879207611, 0.4775469899177551, 0.4721880555152893, 0.4627894163131714, 0.46472176909446716, 0.48321548104286194, 0.467378169298172, 0.4501768946647644, 0.453687459230423, 0.46251440048217773, 0.4425671696662903, 0.4458114802837372, 0.46063610911369324, 0.45024433732032776, 0.44547590613365173, 0.4573972523212433, 0.4602283537387848, 0.4545465409755707, 0.4542153775691986, 0.4405764937400818, 0.45370861887931824, 0.4656621217727661, 0.45950260758399963], "val_accuracy": [0.35466668009757996, 0.4390000104904175, 0.6029999852180481, 0.675000011920929, 0.7143333554267883, 0.7246666550636292, 0.7286666631698608, 0.7429999709129333, 0.750333309173584, 0.7393333315849304, 0.765999972820282, 0.7646666765213013, 0.7749999761581421, 0.7799999713897705, 0.7903333306312561, 0.7923333048820496, 0.7960000038146973, 0.8043333292007446, 0.8019999861717224, 0.7993333339691162, 0.8023333549499512, 0.8153333067893982, 0.8176666498184204, 0.8149999976158142, 0.812666654586792, 0.8263333439826965, 0.8256666660308838, 0.8263333439826965, 0.8273333311080933, 0.8353333473205566, 0.8326666951179504, 0.8403333425521851, 0.8423333168029785, 0.8343333601951599, 0.8360000252723694, 0.8413333296775818, 0.8456666469573975, 0.8463333249092102, 0.8420000076293945, 0.8433333039283752, 0.8473333120346069, 0.8483333587646484, 0.8536666631698608, 0.8450000286102295, 0.8479999899864197, 0.847000002861023, 0.846666693687439, 0.8486666679382324]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 3, 3, 1, 3, 5], [1, 0, 1, 0, 2], [26, 39, 33], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [1, 3, 0, 3], [0, 1, 1, 4], [0], [0, 0, 1, 0, 1, 1], [0, 7, 4], [1, 2, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 15, 8, 7, 2, 8, 4, 4, 1, 6, 3, 3, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.math.multiply(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(beta, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 1, 4, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 2, 0, 0, 4], [2, 2, 0, 4, 0, 3, 2], [16, 8], [0, 0, 1, 1, 0, 1, 1, 1], [7, 9, 2, 3], [0, 1, 1, 2], [0, 89], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 15, 8, 7, 2, 3, 2, 1, 2, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.add(tf.math.negative(beta), tf.math.negative(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), grad), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3038814067840576, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 3, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 8, 5, 0, 4], [0, 1, 2, 4, 0, 3, 1], [16, 1], [1, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [4, 1, 1, 2], [22], [1], [0], [1], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(alpha)), tf.math.negative(tf.math.pow(beta, grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.310573101043701, 2.3102610111236572, 2.3101806640625, 2.310553789138794, 2.309706687927246, 2.3095812797546387], "accuracy": [0.09100515395402908, 0.09457138925790787, 0.09311848133802414, 0.08889182657003403, 0.09087307006120682, 0.09179764986038208], "val_loss": [2.308579683303833, 2.308579683303833, 2.308579683303833, 2.308579683303833, 2.308579683303833, 2.308579683303833], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}]