[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.831428587436676, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2143774032592773, 1.6256190538406372, 1.1446853876113892, 0.9889764189720154, 0.8797711133956909, 0.8408981561660767, 0.8075318336486816, 0.7512074708938599, 0.7347557544708252, 0.7167696356773376, 0.6803215742111206, 0.676345705986023, 0.6469957232475281, 0.6557379364967346, 0.6258893609046936, 0.6182296276092529, 0.6076772809028625, 0.5826099514961243, 0.5753934383392334, 0.5908601880073547, 0.5679501891136169, 0.5573040246963501, 0.5470016002655029, 0.5444271564483643, 0.5276587009429932, 0.5239042639732361, 0.520072877407074, 0.514091968536377, 0.4977760314941406, 0.5114465951919556, 0.4912422299385071, 0.48006799817085266, 0.48772355914115906, 0.4723895788192749, 0.4737914800643921, 0.4603818655014038, 0.46822071075439453, 0.4622917175292969, 0.45495718717575073, 0.45443806052207947, 0.44715237617492676, 0.43967169523239136, 0.4419969916343689, 0.4419233202934265], "accuracy": [0.2646942138671875, 0.4991414546966553, 0.600581169128418, 0.6448289752006531, 0.6765288710594177, 0.6863030195236206, 0.6954167485237122, 0.7193237543106079, 0.7277770638465881, 0.7325320243835449, 0.7404569983482361, 0.7434949278831482, 0.7594769597053528, 0.7518161535263062, 0.7602694630622864, 0.7728173136711121, 0.7671377658843994, 0.7775723338127136, 0.785101056098938, 0.7786290049552917, 0.7841764688491821, 0.7950072884559631, 0.7944789528846741, 0.791969358921051, 0.8037247657775879, 0.8029322624206543, 0.8013472557067871, 0.8119139075279236, 0.8115176558494568, 0.8014793395996094, 0.8124422430992126, 0.8191784620285034, 0.8182538747787476, 0.8210275769233704, 0.8186501264572144, 0.8313300609588623, 0.8264430165290833, 0.8304054737091064, 0.8356888294219971, 0.8281601071357727, 0.8300092220306396, 0.8376700282096863, 0.8334434032440186, 0.837141752243042], "val_loss": [1.9421427249908447, 1.1244431734085083, 1.0510276556015015, 0.8189523816108704, 0.7390202879905701, 0.7042071223258972, 0.7052530646324158, 0.6756018996238708, 0.6416046619415283, 0.620465099811554, 0.6015335917472839, 0.5902739763259888, 0.5910199880599976, 0.5823541879653931, 0.5618943572044373, 0.5837497711181641, 0.5440669655799866, 0.5244918465614319, 0.5704582333564758, 0.5127832889556885, 0.5119763016700745, 0.5016871094703674, 0.5436753034591675, 0.4953928589820862, 0.5063410401344299, 0.5083193182945251, 0.488087922334671, 0.4664696753025055, 0.47655484080314636, 0.45787179470062256, 0.4604760706424713, 0.4698510766029358, 0.44896894693374634, 0.4681316614151001, 0.4599275290966034, 0.43994003534317017, 0.4523102343082428, 0.43736493587493896, 0.43268391489982605, 0.4461215138435364, 0.4274337887763977, 0.425442099571228, 0.4210185408592224, 0.4162229299545288], "val_accuracy": [0.57833331823349, 0.6296666860580444, 0.6006666421890259, 0.6940000057220459, 0.7236666679382324, 0.7319999933242798, 0.7323333621025085, 0.7256666421890259, 0.7633333206176758, 0.765333354473114, 0.7689999938011169, 0.7716666460037231, 0.7863333225250244, 0.7879999876022339, 0.7863333225250244, 0.7609999775886536, 0.8009999990463257, 0.8083333373069763, 0.7806666493415833, 0.8146666884422302, 0.812333345413208, 0.8203333616256714, 0.7960000038146973, 0.8206666707992554, 0.8100000023841858, 0.8136666417121887, 0.8183333277702332, 0.8333333134651184, 0.8303333520889282, 0.8333333134651184, 0.8410000205039978, 0.8333333134651184, 0.8389999866485596, 0.8323333263397217, 0.8316666483879089, 0.8450000286102295, 0.8423333168029785, 0.843999981880188, 0.8539999723434448, 0.8343333601951599, 0.8503333330154419, 0.8496666550636292, 0.8526666760444641, 0.8506666421890259]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [5, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [85, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [2, 8, 4, 4, 0, 5, 5, 4, 8], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 8, 2], [0, 0, 1, 4], [34, 0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 14, 9, 5, 2, 8, 4, 4, 2, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(tf.math.square(tf.math.pow(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [46577106944.0, 7024618766336.0, 119709815013376.0, 833547321475072.0, 3672559962816512.0, 1.2172475261517824e+16], "accuracy": [0.10051512718200684, 0.1018359512090683, 0.09536388516426086, 0.10196803510189056, 0.09853387624025345, 0.10170386731624603], "val_loss": [466079711232.0, 25127603404800.0, 269702639124480.0, 1470512647634944.0, 5506017613840384.0, 1.6242467875586048e+16], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 8], [0, 0, 1, 0, 1], [0, 39, 4], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [2, 2, 4, 3, 2, 5, 0, 4], [2, 0, 4, 1, 0, 5], [16, 1], [1, 0, 0, 0], [0, 7], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.09428571164608002, "mapping_values": [1, 12, 7, 5, 3, 13, 7, 6, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.math.sqrt(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), alpha), tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.310142993927002, 2.3113458156585693, 2.310662269592285, 2.3099453449249268, 2.3116464614868164, 2.3086941242218018], "accuracy": [0.09179764986038208, 0.09034473448991776, 0.08638224750757217, 0.09153348207473755, 0.08968432247638702, 0.0952318087220192], "val_loss": [2.3091039657592773, 2.3091039657592773, 2.3091039657592773, 2.3091039657592773, 2.3091039657592773, 2.3091039657592773], "val_accuracy": [0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 3, 0, 1], [26, 39, 39], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 1, 1, 1], [9, 6], [1, 6], [43], [1], [0], [2], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 11, 6, 5, 3, 4, 2, 2, 0, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3101003170013428, 2.3102269172668457, 2.308891773223877, 2.3092293739318848, 2.309813976287842, 2.3098948001861572], "accuracy": [0.09338264167308807, 0.09285431355237961, 0.09800554811954498, 0.09417514503002167, 0.08889182657003403, 0.0886276587843895], "val_loss": [2.3082218170166016, 2.3082218170166016, 2.3082218170166016, 2.3082218170166016, 2.3082218170166016, 2.3082218170166016], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5], [1, 0, 0, 3, 2], [26, 39, 39], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 7, 0, 6, 3, 8, 9], [2, 0, 2, 1, 0], [16, 1], [0, 0, 0, 1, 1, 0, 1, 1], [0, 7, 7, 9], [1, 1, 1, 4], [57, 34], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 8, 4, 4, 2, 1, 0, 1, 0, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(alpha, alpha), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.309643030166626, 2.3091988563537598, 2.309586524963379, 2.3093905448913574, 2.309213161468506, 2.3096060752868652], "accuracy": [0.09325055778026581, 0.09259014576673508, 0.08809932321310043, 0.09219389408826828, 0.0944393053650856, 0.09417514503002167], "val_loss": [2.308475971221924, 2.308475971221924, 2.308475971221924, 2.308475971221924, 2.308475971221924, 2.308475971221924], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]