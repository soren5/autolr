[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8808571696281433, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1058011054992676, 1.1498116254806519, 0.8304385542869568, 0.7203441262245178, 0.6393402218818665, 0.5854113698005676, 0.5511501431465149, 0.5187006592750549, 0.505515992641449, 0.4818469285964966, 0.4484843909740448, 0.43561360239982605, 0.42612436413764954, 0.41596850752830505, 0.39672064781188965, 0.3839366137981415, 0.3636326789855957, 0.3521239161491394, 0.33775001764297485, 0.31625643372535706, 0.31688356399536133, 0.30882248282432556, 0.3001636564731598, 0.2953629493713379, 0.2911835014820099, 0.28392574191093445, 0.2676911950111389, 0.2642957866191864, 0.2519010007381439, 0.2429644614458084, 0.23603840172290802, 0.2455616593360901, 0.23240527510643005], "accuracy": [0.2879408299922943, 0.5983357429504395, 0.6905296444892883, 0.722229540348053, 0.7576277852058411, 0.7792893648147583, 0.7957997918128967, 0.8074230551719666, 0.8117818236351013, 0.8165367841720581, 0.834632158279419, 0.8391229510307312, 0.843481719493866, 0.8438779711723328, 0.8529917001724243, 0.8560295701026917, 0.8659358024597168, 0.869502067565918, 0.873860776424408, 0.8791441321372986, 0.8835028409957886, 0.8838990926742554, 0.8858803510665894, 0.8910315632820129, 0.8918240666389465, 0.8916919827461243, 0.8990886211395264, 0.8993527889251709, 0.9051644206047058, 0.909259021282196, 0.9103156924247742, 0.904768168926239, 0.913089394569397], "val_loss": [1.0690844058990479, 0.7267204523086548, 0.6630074977874756, 0.5851247310638428, 0.5488004684448242, 0.5154633522033691, 0.48644670844078064, 0.4733087122440338, 0.46183642745018005, 0.4481644630432129, 0.4221508502960205, 0.41604873538017273, 0.4122338891029358, 0.4024076461791992, 0.39266952872276306, 0.3885684907436371, 0.38248133659362793, 0.3724929988384247, 0.3723068833351135, 0.36633822321891785, 0.3746758699417114, 0.36198416352272034, 0.3594156801700592, 0.37187516689300537, 0.3668769896030426, 0.34963202476501465, 0.35778117179870605, 0.35199210047721863, 0.35453882813453674, 0.364315927028656, 0.35359829664230347, 0.36456167697906494, 0.36178097128868103], "val_accuracy": [0.6523333191871643, 0.7213333249092102, 0.7549999952316284, 0.7713333368301392, 0.7846666574478149, 0.8059999942779541, 0.812666654586792, 0.8153333067893982, 0.824999988079071, 0.8309999704360962, 0.8420000076293945, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.859000027179718, 0.8543333411216736, 0.8636666536331177, 0.8653333187103271, 0.8636666536331177, 0.8576666712760925, 0.8669999837875366, 0.8650000095367432, 0.8676666617393494, 0.8683333396911621, 0.8769999742507935, 0.875, 0.8790000081062317, 0.871666669845581, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 3, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [2, 2, 4, 4, 0, 5, 5, 4, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [7, 3, 1, 3, 0, 3, 6, 3, 3, 1, 2, 2, 6, 0, 6, 1, 7], [0, 1, 1, 4, 2, 7, 7, 7, 4, 3, 3, 5, 5, 2, 7, 7], [0], [1], [0], [1], [0]], "fitness": -0.8259999752044678, "mapping_values": [1, 10, 5, 5, 3, 16, 9, 7, 2, 33, 17, 16, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.pow(tf.math.negative(tf.math.square(tf.math.square(tf.math.pow(tf.math.pow(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, grad), beta), grad))), grad)), tf.math.subtract(tf.math.add(grad, tf.math.add(tf.math.divide_no_nan(grad, tf.math.negative(sigma)), sigma)), tf.math.divide_no_nan(tf.math.subtract(grad, grad), tf.math.add(beta, grad)))), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.0874812602996826, 1.2876884937286377, 0.9244934320449829, 0.7615116834640503, 0.6958949565887451, 0.6334750056266785, 0.6123189330101013, 0.5891798734664917, 0.5686503052711487, 0.5461603999137878, 0.5494228005409241, 0.5504424571990967, 0.5515363812446594, 0.5159657597541809, 0.5199235081672668, 0.5400927662849426, 0.5399953126907349, 0.5477659702301025, 0.5727764368057251, 0.5689351558685303, 0.5880730748176575], "accuracy": [0.29137498140335083, 0.5861841440200806, 0.6608110070228577, 0.7162858247756958, 0.7353057861328125, 0.7574957013130188, 0.7708360552787781, 0.7740060687065125, 0.7852331399917603, 0.7980451583862305, 0.7950072884559631, 0.7947431206703186, 0.7890635132789612, 0.8128384351730347, 0.7948752045631409, 0.7967243194580078, 0.7977809906005859, 0.8021397590637207, 0.7980451583862305, 0.7952714562416077, 0.789459764957428], "val_loss": [1.013009786605835, 0.8074724674224854, 0.6556721925735474, 0.5738719701766968, 0.546283483505249, 0.5273224115371704, 0.5052317976951599, 0.48783597350120544, 0.49229520559310913, 0.4568089246749878, 0.4889264702796936, 0.4705536961555481, 0.46256494522094727, 0.46986523270606995, 0.46904605627059937, 0.4911738634109497, 0.49716901779174805, 0.5597852468490601, 0.5741409659385681, 0.5489755272865295, 0.5621405243873596], "val_accuracy": [0.6340000033378601, 0.6976666450500488, 0.7609999775886536, 0.7796666622161865, 0.7863333225250244, 0.8033333420753479, 0.8033333420753479, 0.8213333487510681, 0.8316666483879089, 0.8366666436195374, 0.8220000267028809, 0.828000009059906, 0.8396666646003723, 0.8386666774749756, 0.8370000123977661, 0.8416666388511658, 0.8293333053588867, 0.8323333263397217, 0.8343333601951599, 0.8203333616256714, 0.8286666870117188]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8259999752044678, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2084553241729736, 1.5893635749816895, 1.1430643796920776, 0.9800820350646973, 0.8796622157096863, 0.8224648237228394, 0.7720559239387512, 0.7314134240150452, 0.7044180035591125, 0.7021581530570984, 0.6887260675430298, 0.6576324105262756, 0.6428612470626831, 0.6248916983604431, 0.620934009552002, 0.601542592048645, 0.5957189798355103, 0.5795901417732239, 0.573647677898407, 0.5615800619125366, 0.5643144845962524, 0.5369213819503784, 0.5389794111251831, 0.5425582528114319, 0.5211009979248047, 0.5208806395530701, 0.4993692934513092, 0.514729917049408, 0.489237517118454, 0.5040653347969055, 0.4923751652240753, 0.48236897587776184, 0.4886186718940735, 0.4768857955932617, 0.47436630725860596, 0.4513300657272339, 0.45312798023223877, 0.45047593116760254, 0.4504436254501343, 0.4399564266204834, 0.4333376884460449, 0.4349663555622101, 0.4187685251235962, 0.4319947361946106, 0.43754586577415466, 0.4162665009498596, 0.41865408420562744, 0.41543716192245483, 0.40785321593284607, 0.40653738379478455, 0.39496904611587524, 0.40217074751853943, 0.38602006435394287, 0.3844042122364044, 0.38699379563331604, 0.38674408197402954, 0.38460808992385864, 0.37468627095222473, 0.368473619222641, 0.36163046956062317, 0.37387391924858093], "accuracy": [0.27605336904525757, 0.5138026475906372, 0.6034870147705078, 0.6469422578811646, 0.6795667409896851, 0.6936996579170227, 0.7135120630264282, 0.7272487282752991, 0.7363624572753906, 0.7411174178123474, 0.7465327978134155, 0.7552502751350403, 0.7524765729904175, 0.7662131786346436, 0.7680623531341553, 0.772288978099823, 0.7779685854911804, 0.7862898111343384, 0.7853652238845825, 0.7902522683143616, 0.7885351777076721, 0.805177628993988, 0.800290584564209, 0.7993659973144531, 0.8050455451011658, 0.805177628993988, 0.816008448600769, 0.8082155585289001, 0.8193105459213257, 0.8133667707443237, 0.8195747137069702, 0.817989706993103, 0.8193105459213257, 0.8247259259223938, 0.8240655064582825, 0.8347642421722412, 0.8366134166717529, 0.828292191028595, 0.835160493850708, 0.8383304476737976, 0.8409721255302429, 0.8411042094230652, 0.8462554216384888, 0.8376700282096863, 0.8407079577445984, 0.8482366800308228, 0.8448025584220886, 0.848368763923645, 0.8512746095657349, 0.8520671129226685, 0.8549728989601135, 0.8500858545303345, 0.8610487580299377, 0.8590674996376038, 0.8561616539955139, 0.8582749962806702, 0.8618412613868713, 0.8644828796386719, 0.8640866279602051, 0.8671245574951172, 0.8594637513160706], "val_loss": [1.9192554950714111, 1.069379448890686, 0.8752423524856567, 0.8223752379417419, 0.7247747182846069, 0.673559308052063, 0.621347188949585, 0.6408723592758179, 0.6004741787910461, 0.6012313365936279, 0.5596144795417786, 0.561707615852356, 0.5509971976280212, 0.5556801557540894, 0.5341968536376953, 0.520165741443634, 0.511873185634613, 0.5066704154014587, 0.5180146098136902, 0.5011180639266968, 0.4855937063694, 0.4783582091331482, 0.4944014847278595, 0.490943968296051, 0.46320295333862305, 0.4495662748813629, 0.4527633786201477, 0.44597166776657104, 0.44032591581344604, 0.44689518213272095, 0.46901530027389526, 0.437069296836853, 0.46194636821746826, 0.4312126040458679, 0.4247460663318634, 0.41840264201164246, 0.41568952798843384, 0.4060761332511902, 0.417121022939682, 0.4073407053947449, 0.4110412895679474, 0.3931412696838379, 0.42508044838905334, 0.4231351315975189, 0.3987663686275482, 0.3932321071624756, 0.4009706676006317, 0.396281898021698, 0.40478649735450745, 0.40035074949264526, 0.3804872930049896, 0.38342127203941345, 0.383645623922348, 0.38125747442245483, 0.38377246260643005, 0.3702040910720825, 0.374371737241745, 0.36625969409942627, 0.3721282184123993, 0.3768447935581207, 0.3739708662033081], "val_accuracy": [0.5776666402816772, 0.6806666851043701, 0.687666654586792, 0.6899999976158142, 0.734333336353302, 0.7540000081062317, 0.7683333158493042, 0.7543333172798157, 0.7616666555404663, 0.7616666555404663, 0.7960000038146973, 0.7913333177566528, 0.7983333468437195, 0.7870000004768372, 0.7926666736602783, 0.8116666674613953, 0.8143333196640015, 0.8103333115577698, 0.812666654586792, 0.8216666579246521, 0.8186666369438171, 0.8240000009536743, 0.8159999847412109, 0.8076666593551636, 0.8289999961853027, 0.8363333344459534, 0.8336666822433472, 0.8306666612625122, 0.8460000157356262, 0.8273333311080933, 0.8159999847412109, 0.846666693687439, 0.8286666870117188, 0.8453333377838135, 0.8476666808128357, 0.8556666374206543, 0.8503333330154419, 0.856333315372467, 0.8500000238418579, 0.8526666760444641, 0.8566666841506958, 0.859333336353302, 0.8500000238418579, 0.8410000205039978, 0.8600000143051147, 0.862666666507721, 0.8556666374206543, 0.8603333234786987, 0.8556666374206543, 0.8600000143051147, 0.8640000224113464, 0.8650000095367432, 0.8673333525657654, 0.8663333058357239, 0.8600000143051147, 0.8706666827201843, 0.8693333268165588, 0.8690000176429749, 0.8669999837875366, 0.8646666407585144, 0.8673333525657654]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 8, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [2, 2, 1, 4, 0, 5, 5, 4, 9], [2, 2, 0, 4, 0, 3, 1], [16, 1, 62], [0, 0, 0, 1, 1, 1, 1, 1], [7, 3, 0, 2], [5, 1, 3, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 14, 9, 5, 3, 6, 3, 3, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.subtract(beta, tf.math.pow(beta, tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.square(tf.math.pow(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303812265396118, 2.3025851249694824, 2.3025946617126465, 2.5224411487579346, 88.00732421875, 21067.455078125], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025858402252197, 2.303060293197632, 5.322107315063477, 832.2021484375, 212513.515625], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 0, 6, 3, 8, 2], [3, 0, 4, 1, 0], [16, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [7, 3, 0, 2, 9, 6, 4, 9], [0, 1, 1, 4], [55, 92, 35], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 1, 12, 8, 4, 3, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))), alpha), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303354024887085, 2.298281192779541, 2.315584182739258, 2.314971685409546, 2.322082996368408, 2.3209495544433594, 2.3190298080444336, 2.316523313522339, 2.317304849624634, 2.328822374343872, 2.3286828994750977], "accuracy": [0.10460969805717468, 0.10659094154834747, 0.09285431355237961, 0.1006472036242485, 0.09972262382507324, 0.09800554811954498, 0.09549596905708313, 0.09774138033390045, 0.09919429570436478, 0.10130762308835983, 0.10210011899471283], "val_loss": [2.2749557495117188, 2.3244457244873047, 2.326906681060791, 2.3222427368164062, 2.306210994720459, 2.3066506385803223, 2.3238351345062256, 2.3287315368652344, 2.326075315475464, 2.310795783996582, 2.3154356479644775], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.09833333641290665, 0.10000000149011612, 0.10233332961797714, 0.09666666388511658, 0.10100000351667404, 0.09833333641290665, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 8, 3, 1, 3, 5], [0, 0, 1, 0, 2], [97, 39, 39], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [2, 1, 4, 7, 0, 5, 5, 0], [2, 2, 0, 4, 5, 3, 1], [31, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 4, 2, 3, 5], [0, 6, 4, 7], [0], [1], [0], [1], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 10, 6, 4, 3, 7, 3, 4, 1, 10, 6, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.pow(beta, beta), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(grad, tf.math.square(grad)), grad)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3109192848205566, 2.3105270862579346, 2.3105216026306152, 2.309563636779785, 2.310384750366211, 2.3100078105926514], "accuracy": [0.08994849026203156, 0.09245806187391281, 0.08915598690509796, 0.09417514503002167, 0.09285431355237961, 0.09140139818191528], "val_loss": [2.3089146614074707, 2.3089146614074707, 2.3089146614074707, 2.3089146614074707, 2.3089146614074707, 2.3089146614074707], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]