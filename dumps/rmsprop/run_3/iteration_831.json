[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8339999914169312, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2049810886383057, 1.5794525146484375, 1.1299434900283813, 0.9530661106109619, 0.8619073033332825, 0.8319220542907715, 0.7599038481712341, 0.7535960078239441, 0.7268630266189575, 0.6940962076187134, 0.6678549647331238, 0.662215530872345, 0.644835352897644, 0.6242440938949585, 0.601992666721344, 0.5954595804214478, 0.5914052724838257, 0.565451979637146, 0.5858377814292908, 0.5486999750137329, 0.5473402738571167, 0.5567000508308411, 0.5389131903648376, 0.5241920351982117, 0.5192490816116333, 0.504115879535675, 0.5209785103797913, 0.5011167526245117, 0.49227145314216614, 0.4880647361278534, 0.48045915365219116, 0.4774259328842163, 0.4761087894439697, 0.4661523401737213, 0.45588305592536926, 0.45531702041625977, 0.4529154300689697, 0.45826324820518494, 0.44439610838890076, 0.439607173204422, 0.42900174856185913, 0.4256652295589447, 0.42184463143348694, 0.42031776905059814, 0.4200098514556885, 0.41173264384269714, 0.4101654291152954, 0.4023389518260956, 0.40600258111953735, 0.39724382758140564, 0.39572396874427795, 0.39246663451194763], "accuracy": [0.2739400267601013, 0.5134063959121704, 0.6082419753074646, 0.6559239029884338, 0.6921146512031555, 0.6952846646308899, 0.7195879220962524, 0.7255316376686096, 0.7326641082763672, 0.7395324110984802, 0.7528728246688843, 0.7470611333847046, 0.7638356685638428, 0.7680623531341553, 0.7724210619926453, 0.7803460359573364, 0.7796856164932251, 0.7882710099220276, 0.7791573405265808, 0.7976489067077637, 0.7964601516723633, 0.7930260300636292, 0.8012151718139648, 0.8096684813499451, 0.8080834746360779, 0.816008448600769, 0.8072909712791443, 0.8165367841720581, 0.8170651197433472, 0.8141592741012573, 0.8219521641731262, 0.8211596608161926, 0.8257825970649719, 0.8273676037788391, 0.8345000743865967, 0.8354246616363525, 0.8322546482086182, 0.830669641494751, 0.8335754871368408, 0.8387266993522644, 0.8432175517082214, 0.8446704745292664, 0.8474441766738892, 0.8467837572097778, 0.8455950617790222, 0.8485008478164673, 0.8510104417800903, 0.8537842035293579, 0.8531237840652466, 0.8564258217811584, 0.8568220734596252, 0.8544445633888245], "val_loss": [1.9025294780731201, 1.0776573419570923, 0.8608960509300232, 0.7679287195205688, 0.7568483948707581, 0.705152153968811, 0.6736509799957275, 0.637386679649353, 0.634584367275238, 0.6254033446311951, 0.6208841800689697, 0.5910892486572266, 0.595321774482727, 0.5467607378959656, 0.5440376400947571, 0.5440878868103027, 0.5170931816101074, 0.5197086334228516, 0.5113074779510498, 0.4979442059993744, 0.5157367587089539, 0.5026941895484924, 0.49853846430778503, 0.4950522780418396, 0.4850476086139679, 0.4621709883213043, 0.46327468752861023, 0.45714515447616577, 0.47131261229515076, 0.4597933888435364, 0.45476746559143066, 0.43944987654685974, 0.45144566893577576, 0.43351659178733826, 0.4309977889060974, 0.4312554597854614, 0.4301600754261017, 0.4234543442726135, 0.4332183301448822, 0.4260443150997162, 0.4273703098297119, 0.41374900937080383, 0.4149230122566223, 0.4094058573246002, 0.40590643882751465, 0.40770527720451355, 0.3973349928855896, 0.39893922209739685, 0.399686723947525, 0.4116693437099457, 0.394900381565094, 0.41729646921157837], "val_accuracy": [0.5669999718666077, 0.6570000052452087, 0.687666654586792, 0.7093333601951599, 0.7143333554267883, 0.7383333444595337, 0.7546666860580444, 0.7583333253860474, 0.7450000047683716, 0.7493333220481873, 0.7646666765213013, 0.7670000195503235, 0.7593333125114441, 0.7816666960716248, 0.784333348274231, 0.7929999828338623, 0.8040000200271606, 0.7963333129882812, 0.8109999895095825, 0.8103333115577698, 0.7996666431427002, 0.8076666593551636, 0.8040000200271606, 0.812333345413208, 0.8166666626930237, 0.82833331823349, 0.8303333520889282, 0.8296666741371155, 0.8186666369438171, 0.8286666870117188, 0.8246666789054871, 0.8363333344459534, 0.8286666870117188, 0.8373333215713501, 0.8379999995231628, 0.8413333296775818, 0.843666672706604, 0.8433333039283752, 0.8323333263397217, 0.843999981880188, 0.8386666774749756, 0.8446666598320007, 0.8463333249092102, 0.8529999852180481, 0.8526666760444641, 0.8506666421890259, 0.8579999804496765, 0.8573333621025085, 0.8516666889190674, 0.847000002861023, 0.8536666631698608, 0.8429999947547913]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 4, 3, 1, 3, 5, 1, 1, 2, 6, 4, 5, 2, 6, 9, 3, 7, 5], [3, 2, 2, 0, 2, 2, 0, 1, 0, 0, 3, 0, 0], [26, 39, 39, 23, 28, 72, 73], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 9, 5, 4], [1, 2, 0, 4, 0, 3, 1], [32, 17], [1, 0, 0, 1, 0, 1, 0, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [0, 0, 1, 1], [0, 6], [1, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 18, 13, 7, 8, 5, 3, 2, 1, 0, 1, 1, 4, 2, 2, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.square(grad), tf.math.subtract(grad, tf.math.subtract(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), grad), grad), tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.square(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.add(tf.math.square(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(beta, tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(alpha, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 5, 3, 5], [3, 0, 1, 0, 2], [26, 37, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4, 2, 5], [1, 3, 5, 4, 0, 3, 1], [16, 1], [0, 1, 1, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 7, 1, 5], [52], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 15, 10, 5, 2, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.negative(tf.math.square(tf.math.square(alpha))), tf.math.pow(tf.math.add(grad, grad), grad)), tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09430722147226334, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 7, 5], [0, 1, 1, 0, 2], [26, 39, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2, 8, 1, 2, 1, 1, 1, 6, 3, 6], [1, 2, 0, 4, 0, 3, 1, 3, 4, 4, 2, 0, 0], [16, 1, 68, 86], [0, 0, 1, 1, 1], [7, 3, 0, 2], [0, 6, 1], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 1, 29, 16, 13, 4, 5, 2, 3, 1, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.sqrt(tf.math.add(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(grad, tf.math.subtract(tf.math.subtract(alpha, tf.math.divide_no_nan(grad, tf.math.multiply(grad, grad))), beta)), tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303380250930786, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10777968913316727, 0.10342095047235489, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.302608013153076, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [2, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0], [26, 11, 39, 8], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4, 3, 2, 4, 5, 0, 2, 7, 8, 7, 7, 7, 3, 7, 2, 4, 5, 9, 7, 2, 2, 1, 5, 2, 8], [4, 2, 0, 4, 0, 3, 1, 3, 5, 1, 4, 1, 1, 0, 5, 1, 4, 2, 3, 5], [16, 40, 37, 73, 71], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [7, 3, 2, 2, 4, 8, 5, 4, 5], [0, 1, 1, 4, 1, 5, 1], [0], [1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 4, 5, 4, 52, 32, 20, 5, 16, 9, 7, 1, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(tf.math.negative(tf.math.square(tf.math.square(tf.math.pow(tf.math.multiply(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.square(tf.math.negative(tf.math.add(tf.math.add(grad, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(tf.math.add(grad, tf.math.pow(grad, alpha)), tf.math.square(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), grad), tf.math.add(tf.math.add(alpha, alpha), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), tf.math.add(grad, alpha)))), tf.math.subtract(tf.math.square(grad), tf.math.add(beta, grad))))), tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.add(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.sqrt(grad)), alpha), tf.math.square(tf.math.pow(tf.math.square(grad), alpha))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [16.478078842163086, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20103025436401367, 0.10513802617788315, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [399.00555419921875, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10499999672174454, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}]