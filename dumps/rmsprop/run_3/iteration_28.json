[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8462857007980347, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2121634483337402, 1.6058064699172974, 1.1659818887710571, 0.9941021800041199, 0.9063270092010498, 0.8297048807144165, 0.7962977290153503, 0.7743044495582581, 0.7478806972503662, 0.7071171998977661, 0.7008904218673706, 0.6833369731903076, 0.6650691032409668, 0.6434076428413391, 0.6271822452545166, 0.6288935542106628, 0.6064124703407288, 0.5978152751922607, 0.5809007883071899, 0.5822957754135132, 0.5893721580505371, 0.5597249865531921, 0.5529299378395081, 0.5494160652160645, 0.5340973138809204, 0.5420736074447632, 0.5246900916099548, 0.5276092886924744, 0.5137577056884766, 0.5151656270027161, 0.4928545653820038, 0.5020949840545654, 0.4790555238723755, 0.47978609800338745, 0.46961838006973267, 0.4763341248035431, 0.4706381559371948, 0.4523278772830963, 0.45741865038871765, 0.46356502175331116, 0.4553202688694, 0.4446670413017273], "accuracy": [0.26997753977775574, 0.5111610293388367, 0.5915995240211487, 0.6464139223098755, 0.6796988248825073, 0.7058512568473816, 0.7129837274551392, 0.7177387475967407, 0.7316074371337891, 0.739400327205658, 0.7461365461349487, 0.7514199018478394, 0.7577598690986633, 0.7689869403839111, 0.770439863204956, 0.7689869403839111, 0.7827235460281372, 0.7840443849563599, 0.7906485199928284, 0.7860256433486938, 0.783119797706604, 0.7979130744934082, 0.8000264167785645, 0.7930260300636292, 0.8055738806724548, 0.8030643463134766, 0.8092722296714783, 0.8101968169212341, 0.813498854637146, 0.8140271902084351, 0.8187822103500366, 0.8140271902084351, 0.8220842480659485, 0.822348415851593, 0.8284242749214172, 0.8224804997444153, 0.8337075710296631, 0.8350284099578857, 0.8362171649932861, 0.8309338092803955, 0.832650899887085, 0.8370096683502197], "val_loss": [1.9213560819625854, 1.071881890296936, 0.893805742263794, 0.8041472434997559, 0.7145781517028809, 0.6732219457626343, 0.6473119854927063, 0.6252617239952087, 0.596006453037262, 0.6401125192642212, 0.5861183404922485, 0.5807040333747864, 0.5798402428627014, 0.5561313629150391, 0.5202479362487793, 0.524763286113739, 0.5242302417755127, 0.5103773474693298, 0.4988647997379303, 0.526773989200592, 0.49443063139915466, 0.5013923048973083, 0.4722113311290741, 0.46836715936660767, 0.49291449785232544, 0.4651646316051483, 0.4602363407611847, 0.44861888885498047, 0.44406720995903015, 0.44070687890052795, 0.4460841417312622, 0.45467883348464966, 0.4378846287727356, 0.42528191208839417, 0.4396457374095917, 0.42497533559799194, 0.41655972599983215, 0.430476576089859, 0.40443533658981323, 0.43046656250953674, 0.40864109992980957, 0.413320392370224], "val_accuracy": [0.6100000143051147, 0.67166668176651, 0.6886666417121887, 0.7043333053588867, 0.734333336353302, 0.7516666650772095, 0.7450000047683716, 0.7639999985694885, 0.778333306312561, 0.7620000243186951, 0.7876666784286499, 0.7853333353996277, 0.7749999761581421, 0.7906666398048401, 0.8100000023841858, 0.8023333549499512, 0.8053333163261414, 0.8083333373069763, 0.8133333325386047, 0.7906666398048401, 0.8106666803359985, 0.8109999895095825, 0.8230000138282776, 0.8206666707992554, 0.8199999928474426, 0.8259999752044678, 0.8216666579246521, 0.8323333263397217, 0.8326666951179504, 0.8353333473205566, 0.8353333473205566, 0.8256666660308838, 0.8383333086967468, 0.8399999737739563, 0.8323333263397217, 0.8383333086967468, 0.8510000109672546, 0.8383333086967468, 0.8496666550636292, 0.8353333473205566, 0.8479999899864197, 0.8413333296775818]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8142856955528259, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211810827255249, 1.6134114265441895, 1.163154125213623, 0.982267439365387, 0.878084659576416, 0.8184815049171448, 0.8122776746749878, 0.7460429668426514, 0.7437516450881958, 0.7037128806114197, 0.6818098425865173, 0.6702132225036621, 0.6416473984718323, 0.6460219025611877, 0.6173433661460876, 0.6149253249168396, 0.6064477562904358, 0.5826247334480286, 0.5760771632194519, 0.5834078788757324, 0.5615250468254089, 0.5494154691696167, 0.5574857592582703, 0.538440465927124, 0.5314260125160217, 0.5378496050834656, 0.5093163847923279, 0.517916738986969], "accuracy": [0.2662792205810547, 0.5070664286613464, 0.599128246307373, 0.6509047746658325, 0.6848500967025757, 0.700171709060669, 0.7013604640960693, 0.7290979027748108, 0.7339849472045898, 0.7424382567405701, 0.743891179561615, 0.7524765729904175, 0.7606657147407532, 0.7611940503120422, 0.7692511081695557, 0.7738739848136902, 0.7745344042778015, 0.7845727205276489, 0.7869502305984497, 0.7841764688491821, 0.7898560166358948, 0.8026680946350098, 0.7911768555641174, 0.8039889335632324, 0.806630551815033, 0.8038568496704102, 0.8075551390647888, 0.8063663840293884], "val_loss": [1.9297653436660767, 1.1090608835220337, 0.9079369902610779, 0.8318496346473694, 0.7232822179794312, 0.6982386112213135, 0.6852355003356934, 0.6360087990760803, 0.6720989346504211, 0.6064791083335876, 0.6168269515037537, 0.6079339981079102, 0.5861263275146484, 0.5652406215667725, 0.581762433052063, 0.5953081846237183, 0.5601900219917297, 0.5447898507118225, 0.5545937418937683, 0.554777204990387, 0.5022624135017395, 0.589421808719635, 0.4992281198501587, 0.5107282400131226, 0.519671618938446, 0.4879043698310852, 0.485381543636322, 0.49329277873039246], "val_accuracy": [0.5793333053588867, 0.640666663646698, 0.6723333597183228, 0.6616666913032532, 0.7173333168029785, 0.7433333396911621, 0.7336666584014893, 0.7633333206176758, 0.7456666827201843, 0.7723333239555359, 0.7603333592414856, 0.7573333382606506, 0.7720000147819519, 0.7889999747276306, 0.7693333625793457, 0.7693333625793457, 0.781000018119812, 0.781333327293396, 0.7923333048820496, 0.7803333401679993, 0.812333345413208, 0.7603333592414856, 0.8169999718666077, 0.8056666851043701, 0.7986666560173035, 0.8143333196640015, 0.8109999895095825, 0.8113333582878113]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [4, 2, 3, 1, 3, 5, 9], [0, 0, 0, 0, 2], [0, 39, 39, 48, 68], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [0, 4, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 0, 1], [0, 7, 8], [0, 6], [0], [1], [0], [7], [0]], "fitness": -0.22771428525447845, "mapping_values": [1, 12, 7, 5, 5, 10, 6, 4, 1, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.339712142944336, 2.2588188648223877, 2.230630397796631, 3.9376213550567627, 2.3600897789001465, 2.306039810180664], "accuracy": [0.23523972928524017, 0.17593449354171753, 0.19455818831920624, 0.24844802916049957, 0.13049794733524323, 0.09721305221319199], "val_loss": [2.0777575969696045, 2.2870125770568848, 2.236544132232666, 2.307709217071533, 2.3080811500549316, 2.303133964538574], "val_accuracy": [0.2303333282470703, 0.09933333098888397, 0.12833333015441895, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5, 6, 5], [0, 0, 1, 2, 2, 1], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 2, 0, 8, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 2, 9, 6, 3, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(tf.math.square(alpha), grad))), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10302469879388809, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 2, 9, 1, 3, 5], [0, 0, 3, 0, 2], [81, 39, 39], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [9, 7, 0, 6, 8, 8, 2], [2, 0, 3, 1, 0], [16, 1], [1, 0, 1, 0], [0, 7], [2, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 3, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [94.09211730957031, 10736.9892578125, 181302.078125, 1267342.5, 5610590.5, 18491248.0], "accuracy": [0.09813763201236725, 0.09787346422672272, 0.1022322028875351, 0.09760929644107819, 0.10117553919553757, 0.09840179979801178], "val_loss": [798.3419799804688, 39179.046875, 416333.90625, 2262947.75, 8465407.0, 24953408.0], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 9, 1, 3, 5], [0, 3, 2, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 6, 6, 3, 8, 2, 2], [2, 0, 3, 1, 0, 1, 2], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 6, 4, 2, 2, 15, 8, 7, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(beta, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30985951423645, 2.3117473125457764, 2.310393810272217, 2.310270309448242, 2.3113925457000732, 2.3109710216522217], "accuracy": [0.09113723784685135, 0.0878351628780365, 0.08955223858356476, 0.08809932321310043, 0.09060890227556229, 0.09166556596755981], "val_loss": [2.308051586151123, 2.308051586151123, 2.308051586151123, 2.308051586151123, 2.308051586151123, 2.308051586151123], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]