[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8539999723434448, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2108490467071533, 1.6031280755996704, 1.1586053371429443, 1.0017169713974, 0.9027997255325317, 0.8509687781333923, 0.7821087837219238, 0.7510325312614441, 0.7681663632392883, 0.7239335179328918, 0.7042371034622192, 0.6705950498580933, 0.6701738238334656, 0.6410457491874695, 0.6455509066581726, 0.6122079491615295, 0.6216953992843628, 0.6117597222328186, 0.5990164279937744, 0.5723549127578735, 0.5750733613967896, 0.5654271245002747, 0.5603346228599548, 0.5531269907951355, 0.543151319026947, 0.5325374007225037, 0.523846447467804, 0.515398383140564, 0.5130863785743713, 0.5047292113304138, 0.511211097240448, 0.489170640707016, 0.4864640533924103, 0.4842982292175293, 0.47540971636772156, 0.4720350503921509, 0.46809497475624084, 0.46228352189064026, 0.46422722935676575, 0.4534793794155121, 0.45032545924186707, 0.44704577326774597, 0.43839192390441895, 0.4372914135456085, 0.44019392132759094, 0.4282222390174866, 0.414899617433548, 0.42131656408309937, 0.4295532703399658, 0.4157116115093231, 0.39912712574005127, 0.4099557399749756, 0.4104830026626587, 0.40346992015838623, 0.40090474486351013, 0.38478195667266846, 0.39120081067085266, 0.38766616582870483, 0.3841533958911896, 0.37545040249824524, 0.37709566950798035, 0.37396249175071716, 0.36828750371932983, 0.36231529712677, 0.37067341804504395, 0.36960527300834656, 0.36422786116600037, 0.3631508946418762, 0.3479906916618347, 0.3558589220046997, 0.35364899039268494, 0.34216275811195374, 0.3413783013820648], "accuracy": [0.2658829689025879, 0.5038964748382568, 0.5926561951637268, 0.6362435817718506, 0.6732267737388611, 0.6902654767036438, 0.711530864238739, 0.7235503792762756, 0.7207766771316528, 0.7279091477394104, 0.7391361594200134, 0.7582882046699524, 0.746268630027771, 0.7626469135284424, 0.759609043598175, 0.7754589915275574, 0.7625148296356201, 0.7757231593132019, 0.7700436115264893, 0.7889314293861389, 0.7889314293861389, 0.7868181467056274, 0.7898560166358948, 0.7997622489929199, 0.798309326171875, 0.8030643463134766, 0.8080834746360779, 0.8125742673873901, 0.8132346868515015, 0.8161405324935913, 0.8128384351730347, 0.8238013386726379, 0.8271034359931946, 0.8224804997444153, 0.8290846943855286, 0.8278959393501282, 0.830669641494751, 0.833179235458374, 0.833179235458374, 0.8341038227081299, 0.837537944316864, 0.8366134166717529, 0.8391229510307312, 0.843481719493866, 0.8399154543876648, 0.8416325449943542, 0.8506141901016235, 0.848368763923645, 0.8404437899589539, 0.8453308939933777, 0.8536521196365356, 0.8490291833877563, 0.8507462739944458, 0.8562937378883362, 0.8520671129226685, 0.8610487580299377, 0.8573504090309143, 0.8595958352088928, 0.8590674996376038, 0.8631620407104492, 0.8622375130653381, 0.8631620407104492, 0.8681812286376953, 0.8667283058166504, 0.8626337051391602, 0.8658037185668945, 0.8628978729248047, 0.8687095642089844, 0.8659358024597168, 0.868049144744873, 0.8716153502464294, 0.874389111995697, 0.8757099509239197], "val_loss": [1.9235763549804688, 1.1314831972122192, 0.8731655478477478, 0.807879626750946, 0.7705962061882019, 0.6980771422386169, 0.6661664247512817, 0.697576105594635, 0.66929030418396, 0.5976685285568237, 0.5922770500183105, 0.5830627679824829, 0.6373900771141052, 0.5411273837089539, 0.5578807592391968, 0.5548969507217407, 0.5392282009124756, 0.5990676879882812, 0.5256581902503967, 0.5300251245498657, 0.5082780718803406, 0.5017443299293518, 0.5056119561195374, 0.5075571537017822, 0.4926685094833374, 0.47513166069984436, 0.4797607362270355, 0.4600391089916229, 0.46047335863113403, 0.5116149187088013, 0.4663454294204712, 0.452178955078125, 0.4634062945842743, 0.44287997484207153, 0.4433993399143219, 0.43838903307914734, 0.43588727712631226, 0.4394426941871643, 0.43417826294898987, 0.43312549591064453, 0.4629688262939453, 0.431441068649292, 0.4245022237300873, 0.41809216141700745, 0.4273024797439575, 0.40897610783576965, 0.41044068336486816, 0.45049646496772766, 0.4001186192035675, 0.4124038815498352, 0.4094165861606598, 0.3972887098789215, 0.39708682894706726, 0.39355671405792236, 0.39122965931892395, 0.40282538533210754, 0.3918760120868683, 0.3897528350353241, 0.3919954299926758, 0.39045262336730957, 0.40663614869117737, 0.3902661204338074, 0.37542790174484253, 0.3986421823501587, 0.3837566673755646, 0.3817605674266815, 0.37363508343696594, 0.37688878178596497, 0.37387850880622864, 0.387358158826828, 0.3793269991874695, 0.36945849657058716, 0.38200435042381287], "val_accuracy": [0.5073333382606506, 0.6323333382606506, 0.7126666903495789, 0.70333331823349, 0.7099999785423279, 0.7419999837875366, 0.7593333125114441, 0.7426666617393494, 0.7416666746139526, 0.7753333449363708, 0.7826666831970215, 0.7836666703224182, 0.7506666779518127, 0.8023333549499512, 0.8023333549499512, 0.7903333306312561, 0.7916666865348816, 0.7573333382606506, 0.8106666803359985, 0.8083333373069763, 0.8216666579246521, 0.8140000104904175, 0.8166666626930237, 0.812666654586792, 0.8216666579246521, 0.8276666402816772, 0.8323333263397217, 0.8420000076293945, 0.8433333039283752, 0.8066666722297668, 0.8323333263397217, 0.8443333506584167, 0.8296666741371155, 0.8426666855812073, 0.8416666388511658, 0.8450000286102295, 0.8426666855812073, 0.847000002861023, 0.8496666550636292, 0.8516666889190674, 0.8263333439826965, 0.8443333506584167, 0.8500000238418579, 0.8519999980926514, 0.8479999899864197, 0.8579999804496765, 0.8553333282470703, 0.8206666707992554, 0.8616666793823242, 0.8510000109672546, 0.8573333621025085, 0.8616666793823242, 0.8576666712760925, 0.8633333444595337, 0.8633333444595337, 0.859000027179718, 0.8603333234786987, 0.8636666536331177, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197, 0.8616666793823242, 0.8709999918937683, 0.8606666922569275, 0.8673333525657654, 0.862666666507721, 0.8709999918937683, 0.8726666569709778, 0.8696666955947876, 0.8606666922569275, 0.8693333268165588, 0.871999979019165, 0.8656666874885559]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8114285469055176, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.210383892059326, 1.610939621925354, 1.1637686491012573, 0.9916564226150513, 0.8641849756240845, 0.843900740146637, 0.7669085264205933, 0.7815206050872803, 0.7244823575019836, 0.7128969430923462, 0.712121307849884, 0.6576576232910156, 0.6739697456359863, 0.6295031309127808, 0.63202303647995, 0.6320276260375977, 0.604453980922699, 0.5933710932731628, 0.5838046669960022, 0.5721453428268433, 0.5676755905151367, 0.5419754385948181, 0.5511935949325562, 0.545564591884613, 0.5251975059509277, 0.5331589579582214, 0.5151065587997437, 0.5066656470298767, 0.5133177042007446, 0.5092278122901917, 0.49099379777908325, 0.4909389019012451, 0.48048678040504456, 0.478424072265625, 0.4755142629146576, 0.4592408239841461, 0.46027880907058716, 0.454450786113739, 0.4417492151260376, 0.45513635873794556, 0.4378325939178467, 0.43762633204460144, 0.4305720329284668], "accuracy": [0.2705058753490448, 0.502971887588501, 0.5855237245559692, 0.6502443552017212, 0.691850483417511, 0.6873596906661987, 0.718399167060852, 0.7040021419525146, 0.7343811988830566, 0.739400327205658, 0.7388719916343689, 0.7564390301704407, 0.7486461400985718, 0.7672698497772217, 0.7642319202423096, 0.763967752456665, 0.7823272943496704, 0.7823272943496704, 0.7803460359573364, 0.7878747582435608, 0.7885351777076721, 0.8034605979919434, 0.7980451583862305, 0.7994980812072754, 0.8049134612083435, 0.8029322624206543, 0.8095363974571228, 0.8164047002792358, 0.8076872229576111, 0.8137630224227905, 0.8189142942428589, 0.8201030492782593, 0.819970965385437, 0.8219521641731262, 0.8286884427070618, 0.8313300609588623, 0.8339717388153076, 0.8347642421722412, 0.8356888294219971, 0.8293488025665283, 0.8401796221733093, 0.8376700282096863, 0.8396512866020203], "val_loss": [1.9197200536727905, 1.098565697669983, 0.9001347422599792, 0.7646784782409668, 0.727811336517334, 0.6619412302970886, 0.6450671553611755, 0.6819247007369995, 0.5935283303260803, 0.6103720664978027, 0.556037425994873, 0.5480962991714478, 0.5508363246917725, 0.5223588943481445, 0.520349383354187, 0.5279346704483032, 0.4841803312301636, 0.5016410946846008, 0.48445165157318115, 0.5020065307617188, 0.45889022946357727, 0.4513322412967682, 0.4765660762786865, 0.43929773569107056, 0.4597588777542114, 0.43018391728401184, 0.4318119287490845, 0.4172946810722351, 0.42748185992240906, 0.4116060733795166, 0.4122013449668884, 0.42888346314430237, 0.4022451937198639, 0.4245057702064514, 0.40789029002189636, 0.3931672275066376, 0.3879280984401703, 0.3818802535533905, 0.38265302777290344, 0.38032910227775574, 0.3837898075580597, 0.3805626630783081, 0.3838954269886017], "val_accuracy": [0.5706666707992554, 0.6656666398048401, 0.6940000057220459, 0.7236666679382324, 0.7080000042915344, 0.7549999952316284, 0.75, 0.7243333458900452, 0.7670000195503235, 0.765999972820282, 0.7789999842643738, 0.7963333129882812, 0.7846666574478149, 0.8016666769981384, 0.8043333292007446, 0.7940000295639038, 0.8130000233650208, 0.8069999814033508, 0.8066666722297668, 0.7933333516120911, 0.8286666870117188, 0.8316666483879089, 0.8193333148956299, 0.8293333053588867, 0.8293333053588867, 0.8403333425521851, 0.8336666822433472, 0.843666672706604, 0.8383333086967468, 0.8446666598320007, 0.8503333330154419, 0.8339999914169312, 0.8536666631698608, 0.8396666646003723, 0.8443333506584167, 0.8526666760444641, 0.8516666889190674, 0.8629999756813049, 0.8573333621025085, 0.8560000061988831, 0.8583333492279053, 0.859333336353302, 0.8526666760444641]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 5, 3, 5], [0, 0, 1, 2, 2], [0, 39, 39], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 0, 6, 6, 8, 2], [0, 0, 3, 1, 0], [16, 1], [0, 1, 1, 0], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [92.84701538085938, 10828.76171875, 180299.1875, 1268487.25, 5600015.5, 18250758.0], "accuracy": [0.09668471664190292, 0.0952318087220192, 0.10408136248588562, 0.09787346422672272, 0.0956280529499054, 0.10236428678035736], "val_loss": [812.3175659179688, 39945.57421875, 424567.625, 2307848.25, 8633622.0, 25449642.0], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 2, 2, 2], [0, 39, 9], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 6, 6, 3, 8, 2, 9, 2, 3, 7, 2, 4, 4, 6, 4, 3, 7, 7, 0, 4, 6, 8, 4, 2, 4, 7, 8, 0], [2, 0, 3, 3, 0, 5, 0, 2, 3, 4, 2, 4, 3, 5, 2, 5, 4, 5, 1, 1, 5], [16, 1, 37, 96], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 50, 29, 21, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))), tf.math.multiply(grad, tf.math.add(tf.math.add(tf.math.pow(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), beta), grad))), tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(grad, tf.math.add(tf.math.add(tf.math.negative(tf.math.pow(beta, tf.math.divide_no_nan(grad, grad))), grad), tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(grad, grad), tf.math.sqrt(grad))), tf.math.negative(alpha))))), alpha), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0], [0, 2, 3, 0, 3, 7, 3, 1, 8, 4, 9, 5, 9], [0, 0, 1, 0, 2, 0], [0, 39, 39, 42, 68, 2], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 7, 0, 6, 3, 8, 1], [2, 0, 3, 1, 0], [16, 1], [1, 1, 1, 1], [0, 7], [3, 1], [0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 6, 8, 7, 3, 2, 4, 7, 0, 1, 6, 4, 9, 2, 7, 3, 0], [2, 7, 7, 1, 0, 5, 7, 4, 3, 1, 2, 1], [0, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 13, 6, 6, 1, 0, 1, 0, 1, 0, 1, 0, 29, 17, 12, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(tf.math.sqrt(tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.math.multiply(beta, tf.math.add(grad, tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.pow(grad, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(tf.math.add(grad, tf.math.multiply(sigma, alpha)), beta))), tf.math.negative(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 9, 3, 1, 8, 5], [0, 0, 1, 2, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 6, 3, 8, 7], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 7, 2, 7, 4, 0, 2, 7, 7, 5, 0, 6, 0, 2], [0, 3, 0, 1, 5, 0, 2, 4, 7, 0], [0, 66, 19, 88], [1], [0], [2], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 2, 2, 0, 1, 10, 6, 4, 1, 24, 14, 10, 4, 1, 0, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(sigma, tf.math.negative(tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.square(alpha), tf.math.negative(grad)), tf.math.divide_no_nan(tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), beta))))), grad)), tf.math.add(grad, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3087782859802246, 2.310056447982788, 2.310072898864746, 2.310673236846924, 2.3108255863189697, 2.3107004165649414], "accuracy": [0.09285431355237961, 0.0948355570435524, 0.0944393053650856, 0.09140139818191528, 0.08809932321310043, 0.09179764986038208], "val_loss": [2.30861496925354, 2.30861496925354, 2.30861496925354, 2.30861496925354, 2.30861496925354, 2.30861496925354], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]