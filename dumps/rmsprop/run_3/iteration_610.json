[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.7997142672538757, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2089805603027344, 1.6135916709899902, 1.1119968891143799, 0.9993002414703369, 0.9064353108406067, 0.8257356882095337, 0.7788779139518738, 0.7719601988792419, 0.7189235091209412, 0.7231786251068115, 0.692539393901825, 0.6829490661621094, 0.6675777435302734, 0.6351854205131531, 0.6087797284126282, 0.6179360747337341, 0.6080268621444702, 0.5985331535339355, 0.5921538472175598, 0.5698980689048767, 0.5705821514129639], "accuracy": [0.27327960729599, 0.49808478355407715, 0.6087703108787537, 0.651168942451477, 0.6682076454162598, 0.6935675740242004, 0.7078325152397156, 0.7111346125602722, 0.7317395210266113, 0.7256637215614319, 0.7403249144554138, 0.7483819723129272, 0.7506273984909058, 0.7651565074920654, 0.7777044177055359, 0.7726852297782898, 0.7736098170280457, 0.7794214487075806, 0.7835160493850708, 0.7893276810646057, 0.7853652238845825], "val_loss": [1.9225538969039917, 1.1059592962265015, 0.9006263017654419, 0.7551096081733704, 0.7157779932022095, 0.6527827978134155, 0.7033849954605103, 0.6705822944641113, 0.6103107929229736, 0.5869715809822083, 0.6387079358100891, 0.5572091341018677, 0.5507236123085022, 0.5230515599250793, 0.5667080283164978, 0.5017111897468567, 0.5248929858207703, 0.5124420523643494, 0.500235378742218, 0.5236806869506836, 0.4937782883644104], "val_accuracy": [0.6050000190734863, 0.6380000114440918, 0.6869999766349792, 0.7316666841506958, 0.7406666874885559, 0.7599999904632568, 0.7326666712760925, 0.7353333234786987, 0.7703333497047424, 0.7889999747276306, 0.7506666779518127, 0.7866666913032532, 0.8096666932106018, 0.8043333292007446, 0.781333327293396, 0.8140000104904175, 0.7913333177566528, 0.8013333082199097, 0.8059999942779541, 0.7926666736602783, 0.8050000071525574]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [60, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 6, 3, 4], [2, 2, 0, 4, 0, 3, 1, 1, 5], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 8], [0, 1, 2, 2], [0], [1], [0], [1], [0]], "fitness": -0.38342857360839844, "mapping_values": [1, 10, 5, 5, 3, 17, 8, 9, 2, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(beta, tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha)), alpha), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.4413623809814453, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.29824328422546387, 0.1476687341928482, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [26.3045711517334, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.3869999945163727, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], [2, 2, 4, 6, 3, 5, 5, 6], [2, 1, 0, 4, 0, 3, 1], [16, 1], [0, 1, 1, 1], [0, 7], [0, 6], [34], [1], [0], [4], [0]], "fitness": -0.3434285819530487, "mapping_values": [1, 10, 5, 5, 3, 1, 0, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.4470508098602295, 2.295536994934082, 2.205779552459717, 2.250998020172119, 2.5624961853027344, 2.3066985607147217, 2.3037221431732178, 2.3031177520751953], "accuracy": [0.1798969805240631, 0.17263241112232208, 0.20393607020378113, 0.15651829540729523, 0.13736626505851746, 0.09998679161071777, 0.09998679161071777, 0.09879804402589798], "val_loss": [2.3040714263916016, 2.300367832183838, 1.8514328002929688, 2.211590051651001, 2.310236692428589, 2.304018259048462, 2.3028628826141357, 2.302802801132202], "val_accuracy": [0.1223333328962326, 0.10066666454076767, 0.3476666808128357, 0.24033333361148834, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [2, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2, 0], [26, 39, 39, 67], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [6, 2, 4, 6, 0, 5, 3, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 5, 6, 4, 11, 6, 5, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 1, 1, 2, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], [3, 2, 2, 6, 3, 5, 5, 4, 9], [1, 0, 0, 4, 0, 3, 1], [16, 1, 84, 15], [0, 0, 1, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 15, 9, 6, 4, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3038582801818848, 2.3030216693878174, 2.303007125854492, 2.303114175796509, 2.302799701690674, 2.3030176162719727, 2.302903413772583, 2.3029861450195312, 2.3030426502227783, 2.3029513359069824], "accuracy": [0.09589222073554993, 0.09113723784685135, 0.09906221181154251, 0.09298639744520187, 0.09549596905708313, 0.09245806187391281, 0.09747721254825592, 0.0944393053650856, 0.0944393053650856, 0.09840179979801178], "val_loss": [2.30264949798584, 2.3027052879333496, 2.302626609802246, 2.302668333053589, 2.302673101425171, 2.3026249408721924, 2.302623987197876, 2.302588939666748, 2.3026833534240723, 2.302629232406616], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09933333098888397, 0.09733333438634872, 0.1003333330154419, 0.09933333098888397, 0.09833333641290665, 0.1003333330154419, 0.09733333438634872, 0.1003333330154419]}}]