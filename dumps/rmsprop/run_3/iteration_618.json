[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 8, 6, 3, 2, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 13], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8708571195602417, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.sqrt(alpha), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), grad)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1040453910827637, 1.1877472400665283, 0.8113923072814941, 0.6829556226730347, 0.6099805235862732, 0.5612277984619141, 0.5157431364059448, 0.4891652762889862, 0.4685412049293518, 0.44646555185317993, 0.43686601519584656, 0.42610231041908264, 0.4084421396255493, 0.39226454496383667, 0.376775324344635, 0.37229111790657043, 0.3508664667606354, 0.35163989663124084, 0.3319675624370575, 0.3149748742580414, 0.3043873608112335, 0.29394853115081787, 0.2853953540325165, 0.28103604912757874, 0.2754414677619934, 0.2684800326824188, 0.2602836787700653, 0.24616247415542603, 0.24720802903175354, 0.24603000283241272, 0.24214330315589905, 0.22657322883605957, 0.23259590566158295, 0.22325201332569122, 0.20916804671287537], "accuracy": [0.2989037036895752, 0.5958262085914612, 0.695813000202179, 0.7383436560630798, 0.7630431652069092, 0.7829877138137817, 0.8087438941001892, 0.8190463781356812, 0.8269713521003723, 0.8343679904937744, 0.8352925777435303, 0.8413683772087097, 0.8482366800308228, 0.8531237840652466, 0.8602562546730042, 0.8683133125305176, 0.8697662353515625, 0.8697662353515625, 0.8759741187095642, 0.8829745054244995, 0.8879936337471008, 0.8924844861030579, 0.8961827754974365, 0.8957865834236145, 0.8942015767097473, 0.8942015767097473, 0.9029190540313721, 0.9054285883903503, 0.9055606722831726, 0.9050323367118835, 0.9070135951042175, 0.9144102334976196, 0.9103156924247742, 0.9140139818191528, 0.9220710396766663], "val_loss": [1.1225366592407227, 0.7616536617279053, 0.6562244892120361, 0.5781545639038086, 0.5348951816558838, 0.5018901228904724, 0.48087742924690247, 0.4589798152446747, 0.4496687054634094, 0.4274503290653229, 0.42992135882377625, 0.41310572624206543, 0.41436654329299927, 0.41235989332199097, 0.3995227515697479, 0.393421471118927, 0.37761759757995605, 0.37750503420829773, 0.3785367012023926, 0.3727880120277405, 0.3626976013183594, 0.3573897182941437, 0.3626095652580261, 0.3650992810726166, 0.36011385917663574, 0.35865259170532227, 0.3614126443862915, 0.36206135153770447, 0.3657178580760956, 0.3526950776576996, 0.3587741553783417, 0.37086084485054016, 0.36759471893310547, 0.36901700496673584, 0.3698834776878357], "val_accuracy": [0.6240000128746033, 0.718666672706604, 0.7406666874885559, 0.7770000100135803, 0.7913333177566528, 0.8106666803359985, 0.8149999976158142, 0.8323333263397217, 0.8323333263397217, 0.8389999866485596, 0.8420000076293945, 0.847000002861023, 0.8456666469573975, 0.843999981880188, 0.8583333492279053, 0.8579999804496765, 0.8643333315849304, 0.8633333444595337, 0.8629999756813049, 0.8713333606719971, 0.8730000257492065, 0.8730000257492065, 0.878000020980835, 0.8703333139419556, 0.8743333220481873, 0.8773333430290222, 0.878333330154419, 0.8796666860580444, 0.875, 0.8816666603088379, 0.878333330154419, 0.8730000257492065, 0.875, 0.8759999871253967, 0.8793333172798157]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8159999847412109, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.211653709411621, 1.6019209623336792, 1.1306486129760742, 0.9585161805152893, 0.866498589515686, 0.806046724319458, 0.788117527961731, 0.7395275831222534, 0.7436257600784302, 0.6963697075843811, 0.689893364906311, 0.6644923090934753, 0.6502295136451721, 0.6249254941940308, 0.6116165518760681, 0.6115391850471497, 0.6029365658760071, 0.5749938488006592, 0.5928026437759399, 0.5736892223358154, 0.5389965176582336, 0.5543444156646729, 0.5298786163330078, 0.5350534319877625, 0.5260262489318848, 0.5247025489807129, 0.5236485600471497, 0.5071011185646057], "accuracy": [0.2665433883666992, 0.5074626803398132, 0.6038832664489746, 0.6530181169509888, 0.6897371411323547, 0.7049266695976257, 0.7066437602043152, 0.7239466309547424, 0.7235503792762756, 0.7371549606323242, 0.743891179561615, 0.752212405204773, 0.7557786107063293, 0.7655527591705322, 0.7733456492424011, 0.7693831920623779, 0.7774402499198914, 0.787082314491272, 0.7775723338127136, 0.7869502305984497, 0.8004226684570312, 0.7956677079200745, 0.8030643463134766, 0.8024039268493652, 0.8072909712791443, 0.8038568496704102, 0.8049134612083435, 0.816008448600769], "val_loss": [1.924399733543396, 1.182390570640564, 0.8846420049667358, 0.8877902030944824, 0.7313340902328491, 0.7133029699325562, 0.6882326602935791, 0.6622178554534912, 0.6307236552238464, 0.6525157690048218, 0.5933411717414856, 0.621028482913971, 0.575581431388855, 0.5595489144325256, 0.545348048210144, 0.5418574213981628, 0.5492242574691772, 0.5245237350463867, 0.5707083344459534, 0.5322333574295044, 0.5402822494506836, 0.4958614408969879, 0.48770231008529663, 0.48084089159965515, 0.48770010471343994, 0.5045003890991211, 0.4684188663959503, 0.5022021532058716], "val_accuracy": [0.5613333582878113, 0.593999981880188, 0.6756666898727417, 0.6583333611488342, 0.7266666889190674, 0.7250000238418579, 0.7289999723434448, 0.7379999756813049, 0.7493333220481873, 0.7536666393280029, 0.7763333320617676, 0.7476666569709778, 0.7806666493415833, 0.7889999747276306, 0.7940000295639038, 0.7979999780654907, 0.7956666946411133, 0.8036666512489319, 0.7816666960716248, 0.8006666898727417, 0.7926666736602783, 0.8166666626930237, 0.8270000219345093, 0.8206666707992554, 0.8209999799728394, 0.8096666932106018, 0.8233333230018616, 0.8146666884422302]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 2, 4, 6, 3, 1, 5, 9, 9], [2, 2, 0, 4, 0, 3, 1], [16, 1, 4, 84], [0, 0, 0, 1, 0, 1, 1, 1], [7, 5, 0, 3], [3, 1, 1, 2], [0], [1], [0], [4], [0]], "fitness": -0.12399999797344208, "mapping_values": [1, 10, 5, 5, 3, 14, 9, 5, 4, 7, 4, 3, 0, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(beta, tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.math.negative(sigma)), tf.math.multiply(alpha, alpha)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.3633790016174316, 2.486577033996582, 2.3062236309051514, 2.3038735389709473, 2.303133726119995, 2.3030524253845215], "accuracy": [0.18650111556053162, 0.16919825971126556, 0.09959053993225098, 0.09615638852119446, 0.09377889335155487, 0.09906221181154251], "val_loss": [2.291396379470825, 2.3077473640441895, 2.3039603233337402, 2.302682638168335, 2.3025403022766113, 2.30251145362854], "val_accuracy": [0.11866666376590729, 0.10000000149011612, 0.10000000149011612, 0.10066666454076767, 0.10400000214576721, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0], [26, 39, 39, 9], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 2, 4, 6, 4, 4, 5, 4, 8, 0, 9, 3, 5], [2, 2, 0, 4, 0, 3, 1, 4], [16, 1, 25], [0, 0, 1, 1], [0, 7], [0, 6], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 4, 21, 13, 8, 3, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.pow(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.square(tf.math.pow(tf.math.sqrt(tf.math.negative(grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.square(grad), alpha)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [104.55088806152344, 12261.7841796875, 211807.890625, 1448694.0, 6378030.0, 21029750.0], "accuracy": [0.09840179979801178, 0.09391097724437714, 0.09760929644107819, 0.10672302544116974, 0.09708096832036972, 0.10077928751707077], "val_loss": [908.5896606445312, 44825.68359375, 475566.84375, 2577487.25, 9605266.0, 28180278.0], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 8, 3, 5], [1, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 2, 4, 6, 3, 5, 5, 4, 7], [2, 2, 0, 4, 0, 3, 1, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [1, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.0925714299082756, "mapping_values": [1, 6, 3, 3, 1, 17, 9, 8, 2, 8, 4, 4, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), grad)), alpha), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(alpha), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3105523586273193, 2.3104543685913086, 2.310356378555298, 2.309316635131836, 2.310835599899292, 2.3108179569244385], "accuracy": [0.09259014576673508, 0.09219389408826828, 0.09351472556591034, 0.09734513610601425, 0.09351472556591034, 0.0874389111995697], "val_loss": [2.308626413345337, 2.308626413345337, 2.308626413345337, 2.308626413345337, 2.308626413345337, 2.308626413345337], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}]