[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.8799999952316284, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1141276359558105, 1.2854799032211304, 0.9006161093711853, 0.7477179765701294, 0.6510568261146545, 0.5984578132629395, 0.5449386835098267, 0.5192564129829407, 0.49348098039627075, 0.47485414147377014, 0.4514867067337036, 0.4315846562385559, 0.41725119948387146, 0.4095759689807892, 0.39079174399375916, 0.37796324491500854, 0.3730018436908722, 0.34559786319732666, 0.3457213044166565, 0.33971261978149414, 0.32669469714164734, 0.33221715688705444, 0.31436437368392944, 0.3045427203178406, 0.2912495732307434, 0.2893770635128021, 0.27459776401519775, 0.2686750888824463, 0.2542434632778168, 0.2549207806587219, 0.2474549114704132, 0.2353166937828064, 0.2352210432291031, 0.22608718276023865, 0.22045324742794037, 0.20817507803440094, 0.2066163569688797], "accuracy": [0.28305375576019287, 0.5893540978431702, 0.6744155287742615, 0.7111346125602722, 0.7512878179550171, 0.7707040309906006, 0.7977809906005859, 0.800290584564209, 0.809140145778656, 0.8215559124946594, 0.8251221776008606, 0.8404437899589539, 0.8430854678153992, 0.8466516733169556, 0.8516708612442017, 0.8599920868873596, 0.8569541573524475, 0.8720116019248962, 0.8710870146751404, 0.8747853636741638, 0.8794082403182983, 0.8767666220664978, 0.8767666220664978, 0.8842953443527222, 0.8881257176399231, 0.8898428082466125, 0.8967111110687256, 0.9005415439605713, 0.9041078090667725, 0.9027869701385498, 0.9063531756401062, 0.9140139818191528, 0.9075419306755066, 0.9121648669242859, 0.9148064851760864, 0.9215427041053772, 0.9204860925674438], "val_loss": [1.0718753337860107, 0.8780998587608337, 0.6786661148071289, 0.5667974352836609, 0.5274632573127747, 0.4778060019016266, 0.45099446177482605, 0.4290582537651062, 0.41114670038223267, 0.3994693160057068, 0.38328856229782104, 0.3767406940460205, 0.36145931482315063, 0.35313984751701355, 0.3477644920349121, 0.34594792127609253, 0.3332073390483856, 0.32470929622650146, 0.33242690563201904, 0.33648940920829773, 0.3233390152454376, 0.32466185092926025, 0.31876254081726074, 0.3112848997116089, 0.3022047281265259, 0.30465394258499146, 0.2995307147502899, 0.30256974697113037, 0.29729926586151123, 0.30382657051086426, 0.2972928583621979, 0.2895248532295227, 0.29739728569984436, 0.29269400238990784, 0.29641813039779663, 0.2925165593624115, 0.30343908071517944], "val_accuracy": [0.6579999923706055, 0.6980000138282776, 0.7276666760444641, 0.7646666765213013, 0.7836666703224182, 0.8066666722297668, 0.8233333230018616, 0.8339999914169312, 0.8450000286102295, 0.8503333330154419, 0.8533333539962769, 0.8576666712760925, 0.8619999885559082, 0.8633333444595337, 0.8700000047683716, 0.871999979019165, 0.871999979019165, 0.8806666731834412, 0.8736666440963745, 0.8786666393280029, 0.8806666731834412, 0.878000020980835, 0.8840000033378601, 0.8853333592414856, 0.8893333077430725, 0.8913333415985107, 0.8896666765213013, 0.8886666893959045, 0.893666684627533, 0.8939999938011169, 0.8966666460037231, 0.8976666927337646, 0.8926666378974915, 0.8946666717529297, 0.8923333287239075, 0.8963333368301392, 0.890333354473114]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8145714402198792, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2097389698028564, 1.6128231287002563, 1.163429856300354, 0.9685995578765869, 0.8958073258399963, 0.8337870240211487, 0.7795478701591492, 0.7717249393463135, 0.726697564125061, 0.713932991027832, 0.6962234377861023, 0.6833815574645996, 0.66293865442276, 0.6469696760177612, 0.628947913646698, 0.6290265321731567, 0.6109688878059387, 0.5988208055496216, 0.5954995155334473, 0.5654897093772888, 0.5708968043327332, 0.5750499367713928, 0.5575682520866394, 0.5426486134529114, 0.5352635383605957, 0.5386922955513, 0.5237966179847717, 0.5141960978507996, 0.5159654021263123, 0.5022451877593994, 0.5054967403411865, 0.4856797754764557, 0.48592135310173035, 0.49109941720962524, 0.46971893310546875, 0.4729047417640686, 0.46595439314842224, 0.47190386056900024, 0.45797011256217957, 0.4529251754283905, 0.4484494626522064, 0.4446280002593994, 0.4496006667613983, 0.439166784286499, 0.4268563985824585, 0.4179811179637909, 0.42990535497665405, 0.4185285270214081, 0.41682326793670654, 0.41905611753463745, 0.4137692153453827, 0.4106678068637848, 0.399076908826828, 0.40668603777885437, 0.3988422751426697, 0.39247605204582214, 0.3884996771812439, 0.3827075958251953, 0.3852179944515228, 0.37537768483161926, 0.37842512130737305, 0.37471678853034973, 0.37253326177597046, 0.37155619263648987, 0.37702351808547974, 0.3639856278896332, 0.3602405786514282, 0.35763198137283325, 0.35053330659866333, 0.35397860407829285], "accuracy": [0.2641659080982208, 0.5021793842315674, 0.5983357429504395, 0.654999315738678, 0.6737551093101501, 0.7003037929534912, 0.7147008180618286, 0.717870831489563, 0.7316074371337891, 0.7382115721702576, 0.7421740889549255, 0.7415136694908142, 0.7528728246688843, 0.7622507214546204, 0.7666094303131104, 0.7664773464202881, 0.7746664881706238, 0.7799497842788696, 0.7783648371696472, 0.7877426743507385, 0.7891955971717834, 0.7864218950271606, 0.7946110367774963, 0.7975168228149414, 0.7998943328857422, 0.800818920135498, 0.8082155585289001, 0.8055738806724548, 0.8087438941001892, 0.816008448600769, 0.8140271902084351, 0.8195747137069702, 0.8186501264572144, 0.8165367841720581, 0.8280280232429504, 0.8265751004219055, 0.8327829837799072, 0.830669641494751, 0.8304054737091064, 0.833179235458374, 0.8345000743865967, 0.8391229510307312, 0.837141752243042, 0.8392550349235535, 0.8442742228507996, 0.8459912538528442, 0.842028796672821, 0.845859169960022, 0.8498216867446899, 0.8432175517082214, 0.845859169960022, 0.8536521196365356, 0.8527275323867798, 0.8474441766738892, 0.8545766472816467, 0.854708731174469, 0.8549728989601135, 0.8598600029945374, 0.8551049828529358, 0.8628978729248047, 0.8594637513160706, 0.8625016212463379, 0.8640866279602051, 0.8661999702453613, 0.8595958352088928, 0.8652753829956055, 0.8658037185668945, 0.868049144744873, 0.872407853603363, 0.8708229064941406], "val_loss": [1.9209388494491577, 1.092502474784851, 0.8583113551139832, 0.784230649471283, 0.7508988976478577, 0.6604114770889282, 0.6535546183586121, 0.635483980178833, 0.6334079504013062, 0.6064074635505676, 0.5799415707588196, 0.6057606339454651, 0.5674319863319397, 0.5423656702041626, 0.5529052019119263, 0.587202250957489, 0.526631772518158, 0.5178297758102417, 0.5060689449310303, 0.5161147713661194, 0.4867883622646332, 0.49533170461654663, 0.49728602170944214, 0.4824754297733307, 0.47899430990219116, 0.5026639699935913, 0.47778376936912537, 0.47489798069000244, 0.48028579354286194, 0.45818638801574707, 0.45849958062171936, 0.45066043734550476, 0.47276610136032104, 0.4489310681819916, 0.45030710101127625, 0.4330195188522339, 0.43294182419776917, 0.4335562288761139, 0.4297225773334503, 0.42156243324279785, 0.4183715879917145, 0.42332571744918823, 0.41456741094589233, 0.4158042073249817, 0.4077816605567932, 0.40544629096984863, 0.4193916916847229, 0.4108666181564331, 0.40491554141044617, 0.41275227069854736, 0.398062527179718, 0.39716431498527527, 0.4090079665184021, 0.3949478268623352, 0.4025375247001648, 0.39794865250587463, 0.39017850160598755, 0.38409823179244995, 0.3950972557067871, 0.38070163130760193, 0.38173338770866394, 0.37853309512138367, 0.38276758790016174, 0.3725542426109314, 0.3764800727367401, 0.38934382796287537, 0.37530696392059326, 0.37889575958251953, 0.37691640853881836, 0.4050861895084381], "val_accuracy": [0.4586666524410248, 0.6650000214576721, 0.7103333473205566, 0.7236666679382324, 0.7273333072662354, 0.7620000243186951, 0.7643333077430725, 0.7563333511352539, 0.762333333492279, 0.7760000228881836, 0.7836666703224182, 0.7683333158493042, 0.7916666865348816, 0.7946666479110718, 0.7829999923706055, 0.7609999775886536, 0.8083333373069763, 0.8080000281333923, 0.8159999847412109, 0.8119999766349792, 0.8240000009536743, 0.8153333067893982, 0.8119999766349792, 0.8243333101272583, 0.8223333358764648, 0.8096666932106018, 0.8193333148956299, 0.824999988079071, 0.8133333325386047, 0.8360000252723694, 0.8330000042915344, 0.8363333344459534, 0.8186666369438171, 0.8389999866485596, 0.8360000252723694, 0.840666651725769, 0.8456666469573975, 0.8443333506584167, 0.847000002861023, 0.8476666808128357, 0.8483333587646484, 0.8460000157356262, 0.8493333458900452, 0.8463333249092102, 0.8503333330154419, 0.8556666374206543, 0.8476666808128357, 0.8556666374206543, 0.8539999723434448, 0.8453333377838135, 0.8576666712760925, 0.8550000190734863, 0.8506666421890259, 0.8569999933242798, 0.8583333492279053, 0.8569999933242798, 0.8643333315849304, 0.8646666407585144, 0.8579999804496765, 0.8663333058357239, 0.8640000224113464, 0.8663333058357239, 0.862333357334137, 0.8656666874885559, 0.8693333268165588, 0.8616666793823242, 0.8633333444595337, 0.8619999885559082, 0.8619999885559082, 0.8529999852180481]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 1], [16, 62], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 3], [0, 1, 1, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 13, 7, 6, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(grad))), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, alpha)), beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303719997406006, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 3, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 6, 0, 8, 2], [2, 4, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 7, 1, 1], [4, 1, 3, 2, 2], [0], [1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 4, 3, 1, 0, 9, 4, 5, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.subtract(grad, tf.math.subtract(alpha, sigma)), beta), beta), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [107.70799255371094, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18491612374782562, 0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [231677.96875, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [3, 2, 3, 1, 3, 5, 0], [0, 0, 2, 0, 2, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 2, 5, 5, 4], [2, 2, 0, 4, 0, 3, 0], [42, 1, 33], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 9], [4, 1, 0, 2], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 3, 15, 8, 7, 3, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.math.add(tf.math.square(beta), tf.math.square(tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3088924884796143, 2.311028480529785, 2.3122870922088623, 2.317958116531372, 2.3210604190826416, 2.3298869132995605, 2.341278076171875, 2.362987756729126, 2.411550521850586, 1203.2376708984375], "accuracy": [0.0952318087220192, 0.08691058307886124, 0.09232597798109055, 0.09377889335155487, 0.09206181764602661, 0.09430722147226334, 0.09206181764602661, 0.09311848133802414, 0.09998679161071777, 0.09972262382507324], "val_loss": [2.3095149993896484, 2.311213254928589, 2.313526153564453, 2.3161985874176025, 2.3197813034057617, 2.324883222579956, 2.332838535308838, 2.350344181060791, 2.433781623840332, 7.962315727495043e+21], "val_accuracy": [0.09333333373069763, 0.09466666728258133, 0.09666666388511658, 0.09833333641290665, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 1, 6, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [2, 2, 4, 6, 3, 5, 5, 4], [2, 2, 0, 4, 0, 3, 3], [16, 69], [1, 0, 0, 1, 0, 1, 1, 1], [8, 3, 0, 3], [0, 1, 4, 3], [57], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 12, 6, 6, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3038456439971924, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}]