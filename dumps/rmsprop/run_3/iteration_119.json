[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8488571643829346, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.20965838432312, 1.605275273323059, 1.174899697303772, 0.9858217835426331, 0.8854502439498901, 0.8390660285949707, 0.7964760661125183, 0.7493116855621338, 0.7368370890617371, 0.7423945665359497, 0.6912937164306641, 0.652807354927063, 0.6722995042800903, 0.6303475499153137, 0.638758659362793, 0.6335452795028687, 0.6118106245994568, 0.5839931964874268, 0.6074797511100769, 0.5692148208618164, 0.5713926553726196, 0.5606203079223633, 0.5617382526397705, 0.5447259545326233, 0.5329451560974121, 0.5268599390983582, 0.5340890884399414, 0.513875424861908, 0.5041987299919128, 0.5130024552345276, 0.494832307100296, 0.49036717414855957, 0.4784986972808838, 0.4866924583911896, 0.47488248348236084, 0.47904762625694275, 0.46592438220977783, 0.45425689220428467, 0.45789527893066406, 0.4461337625980377, 0.46881693601608276, 0.44601550698280334, 0.44031885266304016, 0.44752898812294006, 0.4237683117389679, 0.4238412082195282, 0.4305957853794098, 0.42562389373779297, 0.4144071340560913, 0.4031882882118225, 0.4081343710422516, 0.40373241901397705, 0.4025316536426544, 0.39863044023513794, 0.4013623595237732, 0.39603057503700256, 0.3858937621116638, 0.37867599725723267, 0.38853347301483154, 0.3791296184062958, 0.38104328513145447], "accuracy": [0.27380794286727905, 0.49848103523254395, 0.5904107689857483, 0.6441685557365417, 0.6736230254173279, 0.6915863156318665, 0.7107383608818054, 0.7235503792762756, 0.7215691208839417, 0.7257958054542542, 0.744419515132904, 0.7537974119186401, 0.7428345084190369, 0.76106196641922, 0.7605336308479309, 0.7605336308479309, 0.7684586048126221, 0.7832518815994263, 0.7713643908500671, 0.7872143983840942, 0.7841764688491821, 0.7869502305984497, 0.785629391670227, 0.7952714562416077, 0.8018755912780762, 0.8061022162437439, 0.7924976944923401, 0.8094043135643005, 0.8152159452438354, 0.809140145778656, 0.8157442808151245, 0.8182538747787476, 0.8231409192085266, 0.8165367841720581, 0.8222163319587708, 0.8197067975997925, 0.8285563588142395, 0.8327829837799072, 0.8318583965301514, 0.8350284099578857, 0.8256505131721497, 0.8327829837799072, 0.8381983637809753, 0.830669641494751, 0.8444063067436218, 0.8425571322441101, 0.8422929644584656, 0.8389908671379089, 0.846387505531311, 0.848368763923645, 0.8449346423149109, 0.8486329317092896, 0.8486329317092896, 0.852331280708313, 0.8451988101005554, 0.8479725122451782, 0.8595958352088928, 0.8597279191017151, 0.8549728989601135, 0.86118084192276, 0.8515387773513794], "val_loss": [1.9230862855911255, 1.0929569005966187, 0.8973206281661987, 0.804622232913971, 0.7767345309257507, 0.6857672333717346, 0.6721967458724976, 0.6734874844551086, 0.6915271878242493, 0.6241103410720825, 0.6087749600410461, 0.5950765609741211, 0.5749830603599548, 0.5841686725616455, 0.5530827641487122, 0.5793383121490479, 0.5353695750236511, 0.5145910382270813, 0.5285325646400452, 0.5221818685531616, 0.5045897364616394, 0.5228636264801025, 0.5050208568572998, 0.492615282535553, 0.5042333006858826, 0.48819345235824585, 0.47438427805900574, 0.4683537483215332, 0.4591546952724457, 0.4624483585357666, 0.45263615250587463, 0.45954930782318115, 0.460252970457077, 0.47306180000305176, 0.44545361399650574, 0.4519936442375183, 0.4357885718345642, 0.4363263249397278, 0.4398147761821747, 0.4561229944229126, 0.43614399433135986, 0.4212207794189453, 0.43167099356651306, 0.4146358370780945, 0.41952022910118103, 0.42774438858032227, 0.4073605239391327, 0.40770068764686584, 0.41299423575401306, 0.40159663558006287, 0.405976265668869, 0.4202680289745331, 0.40908488631248474, 0.4110962748527527, 0.3965720534324646, 0.38916847109794617, 0.3874070346355438, 0.3962351977825165, 0.4036594331264496, 0.39962854981422424, 0.390293687582016], "val_accuracy": [0.4936666786670685, 0.6496666669845581, 0.6783333420753479, 0.690666675567627, 0.7013333439826965, 0.7403333187103271, 0.7459999918937683, 0.7223333120346069, 0.7160000205039978, 0.7713333368301392, 0.7720000147819519, 0.7730000019073486, 0.7853333353996277, 0.7749999761581421, 0.7973333597183228, 0.7603333592414856, 0.79666668176651, 0.8023333549499512, 0.8036666512489319, 0.8069999814033508, 0.8106666803359985, 0.800000011920929, 0.8059999942779541, 0.8190000057220459, 0.8169999718666077, 0.8166666626930237, 0.8213333487510681, 0.8266666531562805, 0.8306666612625122, 0.8299999833106995, 0.8323333263397217, 0.8296666741371155, 0.8230000138282776, 0.8226666450500488, 0.8336666822433472, 0.8286666870117188, 0.8383333086967468, 0.8386666774749756, 0.8343333601951599, 0.8299999833106995, 0.8413333296775818, 0.8443333506584167, 0.8323333263397217, 0.8473333120346069, 0.8423333168029785, 0.8450000286102295, 0.8506666421890259, 0.8526666760444641, 0.8503333330154419, 0.8546666502952576, 0.847000002861023, 0.8426666855812073, 0.8533333539962769, 0.8500000238418579, 0.8579999804496765, 0.8633333444595337, 0.8613333106040955, 0.8573333621025085, 0.8496666550636292, 0.8519999980926514, 0.8603333234786987]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.831428587436676, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2087080478668213, 1.597160816192627, 1.1506590843200684, 0.9644395709037781, 0.8790178894996643, 0.8027951121330261, 0.7765753865242004, 0.7759348750114441, 0.7014490962028503, 0.6812295317649841, 0.6912849545478821, 0.6612474918365479, 0.6283653378486633, 0.6390210390090942, 0.6201960444450378, 0.6022316217422485, 0.5943052172660828, 0.5889995694160461, 0.5807061791419983, 0.5523847937583923, 0.5418398976325989, 0.5579180121421814, 0.5536848306655884, 0.534429132938385, 0.5186578631401062, 0.5197440981864929, 0.5145976543426514, 0.5120053291320801, 0.5009792447090149, 0.5020807385444641, 0.4910617768764496, 0.48735132813453674, 0.4807419180870056, 0.47514060139656067, 0.4756568372249603], "accuracy": [0.27261921763420105, 0.5152555704116821, 0.6067890524864197, 0.6584334969520569, 0.6857746839523315, 0.7103421092033386, 0.7152291536331177, 0.7177387475967407, 0.7423061728477478, 0.7456082701683044, 0.7423061728477478, 0.7512878179550171, 0.7687227725982666, 0.7584202885627747, 0.7680623531341553, 0.7755910754203796, 0.7840443849563599, 0.7773081660270691, 0.7823272943496704, 0.7952714562416077, 0.7987055778503418, 0.791441023349762, 0.7951393723487854, 0.7992339134216309, 0.8105930685997009, 0.8112534880638123, 0.8158763647079468, 0.8138951063156128, 0.8123101592063904, 0.8121780753135681, 0.8182538747787476, 0.8238013386726379, 0.8204993009567261, 0.8277638554573059, 0.8253863453865051], "val_loss": [1.9211803674697876, 1.0697920322418213, 0.9363133907318115, 0.7786310315132141, 0.7038549780845642, 0.6914030909538269, 0.6892878413200378, 0.6236078143119812, 0.6038634181022644, 0.6052769422531128, 0.5785683393478394, 0.5596480369567871, 0.564979612827301, 0.5557921528816223, 0.5630258917808533, 0.5237224698066711, 0.5167446732521057, 0.5192839503288269, 0.515421450138092, 0.4930700957775116, 0.4891628324985504, 0.48485302925109863, 0.5157562494277954, 0.4678806960582733, 0.4702286422252655, 0.47396549582481384, 0.45053091645240784, 0.4661382734775543, 0.4680902361869812, 0.44646167755126953, 0.45022085309028625, 0.4482254981994629, 0.4458628296852112, 0.4364060163497925, 0.43850722908973694], "val_accuracy": [0.5346666574478149, 0.6729999780654907, 0.637666642665863, 0.7183333039283752, 0.7409999966621399, 0.7426666617393494, 0.7333333492279053, 0.7743333578109741, 0.7766666412353516, 0.7673333287239075, 0.7789999842643738, 0.7983333468437195, 0.7776666879653931, 0.7889999747276306, 0.7749999761581421, 0.8116666674613953, 0.809333324432373, 0.796999990940094, 0.8040000200271606, 0.8186666369438171, 0.8193333148956299, 0.8153333067893982, 0.8043333292007446, 0.8233333230018616, 0.8199999928474426, 0.8236666917800903, 0.8316666483879089, 0.8259999752044678, 0.8193333148956299, 0.8396666646003723, 0.8326666951179504, 0.8309999704360962, 0.8296666741371155, 0.8376666903495789, 0.8366666436195374]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 3, 2], [2, 5, 3, 1, 0], [16, 1], [0, 0, 0, 1, 1, 1], [0, 7, 6], [0, 6, 5], [0], [1], [0], [6], [0]], "fitness": -0.162285715341568, "mapping_values": [1, 1, 0, 1, 1, 5, 3, 2, 0, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.466805934906006, 2.3045239448547363, 2.3034658432006836, 2.3335697650909424, 2.3051788806915283, 2.3039355278015137], "accuracy": [0.19323734939098358, 0.14410249888896942, 0.10394927859306335, 0.1434420794248581, 0.09668471664190292, 0.09853387624025345], "val_loss": [2.226210832595825, 2.30460524559021, 2.2988431453704834, 2.306466579437256, 2.303328514099121, 2.302802801132202], "val_accuracy": [0.16733333468437195, 0.1003333330154419, 0.11633333563804626, 0.0989999994635582, 0.09933333098888397, 0.14166666567325592]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [3, 2, 3, 1, 8, 5], [0, 0, 1, 1, 0], [31, 39, 39], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 8, 8, 2], [2, 0, 3, 3, 0], [16, 1], [0, 0, 1, 1, 1], [4, 7], [0, 6, 6], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 2, 8, 5, 3, 1, 5, 2, 3, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [7.582104083221533e+30, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.2075704300141166e+33, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 0], [0, 39, 39], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0], [0, 8, 1, 6, 3, 8, 2], [5, 0, 3, 1, 0], [16, 1], [0, 1, 1, 1], [0, 7], [6, 6], [85], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 3, 2, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 10], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 0, 6, 3, 8, 9, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [5, 7, 2, 0, 2, 4, 1, 0, 6, 0, 7, 7, 4, 5], [0, 6, 6, 7, 5, 2, 3, 7, 0, 2], [0, 16], [1], [0], [1], [0]], "fitness": -0.08828571438789368, "mapping_values": [1, 11, 6, 5, 3, 12, 8, 4, 2, 24, 14, 10, 2, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.pow(tf.math.subtract(grad, grad), tf.math.negative(grad)), tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.add(grad, tf.math.pow(tf.math.square(beta), sigma)), grad)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), beta)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.309088945388794, 2.3100569248199463, 2.309291362762451, 2.310256242752075, 2.310944080352783, 2.309404134750366], "accuracy": [0.09113723784685135, 0.08796724677085876, 0.09668471664190292, 0.08981640636920929, 0.08849557489156723, 0.09206181764602661], "val_loss": [2.309094190597534, 2.3090898990631104, 2.3090853691101074, 2.309079647064209, 2.3090739250183105, 2.309068441390991], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]