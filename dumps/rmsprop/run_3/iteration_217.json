[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8539999723434448, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2108490467071533, 1.6031280755996704, 1.1586053371429443, 1.0017169713974, 0.9027997255325317, 0.8509687781333923, 0.7821087837219238, 0.7510325312614441, 0.7681663632392883, 0.7239335179328918, 0.7042371034622192, 0.6705950498580933, 0.6701738238334656, 0.6410457491874695, 0.6455509066581726, 0.6122079491615295, 0.6216953992843628, 0.6117597222328186, 0.5990164279937744, 0.5723549127578735, 0.5750733613967896, 0.5654271245002747, 0.5603346228599548, 0.5531269907951355, 0.543151319026947, 0.5325374007225037, 0.523846447467804, 0.515398383140564, 0.5130863785743713, 0.5047292113304138, 0.511211097240448, 0.489170640707016, 0.4864640533924103, 0.4842982292175293, 0.47540971636772156, 0.4720350503921509, 0.46809497475624084, 0.46228352189064026, 0.46422722935676575, 0.4534793794155121, 0.45032545924186707, 0.44704577326774597, 0.43839192390441895, 0.4372914135456085, 0.44019392132759094, 0.4282222390174866, 0.414899617433548, 0.42131656408309937, 0.4295532703399658, 0.4157116115093231, 0.39912712574005127, 0.4099557399749756, 0.4104830026626587, 0.40346992015838623, 0.40090474486351013, 0.38478195667266846, 0.39120081067085266, 0.38766616582870483, 0.3841533958911896, 0.37545040249824524, 0.37709566950798035, 0.37396249175071716, 0.36828750371932983, 0.36231529712677, 0.37067341804504395, 0.36960527300834656, 0.36422786116600037, 0.3631508946418762, 0.3479906916618347, 0.3558589220046997, 0.35364899039268494, 0.34216275811195374, 0.3413783013820648], "accuracy": [0.2658829689025879, 0.5038964748382568, 0.5926561951637268, 0.6362435817718506, 0.6732267737388611, 0.6902654767036438, 0.711530864238739, 0.7235503792762756, 0.7207766771316528, 0.7279091477394104, 0.7391361594200134, 0.7582882046699524, 0.746268630027771, 0.7626469135284424, 0.759609043598175, 0.7754589915275574, 0.7625148296356201, 0.7757231593132019, 0.7700436115264893, 0.7889314293861389, 0.7889314293861389, 0.7868181467056274, 0.7898560166358948, 0.7997622489929199, 0.798309326171875, 0.8030643463134766, 0.8080834746360779, 0.8125742673873901, 0.8132346868515015, 0.8161405324935913, 0.8128384351730347, 0.8238013386726379, 0.8271034359931946, 0.8224804997444153, 0.8290846943855286, 0.8278959393501282, 0.830669641494751, 0.833179235458374, 0.833179235458374, 0.8341038227081299, 0.837537944316864, 0.8366134166717529, 0.8391229510307312, 0.843481719493866, 0.8399154543876648, 0.8416325449943542, 0.8506141901016235, 0.848368763923645, 0.8404437899589539, 0.8453308939933777, 0.8536521196365356, 0.8490291833877563, 0.8507462739944458, 0.8562937378883362, 0.8520671129226685, 0.8610487580299377, 0.8573504090309143, 0.8595958352088928, 0.8590674996376038, 0.8631620407104492, 0.8622375130653381, 0.8631620407104492, 0.8681812286376953, 0.8667283058166504, 0.8626337051391602, 0.8658037185668945, 0.8628978729248047, 0.8687095642089844, 0.8659358024597168, 0.868049144744873, 0.8716153502464294, 0.874389111995697, 0.8757099509239197], "val_loss": [1.9235763549804688, 1.1314831972122192, 0.8731655478477478, 0.807879626750946, 0.7705962061882019, 0.6980771422386169, 0.6661664247512817, 0.697576105594635, 0.66929030418396, 0.5976685285568237, 0.5922770500183105, 0.5830627679824829, 0.6373900771141052, 0.5411273837089539, 0.5578807592391968, 0.5548969507217407, 0.5392282009124756, 0.5990676879882812, 0.5256581902503967, 0.5300251245498657, 0.5082780718803406, 0.5017443299293518, 0.5056119561195374, 0.5075571537017822, 0.4926685094833374, 0.47513166069984436, 0.4797607362270355, 0.4600391089916229, 0.46047335863113403, 0.5116149187088013, 0.4663454294204712, 0.452178955078125, 0.4634062945842743, 0.44287997484207153, 0.4433993399143219, 0.43838903307914734, 0.43588727712631226, 0.4394426941871643, 0.43417826294898987, 0.43312549591064453, 0.4629688262939453, 0.431441068649292, 0.4245022237300873, 0.41809216141700745, 0.4273024797439575, 0.40897610783576965, 0.41044068336486816, 0.45049646496772766, 0.4001186192035675, 0.4124038815498352, 0.4094165861606598, 0.3972887098789215, 0.39708682894706726, 0.39355671405792236, 0.39122965931892395, 0.40282538533210754, 0.3918760120868683, 0.3897528350353241, 0.3919954299926758, 0.39045262336730957, 0.40663614869117737, 0.3902661204338074, 0.37542790174484253, 0.3986421823501587, 0.3837566673755646, 0.3817605674266815, 0.37363508343696594, 0.37688878178596497, 0.37387850880622864, 0.387358158826828, 0.3793269991874695, 0.36945849657058716, 0.38200435042381287], "val_accuracy": [0.5073333382606506, 0.6323333382606506, 0.7126666903495789, 0.70333331823349, 0.7099999785423279, 0.7419999837875366, 0.7593333125114441, 0.7426666617393494, 0.7416666746139526, 0.7753333449363708, 0.7826666831970215, 0.7836666703224182, 0.7506666779518127, 0.8023333549499512, 0.8023333549499512, 0.7903333306312561, 0.7916666865348816, 0.7573333382606506, 0.8106666803359985, 0.8083333373069763, 0.8216666579246521, 0.8140000104904175, 0.8166666626930237, 0.812666654586792, 0.8216666579246521, 0.8276666402816772, 0.8323333263397217, 0.8420000076293945, 0.8433333039283752, 0.8066666722297668, 0.8323333263397217, 0.8443333506584167, 0.8296666741371155, 0.8426666855812073, 0.8416666388511658, 0.8450000286102295, 0.8426666855812073, 0.847000002861023, 0.8496666550636292, 0.8516666889190674, 0.8263333439826965, 0.8443333506584167, 0.8500000238418579, 0.8519999980926514, 0.8479999899864197, 0.8579999804496765, 0.8553333282470703, 0.8206666707992554, 0.8616666793823242, 0.8510000109672546, 0.8573333621025085, 0.8616666793823242, 0.8576666712760925, 0.8633333444595337, 0.8633333444595337, 0.859000027179718, 0.8603333234786987, 0.8636666536331177, 0.8573333621025085, 0.8613333106040955, 0.8479999899864197, 0.8616666793823242, 0.8709999918937683, 0.8606666922569275, 0.8673333525657654, 0.862666666507721, 0.8709999918937683, 0.8726666569709778, 0.8696666955947876, 0.8606666922569275, 0.8693333268165588, 0.871999979019165, 0.8656666874885559]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8185714483261108, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.21155047416687, 1.6214739084243774, 1.147647738456726, 1.0122126340866089, 0.883774995803833, 0.8392086029052734, 0.7934359312057495, 0.7492735385894775, 0.7465789914131165, 0.7031911611557007, 0.704044759273529, 0.6667368412017822, 0.6544811725616455, 0.6646183133125305, 0.6193435788154602, 0.6150227785110474, 0.6016120314598083, 0.5908424258232117, 0.5868414640426636, 0.5674418210983276, 0.5649684071540833, 0.5542424321174622, 0.5595988035202026, 0.5379473567008972, 0.5399155020713806, 0.5257675647735596, 0.5232903957366943, 0.5056034922599792, 0.49205684661865234, 0.5009916424751282, 0.5034584999084473, 0.4910539984703064, 0.4773530662059784, 0.49530282616615295, 0.4684170186519623, 0.466702938079834, 0.464194118976593, 0.4577154219150543, 0.44508495926856995, 0.449351966381073, 0.44144150614738464, 0.44791898131370544, 0.42902088165283203, 0.425590455532074], "accuracy": [0.2627129852771759, 0.4885748326778412, 0.6056002974510193, 0.6366398334503174, 0.6795667409896851, 0.6900013089179993, 0.7071720957756042, 0.7277770638465881, 0.7273808121681213, 0.7417778372764587, 0.737947404384613, 0.7503632307052612, 0.757099449634552, 0.7537974119186401, 0.7713643908500671, 0.7675340175628662, 0.776251494884491, 0.7817989587783813, 0.7766477465629578, 0.7923656105995178, 0.789988100528717, 0.7946110367774963, 0.7915731072425842, 0.7997622489929199, 0.7992339134216309, 0.8010830879211426, 0.805177628993988, 0.8095363974571228, 0.8170651197433472, 0.8164047002792358, 0.8127063512802124, 0.8183859586715698, 0.8253863453865051, 0.8165367841720581, 0.8273676037788391, 0.8290846943855286, 0.8280280232429504, 0.8276317715644836, 0.837537944316864, 0.8360850811004639, 0.8388587832450867, 0.8329150676727295, 0.841500461101532, 0.843481719493866], "val_loss": [1.9266793727874756, 1.1611628532409668, 0.8532493710517883, 0.7870162725448608, 0.7246782183647156, 0.6821198463439941, 0.6863829493522644, 0.6201761364936829, 0.6099076271057129, 0.6340183019638062, 0.6055203676223755, 0.5709919333457947, 0.5792520642280579, 0.5583544969558716, 0.5567402839660645, 0.5706408023834229, 0.5229929089546204, 0.5266326069831848, 0.5125539302825928, 0.5229039192199707, 0.5199199914932251, 0.5042288303375244, 0.4893248975276947, 0.49155256152153015, 0.48106709122657776, 0.4869018495082855, 0.47582119703292847, 0.4636303782463074, 0.47317251563072205, 0.46419405937194824, 0.5016038417816162, 0.4576735496520996, 0.4695682227611542, 0.4581984579563141, 0.4469851851463318, 0.4390741288661957, 0.4321005046367645, 0.43086719512939453, 0.4342212677001953, 0.4293065667152405, 0.4509298503398895, 0.4352152943611145, 0.4211333394050598, 0.42989078164100647], "val_accuracy": [0.5406666398048401, 0.6396666765213013, 0.7066666483879089, 0.7043333053588867, 0.7113333344459534, 0.7273333072662354, 0.7456666827201843, 0.7606666684150696, 0.7673333287239075, 0.7553333044052124, 0.765333354473114, 0.7873333096504211, 0.7860000133514404, 0.7889999747276306, 0.7879999876022339, 0.7786666750907898, 0.8026666641235352, 0.7990000247955322, 0.8116666674613953, 0.8026666641235352, 0.7990000247955322, 0.8013333082199097, 0.8143333196640015, 0.8076666593551636, 0.8223333358764648, 0.8203333616256714, 0.8159999847412109, 0.8176666498184204, 0.8116666674613953, 0.8276666402816772, 0.8143333196640015, 0.8236666917800903, 0.8173333406448364, 0.8223333358764648, 0.828000009059906, 0.8330000042915344, 0.8326666951179504, 0.8376666903495789, 0.8420000076293945, 0.8353333473205566, 0.8230000138282776, 0.8306666612625122, 0.8376666903495789, 0.8320000171661377]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [0, 2, 3, 1, 3, 5], [0, 0, 2, 2, 2], [0, 39, 39], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 2, 0, 6, 3, 4, 6], [2, 0, 3, 1, 0], [17, 1], [0, 0, 1, 1], [0, 9], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.15942856669425964, "mapping_values": [1, 10, 5, 5, 2, 8, 4, 4, 1, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.negative(beta), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [564118.125, 18820139008.0, 8420776214528.0, 291472083517440.0, 7976790429532160.0, 4.997153217209958e+16, 1.390348602399785e+17, 3.082765347103703e+17, 3.237012589805096e+19, 4.777985656792694e+20, 1.3526961175274214e+21, 2.7701717306199633e+21, 4.631770665390577e+21], "accuracy": [0.0948355570435524, 0.09919429570436478, 0.10130762308835983, 0.10051512718200684, 0.11002509295940399, 0.10487385839223862, 0.10315678268671036, 0.1006472036242485, 0.10791176557540894, 0.11411966383457184, 0.11359133571386337, 0.11293092370033264, 0.11253467202186584], "val_loss": [22259132.0, 101139300352.0, 56344530911232.0, 669773373374464.0, 2.4460392801501184e+16, 8.271711016111309e+16, 1.988123181449216e+17, 4.075894758126387e+17, 2.067930683195523e+20, 9.305616913987304e+20, 2.1129569333981594e+21, 3.8930984172835926e+21, 6.427132064216709e+21], "val_accuracy": [0.10000000149011612, 0.10999999940395355, 0.04866666719317436, 0.09866666793823242, 0.08633333444595337, 0.0820000022649765, 0.12800000607967377, 0.1616666615009308, 0.09966666996479034, 0.09933333098888397, 0.09966666996479034, 0.09833333641290665, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 4, 5], [0, 0, 2, 0, 2], [81, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 9, 0, 6, 3, 8, 2], [2, 2, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [5], [0]], "fitness": -0.10914285480976105, "mapping_values": [1, 4, 2, 2, 2, 2, 2, 0, 1, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.9628496170043945, 2.3183350563049316, 2.303457736968994, 2.302966356277466, 2.3006865978240967, 2.3103244304656982, 2.304619312286377, 2.3036556243896484, 2.302568197250366], "accuracy": [0.21318188309669495, 0.09166556596755981, 0.09959053993225098, 0.09972262382507324, 0.10910051316022873, 0.1484612375497818, 0.09866596013307571, 0.0952318087220192, 0.10830801725387573], "val_loss": [2.360413074493408, 2.3033769130706787, 2.3025455474853516, 2.301908254623413, 2.2820186614990234, 2.3062751293182373, 2.3037760257720947, 2.302973747253418, 2.302464246749878], "val_accuracy": [0.10066666454076767, 0.10133333504199982, 0.09966666996479034, 0.12033333629369736, 0.10400000214576721, 0.10400000214576721, 0.1003333330154419, 0.1003333330154419, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [5, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 0, 5, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 1, 1, 1], [0, 7], [0, 6], [82], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 2, 3, 6, 2, 2, 2, 2, 1, 7, 0, 4, 8, 9, 9, 9, 6, 3, 7, 7, 2, 7, 8, 1, 3, 6, 4, 3, 8, 0, 2, 0, 1, 4, 0, 1, 4, 2, 4, 7, 7, 1, 4, 5, 4, 8, 3, 8, 2, 0, 2, 5, 0, 8, 0, 6, 7, 6, 8, 2, 5, 3, 1, 6, 2, 9, 3, 7, 9, 0, 9], [2, 1, 0, 2, 6, 2, 1, 5, 7, 0, 5, 7, 7, 6, 4, 3, 7, 1, 6, 5, 3, 3, 4, 3, 1, 3, 0, 5, 4, 7, 7, 4, 3, 1, 2, 2, 2, 1, 1, 2, 4], [0, 25, 74, 36, 54, 64, 58, 30, 71]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 8, 5, 3, 1, 2, 1, 1, 1, 112, 71, 41, 9], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(tf.math.subtract(alpha, tf.math.add(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(beta, grad)), beta)), tf.math.multiply(tf.math.add(alpha, grad), grad)), tf.math.add(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(grad, tf.math.sqrt(tf.math.negative(grad))), grad)), tf.math.add(tf.math.negative(grad), grad)), tf.math.subtract(tf.math.pow(sigma, tf.math.negative(tf.math.subtract(grad, tf.math.pow(tf.math.add(tf.math.pow(alpha, grad), tf.math.add(tf.math.add(grad, sigma), sigma)), grad)))), tf.math.subtract(sigma, alpha)))), tf.math.pow(tf.math.square(tf.math.pow(tf.math.sqrt(tf.math.multiply(tf.math.sqrt(sigma), tf.math.add(tf.math.negative(tf.math.add(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), grad)), grad))), tf.math.square(grad))), tf.math.negative(tf.math.sqrt(tf.math.negative(tf.math.divide_no_nan(grad, grad)))))), sigma), tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.subtract(beta, tf.math.divide_no_nan(tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), beta), beta)), alpha)), alpha)))), beta), grad))), tf.math.negative(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 5, 3, 5, 3, 5], [0, 0, 3, 3, 3], [0, 39, 51], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 7, 0, 6, 3, 8, 0], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [0, 0, 0, 1, 1], [0, 3, 0], [2, 6], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 6, 4, 2, 2, 9, 5, 4, 1, 4, 2, 2, 1, 5, 3, 2, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), grad))", "other_info": {"loss": [2.308783769607544, 2.310431480407715, 2.3089144229888916, 2.3100380897521973, 2.310201644897461, 2.3095667362213135], "accuracy": [0.09589222073554993, 0.09047681838274002, 0.09470347315073013, 0.09496764093637466, 0.09298639744520187, 0.09642054885625839], "val_loss": [2.3089234828948975, 2.3089234828948975, 2.3089234828948975, 2.3089234828948975, 2.3089234828948975, 2.3089234828948975], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]