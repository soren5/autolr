[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8837142586708069, "mapping_values": [1, 10, 5, 5, 3, 12, 8, 4, 2, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1052942276000977, 1.196382761001587, 0.8314899802207947, 0.7147043943405151, 0.6302909255027771, 0.5692504644393921, 0.5221520066261292, 0.5032613277435303, 0.4807533919811249, 0.4511759579181671, 0.43527787923812866, 0.4096868932247162, 0.397103488445282, 0.3862413465976715, 0.36111611127853394, 0.350818932056427, 0.3486778438091278, 0.3429076075553894, 0.3232230544090271, 0.3090643882751465, 0.31197598576545715, 0.3050714433193207, 0.2870331108570099, 0.282348096370697, 0.27071237564086914, 0.26655495166778564, 0.2668570280075073, 0.2539179027080536, 0.24523289501667023], "accuracy": [0.29837536811828613, 0.5847312211990356, 0.6859067678451538, 0.7273808121681213, 0.7601373791694641, 0.7794214487075806, 0.802271842956543, 0.8067626357078552, 0.8183859586715698, 0.8289526104927063, 0.8388587832450867, 0.8451988101005554, 0.8518029451370239, 0.8578787446022034, 0.8622375130653381, 0.8739928603172302, 0.8697662353515625, 0.8708229064941406, 0.878879964351654, 0.8845595121383667, 0.8802007436752319, 0.8837670087814331, 0.8868049383163452, 0.8952582478523254, 0.9034473896026611, 0.9014661312103271, 0.89552241563797, 0.9021265506744385, 0.9030511379241943], "val_loss": [1.0808992385864258, 0.7787856459617615, 0.688173234462738, 0.6003098487854004, 0.5536212921142578, 0.5124399662017822, 0.49683383107185364, 0.47856128215789795, 0.46877041459083557, 0.4444534480571747, 0.4302023649215698, 0.4150267243385315, 0.4014204144477844, 0.4067032039165497, 0.3947374224662781, 0.4073643088340759, 0.40519216656684875, 0.398570716381073, 0.3763197362422943, 0.3740674555301666, 0.38644686341285706, 0.38683950901031494, 0.3821990489959717, 0.3752228915691376, 0.38204818964004517, 0.3790208399295807, 0.3727281093597412, 0.3777836859226227, 0.3915119767189026], "val_accuracy": [0.6286666393280029, 0.7043333053588867, 0.7336666584014893, 0.7683333158493042, 0.7806666493415833, 0.8009999990463257, 0.8103333115577698, 0.8186666369438171, 0.8256666660308838, 0.8446666598320007, 0.8533333539962769, 0.8516666889190674, 0.8616666793823242, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8610000014305115, 0.8579999804496765, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8709999918937683, 0.8726666569709778, 0.8776666522026062, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8773333430290222, 0.8696666955947876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 39], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 2, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 1, 0, 1, 0, 1, 1, 0], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.8568571209907532, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.107992649078369, 1.1277472972869873, 0.7702999114990234, 0.665998101234436, 0.6079410314559937, 0.5564087629318237, 0.5175092220306396, 0.4768443703651428, 0.46426576375961304, 0.43519145250320435, 0.4183523952960968, 0.404278427362442, 0.39057496190071106, 0.37277549505233765, 0.355010986328125, 0.34516480565071106, 0.33461737632751465, 0.32177743315696716, 0.3146391808986664, 0.2992626130580902, 0.2904168963432312, 0.28402388095855713, 0.26136621832847595, 0.2587035000324249, 0.2639108896255493, 0.2620479166507721, 0.24745792150497437, 0.24128825962543488, 0.22636958956718445, 0.2266571819782257, 0.215333491563797, 0.2142311930656433, 0.2125692218542099, 0.20084930956363678, 0.1950904279947281, 0.18583790957927704, 0.18647831678390503, 0.172463521361351, 0.17878924310207367], "accuracy": [0.2933562397956848, 0.6071853041648865, 0.7144366502761841, 0.7415136694908142, 0.7718927264213562, 0.7865539789199829, 0.8076872229576111, 0.821820080280304, 0.8249900937080383, 0.8397833704948425, 0.8438779711723328, 0.8496896028518677, 0.856689989566803, 0.8632941246032715, 0.870030403137207, 0.8689737319946289, 0.8778232932090759, 0.8805969953536987, 0.8853520154953003, 0.8910315632820129, 0.8874653577804565, 0.8893144726753235, 0.9001452922821045, 0.8993527889251709, 0.9002773761749268, 0.9015982151031494, 0.9055606722831726, 0.9103156924247742, 0.9166556596755981, 0.913089394569397, 0.9158631563186646, 0.917580246925354, 0.919561505317688, 0.9252410531044006, 0.926429808139801, 0.9277506470680237, 0.9303922653198242, 0.934751033782959, 0.9331660270690918], "val_loss": [1.135553240776062, 0.7087502479553223, 0.6343991160392761, 0.5469454526901245, 0.5164881348609924, 0.4959152042865753, 0.45432141423225403, 0.4448738098144531, 0.4259830713272095, 0.41504842042922974, 0.39968976378440857, 0.3983711898326874, 0.3800926208496094, 0.3707248568534851, 0.37978264689445496, 0.3771643042564392, 0.3724845051765442, 0.35263577103614807, 0.3485182821750641, 0.35501253604888916, 0.3583774268627167, 0.34969353675842285, 0.3569420576095581, 0.34314775466918945, 0.3445549011230469, 0.36042264103889465, 0.3642720878124237, 0.3435676395893097, 0.36158430576324463, 0.3459608256816864, 0.3507842719554901, 0.34939339756965637, 0.3587780296802521, 0.3628597855567932, 0.3494807183742523, 0.35204029083251953, 0.3711971044540405, 0.3531475365161896, 0.3553524613380432], "val_accuracy": [0.5606666803359985, 0.7113333344459534, 0.7639999985694885, 0.7826666831970215, 0.8003333210945129, 0.8116666674613953, 0.828000009059906, 0.8383333086967468, 0.8370000123977661, 0.8450000286102295, 0.856333315372467, 0.8600000143051147, 0.8633333444595337, 0.8683333396911621, 0.859000027179718, 0.8663333058357239, 0.8650000095367432, 0.8690000176429749, 0.8700000047683716, 0.871666669845581, 0.871999979019165, 0.878000020980835, 0.8743333220481873, 0.8786666393280029, 0.878333330154419, 0.8703333139419556, 0.8756666779518127, 0.8809999823570251, 0.8776666522026062, 0.8853333592414856, 0.8809999823570251, 0.8809999823570251, 0.8813333511352539, 0.8859999775886536, 0.8840000033378601, 0.8803333044052124, 0.8830000162124634, 0.8846666812896729, 0.8840000033378601]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 6, 3, 8, 2], [2, 0, 3, 1, 0], [16, 1], [0, 0, 1, 1], [0, 7], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8197143077850342, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.208962917327881, 1.5993238687515259, 1.1416041851043701, 0.9615116119384766, 0.8606745004653931, 0.8325145840644836, 0.7750360369682312, 0.7518483400344849, 0.707695722579956, 0.7169772386550903, 0.6713868975639343, 0.660860538482666, 0.6411136388778687, 0.6216370463371277, 0.6053613424301147, 0.6215083003044128, 0.5816851258277893, 0.5629149675369263, 0.5680940747261047, 0.5462835431098938, 0.5443372130393982, 0.5269550681114197, 0.5374590754508972, 0.5196970701217651, 0.501207709312439, 0.5198728442192078, 0.5041781663894653, 0.49907568097114563, 0.4930192828178406, 0.47906506061553955, 0.4811326861381531, 0.46590861678123474, 0.46136265993118286, 0.4484388828277588, 0.4625976085662842, 0.45240938663482666, 0.4490174353122711, 0.4440278112888336, 0.44313326478004456, 0.42853844165802, 0.4192189574241638, 0.42382296919822693, 0.43033066391944885, 0.4155784845352173, 0.4098215699195862, 0.4011853039264679], "accuracy": [0.2693171203136444, 0.5097081065177917, 0.599128246307373, 0.6571126580238342, 0.6886804699897766, 0.696209192276001, 0.7161537408828735, 0.7199841737747192, 0.7364945411682129, 0.7283053994178772, 0.7508915662765503, 0.750759482383728, 0.7588165402412415, 0.7681944370269775, 0.7775723338127136, 0.7627789974212646, 0.7781006693840027, 0.7891955971717834, 0.7845727205276489, 0.7954035401344299, 0.7917051911354065, 0.7994980812072754, 0.796328067779541, 0.8020076751708984, 0.8168009519577026, 0.800818920135498, 0.8096684813499451, 0.8146876096725464, 0.8112534880638123, 0.822348415851593, 0.8202351331710815, 0.828292191028595, 0.8310658931732178, 0.8339717388153076, 0.8274996876716614, 0.82683926820755, 0.8358209133148193, 0.8343679904937744, 0.8368775844573975, 0.839519202709198, 0.844010055065155, 0.8412362933158875, 0.841500461101532, 0.8485008478164673, 0.8491612672805786, 0.8486329317092896], "val_loss": [1.9250420331954956, 1.1643192768096924, 0.9412367343902588, 0.832271158695221, 0.7277070879936218, 0.7345592379570007, 0.6983518600463867, 0.6690148115158081, 0.6642346978187561, 0.6358892917633057, 0.596987247467041, 0.6251433491706848, 0.598961591720581, 0.5733882784843445, 0.592627227306366, 0.5586548447608948, 0.5547043681144714, 0.5640662312507629, 0.5294766426086426, 0.5269161462783813, 0.5107719898223877, 0.5411030054092407, 0.5090240836143494, 0.4946363866329193, 0.5425856709480286, 0.497548371553421, 0.4843471944332123, 0.4938623011112213, 0.47316205501556396, 0.48739421367645264, 0.47601810097694397, 0.48396825790405273, 0.45801931619644165, 0.45691630244255066, 0.45910659432411194, 0.45357251167297363, 0.4587622880935669, 0.4579237401485443, 0.445639044046402, 0.441753089427948, 0.43278568983078003, 0.44885897636413574, 0.4297013282775879, 0.4316284954547882, 0.4331546723842621, 0.4317783713340759], "val_accuracy": [0.574999988079071, 0.5836666822433472, 0.6743333339691162, 0.6909999847412109, 0.7353333234786987, 0.7113333344459534, 0.7203333377838135, 0.7463333606719971, 0.7436666488647461, 0.762666642665863, 0.778333306312561, 0.7666666507720947, 0.7786666750907898, 0.7879999876022339, 0.768666684627533, 0.7910000085830688, 0.7976666688919067, 0.7803333401679993, 0.8066666722297668, 0.7950000166893005, 0.8149999976158142, 0.8043333292007446, 0.8149999976158142, 0.8259999752044678, 0.7776666879653931, 0.8159999847412109, 0.8286666870117188, 0.8166666626930237, 0.831333339214325, 0.8169999718666077, 0.8273333311080933, 0.8253333568572998, 0.8383333086967468, 0.8383333086967468, 0.8343333601951599, 0.8389999866485596, 0.8303333520889282, 0.8413333296775818, 0.8403333425521851, 0.8420000076293945, 0.8500000238418579, 0.8343333601951599, 0.8493333458900452, 0.8473333120346069, 0.8410000205039978, 0.847000002861023]}, "mapping_values": [1, 11, 6, 5, 3, 12, 7, 5, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [31, 39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [2, 9, 4, 7, 0, 5, 5, 4], [1, 2, 0, 4, 0, 3, 1], [16, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 3, 0, 2, 3, 1, 9], [0, 1, 0, 4, 5], [0, 68, 26], [0, 0, 0, 0, 1, 1, 1], [0, 6, 0, 4], [1, 6, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 9, 6, 3, 2, 12, 7, 5, 3, 7, 4, 3, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.pow(alpha, grad)), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [26, 39, 11], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [2, 9, 4, 7, 0, 5, 5, 4, 2, 1, 6, 1, 6, 2, 5, 1, 2, 3, 4, 1, 7, 0, 7, 7, 4, 9, 1, 3, 4, 2, 6, 9, 0, 8], [1, 2, 0, 4, 0, 3, 1, 2, 3, 5, 2, 5, 2, 0, 1, 0, 2, 5, 5, 2, 5, 4], [16, 14, 96, 51, 75, 51, 71], [0, 0, 0, 1, 0, 1, 1, 1], [6, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 56, 34, 22, 7, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 39, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.square(tf.math.pow(tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.add(tf.math.square(tf.math.subtract(alpha, beta)), tf.math.add(tf.math.multiply(tf.math.pow(tf.math.subtract(tf.math.add(grad, tf.math.negative(tf.math.add(grad, tf.math.add(beta, grad)))), tf.math.pow(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), beta), grad)))), tf.math.pow(grad, tf.math.add(tf.math.divide_no_nan(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta)), tf.math.sqrt(grad)))), grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3036398887634277, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 0, 1, 3, 5], [0, 0, 1, 3, 2], [26, 3, 39], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [2, 9, 4, 7, 6, 5, 5, 4, 8, 0], [1, 2, 0, 4, 0, 3, 1], [29, 28, 96], [0, 1, 0, 1, 0, 1, 1, 1], [7, 3, 0, 2], [0, 1, 1, 4], [0], [1], [0], [5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 15, 10, 5, 3, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.square(beta), tf.math.square(tf.math.pow(tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), grad))), tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [7.502787113189697, 2.309248208999634, 2.3038907051086426, 2.3031017780303955, 2.3030619621276855, 2.3029062747955322], "accuracy": [0.1776515692472458, 0.10011887550354004, 0.09391097724437714, 0.09509972482919693, 0.09457138925790787, 0.09708096832036972], "val_loss": [2.3215157985687256, 2.303403377532959, 2.3026602268218994, 2.302626609802246, 2.3025712966918945, 2.3025784492492676], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.09666666388511658, 0.09933333098888397, 0.10400000214576721, 0.09933333098888397]}}]