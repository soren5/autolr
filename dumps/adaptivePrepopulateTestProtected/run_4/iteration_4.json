[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.836571455001831, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.58047616481781, 0.8722211122512817, 0.7037032246589661, 0.6251752376556396, 0.5938280820846558, 0.564725399017334, 0.5278398394584656, 0.5264303088188171, 0.5128515362739563, 0.4913792014122009, 0.47775986790657043, 0.46960943937301636, 0.4721643030643463, 0.46701738238334656, 0.468872606754303, 0.44758370518684387, 0.45458388328552246, 0.5069631338119507, 0.48838648200035095, 0.4734468460083008, 0.4746835231781006], "accuracy": [0.4675736427307129, 0.698190450668335, 0.7424382567405701, 0.7728173136711121, 0.7884030938148499, 0.7932901978492737, 0.8035926818847656, 0.8119139075279236, 0.8131026029586792, 0.8252542614936829, 0.833179235458374, 0.8355567455291748, 0.8294808864593506, 0.829216718673706, 0.8362171649932861, 0.8446704745292664, 0.8363492488861084, 0.8383304476737976, 0.8391229510307312, 0.8412362933158875, 0.8507462739944458], "val_loss": [0.8511109948158264, 0.6103041172027588, 0.5591062903404236, 0.48734375834465027, 0.4640626311302185, 0.4751512110233307, 0.47033369541168213, 0.4676966965198517, 0.4910816550254822, 0.4822935461997986, 0.4485926032066345, 0.4681814908981323, 0.4890018403530121, 0.5261001586914062, 0.557487964630127, 0.508946418762207, 0.5947098135948181, 0.5842240452766418, 0.5366092920303345, 0.5847618579864502, 0.5774675011634827], "val_accuracy": [0.7136666774749756, 0.7846666574478149, 0.7839999794960022, 0.8240000009536743, 0.8416666388511658, 0.8443333506584167, 0.8393333554267883, 0.8346666693687439, 0.8176666498184204, 0.8493333458900452, 0.8443333506584167, 0.8506666421890259, 0.8420000076293945, 0.8413333296775818, 0.8403333425521851, 0.8553333282470703, 0.8360000252723694, 0.843666672706604, 0.846666693687439, 0.8446666598320007, 0.8446666598320007]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8291428685188293, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5376824140548706, 0.7695415616035461, 0.6249895095825195, 0.5778120160102844, 0.5343685746192932, 0.49007049202919006, 0.46664896607398987, 0.46181634068489075, 0.4466417729854584, 0.4960636496543884, 0.5012757778167725, 0.4747978150844574, 0.4440665543079376, 0.43437403440475464, 0.44957801699638367, 0.4529559016227722, 0.4308035969734192, 0.4365461766719818, 0.4700974225997925, 0.49678486585617065, 0.5085220336914062], "accuracy": [0.4600449204444885, 0.7264562249183655, 0.7668735980987549, 0.7872143983840942, 0.804649293422699, 0.8247259259223938, 0.8329150676727295, 0.8286884427070618, 0.8374059200286865, 0.8308017253875732, 0.8354246616363525, 0.8362171649932861, 0.8416325449943542, 0.8532558679580688, 0.8400475382804871, 0.844010055065155, 0.8496896028518677, 0.8551049828529358, 0.8450667262077332, 0.8234050869941711, 0.8341038227081299], "val_loss": [0.8591500520706177, 0.6148874163627625, 0.5519945025444031, 0.5055662989616394, 0.5142753720283508, 0.486314058303833, 0.47386717796325684, 0.5007665157318115, 0.5512425303459167, 0.6441653370857239, 0.5642386078834534, 0.49763792753219604, 0.6144281625747681, 0.573020339012146, 0.5703274011611938, 0.5042176842689514, 0.6068657040596008, 0.6198159456253052, 0.5118188261985779, 0.6270776987075806, 0.6817147731781006], "val_accuracy": [0.6840000152587891, 0.7649999856948853, 0.8029999732971191, 0.8199999928474426, 0.8196666836738586, 0.8353333473205566, 0.824999988079071, 0.8296666741371155, 0.8090000152587891, 0.8199999928474426, 0.8429999947547913, 0.8246666789054871, 0.8339999914169312, 0.8323333263397217, 0.8410000205039978, 0.843999981880188, 0.8326666951179504, 0.8366666436195374, 0.8306666612625122, 0.8209999799728394, 0.8353333473205566]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 6, 2], [0, 0, 1, 0, 2, 3, 3], [0, 39, 39], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 2, 7, 1, 4, 3, 6, 2, 7, 6, 0, 4, 8, 9, 0, 9], [0, 0, 2, 0, 3, 1, 0, 2, 2], [0, 60, 16, 0, 33, 6], [0, 0], [0, 9], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 3, 25, 16, 9, 6, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(grad, tf.math.divide_no_nan(tf.math.negative(alpha), tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), beta)))), tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 9], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [5, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 3], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.6314845085144043, 22.89366912841797, 212.48155212402344, 1230.435302734375, 5186.36572265625, 16854.23046875], "accuracy": [0.09893012791872025, 0.09708096832036972, 0.1006472036242485, 0.10249637067317963, 0.10302469879388809, 0.10249637067317963], "val_loss": [4.547253131866455, 59.33982467651367, 431.32501220703125, 2132.235595703125, 7750.09423828125, 22567.328125], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 4, 1, 1, 5, 3, 3, 4, 2, 7, 8, 5, 2, 9], [0, 0, 2, 1, 3, 1, 4, 4, 4, 5, 3, 3, 0, 1, 0], [0, 27, 16, 0, 72], [0, 1], [0], [1], [0], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 6, 3, 3, 2, 36, 21, 15, 5, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(alpha), tf.math.add(tf.math.pow(grad, alpha), tf.math.subtract(tf.math.subtract(tf.math.square(tf.math.multiply(grad, grad)), tf.math.multiply(tf.math.pow(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.square(grad)), grad), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), grad), tf.constant(0.0, shape=shape, dtype=tf.float32))), alpha))), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310535430908203, 2.309641122817993, 2.3108978271484375, 2.311110019683838, 2.311981678009033, 2.309886932373047], "accuracy": [0.08730682730674744, 0.09140139818191528, 0.08757099509239197, 0.09179764986038208, 0.09047681838274002, 0.09087307006120682], "val_loss": [2.3085930347442627, 2.3085930347442627, 2.3085930347442627, 2.3085930347442627, 2.3085930347442627, 2.3085930347442627], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [55, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.06857142597436905, "mapping_values": [1, 2, 1, 1, 1, 10, 5, 5, 3, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.1250680790515712e+16, 3.807797745549312e+17, 2.425596867908731e+18, 8.012358934906012e+18, 1.8463502829940113e+19, 3.6009843637524365e+19], "accuracy": [0.07872143387794495, 0.08294808864593506, 0.07211729139089584, 0.07660810649394989, 0.08030643314123154, 0.0758156105875969], "val_loss": [6.945475366223872e+16, 9.420887068717875e+17, 4.05220227541264e+18, 1.0906346106979877e+19, 2.2729482601385427e+19, 4.0328190948777394e+19], "val_accuracy": [0.06733333319425583, 0.06666667014360428, 0.06666667014360428, 0.06666667014360428, 0.06666667014360428, 0.06666667014360428]}}]