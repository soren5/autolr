[{"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 6, 3, 2, 2], [0, 0, 4, 0, 4, 1, 0], [0, 27, 4, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8568571209907532, "mapping_values": [1, 2, 1, 1, 1, 6, 3, 3, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.293497323989868, 2.1909191608428955, 1.7614110708236694, 1.352294683456421, 1.076350212097168, 0.9303512573242188, 0.8361263871192932, 0.8040401935577393, 0.7364376783370972, 0.722897469997406, 0.7015634775161743, 0.6764585375785828, 0.6430435180664062, 0.6172506213188171, 0.632552444934845, 0.592246949672699, 0.5798260569572449, 0.5730225443840027, 0.5787692070007324, 0.5487909913063049, 0.5277960300445557, 0.5330758094787598, 0.5249527096748352, 0.5072514414787292, 0.5103291869163513, 0.5039201378822327, 0.47798341512680054, 0.4804016053676605, 0.46868348121643066, 0.46045979857444763, 0.45584753155708313, 0.45187899470329285, 0.4387427270412445, 0.43592414259910583, 0.4359050691127777, 0.44295942783355713, 0.42035913467407227, 0.425121545791626, 0.424172967672348, 0.42290186882019043, 0.4141733646392822, 0.4146521985530853, 0.3946372866630554, 0.4068047106266022, 0.39584776759147644, 0.38794729113578796], "accuracy": [0.12812046706676483, 0.33166027069091797, 0.4523840844631195, 0.5558050274848938, 0.6373002529144287, 0.6631884574890137, 0.691850483417511, 0.7102100253105164, 0.7199841737747192, 0.7323999404907227, 0.7329282760620117, 0.746268630027771, 0.7564390301704407, 0.7622507214546204, 0.761590301990509, 0.7796856164932251, 0.7792893648147583, 0.7885351777076721, 0.7820631265640259, 0.7847048044204712, 0.7924976944923401, 0.8000264167785645, 0.8058380484580994, 0.8096684813499451, 0.8095363974571228, 0.8092722296714783, 0.8187822103500366, 0.8127063512802124, 0.8183859586715698, 0.8239334225654602, 0.8251221776008606, 0.8238013386726379, 0.8308017253875732, 0.824329674243927, 0.8308017253875732, 0.8318583965301514, 0.8430854678153992, 0.8407079577445984, 0.8383304476737976, 0.8383304476737976, 0.8389908671379089, 0.8372738361358643, 0.8496896028518677, 0.8441421389579773, 0.8418967127799988, 0.8519350290298462], "val_loss": [2.247987747192383, 2.023869514465332, 1.1486033201217651, 0.9063482284545898, 0.7846633195877075, 0.7262263298034668, 0.6759552955627441, 0.6550402641296387, 0.6491893529891968, 0.6181222200393677, 0.5900389552116394, 0.5708051919937134, 0.551702082157135, 0.551388680934906, 0.5443003177642822, 0.5335782766342163, 0.5181992650032043, 0.515974760055542, 0.5084540247917175, 0.5135042667388916, 0.49983373284339905, 0.4933469295501709, 0.5057681202888489, 0.48058968782424927, 0.48849478363990784, 0.4750315845012665, 0.4772050082683563, 0.4743330776691437, 0.4734625518321991, 0.4736640751361847, 0.45294880867004395, 0.4623931050300598, 0.45783731341362, 0.4533054232597351, 0.4720523953437805, 0.4527938961982727, 0.4444355368614197, 0.4409964084625244, 0.443004846572876, 0.4936482310295105, 0.4404001533985138, 0.4277486205101013, 0.4542306363582611, 0.4261491596698761, 0.4431222379207611, 0.4442528188228607], "val_accuracy": [0.4073333442211151, 0.4833333194255829, 0.6446666717529297, 0.6859999895095825, 0.7003333568572998, 0.7283333539962769, 0.7436666488647461, 0.7493333220481873, 0.7459999918937683, 0.7613333463668823, 0.7670000195503235, 0.7833333611488342, 0.7900000214576721, 0.7879999876022339, 0.7856666445732117, 0.7946666479110718, 0.79666668176651, 0.7979999780654907, 0.7996666431427002, 0.8080000281333923, 0.800000011920929, 0.8163333535194397, 0.8096666932106018, 0.8190000057220459, 0.8169999718666077, 0.8176666498184204, 0.8223333358764648, 0.8213333487510681, 0.8289999961853027, 0.8273333311080933, 0.8330000042915344, 0.8266666531562805, 0.8336666822433472, 0.8370000123977661, 0.8356666564941406, 0.8370000123977661, 0.8396666646003723, 0.8433333039283752, 0.8383333086967468, 0.8360000252723694, 0.8506666421890259, 0.8500000238418579, 0.8426666855812073, 0.8433333039283752, 0.8456666469573975, 0.8476666808128357]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [4, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 6, 3, 2, 2], [0, 0, 4, 0, 4, 1, 0], [0, 27, 4, 0], [0, 1], [5], [0], [0], [1], [0], [2], [0]], "fitness": -0.8420000076293945, "mapping_values": [1, 3, 1, 2, 2, 6, 3, 3, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2927887439727783, 2.1890697479248047, 1.7651878595352173, 1.3586952686309814, 1.085169792175293, 0.9236440658569336, 0.8251404166221619, 0.821121096611023, 0.7942913770675659, 0.7594802379608154, 0.7221315503120422, 0.6983787417411804, 0.6535889506340027, 0.639970600605011, 0.6363628506660461, 0.6059804558753967, 0.6055358052253723, 0.5884824991226196, 0.5769306421279907, 0.5747712254524231, 0.5618873834609985, 0.5357555150985718, 0.5366541147232056, 0.5266256332397461, 0.5203112363815308, 0.5078770518302917, 0.5023040175437927, 0.4871827960014343, 0.4826721251010895, 0.472459614276886, 0.46416085958480835, 0.46620798110961914, 0.44901755452156067, 0.44621649384498596, 0.4346737861633301], "accuracy": [0.1282525360584259, 0.3191123902797699, 0.4403645396232605, 0.5477479696273804, 0.6312243938446045, 0.6588297486305237, 0.7004358768463135, 0.6963412761688232, 0.6956809163093567, 0.7083608508110046, 0.7316074371337891, 0.7341170310974121, 0.7510236501693726, 0.7619865536689758, 0.7531369924545288, 0.7666094303131104, 0.769911527633667, 0.778232753276825, 0.7770439982414246, 0.7803460359573364, 0.7918372750282288, 0.7957997918128967, 0.7988376617431641, 0.8058380484580994, 0.8057059645652771, 0.8123101592063904, 0.8120459914207458, 0.8161405324935913, 0.8185180425643921, 0.8249900937080383, 0.8273676037788391, 0.826310932636261, 0.8345000743865967, 0.8354246616363525, 0.8388587832450867], "val_loss": [2.2463648319244385, 2.0164501667022705, 1.1249786615371704, 0.8689789772033691, 0.7615882158279419, 0.7077519297599792, 0.6765065789222717, 0.6767697930335999, 0.6538649201393127, 0.634443461894989, 0.5967769026756287, 0.5645879507064819, 0.5546233654022217, 0.5436150431632996, 0.5453944206237793, 0.5214089155197144, 0.5205716490745544, 0.5233098864555359, 0.5160938501358032, 0.5092951655387878, 0.4996929168701172, 0.4877066910266876, 0.4800041615962982, 0.46139055490493774, 0.45714622735977173, 0.4556981921195984, 0.4542894661426544, 0.4497494399547577, 0.4501396417617798, 0.44218865036964417, 0.4519544243812561, 0.4492430090904236, 0.43896499276161194, 0.4330042600631714, 0.43150797486305237], "val_accuracy": [0.42933332920074463, 0.48366665840148926, 0.656000018119812, 0.6933333277702332, 0.7289999723434448, 0.7566666603088379, 0.75, 0.7386666536331177, 0.7596666812896729, 0.762666642665863, 0.7766666412353516, 0.7833333611488342, 0.8033333420753479, 0.800000011920929, 0.8046666383743286, 0.8073333501815796, 0.8090000152587891, 0.8073333501815796, 0.8166666626930237, 0.8166666626930237, 0.8149999976158142, 0.8246666789054871, 0.8303333520889282, 0.8316666483879089, 0.8396666646003723, 0.8473333120346069, 0.8506666421890259, 0.8493333458900452, 0.8489999771118164, 0.8550000190734863, 0.8456666469573975, 0.8523333072662354, 0.8543333411216736, 0.8536666631698608, 0.8546666502952576]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8351428508758545, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5876880884170532, 0.8799134492874146, 0.7177532911300659, 0.6456257104873657, 0.586627185344696, 0.5628231167793274, 0.5454725027084351, 0.532664954662323, 0.48194506764411926, 0.48263490200042725, 0.48116084933280945, 0.47776323556900024, 0.4682157337665558, 0.5071755051612854, 0.5547151565551758, 0.5192103981971741], "accuracy": [0.46889445185661316, 0.6944921612739563, 0.7360982894897461, 0.7621186375617981, 0.7804781198501587, 0.7869502305984497, 0.7961959838867188, 0.8119139075279236, 0.821820080280304, 0.8248580098152161, 0.8333113193511963, 0.8264430165290833, 0.8285563588142395, 0.8201030492782593, 0.8257825970649719, 0.8181217908859253], "val_loss": [0.8209728002548218, 0.6431899666786194, 0.5427675843238831, 0.5374061465263367, 0.49981579184532166, 0.49994853138923645, 0.5164309740066528, 0.46630004048347473, 0.4751487076282501, 0.4652082026004791, 0.4592382311820984, 0.48493245244026184, 0.4996066093444824, 0.5009641051292419, 0.5496914982795715, 0.5387582182884216], "val_accuracy": [0.7136666774749756, 0.7693333625793457, 0.8069999814033508, 0.8043333292007446, 0.8216666579246521, 0.8236666917800903, 0.82833331823349, 0.8433333039283752, 0.8393333554267883, 0.8479999899864197, 0.8536666631698608, 0.8463333249092102, 0.8519999980926514, 0.8356666564941406, 0.8389999866485596, 0.8320000171661377]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [4, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 8, 2, 6, 1, 5, 5, 5], [0, 0, 3, 0, 4, 1, 4, 0, 0], [0, 27, 4, 0, 27], [1, 1], [0], [2], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 1, 2, 2, 22, 13, 9, 5, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.square(alpha), grad)), tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))))), tf.math.square(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 1, 3, 5, 4, 3, 0, 7, 8, 7, 3, 5, 6], [0, 0, 3, 0, 2, 3, 3, 3, 1, 0, 2], [0, 39, 39, 78], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 6, 1, 6, 3, 2, 2, 2], [0, 0, 2, 0, 3, 2, 0, 4, 3], [0, 27, 4, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 15, 11, 4, 18, 9, 9, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(grad), tf.math.add(tf.math.sqrt(grad), tf.math.add(tf.math.multiply(grad, grad), tf.math.square(tf.math.divide_no_nan(alpha, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))))))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.add(beta, tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [7828120136581120.0, 3.0440254292885504e+17, 2.200707432487846e+18, 8.443339455447695e+18, 2.234862716668661e+19, 4.88685771487833e+19], "accuracy": [0.09998679161071777, 0.10328886657953262, 0.09615638852119446, 0.09972262382507324, 0.09945846349000931, 0.10342095047235489], "val_loss": [6.110116253060301e+16, 9.407009857585807e+17, 4.615439751124615e+18, 1.4307344478900322e+19, 3.4460985796732125e+19, 7.073563801371332e+19], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 1, 3, 1, 6, 3, 2, 2, 3, 4, 6], [0, 0, 5, 0, 4, 1, 0, 4, 1, 1, 2], [0, 27, 4, 0], [0, 1], [0], [0], [0], [0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 7], [2, 5, 2, 5], [0]], "fitness": -0.09285714477300644, "mapping_values": [1, 2, 1, 1, 1, 22, 11, 11, 4, 2, 1, 1, 1, 8, 4, 4, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(grad, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(grad, alpha), alpha), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.subtract(tf.math.add(beta, grad), beta), grad))", "other_info": {"loss": [2.3098857402801514, 2.3095226287841797, 2.3090298175811768, 2.309952974319458, 2.3106353282928467, 2.30989146232605], "accuracy": [0.09351472556591034, 0.09074098616838455, 0.09113723784685135, 0.09919429570436478, 0.09060890227556229, 0.08809932321310043], "val_loss": [2.308655261993408, 2.308655261993408, 2.308655261993408, 2.308655261993408, 2.308655261993408, 2.308655261993408], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]