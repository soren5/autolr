[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.836571455001831, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.58047616481781, 0.8722211122512817, 0.7037032246589661, 0.6251752376556396, 0.5938280820846558, 0.564725399017334, 0.5278398394584656, 0.5264303088188171, 0.5128515362739563, 0.4913792014122009, 0.47775986790657043, 0.46960943937301636, 0.4721643030643463, 0.46701738238334656, 0.468872606754303, 0.44758370518684387, 0.45458388328552246, 0.5069631338119507, 0.48838648200035095, 0.4734468460083008, 0.4746835231781006], "accuracy": [0.4675736427307129, 0.698190450668335, 0.7424382567405701, 0.7728173136711121, 0.7884030938148499, 0.7932901978492737, 0.8035926818847656, 0.8119139075279236, 0.8131026029586792, 0.8252542614936829, 0.833179235458374, 0.8355567455291748, 0.8294808864593506, 0.829216718673706, 0.8362171649932861, 0.8446704745292664, 0.8363492488861084, 0.8383304476737976, 0.8391229510307312, 0.8412362933158875, 0.8507462739944458], "val_loss": [0.8511109948158264, 0.6103041172027588, 0.5591062903404236, 0.48734375834465027, 0.4640626311302185, 0.4751512110233307, 0.47033369541168213, 0.4676966965198517, 0.4910816550254822, 0.4822935461997986, 0.4485926032066345, 0.4681814908981323, 0.4890018403530121, 0.5261001586914062, 0.557487964630127, 0.508946418762207, 0.5947098135948181, 0.5842240452766418, 0.5366092920303345, 0.5847618579864502, 0.5774675011634827], "val_accuracy": [0.7136666774749756, 0.7846666574478149, 0.7839999794960022, 0.8240000009536743, 0.8416666388511658, 0.8443333506584167, 0.8393333554267883, 0.8346666693687439, 0.8176666498184204, 0.8493333458900452, 0.8443333506584167, 0.8506666421890259, 0.8420000076293945, 0.8413333296775818, 0.8403333425521851, 0.8553333282470703, 0.8360000252723694, 0.843666672706604, 0.846666693687439, 0.8446666598320007, 0.8446666598320007]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8122857213020325, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4505335092544556, 0.7639520764350891, 0.6680160760879517, 0.595823347568512, 0.5694006681442261, 0.5374956130981445, 0.4947287440299988, 0.4965774714946747, 0.4592035710811615, 0.4694831073284149, 0.4832971692085266, 0.492975652217865, 0.49300962686538696, 0.5002738237380981, 0.4805664122104645, 0.5304102897644043, 0.5626711845397949, 0.5791649222373962, 0.6040434837341309, 0.5807318091392517], "accuracy": [0.4920089840888977, 0.7264562249183655, 0.7604015469551086, 0.7758552432060242, 0.7857614755630493, 0.8049134612083435, 0.8166688680648804, 0.8216879963874817, 0.8231409192085266, 0.8289526104927063, 0.8294808864593506, 0.8259146809577942, 0.8319904804229736, 0.8161405324935913, 0.8378021121025085, 0.8294808864593506, 0.8059701323509216, 0.8171972036361694, 0.7991018295288086, 0.8107251524925232], "val_loss": [0.7421987056732178, 0.5899600982666016, 0.5282894968986511, 0.4842171370983124, 0.47585147619247437, 0.47081831097602844, 0.48223933577537537, 0.448742151260376, 0.49322620034217834, 0.4508393108844757, 0.5314711332321167, 0.4869878888130188, 0.49672842025756836, 0.5136871933937073, 0.576145589351654, 0.57281094789505, 0.5508663654327393, 0.5874437093734741, 0.535916268825531, 0.5630372166633606], "val_accuracy": [0.7480000257492065, 0.7716666460037231, 0.8073333501815796, 0.8159999847412109, 0.8190000057220459, 0.8316666483879089, 0.8339999914169312, 0.8323333263397217, 0.8416666388511658, 0.8443333506584167, 0.8370000123977661, 0.8423333168029785, 0.8373333215713501, 0.8453333377838135, 0.8503333330154419, 0.8220000267028809, 0.8446666598320007, 0.8363333344459534, 0.8326666951179504, 0.8343333601951599]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 4, 3, 1, 3, 5], [0, 0, 1, 1, 2], [0, 39, 67], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 0, 1, 6, 3, 8, 2, 2, 3], [0, 0, 2, 0, 3, 1, 0, 3], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 18, 10, 8, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.multiply(grad, alpha), tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 2, 3, 1, 3, 7, 4, 5, 6, 0, 8, 0, 2], [0, 0, 1, 0, 2, 0, 3, 1, 3], [0, 39, 39, 90], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 8, 3, 8, 5], [0, 0, 2, 0, 3, 1, 3], [0, 39, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.square(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.negative(alpha))))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), grad)), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), beta), tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}, "mapping_values": [1, 22, 13, 9, 4, 11, 6, 5, 3, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 27}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 2, 3, 1, 2, 5], [1, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0], [0, 2, 3, 1, 6, 3, 2, 8], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [66], [1], [0], [2], [0]], "fitness": -0.0908571407198906, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310607433319092, 2.309140920639038, 2.309710741043091, 2.3106439113616943, 2.309495210647583, 2.309770107269287], "accuracy": [0.09457138925790787, 0.09126931428909302, 0.09074098616838455, 0.0944393053650856, 0.09338264167308807, 0.08625016361474991], "val_loss": [2.3088765144348145, 2.3088765144348145, 2.3088765144348145, 2.3088765144348145, 2.3088765144348145, 2.3088765144348145], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 4, 1, 3, 5], [0, 2, 2, 0, 2], [0, 39, 39], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 8, 3, 8, 2], [0, 0, 2, 0, 3, 2, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 11, 6, 5, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3097214698791504, 2.3100099563598633, 2.310197591781616, 2.308439016342163, 2.310082197189331, 2.3103349208831787], "accuracy": [0.09219389408826828, 0.09457138925790787, 0.09325055778026581, 0.09338264167308807, 0.09351472556591034, 0.09325055778026581], "val_loss": [2.308652639389038, 2.308652639389038, 2.308652639389038, 2.308652639389038, 2.308652639389038, 2.308652639389038], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}]