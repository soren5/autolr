[{"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 6, 3, 2, 2], [0, 0, 4, 0, 4, 1, 0], [0, 27, 4, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8568571209907532, "mapping_values": [1, 2, 1, 1, 1, 6, 3, 3, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.293497323989868, 2.1909191608428955, 1.7614110708236694, 1.352294683456421, 1.076350212097168, 0.9303512573242188, 0.8361263871192932, 0.8040401935577393, 0.7364376783370972, 0.722897469997406, 0.7015634775161743, 0.6764585375785828, 0.6430435180664062, 0.6172506213188171, 0.632552444934845, 0.592246949672699, 0.5798260569572449, 0.5730225443840027, 0.5787692070007324, 0.5487909913063049, 0.5277960300445557, 0.5330758094787598, 0.5249527096748352, 0.5072514414787292, 0.5103291869163513, 0.5039201378822327, 0.47798341512680054, 0.4804016053676605, 0.46868348121643066, 0.46045979857444763, 0.45584753155708313, 0.45187899470329285, 0.4387427270412445, 0.43592414259910583, 0.4359050691127777, 0.44295942783355713, 0.42035913467407227, 0.425121545791626, 0.424172967672348, 0.42290186882019043, 0.4141733646392822, 0.4146521985530853, 0.3946372866630554, 0.4068047106266022, 0.39584776759147644, 0.38794729113578796], "accuracy": [0.12812046706676483, 0.33166027069091797, 0.4523840844631195, 0.5558050274848938, 0.6373002529144287, 0.6631884574890137, 0.691850483417511, 0.7102100253105164, 0.7199841737747192, 0.7323999404907227, 0.7329282760620117, 0.746268630027771, 0.7564390301704407, 0.7622507214546204, 0.761590301990509, 0.7796856164932251, 0.7792893648147583, 0.7885351777076721, 0.7820631265640259, 0.7847048044204712, 0.7924976944923401, 0.8000264167785645, 0.8058380484580994, 0.8096684813499451, 0.8095363974571228, 0.8092722296714783, 0.8187822103500366, 0.8127063512802124, 0.8183859586715698, 0.8239334225654602, 0.8251221776008606, 0.8238013386726379, 0.8308017253875732, 0.824329674243927, 0.8308017253875732, 0.8318583965301514, 0.8430854678153992, 0.8407079577445984, 0.8383304476737976, 0.8383304476737976, 0.8389908671379089, 0.8372738361358643, 0.8496896028518677, 0.8441421389579773, 0.8418967127799988, 0.8519350290298462], "val_loss": [2.247987747192383, 2.023869514465332, 1.1486033201217651, 0.9063482284545898, 0.7846633195877075, 0.7262263298034668, 0.6759552955627441, 0.6550402641296387, 0.6491893529891968, 0.6181222200393677, 0.5900389552116394, 0.5708051919937134, 0.551702082157135, 0.551388680934906, 0.5443003177642822, 0.5335782766342163, 0.5181992650032043, 0.515974760055542, 0.5084540247917175, 0.5135042667388916, 0.49983373284339905, 0.4933469295501709, 0.5057681202888489, 0.48058968782424927, 0.48849478363990784, 0.4750315845012665, 0.4772050082683563, 0.4743330776691437, 0.4734625518321991, 0.4736640751361847, 0.45294880867004395, 0.4623931050300598, 0.45783731341362, 0.4533054232597351, 0.4720523953437805, 0.4527938961982727, 0.4444355368614197, 0.4409964084625244, 0.443004846572876, 0.4936482310295105, 0.4404001533985138, 0.4277486205101013, 0.4542306363582611, 0.4261491596698761, 0.4431222379207611, 0.4442528188228607], "val_accuracy": [0.4073333442211151, 0.4833333194255829, 0.6446666717529297, 0.6859999895095825, 0.7003333568572998, 0.7283333539962769, 0.7436666488647461, 0.7493333220481873, 0.7459999918937683, 0.7613333463668823, 0.7670000195503235, 0.7833333611488342, 0.7900000214576721, 0.7879999876022339, 0.7856666445732117, 0.7946666479110718, 0.79666668176651, 0.7979999780654907, 0.7996666431427002, 0.8080000281333923, 0.800000011920929, 0.8163333535194397, 0.8096666932106018, 0.8190000057220459, 0.8169999718666077, 0.8176666498184204, 0.8223333358764648, 0.8213333487510681, 0.8289999961853027, 0.8273333311080933, 0.8330000042915344, 0.8266666531562805, 0.8336666822433472, 0.8370000123977661, 0.8356666564941406, 0.8370000123977661, 0.8396666646003723, 0.8433333039283752, 0.8383333086967468, 0.8360000252723694, 0.8506666421890259, 0.8500000238418579, 0.8426666855812073, 0.8433333039283752, 0.8456666469573975, 0.8476666808128357]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.824571430683136, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6034513711929321, 0.8634995222091675, 0.7372087836265564, 0.6506971716880798, 0.610943078994751, 0.625191330909729, 0.5981869697570801, 0.587047815322876, 0.540420413017273, 0.5516838431358337, 0.5538555979728699, 0.5205453038215637, 0.530644953250885, 0.49607333540916443, 0.49465975165367126, 0.4964599311351776, 0.5245016813278198, 0.5166069269180298, 0.5509569048881531, 0.5318907499313354, 0.4921467900276184, 0.4977501630783081, 0.4842199981212616], "accuracy": [0.4543653428554535, 0.6964733600616455, 0.7353057861328125, 0.7644960880279541, 0.7796856164932251, 0.7733456492424011, 0.7829877138137817, 0.7854973077774048, 0.8021397590637207, 0.7930260300636292, 0.7922335267066956, 0.8099326491355896, 0.8087438941001892, 0.8241975903511047, 0.8195747137069702, 0.8232730031013489, 0.8310658931732178, 0.8189142942428589, 0.8273676037788391, 0.8153480291366577, 0.8313300609588623, 0.8219521641731262, 0.8387266993522644], "val_loss": [0.8716947436332703, 0.6607921719551086, 0.5863362550735474, 0.5587477684020996, 0.5335602164268494, 0.546115517616272, 0.5504693388938904, 0.5204956531524658, 0.5304731726646423, 0.5400229096412659, 0.5534965991973877, 0.5229178667068481, 0.5397698283195496, 0.5150983333587646, 0.550018846988678, 0.55777508020401, 0.5591631531715393, 0.6005547642707825, 0.5884411334991455, 0.6229363083839417, 0.6060150861740112, 0.6037710905075073, 0.6256177425384521], "val_accuracy": [0.6893333196640015, 0.7639999985694885, 0.7926666736602783, 0.8100000023841858, 0.8143333196640015, 0.8009999990463257, 0.8173333406448364, 0.8209999799728394, 0.8169999718666077, 0.8216666579246521, 0.8226666450500488, 0.8286666870117188, 0.8379999995231628, 0.8353333473205566, 0.8426666855812073, 0.8316666483879089, 0.8383333086967468, 0.8453333377838135, 0.8389999866485596, 0.8366666436195374, 0.8320000171661377, 0.82833331823349, 0.8346666693687439]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 2, 3, 4, 3, 1, 8, 2, 6, 9], [1, 0, 1, 0, 2, 3, 1], [0, 39, 39], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 8, 2, 1, 6, 1, 8, 2, 0, 5, 1], [4, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1, 1], [2], [0, 6], [79], [1], [0], [7], [0]], "fitness": -0.26600000262260437, "mapping_values": [1, 17, 10, 7, 3, 18, 11, 7, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.subtract(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.divide_no_nan(grad, alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.subtract(tf.math.sqrt(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), tf.math.negative(tf.math.square(tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)))), alpha)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.2402262687683105, 2.352966070175171, 2.262605667114258, 2.5225870609283447, 2.111748695373535, 2.390737295150757], "accuracy": [0.22744683921337128, 0.19878484308719635, 0.160084530711174, 0.22942808270454407, 0.25214633345603943, 0.2102760523557663], "val_loss": [1.9056462049484253, 2.2964835166931152, 2.365338087081909, 2.1988728046417236, 2.1878225803375244, 2.268239736557007], "val_accuracy": [0.26499998569488525, 0.09966666996479034, 0.09733333438634872, 0.21833333373069763, 0.09966666996479034, 0.18700000643730164]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [37, 39, 39], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 6, 3, 2, 2], [0, 0, 4, 0, 4, 1, 0], [0, 27, 4, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.09428571164608002, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3101770877838135, 2.30786395072937, 2.3093507289886475, 2.3094804286956787, 2.30928635597229, 2.3102500438690186], "accuracy": [0.08902391046285629, 0.09800554811954498, 0.0944393053650856, 0.09417514503002167, 0.09166556596755981, 0.09245806187391281], "val_loss": [2.308551073074341, 2.308551073074341, 2.308551073074341, 2.308551073074341, 2.308551073074341, 2.308551073074341], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [3, 2, 3, 1, 6, 3, 2, 2], [0, 0, 4, 0, 4, 1, 0, 5], [0, 27, 4, 0], [0, 0], [0, 9], [0], [0], [0, 1], [0], [2], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 2, 1, 1, 1, 15, 7, 8, 4, 2, 2, 0, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), grad), alpha))), tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3090121746063232, 2.310096502304077, 2.309760808944702, 2.309283494949341, 2.3104279041290283, 2.309976577758789], "accuracy": [0.09338264167308807, 0.08889182657003403, 0.09496764093637466, 0.09734513610601425, 0.0944393053650856, 0.09100515395402908], "val_loss": [2.309192180633545, 2.309192180633545, 2.309192180633545, 2.309192180633545, 2.309192180633545, 2.309192180633545], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 7, 5], [0, 0, 1, 0, 2], [0, 39, 60], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 31, 4, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 1, 0, 1, 1, 12, 6, 6, 3, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3098409175872803, 2.3102731704711914, 2.309735059738159, 2.310419797897339, 2.3099849224090576, 2.309884548187256], "accuracy": [0.08730682730674744, 0.09126931428909302, 0.09325055778026581, 0.09153348207473755, 0.0948355570435524, 0.09298639744520187], "val_loss": [2.3086304664611816, 2.3086304664611816, 2.3086304664611816, 2.3086304664611816, 2.3086304664611816, 2.3086304664611816], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}]