[{"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [1, 0, 1, 0, 2], [40, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 6, 3, 2, 2], [0, 0, 4, 0, 4, 1, 0], [26, 6, 4, 0], [1, 1], [4], [0], [0], [1], [0], [2], [0]], "fitness": -0.8665714263916016, "mapping_values": [1, 2, 1, 1, 0, 12, 6, 6, 3, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2959060668945312, 2.213221549987793, 1.9255534410476685, 1.3794628381729126, 1.2704187631607056, 0.9383414387702942, 0.9016126990318298, 0.8199175000190735, 0.8129990696907043, 0.7678678035736084, 0.7411859035491943, 0.714407205581665, 0.6806453466415405, 0.663544237613678, 0.631686270236969, 0.6240880489349365, 0.6034587621688843, 0.5926311016082764, 0.5803949236869812, 0.5647415518760681, 0.5651505589485168, 0.5350329875946045, 0.5333464741706848, 0.5298782587051392, 0.4929628372192383, 0.5158957839012146, 0.5037069916725159, 0.4874146282672882, 0.4966205954551697, 0.4779641330242157, 0.4685499668121338, 0.45390594005584717, 0.44319793581962585, 0.43353044986724854, 0.443925142288208, 0.43312740325927734, 0.4201144278049469, 0.418479859828949, 0.4121992588043213, 0.40426114201545715, 0.3942543864250183, 0.3932091295719147, 0.388642281293869, 0.3856703042984009, 0.37308308482170105, 0.3647211492061615, 0.36440470814704895, 0.37021690607070923, 0.3680843412876129, 0.3502562344074249, 0.3536161780357361, 0.36922329664230347, 0.3433687388896942, 0.3633728325366974, 0.35555243492126465, 0.3423517048358917, 0.3432978391647339, 0.3299003541469574, 0.33415183424949646, 0.33980441093444824, 0.34007948637008667], "accuracy": [0.12112006545066833, 0.3073570132255554, 0.41064587235450745, 0.5202747583389282, 0.5959582328796387, 0.6586976647377014, 0.6717738509178162, 0.6917183995246887, 0.702681303024292, 0.7029454708099365, 0.7235503792762756, 0.7264562249183655, 0.7427024245262146, 0.7473253011703491, 0.7515519857406616, 0.7606657147407532, 0.7627789974212646, 0.7730814814567566, 0.7792893648147583, 0.7840443849563599, 0.7839123010635376, 0.7931581139564514, 0.7994980812072754, 0.7984414100646973, 0.8084797263145447, 0.8055738806724548, 0.8063663840293884, 0.8185180425643921, 0.8166688680648804, 0.8259146809577942, 0.8227446675300598, 0.8247259259223938, 0.833179235458374, 0.8366134166717529, 0.8308017253875732, 0.8297450542449951, 0.8362171649932861, 0.8429533839225769, 0.8401796221733093, 0.8397833704948425, 0.8422929644584656, 0.8477083444595337, 0.8506141901016235, 0.8570862412452698, 0.8520671129226685, 0.8622375130653381, 0.8605204224586487, 0.8562937378883362, 0.8607845902442932, 0.8618412613868713, 0.8588033318519592, 0.8640866279602051, 0.8622375130653381, 0.8589354157447815, 0.8597279191017151, 0.8696341514587402, 0.8634262084960938, 0.873860776424408, 0.8684453964233398, 0.8676528930664062, 0.8677849769592285], "val_loss": [2.256795644760132, 2.0994701385498047, 1.4491106271743774, 0.9790096879005432, 0.8039370179176331, 0.8130027055740356, 0.6835071444511414, 0.6599760055541992, 0.6477798819541931, 0.6429483890533447, 0.6311954855918884, 0.5918357968330383, 0.5719361901283264, 0.5491148829460144, 0.5322462320327759, 0.5317710638046265, 0.5117735266685486, 0.508100688457489, 0.5172063112258911, 0.5066390633583069, 0.5057000517845154, 0.4973457157611847, 0.485333651304245, 0.48384520411491394, 0.4811793267726898, 0.46513134241104126, 0.4562864601612091, 0.4561322331428528, 0.45641377568244934, 0.44562792778015137, 0.4474678933620453, 0.44752639532089233, 0.4450381398200989, 0.4381343126296997, 0.4380282759666443, 0.43596428632736206, 0.437305748462677, 0.43146461248397827, 0.4299965798854828, 0.4276541471481323, 0.41975492238998413, 0.4364689588546753, 0.44990235567092896, 0.4380602538585663, 0.4297012388706207, 0.4324171543121338, 0.40998998284339905, 0.4121799170970917, 0.4323637783527374, 0.422870934009552, 0.43575724959373474, 0.4501741826534271, 0.45250204205513, 0.4502817392349243, 0.44868648052215576, 0.48475906252861023, 0.4930659234523773, 0.4764661192893982, 0.4668026566505432, 0.4721711277961731, 0.4820523262023926], "val_accuracy": [0.36266666650772095, 0.4203333258628845, 0.5830000042915344, 0.6576666831970215, 0.6956666707992554, 0.7256666421890259, 0.7393333315849304, 0.7409999966621399, 0.7459999918937683, 0.7553333044052124, 0.7576666474342346, 0.7590000033378601, 0.7693333625793457, 0.781000018119812, 0.7923333048820496, 0.793666660785675, 0.8063333630561829, 0.8033333420753479, 0.7943333387374878, 0.8053333163261414, 0.8076666593551636, 0.8136666417121887, 0.8186666369438171, 0.8199999928474426, 0.8143333196640015, 0.8286666870117188, 0.8296666741371155, 0.8349999785423279, 0.8346666693687439, 0.8356666564941406, 0.8383333086967468, 0.8316666483879089, 0.8356666564941406, 0.8379999995231628, 0.8396666646003723, 0.8433333039283752, 0.8429999947547913, 0.8476666808128357, 0.8489999771118164, 0.8526666760444641, 0.8510000109672546, 0.8489999771118164, 0.8600000143051147, 0.859000027179718, 0.8576666712760925, 0.8560000061988831, 0.8566666841506958, 0.8603333234786987, 0.859666645526886, 0.8566666841506958, 0.8610000014305115, 0.859333336353302, 0.8560000061988831, 0.859666645526886, 0.862333357334137, 0.8646666407585144, 0.859666645526886, 0.8586666584014893, 0.8556666374206543, 0.8513333201408386, 0.8550000190734863]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [1, 0, 1, 0, 2], [40, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 6, 8, 2, 2], [0, 0, 4, 0, 0, 1, 0], [26, 6, 4, 0], [1, 1], [4], [0], [0], [1], [0], [2], [0]], "fitness": -0.8302857279777527, "mapping_values": [1, 2, 1, 1, 0, 11, 6, 5, 4, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.296940803527832, 2.218156337738037, 1.9373469352722168, 1.416157603263855, 1.2817002534866333, 0.9614351391792297, 0.9326001405715942, 0.8684158325195312, 0.8432307243347168, 0.7931569218635559, 0.7716060280799866, 0.7478035688400269, 0.7110506892204285, 0.6816911697387695, 0.6638829112052917, 0.6412651538848877, 0.6299591660499573, 0.6295127868652344, 0.6087698340415955, 0.6017924547195435, 0.5848731994628906, 0.5627292990684509, 0.5575039386749268, 0.5525357723236084, 0.549851655960083, 0.5325368046760559, 0.5370397567749023, 0.5119255185127258, 0.5039597153663635, 0.49055394530296326, 0.4900534152984619, 0.472734272480011, 0.4655904471874237, 0.4602261781692505, 0.46450433135032654, 0.4498082995414734, 0.44885870814323425, 0.4428449869155884, 0.44165974855422974, 0.42528167366981506, 0.42439913749694824, 0.42231839895248413, 0.40796777606010437, 0.4131365716457367, 0.4041583240032196, 0.40368446707725525, 0.3845423460006714], "accuracy": [0.11649715900421143, 0.29401662945747375, 0.4155329465866089, 0.5070664286613464, 0.5876370072364807, 0.6523576974868774, 0.6597543358802795, 0.6827367544174194, 0.6861709356307983, 0.6992471218109131, 0.7066437602043152, 0.7135120630264282, 0.7320036888122559, 0.7326641082763672, 0.7413815855979919, 0.7535332441329956, 0.7519482374191284, 0.7589486241340637, 0.7696473598480225, 0.7652885913848877, 0.778232753276825, 0.7832518815994263, 0.7872143983840942, 0.7839123010635376, 0.7858935594558716, 0.7928939461708069, 0.793422281742096, 0.8001585006713867, 0.807158887386322, 0.8108572363853455, 0.8119139075279236, 0.8220842480659485, 0.8186501264572144, 0.8253863453865051, 0.8255184292793274, 0.8244617581367493, 0.8215559124946594, 0.8302733898162842, 0.8319904804229736, 0.8433496356010437, 0.8345000743865967, 0.8428213000297546, 0.8421608805656433, 0.8436138033866882, 0.8532558679580688, 0.8469158411026001, 0.8492933511734009], "val_loss": [2.2567155361175537, 2.1039395332336426, 1.459783673286438, 0.9258866906166077, 0.7974216938018799, 0.8444922566413879, 0.6960651278495789, 0.6635172367095947, 0.6657859683036804, 0.6493982076644897, 0.6443126797676086, 0.602342426776886, 0.5739760994911194, 0.5618513822555542, 0.5502617955207825, 0.538382887840271, 0.5186223387718201, 0.5003698468208313, 0.4963463544845581, 0.4940682053565979, 0.4904475212097168, 0.4867383539676666, 0.4779805541038513, 0.4803639054298401, 0.4835691750049591, 0.4662556052207947, 0.4641173183917999, 0.4614706337451935, 0.45659878849983215, 0.44779711961746216, 0.44850996136665344, 0.4406578838825226, 0.4322627782821655, 0.43604686856269836, 0.42721980810165405, 0.4175289273262024, 0.4217052459716797, 0.41222718358039856, 0.4112831652164459, 0.40493518114089966, 0.4090711772441864, 0.3876221477985382, 0.39652615785598755, 0.4150077998638153, 0.40265071392059326, 0.3980993926525116, 0.39848652482032776], "val_accuracy": [0.35899999737739563, 0.4713333249092102, 0.5946666598320007, 0.6673333048820496, 0.6916666626930237, 0.7146666646003723, 0.7323333621025085, 0.7606666684150696, 0.7506666779518127, 0.7576666474342346, 0.7590000033378601, 0.7566666603088379, 0.7713333368301392, 0.7879999876022339, 0.7883333563804626, 0.7889999747276306, 0.8043333292007446, 0.8066666722297668, 0.8076666593551636, 0.812666654586792, 0.8116666674613953, 0.8146666884422302, 0.828000009059906, 0.8216666579246521, 0.8140000104904175, 0.828000009059906, 0.831333339214325, 0.8316666483879089, 0.8396666646003723, 0.8450000286102295, 0.8476666808128357, 0.8510000109672546, 0.8496666550636292, 0.8516666889190674, 0.8500000238418579, 0.8510000109672546, 0.8506666421890259, 0.856333315372467, 0.8539999723434448, 0.856333315372467, 0.8573333621025085, 0.8646666407585144, 0.862666666507721, 0.8629999756813049, 0.859333336353302, 0.8543333411216736, 0.8613333106040955]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8191428780555725, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5249418020248413, 0.8893600702285767, 0.6828483939170837, 0.6340941190719604, 0.5986773371696472, 0.5653985142707825, 0.5519402623176575, 0.5431120991706848, 0.5057770013809204, 0.497141033411026, 0.501521110534668, 0.4796909689903259, 0.5287202596664429, 0.5267019271850586, 0.5548282861709595, 0.5702120661735535], "accuracy": [0.4791969358921051, 0.7073041796684265, 0.7464007139205933, 0.7549861073493958, 0.7707040309906006, 0.7965922355651855, 0.8017435073852539, 0.8024039268493652, 0.817461371421814, 0.8222163319587708, 0.8212917447090149, 0.8257825970649719, 0.8252542614936829, 0.822348415851593, 0.8150838613510132, 0.8228767514228821], "val_loss": [0.8670827746391296, 0.6131606698036194, 0.5838302969932556, 0.5213351845741272, 0.5214669704437256, 0.5112061500549316, 0.5050313472747803, 0.5232749581336975, 0.5108518004417419, 0.5198001265525818, 0.49943363666534424, 0.5210899114608765, 0.5664541721343994, 0.5458354353904724, 0.5942914485931396, 0.5362916588783264], "val_accuracy": [0.7226666808128357, 0.7699999809265137, 0.7806666493415833, 0.8119999766349792, 0.8180000185966492, 0.8196666836738586, 0.8293333053588867, 0.8296666741371155, 0.8236666917800903, 0.8379999995231628, 0.8456666469573975, 0.8393333554267883, 0.8339999914169312, 0.82833331823349, 0.840666651725769, 0.8303333520889282]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [7, 2, 3, 1, 3, 5], [1, 0, 1, 0, 2], [40, 39, 39], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 5, 3, 1, 6, 3, 2, 2, 6, 8], [0, 0, 4, 0, 4, 1, 0, 4], [26, 6, 4, 0], [1, 1], [4], [0], [0], [0, 0, 0, 1], [0, 5, 8], [2], [0]], "fitness": -0.10514285415410995, "mapping_values": [1, 3, 1, 2, 1, 18, 10, 8, 4, 1, 0, 1, 1, 4, 3, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))), grad), alpha)), tf.constant(0.0, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.sqrt(beta)))", "other_info": {"loss": [56.944908142089844, 222.3751678466797, 398.0162353515625, 612.041748046875, 979.639404296875, 1435.122314453125, 2446.963134765625, 8996.6416015625], "accuracy": [0.08585391938686371, 0.09866596013307571, 0.10487385839223862, 0.10236428678035736, 0.0944393053650856, 0.09919429570436478, 0.09549596905708313, 0.10170386731624603], "val_loss": [135.44935607910156, 284.820556640625, 445.7445983886719, 641.7312622070312, 936.4815673828125, 1336.3731689453125, 4567.1552734375, 12616.0556640625], "val_accuracy": [0.1146666631102562, 0.11100000143051147, 0.11500000208616257, 0.09966666996479034, 0.08866667002439499, 0.09266666322946548, 0.08533333241939545, 0.09433333575725555]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [2, 0, 1, 0, 2], [0, 39, 29], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 1, 6, 3, 2, 2, 5], [0, 2, 4, 0, 4, 1, 0, 1], [0, 27, 16, 0], [1, 1], [0], [0], [77], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 17, 9, 8, 3, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.math.add(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(grad), alpha))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [339.025390625, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19310526549816132, 0.08836349099874496, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [154.31004333496094, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09399999678134918, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [1, 0, 1, 0, 2], [40, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 1, 6, 3, 2, 2, 1, 6, 5, 7, 7, 3, 9, 4, 4, 0, 7, 6, 3, 6, 4, 1, 4, 1, 1, 2, 1, 2, 0, 0, 6, 3, 8, 7, 4, 2, 5, 3, 8, 4, 0, 4, 4, 9, 1, 3, 6, 7, 7, 3, 5, 7, 9, 6, 9, 7, 7, 9, 3, 0], [0, 0, 4, 0, 4, 1, 0, 0, 3, 5, 5, 4, 5, 5, 0, 1, 4, 2, 4, 2, 2, 4, 3, 0, 0, 5, 4, 1, 3, 1, 0, 2, 2, 3, 0, 4, 0, 3, 4, 2, 3, 0], [97, 6, 19, 0, 50, 4, 0, 60, 18, 39, 64, 40, 83, 18, 64, 39, 71], [0, 1, 1], [4], [0, 5], [0], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 104, 62, 42, 17, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 55, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(grad), tf.math.add(tf.math.add(grad, tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.pow(tf.math.negative(grad), tf.math.add(tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.pow(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(tf.math.subtract(alpha, grad), tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), beta), beta))))), tf.math.add(tf.math.pow(tf.math.add(grad, grad), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.multiply(tf.math.sqrt(tf.math.pow(tf.math.negative(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), grad)), grad))))), alpha), tf.math.pow(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)), grad))), tf.math.add(tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))), tf.math.add(grad, grad))), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), beta)))))), tf.math.multiply(grad, tf.math.negative(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]