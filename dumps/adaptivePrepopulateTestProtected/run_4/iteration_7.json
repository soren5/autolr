[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8374285697937012, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4953573942184448, 0.7849668860435486, 0.6699530482292175, 0.6309095621109009, 0.5655554533004761, 0.5445104837417603, 0.5188776254653931, 0.5054589509963989, 0.503402590751648, 0.4735949635505676, 0.4983326494693756, 0.4950559437274933, 0.49733397364616394, 0.4811980426311493, 0.49116250872612, 0.5122601389884949, 0.4965788722038269, 0.5248498320579529, 0.5654940605163574, 0.575528621673584], "accuracy": [0.48170650005340576, 0.7191916704177856, 0.7637035846710205, 0.7779685854911804, 0.7960638999938965, 0.8033285140991211, 0.8153480291366577, 0.8074230551719666, 0.8251221776008606, 0.8261788487434387, 0.8309338092803955, 0.8298771381378174, 0.8354246616363525, 0.8294808864593506, 0.8329150676727295, 0.8201030492782593, 0.8166688680648804, 0.8189142942428589, 0.8204993009567261, 0.8112534880638123], "val_loss": [0.78408282995224, 0.6287320852279663, 0.684299647808075, 0.5412835478782654, 0.5316304564476013, 0.5176634192466736, 0.523211658000946, 0.5088177919387817, 0.5401124954223633, 0.5022594928741455, 0.5309990048408508, 0.5854293704032898, 0.5416671633720398, 0.5799199938774109, 0.5278498530387878, 0.5449851155281067, 0.5554275512695312, 0.5889244675636292, 0.6005868315696716, 0.5282518863677979], "val_accuracy": [0.7166666388511658, 0.765666663646698, 0.7853333353996277, 0.8106666803359985, 0.8149999976158142, 0.8169999718666077, 0.8256666660308838, 0.8223333358764648, 0.8333333134651184, 0.8293333053588867, 0.8360000252723694, 0.8203333616256714, 0.8320000171661377, 0.8333333134651184, 0.8376666903495789, 0.8240000009536743, 0.8166666626930237, 0.8270000219345093, 0.8263333439826965, 0.8333333134651184]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8299999833106995, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4679067134857178, 0.7672739624977112, 0.6698359847068787, 0.5950927138328552, 0.5621728897094727, 0.5322409272193909, 0.492125928401947, 0.47743093967437744, 0.48940083384513855, 0.4631105363368988, 0.4597466289997101, 0.4748721420764923, 0.4833649694919586, 0.5055437088012695, 0.5015193819999695, 0.46121853590011597, 0.47455522418022156, 0.450126975774765, 0.46692246198654175, 0.4749146103858948, 0.49296578764915466, 0.5063983201980591], "accuracy": [0.48210275173187256, 0.7251353859901428, 0.7589486241340637, 0.7750627398490906, 0.7902522683143616, 0.8043851256370544, 0.8227446675300598, 0.8296129703521729, 0.8247259259223938, 0.833179235458374, 0.8389908671379089, 0.8297450542449951, 0.8350284099578857, 0.8315942287445068, 0.8296129703521729, 0.8354246616363525, 0.8498216867446899, 0.8502179384231567, 0.8428213000297546, 0.8469158411026001, 0.8411042094230652, 0.8442742228507996], "val_loss": [0.748968243598938, 0.6722813844680786, 0.5503579378128052, 0.5316019058227539, 0.4969823360443115, 0.468947172164917, 0.4976383447647095, 0.48048335313796997, 0.4830235540866852, 0.49716395139694214, 0.47450992465019226, 0.4946450889110565, 0.5461385250091553, 0.5089983940124512, 0.49285098910331726, 0.5571675896644592, 0.48927202820777893, 0.5274253487586975, 0.6410768032073975, 0.6586332321166992, 0.6198533773422241, 0.5641644597053528], "val_accuracy": [0.7276666760444641, 0.7480000257492065, 0.8006666898727417, 0.8109999895095825, 0.8236666917800903, 0.8379999995231628, 0.8356666564941406, 0.843666672706604, 0.8293333053588867, 0.8420000076293945, 0.8413333296775818, 0.8443333506584167, 0.828000009059906, 0.8360000252723694, 0.8420000076293945, 0.840666651725769, 0.8479999899864197, 0.8446666598320007, 0.8370000123977661, 0.8410000205039978, 0.8420000076293945, 0.8356666564941406]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 3, 1, 6, 5, 4, 4, 3, 9], [0, 0, 1, 0, 2, 1, 2, 2], [0, 39, 63, 74], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 2, 3, 0, 6, 3, 8, 1, 6], [0, 0, 2, 0, 3, 1, 0, 3], [0, 27, 16, 0], [0, 1], [0], [0], [72], [0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 2, 2, 8], [2, 1, 2, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 10, 8, 4, 17, 9, 8, 4, 2, 1, 1, 1, 9, 5, 4, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.pow(tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), grad), alpha)), grad)))), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.subtract(alpha, tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.sqrt(grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 8], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 4, 3, 8, 2], [5, 3, 3, 0, 3, 1, 0], [23, 27, 16, 0], [0, 1], [0], [0], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 15, 8, 7, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, grad), grad), tf.math.pow(tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], [0, 2, 3, 1, 3, 5], [0, 2, 0, 0, 2], [0, 39, 39], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 6, 2], [0, 3, 2, 0, 3, 1, 0], [0, 27, 16, 49], [0, 1], [0], [0], [0], [0, 0, 0, 1, 1], [0, 0, 7], [0, 0], [0, 79]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 1, 2, 1, 1, 1, 5, 3, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.303797960281372, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 0], [0, 0, 1, 2, 0], [0, 30, 89], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [3, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [24], [0, 0], [0, 9], [2], [0]], "fitness": -0.0908571407198906, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.square(alpha)), tf.math.negative(grad)), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(grad, alpha), tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3109517097473145, 2.311469078063965, 2.3100154399871826, 2.309412717819214, 2.310804605484009, 2.310476303100586], "accuracy": [0.09008057415485382, 0.09021265059709549, 0.09232597798109055, 0.09219389408826828, 0.08915598690509796, 0.08875974267721176], "val_loss": [2.3088247776031494, 2.3088247776031494, 2.3088247776031494, 2.3088247776031494, 2.3088247776031494, 2.3088247776031494], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}, "mapping_values": [1, 12, 7, 5, 3, 14, 7, 7, 4, 2, 1, 1, 1, 2, 2, 0, 1], "tree_depth": 14}]