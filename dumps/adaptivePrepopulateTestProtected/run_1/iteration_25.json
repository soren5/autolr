[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223330497741699, 1.8670156002044678, 1.3935511112213135, 1.1012579202651978, 0.9477801322937012, 0.8379126191139221, 0.7764281630516052, 0.7235901951789856, 0.6839449405670166, 0.6511124968528748, 0.6340097188949585, 0.6069210171699524, 0.5817078948020935, 0.5635776519775391, 0.5524153113365173, 0.5367791652679443, 0.5212588906288147, 0.5178380608558655, 0.5019086003303528, 0.4879888892173767, 0.4858485460281372, 0.4747111201286316, 0.45951735973358154, 0.4532293975353241, 0.4492609202861786, 0.4330301284790039, 0.4310648441314697, 0.42051371932029724, 0.41327017545700073, 0.4060419201850891, 0.3997148871421814, 0.39729252457618713, 0.3869434893131256, 0.3869549036026001, 0.38186177611351013, 0.3692651391029358, 0.36346086859703064, 0.3634459972381592, 0.3600703179836273, 0.3489670753479004, 0.3429599404335022, 0.34309908747673035, 0.3401198089122772, 0.3303268253803253, 0.3301240801811218, 0.3276282846927643, 0.3180643618106842, 0.3136589229106903, 0.3090694546699524, 0.3071834146976471, 0.3011736273765564, 0.30332496762275696, 0.29351481795310974, 0.2937680780887604], "accuracy": [0.26680755615234375, 0.49451854825019836, 0.5679566860198975, 0.6209219098091125, 0.6646413803100586, 0.7078325152397156, 0.7234182953834534, 0.7387399077415466, 0.7541936039924622, 0.7672698497772217, 0.7677981853485107, 0.7820631265640259, 0.7897239327430725, 0.7977809906005859, 0.798309326171875, 0.8082155585289001, 0.8138951063156128, 0.8094043135643005, 0.822348415851593, 0.8269713521003723, 0.8208954930305481, 0.8310658931732178, 0.8350284099578857, 0.8367455005645752, 0.8368775844573975, 0.8444063067436218, 0.843481719493866, 0.850350022315979, 0.8502179384231567, 0.8570862412452698, 0.857218325138092, 0.8574824929237366, 0.8610487580299377, 0.8610487580299377, 0.8607845902442932, 0.8658037185668945, 0.8701624870300293, 0.8689737319946289, 0.8708229064941406, 0.8792761564254761, 0.8798044919967651, 0.8765024542808533, 0.8765024542808533, 0.8824461698532104, 0.880729079246521, 0.8844274282455444, 0.8838990926742554, 0.8887861371040344, 0.8878615498542786, 0.8903711438179016, 0.8924844861030579, 0.8912957310676575, 0.8976356983184814, 0.8960506916046143], "val_loss": [2.040694236755371, 1.5166728496551514, 1.045767068862915, 0.8421168327331543, 0.7569165229797363, 0.7011509537696838, 0.6573318839073181, 0.6179470419883728, 0.5908101201057434, 0.5737177133560181, 0.5541383624076843, 0.5365487933158875, 0.518412172794342, 0.5104728937149048, 0.49868762493133545, 0.485697478055954, 0.48461878299713135, 0.46694132685661316, 0.459992378950119, 0.44818419218063354, 0.45110249519348145, 0.4507465958595276, 0.4339507520198822, 0.4287099242210388, 0.42590731382369995, 0.4119842052459717, 0.4104468524456024, 0.4069807529449463, 0.40372517704963684, 0.3985708951950073, 0.3967111110687256, 0.39305025339126587, 0.39346253871917725, 0.3906964063644409, 0.3815464675426483, 0.3792845904827118, 0.37928369641304016, 0.3762374818325043, 0.37582898139953613, 0.37387406826019287, 0.3717586398124695, 0.36671704053878784, 0.363382488489151, 0.36401286721229553, 0.3619881868362427, 0.35666540265083313, 0.3588123917579651, 0.3541429042816162, 0.35232576727867126, 0.35342442989349365, 0.3524846136569977, 0.34847813844680786, 0.34814298152923584, 0.35015836358070374], "val_accuracy": [0.5323333144187927, 0.6446666717529297, 0.6756666898727417, 0.7043333053588867, 0.7239999771118164, 0.7493333220481873, 0.753000020980835, 0.7706666588783264, 0.7820000052452087, 0.7873333096504211, 0.7956666946411133, 0.800000011920929, 0.8136666417121887, 0.812666654586792, 0.8199999928474426, 0.824999988079071, 0.8246666789054871, 0.8326666951179504, 0.8303333520889282, 0.8376666903495789, 0.8333333134651184, 0.8343333601951599, 0.8446666598320007, 0.843666672706604, 0.846666693687439, 0.8513333201408386, 0.8546666502952576, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8529999852180481, 0.859333336353302, 0.8546666502952576, 0.8569999933242798, 0.8606666922569275, 0.8633333444595337, 0.8643333315849304, 0.8629999756813049, 0.8576666712760925, 0.8703333139419556, 0.8640000224113464, 0.8643333315849304, 0.8676666617393494, 0.8663333058357239, 0.8713333606719971, 0.871999979019165, 0.8693333268165588, 0.8693333268165588, 0.878000020980835, 0.8756666779518127, 0.8706666827201843, 0.8756666779518127, 0.8769999742507935, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8640000224113464, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2253692150115967, 1.8755539655685425, 1.397397756576538, 1.100974202156067, 0.9317370057106018, 0.8374489545822144, 0.7857442498207092, 0.7220735549926758, 0.6935520768165588, 0.6544106602668762, 0.6364999413490295, 0.6145418882369995, 0.5917975306510925, 0.5735753774642944, 0.5502821207046509, 0.5427431464195251, 0.529923677444458, 0.5121022462844849, 0.5009492635726929, 0.49620553851127625, 0.4826699495315552, 0.4768192172050476, 0.46616658568382263, 0.4598006308078766, 0.4492184817790985, 0.44200456142425537, 0.43287551403045654, 0.41806691884994507, 0.41869693994522095, 0.4054989218711853, 0.40384340286254883, 0.3929387927055359, 0.39578914642333984, 0.38208749890327454, 0.37999966740608215, 0.37785422801971436, 0.3674744665622711, 0.35960468649864197, 0.35531729459762573, 0.34685271978378296, 0.3489566445350647, 0.3474428355693817, 0.33771049976348877, 0.33718612790107727, 0.32935237884521484, 0.33109351992607117], "accuracy": [0.25822216272354126, 0.4802536070346832, 0.5630695819854736, 0.611940324306488, 0.6631884574890137, 0.6955488324165344, 0.720380425453186, 0.7411174178123474, 0.7470611333847046, 0.7622507214546204, 0.7684586048126221, 0.7771760821342468, 0.7836481332778931, 0.7952714562416077, 0.8042530417442322, 0.8033285140991211, 0.8103289008140564, 0.8203672170639038, 0.8202351331710815, 0.8207634687423706, 0.828820526599884, 0.8321225643157959, 0.8310658931732178, 0.8333113193511963, 0.8368775844573975, 0.8462554216384888, 0.8495575189590454, 0.8532558679580688, 0.8521991968154907, 0.8590674996376038, 0.8532558679580688, 0.8619733452796936, 0.8613129258155823, 0.8628978729248047, 0.8683133125305176, 0.8644828796386719, 0.8706908226013184, 0.8709549307823181, 0.874389111995697, 0.8798044919967651, 0.8759741187095642, 0.8772949576377869, 0.8780874609947205, 0.8774270415306091, 0.8844274282455444, 0.8811253309249878], "val_loss": [2.0435214042663574, 1.5212318897247314, 1.0373765230178833, 0.8265080451965332, 0.737156093120575, 0.6776512265205383, 0.6359289288520813, 0.6014290452003479, 0.5775395631790161, 0.5570648312568665, 0.5384986400604248, 0.5287909507751465, 0.5112119317054749, 0.5015588402748108, 0.4882824718952179, 0.4786286950111389, 0.4704502820968628, 0.45825275778770447, 0.45217782258987427, 0.4463260769844055, 0.43822985887527466, 0.44303572177886963, 0.4292941987514496, 0.423898845911026, 0.41473865509033203, 0.4168831408023834, 0.40472033619880676, 0.39992424845695496, 0.39998453855514526, 0.39778727293014526, 0.3959589898586273, 0.39080941677093506, 0.3889312446117401, 0.3847680687904358, 0.38131049275398254, 0.3773968815803528, 0.3769804835319519, 0.3733277916908264, 0.3695317506790161, 0.36970338225364685, 0.36642521619796753, 0.36734384298324585, 0.3647858202457428, 0.3598824143409729, 0.366669237613678, 0.35593706369400024], "val_accuracy": [0.531333327293396, 0.6493333578109741, 0.687333345413208, 0.715666651725769, 0.7360000014305115, 0.7633333206176758, 0.7763333320617676, 0.7806666493415833, 0.7940000295639038, 0.8063333630561829, 0.8149999976158142, 0.8143333196640015, 0.8246666789054871, 0.8323333263397217, 0.8346666693687439, 0.8356666564941406, 0.8426666855812073, 0.8446666598320007, 0.8483333587646484, 0.8546666502952576, 0.856333315372467, 0.8503333330154419, 0.8576666712760925, 0.8610000014305115, 0.859333336353302, 0.8600000143051147, 0.8653333187103271, 0.8676666617393494, 0.8616666793823242, 0.862333357334137, 0.8659999966621399, 0.8656666874885559, 0.8679999709129333, 0.8640000224113464, 0.8696666955947876, 0.8703333139419556, 0.8709999918937683, 0.8696666955947876, 0.8709999918937683, 0.8683333396911621, 0.8766666650772095, 0.871666669845581, 0.8730000257492065, 0.8763333559036255, 0.875333309173584, 0.8759999871253967]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 5, 6, 7, 9, 2, 7, 4, 7, 0, 5], [0, 3, 5, 2, 4, 4], [0, 40], [0, 0], [0, 9], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8588571548461914, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.pow(grad, grad), tf.math.add(beta, tf.math.negative(grad))), tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293978691101074, 2.1932404041290283, 1.7817696332931519, 1.3525923490524292, 1.1087733507156372, 0.9557761549949646, 0.8551601767539978, 0.8150666356086731, 0.763607382774353, 0.7384909391403198, 0.6997465491294861, 0.679623007774353, 0.6598422527313232, 0.6384499669075012, 0.6100383400917053, 0.5973584055900574, 0.5882192254066467, 0.5778107643127441, 0.5632293224334717, 0.5648865103721619, 0.5527743101119995, 0.5374783277511597, 0.5215955972671509, 0.5091143846511841, 0.5098779201507568, 0.49581533670425415, 0.48841938376426697, 0.469016432762146, 0.46316611766815186, 0.4472162425518036, 0.45759859681129456, 0.4504597783088684, 0.4395454525947571, 0.4300273358821869, 0.4197542369365692, 0.42019277811050415, 0.4158426523208618, 0.4208325445652008, 0.4020262360572815, 0.41423651576042175, 0.38529711961746216, 0.38001447916030884, 0.3818953335285187, 0.37893980741500854, 0.3729514479637146, 0.35862085223197937, 0.35176798701286316, 0.35849064588546753, 0.340126633644104, 0.3405425250530243, 0.3330945670604706], "accuracy": [0.13498876988887787, 0.3213578164577484, 0.43283581733703613, 0.5428609251976013, 0.622639000415802, 0.6576409935951233, 0.6892088055610657, 0.7012283802032471, 0.7029454708099365, 0.7226257920265198, 0.7318716049194336, 0.7486461400985718, 0.7461365461349487, 0.7537974119186401, 0.769911527633667, 0.7732135653495789, 0.7761194109916687, 0.7779685854911804, 0.7893276810646057, 0.7924976944923401, 0.793422281742096, 0.7950072884559631, 0.804649293422699, 0.811649739742279, 0.8083476424217224, 0.8144234418869019, 0.8152159452438354, 0.8220842480659485, 0.8215559124946594, 0.8286884427070618, 0.8285563588142395, 0.8317263126373291, 0.8352925777435303, 0.8392550349235535, 0.8448025584220886, 0.8450667262077332, 0.8451988101005554, 0.8437458872795105, 0.8488970994949341, 0.8462554216384888, 0.8539162874221802, 0.8519350290298462, 0.852331280708313, 0.8576145768165588, 0.8578787446022034, 0.8599920868873596, 0.8636903762817383, 0.8638224601745605, 0.8688416481018066, 0.8697662353515625, 0.8720116019248962], "val_loss": [2.2468955516815186, 2.0249946117401123, 1.1556798219680786, 0.8620803952217102, 0.7768704295158386, 0.699481189250946, 0.6417134404182434, 0.6296159625053406, 0.6327894926071167, 0.5936528444290161, 0.5539276599884033, 0.529039740562439, 0.5300161242485046, 0.512621283531189, 0.5073608160018921, 0.5084419846534729, 0.5053486227989197, 0.4844171404838562, 0.47204330563545227, 0.46940967440605164, 0.46859920024871826, 0.45100435614585876, 0.44973668456077576, 0.4314310848712921, 0.4317418336868286, 0.41999363899230957, 0.4189970791339874, 0.41499483585357666, 0.4134552776813507, 0.40216389298439026, 0.40135928988456726, 0.3988611102104187, 0.39504143595695496, 0.40367668867111206, 0.38804891705513, 0.38824960589408875, 0.3847648501396179, 0.3828578591346741, 0.382144033908844, 0.38144442439079285, 0.39100122451782227, 0.38505566120147705, 0.3837951719760895, 0.37854692339897156, 0.3872585892677307, 0.3858320415019989, 0.38734668493270874, 0.3855418562889099, 0.3895012140274048, 0.3868604004383087, 0.38267073035240173], "val_accuracy": [0.43299999833106995, 0.4386666715145111, 0.6513333320617676, 0.6959999799728394, 0.7333333492279053, 0.7396666407585144, 0.7643333077430725, 0.7599999904632568, 0.7540000081062317, 0.7756666541099548, 0.7870000004768372, 0.7903333306312561, 0.7993333339691162, 0.8009999990463257, 0.8050000071525574, 0.8029999732971191, 0.8053333163261414, 0.8209999799728394, 0.8273333311080933, 0.8230000138282776, 0.8223333358764648, 0.8389999866485596, 0.8416666388511658, 0.8376666903495789, 0.843999981880188, 0.8456666469573975, 0.847000002861023, 0.8450000286102295, 0.8456666469573975, 0.8493333458900452, 0.8473333120346069, 0.8533333539962769, 0.8543333411216736, 0.8546666502952576, 0.8576666712760925, 0.8543333411216736, 0.8583333492279053, 0.8603333234786987, 0.862666666507721, 0.8616666793823242, 0.8569999933242798, 0.8643333315849304, 0.8619999885559082, 0.8666666746139526, 0.8690000176429749, 0.8756666779518127, 0.8659999966621399, 0.8643333315849304, 0.8740000128746033, 0.8693333268165588, 0.8656666874885559]}, "mapping_values": [1, 10, 5, 5, 3, 17, 11, 6, 2, 2, 2, 0, 1, 2, 1, 1, 0], "tree_depth": 17}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 1], [0, 0, 1], [0, 0], [0, 58], [1], [0], [2], [0]], "fitness": -0.8302857279777527, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.552915334701538, 0.8055679202079773, 0.6761831045150757, 0.6415826082229614, 0.5940239429473877, 0.5665315389633179, 0.5438982248306274, 0.5104773640632629, 0.52055823802948, 0.5235478281974792, 0.5302560329437256, 0.5369996428489685, 0.48750752210617065, 0.4690031409263611, 0.5045219659805298, 0.5170685052871704, 0.5813313722610474, 0.6169910430908203], "accuracy": [0.4703473746776581, 0.7195879220962524, 0.7504953145980835, 0.7680623531341553, 0.7854973077774048, 0.793950617313385, 0.7993659973144531, 0.8198388814926147, 0.817989706993103, 0.8136309385299683, 0.8034605979919434, 0.822348415851593, 0.8239334225654602, 0.8335754871368408, 0.8247259259223938, 0.8252542614936829, 0.8251221776008606, 0.807158887386322], "val_loss": [0.8066887855529785, 0.5736917853355408, 0.5348114967346191, 0.501282811164856, 0.5014253854751587, 0.5049924850463867, 0.4802536070346832, 0.4646165370941162, 0.49412626028060913, 0.49906688928604126, 0.49725106358528137, 0.4638077914714813, 0.46863025426864624, 0.5039190053939819, 0.5299564599990845, 0.5418962836265564, 0.6690940856933594, 0.6574479937553406], "val_accuracy": [0.7133333086967468, 0.7933333516120911, 0.8119999766349792, 0.8023333549499512, 0.8100000023841858, 0.8153333067893982, 0.8296666741371155, 0.8259999752044678, 0.8166666626930237, 0.8159999847412109, 0.8203333616256714, 0.8330000042915344, 0.8373333215713501, 0.8240000009536743, 0.8353333473205566, 0.8266666531562805, 0.8253333568572998, 0.8203333616256714]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 5, 3, 2, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5, 3, 5, 8, 7], [0, 2, 0, 3, 3, 5], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 2, 1, 1, 16, 10, 6, 2, 1, 0, 1, 1, 16, 8, 8, 5], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), tf.math.square(tf.math.sqrt(tf.math.add(grad, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [78.55643463134766, 2189.193603515625, 10932.2109375, 25193.4453125, 40753.57421875, 53672.3046875], "accuracy": [0.0936468094587326, 0.09813763201236725, 0.10249637067317963, 0.10117553919553757, 0.09959053993225098, 0.10157178342342377], "val_loss": [416.4185791015625, 4618.087890625, 14441.2236328125, 26495.337890625, 37211.84375, 45175.69140625], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 1], [16, 16], [0, 1], [0], [0], [54], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 4, 7, 1, 2, 0, 6], [0, 0, 4, 3, 0, 4, 4, 1, 2, 0, 3, 6, 1, 4, 7], [16, 99, 87, 10, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 32, 17, 15, 4], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.sqrt(tf.math.pow(sigma, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.add(grad, alpha))), beta), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(tf.math.negative(tf.math.divide_no_nan(sigma, grad)), alpha), grad)), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [8, 5, 8, 2], [0, 2, 0, 3], [0], [0, 1], [0, 6, 8, 7, 9, 2, 5, 8], [0, 2, 7], [99], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [6, 3, 3, 3, 8, 1, 9, 1, 4, 2, 8, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [81, 57, 76, 16, 14, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 6, 4, 2, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.math.sqrt(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3033201694488525, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [0, 2, 3, 1, 3, 5], [0, 3, 2, 0, 2], [0, 39, 39], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [5, 2, 3, 0, 3, 5], [0, 4, 0, 3], [16, 16], [1, 0], [0], [0], [76], [1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 6, 3, 3, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3101024627685547, 2.3116202354431152, 2.3154094219207764, 2.332550287246704, 2.3846380710601807, 2.5079565048217773, 2.7615268230438232], "accuracy": [0.09285431355237961, 0.09576013684272766, 0.0956280529499054, 0.10091137140989304, 0.09760929644107819, 0.09694888442754745, 0.10342095047235489], "val_loss": [2.3087918758392334, 2.3091397285461426, 2.3115057945251465, 2.324500560760498, 2.3624582290649414, 2.4548821449279785, 2.6667075157165527], "val_accuracy": [0.09466666728258133, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]