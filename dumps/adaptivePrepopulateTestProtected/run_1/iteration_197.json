[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8597142696380615, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2218258380889893, 1.8657302856445312, 1.396208643913269, 1.091500997543335, 0.9290498495101929, 0.8363063931465149, 0.7631542682647705, 0.7157039046287537, 0.685141921043396, 0.6559481024742126, 0.634857714176178, 0.602183997631073, 0.5841456055641174, 0.5806186199188232, 0.553649365901947, 0.5416030883789062, 0.5237720012664795, 0.5188131928443909, 0.5075315237045288, 0.4870583415031433, 0.47864943742752075, 0.4655410051345825, 0.45683711767196655, 0.45318982005119324, 0.4471935033798218, 0.43640610575675964, 0.4266563057899475, 0.4221166968345642, 0.4107746481895447, 0.3998956084251404, 0.40264153480529785, 0.3944862186908722, 0.3854418992996216, 0.3828895688056946, 0.3656359016895294, 0.36736974120140076, 0.3643305003643036, 0.3590906858444214, 0.3563789427280426, 0.3425852656364441, 0.34196874499320984, 0.3447231650352478, 0.3361165225505829, 0.33754125237464905], "accuracy": [0.2911108136177063, 0.49768856167793274, 0.5597675442695618, 0.6203936338424683, 0.6695284843444824, 0.702681303024292, 0.7213049530982971, 0.7372870445251465, 0.7446836829185486, 0.7568352818489075, 0.7689869403839111, 0.7800818681716919, 0.7839123010635376, 0.7862898111343384, 0.7996301651000977, 0.8012151718139648, 0.807158887386322, 0.8092722296714783, 0.8103289008140564, 0.8234050869941711, 0.8293488025665283, 0.8317263126373291, 0.8335754871368408, 0.8372738361358643, 0.8391229510307312, 0.8442742228507996, 0.8473120927810669, 0.8461233377456665, 0.8488970994949341, 0.8570862412452698, 0.8512746095657349, 0.8541803956031799, 0.860652506351471, 0.8574824929237366, 0.8663320541381836, 0.8644828796386719, 0.8671245574951172, 0.8702945709228516, 0.8705587387084961, 0.8774270415306091, 0.8757099509239197, 0.8713511824607849, 0.8761062026023865, 0.8779553771018982], "val_loss": [2.03759765625, 1.5187662839889526, 1.0580849647521973, 0.8523744940757751, 0.7638288736343384, 0.699852466583252, 0.6552364230155945, 0.6144367456436157, 0.5881494879722595, 0.5688228607177734, 0.5469247102737427, 0.5277023315429688, 0.5138615965843201, 0.506037175655365, 0.49032971262931824, 0.4805002808570862, 0.4738670289516449, 0.4675874710083008, 0.45313945412635803, 0.44486457109451294, 0.4423106014728546, 0.43194180727005005, 0.4253200590610504, 0.4193447232246399, 0.41669705510139465, 0.41181308031082153, 0.40979012846946716, 0.4031260311603546, 0.39996016025543213, 0.3920290470123291, 0.3942949175834656, 0.38746851682662964, 0.3874190151691437, 0.38021329045295715, 0.38112181425094604, 0.38237443566322327, 0.3726678788661957, 0.3700849711894989, 0.36866295337677, 0.37646937370300293, 0.36537325382232666, 0.3667446970939636, 0.362613320350647, 0.36279016733169556], "val_accuracy": [0.5196666717529297, 0.643666684627533, 0.6790000200271606, 0.7086666822433472, 0.7210000157356262, 0.7436666488647461, 0.7676666378974915, 0.7713333368301392, 0.7863333225250244, 0.7926666736602783, 0.7983333468437195, 0.8050000071525574, 0.8130000233650208, 0.8136666417121887, 0.8183333277702332, 0.8273333311080933, 0.824999988079071, 0.8216666579246521, 0.8410000205039978, 0.8456666469573975, 0.8433333039283752, 0.8479999899864197, 0.8476666808128357, 0.8569999933242798, 0.8526666760444641, 0.8550000190734863, 0.8529999852180481, 0.8603333234786987, 0.8576666712760925, 0.8603333234786987, 0.8633333444595337, 0.8650000095367432, 0.8683333396911621, 0.8696666955947876, 0.8640000224113464, 0.8603333234786987, 0.8700000047683716, 0.8686666488647461, 0.8769999742507935, 0.862666666507721, 0.8769999742507935, 0.8726666569709778, 0.8679999709129333, 0.8683333396911621]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 2, 2, 6, 5], [0, 7, 3, 3], [0], [0, 1], [0], [1], [0]], "fitness": -0.843999981880188, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(grad, tf.math.square(sigma)), sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293212652206421, 2.1908795833587646, 1.7808220386505127, 1.3573386669158936, 1.0878925323486328, 0.9408178925514221, 0.8427330255508423, 0.8138852119445801, 0.7608816027641296, 0.7348271012306213, 0.7091502547264099, 0.6815518140792847, 0.6300686001777649, 0.6075588464736938, 0.5913612842559814, 0.5716363191604614, 0.5585342645645142, 0.5510838627815247, 0.5394565463066101, 0.5214283466339111, 0.5085687041282654, 0.4974803924560547, 0.5019159913063049, 0.48404374718666077, 0.4745681583881378, 0.4710097312927246, 0.46241647005081177, 0.44585922360420227, 0.43850916624069214, 0.4225461483001709, 0.42806997895240784, 0.42486143112182617], "accuracy": [0.1294412910938263, 0.32664114236831665, 0.4329679012298584, 0.5399550795555115, 0.6310923099517822, 0.6612072587013245, 0.6931713223457336, 0.7046625018119812, 0.700171709060669, 0.7156254053115845, 0.7314753532409668, 0.737947404384613, 0.7578919529914856, 0.7681944370269775, 0.7692511081695557, 0.7825914621353149, 0.785629391670227, 0.7976489067077637, 0.7924976944923401, 0.7984414100646973, 0.8001585006713867, 0.8092722296714783, 0.8080834746360779, 0.8141592741012573, 0.8240655064582825, 0.8232730031013489, 0.821820080280304, 0.828292191028595, 0.8261788487434387, 0.8338396549224854, 0.837141752243042, 0.8367455005645752], "val_loss": [2.24641489982605, 2.018679141998291, 1.13834810256958, 0.8344160318374634, 0.7541653513908386, 0.7047230005264282, 0.6396827101707458, 0.6257986426353455, 0.6088182330131531, 0.6054645776748657, 0.5685710310935974, 0.5378304719924927, 0.524763822555542, 0.5123010873794556, 0.5022688508033752, 0.500318706035614, 0.49832120537757874, 0.4885609447956085, 0.48709481954574585, 0.4843200743198395, 0.4867730438709259, 0.47406989336013794, 0.46729883551597595, 0.4665391445159912, 0.4612446427345276, 0.4452124834060669, 0.445354163646698, 0.4696853458881378, 0.43032366037368774, 0.4500889480113983, 0.44298818707466125, 0.4419659972190857], "val_accuracy": [0.4073333442211151, 0.4749999940395355, 0.6473333239555359, 0.6863333582878113, 0.7286666631698608, 0.750333309173584, 0.7583333253860474, 0.7536666393280029, 0.7620000243186951, 0.7773333191871643, 0.781000018119812, 0.7913333177566528, 0.7996666431427002, 0.8066666722297668, 0.8166666626930237, 0.812333345413208, 0.8109999895095825, 0.8140000104904175, 0.8190000057220459, 0.8299999833106995, 0.8203333616256714, 0.8270000219345093, 0.8370000123977661, 0.8376666903495789, 0.8383333086967468, 0.846666693687439, 0.847000002861023, 0.8370000123977661, 0.8453333377838135, 0.8353333473205566, 0.8443333506584167, 0.8453333377838135]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 9, 5, 4, 1, 2, 1, 1, 0], "tree_depth": 13}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 1], [0, 1], [0], [1], [0], [2], [0]], "fitness": -0.8197143077850342, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6124917268753052, 0.8819907903671265, 0.6857197880744934, 0.6471671462059021, 0.5854530334472656, 0.5321034789085388, 0.52090984582901, 0.4836488962173462, 0.4741641879081726, 0.47501280903816223, 0.4583878815174103, 0.4291771948337555, 0.4570349454879761, 0.43922531604766846, 0.42823293805122375, 0.43208062648773193, 0.45596203207969666, 0.42792943120002747, 0.4381219148635864, 0.457764208316803, 0.444129079580307], "accuracy": [0.48131024837493896, 0.6885483860969543, 0.7584202885627747, 0.7677981853485107, 0.785101056098938, 0.8109893202781677, 0.8153480291366577, 0.8239334225654602, 0.8284242749214172, 0.8337075710296631, 0.8446704745292664, 0.8403117060661316, 0.8424250483512878, 0.8438779711723328, 0.8433496356010437, 0.8473120927810669, 0.8475762605667114, 0.8555012345314026, 0.847840428352356, 0.841500461101532, 0.845859169960022], "val_loss": [1.0564360618591309, 0.6484466791152954, 0.5598230361938477, 0.536287784576416, 0.4993455410003662, 0.48014330863952637, 0.493152916431427, 0.4724508821964264, 0.4865550398826599, 0.5249219536781311, 0.4844907522201538, 0.5042113661766052, 0.5436051487922668, 0.580410897731781, 0.541179358959198, 0.6028866171836853, 0.6116656064987183, 0.5795786380767822, 0.6050921082496643, 0.6047902703285217, 0.5804150104522705], "val_accuracy": [0.6156666874885559, 0.7683333158493042, 0.7926666736602783, 0.7979999780654907, 0.8166666626930237, 0.8276666402816772, 0.8333333134651184, 0.8296666741371155, 0.8346666693687439, 0.82833331823349, 0.8379999995231628, 0.8349999785423279, 0.8353333473205566, 0.8450000286102295, 0.8376666903495789, 0.8453333377838135, 0.8450000286102295, 0.8403333425521851, 0.8416666388511658, 0.8423333168029785, 0.831333339214325]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [1, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 30], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 5, 3, 6, 8, 1, 2, 0, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 53, 99, 61, 1]], "fitness": -0.10028571635484695, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3091371059417725, 2.311558723449707, 2.3114688396453857, 2.312406539916992, 2.310547113418579, 2.3123550415039062, 2.3130414485931396, 2.314342737197876, 2.314937114715576, 2.3157272338867188, 2.3161683082580566, 2.3131227493286133, 2.317303419113159], "accuracy": [0.08942015469074249, 0.08968432247638702, 0.09232597798109055, 0.09272222965955734, 0.09787346422672272, 0.09549596905708313, 0.09800554811954498, 0.09377889335155487, 0.0956280529499054, 0.09668471664190292, 0.0944393053650856, 0.09589222073554993, 0.10130762308835983], "val_loss": [2.30942440032959, 2.30955171585083, 2.309706926345825, 2.3098676204681396, 2.3099937438964844, 2.3101048469543457, 2.310213327407837, 2.3102967739105225, 2.310393810272217, 2.3105578422546387, 2.310779333114624, 2.311051607131958, 2.311368703842163], "val_accuracy": [0.09000000357627869, 0.09233333170413971, 0.09300000220537186, 0.09366666525602341, 0.09566666930913925, 0.0963333323597908, 0.0963333323597908, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}, "mapping_values": [1, 9, 5, 4, 0, 10, 6, 4, 2, 2, 1, 1, 1, 8, 5, 3, 3], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 8], [0, 1, 0, 2], [42, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [10, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [8, 3, 3, 6, 8, 1, 4, 2, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 3, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30336856842041, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [2, 2, 0, 3], [16, 16], [0, 1], [0], [0], [23], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 2, 3, 6, 8, 1, 6, 1, 4, 2, 8, 9], [0, 0, 0, 3, 0, 4, 2, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(beta), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(beta, tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))))), alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 9, 5, 4, 2, 7, 4, 3, 1, 2, 1, 1, 1, 21, 12, 9, 5], "tree_depth": 20}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1], [0, 5, 8], [0, 2, 0, 3], [16, 16], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 0, 3, 6, 4, 5, 3, 5, 1, 8, 2, 8, 7, 2, 2, 3, 2, 9, 8], [0, 2, 5, 4, 7, 6, 2, 2, 0, 4, 2, 3], [0, 24, 2], [0, 1], [0], [1], [0]], "fitness": -0.09114285558462143, "mapping_values": [1, 9, 5, 4, 2, 4, 3, 1, 1, 31, 19, 12, 3, 2, 1, 1, 0], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.square(tf.math.multiply(tf.math.square(beta), grad)), grad)), grad)), tf.math.subtract(grad, tf.math.sqrt(tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), grad), beta)))), tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3102798461914062, 2.3098058700561523, 2.3097028732299805, 2.3100407123565674, 2.3103508949279785, 2.310163974761963], "accuracy": [0.0936468094587326, 0.09285431355237961, 0.09655263274908066, 0.09655263274908066, 0.09351472556591034, 0.09047681838274002], "val_loss": [2.30916690826416, 2.30916690826416, 2.30916690826416, 2.30916690826416, 2.30916690826416, 2.30916690826416], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]