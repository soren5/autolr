[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8657143115997314, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221940517425537, 1.8649659156799316, 1.3888185024261475, 1.0968866348266602, 0.9557854533195496, 0.8403026461601257, 0.7867875695228577, 0.7318803668022156, 0.6878564953804016, 0.6703730225563049, 0.6451295614242554, 0.6249130368232727, 0.597720742225647, 0.5836676359176636, 0.5715322494506836, 0.5534089207649231, 0.5397607088088989, 0.5214315056800842, 0.5141767263412476, 0.5084556341171265, 0.4978829026222229, 0.4810231924057007, 0.4664013683795929, 0.46569952368736267, 0.4640720784664154, 0.4500748813152313, 0.4435942471027374, 0.43064653873443604, 0.430725634098053, 0.4199398159980774, 0.4187732934951782, 0.4125506579875946, 0.4014250934123993, 0.395790159702301, 0.3925724923610687, 0.3836275339126587, 0.3857932388782501, 0.3727441430091858, 0.36885911226272583, 0.3612733483314514, 0.359917014837265, 0.35861924290657043, 0.3469046652317047, 0.3377378284931183, 0.34301477670669556, 0.33586186170578003, 0.3289584517478943, 0.31576022505760193, 0.3230132460594177, 0.31494247913360596, 0.3181559443473816, 0.3064286410808563, 0.30355167388916016, 0.3031119406223297, 0.2969529330730438, 0.2836240231990814, 0.28045687079429626, 0.2773624658584595, 0.2725687026977539, 0.276167094707489, 0.2773931622505188, 0.26758846640586853, 0.25655099749565125], "accuracy": [0.2727513015270233, 0.4950468838214874, 0.5754854083061218, 0.6181482076644897, 0.6557918190956116, 0.7005679607391357, 0.7194558382034302, 0.7375511527061462, 0.7541936039924622, 0.7547219395637512, 0.7720248103141785, 0.7781006693840027, 0.7829877138137817, 0.7881389260292053, 0.7947431206703186, 0.8050455451011658, 0.8064984679222107, 0.8170651197433472, 0.8216879963874817, 0.8211596608161926, 0.8208954930305481, 0.8302733898162842, 0.8358209133148193, 0.8378021121025085, 0.8302733898162842, 0.8459912538528442, 0.8405758738517761, 0.8485008478164673, 0.8514066934585571, 0.8544445633888245, 0.8473120927810669, 0.8552370667457581, 0.8595958352088928, 0.8599920868873596, 0.8615770936012268, 0.8647470474243164, 0.8654074668884277, 0.8628978729248047, 0.8696341514587402, 0.869502067565918, 0.8735966086387634, 0.8734645247459412, 0.8766345381736755, 0.8782195448875427, 0.8771628737449646, 0.8805969953536987, 0.8804649114608765, 0.8894465565681458, 0.8858803510665894, 0.8879936337471008, 0.8897107243537903, 0.8927486538887024, 0.8948619961738586, 0.8943336606025696, 0.8993527889251709, 0.896446943283081, 0.9031832218170166, 0.9013340473175049, 0.9014661312103271, 0.90423983335495, 0.9015982151031494, 0.9058248400688171, 0.9059569239616394], "val_loss": [2.036632776260376, 1.5189155340194702, 1.0550843477249146, 0.8460414409637451, 0.7534897327423096, 0.6950930953025818, 0.6478915810585022, 0.6116782426834106, 0.5865779519081116, 0.5659617781639099, 0.543644368648529, 0.532508373260498, 0.5146374702453613, 0.4960819482803345, 0.48253703117370605, 0.4772222936153412, 0.4678511619567871, 0.458935022354126, 0.4539884924888611, 0.43929174542427063, 0.4319949448108673, 0.4297183156013489, 0.4232414662837982, 0.4240835905075073, 0.4196171760559082, 0.4038936495780945, 0.40225324034690857, 0.39920490980148315, 0.3923434317111969, 0.39809542894363403, 0.3846358358860016, 0.3876027464866638, 0.38157323002815247, 0.3812243342399597, 0.3770023584365845, 0.3739193379878998, 0.36682650446891785, 0.36471113562583923, 0.3684479296207428, 0.3647674024105072, 0.3594634532928467, 0.36004793643951416, 0.35896411538124084, 0.3531704843044281, 0.3536854684352875, 0.35322806239128113, 0.34845104813575745, 0.3576138913631439, 0.3465026319026947, 0.34485098719596863, 0.34519433975219727, 0.3413347899913788, 0.33944353461265564, 0.3407624363899231, 0.3418479859828949, 0.33856770396232605, 0.33739522099494934, 0.33597806096076965, 0.333108127117157, 0.3345503509044647, 0.3335634171962738, 0.33146435022354126, 0.3330657184123993], "val_accuracy": [0.5429999828338623, 0.6523333191871643, 0.67166668176651, 0.6996666789054871, 0.7333333492279053, 0.7540000081062317, 0.7609999775886536, 0.7756666541099548, 0.7789999842643738, 0.7873333096504211, 0.8040000200271606, 0.7986666560173035, 0.8133333325386047, 0.8199999928474426, 0.8276666402816772, 0.8213333487510681, 0.8326666951179504, 0.8363333344459534, 0.8349999785423279, 0.8433333039283752, 0.8463333249092102, 0.8446666598320007, 0.8476666808128357, 0.8426666855812073, 0.8463333249092102, 0.859000027179718, 0.8560000061988831, 0.8576666712760925, 0.8603333234786987, 0.8550000190734863, 0.8610000014305115, 0.8576666712760925, 0.8643333315849304, 0.8610000014305115, 0.8650000095367432, 0.8643333315849304, 0.8696666955947876, 0.8709999918937683, 0.8656666874885559, 0.8700000047683716, 0.8726666569709778, 0.8726666569709778, 0.871666669845581, 0.8756666779518127, 0.8743333220481873, 0.8703333139419556, 0.8740000128746033, 0.8696666955947876, 0.8759999871253967, 0.878333330154419, 0.875333309173584, 0.8776666522026062, 0.878000020980835, 0.878333330154419, 0.8806666731834412, 0.8769999742507935, 0.8809999823570251, 0.8853333592414856, 0.8843333125114441, 0.878333330154419, 0.8826666474342346, 0.8846666812896729, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 7, 7, 5, 8, 6, 2, 6, 3, 5, 3, 9, 0, 1, 2, 0, 5, 8], [0, 0, 3, 2, 3, 0, 0, 2, 1, 0], [0, 66, 22, 99, 21, 80], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8534285426139832, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), grad), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.square(tf.math.multiply(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.subtract(tf.math.add(tf.math.negative(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(beta)))), alpha), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2938740253448486, 2.1911048889160156, 1.77483069896698, 1.358016014099121, 1.079460859298706, 0.9021618962287903, 0.8492240309715271, 0.7999697923660278, 0.7684341669082642, 0.7326363325119019, 0.6974820494651794, 0.6684269309043884, 0.6460363864898682, 0.6181063652038574, 0.6005632877349854, 0.5939143300056458, 0.5735688209533691, 0.5675770044326782, 0.5564296841621399, 0.5446802377700806, 0.5282878279685974, 0.5266997814178467, 0.513457179069519, 0.5058334469795227, 0.47834327816963196, 0.4843970537185669, 0.47533828020095825, 0.4528657793998718, 0.45131540298461914, 0.4526551365852356, 0.42914795875549316, 0.4198774993419647, 0.4254195988178253, 0.42113348841667175, 0.3936000466346741, 0.39927446842193604, 0.384827196598053, 0.38607072830200195, 0.3804270923137665, 0.3783967196941376, 0.376759797334671, 0.361469566822052], "accuracy": [0.12759213149547577, 0.3199048936367035, 0.43323206901550293, 0.5443138480186462, 0.635979413986206, 0.6641130447387695, 0.6923788189888, 0.7004358768463135, 0.6955488324165344, 0.7149649858474731, 0.7341170310974121, 0.7403249144554138, 0.7530049085617065, 0.763967752456665, 0.7651565074920654, 0.774798572063446, 0.778761088848114, 0.7823272943496704, 0.7882710099220276, 0.7906485199928284, 0.7994980812072754, 0.7915731072425842, 0.8070268034934998, 0.8043851256370544, 0.8121780753135681, 0.8141592741012573, 0.8141592741012573, 0.8264430165290833, 0.8239334225654602, 0.8253863453865051, 0.8347642421722412, 0.8412362933158875, 0.8404437899589539, 0.8385946154594421, 0.848368763923645, 0.8449346423149109, 0.8521991968154907, 0.854708731174469, 0.8506141901016235, 0.8527275323867798, 0.8552370667457581, 0.8564258217811584], "val_loss": [2.245680093765259, 2.020761251449585, 1.144345998764038, 0.8880069851875305, 0.7685939073562622, 0.724764347076416, 0.6658195853233337, 0.6707279682159424, 0.6525217294692993, 0.6016452312469482, 0.581390917301178, 0.555938184261322, 0.5428245067596436, 0.5441696643829346, 0.5382229685783386, 0.5201478004455566, 0.5053143501281738, 0.48854050040245056, 0.49105140566825867, 0.47401368618011475, 0.47400927543640137, 0.47905606031417847, 0.472339928150177, 0.4613956809043884, 0.44923168420791626, 0.44679027795791626, 0.4427064061164856, 0.43125611543655396, 0.4389178156852722, 0.42531031370162964, 0.4229757487773895, 0.4357019066810608, 0.4248719811439514, 0.42668938636779785, 0.4356862008571625, 0.4285259246826172, 0.4219149947166443, 0.4134346842765808, 0.4075927734375, 0.42408403754234314, 0.41297224164009094, 0.4177284240722656], "val_accuracy": [0.42366665601730347, 0.4503333270549774, 0.6499999761581421, 0.6976666450500488, 0.7233333587646484, 0.7363333106040955, 0.7476666569709778, 0.7319999933242798, 0.7676666378974915, 0.768666684627533, 0.7760000228881836, 0.777999997138977, 0.7940000295639038, 0.8013333082199097, 0.7976666688919067, 0.8083333373069763, 0.8226666450500488, 0.8256666660308838, 0.8213333487510681, 0.8333333134651184, 0.8373333215713501, 0.8276666402816772, 0.8333333134651184, 0.8349999785423279, 0.8489999771118164, 0.8476666808128357, 0.8519999980926514, 0.8556666374206543, 0.859666645526886, 0.8610000014305115, 0.856333315372467, 0.856333315372467, 0.8646666407585144, 0.859333336353302, 0.8560000061988831, 0.8619999885559082, 0.8666666746139526, 0.862666666507721, 0.8646666407585144, 0.8656666874885559, 0.8659999966621399, 0.8616666793823242]}, "mapping_values": [1, 10, 5, 5, 3, 29, 19, 10, 6, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 26}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8251428604125977, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4921413660049438, 0.788106381893158, 0.682306706905365, 0.615591287612915, 0.563458263874054, 0.5499705672264099, 0.5243387818336487, 0.47792091965675354, 0.46989598870277405, 0.472117155790329, 0.47094669938087463, 0.46105676889419556, 0.5032653212547302, 0.49993637204170227, 0.5196704864501953, 0.5508372783660889, 0.5427148938179016, 0.5592635273933411, 0.5106616616249084], "accuracy": [0.4842160940170288, 0.717870831489563, 0.7565711140632629, 0.7662131786346436, 0.789459764957428, 0.7935543656349182, 0.800290584564209, 0.8210275769233704, 0.8261788487434387, 0.8256505131721497, 0.8318583965301514, 0.8397833704948425, 0.8339717388153076, 0.8245938420295715, 0.8389908671379089, 0.807158887386322, 0.8208954930305481, 0.8141592741012573, 0.8313300609588623], "val_loss": [0.7809862494468689, 0.6320648789405823, 0.5743522047996521, 0.5424184799194336, 0.4976429045200348, 0.49857500195503235, 0.47510769963264465, 0.4859258532524109, 0.45919662714004517, 0.5192121863365173, 0.5278667211532593, 0.546805202960968, 0.5791285037994385, 0.5242705345153809, 0.5970832705497742, 0.5669930577278137, 0.5688658952713013, 0.6341561675071716, 0.6334201693534851], "val_accuracy": [0.7306666374206543, 0.7536666393280029, 0.7860000133514404, 0.7960000038146973, 0.8243333101272583, 0.815666675567627, 0.8240000009536743, 0.8349999785423279, 0.8443333506584167, 0.8379999995231628, 0.8383333086967468, 0.8423333168029785, 0.8429999947547913, 0.8510000109672546, 0.8363333344459534, 0.82833331823349, 0.8240000009536743, 0.8376666903495789, 0.8433333039283752]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [5], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 4, 4, 2, 1], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 20, 10, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)))), alpha), tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 3, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0], [0, 2, 3, 0, 9, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 2], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 4], [16, 99, 96, 99, 61, 14]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), sigma)))), alpha)), tf.math.sqrt(tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), grad)", "other_info": {"loss": [3.89245979729068e+17, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0944393053650856, 0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.4690067395111813e+18, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}, "mapping_values": [1, 1, 1, 0, 1, 7, 5, 2, 2, 2, 1, 1, 1, 23, 12, 11, 6], "tree_depth": 24}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 8, 5], [0, 1, 0, 2], [62, 39], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 2, 1, 6, 3, 8, 2], [0, 2, 0, 3, 2, 5, 0], [0, 27, 16, 0], [0, 0, 1], [0, 9], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [2, 3, 3, 6, 8, 1, 6, 1, 4, 2, 8, 4], [2, 7, 0, 1, 2, 4, 6, 3, 5, 5, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 2, 6, 3, 3, 2, 2, 2, 0, 1, 23, 12, 11, 2], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha))), tf.math.subtract(beta, tf.math.pow(grad, tf.math.add(grad, tf.math.sqrt(tf.math.pow(sigma, grad))))))), grad), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 2, 3, 3, 3], [0, 2, 0, 2], [39, 96], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 3, 0, 5, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 2, 6, 8, 1, 4, 3, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 6, 4, 2, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, alpha)))", "other_info": {"loss": [2.303631067276001, 2.3025906085968018, 2.3027729988098145, 2.334869384765625, 2557.871826171875, 2442144.75, 6566956032.0, 107493015420928.0], "accuracy": [0.09417514503002167, 0.10011887550354004, 0.09694888442754745, 0.09800554811954498, 0.09972262382507324, 0.09998679161071777, 0.09840179979801178, 0.10011887550354004], "val_loss": [2.3025848865509033, 2.3025870323181152, 2.30279278755188, 5.806760311126709, 26913.880859375, 48621404.0, 202797088768.0, 2932480457834496.0], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.10199999809265137, 0.10199999809265137, 0.10100000351667404, 0.09866666793823242, 0.1003333330154419, 0.09966666996479034]}}]