[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8711428642272949, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2219762802124023, 1.8569579124450684, 1.3871577978134155, 1.0820468664169312, 0.9312260746955872, 0.825706422328949, 0.770253598690033, 0.7171050310134888, 0.6808616518974304, 0.6532413363456726, 0.620844304561615, 0.6001307964324951, 0.5864424705505371, 0.5634787082672119, 0.5489712357521057, 0.5357562303543091, 0.5230008363723755, 0.507927656173706, 0.4900486469268799, 0.49094563722610474, 0.48337259888648987, 0.4646432101726532, 0.465999037027359, 0.4568231999874115, 0.4443897008895874, 0.4307492673397064, 0.4241425693035126, 0.4196719527244568, 0.41389331221580505, 0.4074036478996277, 0.39722079038619995, 0.39728912711143494, 0.3874247372150421, 0.3916468322277069, 0.3776094317436218, 0.3698989152908325, 0.3706892430782318, 0.3647579252719879, 0.35487014055252075, 0.3518836200237274, 0.33956268429756165, 0.35251596570014954, 0.33923494815826416, 0.33335080742836, 0.3271528482437134, 0.3265016973018646, 0.3189292550086975, 0.317949503660202, 0.31340304017066956, 0.30967476963996887, 0.3039214015007019, 0.29600319266319275, 0.2925383746623993, 0.2870742976665497, 0.28569310903549194, 0.28021708130836487, 0.28019586205482483, 0.2656683325767517], "accuracy": [0.2785629332065582, 0.5013868808746338, 0.5635979175567627, 0.6244881749153137, 0.6670188903808594, 0.6997754573822021, 0.7246070504188538, 0.7375511527061462, 0.7499669790267944, 0.7552502751350403, 0.7718927264213562, 0.77677983045578, 0.785101056098938, 0.7940827012062073, 0.7946110367774963, 0.7994980812072754, 0.8053097128868103, 0.8105930685997009, 0.8238013386726379, 0.8248580098152161, 0.8206313848495483, 0.8330471515655518, 0.8309338092803955, 0.8329150676727295, 0.8360850811004639, 0.8401796221733093, 0.8433496356010437, 0.8474441766738892, 0.852331280708313, 0.8535200357437134, 0.8601241707801819, 0.8597279191017151, 0.8584070801734924, 0.8556333184242249, 0.8615770936012268, 0.8602562546730042, 0.8638224601745605, 0.8673887252807617, 0.8716153502464294, 0.869502067565918, 0.8749174475669861, 0.8701624870300293, 0.8790120482444763, 0.8809932470321655, 0.8805969953536987, 0.8776912093162537, 0.8823140859603882, 0.8835028409957886, 0.8840311765670776, 0.8849557638168335, 0.8916919827461243, 0.8920882344245911, 0.8898428082466125, 0.8957865834236145, 0.893541157245636, 0.8971073627471924, 0.898428201675415, 0.901862382888794], "val_loss": [2.038325786590576, 1.5111430883407593, 1.0469599962234497, 0.8417667746543884, 0.7512772679328918, 0.6943275332450867, 0.6486450433731079, 0.6108646392822266, 0.5841913223266602, 0.5605010986328125, 0.5408915281295776, 0.5263187289237976, 0.5143085718154907, 0.5002440810203552, 0.492631196975708, 0.4811159372329712, 0.47331222891807556, 0.46274861693382263, 0.45986881852149963, 0.45317813754081726, 0.4430297911167145, 0.4347420334815979, 0.4323689341545105, 0.42522379755973816, 0.4217529296875, 0.41594114899635315, 0.41202542185783386, 0.40516653656959534, 0.4017903506755829, 0.403889000415802, 0.3964897394180298, 0.3985050916671753, 0.39360547065734863, 0.3925495147705078, 0.3857388496398926, 0.3879210352897644, 0.38369202613830566, 0.38056012988090515, 0.3803456127643585, 0.3770826458930969, 0.38111791014671326, 0.3690513074398041, 0.3706646263599396, 0.36959290504455566, 0.36918431520462036, 0.36654552817344666, 0.3635198175907135, 0.3662186563014984, 0.36026546359062195, 0.35659080743789673, 0.35905009508132935, 0.3583839535713196, 0.3576417565345764, 0.35285669565200806, 0.3540281653404236, 0.35169002413749695, 0.3534434735774994, 0.3495284914970398], "val_accuracy": [0.5339999794960022, 0.6579999923706055, 0.6779999732971191, 0.7026666402816772, 0.7296666502952576, 0.7450000047683716, 0.762666642665863, 0.7693333625793457, 0.7743333578109741, 0.7906666398048401, 0.796999990940094, 0.8096666932106018, 0.8096666932106018, 0.8106666803359985, 0.8223333358764648, 0.8236666917800903, 0.8223333358764648, 0.8326666951179504, 0.8349999785423279, 0.8396666646003723, 0.8420000076293945, 0.8476666808128357, 0.846666693687439, 0.8500000238418579, 0.8506666421890259, 0.8539999723434448, 0.8560000061988831, 0.8606666922569275, 0.8613333106040955, 0.8569999933242798, 0.8613333106040955, 0.8610000014305115, 0.8616666793823242, 0.8643333315849304, 0.8666666746139526, 0.8676666617393494, 0.8696666955947876, 0.8693333268165588, 0.8666666746139526, 0.8690000176429749, 0.8673333525657654, 0.8706666827201843, 0.8733333349227905, 0.8693333268165588, 0.875333309173584, 0.8700000047683716, 0.875333309173584, 0.875333309173584, 0.8766666650772095, 0.8759999871253967, 0.8759999871253967, 0.8759999871253967, 0.8793333172798157, 0.8763333559036255, 0.878333330154419, 0.8786666393280029, 0.8790000081062317, 0.8786666393280029]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.854285717010498, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292940855026245, 2.1883926391601562, 1.764357566833496, 1.384307861328125, 1.0592490434646606, 0.9366408586502075, 0.8471731543540955, 0.8385075926780701, 0.7693033218383789, 0.7494868636131287, 0.7086986899375916, 0.6970414519309998, 0.6554784774780273, 0.6457367539405823, 0.6133034229278564, 0.6085396409034729, 0.5957976579666138, 0.5801947116851807, 0.5711583495140076, 0.5522385239601135, 0.548173725605011, 0.5374748706817627, 0.516807496547699, 0.5150175094604492, 0.4965760409832001, 0.4989748001098633, 0.47178590297698975, 0.4717216491699219, 0.45730099081993103, 0.4412133991718292, 0.43968653678894043, 0.4231652319431305, 0.4182187616825104, 0.41000986099243164, 0.3994550108909607, 0.40357932448387146, 0.3938550353050232, 0.38206684589385986, 0.3888435661792755, 0.3737320601940155, 0.37709805369377136, 0.35428136587142944, 0.353172242641449], "accuracy": [0.1310262829065323, 0.32320696115493774, 0.44023245573043823, 0.5315017700195312, 0.6324131488800049, 0.6588297486305237, 0.6900013089179993, 0.6985867023468018, 0.7040021419525146, 0.7160216569900513, 0.7235503792762756, 0.7354378700256348, 0.7466648817062378, 0.7485140562057495, 0.7670056819915771, 0.7622507214546204, 0.7712323069572449, 0.780610203742981, 0.7720248103141785, 0.7869502305984497, 0.796328067779541, 0.7935543656349182, 0.8033285140991211, 0.8013472557067871, 0.8095363974571228, 0.8112534880638123, 0.8177255392074585, 0.8235371708869934, 0.8271034359931946, 0.833179235458374, 0.83119797706604, 0.8383304476737976, 0.837141752243042, 0.8442742228507996, 0.8488970994949341, 0.8416325449943542, 0.8482366800308228, 0.8506141901016235, 0.8531237840652466, 0.8544445633888245, 0.8543124794960022, 0.8607845902442932, 0.8650112152099609], "val_loss": [2.2456047534942627, 2.0139353275299072, 1.1398416757583618, 0.8746854662895203, 0.780450701713562, 0.7329212427139282, 0.6875908374786377, 0.654837429523468, 0.6548288464546204, 0.6434129476547241, 0.5889509916305542, 0.5698207020759583, 0.5481238961219788, 0.5445326566696167, 0.5393674969673157, 0.528777539730072, 0.5170449018478394, 0.49844953417778015, 0.49586573243141174, 0.49291613698005676, 0.4853408634662628, 0.4708567261695862, 0.46804097294807434, 0.46164533495903015, 0.4458627998828888, 0.4450039863586426, 0.4454995095729828, 0.4377160668373108, 0.41865435242652893, 0.4158666729927063, 0.41968396306037903, 0.4008595049381256, 0.39599913358688354, 0.3921818733215332, 0.39791926741600037, 0.39878568053245544, 0.38174673914909363, 0.3846967816352844, 0.39476504921913147, 0.38428032398223877, 0.37772127985954285, 0.3876045346260071, 0.3852272629737854], "val_accuracy": [0.4126666784286499, 0.4729999899864197, 0.6499999761581421, 0.684333324432373, 0.7066666483879089, 0.7353333234786987, 0.7319999933242798, 0.7443333268165588, 0.7523333430290222, 0.7486666440963745, 0.7606666684150696, 0.7710000276565552, 0.7906666398048401, 0.793666660785675, 0.7923333048820496, 0.7990000247955322, 0.7986666560173035, 0.8076666593551636, 0.8169999718666077, 0.809333324432373, 0.8136666417121887, 0.8316666483879089, 0.831333339214325, 0.8333333134651184, 0.8410000205039978, 0.8360000252723694, 0.843666672706604, 0.8503333330154419, 0.8579999804496765, 0.8519999980926514, 0.8513333201408386, 0.859666645526886, 0.8586666584014893, 0.8616666793823242, 0.859000027179718, 0.8573333621025085, 0.8656666874885559, 0.8713333606719971, 0.8696666955947876, 0.8640000224113464, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8302857279777527, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6587271690368652, 1.001542329788208, 0.7205345630645752, 0.6748659610748291, 0.6248581409454346, 0.6089532375335693, 0.5853280425071716, 0.5598001480102539, 0.5329049825668335, 0.5306088328361511, 0.5312440395355225, 0.5013158917427063, 0.536220133304596, 0.5019015073776245, 0.5177844166755676, 0.5188835859298706, 0.4994806945323944, 0.512790322303772, 0.5156892538070679, 0.5641375780105591, 0.5675197839736938, 0.572411835193634, 0.5424095988273621], "accuracy": [0.4831594228744507, 0.6534143686294556, 0.7433628439903259, 0.7555144429206848, 0.7688548564910889, 0.7738739848136902, 0.7829877138137817, 0.7923656105995178, 0.8064984679222107, 0.8095363974571228, 0.8128384351730347, 0.8216879963874817, 0.8119139075279236, 0.8190463781356812, 0.8131026029586792, 0.8284242749214172, 0.8235371708869934, 0.8274996876716614, 0.8219521641731262, 0.8203672170639038, 0.8165367841720581, 0.8152159452438354, 0.8133667707443237], "val_loss": [1.0686283111572266, 0.6340252161026001, 0.5889278650283813, 0.552011251449585, 0.5207890868186951, 0.5269010066986084, 0.4883889853954315, 0.49923771619796753, 0.5215597152709961, 0.5021378397941589, 0.48657485842704773, 0.527521014213562, 0.5375847220420837, 0.523065447807312, 0.5494611263275146, 0.5195243954658508, 0.5573384761810303, 0.5714126229286194, 0.593518853187561, 0.6338104605674744, 0.6693766117095947, 0.5675130486488342, 0.6455312371253967], "val_accuracy": [0.6133333444595337, 0.746999979019165, 0.7833333611488342, 0.79666668176651, 0.8183333277702332, 0.824999988079071, 0.8263333439826965, 0.8336666822433472, 0.82833331823349, 0.831333339214325, 0.831333339214325, 0.8339999914169312, 0.8339999914169312, 0.8289999961853027, 0.8370000123977661, 0.8399999737739563, 0.8396666646003723, 0.8403333425521851, 0.8276666402816772, 0.8339999914169312, 0.8213333487510681, 0.8259999752044678, 0.824999988079071]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 2, 3, 0, 3, 1, 6, 0, 3, 9], [0, 1, 0, 2, 2, 0], [39, 39, 27, 29], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [8, 2, 3, 0, 9, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 2, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [68, 66, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 10, 6, 4, 7, 5, 2, 2, 2, 1, 1, 1, 12, 6, 6, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.negative(tf.math.multiply(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303159236907959, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [13, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 33, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 0, 21, 11, 10, 5], "tree_depth": 17}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 83], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 2, 2, 3, 5], [0, 2, 0, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 3, 6, 8, 1, 4, 9, 4, 2, 2], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [83, 99, 14, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 3, 11, 6, 5, 2, 2, 1, 1, 1, 14, 8, 6, 5], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(grad), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [5, 2, 3, 5, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [6, 2, 3, 0, 2, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [3], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 5, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 2, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09514285624027252, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.square(sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.310215473175049, 2.3094263076782227, 2.3091464042663574, 2.3092563152313232, 2.3100364208221436, 2.31044602394104], "accuracy": [0.09272222965955734, 0.09417514503002167, 0.09140139818191528, 0.09589222073554993, 0.09589222073554993, 0.09126931428909302], "val_loss": [2.3087375164031982, 2.3087375164031982, 2.3087375164031982, 2.3087375164031982, 2.3087375164031982, 2.3087375164031982], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 2, 1, 1, 0, 11, 6, 5, 4], "tree_depth": 12}]