[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8637142777442932, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222097396850586, 1.8599296808242798, 1.3917549848556519, 1.0825740098953247, 0.9429501891136169, 0.8547665476799011, 0.7840081453323364, 0.7377761006355286, 0.6957834362983704, 0.6645923852920532, 0.6331608295440674, 0.614533543586731, 0.6028045415878296, 0.5765748023986816, 0.5695070028305054, 0.5590586066246033, 0.5438398122787476, 0.5308346748352051, 0.5175756812095642, 0.5100991129875183, 0.49351605772972107, 0.48003411293029785, 0.4713471233844757, 0.47607070207595825, 0.45831987261772156, 0.45411697030067444, 0.4503222107887268, 0.4411672353744507, 0.4328950345516205, 0.4300479590892792, 0.4126772880554199, 0.41624364256858826, 0.4117962718009949, 0.40030181407928467, 0.3898630738258362, 0.3868882954120636, 0.3837253451347351, 0.379116415977478, 0.3685148060321808, 0.36631685495376587, 0.36455684900283813, 0.3537071645259857, 0.34275028109550476, 0.3449517786502838], "accuracy": [0.272090882062912, 0.4974243938922882, 0.5632016658782959, 0.6250165104866028, 0.6647734642028809, 0.6935675740242004, 0.7154933214187622, 0.7357020378112793, 0.7448157668113708, 0.7619865536689758, 0.7726852297782898, 0.7802139520645142, 0.7815347909927368, 0.7895918488502502, 0.7938185334205627, 0.7969884872436523, 0.8067626357078552, 0.8146876096725464, 0.813498854637146, 0.816008448600769, 0.817989706993103, 0.8309338092803955, 0.8276317715644836, 0.8300092220306396, 0.8355567455291748, 0.8338396549224854, 0.8355567455291748, 0.8417646288871765, 0.8461233377456665, 0.8471800088882446, 0.8494254350662231, 0.8536521196365356, 0.8521991968154907, 0.8564258217811584, 0.860652506351471, 0.8598600029945374, 0.8614450097084045, 0.8623695969581604, 0.8668603897094727, 0.8667283058166504, 0.8697662353515625, 0.8709549307823181, 0.8766345381736755, 0.8770307898521423], "val_loss": [2.0377745628356934, 1.5128382444381714, 1.045542597770691, 0.8440240621566772, 0.7589104771614075, 0.7017039656639099, 0.6567308902740479, 0.6146281957626343, 0.5878316164016724, 0.569149374961853, 0.5469487905502319, 0.5334833264350891, 0.51971834897995, 0.5047202706336975, 0.49278199672698975, 0.4850582182407379, 0.47257936000823975, 0.4671361446380615, 0.452877938747406, 0.4497808814048767, 0.4433792233467102, 0.43209439516067505, 0.4299255311489105, 0.4247763752937317, 0.4217143952846527, 0.4188828468322754, 0.40541598200798035, 0.41119515895843506, 0.39826318621635437, 0.39896509051322937, 0.3958638906478882, 0.3902895152568817, 0.38203734159469604, 0.3840901553630829, 0.3787757158279419, 0.3735428750514984, 0.3679467439651489, 0.3687152862548828, 0.3632650077342987, 0.3653451204299927, 0.35991132259368896, 0.357898473739624, 0.35655727982521057, 0.35571223497390747], "val_accuracy": [0.5503333210945129, 0.6489999890327454, 0.6880000233650208, 0.7053333520889282, 0.7273333072662354, 0.7440000176429749, 0.7543333172798157, 0.7753333449363708, 0.7803333401679993, 0.7900000214576721, 0.796999990940094, 0.8006666898727417, 0.8103333115577698, 0.8096666932106018, 0.8163333535194397, 0.8270000219345093, 0.8270000219345093, 0.8226666450500488, 0.8309999704360962, 0.8393333554267883, 0.8363333344459534, 0.8429999947547913, 0.8386666774749756, 0.8423333168029785, 0.8476666808128357, 0.8483333587646484, 0.8496666550636292, 0.8433333039283752, 0.8536666631698608, 0.8539999723434448, 0.8583333492279053, 0.8556666374206543, 0.8610000014305115, 0.8606666922569275, 0.8610000014305115, 0.8663333058357239, 0.8666666746139526, 0.8669999837875366, 0.8740000128746033, 0.8693333268165588, 0.8703333139419556, 0.8703333139419556, 0.8713333606719971, 0.8736666440963745]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1], [0, 2, 9], [0], [0, 26], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8602856993675232, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293212652206421, 2.1898794174194336, 1.7748501300811768, 1.3402453660964966, 1.1092941761016846, 0.9198075532913208, 0.832863986492157, 0.796676754951477, 0.7455158233642578, 0.7155364751815796, 0.7040729522705078, 0.6821579337120056, 0.6386604309082031, 0.6012529730796814, 0.5976903438568115, 0.5835453271865845, 0.5810930728912354, 0.5599868893623352, 0.5519078969955444, 0.531912088394165, 0.5318393111228943, 0.5255740284919739, 0.5144045352935791, 0.49641290307044983, 0.4894193708896637, 0.4751005470752716, 0.4711761474609375, 0.45872703194618225, 0.44483253359794617, 0.4432964026927948, 0.42942994832992554, 0.41694730520248413, 0.4134332537651062, 0.4065571129322052, 0.40149539709091187, 0.38790395855903625, 0.38513508439064026, 0.38872960209846497, 0.38687366247177124, 0.3804301917552948, 0.3767199218273163, 0.3591975271701813, 0.3560065031051636, 0.35886791348457336, 0.34939542412757874, 0.35818251967430115, 0.3503159284591675, 0.3380117416381836, 0.33627644181251526, 0.3383025825023651, 0.3285467326641083, 0.3154474198818207, 0.31963199377059937, 0.3154022693634033, 0.31171882152557373, 0.30826520919799805, 0.30823609232902527, 0.30262258648872375, 0.2898460030555725, 0.2909015417098999, 0.28822973370552063, 0.3099329471588135], "accuracy": [0.13049794733524323, 0.3269053101539612, 0.4387795627117157, 0.5425967574119568, 0.6324131488800049, 0.6641130447387695, 0.6934354901313782, 0.7003037929534912, 0.7128516435623169, 0.7260599732398987, 0.7327961921691895, 0.7417778372764587, 0.748778223991394, 0.7721568942070007, 0.7671377658843994, 0.7696473598480225, 0.7791573405265808, 0.7841764688491821, 0.7836481332778931, 0.7964601516723633, 0.7918372750282288, 0.7979130744934082, 0.8041210174560547, 0.8064984679222107, 0.8104609847068787, 0.8128384351730347, 0.8162726163864136, 0.8260467648506165, 0.8259146809577942, 0.8276317715644836, 0.8334434032440186, 0.8384625315666199, 0.8411042094230652, 0.8404437899589539, 0.8457271456718445, 0.8496896028518677, 0.8471800088882446, 0.847840428352356, 0.8470479249954224, 0.8502179384231567, 0.8564258217811584, 0.8610487580299377, 0.8603883385658264, 0.8580108284950256, 0.8644828796386719, 0.8647470474243164, 0.8614450097084045, 0.8692378997802734, 0.8669924736022949, 0.8681812286376953, 0.8685774803161621, 0.8757099509239197, 0.8754457831382751, 0.8725399374961853, 0.8765024542808533, 0.8848236799240112, 0.8795403242111206, 0.878879964351654, 0.8849557638168335, 0.8836349248886108, 0.8828424215316772, 0.8821820020675659], "val_loss": [2.2455482482910156, 2.023493766784668, 1.1536833047866821, 0.9021094441413879, 0.7715408802032471, 0.7181363105773926, 0.6664332747459412, 0.6560128331184387, 0.6435877084732056, 0.612733006477356, 0.5984042882919312, 0.5704588294029236, 0.5426401495933533, 0.5366525053977966, 0.535991370677948, 0.5300927758216858, 0.5128846764564514, 0.5221571326255798, 0.5082277655601501, 0.5086724162101746, 0.4989612102508545, 0.5035616159439087, 0.4993596076965332, 0.47653210163116455, 0.47895926237106323, 0.4689466059207916, 0.4735493063926697, 0.46487346291542053, 0.4457375109195709, 0.439976304769516, 0.4399479925632477, 0.4359140992164612, 0.43282243609428406, 0.4186948239803314, 0.42159318923950195, 0.42224177718162537, 0.42161697149276733, 0.42768144607543945, 0.4070050120353699, 0.4069302976131439, 0.41801995038986206, 0.4172036051750183, 0.4110381603240967, 0.4364548623561859, 0.4477812945842743, 0.4413278102874756, 0.4365032911300659, 0.4068799614906311, 0.42191413044929504, 0.43118709325790405, 0.4242568016052246, 0.42116478085517883, 0.4092071056365967, 0.4223492443561554, 0.4422530233860016, 0.4541090428829193, 0.44724488258361816, 0.4247889816761017, 0.4172705411911011, 0.423601895570755, 0.42967769503593445, 0.4260583221912384], "val_accuracy": [0.42800000309944153, 0.4620000123977661, 0.6359999775886536, 0.6893333196640015, 0.7116666436195374, 0.7396666407585144, 0.7436666488647461, 0.7413333058357239, 0.7576666474342346, 0.7663333415985107, 0.7673333287239075, 0.7639999985694885, 0.7893333435058594, 0.7896666526794434, 0.7960000038146973, 0.7956666946411133, 0.8003333210945129, 0.8050000071525574, 0.8033333420753479, 0.8046666383743286, 0.8216666579246521, 0.8230000138282776, 0.8149999976158142, 0.8236666917800903, 0.8286666870117188, 0.8326666951179504, 0.8389999866485596, 0.8433333039283752, 0.8453333377838135, 0.8463333249092102, 0.8506666421890259, 0.8473333120346069, 0.8463333249092102, 0.8506666421890259, 0.8579999804496765, 0.8610000014305115, 0.8519999980926514, 0.8543333411216736, 0.8556666374206543, 0.8560000061988831, 0.8613333106040955, 0.8600000143051147, 0.8619999885559082, 0.8543333411216736, 0.8633333444595337, 0.859333336353302, 0.8560000061988831, 0.8659999966621399, 0.8669999837875366, 0.8643333315849304, 0.8669999837875366, 0.8653333187103271, 0.8646666407585144, 0.8693333268165588, 0.8679999709129333, 0.8686666488647461, 0.8726666569709778, 0.8709999918937683, 0.8706666827201843, 0.8723333477973938, 0.8700000047683716, 0.871666669845581]}, "mapping_values": [1, 10, 5, 5, 3, 4, 3, 1, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8234285712242126, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4952518939971924, 0.8016988039016724, 0.6769433617591858, 0.6301553249359131, 0.5776093602180481, 0.5323127508163452, 0.49753350019454956, 0.4666183590888977, 0.4946160912513733, 0.508208155632019, 0.4998367726802826, 0.49997562170028687, 0.4921528100967407, 0.5010462999343872, 0.5087740421295166, 0.540290117263794, 0.5946272015571594], "accuracy": [0.481838583946228, 0.7103421092033386, 0.7536653280258179, 0.7619865536689758, 0.7832518815994263, 0.8076872229576111, 0.8240655064582825, 0.832650899887085, 0.8301413059234619, 0.8252542614936829, 0.8123101592063904, 0.8323867321014404, 0.8216879963874817, 0.8321225643157959, 0.8238013386726379, 0.8341038227081299, 0.8241975903511047], "val_loss": [0.7586422562599182, 0.5970471501350403, 0.5199674367904663, 0.4810559153556824, 0.48570069670677185, 0.4751930236816406, 0.46722742915153503, 0.46095117926597595, 0.514288067817688, 0.47486263513565063, 0.4648430049419403, 0.5385876297950745, 0.49374085664749146, 0.539301335811615, 0.5101597309112549, 0.6076750755310059, 0.6014806032180786], "val_accuracy": [0.7120000123977661, 0.7829999923706055, 0.7986666560173035, 0.8180000185966492, 0.8153333067893982, 0.8256666660308838, 0.8376666903495789, 0.8376666903495789, 0.8396666646003723, 0.8373333215713501, 0.8389999866485596, 0.8539999723434448, 0.8516666889190674, 0.8413333296775818, 0.8519999980926514, 0.8486666679382324, 0.8493333458900452]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 3, 1, 3, 5, 1, 4, 0, 0, 7, 5, 4, 3, 0, 2, 9, 9, 2], [0, 0, 1, 0, 2, 1, 1, 1, 2, 3, 3], [83, 63, 27, 28, 44], [0, 1, 1, 1, 1], [5, 3, 5], [0, 5], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.pow(tf.math.negative(tf.math.negative(grad)), tf.math.add(alpha, tf.math.square(tf.math.pow(alpha, alpha)))), grad)), tf.math.multiply(tf.math.negative(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.add(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11953506618738174, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 30, 19, 11, 5, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 17}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 3, 3, 0, 3, 5], [3, 2, 1, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 3, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 0, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(grad, tf.math.multiply(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(sigma, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma)), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 1], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 2, 2, 3, 9], [0, 2, 2, 3], [16, 30], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 5, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 2, 3, 1, 2, 4], [16, 99, 10, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 11, 6, 5, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11517632752656937, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 3, 1, 3, 8], [0, 1, 3, 0, 0], [39, 39, 78], [0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5], [3, 5, 5], [0], [0, 1], [0], [0], [0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 3, 7, 5, 0, 0, 8, 9, 7, 7, 0, 6], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [40, 97, 65, 0, 83]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 6, 3, 3, 0, 2, 1, 1, 1, 17, 12, 5, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(tf.math.sqrt(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [5514348.0, 104492032.0, 487420128.0, 1364855424.0, 2903798272.0, 5284990464.0], "accuracy": [0.0944393053650856, 0.10236428678035736, 0.09642054885625839, 0.09760929644107819, 0.09602430462837219, 0.10342095047235489], "val_loss": [25221120.0, 201613792.0, 680275968.0, 1612307200.0, 3148805632.0, 5440859136.0], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]