[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8668571710586548, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.226318597793579, 1.874582290649414, 1.3988940715789795, 1.0961147546768188, 0.940508246421814, 0.8445172905921936, 0.7749906182289124, 0.7206377983093262, 0.6848815679550171, 0.6621628999710083, 0.6458467841148376, 0.6077765226364136, 0.5974469780921936, 0.5752692222595215, 0.5559007525444031, 0.5371960401535034, 0.5302228331565857, 0.517064094543457, 0.5109549760818481, 0.5051710605621338, 0.48879188299179077, 0.48617586493492126, 0.47429022192955017, 0.4713452160358429, 0.45129889249801636, 0.44143810868263245, 0.44198065996170044, 0.4361163079738617, 0.4300636649131775, 0.42007723450660706, 0.41548800468444824, 0.4048871099948883, 0.39726266264915466, 0.3962915241718292, 0.3855895698070526, 0.37623026967048645, 0.371891051530838, 0.3722735345363617, 0.3621089458465576, 0.36097535490989685, 0.3633306324481964], "accuracy": [0.27063795924186707, 0.4873860776424408, 0.5620129704475403, 0.6153744459152222, 0.6664905548095703, 0.7008321285247803, 0.7231541275978088, 0.7391361594200134, 0.7518161535263062, 0.757099449634552, 0.767930269241333, 0.7807422876358032, 0.7854973077774048, 0.7928939461708069, 0.7960638999938965, 0.8092722296714783, 0.8038568496704102, 0.8150838613510132, 0.8207634687423706, 0.8193105459213257, 0.8219521641731262, 0.8277638554573059, 0.8301413059234619, 0.8294808864593506, 0.8405758738517761, 0.8454629778862, 0.8405758738517761, 0.8433496356010437, 0.8467837572097778, 0.8488970994949341, 0.8516708612442017, 0.8576145768165588, 0.8580108284950256, 0.852859616279602, 0.8665962219238281, 0.8650112152099609, 0.8667283058166504, 0.8669924736022949, 0.8708229064941406, 0.8729361891746521, 0.8696341514587402], "val_loss": [2.046147346496582, 1.5252994298934937, 1.0489978790283203, 0.8348649144172668, 0.7423615455627441, 0.6864202618598938, 0.6390093564987183, 0.6042168140411377, 0.5767674446105957, 0.5571034550666809, 0.5401344895362854, 0.5271573066711426, 0.5089147686958313, 0.4962973892688751, 0.48384419083595276, 0.4713093936443329, 0.46626490354537964, 0.4554150104522705, 0.4581678807735443, 0.446336954832077, 0.4388006925582886, 0.4306323230266571, 0.42289474606513977, 0.41586625576019287, 0.4137677550315857, 0.40880900621414185, 0.40269312262535095, 0.4041293263435364, 0.39972618222236633, 0.3959037661552429, 0.39486947655677795, 0.3839260935783386, 0.38331055641174316, 0.37881243228912354, 0.3768921196460724, 0.37506771087646484, 0.37630510330200195, 0.36935287714004517, 0.36640864610671997, 0.36577799916267395, 0.3701654076576233], "val_accuracy": [0.5519999861717224, 0.6456666588783264, 0.6923333406448364, 0.7113333344459534, 0.7369999885559082, 0.7566666603088379, 0.7730000019073486, 0.7760000228881836, 0.7873333096504211, 0.8016666769981384, 0.8083333373069763, 0.8116666674613953, 0.8253333568572998, 0.8230000138282776, 0.8286666870117188, 0.8346666693687439, 0.8339999914169312, 0.8433333039283752, 0.8296666741371155, 0.8410000205039978, 0.847000002861023, 0.8443333506584167, 0.8473333120346069, 0.8496666550636292, 0.8476666808128357, 0.8523333072662354, 0.8543333411216736, 0.8543333411216736, 0.8526666760444641, 0.8539999723434448, 0.8513333201408386, 0.8583333492279053, 0.8573333621025085, 0.862333357334137, 0.8633333444595337, 0.8666666746139526, 0.8600000143051147, 0.8636666536331177, 0.8659999966621399, 0.8663333058357239, 0.8613333106040955]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8588571548461914, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.295095682144165, 2.1913928985595703, 1.7689160108566284, 1.3487892150878906, 1.055625319480896, 0.8996713757514954, 0.8340849876403809, 0.7863627076148987, 0.7395378351211548, 0.7199321389198303, 0.6962647438049316, 0.6596636772155762, 0.6382845044136047, 0.6150219440460205, 0.5878185033798218, 0.5716050863265991, 0.5776361227035522, 0.5550596714019775, 0.5445698499679565, 0.5243986248970032, 0.5170168280601501, 0.5061765313148499, 0.5044796466827393, 0.4940192699432373, 0.47846531867980957, 0.47366783022880554, 0.4730662405490875, 0.4614728093147278, 0.45022955536842346, 0.45678889751434326, 0.4404807388782501, 0.4354099631309509, 0.4157201945781708, 0.42197099328041077, 0.4167344570159912, 0.40843507647514343, 0.39893096685409546, 0.4098624289035797, 0.4068150222301483, 0.39306139945983887, 0.3737996816635132, 0.38401150703430176, 0.38088759779930115, 0.36343416571617126, 0.3677692711353302, 0.34687885642051697, 0.35337594151496887, 0.3460524082183838], "accuracy": [0.1220446452498436, 0.3273015320301056, 0.4333641529083252, 0.5385021567344666, 0.6472064256668091, 0.6641130447387695, 0.6922467350959778, 0.7074362635612488, 0.7082287669181824, 0.7240787148475647, 0.7371549606323242, 0.7446836829185486, 0.7584202885627747, 0.7557786107063293, 0.7777044177055359, 0.7779685854911804, 0.7770439982414246, 0.787082314491272, 0.7876105904579163, 0.7972526550292969, 0.8043851256370544, 0.8054417967796326, 0.8045172095298767, 0.8080834746360779, 0.8136309385299683, 0.8129705190658569, 0.8137630224227905, 0.8252542614936829, 0.8252542614936829, 0.8185180425643921, 0.8327829837799072, 0.8338396549224854, 0.8392550349235535, 0.8384625315666199, 0.839519202709198, 0.841500461101532, 0.8487650156021118, 0.8424250483512878, 0.843481719493866, 0.8482366800308228, 0.8525954484939575, 0.848368763923645, 0.8512746095657349, 0.86118084192276, 0.8636903762817383, 0.8650112152099609, 0.8619733452796936, 0.8652753829956055], "val_loss": [2.2461843490600586, 2.022916316986084, 1.1434882879257202, 0.9261953234672546, 0.777631938457489, 0.7247516512870789, 0.6905154585838318, 0.6598764657974243, 0.6296531558036804, 0.6105031371116638, 0.5735859870910645, 0.5482850074768066, 0.5337395668029785, 0.5197990536689758, 0.519680917263031, 0.5247071385383606, 0.5098456740379333, 0.5004340410232544, 0.49485230445861816, 0.47977137565612793, 0.4736340641975403, 0.47688809037208557, 0.4646647274494171, 0.45774540305137634, 0.4509929120540619, 0.4451322555541992, 0.4477930963039398, 0.4320019483566284, 0.43296411633491516, 0.4302767217159271, 0.43329983949661255, 0.42864346504211426, 0.4375856816768646, 0.4309225380420685, 0.4364185929298401, 0.4183374047279358, 0.4079170823097229, 0.42423364520072937, 0.41317129135131836, 0.4104737937450409, 0.40934059023857117, 0.4131793677806854, 0.4121112525463104, 0.41808021068573, 0.4258064925670624, 0.412319540977478, 0.41717249155044556, 0.4321414828300476], "val_accuracy": [0.4283333420753479, 0.47833332419395447, 0.6579999923706055, 0.6959999799728394, 0.715666651725769, 0.7303333282470703, 0.7183333039283752, 0.7513333559036255, 0.7670000195503235, 0.7680000066757202, 0.7760000228881836, 0.7856666445732117, 0.7926666736602783, 0.8069999814033508, 0.8019999861717224, 0.8046666383743286, 0.8116666674613953, 0.8086666464805603, 0.8220000267028809, 0.8303333520889282, 0.8216666579246521, 0.8266666531562805, 0.831333339214325, 0.8320000171661377, 0.847000002861023, 0.843666672706604, 0.840666651725769, 0.8486666679382324, 0.8476666808128357, 0.8510000109672546, 0.8546666502952576, 0.8513333201408386, 0.8486666679382324, 0.856333315372467, 0.8616666793823242, 0.8656666874885559, 0.8560000061988831, 0.8573333621025085, 0.8669999837875366, 0.8633333444595337, 0.8669999837875366, 0.862666666507721, 0.8706666827201843, 0.8686666488647461, 0.8646666407585144, 0.8650000095367432, 0.8673333525657654, 0.8679999709129333]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 4], [0, 5], [0], [1], [0], [2], [0]], "fitness": -0.8322857022285461, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5643017292022705, 0.8535023331642151, 0.6945626139640808, 0.6427866220474243, 0.5864765644073486, 0.5993906259536743, 0.5633276700973511, 0.5601601004600525, 0.5472895503044128, 0.5506788492202759, 0.5533168911933899, 0.5314890742301941, 0.5050101280212402, 0.4878810942173004, 0.49634817242622375, 0.48559650778770447, 0.5134411454200745, 0.5120391845703125, 0.47833746671676636, 0.5431187748908997, 0.5563503503799438, 0.5491819381713867, 0.6162980198860168, 0.6029761433601379, 0.6790436506271362, 0.6044222712516785], "accuracy": [0.4955752193927765, 0.7020208835601807, 0.7442874312400818, 0.7586844563484192, 0.785629391670227, 0.7778365015983582, 0.7874785661697388, 0.7957997918128967, 0.7942147850990295, 0.8025360107421875, 0.8025360107421875, 0.807158887386322, 0.8055738806724548, 0.822348415851593, 0.8256505131721497, 0.8224804997444153, 0.8186501264572144, 0.8327829837799072, 0.8308017253875732, 0.8099326491355896, 0.8150838613510132, 0.8235371708869934, 0.7858935594558716, 0.8063663840293884, 0.7938185334205627, 0.809140145778656], "val_loss": [0.9281442165374756, 0.622822105884552, 0.5595591068267822, 0.5181037783622742, 0.5001934766769409, 0.4962751567363739, 0.49280786514282227, 0.49914705753326416, 0.5089380145072937, 0.5572006106376648, 0.5329670310020447, 0.5060431957244873, 0.5660702586174011, 0.5564387440681458, 0.5211215019226074, 0.52323317527771, 0.5403250455856323, 0.5109566450119019, 0.5344285368919373, 0.5964803099632263, 0.5778325796127319, 0.6350411176681519, 0.5939303636550903, 0.6625062227249146, 0.5991252660751343, 0.6622108817100525], "val_accuracy": [0.6996666789054871, 0.7689999938011169, 0.784333348274231, 0.8153333067893982, 0.8216666579246521, 0.8213333487510681, 0.8149999976158142, 0.8293333053588867, 0.8173333406448364, 0.8266666531562805, 0.8213333487510681, 0.8226666450500488, 0.8336666822433472, 0.8403333425521851, 0.8403333425521851, 0.8420000076293945, 0.8376666903495789, 0.8450000286102295, 0.8296666741371155, 0.8276666402816772, 0.8496666550636292, 0.8159999847412109, 0.8230000138282776, 0.8306666612625122, 0.8180000185966492, 0.8363333344459534]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 8, 3], [0, 1, 0, 2], [25, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 5, 0, 4], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0, 1], [32, 99, 27, 99, 61, 1]], "fitness": -0.1128571406006813, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha), tf.math.add(tf.math.sqrt(tf.math.square(tf.math.negative(beta))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [84.74591064453125, 97265.0546875, 70845.9140625, 118912.453125, 4.38682746887207, 6.558475494384766, 14.39242172241211, 88.13941955566406], "accuracy": [0.10130762308835983, 0.1022322028875351, 0.10659094154834747, 0.11319508403539658, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [332.1658020019531, 3966.39501953125, 45686.84765625, 3.857943296432495, 5.398744583129883, 9.133252143859863, 29.465669631958008, 318.64691162109375], "val_accuracy": [0.0963333323597908, 0.10899999737739563, 0.11599999666213989, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 0, 25, 14, 11, 5], "tree_depth": 16}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 4, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 6, 3, 5, 6, 3, 7, 3, 8, 8, 9, 1, 5, 4, 6, 6, 4, 5, 8, 4, 8, 3, 6, 6, 7, 7, 6, 6, 4, 4, 3, 2], [0, 0, 0, 3, 4, 1, 3, 1, 2, 1, 2, 2, 3, 4, 4, 3, 1, 1, 1, 1, 2, 5, 2, 4, 0], [16, 16, 69, 50, 53], [0, 1], [0], [0], [5], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 2, 8, 9], [0, 0, 0, 4, 0, 4, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 59, 34, 25, 5, 2, 1, 1, 1, 24, 14, 10, 5], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(grad), tf.math.sqrt(grad)))))), alpha), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.square(tf.math.pow(grad, tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.square(tf.math.sqrt(tf.math.pow(tf.math.sqrt(beta), tf.math.multiply(tf.math.divide_no_nan(alpha, beta), beta)))), tf.math.divide_no_nan(tf.math.add(tf.math.add(grad, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, grad), grad)), alpha), alpha)), alpha)))), tf.math.pow(alpha, beta))), tf.math.pow(tf.math.multiply(tf.math.add(grad, beta), grad), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), tf.math.add(tf.math.sqrt(sigma), alpha))), beta)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 8, 3, 3, 3, 5, 0, 5, 0], [0, 1, 0, 2], [39, 7], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5, 3], [0, 2, 0, 3, 5], [16, 16], [0, 0], [0, 9], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 2, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 9, 4, 2, 12, 7, 5, 2, 2, 2, 0, 1, 16, 8, 8, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.square(tf.math.negative(grad))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(beta)), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(beta, grad))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 9, 8, 1, 4, 3, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 77, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 9, 7, 6], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), sigma)))), tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.303060293197632, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]