[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8608571290969849, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22322940826416, 1.8689253330230713, 1.3942700624465942, 1.095342755317688, 0.9366230964660645, 0.8446784615516663, 0.7701058387756348, 0.7355712652206421, 0.69794762134552, 0.668256402015686, 0.6490200161933899, 0.6200919151306152, 0.6022601127624512, 0.5715785622596741, 0.5719400644302368, 0.5597671866416931, 0.5376201272010803, 0.5221304893493652, 0.5074384808540344, 0.5005111694335938, 0.48852330446243286, 0.4786052107810974, 0.4760739505290985, 0.46790340542793274, 0.4581894278526306, 0.44468623399734497, 0.44242918491363525, 0.4242848753929138, 0.4259929955005646, 0.42100435495376587, 0.40752384066581726, 0.40395310521125793, 0.39954328536987305, 0.3951505422592163, 0.38376688957214355, 0.38175374269485474, 0.3746701180934906, 0.36780986189842224, 0.3655523955821991, 0.3574565052986145, 0.36511558294296265, 0.3465651273727417, 0.34206292033195496, 0.33706849813461304, 0.3408246636390686, 0.327822744846344, 0.32601672410964966, 0.325962632894516, 0.3159274756908417, 0.311666876077652, 0.30712682008743286, 0.3060350716114044, 0.3034648895263672, 0.30057409405708313], "accuracy": [0.2685246467590332, 0.48685774207115173, 0.5597675442695618, 0.6180161237716675, 0.6647734642028809, 0.689869225025177, 0.7231541275978088, 0.7269845604896545, 0.7446836829185486, 0.7515519857406616, 0.7651565074920654, 0.7751948237419128, 0.78113853931427, 0.7948752045631409, 0.7895918488502502, 0.7965922355651855, 0.7992339134216309, 0.8063663840293884, 0.817461371421814, 0.8215559124946594, 0.8252542614936829, 0.82683926820755, 0.8315942287445068, 0.830669641494751, 0.8348963260650635, 0.8422929644584656, 0.8432175517082214, 0.846387505531311, 0.8461233377456665, 0.8520671129226685, 0.8539162874221802, 0.8562937378883362, 0.8609166741371155, 0.8577466607093811, 0.8610487580299377, 0.8625016212463379, 0.8631620407104492, 0.863029956817627, 0.8673887252807617, 0.8693699836730957, 0.868049144744873, 0.8750495314598083, 0.873860776424408, 0.8745211958885193, 0.8794082403182983, 0.8802007436752319, 0.878879964351654, 0.8849557638168335, 0.889050304889679, 0.8881257176399231, 0.8893144726753235, 0.889050304889679, 0.8922203183174133, 0.8894465565681458], "val_loss": [2.038494348526001, 1.5150622129440308, 1.0409373044967651, 0.8386070728302002, 0.7494432926177979, 0.6956977248191833, 0.6549378037452698, 0.6268112659454346, 0.5953601002693176, 0.5784529447555542, 0.5573862195014954, 0.5401718616485596, 0.5251972675323486, 0.5130016803741455, 0.505838930606842, 0.49574413895606995, 0.4837232530117035, 0.47404277324676514, 0.4672699272632599, 0.4612356722354889, 0.45410969853401184, 0.4504625201225281, 0.444131076335907, 0.434538871049881, 0.43489745259284973, 0.4269026815891266, 0.4188072979450226, 0.41792595386505127, 0.40976306796073914, 0.4063819944858551, 0.4161052107810974, 0.403422474861145, 0.40108349919319153, 0.39706194400787354, 0.3939766585826874, 0.3955358564853668, 0.38915547728538513, 0.3914024233818054, 0.3820503056049347, 0.3828541338443756, 0.378266304731369, 0.3798547685146332, 0.37935954332351685, 0.3789192736148834, 0.3756513297557831, 0.37610334157943726, 0.37123018503189087, 0.37336617708206177, 0.3622545599937439, 0.3656081259250641, 0.3708840608596802, 0.3642328381538391, 0.3621278405189514, 0.3585996925830841], "val_accuracy": [0.5253333449363708, 0.6690000295639038, 0.6880000233650208, 0.7089999914169312, 0.7383333444595337, 0.7559999823570251, 0.7606666684150696, 0.7723333239555359, 0.7866666913032532, 0.7933333516120911, 0.8040000200271606, 0.8100000023841858, 0.8109999895095825, 0.8193333148956299, 0.8216666579246521, 0.8236666917800903, 0.8286666870117188, 0.8346666693687439, 0.831333339214325, 0.8393333554267883, 0.8423333168029785, 0.8403333425521851, 0.8429999947547913, 0.8460000157356262, 0.8423333168029785, 0.8510000109672546, 0.8546666502952576, 0.8536666631698608, 0.8566666841506958, 0.8616666793823242, 0.8489999771118164, 0.8600000143051147, 0.8643333315849304, 0.862666666507721, 0.8616666793823242, 0.8616666793823242, 0.8690000176429749, 0.8659999966621399, 0.8700000047683716, 0.8709999918937683, 0.8723333477973938, 0.8683333396911621, 0.8683333396911621, 0.871666669845581, 0.8706666827201843, 0.8743333220481873, 0.8733333349227905, 0.8759999871253967, 0.8813333511352539, 0.874666690826416, 0.8709999918937683, 0.8723333477973938, 0.8756666779518127, 0.8793333172798157]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8562856912612915, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293956756591797, 2.190371036529541, 1.781794786453247, 1.3500343561172485, 1.1057332754135132, 0.9426933526992798, 0.8690677881240845, 0.8195340037345886, 0.7579010128974915, 0.7478580474853516, 0.7117763757705688, 0.6910228729248047, 0.650560200214386, 0.6365661025047302, 0.6169788241386414, 0.6062234044075012, 0.5863812565803528, 0.5744507312774658, 0.5509071350097656, 0.5600371956825256, 0.5449028015136719, 0.5407436490058899, 0.5179094672203064, 0.524368166923523, 0.5004908442497253, 0.4815165400505066, 0.4862566590309143, 0.4730713665485382, 0.4635375142097473, 0.45631489157676697, 0.44832125306129456, 0.4349355101585388, 0.4270215332508087, 0.41290873289108276, 0.41116300225257874, 0.41320571303367615, 0.3901421129703522, 0.39537516236305237, 0.39686837792396545, 0.40087780356407166, 0.3778668940067291, 0.3758966624736786, 0.36123377084732056, 0.3571079671382904, 0.3599320352077484, 0.3491362929344177, 0.35757923126220703], "accuracy": [0.12640337646007538, 0.32162198424339294, 0.4295337498188019, 0.5404834151268005, 0.622639000415802, 0.6536785364151001, 0.6833971738815308, 0.6988508701324463, 0.6989829540252686, 0.713379979133606, 0.7283053994178772, 0.7300224304199219, 0.7541936039924622, 0.7515519857406616, 0.76106196641922, 0.7671377658843994, 0.7684586048126221, 0.7724210619926453, 0.7881389260292053, 0.7866860628128052, 0.7890635132789612, 0.7924976944923401, 0.7989697456359863, 0.7938185334205627, 0.8012151718139648, 0.8123101592063904, 0.8165367841720581, 0.8152159452438354, 0.8235371708869934, 0.8240655064582825, 0.8230088353157043, 0.8348963260650635, 0.834632158279419, 0.8405758738517761, 0.8422929644584656, 0.8397833704948425, 0.8466516733169556, 0.8449346423149109, 0.8467837572097778, 0.8499537706375122, 0.8541803956031799, 0.8507462739944458, 0.860652506351471, 0.860652506351471, 0.8589354157447815, 0.860652506351471, 0.8659358024597168], "val_loss": [2.2461133003234863, 2.0241446495056152, 1.1654870510101318, 0.9024253487586975, 0.7869367003440857, 0.7294148802757263, 0.6804643273353577, 0.6366651058197021, 0.6397167444229126, 0.6280779838562012, 0.5874941349029541, 0.5660184621810913, 0.5456290245056152, 0.5434017777442932, 0.5319458246231079, 0.5106357336044312, 0.4980633556842804, 0.49469953775405884, 0.48552897572517395, 0.4741193950176239, 0.47341907024383545, 0.4708752930164337, 0.45870110392570496, 0.4479244649410248, 0.439056396484375, 0.4353958070278168, 0.43775439262390137, 0.43079444766044617, 0.42531269788742065, 0.4221126437187195, 0.4150662124156952, 0.4169495105743408, 0.4137912690639496, 0.41034355759620667, 0.40830859541893005, 0.40532881021499634, 0.40322229266166687, 0.40739455819129944, 0.3958878219127655, 0.39732804894447327, 0.4001299738883972, 0.39509081840515137, 0.39944881200790405, 0.39590778946876526, 0.39061400294303894, 0.4145430028438568, 0.41400837898254395], "val_accuracy": [0.4153333306312561, 0.4326666593551636, 0.6393333077430725, 0.6769999861717224, 0.7143333554267883, 0.7300000190734863, 0.7419999837875366, 0.7523333430290222, 0.7636666893959045, 0.749666690826416, 0.7583333253860474, 0.7643333077430725, 0.7856666445732117, 0.7963333129882812, 0.7983333468437195, 0.7940000295639038, 0.8046666383743286, 0.7990000247955322, 0.8046666383743286, 0.8213333487510681, 0.8163333535194397, 0.8113333582878113, 0.824999988079071, 0.8293333053588867, 0.8370000123977661, 0.8356666564941406, 0.8379999995231628, 0.840666651725769, 0.8410000205039978, 0.8443333506584167, 0.8456666469573975, 0.8493333458900452, 0.8519999980926514, 0.8516666889190674, 0.8536666631698608, 0.8533333539962769, 0.8529999852180481, 0.8460000157356262, 0.8550000190734863, 0.8586666584014893, 0.856333315372467, 0.8606666922569275, 0.8586666584014893, 0.8519999980926514, 0.859333336353302, 0.8600000143051147, 0.8579999804496765]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8311428427696228, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.537171721458435, 0.8554215431213379, 0.6743261218070984, 0.6251128911972046, 0.5882704257965088, 0.538580060005188, 0.5307234525680542, 0.5106832981109619, 0.49409401416778564, 0.4820167124271393, 0.46667489409446716, 0.48266318440437317, 0.4649156332015991, 0.46282562613487244, 0.4642748236656189, 0.4764854609966278, 0.4607066512107849, 0.43729135394096375, 0.4551060199737549, 0.44480666518211365, 0.4577447772026062, 0.4577353000640869, 0.5073608160018921, 0.5521687865257263, 0.5767422318458557, 0.5519192218780518], "accuracy": [0.4706115424633026, 0.705058753490448, 0.7508915662765503, 0.7717606425285339, 0.7915731072425842, 0.8018755912780762, 0.8095363974571228, 0.8133667707443237, 0.8173292875289917, 0.8289526104927063, 0.8323867321014404, 0.8302733898162842, 0.8227446675300598, 0.8367455005645752, 0.8240655064582825, 0.8364813327789307, 0.8341038227081299, 0.8451988101005554, 0.8348963260650635, 0.8363492488861084, 0.8429533839225769, 0.8437458872795105, 0.8304054737091064, 0.8224804997444153, 0.8113855719566345, 0.8285563588142395], "val_loss": [0.8724169135093689, 0.6234061121940613, 0.5542429089546204, 0.5482280850410461, 0.5348869562149048, 0.5274212956428528, 0.5121412873268127, 0.5395598411560059, 0.46844717860221863, 0.4963441491127014, 0.49826788902282715, 0.49332091212272644, 0.5475903749465942, 0.48566383123397827, 0.5387237668037415, 0.5515750646591187, 0.49695533514022827, 0.5173425078392029, 0.5050085186958313, 0.5249952077865601, 0.5502366423606873, 0.5840337872505188, 0.5660400986671448, 0.5760901570320129, 0.6254098415374756, 0.5812379717826843], "val_accuracy": [0.6866666674613953, 0.7696666717529297, 0.793666660785675, 0.8016666769981384, 0.8033333420753479, 0.8109999895095825, 0.8203333616256714, 0.8259999752044678, 0.8330000042915344, 0.8273333311080933, 0.8396666646003723, 0.8289999961853027, 0.8396666646003723, 0.8240000009536743, 0.8356666564941406, 0.8460000157356262, 0.8373333215713501, 0.8476666808128357, 0.8343333601951599, 0.8426666855812073, 0.8506666421890259, 0.8416666388511658, 0.8220000267028809, 0.824999988079071, 0.8233333230018616, 0.8289999961853027]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 77], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 2, 3, 6, 3, 0, 1], [3, 2, 0, 3, 1, 5, 2, 1], [16, 16], [0, 0, 1, 0, 1, 1], [0, 4, 4], [0, 1, 5], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 1, 4, 1, 9, 2, 8], [0, 0, 0, 3, 3, 0, 3, 1, 2, 0], [16, 88, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 17, 9, 8, 1, 6, 3, 3, 1, 16, 9, 7, 5], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.multiply(alpha, tf.math.negative(tf.math.subtract(grad, beta)))))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 2, 3, 0, 3, 0, 0], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 0, 2, 1, 7, 2, 6, 1], [0, 2, 0, 3, 3, 3, 5], [0, 22], [0, 1], [0], [0], [0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 6, 2, 8, 1, 4, 1, 4, 2, 8], [1, 2, 2, 3, 3, 2, 7, 2, 2, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 2, 15, 8, 7, 2, 2, 1, 1, 1, 16, 8, 8, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), grad), tf.math.divide_no_nan(grad, tf.math.subtract(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.sqrt(tf.math.subtract(beta, tf.math.pow(beta, sigma))), tf.math.subtract(sigma, beta))), grad), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 2, 0, 9], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 3, 3, 0, 3, 5, 2], [0, 2, 0, 3, 4], [16, 16], [0, 1], [0], [0], [59], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 0, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 17, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 12, 7, 5, 2, 2, 1, 1, 1, 15, 8, 7, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.square(beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad))))", "other_info": {"loss": [2.3035812377929688, 2.302584648132324, 2.302584409713745, 2.302583932876587, 2.302583694458008, 2.302583932876587, 2.3025834560394287], "accuracy": [0.10936468094587326, 0.10632677376270294, 0.10342095047235489, 0.10672302544116974, 0.108440101146698, 0.09998679161071777, 0.10236428678035736], "val_loss": [2.3025853633880615, 2.3025848865509033, 2.3025853633880615, 2.3025848865509033, 2.3025853633880615, 2.3025853633880615, 2.3025851249694824], "val_accuracy": [0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 9, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 3, 6, 8, 1, 4, 5, 4, 2, 8], [0, 0, 0, 1, 0, 0, 3, 1, 2, 0], [34, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 4, 1, 2, 9, 5, 4, 2, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)), alpha)", "other_info": {"loss": [2.303518056869507, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}]