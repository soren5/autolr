[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8665714263916016, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2215583324432373, 1.8647816181182861, 1.3908172845840454, 1.1034581661224365, 0.9471784234046936, 0.8351821899414062, 0.7805224061012268, 0.7272498607635498, 0.6965575218200684, 0.6727039813995361, 0.6418710350990295, 0.6239993572235107, 0.5996415615081787, 0.5767308473587036, 0.5620633959770203, 0.5513125658035278, 0.5289075970649719, 0.5198009014129639, 0.5174437165260315, 0.4977390766143799, 0.48647016286849976, 0.4812816381454468, 0.4725040793418884, 0.45878708362579346, 0.44298437237739563, 0.4463519752025604, 0.4373064637184143, 0.42477524280548096, 0.41794925928115845, 0.4078561067581177, 0.40120407938957214, 0.3913745880126953, 0.39035579562187195, 0.3849062919616699, 0.37134042382240295, 0.37038978934288025, 0.36781617999076843, 0.3576214909553528, 0.36017993092536926, 0.3467136323451996, 0.34570494294166565, 0.3378622233867645, 0.33263278007507324, 0.3274315595626831, 0.3224029839038849, 0.3182252049446106, 0.3160910904407501, 0.3115314543247223, 0.2976173162460327, 0.30106320977211, 0.2915477752685547, 0.2901470363140106, 0.2893293499946594, 0.2890550196170807, 0.27802854776382446], "accuracy": [0.27961960434913635, 0.4846123456954956, 0.566239595413208, 0.6135252714157104, 0.6647734642028809, 0.698718786239624, 0.7170783281326294, 0.7367587089538574, 0.748249888420105, 0.755118191242218, 0.7646281719207764, 0.7711002230644226, 0.780610203742981, 0.7918372750282288, 0.7969884872436523, 0.8012151718139648, 0.8059701323509216, 0.81112140417099, 0.8132346868515015, 0.8241975903511047, 0.8234050869941711, 0.8259146809577942, 0.8273676037788391, 0.8388587832450867, 0.841500461101532, 0.8342359066009521, 0.8441421389579773, 0.8448025584220886, 0.8506141901016235, 0.8536521196365356, 0.8536521196365356, 0.8621054291725159, 0.8634262084960938, 0.8625016212463379, 0.8656716346740723, 0.8683133125305176, 0.868049144744873, 0.8733324408531189, 0.8725399374961853, 0.8780874609947205, 0.8734645247459412, 0.8795403242111206, 0.8795403242111206, 0.884691596031189, 0.8841632604598999, 0.8870691061019897, 0.8879936337471008, 0.8873332738876343, 0.8919561505317688, 0.8930128216743469, 0.8931449055671692, 0.89552241563797, 0.8980319499969482, 0.8945978283882141, 0.9014661312103271], "val_loss": [2.0359723567962646, 1.5145267248153687, 1.0445075035095215, 0.8320063352584839, 0.7450639009475708, 0.6866608262062073, 0.638742983341217, 0.6030011177062988, 0.5931716561317444, 0.5613937973976135, 0.5399961471557617, 0.5277177095413208, 0.5102249383926392, 0.49234211444854736, 0.48265719413757324, 0.4839603304862976, 0.4662134647369385, 0.46519678831100464, 0.45136457681655884, 0.4433811902999878, 0.43655893206596375, 0.4273516535758972, 0.4243473410606384, 0.41254210472106934, 0.4083435535430908, 0.4066203236579895, 0.4033902585506439, 0.4033896028995514, 0.39235082268714905, 0.3941976726055145, 0.38625407218933105, 0.3861640691757202, 0.3818025290966034, 0.3776610791683197, 0.3740795850753784, 0.3695300221443176, 0.3690154552459717, 0.36829590797424316, 0.36255785822868347, 0.362265408039093, 0.35807937383651733, 0.3571781814098358, 0.35592755675315857, 0.351117879152298, 0.35292911529541016, 0.3462975323200226, 0.34532487392425537, 0.3435002565383911, 0.3435817062854767, 0.3415122330188751, 0.3408048152923584, 0.3390803933143616, 0.34014853835105896, 0.3378283977508545, 0.3381916582584381], "val_accuracy": [0.5220000147819519, 0.6620000004768372, 0.6763333082199097, 0.7053333520889282, 0.7263333201408386, 0.7363333106040955, 0.7543333172798157, 0.7696666717529297, 0.7736666798591614, 0.7870000004768372, 0.796999990940094, 0.7963333129882812, 0.8053333163261414, 0.8180000185966492, 0.8209999799728394, 0.8159999847412109, 0.8236666917800903, 0.8266666531562805, 0.8333333134651184, 0.8349999785423279, 0.8389999866485596, 0.8443333506584167, 0.8456666469573975, 0.8513333201408386, 0.8503333330154419, 0.8560000061988831, 0.8560000061988831, 0.8510000109672546, 0.8583333492279053, 0.8550000190734863, 0.8636666536331177, 0.859333336353302, 0.8610000014305115, 0.8616666793823242, 0.8640000224113464, 0.8636666536331177, 0.8663333058357239, 0.8633333444595337, 0.8666666746139526, 0.8640000224113464, 0.8659999966621399, 0.8679999709129333, 0.8700000047683716, 0.8706666827201843, 0.871666669845581, 0.8733333349227905, 0.8709999918937683, 0.8709999918937683, 0.8733333349227905, 0.8759999871253967, 0.8740000128746033, 0.8706666827201843, 0.8713333606719971, 0.8736666440963745, 0.8713333606719971]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8182857036590576, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.634644865989685, 1.03548002243042, 0.8051411509513855, 0.7009254097938538, 0.6451951265335083, 0.6054859161376953, 0.571327805519104, 0.5737058520317078, 0.5709103345870972, 0.5761213302612305, 0.5357993245124817, 0.5281088352203369, 0.5220925807952881, 0.5034857392311096, 0.503673791885376, 0.4581414461135864, 0.4706961214542389, 0.473226934671402, 0.4723782241344452, 0.544699490070343, 0.5453761219978333, 0.5314676761627197], "accuracy": [0.45687490701675415, 0.6670188903808594, 0.720380425453186, 0.7498348951339722, 0.7662131786346436, 0.7827235460281372, 0.7940827012062073, 0.8037247657775879, 0.7997622489929199, 0.7946110367774963, 0.8137630224227905, 0.8210275769233704, 0.8171972036361694, 0.8214238286018372, 0.8264430165290833, 0.8409721255302429, 0.8457271456718445, 0.8413683772087097, 0.8334434032440186, 0.824329674243927, 0.8304054737091064, 0.826310932636261], "val_loss": [1.00498628616333, 0.693630039691925, 0.6723318099975586, 0.6110607385635376, 0.5511142015457153, 0.5447559952735901, 0.5222080945968628, 0.5168525576591492, 0.550093412399292, 0.5365809202194214, 0.5354244709014893, 0.5578895807266235, 0.5405159592628479, 0.5311322212219238, 0.549074113368988, 0.5440195798873901, 0.6289790868759155, 0.5487877726554871, 0.7058629393577576, 0.6119378209114075, 0.6305604577064514, 0.611245334148407], "val_accuracy": [0.6330000162124634, 0.7523333430290222, 0.7733333110809326, 0.7803333401679993, 0.7940000295639038, 0.8073333501815796, 0.8243333101272583, 0.8223333358764648, 0.8220000267028809, 0.8173333406448364, 0.8273333311080933, 0.8223333358764648, 0.82833331823349, 0.8303333520889282, 0.8316666483879089, 0.8386666774749756, 0.8483333587646484, 0.8286666870117188, 0.8286666870117188, 0.8246666789054871, 0.8396666646003723, 0.8199999928474426]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1], [0, 0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8148571252822876, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293351173400879, 2.190553903579712, 1.7766635417938232, 1.3336702585220337, 1.0738636255264282, 0.9226642847061157, 0.8346738219261169, 0.8107975125312805, 0.7631407976150513, 0.7528396248817444, 0.7048980593681335, 0.6912041306495667, 0.6505639553070068, 0.6239978075027466, 0.6094161868095398, 0.5919004082679749, 0.5795243382453918, 0.5720329284667969, 0.5577045679092407, 0.5483958125114441, 0.5322540998458862, 0.5310072302818298, 0.5217142105102539, 0.5005841255187988, 0.5032091736793518, 0.4699350595474243, 0.4780868887901306, 0.4810269773006439, 0.46720603108406067, 0.4587648808956146, 0.45753660798072815, 0.4333556592464447, 0.4228239357471466, 0.41711515188217163, 0.41729018092155457, 0.4008960425853729, 0.401679128408432, 0.3991681933403015, 0.39378029108047485, 0.3919890820980072, 0.36940285563468933, 0.36664626002311707, 0.3573459982872009, 0.3554293215274811, 0.35644081234931946, 0.349935919046402, 0.34320929646492004, 0.3563719391822815, 0.3394915759563446, 0.34553423523902893, 0.3379923701286316, 0.3413489758968353, 0.3344455659389496, 0.35279324650764465, 0.32127469778060913, 0.3474743068218231, 0.3274381458759308, 0.31734395027160645, 0.3235991597175598, 0.32508453726768494, 0.3153558373451233, 0.31467461585998535], "accuracy": [0.13512085378170013, 0.32082948088645935, 0.43389248847961426, 0.544710099697113, 0.6280544400215149, 0.6609430909156799, 0.6913221478462219, 0.7045304179191589, 0.7059833407402039, 0.707040011882782, 0.72672039270401, 0.7280412316322327, 0.7519482374191284, 0.7660810947418213, 0.7614582180976868, 0.7703077793121338, 0.7839123010635376, 0.7815347909927368, 0.7819310426712036, 0.7877426743507385, 0.7915731072425842, 0.7977809906005859, 0.8021397590637207, 0.805177628993988, 0.8034605979919434, 0.8127063512802124, 0.8162726163864136, 0.8129705190658569, 0.8133667707443237, 0.8208954930305481, 0.8239334225654602, 0.8284242749214172, 0.8308017253875732, 0.8408400416374207, 0.8400475382804871, 0.8399154543876648, 0.8428213000297546, 0.8486329317092896, 0.8492933511734009, 0.8379341959953308, 0.8533879518508911, 0.8602562546730042, 0.8569541573524475, 0.860652506351471, 0.8602562546730042, 0.8601241707801819, 0.8650112152099609, 0.8632941246032715, 0.8688416481018066, 0.8679170608520508, 0.871879518032074, 0.86553955078125, 0.8673887252807617, 0.871879518032074, 0.878879964351654, 0.8658037185668945, 0.8701624870300293, 0.8784837126731873, 0.8705587387084961, 0.8729361891746521, 0.8750495314598083, 0.8737286925315857], "val_loss": [2.2471718788146973, 2.0219109058380127, 1.149643063545227, 0.8843079209327698, 0.7775294780731201, 0.7149246335029602, 0.6899446845054626, 0.6939342617988586, 0.6707539558410645, 0.6617099046707153, 0.6175960302352905, 0.5818991661071777, 0.5722703337669373, 0.5596058964729309, 0.5498852729797363, 0.5347286462783813, 0.5171728730201721, 0.519668459892273, 0.5284660458564758, 0.5072213411331177, 0.4997384548187256, 0.49520057439804077, 0.504815936088562, 0.48921898007392883, 0.4811115860939026, 0.49068978428840637, 0.4806569814682007, 0.48104748129844666, 0.473705530166626, 0.4781724512577057, 0.4610995948314667, 0.4506949782371521, 0.46468284726142883, 0.45807796716690063, 0.45033517479896545, 0.449411541223526, 0.4352058172225952, 0.43139559030532837, 0.431568443775177, 0.4327314794063568, 0.43873414397239685, 0.4366615414619446, 0.4254564642906189, 0.43274471163749695, 0.4346051514148712, 0.4345460534095764, 0.4418821334838867, 0.4359298646450043, 0.42636075615882874, 0.4271899461746216, 0.4285581111907959, 0.4315589964389801, 0.456783652305603, 0.45746976137161255, 0.43878793716430664, 0.4432930648326874, 0.4677598476409912, 0.4741505980491638, 0.47967666387557983, 0.49310603737831116, 0.4816442131996155, 0.4641765058040619], "val_accuracy": [0.4320000112056732, 0.46166667342185974, 0.6413333415985107, 0.6823333501815796, 0.721666693687439, 0.7289999723434448, 0.7243333458900452, 0.7379999756813049, 0.7429999709129333, 0.7450000047683716, 0.7710000276565552, 0.7763333320617676, 0.7733333110809326, 0.7833333611488342, 0.7990000247955322, 0.7950000166893005, 0.7983333468437195, 0.8029999732971191, 0.7979999780654907, 0.8026666641235352, 0.8076666593551636, 0.8173333406448364, 0.8163333535194397, 0.8209999799728394, 0.8256666660308838, 0.8220000267028809, 0.8289999961853027, 0.8306666612625122, 0.8343333601951599, 0.8353333473205566, 0.8386666774749756, 0.8360000252723694, 0.8383333086967468, 0.8386666774749756, 0.8443333506584167, 0.846666693687439, 0.8553333282470703, 0.8523333072662354, 0.8493333458900452, 0.8510000109672546, 0.8556666374206543, 0.8566666841506958, 0.856333315372467, 0.8523333072662354, 0.8553333282470703, 0.8579999804496765, 0.859000027179718, 0.8573333621025085, 0.8569999933242798, 0.8586666584014893, 0.8610000014305115, 0.859666645526886, 0.8619999885559082, 0.8619999885559082, 0.8579999804496765, 0.8586666584014893, 0.8643333315849304, 0.8613333106040955, 0.859666645526886, 0.8519999980926514, 0.8579999804496765, 0.8533333539962769]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 5, 0, 3], [0, 1, 0, 2], [76, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 5], [0, 2, 0, 3], [16, 16], [0, 0, 0, 1, 0, 1], [0, 4, 0, 8], [2, 2], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 9, 8], [0, 0, 4, 3, 0, 4, 3, 2, 2, 0], [16, 99, 96, 18, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 10, 6, 4, 2, 6, 4, 2, 0, 18, 10, 8, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.negative(beta), tf.math.sqrt(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.subtract(sigma, tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)), beta)))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [3, 4, 2, 0, 2, 2, 5, 2, 3, 0, 7, 9, 9, 3, 2, 4, 2, 9], [0, 1, 0, 2, 0, 1, 2, 3, 1, 3], [39, 39, 55, 26, 56, 18], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 1, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [30, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 28, 18, 10, 6, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), alpha)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(grad, tf.math.pow(tf.math.add(grad, alpha), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 0, 3], [0, 1, 0, 2, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [18, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 9], [4, 0, 1, 2, 4, 0, 3, 1, 2, 0], [16, 99, 70, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 12, 9, 3], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), tf.math.pow(beta, tf.math.add(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma)), tf.math.sqrt(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 1, 0, 3, 5], [0, 2, 1, 1], [40, 16], [1, 1], [0], [0], [97], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 2, 4, 8, 1, 4, 2, 8, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 1, 0, 1, 1, 21, 12, 9, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(alpha, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]