[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8731428384780884, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222090244293213, 1.8599990606307983, 1.3910630941390991, 1.0956002473831177, 0.9371440410614014, 0.8408471941947937, 0.7622370719909668, 0.7292909026145935, 0.6907141804695129, 0.6607404947280884, 0.6246559023857117, 0.6161388754844666, 0.5843074321746826, 0.5690341591835022, 0.5542333126068115, 0.538710355758667, 0.526591956615448, 0.5155640244483948, 0.4964987337589264, 0.49362388253211975, 0.4800559878349304, 0.46252110600471497, 0.46388399600982666, 0.4543118476867676, 0.4495580494403839, 0.4454893469810486, 0.42790693044662476, 0.4199118912220001, 0.41333243250846863, 0.4134743809700012, 0.41062456369400024, 0.4013161361217499, 0.389715313911438, 0.383638471364975, 0.370571106672287, 0.37792888283729553, 0.37145787477493286, 0.36194267868995667, 0.35598060488700867, 0.3417776823043823, 0.35054275393486023, 0.34273532032966614, 0.33562591671943665, 0.33342245221138, 0.327715665102005, 0.32899898290634155, 0.3238007724285126, 0.31471189856529236, 0.31208524107933044, 0.30382901430130005, 0.3027876913547516, 0.2913244068622589, 0.2898690700531006, 0.28889989852905273, 0.28157544136047363, 0.27545633912086487, 0.2825353145599365, 0.27627214789390564, 0.26492366194725037, 0.267622172832489], "accuracy": [0.2801479399204254, 0.4859331548213959, 0.5733720660209656, 0.6188086271286011, 0.6693964004516602, 0.700171709060669, 0.7195879220962524, 0.7359662055969238, 0.7483819723129272, 0.7614582180976868, 0.7730814814567566, 0.7783648371696472, 0.7891955971717834, 0.7961959838867188, 0.8041210174560547, 0.804649293422699, 0.8096684813499451, 0.8216879963874817, 0.8232730031013489, 0.8222163319587708, 0.8296129703521729, 0.8343679904937744, 0.8329150676727295, 0.8379341959953308, 0.8391229510307312, 0.8422929644584656, 0.8481045961380005, 0.8524633646011353, 0.8512746095657349, 0.8521991968154907, 0.8516708612442017, 0.8584070801734924, 0.8622375130653381, 0.8672566413879395, 0.8660678863525391, 0.8650112152099609, 0.8689737319946289, 0.8698983192443848, 0.8712190985679626, 0.876370370388031, 0.876370370388031, 0.8779553771018982, 0.880729079246521, 0.8791441321372986, 0.8800686597824097, 0.8808611631393433, 0.8825782537460327, 0.884691596031189, 0.8894465565681458, 0.8906353116035461, 0.8901069760322571, 0.8956544995307922, 0.8972394466400146, 0.8957865834236145, 0.8976356983184814, 0.8981640338897705, 0.8980319499969482, 0.9015982151031494, 0.9091269373893738, 0.9025228023529053], "val_loss": [2.0339202880859375, 1.4966181516647339, 1.028662085533142, 0.8264541029930115, 0.7435529828071594, 0.6852971911430359, 0.6409468054771423, 0.607009768486023, 0.58863765001297, 0.5563420653343201, 0.5444524884223938, 0.5316473841667175, 0.5143439173698425, 0.4968295097351074, 0.4867275357246399, 0.4797455966472626, 0.4664815366268158, 0.45842766761779785, 0.45352715253829956, 0.44529989361763, 0.43924498558044434, 0.4291748106479645, 0.42323148250579834, 0.42500540614128113, 0.4133496880531311, 0.412052720785141, 0.40400341153144836, 0.40189021825790405, 0.3996563255786896, 0.39943578839302063, 0.39517536759376526, 0.3831731081008911, 0.3850279152393341, 0.3845633268356323, 0.3779810667037964, 0.3737954795360565, 0.37142401933670044, 0.36968713998794556, 0.36711955070495605, 0.36518165469169617, 0.3661971390247345, 0.3619835078716278, 0.3606462776660919, 0.3627645671367645, 0.3567230701446533, 0.35754749178886414, 0.3537490665912628, 0.34998708963394165, 0.3524447977542877, 0.3504869043827057, 0.3482631742954254, 0.34823328256607056, 0.3477550446987152, 0.34259623289108276, 0.34298497438430786, 0.34684810042381287, 0.339428186416626, 0.34098348021507263, 0.34332919120788574, 0.3370635211467743], "val_accuracy": [0.5103333592414856, 0.6700000166893005, 0.6783333420753479, 0.7123333215713501, 0.7223333120346069, 0.7456666827201843, 0.7593333125114441, 0.7699999809265137, 0.7789999842643738, 0.7960000038146973, 0.7950000166893005, 0.7986666560173035, 0.8166666626930237, 0.8183333277702332, 0.8293333053588867, 0.8203333616256714, 0.8343333601951599, 0.8333333134651184, 0.8360000252723694, 0.8396666646003723, 0.846666693687439, 0.8523333072662354, 0.8529999852180481, 0.8443333506584167, 0.8553333282470703, 0.8569999933242798, 0.8573333621025085, 0.8586666584014893, 0.8576666712760925, 0.8636666536331177, 0.8603333234786987, 0.8633333444595337, 0.8640000224113464, 0.8613333106040955, 0.8650000095367432, 0.8686666488647461, 0.8663333058357239, 0.8676666617393494, 0.8703333139419556, 0.871666669845581, 0.8683333396911621, 0.8683333396911621, 0.8743333220481873, 0.871999979019165, 0.8700000047683716, 0.875333309173584, 0.874666690826416, 0.8733333349227905, 0.875, 0.875333309173584, 0.878000020980835, 0.8756666779518127, 0.878333330154419, 0.8786666393280029, 0.8813333511352539, 0.878333330154419, 0.8776666522026062, 0.8776666522026062, 0.8793333172798157, 0.8799999952316284]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 4, 3, 1, 6], [0, 3, 4, 1, 5], [0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 0, 2, 6, 2, 6, 9, 4, 0], [0, 3, 5, 1, 3, 1], [0, 19], [0, 1], [0], [1], [0]], "fitness": -0.8334285616874695, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), alpha), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, grad)), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), alpha)), tf.math.pow(tf.math.negative(sigma), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293562650680542, 2.1913962364196777, 1.7711658477783203, 1.3709826469421387, 1.0500361919403076, 0.9072909355163574, 0.8381762504577637, 0.7904361486434937, 0.7668628692626953, 0.7383943796157837, 0.691741406917572, 0.6740787625312805, 0.628993809223175, 0.6202042102813721, 0.6073147654533386, 0.5879190564155579, 0.56349778175354, 0.5585695505142212, 0.5419520139694214, 0.535851001739502, 0.5252038240432739, 0.5137026309967041, 0.5009199976921082, 0.49299073219299316, 0.48768383264541626, 0.46219149231910706, 0.4506816864013672, 0.45282530784606934, 0.44148650765419006, 0.4391448199748993, 0.43433013558387756, 0.4292297065258026, 0.40387865900993347, 0.40528351068496704, 0.3892895579338074, 0.3860751688480377, 0.385862797498703, 0.37859880924224854, 0.37044233083724976, 0.36201488971710205, 0.35634344816207886, 0.354533851146698, 0.33379048109054565, 0.33442193269729614, 0.3365849256515503, 0.32028016448020935, 0.33748647570610046, 0.3123095631599426], "accuracy": [0.12521463632583618, 0.32439571619033813, 0.43811914324760437, 0.542728841304779, 0.6339981555938721, 0.6711134314537048, 0.6950204968452454, 0.7061154246330261, 0.7030775547027588, 0.7210407853126526, 0.7359662055969238, 0.7467969655990601, 0.763967752456665, 0.7630431652069092, 0.7693831920623779, 0.7763835787773132, 0.7880068421363831, 0.7979130744934082, 0.7971205711364746, 0.7977809906005859, 0.8080834746360779, 0.8067626357078552, 0.8108572363853455, 0.8170651197433472, 0.8185180425643921, 0.8201030492782593, 0.8277638554573059, 0.8273676037788391, 0.8334434032440186, 0.8322546482086182, 0.8368775844573975, 0.8356888294219971, 0.8506141901016235, 0.8417646288871765, 0.8521991968154907, 0.8486329317092896, 0.8527275323867798, 0.8614450097084045, 0.8599920868873596, 0.8651432991027832, 0.8665962219238281, 0.8638224601745605, 0.8713511824607849, 0.8728041052818298, 0.8689737319946289, 0.8754457831382751, 0.8730682730674744, 0.8784837126731873], "val_loss": [2.2468526363372803, 2.0207931995391846, 1.1447259187698364, 0.8842589259147644, 0.7622332572937012, 0.6807296276092529, 0.658068835735321, 0.6364235281944275, 0.6293895840644836, 0.6089712977409363, 0.5729201436042786, 0.5532829165458679, 0.5352383852005005, 0.5192575454711914, 0.5130251049995422, 0.5073161125183105, 0.5091646909713745, 0.4972513020038605, 0.49568480253219604, 0.49152636528015137, 0.47726860642433167, 0.4750933349132538, 0.4748347997665405, 0.4748949408531189, 0.46179547905921936, 0.44947299361228943, 0.4507999122142792, 0.4441651999950409, 0.4453483819961548, 0.42193034291267395, 0.4163321852684021, 0.4191637337207794, 0.4135262966156006, 0.419090211391449, 0.42253053188323975, 0.4239790141582489, 0.4174731373786926, 0.4056338369846344, 0.41156142950057983, 0.39830443263053894, 0.40202590823173523, 0.40066641569137573, 0.4119676947593689, 0.4196609556674957, 0.40575870871543884, 0.42430418729782104, 0.4080309271812439, 0.3983994424343109], "val_accuracy": [0.4203333258628845, 0.4633333384990692, 0.6426666378974915, 0.6980000138282776, 0.7303333282470703, 0.746666669845581, 0.7543333172798157, 0.765999972820282, 0.7630000114440918, 0.765666663646698, 0.7766666412353516, 0.7873333096504211, 0.8040000200271606, 0.8130000233650208, 0.8109999895095825, 0.812333345413208, 0.8143333196640015, 0.8143333196640015, 0.8216666579246521, 0.8253333568572998, 0.8263333439826965, 0.8326666951179504, 0.8383333086967468, 0.8386666774749756, 0.8396666646003723, 0.8479999899864197, 0.8426666855812073, 0.8450000286102295, 0.8453333377838135, 0.8583333492279053, 0.859333336353302, 0.8600000143051147, 0.862333357334137, 0.859333336353302, 0.8600000143051147, 0.8613333106040955, 0.8650000095367432, 0.8636666536331177, 0.8683333396911621, 0.8700000047683716, 0.871666669845581, 0.8676666617393494, 0.8740000128746033, 0.871999979019165, 0.8686666488647461, 0.862333357334137, 0.8663333058357239, 0.8679999709129333]}, "mapping_values": [1, 10, 5, 5, 3, 10, 5, 5, 1, 16, 10, 6, 2, 2, 1, 1, 0], "tree_depth": 17}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.819428563117981, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.626643180847168, 0.8499845862388611, 0.7054551839828491, 0.6332273483276367, 0.579517662525177, 0.5450733304023743, 0.5067382454872131, 0.5032601356506348, 0.4676893353462219, 0.45081812143325806, 0.4566466808319092, 0.44575047492980957, 0.4644632339477539, 0.4811236262321472, 0.46713584661483765, 0.46025723218917847, 0.4328211545944214, 0.4659062623977661, 0.45881223678588867, 0.4695589542388916, 0.4780825972557068, 0.5128868222236633, 0.5135626196861267, 0.5323514938354492, 0.49485650658607483, 0.5660226941108704], "accuracy": [0.4621582329273224, 0.7040021419525146, 0.7446836829185486, 0.7666094303131104, 0.7829877138137817, 0.8078193068504333, 0.8041210174560547, 0.8245938420295715, 0.83119797706604, 0.83119797706604, 0.8384625315666199, 0.8301413059234619, 0.8350284099578857, 0.822348415851593, 0.8429533839225769, 0.8364813327789307, 0.841500461101532, 0.8381983637809753, 0.8450667262077332, 0.8429533839225769, 0.8432175517082214, 0.8444063067436218, 0.828292191028595, 0.8227446675300598, 0.8264430165290833, 0.8231409192085266], "val_loss": [0.8328643441200256, 0.6452803015708923, 0.5700058341026306, 0.5186166763305664, 0.4628499448299408, 0.44104987382888794, 0.45928335189819336, 0.4542207717895508, 0.46009162068367004, 0.44194090366363525, 0.47446566820144653, 0.4784777760505676, 0.45804110169410706, 0.5628430843353271, 0.42621514201164246, 0.46372509002685547, 0.453795462846756, 0.5002670288085938, 0.4636765122413635, 0.567105233669281, 0.5623951554298401, 0.546489417552948, 0.5140102505683899, 0.48174890875816345, 0.605566680431366, 0.4971870183944702], "val_accuracy": [0.7136666774749756, 0.7770000100135803, 0.7943333387374878, 0.8266666531562805, 0.8356666564941406, 0.8510000109672546, 0.8493333458900452, 0.8463333249092102, 0.8533333539962769, 0.8526666760444641, 0.8526666760444641, 0.859666645526886, 0.8496666550636292, 0.8613333106040955, 0.8513333201408386, 0.8573333621025085, 0.8556666374206543, 0.862333357334137, 0.8650000095367432, 0.862666666507721, 0.8676666617393494, 0.8569999933242798, 0.859333336353302, 0.8383333086967468, 0.8536666631698608, 0.856333315372467]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 1, 3], [31, 16], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [3, 7, 2, 7, 2, 2, 7, 9, 3], [0, 7, 7, 5, 5, 5, 4, 7], [99, 97], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 61, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 17, 9, 8, 2, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.add(tf.math.add(grad, grad), grad), grad), tf.math.add(tf.math.add(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3037145137786865, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 4, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [4], [30], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 2, 2, 0], [16, 2, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 6, 3, 3, 1, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3036835193634033, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 33], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [6, 2, 3, 0, 3, 5], [0, 2, 0, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 3, 1, 4, 2, 8], [0, 2, 4, 3, 0, 0, 1, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 11, 6, 5, 2, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(beta, tf.math.multiply(grad, sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), alpha)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 6, 3, 0, 3], [0, 2, 0, 2], [9, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 0, 1, 5, 9], [3, 2, 0, 3], [16, 22], [0, 1], [0], [0], [99], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [6, 1, 3, 6, 1, 1, 4, 1, 4, 1, 2], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [66, 99, 96, 99, 65, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 10, 7, 3, 2, 2, 1, 1, 1, 3, 1, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.subtract(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303212881088257, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}]