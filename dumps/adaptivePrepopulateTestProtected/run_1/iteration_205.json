[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8588571548461914, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2242443561553955, 1.8699345588684082, 1.3875690698623657, 1.1127464771270752, 0.9467350244522095, 0.8479753136634827, 0.7805587649345398, 0.7322952747344971, 0.6976667642593384, 0.6634672284126282, 0.6426889300346375, 0.6130898594856262, 0.592248797416687, 0.5842302441596985, 0.5640321373939514, 0.5489466786384583, 0.5345479846000671, 0.5269661545753479, 0.517775297164917, 0.49839964509010315, 0.4981173574924469, 0.47856736183166504, 0.4742603003978729, 0.4654339849948883, 0.4456125795841217, 0.4488106966018677, 0.4333524703979492, 0.42699092626571655, 0.41428515315055847, 0.4187776744365692, 0.4099101424217224, 0.4038434624671936, 0.3923461139202118, 0.3927096128463745, 0.37876272201538086, 0.3704974353313446, 0.3677572011947632, 0.3672577738761902, 0.35712164640426636, 0.35377228260040283, 0.34926652908325195, 0.3372327387332916], "accuracy": [0.2705058753490448, 0.48170650005340576, 0.5654470920562744, 0.6075815558433533, 0.6627922058105469, 0.6973979473114014, 0.7149649858474731, 0.7317395210266113, 0.741909921169281, 0.7586844563484192, 0.7631752490997314, 0.7749306559562683, 0.7837802171707153, 0.7860256433486938, 0.793950617313385, 0.8013472557067871, 0.805177628993988, 0.8074230551719666, 0.8121780753135681, 0.8197067975997925, 0.8144234418869019, 0.8245938420295715, 0.8310658931732178, 0.8319904804229736, 0.8391229510307312, 0.8372738361358643, 0.8461233377456665, 0.8451988101005554, 0.8502179384231567, 0.8471800088882446, 0.8527275323867798, 0.8551049828529358, 0.8577466607093811, 0.8576145768165588, 0.8632941246032715, 0.8636903762817383, 0.8679170608520508, 0.8684453964233398, 0.8712190985679626, 0.8712190985679626, 0.8757099509239197, 0.8762382864952087], "val_loss": [2.0340802669525146, 1.5050816535949707, 1.0305181741714478, 0.8258507251739502, 0.7409924864768982, 0.6841374635696411, 0.650350034236908, 0.6024317741394043, 0.578538179397583, 0.5495176315307617, 0.5327348709106445, 0.5161174535751343, 0.5013561248779297, 0.48787105083465576, 0.4762459695339203, 0.46553272008895874, 0.45506551861763, 0.4433419704437256, 0.4340507686138153, 0.43135350942611694, 0.42283251881599426, 0.42149901390075684, 0.41250187158584595, 0.4060019254684448, 0.40144088864326477, 0.3930439352989197, 0.39149153232574463, 0.3868580758571625, 0.3838120400905609, 0.3798612356185913, 0.379849374294281, 0.37437817454338074, 0.3769402801990509, 0.36962270736694336, 0.3603326380252838, 0.36037638783454895, 0.3560745418071747, 0.35489290952682495, 0.3531404733657837, 0.3537716567516327, 0.3542119264602661, 0.3495979309082031], "val_accuracy": [0.5523333549499512, 0.6543333530426025, 0.6846666932106018, 0.70333331823349, 0.7296666502952576, 0.750333309173584, 0.7490000128746033, 0.7720000147819519, 0.7836666703224182, 0.793666660785675, 0.8050000071525574, 0.8033333420753479, 0.812666654586792, 0.8213333487510681, 0.8293333053588867, 0.8303333520889282, 0.8379999995231628, 0.8416666388511658, 0.8443333506584167, 0.8489999771118164, 0.8506666421890259, 0.8483333587646484, 0.8489999771118164, 0.8586666584014893, 0.8616666793823242, 0.8610000014305115, 0.8546666502952576, 0.8629999756813049, 0.8600000143051147, 0.8610000014305115, 0.8640000224113464, 0.8673333525657654, 0.8633333444595337, 0.8673333525657654, 0.8673333525657654, 0.8700000047683716, 0.8759999871253967, 0.871999979019165, 0.8700000047683716, 0.8730000257492065, 0.8759999871253967, 0.8726666569709778]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 1], [0, 1, 8], [0, 0], [0, 39], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8522857427597046, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293482542037964, 2.1850790977478027, 1.7598464488983154, 1.3555508852005005, 1.04645574092865, 0.9013826847076416, 0.828502893447876, 0.8051844239234924, 0.7552834749221802, 0.7434054017066956, 0.702436089515686, 0.6721442341804504, 0.6541798710823059, 0.627406656742096, 0.6140213012695312, 0.5873019099235535, 0.5790293216705322, 0.5728815793991089, 0.5594526529312134, 0.5505793690681458, 0.536085307598114, 0.5258299112319946, 0.5153941512107849, 0.4986535608768463, 0.5003896951675415, 0.48113471269607544, 0.48154109716415405, 0.46346238255500793, 0.45391035079956055, 0.4500565826892853, 0.44250643253326416, 0.4341432452201843, 0.4317997992038727, 0.42472463846206665, 0.4072819650173187, 0.41506123542785645, 0.39728376269340515, 0.3876552879810333, 0.3904590904712677, 0.37593719363212585, 0.360144704580307, 0.3584858179092407, 0.3662779927253723, 0.36150360107421875, 0.35811567306518555, 0.34909987449645996, 0.34173232316970825, 0.33667176961898804, 0.32536980509757996, 0.3140571117401123, 0.32465577125549316], "accuracy": [0.1258750557899475, 0.33218860626220703, 0.4431383013725281, 0.5316338539123535, 0.6462818384170532, 0.6769251227378845, 0.6979262828826904, 0.7099458575248718, 0.7112666964530945, 0.7173424959182739, 0.7384757399559021, 0.741909921169281, 0.7602694630622864, 0.7637035846710205, 0.7619865536689758, 0.7798177003860474, 0.7783648371696472, 0.7815347909927368, 0.7881389260292053, 0.7967243194580078, 0.7969884872436523, 0.7996301651000977, 0.809140145778656, 0.8079513907432556, 0.8101968169212341, 0.81548011302948, 0.8148196935653687, 0.8210275769233704, 0.8271034359931946, 0.8317263126373291, 0.829216718673706, 0.8338396549224854, 0.8310658931732178, 0.8339717388153076, 0.8465195894241333, 0.843481719493866, 0.8477083444595337, 0.8477083444595337, 0.8516708612442017, 0.8508783578872681, 0.8609166741371155, 0.8619733452796936, 0.8577466607093811, 0.8568220734596252, 0.8590674996376038, 0.8696341514587402, 0.8640866279602051, 0.8685774803161621, 0.8713511824607849, 0.8779553771018982, 0.8704266548156738], "val_loss": [2.245553970336914, 2.013453722000122, 1.140849232673645, 0.8656688928604126, 0.7690509557723999, 0.6894188523292542, 0.6776851415634155, 0.6352378726005554, 0.6378442645072937, 0.6196851134300232, 0.5739715099334717, 0.5601630806922913, 0.5532063245773315, 0.5390147566795349, 0.5265500545501709, 0.5211663842201233, 0.5143263339996338, 0.5084344148635864, 0.5036061406135559, 0.4909113645553589, 0.48820507526397705, 0.47867122292518616, 0.4697994887828827, 0.46406880021095276, 0.4582664668560028, 0.4475659728050232, 0.43930062651634216, 0.4414038062095642, 0.4342101216316223, 0.4313892722129822, 0.4246405363082886, 0.4236571490764618, 0.4244431257247925, 0.4117995500564575, 0.40954768657684326, 0.40281781554222107, 0.39350080490112305, 0.39518940448760986, 0.39595887064933777, 0.3921337127685547, 0.3917372226715088, 0.3883143663406372, 0.3864070773124695, 0.38623836636543274, 0.39589542150497437, 0.3834565281867981, 0.38218066096305847, 0.3842686414718628, 0.3951416015625, 0.40195703506469727, 0.40530917048454285], "val_accuracy": [0.4076666533946991, 0.45899999141693115, 0.656000018119812, 0.6949999928474426, 0.7153333425521851, 0.7480000257492065, 0.7390000224113464, 0.7713333368301392, 0.7599999904632568, 0.7746666669845581, 0.7786666750907898, 0.7820000052452087, 0.7850000262260437, 0.7929999828338623, 0.8023333549499512, 0.7990000247955322, 0.8100000023841858, 0.8119999766349792, 0.8146666884422302, 0.8196666836738586, 0.8186666369438171, 0.831333339214325, 0.8253333568572998, 0.8296666741371155, 0.8330000042915344, 0.8370000123977661, 0.8370000123977661, 0.8399999737739563, 0.8396666646003723, 0.8456666469573975, 0.846666693687439, 0.8429999947547913, 0.8489999771118164, 0.8560000061988831, 0.8550000190734863, 0.8566666841506958, 0.8576666712760925, 0.862333357334137, 0.8650000095367432, 0.8616666793823242, 0.8633333444595337, 0.8669999837875366, 0.8633333444595337, 0.8683333396911621, 0.8659999966621399, 0.8713333606719971, 0.8706666827201843, 0.8700000047683716, 0.8676666617393494, 0.8700000047683716, 0.8709999918937683]}, "mapping_values": [1, 10, 5, 5, 3, 5, 3, 2, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0], [0, 9], [0], [0], [1], [0], [2], [0]], "fitness": -0.8299999833106995, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4669075012207031, 0.7766047716140747, 0.6745107173919678, 0.6207490563392639, 0.575590193271637, 0.5412437319755554, 0.5284478068351746, 0.4853404760360718, 0.4569539427757263, 0.4492228329181671, 0.4359927475452423, 0.4751061499118805, 0.43299511075019836, 0.46122950315475464, 0.4242398142814636, 0.44949379563331604, 0.46092572808265686, 0.46302950382232666], "accuracy": [0.5012547969818115, 0.7232862114906311, 0.7520803213119507, 0.7647602558135986, 0.793422281742096, 0.7976489067077637, 0.8075551390647888, 0.8257825970649719, 0.8381983637809753, 0.8341038227081299, 0.8436138033866882, 0.8253863453865051, 0.8540483713150024, 0.8400475382804871, 0.8548408150672913, 0.837141752243042, 0.8408400416374207, 0.8408400416374207], "val_loss": [0.7660712599754333, 0.5971377491950989, 0.5371720194816589, 0.5249364376068115, 0.4976593554019928, 0.5080724954605103, 0.46403300762176514, 0.45290327072143555, 0.4441395699977875, 0.45212695002555847, 0.4562201201915741, 0.4952109754085541, 0.45444953441619873, 0.48301932215690613, 0.5268265008926392, 0.47038471698760986, 0.5131086707115173, 0.5421009659767151], "val_accuracy": [0.7446666955947876, 0.7806666493415833, 0.8086666464805603, 0.8029999732971191, 0.8209999799728394, 0.8153333067893982, 0.8363333344459534, 0.8450000286102295, 0.8423333168029785, 0.8450000286102295, 0.8506666421890259, 0.8429999947547913, 0.8533333539962769, 0.8516666889190674, 0.8433333039283752, 0.8423333168029785, 0.8429999947547913, 0.8456666469573975]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 4, 3, 0, 3], [0, 1, 0, 2], [35, 39], [0, 1, 1, 0, 1, 1, 1, 1, 0, 0], [0, 2, 3, 0, 9, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 3, 2, 6, 8, 1, 4, 1, 4, 2, 8, 1, 4], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 6, 2], [16, 99, 96, 85, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 25, 13, 12, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.subtract(alpha, tf.math.pow(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))))), grad), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 3, 3, 5], [0, 2, 3, 3], [25, 13], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 3, 0, 3, 1, 1, 0], [61, 99, 96, 13, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(sigma, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), sigma)), tf.math.sqrt(alpha))), alpha), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 9, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 8, 0, 3, 3], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [94], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 5, 6, 8, 1, 4, 1, 4, 2, 8, 7], [0, 4, 0, 2, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 6, 4, 2, 0, 2, 1, 1, 1, 22, 12, 10, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.negative(grad)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(beta, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma))))), tf.math.sqrt(tf.math.add(grad, beta))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [5, 2, 3, 0, 3, 8], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [4, 2, 3, 0, 3, 5], [0, 2, 0, 3, 5], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 5, 6], [0, 0, 0, 3, 0, 0, 3, 2, 2, 0, 1], [16, 99, 96, 8, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 1, 11, 6, 5, 2, 2, 1, 1, 1, 23, 12, 11, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.sqrt(grad), grad))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), beta), tf.math.add(tf.math.square(tf.math.divide_no_nan(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]