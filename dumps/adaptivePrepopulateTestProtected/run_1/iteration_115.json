[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 7], [0, 5], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8631428480148315, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933599948883057, 2.192241668701172, 1.7727442979812622, 1.375093698501587, 1.0762637853622437, 0.9140334725379944, 0.8434291481971741, 0.7962518334388733, 0.7670350074768066, 0.7167412042617798, 0.6821995377540588, 0.6911391615867615, 0.6541514992713928, 0.6240526437759399, 0.6134288311004639, 0.5957517027854919, 0.5763577222824097, 0.5729904174804688, 0.5561635494232178, 0.5569134950637817, 0.5408463478088379, 0.534537136554718, 0.5214396119117737, 0.4968060851097107, 0.49099352955818176, 0.4808608889579773, 0.48247453570365906, 0.4578626751899719, 0.4592623710632324, 0.4578455090522766, 0.4441000819206238, 0.4349185824394226, 0.43232282996177673, 0.43523943424224854, 0.42175886034965515, 0.4151511490345001, 0.4057871103286743, 0.3917870819568634, 0.3946996331214905, 0.38892894983291626, 0.3874432444572449, 0.37311723828315735, 0.37563565373420715, 0.36398372054100037, 0.3650636672973633, 0.35816359519958496], "accuracy": [0.12613920867443085, 0.3171311616897583, 0.4430062174797058, 0.537709653377533, 0.6306960582733154, 0.6617355942726135, 0.6856426000595093, 0.700700044631958, 0.7045304179191589, 0.7199841737747192, 0.7371549606323242, 0.7345132827758789, 0.7440232634544373, 0.7577598690986633, 0.7663452625274658, 0.7732135653495789, 0.7796856164932251, 0.7798177003860474, 0.7839123010635376, 0.7854973077774048, 0.7928939461708069, 0.7874785661697388, 0.800818920135498, 0.8076872229576111, 0.8158763647079468, 0.8161405324935913, 0.8131026029586792, 0.8206313848495483, 0.8234050869941711, 0.8240655064582825, 0.8325188159942627, 0.8345000743865967, 0.8300092220306396, 0.8314621448516846, 0.8388587832450867, 0.8467837572097778, 0.8491612672805786, 0.8469158411026001, 0.8491612672805786, 0.8525954484939575, 0.852859616279602, 0.8551049828529358, 0.8510104417800903, 0.8565579056739807, 0.8568220734596252, 0.8599920868873596], "val_loss": [2.246030330657959, 2.0222344398498535, 1.1425012350082397, 0.8504830598831177, 0.7661395072937012, 0.6950416564941406, 0.6596277952194214, 0.6594384908676147, 0.6283713579177856, 0.5955705046653748, 0.5700041651725769, 0.5568150877952576, 0.5374457836151123, 0.5296525359153748, 0.5124334096908569, 0.5128759741783142, 0.5007721781730652, 0.4916081428527832, 0.4855770766735077, 0.479332834482193, 0.4831103980541229, 0.477977454662323, 0.4641045033931732, 0.4619326889514923, 0.4603198170661926, 0.46118423342704773, 0.4629664719104767, 0.457673043012619, 0.44575902819633484, 0.4412897229194641, 0.4421772360801697, 0.43693310022354126, 0.42338666319847107, 0.4180481433868408, 0.4255324602127075, 0.4267357587814331, 0.43726441264152527, 0.4302917420864105, 0.42755061388015747, 0.42166805267333984, 0.3983024060726166, 0.412680983543396, 0.42913687229156494, 0.4112972915172577, 0.4206435978412628, 0.4520106315612793], "val_accuracy": [0.43299999833106995, 0.4673333466053009, 0.6613333225250244, 0.7143333554267883, 0.7306666374206543, 0.746666669845581, 0.7526666522026062, 0.7480000257492065, 0.781333327293396, 0.7786666750907898, 0.7846666574478149, 0.784333348274231, 0.8033333420753479, 0.79666668176651, 0.8053333163261414, 0.8016666769981384, 0.809333324432373, 0.8100000023841858, 0.815666675567627, 0.8159999847412109, 0.8190000057220459, 0.8223333358764648, 0.82833331823349, 0.8306666612625122, 0.8343333601951599, 0.8343333601951599, 0.8339999914169312, 0.840666651725769, 0.8413333296775818, 0.843999981880188, 0.8426666855812073, 0.8426666855812073, 0.8543333411216736, 0.8516666889190674, 0.8513333201408386, 0.8566666841506958, 0.8543333411216736, 0.859000027179718, 0.859000027179718, 0.8573333621025085, 0.8613333106040955, 0.859333336353302, 0.8560000061988831, 0.8586666584014893, 0.8610000014305115, 0.8573333621025085]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8522857427597046, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223186731338501, 1.8618093729019165, 1.3860037326812744, 1.0852406024932861, 0.9318416714668274, 0.8326190710067749, 0.7702928185462952, 0.7159246206283569, 0.6848361492156982, 0.6495116353034973, 0.6308159232139587, 0.602372944355011, 0.5840298533439636, 0.5707737803459167, 0.5555647611618042, 0.53146892786026, 0.5131739974021912, 0.5127292275428772, 0.4997640550136566, 0.48604241013526917, 0.47478851675987244, 0.46813637018203735, 0.4567362666130066, 0.444894939661026, 0.45640480518341064, 0.43452295660972595, 0.42467233538627625, 0.42330417037010193, 0.4105716645717621, 0.4070662260055542, 0.3928564190864563, 0.38956114649772644, 0.3827401101589203, 0.3789482116699219, 0.3693772554397583, 0.3664238750934601, 0.36344215273857117, 0.3575783967971802, 0.3470260798931122, 0.34555113315582275, 0.33614474534988403, 0.3357541561126709, 0.3336107134819031, 0.3351915776729584, 0.3253973424434662, 0.3212263882160187, 0.31572848558425903, 0.31280872225761414, 0.3020144999027252, 0.29955926537513733, 0.3000723123550415, 0.2922731637954712, 0.2960568070411682, 0.28519564867019653, 0.2827233374118805, 0.2751370072364807, 0.27740272879600525, 0.27061450481414795, 0.26966673135757446], "accuracy": [0.2673358917236328, 0.4982168674468994, 0.563730001449585, 0.6197332143783569, 0.6667547225952148, 0.6939638257026672, 0.726192057132721, 0.7367587089538574, 0.7471932172775269, 0.7660810947418213, 0.7696473598480225, 0.7794214487075806, 0.789459764957428, 0.7926297783851624, 0.7988376617431641, 0.8075551390647888, 0.8128384351730347, 0.8193105459213257, 0.8211596608161926, 0.8251221776008606, 0.8302733898162842, 0.8345000743865967, 0.8403117060661316, 0.8424250483512878, 0.8378021121025085, 0.8457271456718445, 0.8521991968154907, 0.850350022315979, 0.8544445633888245, 0.8588033318519592, 0.8640866279602051, 0.8614450097084045, 0.8697662353515625, 0.8623695969581604, 0.8687095642089844, 0.8720116019248962, 0.8714832663536072, 0.8747853636741638, 0.8775591254234314, 0.8762382864952087, 0.8817857503890991, 0.8815215826034546, 0.8805969953536987, 0.8802007436752319, 0.8844274282455444, 0.8850878477096558, 0.884691596031189, 0.8883898854255676, 0.8926165699958801, 0.8934090733528137, 0.8931449055671692, 0.8971073627471924, 0.8926165699958801, 0.8972394466400146, 0.9001452922821045, 0.9014661312103271, 0.9014661312103271, 0.9033153057098389, 0.9039757251739502], "val_loss": [2.037856101989746, 1.5122984647750854, 1.0511409044265747, 0.8461551070213318, 0.7657111287117004, 0.7139496803283691, 0.6691190004348755, 0.6330574750900269, 0.6075353622436523, 0.585798442363739, 0.570783793926239, 0.5526341199874878, 0.5390116572380066, 0.5244795083999634, 0.5136168003082275, 0.5028133988380432, 0.49042394757270813, 0.4831659197807312, 0.4746924936771393, 0.4646734297275543, 0.4610974192619324, 0.4585818648338318, 0.4468221068382263, 0.4461016356945038, 0.44056078791618347, 0.43312767148017883, 0.4259808659553528, 0.415894478559494, 0.41908586025238037, 0.4079751670360565, 0.40391507744789124, 0.39792245626449585, 0.39431554079055786, 0.39191654324531555, 0.3911246359348297, 0.3872421085834503, 0.3878718316555023, 0.3828340172767639, 0.37876638770103455, 0.3766392469406128, 0.3716484308242798, 0.38136589527130127, 0.36883047223091125, 0.3667561709880829, 0.3704589009284973, 0.36595606803894043, 0.3645196259021759, 0.3618960380554199, 0.35592061281204224, 0.3542639911174774, 0.35569432377815247, 0.3568541705608368, 0.3538036346435547, 0.35111963748931885, 0.35409530997276306, 0.350362628698349, 0.3481796979904175, 0.3491922914981842, 0.34823349118232727], "val_accuracy": [0.5569999814033508, 0.6553333401679993, 0.6636666655540466, 0.6923333406448364, 0.7149999737739563, 0.7366666793823242, 0.7483333349227905, 0.7583333253860474, 0.7680000066757202, 0.7793333530426025, 0.7886666655540466, 0.7996666431427002, 0.8023333549499512, 0.812666654586792, 0.8183333277702332, 0.815666675567627, 0.8243333101272583, 0.8286666870117188, 0.8289999961853027, 0.8370000123977661, 0.8366666436195374, 0.8370000123977661, 0.8423333168029785, 0.8376666903495789, 0.8456666469573975, 0.8450000286102295, 0.8503333330154419, 0.8553333282470703, 0.8496666550636292, 0.8569999933242798, 0.8560000061988831, 0.8600000143051147, 0.8583333492279053, 0.8629999756813049, 0.8633333444595337, 0.8646666407585144, 0.8646666407585144, 0.8663333058357239, 0.871999979019165, 0.8683333396911621, 0.8713333606719971, 0.862666666507721, 0.8730000257492065, 0.874666690826416, 0.8733333349227905, 0.8740000128746033, 0.8733333349227905, 0.8723333477973938, 0.8796666860580444, 0.878000020980835, 0.8743333220481873, 0.8756666779518127, 0.8776666522026062, 0.8809999823570251, 0.875333309173584, 0.878000020980835, 0.8809999823570251, 0.8809999823570251, 0.8773333430290222]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 5], [0], [0], [1], [0], [2], [0]], "fitness": -0.836571455001831, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.681188702583313, 1.1205229759216309, 0.8134732842445374, 0.7345378994941711, 0.7122382521629333, 0.6359414458274841, 0.5793631672859192, 0.5557337403297424, 0.5501911044120789, 0.5451790690422058, 0.5412822365760803, 0.5174914598464966, 0.5053730010986328, 0.4901742935180664, 0.4932105541229248, 0.4674215614795685, 0.44174081087112427, 0.44358375668525696, 0.45816856622695923, 0.4860911965370178, 0.49067649245262146, 0.49600106477737427, 0.4903790354728699, 0.47541502118110657], "accuracy": [0.4519878625869751, 0.6460176706314087, 0.7210407853126526, 0.7367587089538574, 0.7413815855979919, 0.7689869403839111, 0.7865539789199829, 0.7988376617431641, 0.8057059645652771, 0.8062343001365662, 0.8072909712791443, 0.8148196935653687, 0.8301413059234619, 0.8252542614936829, 0.8285563588142395, 0.8335754871368408, 0.8409721255302429, 0.8362171649932861, 0.8407079577445984, 0.8378021121025085, 0.824329674243927, 0.8347642421722412, 0.8318583965301514, 0.828820526599884], "val_loss": [1.0947338342666626, 0.7263889908790588, 0.6570701003074646, 0.6300104260444641, 0.5686115622520447, 0.5057581663131714, 0.5007187724113464, 0.4992661476135254, 0.5041151642799377, 0.47079843282699585, 0.48858755826950073, 0.4611626863479614, 0.48393726348876953, 0.5002557039260864, 0.4971354901790619, 0.4937054514884949, 0.48106929659843445, 0.5416327118873596, 0.5675313472747803, 0.5352070927619934, 0.545464277267456, 0.500273585319519, 0.49401846528053284, 0.5847315192222595], "val_accuracy": [0.5789999961853027, 0.7599999904632568, 0.7620000243186951, 0.7736666798591614, 0.7876666784286499, 0.8113333582878113, 0.8230000138282776, 0.8203333616256714, 0.8299999833106995, 0.831333339214325, 0.8366666436195374, 0.8420000076293945, 0.8393333554267883, 0.840666651725769, 0.8303333520889282, 0.8479999899864197, 0.8476666808128357, 0.8356666564941406, 0.8489999771118164, 0.8286666870117188, 0.8460000157356262, 0.8413333296775818, 0.8443333506584167, 0.8486666679382324]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [5, 2, 3, 0, 3, 7, 2, 3, 4, 6, 6, 1, 6], [0, 1, 0, 2, 2, 3, 1, 1, 0, 1, 0, 0], [39, 37, 4, 1, 84], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [8, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 0, 2, 8], [0, 1, 0, 2, 0, 0, 3, 1, 3, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 13, 12, 5, 10, 6, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(grad, grad), tf.math.pow(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, alpha), tf.math.subtract(tf.math.divide_no_nan(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), alpha)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3034863471984863, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 5, 0, 3, 3], [0, 2, 0, 2], [62, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 4, 6], [0, 2, 0, 3, 4, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 9, 6, 6, 8, 4, 3, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 94, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 14, 8, 6, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, grad))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3037075996398926, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 2, 0, 3], [0, 1, 0, 2, 3], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [8, 3, 3, 6, 8, 1, 1, 1, 4, 2, 8], [3, 0, 0, 3, 0, 0, 3, 1, 2, 2], [16, 99, 96, 39, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 10, 6, 4, 2, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), sigma)))), alpha))", "other_info": {"loss": [2.3057026863098145, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10698718577623367, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3831679821014404, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 2, 3, 4, 3, 4, 1, 6, 9, 5], [0, 2, 0, 2, 3, 1, 3], [39, 39, 38], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 1, 2, 3, 8, 5, 1, 9, 7], [0, 2, 0, 3, 4, 4, 3, 4], [16, 16, 13], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 3, 4, 4, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 10, 7, 3, 22, 14, 8, 3, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.pow(tf.math.subtract(tf.math.divide_no_nan(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.square(grad)), alpha), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.square(grad)), grad), tf.math.subtract(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), grad))))), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma), grad), tf.math.sqrt(beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}]