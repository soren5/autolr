[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8605714440345764, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220914602279663, 1.8642593622207642, 1.402144193649292, 1.100055456161499, 0.9381406903266907, 0.8538020849227905, 0.7971730828285217, 0.7376627326011658, 0.7007283568382263, 0.6719072461128235, 0.6503061652183533, 0.6254134178161621, 0.6071309447288513, 0.5915992856025696, 0.5810041427612305, 0.5610502362251282, 0.5396584272384644, 0.5358635783195496, 0.5247661471366882, 0.5135836005210876, 0.5000914335250854, 0.4958285391330719, 0.4771900475025177, 0.4707403779029846, 0.468264102935791, 0.4545966386795044, 0.44509363174438477, 0.44241097569465637, 0.42229360342025757, 0.42650464177131653, 0.43020930886268616, 0.4173394739627838, 0.4061610996723175, 0.3995146155357361, 0.40625837445259094, 0.3887355625629425, 0.3856791853904724, 0.3828849792480469, 0.3849412500858307, 0.3684728443622589, 0.3630771338939667, 0.3573109805583954, 0.35648006200790405, 0.3507075309753418, 0.34281349182128906, 0.339775025844574, 0.33572298288345337, 0.3296654522418976, 0.32955020666122437, 0.3233935832977295, 0.3219825029373169, 0.32093173265457153, 0.3153582215309143, 0.3057363033294678, 0.3057255148887634, 0.2976580262184143, 0.2958521842956543], "accuracy": [0.2786950170993805, 0.48712190985679626, 0.5635979175567627, 0.6145819425582886, 0.6664905548095703, 0.6910579800605774, 0.709021270275116, 0.7363624572753906, 0.7446836829185486, 0.7557786107063293, 0.7630431652069092, 0.7677981853485107, 0.7808743715286255, 0.789459764957428, 0.7876105904579163, 0.7977809906005859, 0.8074230551719666, 0.8075551390647888, 0.8090080618858337, 0.817461371421814, 0.8169330358505249, 0.8208954930305481, 0.8298771381378174, 0.8321225643157959, 0.8343679904937744, 0.8370096683502197, 0.8403117060661316, 0.8404437899589539, 0.8487650156021118, 0.8488970994949341, 0.8479725122451782, 0.8492933511734009, 0.8508783578872681, 0.858671247959137, 0.8562937378883362, 0.8651432991027832, 0.8595958352088928, 0.8621054291725159, 0.8607845902442932, 0.8712190985679626, 0.8705587387084961, 0.8692378997802734, 0.8710870146751404, 0.8749174475669861, 0.8768987059593201, 0.8775591254234314, 0.8782195448875427, 0.8829745054244995, 0.8821820020675659, 0.8831065893173218, 0.8891823887825012, 0.8864086866378784, 0.8865407705307007, 0.8930128216743469, 0.887597382068634, 0.8918240666389465, 0.89552241563797], "val_loss": [2.034984588623047, 1.5094506740570068, 1.0347727537155151, 0.8278370499610901, 0.7353268265724182, 0.6826523542404175, 0.636788010597229, 0.6049191355705261, 0.5713038444519043, 0.557973325252533, 0.5340937376022339, 0.5258381962776184, 0.5100003480911255, 0.4921421408653259, 0.4839932918548584, 0.474803626537323, 0.46411508321762085, 0.4595087468624115, 0.44818753004074097, 0.44597166776657104, 0.43790656328201294, 0.4252018928527832, 0.42817991971969604, 0.42021703720092773, 0.418363481760025, 0.40546324849128723, 0.40692025423049927, 0.40172049403190613, 0.40404534339904785, 0.3949703872203827, 0.3936404883861542, 0.39261874556541443, 0.3840985596179962, 0.381735622882843, 0.37847399711608887, 0.3782023787498474, 0.3743126690387726, 0.37618887424468994, 0.37576425075531006, 0.3681040108203888, 0.3711371123790741, 0.36602920293807983, 0.3610166311264038, 0.36020421981811523, 0.3596937656402588, 0.35579100251197815, 0.3567393124103546, 0.35235464572906494, 0.3511078953742981, 0.3491400182247162, 0.34991464018821716, 0.35049664974212646, 0.3547532260417938, 0.34699130058288574, 0.3478095829486847, 0.3498876988887787, 0.34463492035865784], "val_accuracy": [0.5216666460037231, 0.6620000004768372, 0.6846666932106018, 0.7089999914169312, 0.7306666374206543, 0.7513333559036255, 0.7673333287239075, 0.7746666669845581, 0.7829999923706055, 0.8006666898727417, 0.8136666417121887, 0.8026666641235352, 0.812666654586792, 0.8240000009536743, 0.8326666951179504, 0.8396666646003723, 0.8366666436195374, 0.8363333344459534, 0.843666672706604, 0.8426666855812073, 0.8489999771118164, 0.8523333072662354, 0.8483333587646484, 0.8553333282470703, 0.8579999804496765, 0.8603333234786987, 0.8610000014305115, 0.8619999885559082, 0.8666666746139526, 0.862333357334137, 0.8636666536331177, 0.8636666536331177, 0.8679999709129333, 0.8679999709129333, 0.8713333606719971, 0.8656666874885559, 0.8740000128746033, 0.8740000128746033, 0.8643333315849304, 0.8733333349227905, 0.8713333606719971, 0.8759999871253967, 0.8763333559036255, 0.8786666393280029, 0.8786666393280029, 0.8793333172798157, 0.8763333559036255, 0.8790000081062317, 0.8803333044052124, 0.8786666393280029, 0.8790000081062317, 0.8859999775886536, 0.8766666650772095, 0.8823333382606506, 0.8833333253860474, 0.8776666522026062, 0.8816666603088379]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8502857089042664, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933835983276367, 2.1907618045806885, 1.7811681032180786, 1.3427728414535522, 1.069270372390747, 0.9202608466148376, 0.8546591997146606, 0.8158367872238159, 0.7567300200462341, 0.7406549453735352, 0.7109729051589966, 0.6856189370155334, 0.6657664179801941, 0.6292022466659546, 0.6135719418525696, 0.599435031414032, 0.5887357592582703, 0.579787015914917, 0.5685973167419434, 0.5506285429000854, 0.536586344242096, 0.5227622985839844, 0.5227524638175964, 0.5043227076530457, 0.503673255443573, 0.49268838763237, 0.48105281591415405, 0.4611980617046356, 0.4600232243537903, 0.44987860321998596, 0.4480377733707428, 0.43802309036254883, 0.42074909806251526, 0.41581496596336365, 0.41437795758247375, 0.3986892104148865, 0.39879873394966125, 0.3813883662223816, 0.3808242976665497, 0.3830570578575134, 0.36039796471595764, 0.3702279031276703, 0.3537590801715851, 0.3560200035572052], "accuracy": [0.12455421686172485, 0.33179235458374023, 0.43587371706962585, 0.5429930090904236, 0.6349227428436279, 0.6544709801673889, 0.6897371411323547, 0.6972658634185791, 0.7071720957756042, 0.7113987803459167, 0.7300224304199219, 0.7375511527061462, 0.7471932172775269, 0.7593448758125305, 0.7651565074920654, 0.772288978099823, 0.7730814814567566, 0.7770439982414246, 0.7814027070999146, 0.7868181467056274, 0.7981772422790527, 0.7998943328857422, 0.796328067779541, 0.8063663840293884, 0.802800178527832, 0.8112534880638123, 0.8170651197433472, 0.8252542614936829, 0.8244617581367493, 0.8272355198860168, 0.8296129703521729, 0.8339717388153076, 0.8436138033866882, 0.846387505531311, 0.8421608805656433, 0.8466516733169556, 0.8500858545303345, 0.8594637513160706, 0.8556333184242249, 0.8577466607093811, 0.8631620407104492, 0.8599920868873596, 0.8679170608520508, 0.8679170608520508], "val_loss": [2.2451767921447754, 2.0164759159088135, 1.122166633605957, 0.8441054821014404, 0.7681025266647339, 0.7080069780349731, 0.6521477699279785, 0.6159909963607788, 0.6097543239593506, 0.592377781867981, 0.5528477430343628, 0.5351406931877136, 0.5069999098777771, 0.49868252873420715, 0.5016186237335205, 0.48973900079727173, 0.47911161184310913, 0.4770275056362152, 0.45967236161231995, 0.45682016015052795, 0.4562956690788269, 0.4469931125640869, 0.4386923015117645, 0.4276641011238098, 0.42725443840026855, 0.42838191986083984, 0.4211595356464386, 0.41195425391197205, 0.4018332064151764, 0.39807817339897156, 0.41124096512794495, 0.39500951766967773, 0.388001024723053, 0.38789910078048706, 0.37494784593582153, 0.380979984998703, 0.3836457133293152, 0.3799085021018982, 0.38119184970855713, 0.3817022442817688, 0.37490642070770264, 0.3739415407180786, 0.398151695728302, 0.39784252643585205], "val_accuracy": [0.4180000126361847, 0.4973333477973938, 0.6579999923706055, 0.6976666450500488, 0.7106666564941406, 0.7329999804496765, 0.7443333268165588, 0.7630000114440918, 0.7706666588783264, 0.7693333625793457, 0.7906666398048401, 0.7886666655540466, 0.8023333549499512, 0.8056666851043701, 0.8009999990463257, 0.8063333630561829, 0.8130000233650208, 0.8136666417121887, 0.8209999799728394, 0.8163333535194397, 0.8180000185966492, 0.8293333053588867, 0.8403333425521851, 0.8410000205039978, 0.8396666646003723, 0.840666651725769, 0.8393333554267883, 0.8433333039283752, 0.8519999980926514, 0.8493333458900452, 0.8529999852180481, 0.8533333539962769, 0.8600000143051147, 0.8560000061988831, 0.8550000190734863, 0.8636666536331177, 0.8610000014305115, 0.8600000143051147, 0.8653333187103271, 0.8629999756813049, 0.8619999885559082, 0.8629999756813049, 0.8613333106040955, 0.8600000143051147]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8145714402198792, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6487164497375488, 0.8758525848388672, 0.6979705691337585, 0.626909077167511, 0.5782752633094788, 0.5398076176643372, 0.5306335091590881, 0.5007768273353577, 0.47736531496047974, 0.4883648157119751, 0.4624307155609131, 0.4651337265968323, 0.4591428339481354, 0.4512488842010498, 0.47441795468330383, 0.46168187260627747, 0.4677259922027588, 0.44589269161224365, 0.47059786319732666, 0.4717850387096405, 0.461280882358551, 0.4703100323677063, 0.44896650314331055, 0.5215579867362976, 0.5480986833572388, 0.53654545545578, 0.5922991633415222, 0.5664875507354736], "accuracy": [0.4788006842136383, 0.698190450668335, 0.7424382567405701, 0.7637035846710205, 0.7836481332778931, 0.8014793395996094, 0.8006868362426758, 0.8142913579940796, 0.8191784620285034, 0.821820080280304, 0.8305375576019287, 0.8379341959953308, 0.8350284099578857, 0.8383304476737976, 0.8379341959953308, 0.8350284099578857, 0.8376700282096863, 0.8502179384231567, 0.8348963260650635, 0.8411042094230652, 0.8545766472816467, 0.8370096683502197, 0.843481719493866, 0.8467837572097778, 0.819970965385437, 0.8210275769233704, 0.8198388814926147, 0.8087438941001892], "val_loss": [0.9361449480056763, 0.6188685297966003, 0.5645098686218262, 0.5186935663223267, 0.5055047869682312, 0.5040730237960815, 0.5129745602607727, 0.5067765116691589, 0.5054759383201599, 0.4895646870136261, 0.48278841376304626, 0.5226729512214661, 0.5019630789756775, 0.5435478687286377, 0.5326313376426697, 0.494680792093277, 0.5844125151634216, 0.5099025368690491, 0.5960078239440918, 0.6335667371749878, 0.5880674719810486, 0.5696711540222168, 0.6916608810424805, 0.6176700592041016, 0.6132992506027222, 0.6016027331352234, 0.5574153065681458, 0.6007317304611206], "val_accuracy": [0.6809999942779541, 0.7646666765213013, 0.7806666493415833, 0.7933333516120911, 0.8130000233650208, 0.8113333582878113, 0.8256666660308838, 0.8309999704360962, 0.8286666870117188, 0.8326666951179504, 0.8363333344459534, 0.8333333134651184, 0.8393333554267883, 0.8266666531562805, 0.8389999866485596, 0.8333333134651184, 0.847000002861023, 0.8506666421890259, 0.8336666822433472, 0.8486666679382324, 0.8399999737739563, 0.8363333344459534, 0.8510000109672546, 0.8213333487510681, 0.8320000171661377, 0.8220000267028809, 0.8180000185966492, 0.8326666951179504]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [2, 2, 3, 0, 3, 4], [0, 1, 0, 2, 0, 3], [0, 39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 6, 6, 0, 8, 7, 5], [0, 2, 0, 3, 2, 5, 2, 3, 3, 0], [79, 27, 16, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [6, 3, 6, 3, 6, 0, 8, 9, 1, 5, 3, 9, 5], [0, 4, 0, 0, 4, 6, 1], [63, 36, 20, 58, 77], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 8, 8, 1, 4, 1, 4, 2, 8, 4], [2, 1, 3, 6, 2, 2, 4, 2, 1, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 3, 24, 14, 10, 3, 18, 11, 7, 4, 22, 12, 10, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), beta), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.sqrt(tf.math.add(beta, grad))))), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(tf.math.sqrt(beta)), tf.math.add(grad, tf.math.square(grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.sqrt(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.math.square(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, grad)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.math.pow(beta, tf.math.subtract(alpha, sigma)), tf.math.pow(grad, tf.math.add(beta, beta))))), grad), tf.math.sqrt(tf.math.pow(beta, alpha))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [2, 2, 3, 0, 3, 2], [0, 2, 0, 3], [16, 16], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 7, 1, 4, 2, 7, 5, 1, 4, 7, 2, 1, 2, 0], [0, 0, 3, 4, 2, 2, 7, 6, 4, 1, 1, 3], [65, 64], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 1, 0, 1, 1, 26, 14, 12, 2, 1, 0, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.math.add(grad, tf.math.square(beta)), tf.math.subtract(tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(grad, grad), grad)), alpha), alpha), tf.math.negative(sigma))))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3032922744750977, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 3, 2, 3, 6], [1, 0, 1, 0, 2, 1], [63, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 9, 3, 5], [0, 2, 0, 3], [0, 87], [0, 1], [0], [0], [0, 42], [1, 1], [8], [1], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 12, 6, 6, 2, 6, 4, 2, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32)))), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.310310125350952, 2.3095855712890625, 2.30983829498291, 2.3092093467712402, 2.3102457523345947, 2.309568166732788], "accuracy": [0.09470347315073013, 0.10091137140989304, 0.09430722147226334, 0.09681680053472519, 0.09153348207473755, 0.0948355570435524], "val_loss": [2.3085732460021973, 2.3085732460021973, 2.3085732460021973, 2.3085732460021973, 2.3085732460021973, 2.3085732460021973], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 8, 3, 5], [0, 2, 0, 1], [16, 16], [0, 1], [9], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 7, 7, 5, 8], [0, 0, 0, 0, 0, 0, 3, 1, 2, 0, 1, 6], [16, 99, 96, 99, 61, 31, 76]], "fitness": -0.07028571516275406, "mapping_values": [1, 7, 4, 3, 2, 10, 6, 4, 2, 1, 1, 0, 1, 27, 15, 12, 7], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.add(alpha, beta))))))), tf.math.add(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(alpha)))), grad)", "other_info": {"loss": [7.871482221286641e+23, 1.2048243734195844e+24, 1.0850404407769514e+24, 1.0042336857285323e+24, 1.1215562750740177e+24, 9.116295893266296e+23], "accuracy": [0.09417514503002167, 0.09325055778026581, 0.09787346422672272, 0.09325055778026581, 0.09430722147226334, 0.0936468094587326], "val_loss": [1.0235082995001436e+24, 1.0235082995001436e+24, 1.0235082995001436e+24, 1.0235082995001436e+24, 1.0235082995001436e+24, 1.0235082995001436e+24], "val_accuracy": [0.07766667008399963, 0.07766667008399963, 0.07766667008399963, 0.07766667008399963, 0.07766667008399963, 0.07766667008399963]}}]