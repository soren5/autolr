[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8657143115997314, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2244350910186768, 1.8652890920639038, 1.3858884572982788, 1.0960949659347534, 0.938532829284668, 0.8360130786895752, 0.7725920081138611, 0.7269112467765808, 0.6834315061569214, 0.6452364921569824, 0.6256654858589172, 0.6058931350708008, 0.5834354162216187, 0.5682069659233093, 0.5574259161949158, 0.5379756689071655, 0.5237680077552795, 0.5138509273529053, 0.500400185585022, 0.4882473349571228, 0.47271326184272766, 0.46960577368736267, 0.46245649456977844, 0.4527378976345062, 0.4525437653064728, 0.4386956989765167, 0.42185983061790466, 0.4156748056411743, 0.41091370582580566, 0.4123140871524811, 0.40627941489219666, 0.392511248588562, 0.38476505875587463, 0.37652942538261414, 0.3723297715187073, 0.3742252290248871, 0.3689506947994232, 0.3665524125099182, 0.3628363013267517, 0.35101643204689026, 0.3481423854827881, 0.3453987240791321, 0.33538272976875305, 0.3306756913661957, 0.32560357451438904, 0.3211383521556854, 0.32379215955734253, 0.31790995597839355, 0.3039986193180084, 0.3042481243610382, 0.30796536803245544, 0.3007924258708954, 0.29581817984580994, 0.28500455617904663, 0.28491657972335815, 0.27772417664527893], "accuracy": [0.27261921763420105, 0.49451854825019836, 0.5715228915214539, 0.6149781942367554, 0.6621318459510803, 0.7009642124176025, 0.7213049530982971, 0.7403249144554138, 0.7528728246688843, 0.7637035846710205, 0.7763835787773132, 0.7788931727409363, 0.7852331399917603, 0.7952714562416077, 0.800818920135498, 0.8042530417442322, 0.807158887386322, 0.8210275769233704, 0.8195747137069702, 0.8253863453865051, 0.8333113193511963, 0.8301413059234619, 0.837537944316864, 0.8363492488861084, 0.8379341959953308, 0.8466516733169556, 0.8543124794960022, 0.8549728989601135, 0.8548408150672913, 0.8527275323867798, 0.8619733452796936, 0.8619733452796936, 0.86553955078125, 0.8696341514587402, 0.8660678863525391, 0.8685774803161621, 0.8684453964233398, 0.874389111995697, 0.8712190985679626, 0.8790120482444763, 0.878351628780365, 0.8766345381736755, 0.880729079246521, 0.8798044919967651, 0.8845595121383667, 0.8874653577804565, 0.8885219693183899, 0.889050304889679, 0.8934090733528137, 0.8947299122810364, 0.8920882344245911, 0.8916919827461243, 0.8938053250312805, 0.8992207050323486, 0.8969752788543701, 0.9029190540313721], "val_loss": [2.0365238189697266, 1.5072176456451416, 1.0318377017974854, 0.8253092169761658, 0.7358055114746094, 0.6829502582550049, 0.6379283666610718, 0.6048753261566162, 0.5745207071304321, 0.5516840815544128, 0.5346409678459167, 0.5182144045829773, 0.5045562386512756, 0.49402499198913574, 0.48327094316482544, 0.469506174325943, 0.4604375958442688, 0.4588121771812439, 0.44211363792419434, 0.44305795431137085, 0.4316839575767517, 0.4290490746498108, 0.4196150600910187, 0.4192903935909271, 0.4107619524002075, 0.4070787727832794, 0.4016146659851074, 0.39222395420074463, 0.3930668234825134, 0.39179232716560364, 0.3853909969329834, 0.3888571858406067, 0.37878653407096863, 0.37778759002685547, 0.37565091252326965, 0.3680250644683838, 0.37563249468803406, 0.36735936999320984, 0.3620074987411499, 0.3708436191082001, 0.35585319995880127, 0.3533003032207489, 0.3491734266281128, 0.3563311696052551, 0.34698590636253357, 0.344712495803833, 0.34761103987693787, 0.34175774455070496, 0.34584876894950867, 0.3399331569671631, 0.33473747968673706, 0.3377871811389923, 0.33410781621932983, 0.33437398076057434, 0.3279517889022827, 0.3275816738605499], "val_accuracy": [0.5730000138282776, 0.6616666913032532, 0.6946666836738586, 0.7123333215713501, 0.7463333606719971, 0.762666642665863, 0.7753333449363708, 0.7796666622161865, 0.800000011920929, 0.8100000023841858, 0.8073333501815796, 0.8143333196640015, 0.8236666917800903, 0.8209999799728394, 0.8206666707992554, 0.8253333568572998, 0.828000009059906, 0.8263333439826965, 0.8393333554267883, 0.831333339214325, 0.8403333425521851, 0.8366666436195374, 0.843666672706604, 0.8416666388511658, 0.8473333120346069, 0.8450000286102295, 0.8510000109672546, 0.8510000109672546, 0.8496666550636292, 0.8506666421890259, 0.8526666760444641, 0.8510000109672546, 0.8556666374206543, 0.8556666374206543, 0.8529999852180481, 0.859000027179718, 0.8546666502952576, 0.8586666584014893, 0.8619999885559082, 0.8543333411216736, 0.8643333315849304, 0.8650000095367432, 0.8640000224113464, 0.8619999885559082, 0.8653333187103271, 0.8686666488647461, 0.8636666536331177, 0.8669999837875366, 0.8683333396911621, 0.871666669845581, 0.8733333349227905, 0.8709999918937683, 0.8703333139419556, 0.871666669845581, 0.8709999918937683, 0.8730000257492065]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 1], [0, 4, 7, 5], [0, 3, 2], [0], [0, 0, 1, 1], [0, 6], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8482857346534729, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2929904460906982, 2.188584804534912, 1.7752001285552979, 1.3570973873138428, 1.068332314491272, 0.8946599364280701, 0.8266813158988953, 0.7985311150550842, 0.7566680312156677, 0.7360029220581055, 0.6864874958992004, 0.6832260489463806, 0.6519492268562317, 0.6246098875999451, 0.5995052456855774, 0.605134129524231, 0.5707204341888428, 0.5735622048377991, 0.5485402345657349, 0.5437525510787964, 0.5358617305755615, 0.5281312465667725, 0.5188038349151611, 0.5050556063652039, 0.49452725052833557, 0.49177858233451843, 0.4992305636405945, 0.48340049386024475, 0.46436741948127747, 0.46308836340904236, 0.45449501276016235, 0.43989771604537964, 0.43739140033721924, 0.4254297614097595, 0.421885222196579, 0.4122892916202545, 0.4215070307254791, 0.41117987036705017, 0.39691197872161865, 0.3948785364627838, 0.389965295791626, 0.3817359507083893, 0.369225412607193, 0.378024160861969, 0.37145182490348816, 0.36573174595832825, 0.35679149627685547, 0.3551737368106842, 0.3392195999622345, 0.34021174907684326, 0.3323020040988922, 0.3331731855869293, 0.3345012664794922, 0.33575791120529175, 0.31824150681495667, 0.32144981622695923, 0.3239724040031433, 0.30788740515708923, 0.31951016187667847, 0.3168548047542572, 0.30436286330223083], "accuracy": [0.1294412910938263, 0.3339056968688965, 0.44023245573043823, 0.5418042540550232, 0.6333377361297607, 0.6684718132019043, 0.6988508701324463, 0.7077004313468933, 0.7003037929534912, 0.7078325152397156, 0.7359662055969238, 0.7280412316322327, 0.7541936039924622, 0.76106196641922, 0.7718927264213562, 0.7729493975639343, 0.7799497842788696, 0.7872143983840942, 0.8001585006713867, 0.7950072884559631, 0.7942147850990295, 0.7981772422790527, 0.7977809906005859, 0.8031964302062988, 0.8099326491355896, 0.8153480291366577, 0.809140145778656, 0.8115176558494568, 0.8183859586715698, 0.8212917447090149, 0.8204993009567261, 0.8286884427070618, 0.8317263126373291, 0.8335754871368408, 0.8317263126373291, 0.8392550349235535, 0.8442742228507996, 0.8449346423149109, 0.8445383906364441, 0.8446704745292664, 0.8495575189590454, 0.846387505531311, 0.8502179384231567, 0.8556333184242249, 0.8548408150672913, 0.8565579056739807, 0.8594637513160706, 0.8636903762817383, 0.8660678863525391, 0.8679170608520508, 0.872407853603363, 0.8683133125305176, 0.8741249442100525, 0.8701624870300293, 0.8717474341392517, 0.8717474341392517, 0.8762382864952087, 0.8802007436752319, 0.8749174475669861, 0.874389111995697, 0.8774270415306091], "val_loss": [2.24648380279541, 2.0221359729766846, 1.1540138721466064, 0.8831927180290222, 0.7706334590911865, 0.6996486186981201, 0.6730838418006897, 0.6484929919242859, 0.6456332802772522, 0.6313155293464661, 0.5907618403434753, 0.5755032300949097, 0.5468384027481079, 0.5399170517921448, 0.5507422089576721, 0.5366100072860718, 0.5150711536407471, 0.5017971396446228, 0.5037947297096252, 0.5010681748390198, 0.4890802502632141, 0.48687291145324707, 0.4980369806289673, 0.5075754523277283, 0.4870773255825043, 0.4754122793674469, 0.48116523027420044, 0.47658899426460266, 0.4670887887477875, 0.4550045430660248, 0.45201489329338074, 0.4501502215862274, 0.44274231791496277, 0.4340945780277252, 0.43520069122314453, 0.4396897852420807, 0.43749141693115234, 0.42071300745010376, 0.4259311854839325, 0.4432162940502167, 0.43230223655700684, 0.42687276005744934, 0.4283464848995209, 0.43087199330329895, 0.41467806696891785, 0.4115700423717499, 0.4238784611225128, 0.4351680874824524, 0.4293084442615509, 0.4378926157951355, 0.41970324516296387, 0.4147687554359436, 0.42760252952575684, 0.4172622859477997, 0.43058130145072937, 0.4276508390903473, 0.43549486994743347, 0.4248614013195038, 0.428076833486557, 0.41570907831192017, 0.418445348739624], "val_accuracy": [0.406333327293396, 0.43533334136009216, 0.6383333206176758, 0.6740000247955322, 0.7143333554267883, 0.7413333058357239, 0.7396666407585144, 0.7490000128746033, 0.7440000176429749, 0.7546666860580444, 0.7676666378974915, 0.7716666460037231, 0.7963333129882812, 0.7923333048820496, 0.7950000166893005, 0.7940000295639038, 0.8036666512489319, 0.8053333163261414, 0.812666654586792, 0.8100000023841858, 0.812333345413208, 0.8116666674613953, 0.8173333406448364, 0.8206666707992554, 0.8186666369438171, 0.8240000009536743, 0.8236666917800903, 0.8323333263397217, 0.8356666564941406, 0.8366666436195374, 0.8426666855812073, 0.8450000286102295, 0.843666672706604, 0.8496666550636292, 0.8486666679382324, 0.8496666550636292, 0.8493333458900452, 0.8516666889190674, 0.8496666550636292, 0.8486666679382324, 0.8489999771118164, 0.8500000238418579, 0.8569999933242798, 0.8533333539962769, 0.859333336353302, 0.8546666502952576, 0.8573333621025085, 0.862333357334137, 0.8629999756813049, 0.8619999885559082, 0.8646666407585144, 0.8643333315849304, 0.8663333058357239, 0.8693333268165588, 0.8686666488647461, 0.8759999871253967, 0.8723333477973938, 0.8690000176429749, 0.8706666827201843, 0.8713333606719971, 0.8743333220481873]}, "mapping_values": [1, 10, 5, 5, 3, 7, 4, 3, 1, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 4, 3, 1, 0, 3, 2, 7, 5, 7, 7, 0, 5, 3, 3, 8, 5, 8, 4, 1, 7, 2, 3, 1, 8, 0, 9], [0, 1, 5, 2, 2, 4, 2, 5, 7, 6, 1, 1, 6, 5, 4, 2], [0, 90], [1], [0], [2], [0]], "fitness": -0.838857114315033, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(grad, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.square(beta)), grad)))), beta), tf.math.multiply(tf.math.multiply(tf.math.sqrt(grad), tf.math.square(tf.math.sqrt(tf.math.pow(tf.math.subtract(grad, grad), tf.math.add(tf.math.add(alpha, alpha), grad))))), tf.math.multiply(grad, tf.math.subtract(tf.math.sqrt(grad), tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))))), beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4847807884216309, 0.7830900549888611, 0.6590620875358582, 0.5966447591781616, 0.5455148816108704, 0.5423073768615723, 0.525359034538269, 0.5059288144111633, 0.5027313828468323, 0.49284034967422485, 0.5018260478973389], "accuracy": [0.49372607469558716, 0.7248712182044983, 0.7607977986335754, 0.7848368883132935, 0.800818920135498, 0.8099326491355896, 0.8033285140991211, 0.817989706993103, 0.8173292875289917, 0.83119797706604, 0.8276317715644836], "val_loss": [0.8228327035903931, 0.5893697738647461, 0.5208789110183716, 0.5068985223770142, 0.5069165825843811, 0.4710720479488373, 0.4851590692996979, 0.477529376745224, 0.48886579275131226, 0.5530374646186829, 0.5648370385169983], "val_accuracy": [0.703000009059906, 0.7693333625793457, 0.8059999942779541, 0.8253333568572998, 0.8166666626930237, 0.8456666469573975, 0.8316666483879089, 0.8360000252723694, 0.840666651725769, 0.8386666774749756, 0.8379999995231628]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 43, 27, 16, 2, 1, 0, 1, 0], "tree_depth": 27}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 6, 3, 0, 3], [0, 1, 0, 2], [39, 97], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [3, 2, 3, 0, 3, 5], [0, 2, 0, 3, 5], [16, 57], [0, 1], [0], [0], [32], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 3, 6, 1, 1, 5, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.2680000066757202, "mapping_values": [1, 9, 5, 4, 2, 10, 5, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.479959011077881, 2.4072189331054688, 2.3043265342712402, 2.3027286529541016, 2.2884106636047363, 2.5371053218841553, 2.3050148487091064, 2.3032374382019043, 2.3020689487457275, 2.26297926902771], "accuracy": [0.18940694630146027, 0.16774533689022064, 0.1006472036242485, 0.10289261490106583, 0.13749834895133972, 0.1364416927099228, 0.09747721254825592, 0.10051512718200684, 0.1072513535618782, 0.16351869702339172], "val_loss": [2.2997260093688965, 2.3055570125579834, 2.302880048751831, 2.3006346225738525, 2.1267759799957275, 2.306323528289795, 2.302973747253418, 2.302212953567505, 2.299363136291504, 4.086921215057373], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.11633333563804626, 0.27566665410995483, 0.09833333641290665, 0.09833333641290665, 0.10133333504199982, 0.13233333826065063, 0.13899999856948853]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 5, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [5], [0], [43], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [8, 3, 3, 6, 8, 4, 4, 1, 4, 2, 8], [2, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 82, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 6, 4, 2, 1, 2, 1, 1, 1, 11, 6, 5, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [77, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 6, 1, 6, 1, 0, 5, 9, 6, 9, 3, 0, 0, 7, 8, 7, 3, 9, 5, 2, 1, 5, 1, 2, 9], [0, 2, 0, 2, 2, 1, 3, 2, 1, 3, 2, 3, 0], [16, 16, 63, 56, 61, 58, 13], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [3, 0, 0, 3, 0, 0, 4, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 43, 30, 13, 7, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.negative(tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.negative(tf.math.add(tf.math.sqrt(beta), alpha))), grad))), beta)))), tf.math.add(tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha)), tf.math.add(grad, tf.math.subtract(tf.math.square(beta), tf.math.subtract(tf.math.add(grad, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)))), alpha), tf.math.add(tf.math.sqrt(grad), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 3, 5, 4], [0, 0, 1, 0, 2], [83, 30, 27], [0, 1, 0, 1, 1], [9, 0, 5], [0, 2], [3], [0, 0, 0, 1, 0, 1, 1], [0, 8, 6, 2], [0, 6, 5], [13], [0, 1], [8], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 1, 1, 0, 1, 7, 4, 3, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [2.3037269115448, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]