[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8625714182853699, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2941198348999023, 2.1940646171569824, 1.7876238822937012, 1.363861083984375, 1.094014048576355, 0.9537034630775452, 0.8497639298439026, 0.8565688133239746, 0.7919138669967651, 0.7818038463592529, 0.7424601912498474, 0.7264065146446228, 0.689836859703064, 0.667931318283081, 0.6386146545410156, 0.6194708347320557, 0.6133766770362854, 0.6088220477104187, 0.5884526371955872, 0.5858443975448608, 0.5770015716552734, 0.5632705688476562, 0.5416966080665588, 0.5300331711769104, 0.516553521156311, 0.5116327404975891, 0.49909499287605286, 0.49459394812583923, 0.48635411262512207, 0.47122886776924133, 0.47689133882522583, 0.4633983075618744, 0.45266586542129517, 0.4566524922847748, 0.43947115540504456, 0.4428948163986206, 0.4302636682987213, 0.4140794575214386, 0.4058094024658203, 0.4029509127140045, 0.39422550797462463, 0.38574549555778503, 0.3830656111240387, 0.3831755220890045, 0.3729734420776367, 0.3756864070892334, 0.3720886707305908, 0.34994545578956604, 0.35896503925323486], "accuracy": [0.1270637959241867, 0.31765949726104736, 0.43547746539115906, 0.5425967574119568, 0.6332056522369385, 0.6483951807022095, 0.6864351034164429, 0.6866992712020874, 0.7003037929534912, 0.6906617283821106, 0.7211728692054749, 0.720380425453186, 0.7401928305625916, 0.7416457533836365, 0.7483819723129272, 0.7635715007781982, 0.7671377658843994, 0.7629110813140869, 0.7766477465629578, 0.7725531458854675, 0.7761194109916687, 0.7823272943496704, 0.7926297783851624, 0.793950617313385, 0.7931581139564514, 0.7979130744934082, 0.8075551390647888, 0.8119139075279236, 0.8101968169212341, 0.811649739742279, 0.8133667707443237, 0.81548011302948, 0.8204993009567261, 0.8261788487434387, 0.8294808864593506, 0.824329674243927, 0.8310658931732178, 0.8354246616363525, 0.8438779711723328, 0.843481719493866, 0.8445383906364441, 0.8466516733169556, 0.8487650156021118, 0.8488970994949341, 0.8502179384231567, 0.8479725122451782, 0.8562937378883362, 0.8580108284950256, 0.8570862412452698], "val_loss": [2.2470619678497314, 2.030332565307617, 1.1645244359970093, 0.9192140102386475, 0.760618269443512, 0.7408086061477661, 0.6833431720733643, 0.6498393416404724, 0.6497764587402344, 0.6447032690048218, 0.6211152076721191, 0.5938778519630432, 0.5700048804283142, 0.549406111240387, 0.5537227988243103, 0.5424686670303345, 0.5233422517776489, 0.5167736411094666, 0.5228908658027649, 0.5109236240386963, 0.4913574755191803, 0.47898077964782715, 0.4808272421360016, 0.4800642132759094, 0.47190243005752563, 0.4594742953777313, 0.44956979155540466, 0.442715585231781, 0.4362424612045288, 0.4305436909198761, 0.42902711033821106, 0.41896045207977295, 0.42445650696754456, 0.43121081590652466, 0.4227465093135834, 0.4129718542098999, 0.40821516513824463, 0.4116591811180115, 0.40877315402030945, 0.40582728385925293, 0.39889103174209595, 0.3945153057575226, 0.40282872319221497, 0.3984239399433136, 0.40532252192497253, 0.40747126936912537, 0.39039579033851624, 0.3911142647266388, 0.407352089881897], "val_accuracy": [0.4163333475589752, 0.4560000002384186, 0.6460000276565552, 0.6733333468437195, 0.7283333539962769, 0.7333333492279053, 0.7456666827201843, 0.7473333477973938, 0.7273333072662354, 0.7450000047683716, 0.7526666522026062, 0.7573333382606506, 0.7816666960716248, 0.7816666960716248, 0.7789999842643738, 0.781333327293396, 0.7873333096504211, 0.7879999876022339, 0.7933333516120911, 0.7996666431427002, 0.8113333582878113, 0.8146666884422302, 0.8146666884422302, 0.815666675567627, 0.8130000233650208, 0.8226666450500488, 0.8286666870117188, 0.8299999833106995, 0.8363333344459534, 0.8386666774749756, 0.8399999737739563, 0.8486666679382324, 0.8479999899864197, 0.8420000076293945, 0.8413333296775818, 0.8443333506584167, 0.8503333330154419, 0.8503333330154419, 0.8550000190734863, 0.8553333282470703, 0.8556666374206543, 0.8550000190734863, 0.856333315372467, 0.8640000224113464, 0.8516666889190674, 0.8550000190734863, 0.859000027179718, 0.859666645526886, 0.8556666374206543]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8622857332229614, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221100330352783, 1.8623099327087402, 1.393912672996521, 1.0935109853744507, 0.9343385696411133, 0.8286619782447815, 0.7724319696426392, 0.7242776155471802, 0.6886971592903137, 0.6569998264312744, 0.6340392231941223, 0.6192402243614197, 0.5908591151237488, 0.5768222808837891, 0.5575639009475708, 0.5491004586219788, 0.5380783677101135, 0.5076668858528137, 0.5040088295936584, 0.49896520376205444, 0.479586660861969, 0.4758663475513458, 0.47338777780532837, 0.45552629232406616, 0.46026724576950073, 0.4414958357810974, 0.4364526867866516, 0.426265686750412, 0.42261815071105957, 0.41731879115104675, 0.4099256992340088, 0.40131112933158875, 0.3960927724838257, 0.3912211060523987, 0.39070847630500793, 0.3767317235469818, 0.3721356689929962, 0.3721567988395691, 0.36239585280418396, 0.36170175671577454, 0.3548022210597992, 0.34797680377960205, 0.3443659842014313, 0.33565637469291687, 0.3382343649864197, 0.3348449766635895, 0.3290192782878876, 0.32714200019836426, 0.31681251525878906, 0.3139883875846863, 0.3113151788711548, 0.31552454829216003, 0.3077468276023865, 0.29966095089912415, 0.3014172315597534, 0.28933557868003845, 0.29428642988204956, 0.28149864077568054, 0.2762797772884369, 0.2710856795310974, 0.277845561504364, 0.2813451588153839], "accuracy": [0.28543123602867126, 0.4884427487850189, 0.5580504536628723, 0.6178840398788452, 0.6655659675598145, 0.7046625018119812, 0.7182670831680298, 0.7368907928466797, 0.7500990629196167, 0.7607977986335754, 0.7703077793121338, 0.7734777331352234, 0.783119797706604, 0.7889314293861389, 0.798309326171875, 0.8004226684570312, 0.802271842956543, 0.8193105459213257, 0.8203672170639038, 0.8252542614936829, 0.8313300609588623, 0.8302733898162842, 0.8318583965301514, 0.8412362933158875, 0.8367455005645752, 0.8404437899589539, 0.8433496356010437, 0.8475762605667114, 0.8450667262077332, 0.8535200357437134, 0.8570862412452698, 0.856689989566803, 0.856689989566803, 0.8589354157447815, 0.8602562546730042, 0.8685774803161621, 0.8673887252807617, 0.8679170608520508, 0.8722757697105408, 0.8741249442100525, 0.8726720213890076, 0.8811253309249878, 0.8753136992454529, 0.880729079246521, 0.880729079246521, 0.880729079246521, 0.884691596031189, 0.8829745054244995, 0.8882578015327454, 0.8891823887825012, 0.8918240666389465, 0.8868049383163452, 0.8898428082466125, 0.8961827754974365, 0.8906353116035461, 0.896446943283081, 0.893541157245636, 0.9013340473175049, 0.90423983335495, 0.9025228023529053, 0.9010698795318604, 0.900409460067749], "val_loss": [2.0361063480377197, 1.5094354152679443, 1.0415010452270508, 0.834703266620636, 0.7444172501564026, 0.6901760101318359, 0.646876871585846, 0.6086088418960571, 0.5836355090141296, 0.5577062368392944, 0.5407669544219971, 0.5271615386009216, 0.5103563666343689, 0.5017213225364685, 0.49660030007362366, 0.48422566056251526, 0.47032976150512695, 0.4637381136417389, 0.4563950300216675, 0.44637593626976013, 0.440879762172699, 0.43808671832084656, 0.4314606189727783, 0.4257644712924957, 0.4189240634441376, 0.4157690405845642, 0.414161741733551, 0.4177859425544739, 0.4066751301288605, 0.40228497982025146, 0.39979198575019836, 0.391805499792099, 0.3888440728187561, 0.38749006390571594, 0.38401100039482117, 0.3801242709159851, 0.3776739835739136, 0.3767147660255432, 0.374778687953949, 0.3745703101158142, 0.3705796003341675, 0.36691775918006897, 0.3632892966270447, 0.3624217212200165, 0.3626999855041504, 0.36480581760406494, 0.36013898253440857, 0.3553737699985504, 0.35545530915260315, 0.3521212041378021, 0.35620298981666565, 0.3560071885585785, 0.3482595980167389, 0.34888720512390137, 0.3455222249031067, 0.35284265875816345, 0.34422966837882996, 0.3437633514404297, 0.34805968403816223, 0.3446716368198395, 0.3523087501525879, 0.3416551947593689], "val_accuracy": [0.5106666684150696, 0.6473333239555359, 0.6886666417121887, 0.7126666903495789, 0.7369999885559082, 0.7509999871253967, 0.7630000114440918, 0.7793333530426025, 0.7896666526794434, 0.7973333597183228, 0.8016666769981384, 0.8106666803359985, 0.8193333148956299, 0.8133333325386047, 0.8190000057220459, 0.8253333568572998, 0.8259999752044678, 0.8323333263397217, 0.8336666822433472, 0.8376666903495789, 0.8393333554267883, 0.8366666436195374, 0.8450000286102295, 0.8456666469573975, 0.8526666760444641, 0.8503333330154419, 0.8513333201408386, 0.8493333458900452, 0.8519999980926514, 0.8556666374206543, 0.8553333282470703, 0.859000027179718, 0.859333336353302, 0.862333357334137, 0.862333357334137, 0.8636666536331177, 0.8610000014305115, 0.8610000014305115, 0.8640000224113464, 0.8633333444595337, 0.8640000224113464, 0.8653333187103271, 0.8666666746139526, 0.8683333396911621, 0.8616666793823242, 0.8663333058357239, 0.8706666827201843, 0.8693333268165588, 0.8726666569709778, 0.8696666955947876, 0.8700000047683716, 0.8679999709129333, 0.8713333606719971, 0.8733333349227905, 0.8736666440963745, 0.8706666827201843, 0.878000020980835, 0.874666690826416, 0.875, 0.874666690826416, 0.8679999709129333, 0.8740000128746033]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 0], [0, 5, 7, 0, 9], [0], [0, 1], [1], [0], [2], [0]], "fitness": -0.8225714564323425, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4429900646209717, 0.7934161424636841, 0.6670189499855042, 0.5701915621757507, 0.532936692237854, 0.5212743282318115, 0.49696481227874756, 0.4745495617389679, 0.476615309715271, 0.47437503933906555, 0.4618293046951294, 0.4975360333919525, 0.5770807862281799, 0.5417673587799072, 0.5934444665908813], "accuracy": [0.49689605832099915, 0.7143045663833618, 0.7605336308479309, 0.7814027070999146, 0.8034605979919434, 0.8113855719566345, 0.822348415851593, 0.829216718673706, 0.8290846943855286, 0.833179235458374, 0.833179235458374, 0.832650899887085, 0.8216879963874817, 0.817461371421814, 0.8239334225654602], "val_loss": [0.770556628704071, 0.6672258973121643, 0.5408855676651001, 0.5066576600074768, 0.4962681531906128, 0.5024123787879944, 0.49938687682151794, 0.48498794436454773, 0.5286774635314941, 0.47870248556137085, 0.5697932243347168, 0.6001399159431458, 0.6045191884040833, 0.656005859375, 0.5765485167503357], "val_accuracy": [0.7260000109672546, 0.7516666650772095, 0.8026666641235352, 0.828000009059906, 0.8339999914169312, 0.8289999961853027, 0.8330000042915344, 0.8323333263397217, 0.8293333053588867, 0.8456666469573975, 0.8230000138282776, 0.8316666483879089, 0.8149999976158142, 0.8429999947547913, 0.8346666693687439]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 6, 5, 1, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3, 6, 5, 3, 4, 9, 6, 6, 9], [0, 1, 0, 2, 3, 1, 3], [83, 99, 27, 11], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [1, 2, 0, 3], [57, 32], [0, 1], [0], [4], [99], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [6, 8, 3, 6, 8, 1, 4, 1, 4, 2, 8, 2, 7, 7, 6, 6, 2, 6, 8, 5, 8, 6, 5, 1], [3, 0, 0, 3, 0, 0, 3, 1, 2, 0, 3, 7, 4, 3, 2, 2, 7, 3], [16, 99, 96, 99, 61, 1, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 13, 7, 4, 2, 1, 1, 0, 2, 1, 1, 0, 8, 4, 4, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.multiply(tf.math.pow(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, alpha))))), tf.math.divide_no_nan(grad, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [0, 2, 4, 4, 3, 1, 8, 2, 8, 9], [0, 1, 0, 2, 2, 0], [39, 39, 34, 24], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [20], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 6, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 33, 96, 43, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 10, 6, 4, 10, 6, 4, 2, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(tf.math.sqrt(tf.math.add(grad, tf.math.sqrt(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3039159774780273, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 4, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [1, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 5, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 57, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 0, 2, 1, 1, 1, 18, 10, 8, 4], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(alpha, beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma))), alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 8, 0, 3, 5, 2, 7, 9], [0, 1, 0, 2], [39, 39, 5], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 4, 9, 2, 1], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [62], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 5, 4, 1, 4, 6, 8], [0, 0, 0, 4, 0, 1, 0, 4, 2, 2], [42, 2, 96, 99, 61, 1]], "fitness": -0.08971428871154785, "mapping_values": [1, 13, 9, 4, 3, 6, 4, 2, 1, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.multiply(tf.math.square(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.310063123703003, 2.3092219829559326, 2.309863328933716, 2.3096868991851807, 2.310816526412964, 2.309795618057251], "accuracy": [0.0936468094587326, 0.09087307006120682, 0.09047681838274002, 0.09325055778026581, 0.08902391046285629, 0.09126931428909302], "val_loss": [2.308110237121582, 2.308110237121582, 2.308109998703003, 2.308109998703003, 2.308109998703003, 2.308109998703003], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]