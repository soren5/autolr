[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8662857413291931, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2236287593841553, 1.868536114692688, 1.3902816772460938, 1.1103746891021729, 0.950427234172821, 0.8458712100982666, 0.783661425113678, 0.7345061302185059, 0.6927498579025269, 0.6593945026397705, 0.6356346607208252, 0.6080232262611389, 0.5890644788742065, 0.5754964351654053, 0.5532644391059875, 0.540433943271637, 0.5275371670722961, 0.5183708667755127, 0.5065637826919556, 0.49402692914009094, 0.4866116940975189, 0.47151705622673035, 0.4632474184036255, 0.4525517225265503, 0.44925162196159363, 0.443317174911499, 0.427913099527359, 0.4249010980129242, 0.4274730086326599, 0.413239985704422, 0.41373080015182495, 0.40094462037086487, 0.3922109007835388, 0.389172226190567, 0.3882831931114197, 0.378848135471344, 0.37403789162635803, 0.36984750628471375, 0.3630383610725403, 0.36462265253067017, 0.3555096685886383, 0.34899401664733887, 0.3459729850292206, 0.34508728981018066, 0.3467581868171692, 0.33151906728744507, 0.3317229449748993, 0.32239001989364624, 0.3245789706707001, 0.31649908423423767, 0.3110908567905426, 0.30466118454933167, 0.30851635336875916, 0.29743093252182007, 0.29656362533569336, 0.28566503524780273], "accuracy": [0.2829216718673706, 0.49491479992866516, 0.5634658336639404, 0.6075815558433533, 0.6510368585586548, 0.6930392384529114, 0.7169462442398071, 0.733060359954834, 0.7486461400985718, 0.759080708026886, 0.7644960880279541, 0.7707040309906006, 0.7844406366348267, 0.7913089394569397, 0.8075551390647888, 0.805177628993988, 0.8101968169212341, 0.8161405324935913, 0.8145555257797241, 0.8214238286018372, 0.822348415851593, 0.8319904804229736, 0.8341038227081299, 0.8403117060661316, 0.8417646288871765, 0.8428213000297546, 0.8502179384231567, 0.8511425256729126, 0.8490291833877563, 0.8543124794960022, 0.8520671129226685, 0.8576145768165588, 0.8610487580299377, 0.863029956817627, 0.8663320541381836, 0.8676528930664062, 0.8671245574951172, 0.8705587387084961, 0.8712190985679626, 0.8713511824607849, 0.8758420348167419, 0.8775591254234314, 0.8772949576377869, 0.8803328275680542, 0.8775591254234314, 0.8840311765670776, 0.8817857503890991, 0.8902390599250793, 0.8854840993881226, 0.8881257176399231, 0.8932769894599915, 0.8893144726753235, 0.8906353116035461, 0.894069492816925, 0.895918607711792, 0.8996169567108154], "val_loss": [2.041565179824829, 1.523378849029541, 1.0598822832107544, 0.8636264801025391, 0.7827169299125671, 0.7217824459075928, 0.6783544421195984, 0.642405092716217, 0.6159358024597168, 0.5952392816543579, 0.5749123096466064, 0.5582941174507141, 0.5457610487937927, 0.5310778617858887, 0.5221185684204102, 0.5144256949424744, 0.5057729482650757, 0.49704137444496155, 0.49746668338775635, 0.4905627369880676, 0.48731568455696106, 0.4732966721057892, 0.47511789202690125, 0.464433878660202, 0.4600100815296173, 0.4587664306163788, 0.46141499280929565, 0.45301786065101624, 0.44702380895614624, 0.4431461691856384, 0.4458088278770447, 0.4448580741882324, 0.4377574026584625, 0.4317072033882141, 0.43503278493881226, 0.42491716146469116, 0.42450037598609924, 0.4296298921108246, 0.41951775550842285, 0.4167206585407257, 0.41540613770484924, 0.4158509075641632, 0.41480982303619385, 0.4098791480064392, 0.41132813692092896, 0.42466047406196594, 0.4012797474861145, 0.40293392539024353, 0.40440812706947327, 0.40323153138160706, 0.4037984311580658, 0.4020932614803314, 0.40037333965301514, 0.401047945022583, 0.3967001438140869, 0.39164355397224426], "val_accuracy": [0.5413333177566528, 0.6536666750907898, 0.6736666560173035, 0.7059999704360962, 0.7213333249092102, 0.7413333058357239, 0.7549999952316284, 0.768666684627533, 0.7786666750907898, 0.7799999713897705, 0.796999990940094, 0.8040000200271606, 0.8040000200271606, 0.8133333325386047, 0.8113333582878113, 0.8169999718666077, 0.8209999799728394, 0.8216666579246521, 0.8223333358764648, 0.8246666789054871, 0.8270000219345093, 0.8303333520889282, 0.8309999704360962, 0.8343333601951599, 0.8336666822433472, 0.8346666693687439, 0.8376666903495789, 0.8399999737739563, 0.840666651725769, 0.8420000076293945, 0.8416666388511658, 0.8403333425521851, 0.8456666469573975, 0.8479999899864197, 0.840666651725769, 0.8479999899864197, 0.8483333587646484, 0.8519999980926514, 0.8516666889190674, 0.8560000061988831, 0.8456666469573975, 0.8539999723434448, 0.8510000109672546, 0.8516666889190674, 0.856333315372467, 0.8476666808128357, 0.8553333282470703, 0.859333336353302, 0.8573333621025085, 0.8546666502952576, 0.8629999756813049, 0.8576666712760925, 0.8586666584014893, 0.8556666374206543, 0.859000027179718, 0.862333357334137]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8377143144607544, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2934815883636475, 2.192713737487793, 1.7786448001861572, 1.335667610168457, 1.084865927696228, 0.9214962720870972, 0.8268969655036926, 0.8102926015853882, 0.7590469121932983, 0.7260252237319946, 0.6934253573417664, 0.6786670684814453, 0.6421995759010315, 0.6293644905090332, 0.6069825291633606, 0.5925296545028687, 0.5786749124526978, 0.5666115283966064, 0.5721783638000488, 0.5536780953407288, 0.5320980548858643, 0.5436758399009705, 0.5216005444526672, 0.5056251883506775, 0.48437443375587463, 0.4967804551124573, 0.48436567187309265, 0.4672674536705017, 0.46430838108062744, 0.4561317563056946, 0.4466497004032135, 0.43793269991874695, 0.43277016282081604, 0.4420901834964752, 0.4209648668766022, 0.40705859661102295, 0.3979383409023285, 0.40116965770721436, 0.38840100169181824, 0.3774147033691406, 0.3883548974990845, 0.3793815076351166, 0.36984390020370483, 0.3595483601093292, 0.3587455451488495, 0.36213746666908264, 0.35343268513679504, 0.35321497917175293, 0.3401491940021515, 0.34464603662490845], "accuracy": [0.12561088800430298, 0.32743361592292786, 0.43785497546195984, 0.54655921459198, 0.6288469433784485, 0.6692643165588379, 0.7029454708099365, 0.7043983340263367, 0.7172104120254517, 0.7257958054542542, 0.7430986762046814, 0.7436270117759705, 0.7549861073493958, 0.7586844563484192, 0.7629110813140869, 0.769911527633667, 0.7761194109916687, 0.7837802171707153, 0.7841764688491821, 0.785629391670227, 0.8012151718139648, 0.7921014428138733, 0.800818920135498, 0.8014793395996094, 0.81112140417099, 0.807158887386322, 0.8107251524925232, 0.8214238286018372, 0.8191784620285034, 0.8260467648506165, 0.8245938420295715, 0.832650899887085, 0.8327829837799072, 0.8339717388153076, 0.8393871188163757, 0.8444063067436218, 0.8444063067436218, 0.8426892161369324, 0.8486329317092896, 0.8515387773513794, 0.8525954484939575, 0.8537842035293579, 0.8525954484939575, 0.8610487580299377, 0.8551049828529358, 0.8610487580299377, 0.8622375130653381, 0.8613129258155823, 0.8656716346740723, 0.8638224601745605], "val_loss": [2.2467916011810303, 2.0250680446624756, 1.1553237438201904, 0.8735532164573669, 0.746508777141571, 0.6885217428207397, 0.6633574962615967, 0.6424403190612793, 0.6057454347610474, 0.5926759243011475, 0.5575282573699951, 0.5437567830085754, 0.5399830937385559, 0.5260631442070007, 0.5109950304031372, 0.49515461921691895, 0.49429863691329956, 0.49330171942710876, 0.4880930185317993, 0.4837244749069214, 0.48492252826690674, 0.4794188141822815, 0.47622132301330566, 0.46622204780578613, 0.4610728323459625, 0.45622172951698303, 0.44675761461257935, 0.4446130096912384, 0.43911588191986084, 0.4357473850250244, 0.42619144916534424, 0.4243105947971344, 0.43415242433547974, 0.4334281384944916, 0.4171167314052582, 0.4101070463657379, 0.4122221767902374, 0.40668991208076477, 0.3999978303909302, 0.40450048446655273, 0.4039272964000702, 0.40706339478492737, 0.4091343283653259, 0.3925739824771881, 0.39800477027893066, 0.432545006275177, 0.40839505195617676, 0.3979056775569916, 0.3967472314834595, 0.4114777743816376], "val_accuracy": [0.4189999997615814, 0.46700000762939453, 0.6526666879653931, 0.7036666870117188, 0.7193333506584167, 0.75, 0.7436666488647461, 0.7540000081062317, 0.7733333110809326, 0.7706666588783264, 0.7823333144187927, 0.7850000262260437, 0.7940000295639038, 0.8006666898727417, 0.8006666898727417, 0.8019999861717224, 0.8100000023841858, 0.8033333420753479, 0.8106666803359985, 0.8166666626930237, 0.8106666803359985, 0.8166666626930237, 0.8240000009536743, 0.8320000171661377, 0.8343333601951599, 0.8373333215713501, 0.8376666903495789, 0.8356666564941406, 0.8356666564941406, 0.8366666436195374, 0.843666672706604, 0.8456666469573975, 0.8429999947547913, 0.8410000205039978, 0.8473333120346069, 0.8523333072662354, 0.8513333201408386, 0.8516666889190674, 0.8550000190734863, 0.8579999804496765, 0.8583333492279053, 0.8569999933242798, 0.859333336353302, 0.8600000143051147, 0.8663333058357239, 0.8616666793823242, 0.8600000143051147, 0.8663333058357239, 0.8650000095367432, 0.8663333058357239]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 2], [0, 5], [0], [1], [0], [2], [0]], "fitness": -0.828000009059906, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.520021677017212, 0.8385297060012817, 0.6958103179931641, 0.6100434064865112, 0.6081505417823792, 0.5727623701095581, 0.5641583800315857, 0.5345290303230286, 0.5004326105117798, 0.5022478103637695, 0.5240033268928528, 0.49586814641952515, 0.5123926997184753, 0.48695674538612366, 0.49991583824157715, 0.503764271736145, 0.524693489074707, 0.5970961451530457, 0.6714957356452942, 0.670259416103363], "accuracy": [0.48249900341033936, 0.7160216569900513, 0.7503632307052612, 0.7795535326004028, 0.7825914621353149, 0.7989697456359863, 0.7956677079200745, 0.8096684813499451, 0.8206313848495483, 0.8226125836372375, 0.828820526599884, 0.8162726163864136, 0.8214238286018372, 0.8309338092803955, 0.8293488025665283, 0.830669641494751, 0.8232730031013489, 0.8142913579940796, 0.8215559124946594, 0.7921014428138733], "val_loss": [0.9294609427452087, 0.6214672327041626, 0.5472792387008667, 0.5365005731582642, 0.518797755241394, 0.5022510290145874, 0.5081629157066345, 0.49981942772865295, 0.5309460163116455, 0.5490065813064575, 0.5165322422981262, 0.4966293275356293, 0.5133377909660339, 0.519710123538971, 0.5441060662269592, 0.659365177154541, 0.6168203949928284, 0.7512815594673157, 0.62680584192276, 0.595398485660553], "val_accuracy": [0.6653333306312561, 0.7789999842643738, 0.8066666722297668, 0.8026666641235352, 0.8119999766349792, 0.8173333406448364, 0.8213333487510681, 0.8173333406448364, 0.8196666836738586, 0.8196666836738586, 0.8383333086967468, 0.8293333053588867, 0.828000009059906, 0.8209999799728394, 0.8413333296775818, 0.8349999785423279, 0.8136666417121887, 0.8393333554267883, 0.7953333258628845, 0.8256666660308838]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 2, 5, 7, 8, 7, 4, 6, 5, 9], [0, 1, 0, 2, 3, 3, 0, 2], [39, 37, 31, 73], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 3, 3, 6, 5, 1, 4, 1, 4, 2, 1], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 14, 8, 4, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.pow(grad, tf.math.divide_no_nan(grad, grad)), tf.math.square(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))))))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 3, 3, 5, 8], [0, 2, 0, 3, 2], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 1, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 60, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 12, 7, 5, 2, 1, 0, 1, 1, 21, 11, 10, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.sqrt(beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(alpha, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(grad), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 1, 3, 1, 2], [0, 1, 0, 2, 0], [64, 39, 40], [0, 0, 0, 1, 1, 1], [0, 6, 2], [2, 4, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [8, 3, 3, 6, 8, 1, 4, 1, 2, 2, 8], [4, 0, 0, 4, 2, 0, 3, 1, 2, 0], [0, 28, 8, 73, 35, 55]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 0, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 2, 3, 0, 3, 3, 2, 9, 3, 8, 1, 2, 3, 8, 0, 4, 8, 0, 2, 8, 9], [2, 1, 0, 2, 1, 2, 2, 3, 0, 1], [39, 12, 96, 88], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 15], [0, 1, 1], [2], [0, 7], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [5, 3, 2, 6, 8, 1, 4, 1, 4, 0, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 14, 96, 99, 96, 1]], "fitness": -0.08799999952316284, "mapping_values": [1, 31, 21, 10, 4, 10, 6, 4, 2, 3, 1, 2, 1, 4, 2, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.subtract(grad, tf.math.add(tf.math.multiply(alpha, grad), tf.math.sqrt(grad)))), tf.math.negative(tf.math.pow(tf.math.sqrt(tf.math.negative(grad)), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))))))), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3095693588256836, 2.309706687927246, 2.3095550537109375, 2.311009407043457, 2.3110461235046387, 2.3101882934570312], "accuracy": [0.09576013684272766, 0.09245806187391281, 0.09576013684272766, 0.09206181764602661, 0.08928807079792023, 0.08955223858356476], "val_loss": [2.3085649013519287, 2.3085649013519287, 2.3085649013519287, 2.3085649013519287, 2.3085649013519287, 2.3085649013519287], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]