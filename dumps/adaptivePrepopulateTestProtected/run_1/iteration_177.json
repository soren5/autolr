[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.868571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2234749794006348, 1.8681405782699585, 1.3955327272415161, 1.0965021848678589, 0.9426248669624329, 0.8405776619911194, 0.7738736271858215, 0.7297521233558655, 0.692879319190979, 0.6723576784133911, 0.6440462470054626, 0.6188268065452576, 0.589163601398468, 0.5777680277824402, 0.5611022114753723, 0.5382828712463379, 0.5220209956169128, 0.5130476951599121, 0.4983597993850708, 0.4881795644760132, 0.4775407016277313, 0.4671873450279236, 0.4570990204811096, 0.44709843397140503, 0.4439215660095215, 0.43005481362342834, 0.4312819540500641, 0.41937097907066345, 0.4145996570587158, 0.4083194434642792, 0.39364349842071533, 0.3847387135028839, 0.39036113023757935, 0.38186928629875183, 0.3696634769439697, 0.37456777691841125, 0.3640393018722534, 0.35655760765075684, 0.35314807295799255, 0.3467331826686859, 0.3397165536880493, 0.34158802032470703, 0.334287166595459, 0.3337775766849518, 0.32094570994377136, 0.3143118917942047, 0.313113272190094, 0.3114808201789856, 0.302756667137146, 0.2973877191543579, 0.2921248972415924, 0.29350265860557556, 0.29224538803100586, 0.28501784801483154, 0.27913373708724976, 0.2838398814201355], "accuracy": [0.27816668152809143, 0.4900277256965637, 0.5559371113777161, 0.6161669492721558, 0.6617355942726135, 0.7030775547027588, 0.7182670831680298, 0.7384757399559021, 0.7486461400985718, 0.7540615797042847, 0.7664773464202881, 0.7788931727409363, 0.7887993454933167, 0.7927618622779846, 0.7996301651000977, 0.8025360107421875, 0.8132346868515015, 0.8137630224227905, 0.8166688680648804, 0.8240655064582825, 0.8265751004219055, 0.8300092220306396, 0.839519202709198, 0.8404437899589539, 0.841500461101532, 0.8502179384231567, 0.847840428352356, 0.8474441766738892, 0.848368763923645, 0.8553691506385803, 0.8621054291725159, 0.8613129258155823, 0.8628978729248047, 0.8627657890319824, 0.8651432991027832, 0.868049144744873, 0.8698983192443848, 0.8713511824607849, 0.8721436858177185, 0.8831065893173218, 0.876370370388031, 0.8778232932090759, 0.8829745054244995, 0.8790120482444763, 0.885219931602478, 0.8878615498542786, 0.8916919827461243, 0.887597382068634, 0.8920882344245911, 0.894069492816925, 0.8971073627471924, 0.895918607711792, 0.8952582478523254, 0.9019944667816162, 0.904768168926239, 0.898428201675415], "val_loss": [2.0430073738098145, 1.5141311883926392, 1.0482550859451294, 0.8365099430084229, 0.7407948970794678, 0.6789539456367493, 0.6323580741882324, 0.5986237525939941, 0.5710442066192627, 0.5566149950027466, 0.5322476625442505, 0.5126213431358337, 0.4976615309715271, 0.4872764050960541, 0.4726620316505432, 0.46273303031921387, 0.4546196162700653, 0.4438266456127167, 0.4369956851005554, 0.4308053255081177, 0.4259394407272339, 0.42216750979423523, 0.4088762104511261, 0.4074881672859192, 0.39940935373306274, 0.39951252937316895, 0.39183342456817627, 0.3881909251213074, 0.38162368535995483, 0.38303300738334656, 0.3781619369983673, 0.37541088461875916, 0.37159302830696106, 0.3713259696960449, 0.37009021639823914, 0.3690985441207886, 0.3602408468723297, 0.36023226380348206, 0.3559317886829376, 0.3573141396045685, 0.3599214553833008, 0.3520612418651581, 0.3505188524723053, 0.3496355414390564, 0.34521809220314026, 0.34775280952453613, 0.34220394492149353, 0.3488064408302307, 0.341422438621521, 0.33782580494880676, 0.3393319845199585, 0.3389221131801605, 0.33836817741394043, 0.33333030343055725, 0.337033212184906, 0.33233147859573364], "val_accuracy": [0.5366666913032532, 0.6480000019073486, 0.6836666464805603, 0.7093333601951599, 0.734666645526886, 0.753000020980835, 0.7680000066757202, 0.7786666750907898, 0.7910000085830688, 0.7933333516120911, 0.8013333082199097, 0.8143333196640015, 0.8130000233650208, 0.8266666531562805, 0.8216666579246521, 0.8273333311080933, 0.8346666693687439, 0.8383333086967468, 0.8429999947547913, 0.8426666855812073, 0.8500000238418579, 0.8493333458900452, 0.8483333587646484, 0.8519999980926514, 0.8576666712760925, 0.8550000190734863, 0.8619999885559082, 0.862333357334137, 0.8629999756813049, 0.8576666712760925, 0.8643333315849304, 0.8656666874885559, 0.8676666617393494, 0.8659999966621399, 0.8693333268165588, 0.8659999966621399, 0.8709999918937683, 0.8673333525657654, 0.8690000176429749, 0.8713333606719971, 0.871666669845581, 0.8696666955947876, 0.8723333477973938, 0.871999979019165, 0.8740000128746033, 0.8743333220481873, 0.8740000128746033, 0.8713333606719971, 0.8769999742507935, 0.8756666779518127, 0.8820000290870667, 0.8790000081062317, 0.878000020980835, 0.8786666393280029, 0.875333309173584, 0.878333330154419]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 6, 3, 2, 8, 4, 2, 5, 1, 3, 7, 8, 3, 8, 0, 2, 5, 5, 3, 2], [0, 2, 3, 6, 7, 5, 1, 3, 6, 6, 5, 6, 0], [0, 96], [0, 1], [0], [1], [0]], "fitness": -0.8442857265472412, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), tf.math.add(tf.math.square(tf.math.subtract(tf.math.multiply(sigma, tf.math.add(tf.math.sqrt(grad), tf.math.multiply(tf.math.sqrt(tf.math.negative(grad)), grad))), tf.math.add(alpha, tf.math.square(tf.math.square(sigma))))), grad)), tf.math.multiply(tf.math.add(grad, grad), grad)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292802572250366, 2.1907529830932617, 1.7705276012420654, 1.3511381149291992, 1.0572714805603027, 0.9192857146263123, 0.8438996076583862, 0.8054290413856506, 0.7459154725074768, 0.741484522819519, 0.6907268762588501, 0.6888346076011658, 0.6512925624847412, 0.6249456405639648, 0.6047810912132263, 0.5824179649353027, 0.5685389041900635, 0.5598001480102539, 0.5600951910018921, 0.5316331386566162, 0.5110543966293335, 0.5127033591270447, 0.5023579597473145, 0.4922178387641907, 0.48604995012283325, 0.46632060408592224, 0.4598706364631653, 0.4488634169101715, 0.4286048412322998, 0.4359511733055115, 0.4239429831504822, 0.4041423201560974, 0.40908896923065186, 0.4113112688064575, 0.3949093818664551, 0.39031338691711426, 0.38584038615226746, 0.3679560422897339, 0.3687950372695923, 0.37492993474006653, 0.3582702875137329, 0.3656749725341797, 0.35386180877685547, 0.36032211780548096, 0.3517274856567383], "accuracy": [0.1332716941833496, 0.3267732262611389, 0.44168537855148315, 0.540219247341156, 0.6342623233795166, 0.6641130447387695, 0.687887966632843, 0.7049266695976257, 0.7099458575248718, 0.7132478952407837, 0.744419515132904, 0.7366266250610352, 0.7497028112411499, 0.7576277852058411, 0.76542067527771, 0.7824593782424927, 0.7795535326004028, 0.7866860628128052, 0.7874785661697388, 0.7944789528846741, 0.8034605979919434, 0.8024039268493652, 0.8024039268493652, 0.8055738806724548, 0.8132346868515015, 0.8177255392074585, 0.8150838613510132, 0.8230088353157043, 0.8342359066009521, 0.830669641494751, 0.8368775844573975, 0.8416325449943542, 0.8453308939933777, 0.8446704745292664, 0.8475762605667114, 0.8487650156021118, 0.8533879518508911, 0.8589354157447815, 0.8576145768165588, 0.8585391640663147, 0.8594637513160706, 0.8614450097084045, 0.8603883385658264, 0.8577466607093811, 0.8601241707801819], "val_loss": [2.2458269596099854, 2.0191941261291504, 1.1496386528015137, 0.8672819137573242, 0.7583999037742615, 0.6933497786521912, 0.6636247634887695, 0.6493645310401917, 0.6489474177360535, 0.6147093772888184, 0.5863697528839111, 0.5624040365219116, 0.5461961030960083, 0.5391494035720825, 0.5301784873008728, 0.5211727023124695, 0.5170352458953857, 0.5088878870010376, 0.49531134963035583, 0.5011946558952332, 0.48780685663223267, 0.4922322630882263, 0.4859803020954132, 0.4883841574192047, 0.4835061728954315, 0.48293229937553406, 0.464633584022522, 0.4601503610610962, 0.463993638753891, 0.4691545367240906, 0.44656917452812195, 0.436941921710968, 0.4462866187095642, 0.4353707730770111, 0.4347892999649048, 0.4495484530925751, 0.4548444151878357, 0.4372871220111847, 0.4380822479724884, 0.44500797986984253, 0.46784457564353943, 0.462935209274292, 0.441497802734375, 0.43477872014045715, 0.4318309724330902], "val_accuracy": [0.42266666889190674, 0.45766666531562805, 0.6430000066757202, 0.6976666450500488, 0.7133333086967468, 0.7523333430290222, 0.7599999904632568, 0.7673333287239075, 0.7516666650772095, 0.7766666412353516, 0.7703333497047424, 0.7943333387374878, 0.7976666688919067, 0.8063333630561829, 0.8086666464805603, 0.8106666803359985, 0.812333345413208, 0.8163333535194397, 0.8223333358764648, 0.8216666579246521, 0.8299999833106995, 0.8270000219345093, 0.8336666822433472, 0.8266666531562805, 0.8356666564941406, 0.8410000205039978, 0.8460000157356262, 0.8503333330154419, 0.8506666421890259, 0.8476666808128357, 0.8460000157356262, 0.8503333330154419, 0.8529999852180481, 0.8503333330154419, 0.8529999852180481, 0.8560000061988831, 0.859000027179718, 0.8560000061988831, 0.8526666760444641, 0.8650000095367432, 0.8573333621025085, 0.8566666841506958, 0.8616666793823242, 0.8573333621025085, 0.8646666407585144]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 33, 20, 13, 2, 2, 1, 1, 0], "tree_depth": 27}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8334285616874695, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5052069425582886, 0.8118641376495361, 0.6648973226547241, 0.5807937383651733, 0.5404430627822876, 0.4985816478729248, 0.4638979732990265, 0.45972350239753723, 0.47336238622665405, 0.4743693172931671, 0.4965941607952118, 0.4965904653072357, 0.4989648759365082, 0.5444053411483765], "accuracy": [0.4963677227497101, 0.7120591998100281, 0.7532690763473511, 0.78113853931427, 0.7979130744934082, 0.81548011302948, 0.8276317715644836, 0.8372738361358643, 0.832650899887085, 0.8387266993522644, 0.8252542614936829, 0.8310658931732178, 0.8367455005645752, 0.8175934553146362], "val_loss": [0.8403473496437073, 0.6350975632667542, 0.521030604839325, 0.4908316135406494, 0.4973352551460266, 0.47345003485679626, 0.4933364987373352, 0.5166593194007874, 0.48849165439605713, 0.49581170082092285, 0.5364213585853577, 0.5340902209281921, 0.5430123805999756, 0.5884791016578674], "val_accuracy": [0.7316666841506958, 0.7710000276565552, 0.8059999942779541, 0.8236666917800903, 0.831333339214325, 0.8333333134651184, 0.8420000076293945, 0.8366666436195374, 0.843666672706604, 0.8236666917800903, 0.840666651725769, 0.8353333473205566, 0.8413333296775818, 0.8403333425521851]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [47, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5, 7, 0, 5], [1, 2, 0, 3, 5], [1, 16], [0, 1, 1], [3], [0, 7], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 6], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.11885714530944824, "mapping_values": [1, 9, 5, 4, 2, 14, 9, 5, 1, 3, 1, 2, 1, 16, 8, 8, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), tf.math.multiply(tf.math.square(beta), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.square(grad))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [6.423032760620117, 52.19393539428711, 9.285605586751949e+24, 1.0334267246775694e+26, 1.0180634461095008e+26, 1.0592420206715222e+26, 1.1578283385304537e+26, 1.0071843865583102e+26], "accuracy": [0.09655263274908066, 0.09800554811954498, 0.09959053993225098, 0.10355303436517715, 0.10130762308835983, 0.10342095047235489, 0.10289261490106583, 0.10606260597705841], "val_loss": [17.455446243286133, 52.52029037475586, 1.0253540605360326e+26, 1.0253540605360326e+26, 1.0253540605360326e+26, 1.0253540605360326e+26, 1.0253540605360326e+26, 1.0253540605360326e+26], "val_accuracy": [0.09966666996479034, 0.10133333504199982, 0.11699999868869781, 0.11699999868869781, 0.11699999868869781, 0.11699999868869781, 0.11699999868869781, 0.11699999868869781]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [99, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 8], [0, 2, 0, 3], [37, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 9, 8, 1, 4, 1, 2, 3, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 4], [16, 99, 96, 99, 54, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 9, 5, 4, 2, 2, 1, 1, 1, 10, 6, 4, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 6, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [3, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 79, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [72090.3203125, 283088.9375, 803165.25, 2343377.75, 3555080.0, 4125495.75, 6770366.0, 11860488.0, 13572754.0], "accuracy": [0.0944393053650856, 0.10091137140989304, 0.09813763201236725, 0.09668471664190292, 0.10130762308835983, 0.10394927859306335, 0.10157178342342377, 0.09747721254825592, 0.09153348207473755], "val_loss": [293302.96875, 229174.03125, 491767.8125, 4981917.5, 4292702.0, 3578134.5, 12807085.0, 15634334.0, 17990030.0], "val_accuracy": [0.10066666454076767, 0.10000000149011612, 0.09700000286102295, 0.10133333504199982, 0.1003333330154419, 0.10133333504199982, 0.10000000149011612, 0.1003333330154419, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [1, 2, 0, 3], [16, 16], [1, 1], [0], [4], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3034610748291016, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]