[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8648571372032166, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223785161972046, 1.866335391998291, 1.3788355588912964, 1.0759776830673218, 0.9409547448158264, 0.8368312120437622, 0.7710338830947876, 0.7253851294517517, 0.7026654481887817, 0.6656255125999451, 0.6350249648094177, 0.6148735284805298, 0.5931437015533447, 0.5672155618667603, 0.5610728859901428, 0.5409557819366455, 0.5283858776092529, 0.5163793563842773, 0.505341649055481, 0.4961146414279938, 0.48558181524276733, 0.47669702768325806, 0.46596431732177734, 0.45449212193489075, 0.4536004662513733, 0.43890315294265747, 0.43623101711273193, 0.421161025762558, 0.42232394218444824, 0.4162999093532562, 0.40997397899627686, 0.4028422236442566, 0.39436089992523193, 0.3836832046508789, 0.38513049483299255, 0.3760259747505188, 0.3686743676662445, 0.36245161294937134, 0.36107367277145386, 0.3600691556930542, 0.3497503995895386, 0.34938275814056396, 0.3464092016220093, 0.3393447995185852, 0.334462970495224, 0.32518985867500305, 0.32944971323013306, 0.3189918100833893], "accuracy": [0.2709021270275116, 0.4855369031429291, 0.5688812732696533, 0.6164311170578003, 0.6625280380249023, 0.6942279934883118, 0.7186633348464966, 0.7317395210266113, 0.7396644949913025, 0.7552502751350403, 0.7738739848136902, 0.7740060687065125, 0.7821952104568481, 0.7954035401344299, 0.7971205711364746, 0.8035926818847656, 0.8075551390647888, 0.8149517774581909, 0.8181217908859253, 0.8170651197433472, 0.8286884427070618, 0.8296129703521729, 0.8367455005645752, 0.8322546482086182, 0.8380662798881531, 0.8455950617790222, 0.8471800088882446, 0.8477083444595337, 0.8492933511734009, 0.8510104417800903, 0.8506141901016235, 0.852331280708313, 0.8603883385658264, 0.8595958352088928, 0.869502067565918, 0.8644828796386719, 0.8672566413879395, 0.8737286925315857, 0.8704266548156738, 0.8667283058166504, 0.8750495314598083, 0.8747853636741638, 0.8716153502464294, 0.8767666220664978, 0.8815215826034546, 0.8821820020675659, 0.8804649114608765, 0.8849557638168335], "val_loss": [2.0368173122406006, 1.5006959438323975, 1.0178544521331787, 0.8133796453475952, 0.726595401763916, 0.6708424687385559, 0.6341080069541931, 0.5955775380134583, 0.5741373300552368, 0.5506557822227478, 0.5343691110610962, 0.5180020332336426, 0.5060076713562012, 0.4926275312900543, 0.4861413538455963, 0.4778384566307068, 0.4722188413143158, 0.4637327492237091, 0.4501332938671112, 0.4436556100845337, 0.436509370803833, 0.4320339262485504, 0.4274032413959503, 0.42269304394721985, 0.4151633381843567, 0.41077548265457153, 0.40631774067878723, 0.40396371483802795, 0.4094405174255371, 0.39927050471305847, 0.3985830843448639, 0.39252713322639465, 0.38905537128448486, 0.38325032591819763, 0.3826935291290283, 0.38153713941574097, 0.3750847578048706, 0.38052666187286377, 0.38060131669044495, 0.3791046440601349, 0.36937132477760315, 0.36938467621803284, 0.3640826344490051, 0.3673592805862427, 0.35958585143089294, 0.35989826917648315, 0.36300477385520935, 0.36293572187423706], "val_accuracy": [0.5350000262260437, 0.6783333420753479, 0.6956666707992554, 0.7256666421890259, 0.7476666569709778, 0.7566666603088379, 0.7713333368301392, 0.7793333530426025, 0.7940000295639038, 0.8006666898727417, 0.8063333630561829, 0.8199999928474426, 0.8256666660308838, 0.8346666693687439, 0.8270000219345093, 0.8343333601951599, 0.8373333215713501, 0.8396666646003723, 0.8453333377838135, 0.8456666469573975, 0.8506666421890259, 0.8510000109672546, 0.8526666760444641, 0.859000027179718, 0.8569999933242798, 0.859000027179718, 0.8636666536331177, 0.8610000014305115, 0.8586666584014893, 0.862666666507721, 0.8616666793823242, 0.8673333525657654, 0.8653333187103271, 0.8656666874885559, 0.8679999709129333, 0.8669999837875366, 0.871999979019165, 0.8696666955947876, 0.871999979019165, 0.8679999709129333, 0.8726666569709778, 0.8726666569709778, 0.8766666650772095, 0.8730000257492065, 0.8759999871253967, 0.8713333606719971, 0.8759999871253967, 0.8763333559036255]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 8], [0], [0], [0, 0, 1, 0], [0, 1, 9], [0], [0, 78], [0, 1], [0], [1], [0]], "fitness": -0.8402857184410095, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.29339337348938, 2.188471555709839, 1.7723394632339478, 1.3269597291946411, 1.0806392431259155, 0.914167582988739, 0.8478952646255493, 0.8123612999916077, 0.7456920146942139, 0.7593680620193481, 0.7123625874519348, 0.6895859241485596, 0.6579357385635376, 0.6330996751785278, 0.613869845867157, 0.6022289395332336, 0.5866105556488037, 0.5693862438201904, 0.5661485195159912, 0.5534741282463074, 0.5346391201019287, 0.5318131446838379, 0.513824462890625, 0.5142506957054138, 0.5016281604766846, 0.4916367530822754, 0.4825087785720825, 0.47295263409614563, 0.4615198075771332, 0.44872164726257324, 0.45841240882873535, 0.43816888332366943, 0.438052773475647, 0.44390588998794556, 0.4213852286338806, 0.4122651517391205, 0.40921327471733093, 0.3854374289512634, 0.3962819278240204, 0.386262983083725, 0.3848203718662262, 0.3907437324523926], "accuracy": [0.12957337498664856, 0.3280940353870392, 0.43243956565856934, 0.5515784025192261, 0.6279223561286926, 0.6704530715942383, 0.7022850513458252, 0.703209638595581, 0.7140403985977173, 0.7046625018119812, 0.7313432693481445, 0.7404569983482361, 0.7543256878852844, 0.7565711140632629, 0.7621186375617981, 0.7750627398490906, 0.7799497842788696, 0.7866860628128052, 0.7901201844215393, 0.7918372750282288, 0.7965922355651855, 0.7952714562416077, 0.8062343001365662, 0.8079513907432556, 0.8133667707443237, 0.8173292875289917, 0.8231409192085266, 0.817461371421814, 0.8272355198860168, 0.8322546482086182, 0.8259146809577942, 0.8294808864593506, 0.8356888294219971, 0.8355567455291748, 0.8409721255302429, 0.8416325449943542, 0.8445383906364441, 0.8553691506385803, 0.8521991968154907, 0.857218325138092, 0.8541803956031799, 0.8507462739944458], "val_loss": [2.246586799621582, 2.018265724182129, 1.1497257947921753, 0.9154098033905029, 0.7859777212142944, 0.730801522731781, 0.7172991633415222, 0.6818533539772034, 0.6734323501586914, 0.6539098620414734, 0.6144219636917114, 0.6063681244850159, 0.5931819677352905, 0.5728615522384644, 0.5623372197151184, 0.5526488423347473, 0.5556087493896484, 0.5287227630615234, 0.5378854274749756, 0.5190589427947998, 0.5235731601715088, 0.5113628506660461, 0.49553433060646057, 0.49441030621528625, 0.47647541761398315, 0.47809797525405884, 0.4599756598472595, 0.4585358500480652, 0.47263506054878235, 0.45027995109558105, 0.4524725675582886, 0.45333316922187805, 0.4437176585197449, 0.4519864022731781, 0.4466027319431305, 0.44724100828170776, 0.43066707253456116, 0.4443560242652893, 0.44221338629722595, 0.43664297461509705, 0.4370824098587036, 0.4348302483558655], "val_accuracy": [0.40166667103767395, 0.4259999990463257, 0.6293333172798157, 0.6823333501815796, 0.7139999866485596, 0.7250000238418579, 0.7229999899864197, 0.7386666536331177, 0.7423333525657654, 0.7473333477973938, 0.7596666812896729, 0.7570000290870667, 0.7720000147819519, 0.7733333110809326, 0.7863333225250244, 0.7856666445732117, 0.7846666574478149, 0.7896666526794434, 0.7916666865348816, 0.8066666722297668, 0.8013333082199097, 0.8083333373069763, 0.8163333535194397, 0.815666675567627, 0.8240000009536743, 0.8220000267028809, 0.8303333520889282, 0.8299999833106995, 0.82833331823349, 0.8343333601951599, 0.831333339214325, 0.8320000171661377, 0.8363333344459534, 0.8323333263397217, 0.8336666822433472, 0.8393333554267883, 0.8460000157356262, 0.8393333554267883, 0.8450000286102295, 0.8456666469573975, 0.8426666855812073, 0.8450000286102295]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 4, 3, 1, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8282856941223145, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6544239521026611, 0.912070631980896, 0.7467148303985596, 0.6576842665672302, 0.6178248524665833, 0.5857867002487183, 0.5585631132125854, 0.5456114411354065, 0.5688908696174622, 0.561569094657898, 0.5308086276054382, 0.523613691329956, 0.5254581570625305, 0.5479288697242737], "accuracy": [0.4773477613925934, 0.6991150379180908, 0.7255316376686096, 0.7580240368843079, 0.7737419009208679, 0.7907806038856506, 0.8021397590637207, 0.7968564033508301, 0.8029322624206543, 0.811649739742279, 0.7998943328857422, 0.8136309385299683, 0.8128384351730347, 0.8079513907432556], "val_loss": [1.0861212015151978, 0.6795046329498291, 0.5807289481163025, 0.529918372631073, 0.5176706314086914, 0.4996884763240814, 0.5002003312110901, 0.4844176471233368, 0.5069023966789246, 0.48458731174468994, 0.4921090006828308, 0.5191612243652344, 0.5279622673988342, 0.5420948266983032], "val_accuracy": [0.7096666693687439, 0.7360000014305115, 0.781000018119812, 0.7946666479110718, 0.7983333468437195, 0.8186666369438171, 0.815666675567627, 0.8180000185966492, 0.828000009059906, 0.8253333568572998, 0.8203333616256714, 0.8253333568572998, 0.8199999928474426, 0.8213333487510681]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 1], [39, 41], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 0, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 2, 4, 1, 4, 2, 2], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [25, 14, 96, 99, 35, 1]], "fitness": -0.10028571635484695, "mapping_values": [1, 9, 5, 4, 1, 12, 8, 4, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(grad), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, alpha))", "other_info": {"loss": [2.3042755126953125, 2.3026046752929688, 2.3025858402252197, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09866596013307571, 0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.30259108543396, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [2, 2, 3, 0, 9, 5], [0, 2, 0, 3], [16, 16, 79], [1, 1], [0], [0], [95], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 0, 1, 4, 1, 4, 2, 8], [0, 0, 0, 2, 0, 0, 3, 1, 2, 0], [62, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 8, 5, 3, 3, 1, 0, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), beta))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), alpha)))), tf.math.sqrt(beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [3, 3, 3, 2, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 4, 3, 3, 1, 2, 0], [16, 99, 96, 99, 8, 82]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), sigma)), grad), tf.math.pow(sigma, tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.14463083446025848, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [51, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 6, 0, 3, 5], [0, 3, 0, 2], [16, 16], [0, 1], [0], [2], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 8, 1, 4, 2, 8, 0], [4, 4, 2, 3, 0, 0, 3, 1, 2, 0], [16, 7, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 0, 21, 12, 9, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.sqrt(beta))), sigma)), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.negative(alpha)))))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]