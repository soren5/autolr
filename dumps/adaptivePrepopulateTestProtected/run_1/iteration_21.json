[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223330497741699, 1.8670156002044678, 1.3935511112213135, 1.1012579202651978, 0.9477801322937012, 0.8379126191139221, 0.7764281630516052, 0.7235901951789856, 0.6839449405670166, 0.6511124968528748, 0.6340097188949585, 0.6069210171699524, 0.5817078948020935, 0.5635776519775391, 0.5524153113365173, 0.5367791652679443, 0.5212588906288147, 0.5178380608558655, 0.5019086003303528, 0.4879888892173767, 0.4858485460281372, 0.4747111201286316, 0.45951735973358154, 0.4532293975353241, 0.4492609202861786, 0.4330301284790039, 0.4310648441314697, 0.42051371932029724, 0.41327017545700073, 0.4060419201850891, 0.3997148871421814, 0.39729252457618713, 0.3869434893131256, 0.3869549036026001, 0.38186177611351013, 0.3692651391029358, 0.36346086859703064, 0.3634459972381592, 0.3600703179836273, 0.3489670753479004, 0.3429599404335022, 0.34309908747673035, 0.3401198089122772, 0.3303268253803253, 0.3301240801811218, 0.3276282846927643, 0.3180643618106842, 0.3136589229106903, 0.3090694546699524, 0.3071834146976471, 0.3011736273765564, 0.30332496762275696, 0.29351481795310974, 0.2937680780887604], "accuracy": [0.26680755615234375, 0.49451854825019836, 0.5679566860198975, 0.6209219098091125, 0.6646413803100586, 0.7078325152397156, 0.7234182953834534, 0.7387399077415466, 0.7541936039924622, 0.7672698497772217, 0.7677981853485107, 0.7820631265640259, 0.7897239327430725, 0.7977809906005859, 0.798309326171875, 0.8082155585289001, 0.8138951063156128, 0.8094043135643005, 0.822348415851593, 0.8269713521003723, 0.8208954930305481, 0.8310658931732178, 0.8350284099578857, 0.8367455005645752, 0.8368775844573975, 0.8444063067436218, 0.843481719493866, 0.850350022315979, 0.8502179384231567, 0.8570862412452698, 0.857218325138092, 0.8574824929237366, 0.8610487580299377, 0.8610487580299377, 0.8607845902442932, 0.8658037185668945, 0.8701624870300293, 0.8689737319946289, 0.8708229064941406, 0.8792761564254761, 0.8798044919967651, 0.8765024542808533, 0.8765024542808533, 0.8824461698532104, 0.880729079246521, 0.8844274282455444, 0.8838990926742554, 0.8887861371040344, 0.8878615498542786, 0.8903711438179016, 0.8924844861030579, 0.8912957310676575, 0.8976356983184814, 0.8960506916046143], "val_loss": [2.040694236755371, 1.5166728496551514, 1.045767068862915, 0.8421168327331543, 0.7569165229797363, 0.7011509537696838, 0.6573318839073181, 0.6179470419883728, 0.5908101201057434, 0.5737177133560181, 0.5541383624076843, 0.5365487933158875, 0.518412172794342, 0.5104728937149048, 0.49868762493133545, 0.485697478055954, 0.48461878299713135, 0.46694132685661316, 0.459992378950119, 0.44818419218063354, 0.45110249519348145, 0.4507465958595276, 0.4339507520198822, 0.4287099242210388, 0.42590731382369995, 0.4119842052459717, 0.4104468524456024, 0.4069807529449463, 0.40372517704963684, 0.3985708951950073, 0.3967111110687256, 0.39305025339126587, 0.39346253871917725, 0.3906964063644409, 0.3815464675426483, 0.3792845904827118, 0.37928369641304016, 0.3762374818325043, 0.37582898139953613, 0.37387406826019287, 0.3717586398124695, 0.36671704053878784, 0.363382488489151, 0.36401286721229553, 0.3619881868362427, 0.35666540265083313, 0.3588123917579651, 0.3541429042816162, 0.35232576727867126, 0.35342442989349365, 0.3524846136569977, 0.34847813844680786, 0.34814298152923584, 0.35015836358070374], "val_accuracy": [0.5323333144187927, 0.6446666717529297, 0.6756666898727417, 0.7043333053588867, 0.7239999771118164, 0.7493333220481873, 0.753000020980835, 0.7706666588783264, 0.7820000052452087, 0.7873333096504211, 0.7956666946411133, 0.800000011920929, 0.8136666417121887, 0.812666654586792, 0.8199999928474426, 0.824999988079071, 0.8246666789054871, 0.8326666951179504, 0.8303333520889282, 0.8376666903495789, 0.8333333134651184, 0.8343333601951599, 0.8446666598320007, 0.843666672706604, 0.846666693687439, 0.8513333201408386, 0.8546666502952576, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8529999852180481, 0.859333336353302, 0.8546666502952576, 0.8569999933242798, 0.8606666922569275, 0.8633333444595337, 0.8643333315849304, 0.8629999756813049, 0.8576666712760925, 0.8703333139419556, 0.8640000224113464, 0.8643333315849304, 0.8676666617393494, 0.8663333058357239, 0.8713333606719971, 0.871999979019165, 0.8693333268165588, 0.8693333268165588, 0.878000020980835, 0.8756666779518127, 0.8706666827201843, 0.8756666779518127, 0.8769999742507935, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8582857251167297, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2228915691375732, 1.8649308681488037, 1.3800562620162964, 1.0843462944030762, 0.9396966695785522, 0.8292413353919983, 0.7568212747573853, 0.7191261649131775, 0.6829448342323303, 0.6487020254135132, 0.6278204321861267, 0.6076444983482361, 0.5892552733421326, 0.566888689994812, 0.5510603785514832, 0.5350727438926697, 0.5277409553527832, 0.52065509557724, 0.5006005764007568, 0.48860275745391846, 0.48845261335372925, 0.47546830773353577, 0.4657808542251587, 0.46166667342185974, 0.45249953866004944, 0.4419161081314087, 0.4421999454498291, 0.42631304264068604, 0.41404297947883606, 0.4175795912742615, 0.4107629954814911, 0.3995986580848694, 0.38838309049606323, 0.3933670222759247, 0.390741229057312, 0.38586655259132385, 0.3868100643157959, 0.37325620651245117, 0.36889055371284485, 0.35968005657196045, 0.3505162298679352, 0.353270947933197, 0.35057806968688965, 0.34135594964027405, 0.33948400616645813, 0.33256757259368896, 0.3265645503997803, 0.3238407075405121], "accuracy": [0.2740721106529236, 0.49332982301712036, 0.5740324854850769, 0.6210539937019348, 0.6593580842018127, 0.7016246318817139, 0.7316074371337891, 0.7375511527061462, 0.7548540234565735, 0.7676661014556885, 0.774798572063446, 0.7800818681716919, 0.791969358921051, 0.7998943328857422, 0.7993659973144531, 0.8082155585289001, 0.817461371421814, 0.8132346868515015, 0.8236692547798157, 0.8245938420295715, 0.8333113193511963, 0.8315942287445068, 0.830669641494751, 0.8360850811004639, 0.8405758738517761, 0.8422929644584656, 0.8448025584220886, 0.8446704745292664, 0.8532558679580688, 0.8527275323867798, 0.8574824929237366, 0.8569541573524475, 0.8601241707801819, 0.8569541573524475, 0.8574824929237366, 0.8623695969581604, 0.8599920868873596, 0.869502067565918, 0.8669924736022949, 0.8762382864952087, 0.8765024542808533, 0.8758420348167419, 0.8766345381736755, 0.8792761564254761, 0.8812574148178101, 0.8802007436752319, 0.880729079246521, 0.883238673210144], "val_loss": [2.040788173675537, 1.5204172134399414, 1.0524792671203613, 0.8500773310661316, 0.7599721550941467, 0.7059502005577087, 0.662488579750061, 0.6273674964904785, 0.6065284609794617, 0.5853022933006287, 0.5592397451400757, 0.5489312410354614, 0.5353240966796875, 0.5225366353988647, 0.5116536617279053, 0.5086241364479065, 0.492005318403244, 0.48195508122444153, 0.4767214059829712, 0.4697974920272827, 0.4620620012283325, 0.45634928345680237, 0.45447465777397156, 0.44500595331192017, 0.4393044412136078, 0.4347463846206665, 0.425721138715744, 0.4257710874080658, 0.42441853880882263, 0.4181893765926361, 0.41334185004234314, 0.41066673398017883, 0.41283151507377625, 0.4049588143825531, 0.4063616991043091, 0.4102840721607208, 0.39264804124832153, 0.39059194922447205, 0.3888168931007385, 0.3859269320964813, 0.3838173449039459, 0.37936100363731384, 0.37627238035202026, 0.3737940192222595, 0.37594327330589294, 0.3785648047924042, 0.3718152344226837, 0.3741070032119751], "val_accuracy": [0.5376666784286499, 0.637333333492279, 0.6723333597183228, 0.6986666917800903, 0.7250000238418579, 0.7440000176429749, 0.7536666393280029, 0.765333354473114, 0.768666684627533, 0.7846666574478149, 0.7960000038146973, 0.7973333597183228, 0.8059999942779541, 0.8096666932106018, 0.8119999766349792, 0.8109999895095825, 0.8253333568572998, 0.824999988079071, 0.8276666402816772, 0.8286666870117188, 0.8353333473205566, 0.840666651725769, 0.8373333215713501, 0.8393333554267883, 0.8476666808128357, 0.8443333506584167, 0.8496666550636292, 0.8506666421890259, 0.8473333120346069, 0.8496666550636292, 0.8553333282470703, 0.8556666374206543, 0.8500000238418579, 0.8543333411216736, 0.8533333539962769, 0.8473333120346069, 0.8640000224113464, 0.8640000224113464, 0.8629999756813049, 0.8619999885559082, 0.8616666793823242, 0.8683333396911621, 0.8690000176429749, 0.8676666617393494, 0.8659999966621399, 0.8659999966621399, 0.8686666488647461, 0.8676666617393494]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 6], [0, 1], [0], [1], [0], [2], [0]], "fitness": -0.828000009059906, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5310230255126953, 0.8018578290939331, 0.6515945196151733, 0.6336266398429871, 0.5952237844467163, 0.5637107491493225, 0.5572304129600525, 0.5172831416130066, 0.5027596354484558, 0.5013503432273865, 0.4806218147277832, 0.49296924471855164, 0.4932865798473358, 0.4646313190460205, 0.5025202035903931, 0.47288307547569275, 0.47796839475631714, 0.47694113850593567, 0.47864997386932373], "accuracy": [0.4737815260887146, 0.7140403985977173, 0.7643640041351318, 0.7643640041351318, 0.7852331399917603, 0.7989697456359863, 0.7985734939575195, 0.8210275769233704, 0.8142913579940796, 0.8197067975997925, 0.8222163319587708, 0.828820526599884, 0.81112140417099, 0.8399154543876648, 0.8301413059234619, 0.8363492488861084, 0.835160493850708, 0.8368775844573975, 0.8355567455291748], "val_loss": [0.7996382713317871, 0.5965248346328735, 0.5658118724822998, 0.5282507538795471, 0.5255261063575745, 0.5241804718971252, 0.5176207423210144, 0.47697266936302185, 0.5071295499801636, 0.468960702419281, 0.5036969184875488, 0.4992929995059967, 0.5334701538085938, 0.5352324843406677, 0.5185142159461975, 0.5077962279319763, 0.5841364860534668, 0.5513666868209839, 0.5177649855613708], "val_accuracy": [0.6913333535194397, 0.7789999842643738, 0.7996666431427002, 0.8103333115577698, 0.8130000233650208, 0.8243333101272583, 0.8339999914169312, 0.8339999914169312, 0.8299999833106995, 0.8376666903495789, 0.8376666903495789, 0.8446666598320007, 0.8453333377838135, 0.8493333458900452, 0.8479999899864197, 0.843666672706604, 0.8360000252723694, 0.847000002861023, 0.8413333296775818]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1, 1], [0, 3], [0, 0], [0, 97], [0, 1], [0], [1], [0]], "fitness": -0.8188571333885193, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.291990041732788, 2.1869442462921143, 1.750278115272522, 1.3438862562179565, 1.0642205476760864, 0.906823992729187, 0.832459568977356, 0.7841978669166565, 0.7517666816711426, 0.7178792357444763, 0.6840949654579163, 0.6583426594734192, 0.6241848468780518, 0.6045321822166443, 0.5993305444717407, 0.5738378763198853, 0.5689366459846497, 0.5567370653152466, 0.5536315441131592, 0.5458909273147583, 0.5303752422332764, 0.5343321561813354, 0.5160147547721863], "accuracy": [0.13300752639770508, 0.3288865387439728, 0.4504028558731079, 0.5526350736618042, 0.6379606127738953, 0.6709813475608826, 0.6976621150970459, 0.7103421092033386, 0.7153612375259399, 0.7351737022399902, 0.743891179561615, 0.7460044622421265, 0.7617223858833313, 0.7688548564910889, 0.7662131786346436, 0.7799497842788696, 0.7839123010635376, 0.7837802171707153, 0.7836481332778931, 0.7932901978492737, 0.8017435073852539, 0.7981772422790527, 0.802271842956543], "val_loss": [2.245999336242676, 2.0108063220977783, 1.123221755027771, 0.883317768573761, 0.7485252022743225, 0.6973024010658264, 0.6438130140304565, 0.6421354413032532, 0.6145094633102417, 0.5965880751609802, 0.5548787713050842, 0.5413268208503723, 0.5224458575248718, 0.5080699324607849, 0.49856844544410706, 0.49534091353416443, 0.48780590295791626, 0.4784663915634155, 0.4777539372444153, 0.4699617624282837, 0.47604596614837646, 0.476380854845047, 0.4794843792915344], "val_accuracy": [0.4129999876022339, 0.4596666693687439, 0.6589999794960022, 0.7129999995231628, 0.7319999933242798, 0.75, 0.7486666440963745, 0.7450000047683716, 0.7749999761581421, 0.7706666588783264, 0.7866666913032532, 0.7873333096504211, 0.7956666946411133, 0.7996666431427002, 0.8016666769981384, 0.8046666383743286, 0.8090000152587891, 0.8296666741371155, 0.8190000057220459, 0.8289999961853027, 0.8233333230018616, 0.8116666674613953, 0.8190000057220459]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 4, 2, 2, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 8], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 1, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [3, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 82]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))))", "other_info": {"loss": [2.30434513092041, 2.3025832176208496, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09932637959718704, 0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3027052879333496, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 31], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 3, 5, 3, 5, 2, 6, 8, 0], [0, 2, 0, 3, 4, 4], [16, 16], [1, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 3, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 16, 10, 6, 2, 1, 0, 1, 1, 16, 8, 8, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(grad), grad)))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 1], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 2, 3, 0, 3, 5, 6, 8, 9], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 0, 6, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 90, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 13, 9, 4, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(grad, tf.math.square(beta))), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [8, 1, 3, 5, 0, 0], [1, 0, 1, 3, 2], [83, 99, 26], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [3], [0]], "fitness": -0.09457142651081085, "mapping_values": [1, 9, 6, 3, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.math.square(alpha), tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.math.negative(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3100593090057373, 2.3102285861968994, 2.3110005855560303, 2.3103721141815186, 2.310028553009033, 2.310678482055664], "accuracy": [0.0956280529499054, 0.09113723784685135, 0.09021265059709549, 0.09391097724437714, 0.09100515395402908, 0.08611807972192764], "val_loss": [2.3082635402679443, 2.3082635402679443, 2.3082635402679443, 2.3082635402679443, 2.3082635402679443, 2.3082635402679443], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]