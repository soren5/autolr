[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8534285426139832, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.226226806640625, 1.8698259592056274, 1.3922920227050781, 1.0981266498565674, 0.9277774691581726, 0.832314670085907, 0.7583948373794556, 0.7201623916625977, 0.6836087703704834, 0.6553447842597961, 0.6272370219230652, 0.6164135336875916, 0.5908849239349365, 0.5706672072410583, 0.5545878410339355, 0.5460548400878906, 0.5243086218833923, 0.5192171335220337, 0.508116602897644, 0.5001871585845947, 0.4907282590866089, 0.4827897548675537, 0.4660145044326782, 0.45856836438179016, 0.4483388662338257, 0.44392186403274536, 0.4316463768482208, 0.4350825846195221, 0.42766517400741577, 0.4060778021812439, 0.41512447595596313, 0.40484002232551575, 0.39769837260246277, 0.3883350193500519, 0.3894417881965637, 0.3848874270915985, 0.37365248799324036, 0.3650173842906952, 0.3729604482650757, 0.3642864227294922, 0.3628683090209961, 0.3574495315551758, 0.34585040807724, 0.34067490696907043, 0.3328440487384796, 0.32931938767433167], "accuracy": [0.27539294958114624, 0.4912164807319641, 0.574560821056366, 0.6185444593429565, 0.6655659675598145, 0.6927750706672668, 0.72672039270401, 0.7391361594200134, 0.7508915662765503, 0.7611940503120422, 0.7709681391716003, 0.7765156626701355, 0.785101056098938, 0.7951393723487854, 0.8017435073852539, 0.8047813773155212, 0.8138951063156128, 0.8108572363853455, 0.8182538747787476, 0.8211596608161926, 0.828292191028595, 0.828292191028595, 0.8359529972076416, 0.8391229510307312, 0.8388587832450867, 0.8417646288871765, 0.8492933511734009, 0.8449346423149109, 0.8446704745292664, 0.8584070801734924, 0.8500858545303345, 0.8562937378883362, 0.8627657890319824, 0.8634262084960938, 0.8599920868873596, 0.8639545440673828, 0.868049144744873, 0.8665962219238281, 0.8664641380310059, 0.8691058158874512, 0.8712190985679626, 0.8741249442100525, 0.8747853636741638, 0.878351628780365, 0.8841632604598999, 0.8804649114608765], "val_loss": [2.038201093673706, 1.5107933282852173, 1.0283323526382446, 0.8225932717323303, 0.7334856986999512, 0.6773643493652344, 0.6345769166946411, 0.5999706387519836, 0.5721184611320496, 0.5538396239280701, 0.536008358001709, 0.5203325748443604, 0.5054658055305481, 0.493304967880249, 0.47798556089401245, 0.4693267345428467, 0.4651353359222412, 0.44913730025291443, 0.44811052083969116, 0.4391283392906189, 0.4368303716182709, 0.425577312707901, 0.4232528507709503, 0.4151509702205658, 0.41590070724487305, 0.40571385622024536, 0.4016776382923126, 0.4018303155899048, 0.4005518853664398, 0.39501944184303284, 0.39331603050231934, 0.3898235559463501, 0.3839404284954071, 0.3888821601867676, 0.37861743569374084, 0.37701407074928284, 0.3745531141757965, 0.3761376440525055, 0.372202068567276, 0.3731297254562378, 0.36840033531188965, 0.37507954239845276, 0.36575180292129517, 0.36052408814430237, 0.3635379374027252, 0.36206257343292236], "val_accuracy": [0.5376666784286499, 0.6556666493415833, 0.6913333535194397, 0.7110000252723694, 0.7319999933242798, 0.7513333559036255, 0.7590000033378601, 0.7716666460037231, 0.7856666445732117, 0.7940000295639038, 0.7950000166893005, 0.8016666769981384, 0.8046666383743286, 0.8140000104904175, 0.8163333535194397, 0.8243333101272583, 0.8266666531562805, 0.8299999833106995, 0.8326666951179504, 0.8346666693687439, 0.8353333473205566, 0.8393333554267883, 0.8403333425521851, 0.8443333506584167, 0.8443333506584167, 0.8496666550636292, 0.8479999899864197, 0.8453333377838135, 0.847000002861023, 0.8543333411216736, 0.8500000238418579, 0.859666645526886, 0.8613333106040955, 0.8526666760444641, 0.862333357334137, 0.859666645526886, 0.8629999756813049, 0.8616666793823242, 0.8619999885559082, 0.8610000014305115, 0.8676666617393494, 0.859666645526886, 0.8676666617393494, 0.8666666746139526, 0.8656666874885559, 0.8673333525657654]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 0], [0, 8, 0, 9], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8471428751945496, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2924838066101074, 2.1918623447418213, 1.7835196256637573, 1.3744858503341675, 1.073050856590271, 0.9438222646713257, 0.8485804200172424, 0.8498989343643188, 0.7739549875259399, 0.7474625110626221, 0.6998440623283386, 0.69758141040802, 0.6499698162078857, 0.6256792545318604, 0.6088570952415466, 0.61081862449646, 0.5862100124359131, 0.5844578742980957, 0.5619505643844604, 0.5517974495887756, 0.5307573080062866, 0.53135746717453, 0.5150764584541321, 0.5024749636650085, 0.49344491958618164, 0.485267698764801, 0.46924665570259094, 0.4561859667301178, 0.4558582305908203, 0.43807730078697205, 0.4308822453022003, 0.42410996556282043, 0.4207023084163666, 0.41124334931373596, 0.4093262851238251, 0.41040802001953125, 0.39772698283195496, 0.39855659008026123, 0.3807315230369568, 0.382526695728302, 0.3706662952899933, 0.37011173367500305, 0.36625558137893677, 0.3641141951084137, 0.3538306951522827], "accuracy": [0.1298375427722931, 0.31884822249412537, 0.42345792055130005, 0.5305771827697754, 0.6305639743804932, 0.6602826714515686, 0.6900013089179993, 0.6901333928108215, 0.7059833407402039, 0.7121912837028503, 0.7380794882774353, 0.7375511527061462, 0.7485140562057495, 0.7613261342048645, 0.7701756954193115, 0.7732135653495789, 0.7786290049552917, 0.77677983045578, 0.7858935594558716, 0.793950617313385, 0.7956677079200745, 0.7959318161010742, 0.8062343001365662, 0.8101968169212341, 0.8079513907432556, 0.8133667707443237, 0.8185180425643921, 0.8248580098152161, 0.8244617581367493, 0.8333113193511963, 0.8347642421722412, 0.8409721255302429, 0.8337075710296631, 0.8429533839225769, 0.8400475382804871, 0.8426892161369324, 0.8495575189590454, 0.8453308939933777, 0.8494254350662231, 0.8525954484939575, 0.8599920868873596, 0.8581429123878479, 0.8580108284950256, 0.8574824929237366, 0.8619733452796936], "val_loss": [2.2470641136169434, 2.0208733081817627, 1.1491172313690186, 0.8930116891860962, 0.7814154624938965, 0.7388991117477417, 0.7112873792648315, 0.6893889307975769, 0.6452674269676208, 0.6258010268211365, 0.6085931062698364, 0.5696262121200562, 0.5559327602386475, 0.545466959476471, 0.5392191410064697, 0.5261760354042053, 0.5222389101982117, 0.510259211063385, 0.5040442943572998, 0.4883178174495697, 0.4805038273334503, 0.4767785668373108, 0.47617772221565247, 0.4777306616306305, 0.46151185035705566, 0.4535433053970337, 0.4521055221557617, 0.4463997781276703, 0.4360765516757965, 0.43459680676460266, 0.4283653199672699, 0.4240953028202057, 0.42398005723953247, 0.42422398924827576, 0.41746264696121216, 0.41973957419395447, 0.4132043421268463, 0.4170026183128357, 0.4373873770236969, 0.4330962002277374, 0.43443524837493896, 0.4317356050014496, 0.4234734773635864, 0.4220423102378845, 0.4447809159755707], "val_accuracy": [0.41966667771339417, 0.42399999499320984, 0.6489999890327454, 0.6800000071525574, 0.7123333215713501, 0.7223333120346069, 0.7366666793823242, 0.7516666650772095, 0.7606666684150696, 0.7703333497047424, 0.7620000243186951, 0.7896666526794434, 0.7883333563804626, 0.7929999828338623, 0.8050000071525574, 0.8073333501815796, 0.7986666560173035, 0.8009999990463257, 0.809333324432373, 0.8306666612625122, 0.815666675567627, 0.8233333230018616, 0.8320000171661377, 0.8256666660308838, 0.8309999704360962, 0.8299999833106995, 0.831333339214325, 0.8416666388511658, 0.8463333249092102, 0.8443333506584167, 0.847000002861023, 0.8489999771118164, 0.846666693687439, 0.843666672706604, 0.8546666502952576, 0.8576666712760925, 0.8539999723434448, 0.8513333201408386, 0.8523333072662354, 0.8586666584014893, 0.8533333539962769, 0.8516666889190674, 0.856333315372467, 0.8560000061988831, 0.8536666631698608]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 4, 4, 0, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.824571430683136, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5937374830245972, 0.8390978574752808, 0.6946634650230408, 0.609229564666748, 0.5705773234367371, 0.545226514339447, 0.5319963693618774, 0.5341971516609192, 0.5205613970756531, 0.5056132078170776, 0.5126156210899353, 0.47987380623817444, 0.4689319431781769, 0.48314356803894043, 0.46689894795417786, 0.46221092343330383, 0.4375596046447754, 0.42583444714546204, 0.4628717601299286, 0.4878076910972595, 0.4711756408214569, 0.49281075596809387, 0.515017032623291, 0.5134063959121704, 0.5120086073875427], "accuracy": [0.4784044325351715, 0.6995112895965576, 0.737947404384613, 0.7663452625274658, 0.7862898111343384, 0.7938185334205627, 0.8117818236351013, 0.8269713521003723, 0.8033285140991211, 0.8198388814926147, 0.8175934553146362, 0.82683926820755, 0.826310932636261, 0.8309338092803955, 0.832650899887085, 0.8358209133148193, 0.8350284099578857, 0.8492933511734009, 0.8446704745292664, 0.8479725122451782, 0.8411042094230652, 0.839519202709198, 0.8269713521003723, 0.832650899887085, 0.8422929644584656], "val_loss": [0.8267991542816162, 0.6320053935050964, 0.5796355605125427, 0.5142670273780823, 0.5215885639190674, 0.49346110224723816, 0.47297197580337524, 0.5189622640609741, 0.5124647617340088, 0.4999523162841797, 0.5278294086456299, 0.5013213157653809, 0.49663060903549194, 0.4880158603191376, 0.5471363663673401, 0.4640474319458008, 0.49683138728141785, 0.527271032333374, 0.5496708154678345, 0.48787859082221985, 0.5023038983345032, 0.5109517574310303, 0.606608510017395, 0.5161946415901184, 0.5265240669250488], "val_accuracy": [0.7046666741371155, 0.765333354473114, 0.7823333144187927, 0.8119999766349792, 0.8213333487510681, 0.8360000252723694, 0.8373333215713501, 0.8220000267028809, 0.8309999704360962, 0.82833331823349, 0.8403333425521851, 0.8399999737739563, 0.8500000238418579, 0.8516666889190674, 0.8489999771118164, 0.8496666550636292, 0.8510000109672546, 0.8483333587646484, 0.8573333621025085, 0.8579999804496765, 0.8450000286102295, 0.8506666421890259, 0.8413333296775818, 0.8556666374206543, 0.8413333296775818]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 1], [16, 16], [0, 0, 1], [0, 5], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 1, 6, 8, 1, 4, 1, 4, 1, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 84, 96, 99, 61, 6]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 2, 3, 2, 1, 0, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.subtract(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 6, 3], [0, 1, 0, 2], [50, 66], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [2, 2, 3, 6, 3, 5, 4, 5, 4, 1], [0, 2, 0, 1, 5, 3, 5, 4, 1], [29, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 0, 3, 0, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(alpha, tf.math.multiply(grad, tf.math.square(tf.math.pow(grad, tf.math.square(tf.math.pow(tf.math.subtract(grad, grad), alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.305602788925171, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}, "mapping_values": [1, 6, 3, 3, 2, 19, 10, 9, 2, 2, 1, 1, 1, 14, 8, 6, 5], "tree_depth": 19}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [9, 2, 8, 9, 3], [0, 1, 0, 2], [83, 91, 27], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1], [0, 6, 3, 4, 0, 3, 6, 5, 0, 2, 6, 3, 0, 7, 3, 1, 7, 0, 0, 8, 2, 6, 0, 4, 0, 2, 7, 2, 1, 8, 1], [0, 2, 0, 3, 5, 0, 2, 1, 3, 2, 2, 4, 5, 5, 1, 4], [16, 16, 96], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [6, 3, 3, 9, 8, 1, 4, 1, 4, 2, 8, 2, 0, 2], [1, 4, 4, 4, 1, 3, 0, 3, 6, 1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 1, 24, 14, 10, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.subtract(tf.math.pow(alpha, tf.math.subtract(grad, grad)), tf.math.pow(grad, tf.math.add(alpha, sigma))))), tf.math.sqrt(tf.math.add(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma))), tf.math.add(grad, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 2, 2, 9, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 3], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 7], [52, 99, 55, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 10, 6, 4, 2, 2, 1, 1, 1, 23, 12, 11, 6], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.multiply(alpha, beta))))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}]