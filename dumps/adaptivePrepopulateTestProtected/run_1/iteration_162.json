[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8614285588264465, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2241764068603516, 1.871267318725586, 1.4017316102981567, 1.088643193244934, 0.9431855082511902, 0.8399693965911865, 0.7860169410705566, 0.7314953804016113, 0.6912729144096375, 0.6673407554626465, 0.6465781331062317, 0.6253503561019897, 0.6014888882637024, 0.5834894776344299, 0.5671077370643616, 0.5562818646430969, 0.5453823208808899, 0.5307592153549194, 0.5167784094810486, 0.503416895866394, 0.5010923147201538, 0.49082183837890625, 0.4805825352668762, 0.46661102771759033, 0.4675512909889221, 0.4543240964412689, 0.44696182012557983, 0.4404098093509674, 0.43798983097076416, 0.4281572997570038, 0.4279429018497467, 0.41355255246162415, 0.4070374667644501, 0.4042966067790985, 0.39561963081359863, 0.38746723532676697, 0.388726145029068, 0.37926235795021057, 0.3684694468975067, 0.37324097752571106, 0.36573439836502075, 0.35797369480133057, 0.34600141644477844, 0.34947553277015686, 0.3471701741218567, 0.3417521119117737, 0.3320378363132477, 0.327594518661499, 0.32423919439315796, 0.32606586813926697, 0.3188488781452179, 0.3129469156265259, 0.30262258648872375], "accuracy": [0.27143046259880066, 0.4815744161605835, 0.5577862858772278, 0.6209219098091125, 0.6592260003089905, 0.6959450244903564, 0.7117950320243835, 0.7333245277404785, 0.7477215528488159, 0.752740740776062, 0.7629110813140869, 0.7759873270988464, 0.783119797706604, 0.7828556299209595, 0.7922335267066956, 0.7992339134216309, 0.7997622489929199, 0.8074230551719666, 0.817461371421814, 0.8204993009567261, 0.8187822103500366, 0.8245938420295715, 0.8249900937080383, 0.8314621448516846, 0.8337075710296631, 0.8360850811004639, 0.8385946154594421, 0.8454629778862, 0.8422929644584656, 0.8508783578872681, 0.8488970994949341, 0.8544445633888245, 0.8562937378883362, 0.8589354157447815, 0.8598600029945374, 0.8613129258155823, 0.8625016212463379, 0.8643507957458496, 0.8663320541381836, 0.863558292388916, 0.8669924736022949, 0.8701624870300293, 0.8735966086387634, 0.8730682730674744, 0.876370370388031, 0.8768987059593201, 0.8849557638168335, 0.878879964351654, 0.882710337638855, 0.8791441321372986, 0.8829745054244995, 0.8897107243537903, 0.8934090733528137], "val_loss": [2.039930582046509, 1.5108834505081177, 1.0362812280654907, 0.8363898396492004, 0.747941255569458, 0.6908488869667053, 0.6433597207069397, 0.6100597977638245, 0.5906574726104736, 0.5609306693077087, 0.55025315284729, 0.5341691374778748, 0.5147771835327148, 0.5056232213973999, 0.4947000741958618, 0.48295849561691284, 0.47281861305236816, 0.4740930199623108, 0.46247974038124084, 0.45522400736808777, 0.4473898112773895, 0.4416936933994293, 0.43557649850845337, 0.4288252890110016, 0.4279196262359619, 0.4197927713394165, 0.4193112254142761, 0.4120500385761261, 0.4113014340400696, 0.40735846757888794, 0.4046482443809509, 0.4026155471801758, 0.3991542458534241, 0.39400118589401245, 0.3954070210456848, 0.3916999399662018, 0.390114426612854, 0.38583752512931824, 0.3852854073047638, 0.38905298709869385, 0.3787280321121216, 0.3763299286365509, 0.3802121579647064, 0.3760397136211395, 0.3746291399002075, 0.37258267402648926, 0.3704681098461151, 0.3693966567516327, 0.37003323435783386, 0.37044084072113037, 0.3637239933013916, 0.3674103319644928, 0.37022945284843445], "val_accuracy": [0.5326666831970215, 0.6613333225250244, 0.6863333582878113, 0.7039999961853027, 0.7363333106040955, 0.7393333315849304, 0.7586666941642761, 0.7736666798591614, 0.7743333578109741, 0.7860000133514404, 0.7903333306312561, 0.7986666560173035, 0.8036666512489319, 0.8053333163261414, 0.8133333325386047, 0.8190000057220459, 0.8259999752044678, 0.8306666612625122, 0.8343333601951599, 0.8370000123977661, 0.8360000252723694, 0.8379999995231628, 0.8399999737739563, 0.847000002861023, 0.846666693687439, 0.8483333587646484, 0.8506666421890259, 0.8496666550636292, 0.8546666502952576, 0.8546666502952576, 0.8533333539962769, 0.8550000190734863, 0.8583333492279053, 0.8560000061988831, 0.859333336353302, 0.8560000061988831, 0.8576666712760925, 0.8636666536331177, 0.862666666507721, 0.8576666712760925, 0.8653333187103271, 0.8629999756813049, 0.8653333187103271, 0.8656666874885559, 0.8629999756813049, 0.8646666407585144, 0.8659999966621399, 0.8703333139419556, 0.8666666746139526, 0.8669999837875366, 0.8693333268165588, 0.8656666874885559, 0.8643333315849304]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 4, 7, 6, 4, 0, 2, 0, 1], [0, 6, 1, 0, 5, 5, 4], [0, 79], [0, 1], [0], [1], [0]], "fitness": -0.8548571467399597, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(grad), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(grad)), tf.math.subtract(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2935597896575928, 2.1930453777313232, 1.7854489088058472, 1.3685710430145264, 1.0778263807296753, 0.9115213751792908, 0.8567617535591125, 0.8192918300628662, 0.7650250196456909, 0.737277626991272, 0.7063643932342529, 0.7033531665802002, 0.6678358912467957, 0.6439499855041504, 0.6173344254493713, 0.6114534139633179, 0.5888550877571106, 0.595486044883728, 0.5544682145118713, 0.5640285611152649, 0.5436418056488037, 0.5339717864990234, 0.5321688055992126, 0.504386305809021, 0.4920674264431, 0.4974754750728607, 0.4691222310066223, 0.477855384349823, 0.4575756788253784, 0.4537630081176758, 0.4426160156726837, 0.4434947669506073, 0.4358466863632202, 0.4192878007888794, 0.4089800715446472, 0.4004017114639282, 0.3994973599910736, 0.3921704888343811, 0.37085551023483276, 0.36417171359062195, 0.37279245257377625, 0.3615054786205292, 0.36194708943367004, 0.35162150859832764, 0.3322800099849701], "accuracy": [0.12640337646007538, 0.32281073927879333, 0.42583543062210083, 0.5317659378051758, 0.635451078414917, 0.6671509742736816, 0.6936996579170227, 0.6907938122749329, 0.7030775547027588, 0.7082287669181824, 0.7317395210266113, 0.7351737022399902, 0.7516840696334839, 0.752740740776062, 0.7614582180976868, 0.7718927264213562, 0.7810064554214478, 0.7707040309906006, 0.7926297783851624, 0.7905164361000061, 0.7927618622779846, 0.7989697456359863, 0.8000264167785645, 0.8120459914207458, 0.8137630224227905, 0.8088759779930115, 0.8170651197433472, 0.8098005652427673, 0.8245938420295715, 0.830669641494751, 0.8321225643157959, 0.8352925777435303, 0.8321225643157959, 0.8405758738517761, 0.848368763923645, 0.8473120927810669, 0.8467837572097778, 0.8485008478164673, 0.858671247959137, 0.8584070801734924, 0.8576145768165588, 0.8582749962806702, 0.8590674996376038, 0.8650112152099609, 0.8730682730674744], "val_loss": [2.246579647064209, 2.0235798358917236, 1.1609126329421997, 0.8548988699913025, 0.7549400329589844, 0.722061038017273, 0.6773819327354431, 0.6563177704811096, 0.6347832679748535, 0.6125202775001526, 0.6006380319595337, 0.5773556232452393, 0.5493997931480408, 0.5346777439117432, 0.5532362461090088, 0.5429769158363342, 0.5429356098175049, 0.5266433954238892, 0.5441749691963196, 0.5235024094581604, 0.5154579877853394, 0.5144495964050293, 0.5077580809593201, 0.5064197778701782, 0.5057932138442993, 0.4886350631713867, 0.4872592091560364, 0.476997971534729, 0.46775537729263306, 0.47398242354393005, 0.47812604904174805, 0.4720247685909271, 0.4469173848628998, 0.4435010850429535, 0.43791311979293823, 0.44110867381095886, 0.4547182619571686, 0.4460378885269165, 0.440988689661026, 0.4363265931606293, 0.4450733959674835, 0.44922253489494324, 0.4620221257209778, 0.46901801228523254, 0.4533021152019501], "val_accuracy": [0.4129999876022339, 0.4166666567325592, 0.656000018119812, 0.7009999752044678, 0.722000002861023, 0.7336666584014893, 0.7463333606719971, 0.749666690826416, 0.7596666812896729, 0.7509999871253967, 0.7693333625793457, 0.777999997138977, 0.7863333225250244, 0.79666668176651, 0.7960000038146973, 0.7956666946411133, 0.8006666898727417, 0.8106666803359985, 0.8050000071525574, 0.8136666417121887, 0.8103333115577698, 0.8086666464805603, 0.8243333101272583, 0.8159999847412109, 0.8270000219345093, 0.8353333473205566, 0.8243333101272583, 0.8326666951179504, 0.8379999995231628, 0.8366666436195374, 0.8393333554267883, 0.8399999737739563, 0.8529999852180481, 0.8513333201408386, 0.8526666760444641, 0.8519999980926514, 0.8560000061988831, 0.859000027179718, 0.8556666374206543, 0.8633333444595337, 0.8533333539962769, 0.8566666841506958, 0.8619999885559082, 0.8619999885559082, 0.8616666793823242]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 16, 9, 7, 2, 2, 1, 1, 0], "tree_depth": 16}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 3, 3, 5, 4, 9, 7, 2, 9, 0], [0, 4, 6, 2], [0, 41, 38], [1], [0], [2], [0]], "fitness": -0.8299999833106995, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(grad), tf.math.pow(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), tf.math.negative(beta)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.495273470878601, 0.7868099212646484, 0.6570794582366943, 0.6048285365104675, 0.5611911416053772, 0.5568825006484985, 0.5303592681884766, 0.49585047364234924, 0.4959072470664978, 0.4882332384586334, 0.5392094254493713, 0.5225558876991272, 0.49872714281082153, 0.50516676902771, 0.517170250415802, 0.5364455580711365, 0.4888664186000824, 0.5485902428627014, 0.5599080920219421, 0.5654319524765015, 0.5601922869682312], "accuracy": [0.48170650005340576, 0.7182670831680298, 0.7621186375617981, 0.778761088848114, 0.7915731072425842, 0.7984414100646973, 0.8042530417442322, 0.8141592741012573, 0.8216879963874817, 0.8289526104927063, 0.8144234418869019, 0.8158763647079468, 0.8207634687423706, 0.8195747137069702, 0.8289526104927063, 0.8241975903511047, 0.8325188159942627, 0.8125742673873901, 0.8206313848495483, 0.8274996876716614, 0.8138951063156128], "val_loss": [0.681752622127533, 0.58443284034729, 0.49542099237442017, 0.4736191928386688, 0.4506021738052368, 0.4215399920940399, 0.4472353458404541, 0.43347758054733276, 0.4258912205696106, 0.44614681601524353, 0.450815886259079, 0.4644699692726135, 0.43205851316452026, 0.42988917231559753, 0.47073477506637573, 0.48329976201057434, 0.4769541025161743, 0.48806747794151306, 0.5424168109893799, 0.5173181295394897, 0.4820883870124817], "val_accuracy": [0.7483333349227905, 0.7799999713897705, 0.8090000152587891, 0.8176666498184204, 0.8299999833106995, 0.843999981880188, 0.8370000123977661, 0.8423333168029785, 0.8510000109672546, 0.8483333587646484, 0.8386666774749756, 0.8333333134651184, 0.8476666808128357, 0.8516666889190674, 0.8420000076293945, 0.8523333072662354, 0.8399999737739563, 0.8379999995231628, 0.8366666436195374, 0.8299999833106995, 0.8453333377838135]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 14, 10, 4, 3, 1, 0, 1, 0], "tree_depth": 16}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 4, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 5, 4], [0, 2, 0, 3], [71, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [2, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 97, 99, 61, 84]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 4, 2, 2, 1, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.3051435947418213, 2.3025851249694824, 2.302626132965088, 2.5897085666656494, 1197.990966796875, 203798.09375], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.10117553919553757, 0.09998679161071777, 0.10500594228506088], "val_loss": [2.3025853633880615, 2.3025856018066406, 2.3041162490844727, 2.3025853633880615, 13140.6611328125, 3363832.25], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.09866666793823242, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 7], [0, 1, 0, 0, 3], [39, 39, 30], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 0, 1, 0, 1, 1], [0, 4, 2], [0, 6, 5], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 5, 3, 9, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [91, 99, 96, 28, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 7, 4, 3, 2, 6, 3, 3, 1, 11, 7, 4, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), sigma))))", "other_info": {"loss": [2.303450584411621, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 0, 1], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 59], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 0, 0], [16, 99, 96, 99, 61, 31]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [2.303767204284668, 2.3025896549224854, 2.302586555480957, 2.302586317062378, 2.302586078643799, 2.3025858402252197], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025808334350586, 2.302579641342163, 2.302579879760742, 2.302579641342163, 2.302579641342163, 2.302579641342163], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [90, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 8], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 3, 4, 1, 8, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma), alpha)", "other_info": {"loss": [12621.0185546875, 142868.765625, 372587.0, 597625.6875, 759015.6875, 839320.625], "accuracy": [0.09826971590518951, 0.09642054885625839, 0.09985470771789551, 0.09866596013307571, 0.09576013684272766, 0.1026284471154213], "val_loss": [49308.0703125, 212129.96875, 395453.1875, 536964.1875, 627705.0625, 680103.4375], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 2, 1, 0, 1, 1, 17, 9, 8, 5], "tree_depth": 18}]