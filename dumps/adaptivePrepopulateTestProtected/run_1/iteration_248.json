[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8708571195602417, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2230985164642334, 1.8729557991027832, 1.4070066213607788, 1.1178468465805054, 0.9470557570457458, 0.8484435677528381, 0.7943289279937744, 0.7398960590362549, 0.7059022784233093, 0.6756874918937683, 0.6407185196876526, 0.6218682527542114, 0.6082882881164551, 0.5892260074615479, 0.5662454962730408, 0.5532668232917786, 0.5338490009307861, 0.5357247591018677, 0.5204508304595947, 0.5125343799591064, 0.49185389280319214, 0.481906533241272, 0.4726393222808838, 0.46267077326774597, 0.45851585268974304, 0.45062172412872314, 0.4425981640815735, 0.4357384443283081, 0.4304501712322235, 0.42732566595077515, 0.4168073832988739, 0.40500718355178833, 0.40375733375549316, 0.3915211856365204, 0.3957904577255249, 0.3831917941570282, 0.38247647881507874, 0.37400132417678833, 0.3674499988555908, 0.36478304862976074, 0.3575093150138855, 0.34711772203445435, 0.35568854212760925], "accuracy": [0.2588825821876526, 0.47510236501693726, 0.5649187564849854, 0.6132611036300659, 0.6623960137367249, 0.6939638257026672, 0.713908314704895, 0.7279091477394104, 0.7405890822410583, 0.7540615797042847, 0.7740060687065125, 0.7716285586357117, 0.7836481332778931, 0.7922335267066956, 0.7943468689918518, 0.8041210174560547, 0.8088759779930115, 0.8050455451011658, 0.8117818236351013, 0.8161405324935913, 0.8170651197433472, 0.8241975903511047, 0.8325188159942627, 0.8322546482086182, 0.8362171649932861, 0.8376700282096863, 0.8407079577445984, 0.8448025584220886, 0.8492933511734009, 0.8508783578872681, 0.8496896028518677, 0.8570862412452698, 0.8520671129226685, 0.8581429123878479, 0.8582749962806702, 0.8638224601745605, 0.8609166741371155, 0.8663320541381836, 0.8671245574951172, 0.8663320541381836, 0.8742570281028748, 0.8726720213890076, 0.8709549307823181], "val_loss": [2.038210391998291, 1.5166460275650024, 1.0382647514343262, 0.8314218521118164, 0.7434641122817993, 0.6885231137275696, 0.6418853402137756, 0.6070287823677063, 0.5802322626113892, 0.5574071407318115, 0.5388926863670349, 0.5239167809486389, 0.5120397210121155, 0.5005632042884827, 0.48861557245254517, 0.4761311113834381, 0.46800217032432556, 0.46185457706451416, 0.4501568078994751, 0.44849199056625366, 0.4376649558544159, 0.4354051649570465, 0.4257851541042328, 0.4280070662498474, 0.41581934690475464, 0.4115869402885437, 0.40955445170402527, 0.40200474858283997, 0.40610751509666443, 0.3982352018356323, 0.397921621799469, 0.3908146917819977, 0.384966641664505, 0.3847532272338867, 0.3800966739654541, 0.37403157353401184, 0.37897762656211853, 0.37674689292907715, 0.3809269070625305, 0.37241336703300476, 0.37280037999153137, 0.3657366633415222, 0.3625299334526062], "val_accuracy": [0.5346666574478149, 0.6600000262260437, 0.6859999895095825, 0.7193333506584167, 0.7396666407585144, 0.7440000176429749, 0.7649999856948853, 0.781333327293396, 0.7836666703224182, 0.8009999990463257, 0.8046666383743286, 0.8143333196640015, 0.8146666884422302, 0.8263333439826965, 0.8266666531562805, 0.8353333473205566, 0.8349999785423279, 0.8363333344459534, 0.8446666598320007, 0.8413333296775818, 0.8500000238418579, 0.8463333249092102, 0.8550000190734863, 0.8473333120346069, 0.8543333411216736, 0.8566666841506958, 0.8600000143051147, 0.862333357334137, 0.8603333234786987, 0.8610000014305115, 0.8613333106040955, 0.8616666793823242, 0.8640000224113464, 0.8646666407585144, 0.8650000095367432, 0.8686666488647461, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8679999709129333, 0.8706666827201843, 0.8700000047683716, 0.8709999918937683]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 1], [0, 3], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8654285669326782, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294018507003784, 2.1944797039031982, 1.7943496704101562, 1.3683326244354248, 1.0598503351211548, 0.9072744250297546, 0.8439120054244995, 0.8175092339515686, 0.7595934867858887, 0.7560625672340393, 0.7122818231582642, 0.6745090484619141, 0.650994598865509, 0.6255635023117065, 0.6080056428909302, 0.596235990524292, 0.5787952542304993, 0.5581617951393127, 0.5368285179138184, 0.529569149017334, 0.526766300201416, 0.5122671723365784, 0.5107679963111877, 0.48767751455307007, 0.4852544665336609, 0.4715102016925812, 0.46367859840393066, 0.4583280086517334, 0.4564087986946106, 0.4388652741909027, 0.43449363112449646, 0.42095887660980225, 0.4236191511154175, 0.40936771035194397, 0.4061916768550873, 0.40428805351257324, 0.3943004608154297, 0.38778582215309143, 0.3767624497413635, 0.3663572669029236, 0.35755568742752075, 0.35869473218917847, 0.34680885076522827, 0.3402928113937378, 0.3642653226852417, 0.34708014130592346, 0.33967623114585876, 0.32847708463668823], "accuracy": [0.12468630075454712, 0.3315281867980957, 0.43666622042655945, 0.5424646735191345, 0.6328094005584717, 0.6686038970947266, 0.6903975605964661, 0.6925109028816223, 0.7069079279899597, 0.703209638595581, 0.7301545143127441, 0.7351737022399902, 0.7481178045272827, 0.7581561207771301, 0.7600052952766418, 0.76106196641922, 0.7738739848136902, 0.7814027070999146, 0.7960638999938965, 0.7928939461708069, 0.7930260300636292, 0.7992339134216309, 0.8063663840293884, 0.8137630224227905, 0.8042530417442322, 0.817989706993103, 0.8185180425643921, 0.8202351331710815, 0.8210275769233704, 0.8284242749214172, 0.8310658931732178, 0.8363492488861084, 0.8330471515655518, 0.8412362933158875, 0.8430854678153992, 0.8445383906364441, 0.8462554216384888, 0.846387505531311, 0.8560295701026917, 0.8568220734596252, 0.8636903762817383, 0.8560295701026917, 0.8625016212463379, 0.8648791313171387, 0.8574824929237366, 0.8619733452796936, 0.8660678863525391, 0.8667283058166504], "val_loss": [2.247403860092163, 2.0332114696502686, 1.1519917249679565, 0.859160304069519, 0.7527216672897339, 0.709403395652771, 0.6604881882667542, 0.6470603346824646, 0.6350705027580261, 0.6027767062187195, 0.5868671536445618, 0.5723698139190674, 0.567872941493988, 0.5463974475860596, 0.5378583669662476, 0.5207352042198181, 0.5093055963516235, 0.5111551284790039, 0.5114684700965881, 0.4916144907474518, 0.4919182062149048, 0.4964936077594757, 0.5105316042900085, 0.479160875082016, 0.47282475233078003, 0.4734647572040558, 0.4695960581302643, 0.47219395637512207, 0.46020016074180603, 0.4660288989543915, 0.45429933071136475, 0.459883451461792, 0.45035937428474426, 0.44424018263816833, 0.44439375400543213, 0.4390735626220703, 0.4351937174797058, 0.4416957199573517, 0.42506030201911926, 0.43139511346817017, 0.4503518044948578, 0.41969501972198486, 0.41284888982772827, 0.4328002631664276, 0.42889681458473206, 0.43908777832984924, 0.46089306473731995, 0.46818554401397705], "val_accuracy": [0.4116666615009308, 0.4386666715145111, 0.6430000066757202, 0.6936666369438171, 0.7250000238418579, 0.7293333411216736, 0.7476666569709778, 0.7540000081062317, 0.753333330154419, 0.7756666541099548, 0.7733333110809326, 0.7816666960716248, 0.7756666541099548, 0.7823333144187927, 0.8013333082199097, 0.800000011920929, 0.8026666641235352, 0.8080000281333923, 0.8113333582878113, 0.8159999847412109, 0.8173333406448364, 0.8216666579246521, 0.8133333325386047, 0.8299999833106995, 0.8330000042915344, 0.8333333134651184, 0.8360000252723694, 0.8363333344459534, 0.8399999737739563, 0.8346666693687439, 0.8396666646003723, 0.840666651725769, 0.8450000286102295, 0.8433333039283752, 0.843999981880188, 0.8450000286102295, 0.846666693687439, 0.8483333587646484, 0.8493333458900452, 0.8519999980926514, 0.8556666374206543, 0.8503333330154419, 0.8583333492279053, 0.8583333492279053, 0.8576666712760925, 0.8543333411216736, 0.8529999852180481, 0.8579999804496765]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0], [0, 0, 7, 9], [0], [0, 38], [1], [0], [2], [0]], "fitness": -0.821142852306366, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5028469562530518, 0.8023496866226196, 0.6581694483757019, 0.6181811690330505, 0.5736722946166992, 0.5387524366378784, 0.5263777375221252, 0.5168723464012146, 0.5450296998023987, 0.5174251198768616, 0.5119551420211792, 0.537799060344696, 0.5841997861862183, 0.5182746648788452, 0.5900705456733704], "accuracy": [0.4761590361595154, 0.7141724824905396, 0.7581561207771301, 0.7746664881706238, 0.7837802171707153, 0.7996301651000977, 0.8082155585289001, 0.8088759779930115, 0.8045172095298767, 0.8201030492782593, 0.8202351331710815, 0.8079513907432556, 0.8185180425643921, 0.8220842480659485, 0.8144234418869019], "val_loss": [0.8145646452903748, 0.5737855434417725, 0.5367906093597412, 0.5501236915588379, 0.497231662273407, 0.4900711178779602, 0.49187883734703064, 0.5104619264602661, 0.4719211459159851, 0.502360999584198, 0.5335119962692261, 0.6100202798843384, 0.5694582462310791, 0.5775060653686523, 0.6331363916397095], "val_accuracy": [0.7086666822433472, 0.7933333516120911, 0.8050000071525574, 0.8063333630561829, 0.8196666836738586, 0.824999988079071, 0.8323333263397217, 0.8266666531562805, 0.8339999914169312, 0.8429999947547913, 0.8289999961853027, 0.8259999752044678, 0.8373333215713501, 0.8146666884422302, 0.8343333601951599]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 5, 4, 1, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 2, 0, 5, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 9, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 8, 5, 3, 2, 2, 1, 1, 1, 8, 5, 3, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [1, 2, 3, 1, 3, 5, 7, 4, 0, 5, 5, 9], [0, 1, 0, 2, 2, 1, 2], [0, 40, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 0, 0, 3, 5], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [5, 5], [0], [99], [1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 12, 7, 3, 6, 4, 2, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(alpha), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.pow(tf.math.negative(grad), grad), tf.math.square(tf.math.square(alpha)))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303736925125122, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 5], [1, 1, 0, 2], [45, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [5, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 1, 6, 3, 3, 2, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.square(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3088507652282715, 2.3043861389160156, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.08994849026203156, 0.0948355570435524, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3073482513427734, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.07199999690055847, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [9, 2, 3, 0, 3, 5], [0, 2, 0, 3], [40, 34], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 1, 9], [4, 0, 3, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 1, 0, 1, 2, 1, 1, 1, 23, 13, 10, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(grad, tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), sigma)), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), sigma), tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]