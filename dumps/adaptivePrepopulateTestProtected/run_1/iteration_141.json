[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8539999723434448, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2223117351531982, 1.8702973127365112, 1.398287057876587, 1.1009366512298584, 0.95149827003479, 0.8473048806190491, 0.7945619225502014, 0.7392308115959167, 0.7064958810806274, 0.6656123995780945, 0.6448920965194702, 0.6221001148223877, 0.5966275334358215, 0.5796475410461426, 0.5642523765563965, 0.5509100556373596, 0.531286895275116, 0.5183613896369934, 0.5123405456542969, 0.5017473697662354, 0.4916488528251648, 0.4829540252685547, 0.4711838662624359, 0.4666452705860138, 0.45701462030410767, 0.4402857720851898, 0.4452006220817566, 0.4348832964897156, 0.43252286314964294, 0.41825294494628906, 0.41638147830963135, 0.4073193073272705, 0.3979930877685547, 0.3948425352573395, 0.386415958404541, 0.39124393463134766, 0.3722972571849823, 0.3632549047470093, 0.3616519272327423, 0.3581632375717163, 0.3492048680782318, 0.3515593111515045, 0.34676337242126465, 0.34270891547203064, 0.33560919761657715, 0.33037087321281433, 0.3289984464645386], "accuracy": [0.2712983787059784, 0.49187690019607544, 0.5643904209136963, 0.6194690465927124, 0.665830135345459, 0.6959450244903564, 0.7157574892044067, 0.7334566116333008, 0.7467969655990601, 0.7600052952766418, 0.7633073329925537, 0.7740060687065125, 0.7817989587783813, 0.7862898111343384, 0.7985734939575195, 0.8014793395996094, 0.8104609847068787, 0.8115176558494568, 0.8127063512802124, 0.8175934553146362, 0.8231409192085266, 0.8281601071357727, 0.8289526104927063, 0.8347642421722412, 0.8388587832450867, 0.8432175517082214, 0.8411042094230652, 0.8437458872795105, 0.8495575189590454, 0.8496896028518677, 0.848368763923645, 0.8549728989601135, 0.856689989566803, 0.8610487580299377, 0.863029956817627, 0.8607845902442932, 0.8659358024597168, 0.8702945709228516, 0.8708229064941406, 0.8717474341392517, 0.8741249442100525, 0.8754457831382751, 0.8771628737449646, 0.8739928603172302, 0.8757099509239197, 0.8816536664962769, 0.8840311765670776], "val_loss": [2.0376529693603516, 1.517464518547058, 1.0476113557815552, 0.8379799127578735, 0.7525238990783691, 0.6930738687515259, 0.6517994999885559, 0.6112987399101257, 0.5806663632392883, 0.5610145926475525, 0.5387041568756104, 0.5237013101577759, 0.5102818012237549, 0.49477556347846985, 0.48395153880119324, 0.470074862241745, 0.4645841419696808, 0.45677900314331055, 0.4450020492076874, 0.44275960326194763, 0.4326927065849304, 0.42715999484062195, 0.42272916436195374, 0.42030322551727295, 0.4109245538711548, 0.40623125433921814, 0.40882620215415955, 0.4020734131336212, 0.39625680446624756, 0.3958076238632202, 0.3897842466831207, 0.3840239346027374, 0.37937045097351074, 0.37676745653152466, 0.37449169158935547, 0.37316495180130005, 0.3715588450431824, 0.3678673207759857, 0.3668757379055023, 0.3631158769130707, 0.3601914942264557, 0.3549254238605499, 0.3589725196361542, 0.35492900013923645, 0.3556157946586609, 0.3549864590167999, 0.35100412368774414], "val_accuracy": [0.5423333048820496, 0.6499999761581421, 0.6786666512489319, 0.7080000042915344, 0.7293333411216736, 0.7406666874885559, 0.7596666812896729, 0.7676666378974915, 0.7816666960716248, 0.7866666913032532, 0.8006666898727417, 0.8113333582878113, 0.8100000023841858, 0.8173333406448364, 0.8263333439826965, 0.8353333473205566, 0.8346666693687439, 0.8326666951179504, 0.8376666903495789, 0.8373333215713501, 0.8476666808128357, 0.846666693687439, 0.8500000238418579, 0.8476666808128357, 0.8493333458900452, 0.8533333539962769, 0.8519999980926514, 0.8533333539962769, 0.8553333282470703, 0.8556666374206543, 0.8510000109672546, 0.859333336353302, 0.859666645526886, 0.862666666507721, 0.8633333444595337, 0.8603333234786987, 0.8673333525657654, 0.8643333315849304, 0.8659999966621399, 0.8653333187103271, 0.8656666874885559, 0.871999979019165, 0.8679999709129333, 0.8713333606719971, 0.8643333315849304, 0.8679999709129333, 0.8690000176429749]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 2, 1, 4, 9, 6, 6, 3, 1, 3, 6, 9, 5], [0, 4, 3, 4, 2, 5, 3, 1], [0, 29, 40], [0, 0, 1, 0, 0, 1, 1], [0, 7, 8, 4], [0, 4, 2], [0], [0, 1], [0], [1], [0]], "fitness": -0.8497142791748047, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.subtract(tf.math.multiply(grad, beta), grad), grad)), tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.pow(grad, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2924981117248535, 2.1889054775238037, 1.7636288404464722, 1.3357523679733276, 1.0772335529327393, 0.9203889966011047, 0.8539519309997559, 0.8211878538131714, 0.7833942770957947, 0.7556334137916565, 0.7031595706939697, 0.688150942325592, 0.6442472338676453, 0.6155511140823364, 0.6059939861297607, 0.6012988686561584, 0.5804246068000793, 0.5568139553070068, 0.5479432344436646, 0.5274509191513062, 0.5437597632408142, 0.5108381509780884, 0.493322491645813, 0.5068832635879517, 0.4814940392971039, 0.4737893044948578, 0.4705352485179901, 0.4640454351902008, 0.4494808316230774, 0.44312021136283875, 0.4373408257961273, 0.4307001829147339, 0.4198055565357208, 0.41458410024642944, 0.40256884694099426, 0.3990320563316345, 0.388100266456604], "accuracy": [0.1274600476026535, 0.3271694481372833, 0.4353454113006592, 0.5444459319114685, 0.6369040012359619, 0.6584334969520569, 0.6886804699897766, 0.6942279934883118, 0.7073041796684265, 0.7054550051689148, 0.7272487282752991, 0.7374191284179688, 0.7535332441329956, 0.7627789974212646, 0.765949010848999, 0.7670056819915771, 0.7707040309906006, 0.7907806038856506, 0.7857614755630493, 0.7942147850990295, 0.7887993454933167, 0.800818920135498, 0.8103289008140564, 0.8088759779930115, 0.8128384351730347, 0.8193105459213257, 0.8232730031013489, 0.8236692547798157, 0.824329674243927, 0.832650899887085, 0.828820526599884, 0.830669641494751, 0.8362171649932861, 0.8432175517082214, 0.8482366800308228, 0.8457271456718445, 0.8511425256729126], "val_loss": [2.245654582977295, 2.013115644454956, 1.1169689893722534, 0.8725473880767822, 0.7572590112686157, 0.7234679460525513, 0.663520097732544, 0.6507654786109924, 0.64596027135849, 0.6282661557197571, 0.5964802503585815, 0.5717982649803162, 0.5521351099014282, 0.5419031977653503, 0.5531861186027527, 0.5294464230537415, 0.5173543095588684, 0.5160348415374756, 0.5097039341926575, 0.49893876910209656, 0.49885523319244385, 0.49994921684265137, 0.5074649453163147, 0.49154743552207947, 0.4806327819824219, 0.47480309009552, 0.46960464119911194, 0.4664608836174011, 0.4636920094490051, 0.46160367131233215, 0.4439401924610138, 0.44346415996551514, 0.45542848110198975, 0.4586437940597534, 0.4547352194786072, 0.4536615014076233, 0.45681893825531006], "val_accuracy": [0.41866666078567505, 0.4163333475589752, 0.6496666669845581, 0.6880000233650208, 0.721666693687439, 0.7229999899864197, 0.7459999918937683, 0.7436666488647461, 0.7443333268165588, 0.7580000162124634, 0.7573333382606506, 0.7763333320617676, 0.7879999876022339, 0.7910000085830688, 0.7839999794960022, 0.796999990940094, 0.8116666674613953, 0.8080000281333923, 0.8059999942779541, 0.8159999847412109, 0.8166666626930237, 0.8193333148956299, 0.8180000185966492, 0.8256666660308838, 0.8270000219345093, 0.8266666531562805, 0.8386666774749756, 0.8386666774749756, 0.8360000252723694, 0.8346666693687439, 0.8420000076293945, 0.8450000286102295, 0.8416666388511658, 0.843666672706604, 0.8379999995231628, 0.8356666564941406, 0.8386666774749756]}, "mapping_values": [1, 10, 5, 5, 3, 21, 13, 8, 3, 7, 4, 3, 1, 2, 1, 1, 0], "tree_depth": 17}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0], [0, 9], [0], [0], [1], [0], [2], [0]], "fitness": -0.8265714049339294, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6228523254394531, 0.7893827557563782, 0.6820744872093201, 0.6213104724884033, 0.5801272988319397, 0.5558812618255615, 0.5224950313568115, 0.521643340587616, 0.47812241315841675, 0.4642255902290344, 0.4722886085510254, 0.4530944228172302, 0.45861706137657166, 0.4708385169506073, 0.4398709535598755, 0.46075257658958435, 0.5165748596191406, 0.5145009756088257, 0.5262761116027832, 0.5400713682174683], "accuracy": [0.46123364567756653, 0.7283053994178772, 0.7582882046699524, 0.7730814814567566, 0.7840443849563599, 0.7965922355651855, 0.8141592741012573, 0.81548011302948, 0.826310932636261, 0.8366134166717529, 0.8318583965301514, 0.8372738361358643, 0.8359529972076416, 0.8337075710296631, 0.843481719493866, 0.8428213000297546, 0.8396512866020203, 0.8281601071357727, 0.8251221776008606, 0.8296129703521729], "val_loss": [0.724624752998352, 0.5775119066238403, 0.5670803785324097, 0.49324193596839905, 0.49608999490737915, 0.4703804552555084, 0.5073962211608887, 0.451154500246048, 0.4569006860256195, 0.47557365894317627, 0.4679248034954071, 0.4915548861026764, 0.45846882462501526, 0.4693131446838379, 0.4831468462944031, 0.5433192253112793, 0.581154465675354, 0.5054552555084229, 0.4932420551776886, 0.5484545230865479], "val_accuracy": [0.7519999742507935, 0.7976666688919067, 0.79666668176651, 0.8109999895095825, 0.8190000057220459, 0.8343333601951599, 0.82833331823349, 0.8453333377838135, 0.8410000205039978, 0.8460000157356262, 0.8443333506584167, 0.8416666388511658, 0.8410000205039978, 0.8433333039283752, 0.8536666631698608, 0.8443333506584167, 0.8356666564941406, 0.8396666646003723, 0.8443333506584167, 0.8273333311080933]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 3, 1, 3, 9], [3, 0, 1, 2, 2], [61, 99, 10], [0, 0, 1, 1], [0, 1], [0, 5], [0], [0, 0, 0, 1], [0, 1, 9], [0], [0, 44], [0, 1], [0], [1], [0]], "fitness": -0.3337142765522003, "mapping_values": [1, 10, 6, 4, 2, 4, 2, 2, 1, 4, 3, 1, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.4478628635406494, 2.34951114654541, 2.164388656616211, 1.603496654963592e+21, 2.3217549324035645, 2.306480646133423, 2.3034932613372803], "accuracy": [0.2078985571861267, 0.2036719024181366, 0.20618148148059845, 0.12679962813854218, 0.09998679161071777, 0.09826971590518951, 0.09681680053472519], "val_loss": [2.300276517868042, 2.274108648300171, 2.1917388439178467, 2.338665246963501, 2.308837413787842, 2.3038697242736816, 2.3027353286743164], "val_accuracy": [0.19599999487400055, 0.33000001311302185, 0.3166666626930237, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 3], [0, 1, 0, 2, 2], [33, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 23, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 2, 1, 1, 1, 22, 12, 10, 6], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), sigma)), tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.sqrt(alpha))))), beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 1, 0, 0], [0, 1, 0, 2], [71, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5, 8, 0, 3, 1, 1, 7, 1, 5], [0, 2, 0, 3, 4, 4, 4, 0, 5], [16, 16, 22], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 8, 3, 6, 8, 1, 4, 1, 4, 5, 8, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 34, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 2, 23, 14, 9, 3, 2, 1, 1, 1, 20, 12, 8, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.subtract(grad, grad), grad), grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.square(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma))), tf.math.sqrt(tf.math.negative(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [3, 4, 1, 1, 3], [0, 0, 1, 2, 2], [39, 39, 56], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [1, 2, 3, 0, 3, 4], [3, 2, 0, 3], [0, 76], [0, 1], [0, 1, 9], [0], [58], [1, 1], [0], [1], [16, 99, 96, 99, 61, 1]], "fitness": -0.09142857044935226, "mapping_values": [1, 9, 4, 5, 2, 1, 0, 1, 0, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(grad, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3106560707092285, 2.3101351261138916, 2.310044288635254, 2.3100759983062744, 2.309763193130493, 2.3090100288391113], "accuracy": [0.09166556596755981, 0.09008057415485382, 0.09272222965955734, 0.0936468094587326, 0.09100515395402908, 0.08928807079792023], "val_loss": [2.3083336353302, 2.3083336353302, 2.3083336353302, 2.3083336353302, 2.3083336353302, 2.3083336353302], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]