[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8711428642272949, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221900701522827, 1.8602243661880493, 1.380008339881897, 1.0793615579605103, 0.9212409853935242, 0.8311089873313904, 0.7564216256141663, 0.7236023545265198, 0.6800339221954346, 0.6447904109954834, 0.630497932434082, 0.6022318005561829, 0.5909616351127625, 0.5593209862709045, 0.5620743632316589, 0.5419377684593201, 0.5316061973571777, 0.5230517983436584, 0.4994632601737976, 0.5030585527420044, 0.4841945469379425, 0.471134752035141, 0.46487534046173096, 0.44815781712532043, 0.456662118434906, 0.43679550290107727, 0.43672943115234375, 0.42783641815185547, 0.4208998382091522, 0.41199275851249695, 0.4085407555103302, 0.3956436216831207, 0.3976311981678009, 0.39245787262916565, 0.3794380724430084, 0.3793187141418457, 0.37824395298957825, 0.3673590123653412, 0.3600074350833893, 0.3543805778026581, 0.34727147221565247, 0.35401788353919983, 0.3315766453742981, 0.33927011489868164, 0.3289937674999237, 0.3222084045410156, 0.31814825534820557, 0.32320713996887207, 0.3137148916721344, 0.3103097975254059, 0.30851027369499207, 0.3053117096424103, 0.29611915349960327, 0.2956099808216095, 0.28865066170692444, 0.2813463807106018, 0.2813747227191925, 0.27638986706733704, 0.27158933877944946, 0.26597633957862854, 0.26867228746414185, 0.26684871315956116, 0.260684072971344, 0.24782176315784454, 0.25082266330718994, 0.24954363703727722, 0.24133709073066711, 0.235421285033226, 0.23302315175533295, 0.23203489184379578, 0.23137035965919495, 0.2306319624185562, 0.22089765965938568, 0.22463573515415192, 0.22070258855819702, 0.21564042568206787, 0.20842567086219788, 0.2091396301984787, 0.20473702251911163, 0.19921638071537018, 0.19485175609588623, 0.19930560886859894, 0.1916825771331787, 0.18718166649341583, 0.18217851221561432, 0.18171332776546478], "accuracy": [0.28160083293914795, 0.5066701769828796, 0.5608242154121399, 0.6262052655220032, 0.6745476126670837, 0.7020208835601807, 0.7281733155250549, 0.7343811988830566, 0.7497028112411499, 0.7675340175628662, 0.7765156626701355, 0.7773081660270691, 0.7885351777076721, 0.7968564033508301, 0.800290584564209, 0.8080834746360779, 0.8080834746360779, 0.8123101592063904, 0.8197067975997925, 0.819970965385437, 0.8269713521003723, 0.8335754871368408, 0.8309338092803955, 0.8424250483512878, 0.835160493850708, 0.8432175517082214, 0.8459912538528442, 0.8500858545303345, 0.8512746095657349, 0.8544445633888245, 0.8516708612442017, 0.8588033318519592, 0.857218325138092, 0.8609166741371155, 0.8648791313171387, 0.8673887252807617, 0.8664641380310059, 0.8673887252807617, 0.8705587387084961, 0.8757099509239197, 0.8739928603172302, 0.8710870146751404, 0.8761062026023865, 0.8751816153526306, 0.8791441321372986, 0.8845595121383667, 0.8865407705307007, 0.8857482671737671, 0.8878615498542786, 0.8879936337471008, 0.8907673954963684, 0.8902390599250793, 0.8919561505317688, 0.8927486538887024, 0.8945978283882141, 0.8997490406036377, 0.8992207050323486, 0.8992207050323486, 0.9006736278533936, 0.9019944667816162, 0.9050323367118835, 0.9039757251739502, 0.9030511379241943, 0.9128252267837524, 0.9111081957817078, 0.909259021282196, 0.9085986018180847, 0.9125610589981079, 0.9154669046401978, 0.9146744012832642, 0.9148064851760864, 0.913089394569397, 0.9199577569961548, 0.9173160791397095, 0.9181085824966431, 0.9208822846412659, 0.9232597947120667, 0.9232597947120667, 0.9243164658546448, 0.9273543953895569, 0.9292035102844238, 0.9253731369972229, 0.9298639297485352, 0.9294676780700684, 0.9346189498901367, 0.9326376914978027], "val_loss": [2.0390238761901855, 1.5044872760772705, 1.0317994356155396, 0.827222466468811, 0.738278865814209, 0.6821660399436951, 0.6397600173950195, 0.6025820970535278, 0.5849940776824951, 0.5585439205169678, 0.5410945415496826, 0.5244506597518921, 0.5120241045951843, 0.49756526947021484, 0.4862618148326874, 0.4844558835029602, 0.47375810146331787, 0.46241873502731323, 0.45442214608192444, 0.44877612590789795, 0.44129127264022827, 0.4328407347202301, 0.4270145297050476, 0.41972246766090393, 0.42035651206970215, 0.4137140214443207, 0.4071829915046692, 0.40891948342323303, 0.39710375666618347, 0.39381441473960876, 0.38924580812454224, 0.3867346942424774, 0.38675886392593384, 0.38188686966896057, 0.37978866696357727, 0.37534603476524353, 0.37322551012039185, 0.37755125761032104, 0.3716295063495636, 0.36510026454925537, 0.3648252487182617, 0.3616258502006531, 0.36415520310401917, 0.35648852586746216, 0.35644832253456116, 0.35105428099632263, 0.3529103100299835, 0.34930163621902466, 0.34706631302833557, 0.3503122627735138, 0.34885671734809875, 0.33994409441947937, 0.3439459204673767, 0.34932681918144226, 0.3445412516593933, 0.3364088237285614, 0.3360411524772644, 0.3406355679035187, 0.3341931402683258, 0.33273640275001526, 0.3372131288051605, 0.3340059816837311, 0.3340965509414673, 0.3321995139122009, 0.3301546275615692, 0.3354685604572296, 0.3332577645778656, 0.33469825983047485, 0.3309893310070038, 0.3326129615306854, 0.3318151831626892, 0.32750096917152405, 0.33094364404678345, 0.3372103273868561, 0.33008623123168945, 0.33376380801200867, 0.32902342081069946, 0.3290501832962036, 0.33258387446403503, 0.33246293663978577, 0.3270939290523529, 0.3281913995742798, 0.33336254954338074, 0.3320126235485077, 0.3318326473236084, 0.3360796570777893], "val_accuracy": [0.5586666464805603, 0.6629999876022339, 0.6746666431427002, 0.706333339214325, 0.7353333234786987, 0.7566666603088379, 0.7570000290870667, 0.7730000019073486, 0.777999997138977, 0.7826666831970215, 0.7863333225250244, 0.8013333082199097, 0.8076666593551636, 0.8140000104904175, 0.8163333535194397, 0.8140000104904175, 0.8193333148956299, 0.8316666483879089, 0.828000009059906, 0.8336666822433472, 0.8366666436195374, 0.8403333425521851, 0.8403333425521851, 0.8433333039283752, 0.8416666388511658, 0.8450000286102295, 0.8446666598320007, 0.8500000238418579, 0.8536666631698608, 0.8523333072662354, 0.8543333411216736, 0.859000027179718, 0.859333336353302, 0.859333336353302, 0.8606666922569275, 0.862666666507721, 0.8610000014305115, 0.8579999804496765, 0.8663333058357239, 0.8663333058357239, 0.8653333187103271, 0.8693333268165588, 0.8640000224113464, 0.8703333139419556, 0.8686666488647461, 0.8706666827201843, 0.8730000257492065, 0.874666690826416, 0.871666669845581, 0.8696666955947876, 0.8733333349227905, 0.8740000128746033, 0.875333309173584, 0.8686666488647461, 0.8766666650772095, 0.875, 0.8806666731834412, 0.878333330154419, 0.8790000081062317, 0.8759999871253967, 0.8809999823570251, 0.8806666731834412, 0.8803333044052124, 0.878333330154419, 0.8820000290870667, 0.8806666731834412, 0.8799999952316284, 0.8853333592414856, 0.8849999904632568, 0.8816666603088379, 0.8823333382606506, 0.8880000114440918, 0.8883333206176758, 0.8813333511352539, 0.8863333463668823, 0.8813333511352539, 0.8886666893959045, 0.8886666893959045, 0.8853333592414856, 0.887333333492279, 0.8896666765213013, 0.8893333077430725, 0.8886666893959045, 0.8853333592414856, 0.8856666684150696, 0.8859999775886536]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0], [0, 9], [0], [0], [0, 0, 1, 1], [0, 7], [0, 4], [0], [0, 1], [0], [1], [0]], "fitness": -0.8545714020729065, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292604684829712, 2.191042423248291, 1.7687159776687622, 1.352628469467163, 1.095961570739746, 0.9446018934249878, 0.8598446249961853, 0.8337186574935913, 0.7796841859817505, 0.7596929669380188, 0.7093377709388733, 0.6938055157661438, 0.6676727533340454, 0.6371307969093323, 0.6236235499382019, 0.6131658554077148, 0.5933221578598022, 0.5737435221672058, 0.5736747980117798, 0.5546930432319641, 0.5559589862823486, 0.5405347347259521, 0.5313344597816467, 0.5181968808174133, 0.5129377245903015, 0.500353217124939, 0.48673102259635925, 0.48344025015830994, 0.472444623708725, 0.4620303809642792, 0.4631844758987427, 0.45772528648376465, 0.44117310643196106, 0.43577080965042114, 0.4222985804080963, 0.41449880599975586, 0.4009881019592285, 0.3936361074447632, 0.39603081345558167, 0.3869505524635315, 0.38034725189208984, 0.37625083327293396, 0.3798990845680237, 0.3625441789627075, 0.357138067483902, 0.3613642454147339, 0.35815346240997314, 0.34017401933670044, 0.35465505719184875, 0.3505890369415283, 0.33661559224128723, 0.3253723978996277, 0.3244543969631195, 0.33354756236076355, 0.3074989914894104, 0.30383625626564026, 0.31110936403274536, 0.3019447922706604, 0.2977065145969391, 0.2894982695579529], "accuracy": [0.13221503794193268, 0.32399946451187134, 0.44208163022994995, 0.5420684218406677, 0.6268656849861145, 0.6571126580238342, 0.695813000202179, 0.6936996579170227, 0.7063795924186707, 0.7137762308120728, 0.7289658188819885, 0.7374191284179688, 0.7432307600975037, 0.7503632307052612, 0.7663452625274658, 0.7684586048126221, 0.778761088848114, 0.7800818681716919, 0.7866860628128052, 0.789459764957428, 0.7902522683143616, 0.7930260300636292, 0.8000264167785645, 0.802800178527832, 0.8067626357078552, 0.8092722296714783, 0.8169330358505249, 0.8168009519577026, 0.8255184292793274, 0.8289526104927063, 0.829216718673706, 0.8248580098152161, 0.8364813327789307, 0.8400475382804871, 0.839519202709198, 0.8404437899589539, 0.8457271456718445, 0.8525954484939575, 0.8549728989601135, 0.8540483713150024, 0.8533879518508911, 0.8564258217811584, 0.8564258217811584, 0.8590674996376038, 0.8581429123878479, 0.8642187118530273, 0.8619733452796936, 0.8692378997802734, 0.8598600029945374, 0.8634262084960938, 0.8685774803161621, 0.8745211958885193, 0.8734645247459412, 0.8701624870300293, 0.8794082403182983, 0.8782195448875427, 0.8726720213890076, 0.8845595121383667, 0.8902390599250793, 0.8845595121383667], "val_loss": [2.2457072734832764, 2.016554117202759, 1.1285320520401, 0.8517267107963562, 0.7686371803283691, 0.7015284895896912, 0.6414917707443237, 0.6362475156784058, 0.6439388990402222, 0.5955973863601685, 0.5515440106391907, 0.5339921712875366, 0.5284299850463867, 0.5214095711708069, 0.5058593153953552, 0.48380550742149353, 0.4694384038448334, 0.4682193100452423, 0.4726284146308899, 0.45876652002334595, 0.4643010199069977, 0.4592618942260742, 0.4546128213405609, 0.45141470432281494, 0.4408408999443054, 0.43573135137557983, 0.427745521068573, 0.4152577221393585, 0.416447252035141, 0.4182356894016266, 0.41439148783683777, 0.4090227782726288, 0.40721750259399414, 0.4027256369590759, 0.39961573481559753, 0.39613890647888184, 0.3861943483352661, 0.3939156234264374, 0.39664238691329956, 0.37839990854263306, 0.38060706853866577, 0.39065292477607727, 0.38628095388412476, 0.38144180178642273, 0.39738306403160095, 0.3986402153968811, 0.3931134343147278, 0.40744271874427795, 0.3788226842880249, 0.3778151869773865, 0.4018060266971588, 0.397011935710907, 0.3945077657699585, 0.38986504077911377, 0.3872285485267639, 0.4017162322998047, 0.4019855856895447, 0.4119715988636017, 0.40710586309432983, 0.4120354950428009], "val_accuracy": [0.4099999964237213, 0.48366665840148926, 0.6576666831970215, 0.6903333067893982, 0.7203333377838135, 0.737666666507721, 0.746666669845581, 0.7630000114440918, 0.7486666440963745, 0.7829999923706055, 0.7799999713897705, 0.7886666655540466, 0.8029999732971191, 0.800000011920929, 0.8086666464805603, 0.8183333277702332, 0.8209999799728394, 0.824999988079071, 0.8140000104904175, 0.82833331823349, 0.8286666870117188, 0.8306666612625122, 0.8413333296775818, 0.8353333473205566, 0.8370000123977661, 0.8453333377838135, 0.8426666855812073, 0.8503333330154419, 0.8476666808128357, 0.8536666631698608, 0.8519999980926514, 0.8586666584014893, 0.8600000143051147, 0.8560000061988831, 0.8650000095367432, 0.8576666712760925, 0.8629999756813049, 0.8643333315849304, 0.8659999966621399, 0.8709999918937683, 0.8693333268165588, 0.8659999966621399, 0.874666690826416, 0.8740000128746033, 0.8709999918937683, 0.8759999871253967, 0.8773333430290222, 0.8686666488647461, 0.8709999918937683, 0.875333309173584, 0.8763333559036255, 0.8799999952316284, 0.8690000176429749, 0.8733333349227905, 0.8823333382606506, 0.8740000128746033, 0.874666690826416, 0.8786666393280029, 0.8713333606719971, 0.8696666955947876]}, "mapping_values": [1, 10, 5, 5, 3, 2, 2, 0, 1, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8254285454750061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6651312112808228, 0.8724305033683777, 0.7063493132591248, 0.6111087799072266, 0.5667991638183594, 0.5402052998542786, 0.5262474417686462, 0.48575013875961304, 0.511509895324707, 0.4890635311603546, 0.4703085720539093, 0.46451205015182495, 0.46497735381126404, 0.47498711943626404], "accuracy": [0.4649319648742676, 0.7013604640960693, 0.752740740776062, 0.7700436115264893, 0.7872143983840942, 0.8063663840293884, 0.804649293422699, 0.8219521641731262, 0.817461371421814, 0.819970965385437, 0.8318583965301514, 0.8358209133148193, 0.8338396549224854, 0.8249900937080383], "val_loss": [0.8339695930480957, 0.6316710710525513, 0.5320634245872498, 0.5126978754997253, 0.4968285858631134, 0.5065603852272034, 0.4808349609375, 0.5195635557174683, 0.5119230151176453, 0.5031046271324158, 0.5103808045387268, 0.529320240020752, 0.5005742311477661, 0.6395931839942932], "val_accuracy": [0.699999988079071, 0.7746666669845581, 0.8143333196640015, 0.8026666641235352, 0.8236666917800903, 0.8199999928474426, 0.8270000219345093, 0.8246666789054871, 0.8403333425521851, 0.8303333520889282, 0.8273333311080933, 0.8396666646003723, 0.8263333439826965, 0.8206666707992554]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 8, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 3, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [77], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [6, 3, 3, 6, 8, 1, 6, 1, 4, 2, 0], [0, 0, 0, 3, 0, 0, 3, 1, 4, 1], [0, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 4, 1], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [2, 9, 3, 0, 3, 6, 4, 4, 3, 0, 7, 9, 1, 4, 5], [0, 2, 0, 3, 3, 0, 5, 5, 4], [16, 16, 44, 79, 30], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 3, 2, 5, 3, 9], [0, 0, 3, 3, 4, 0, 3, 3, 2, 0, 5, 5], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 24, 15, 9, 5, 2, 1, 1, 1, 28, 16, 12, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(beta, tf.math.pow(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad))), tf.math.multiply(tf.math.negative(tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.math.pow(grad, tf.math.square(grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(sigma, tf.math.pow(sigma, tf.math.add(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), sigma))), tf.math.sqrt(tf.math.multiply(sigma, beta)))), tf.math.add(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3], [0, 0, 1, 0, 2], [39, 56], [0, 0, 1, 1], [0, 4], [0, 0], [60, 16], [0, 0, 1, 1], [0, 7], [0, 3], [99], [1, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [5, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 4, 2, 2, 2, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.950439453125, 2.305511236190796, 2.3032708168029785, 2.3028740882873535, 2.303126335144043, 2.3031389713287354], "accuracy": [0.17461365461349487, 0.09787346422672272, 0.09826971590518951, 0.09906221181154251, 0.09576013684272766, 0.09430722147226334], "val_loss": [2.3069159984588623, 2.3033487796783447, 2.302760362625122, 2.302574634552002, 2.302680253982544, 2.3027069568634033], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10066666454076767, 0.10000000149011612, 0.1003333330154419, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0], [1, 2, 3, 0, 3, 5, 0, 9], [0, 2, 0, 3], [16, 16, 34], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 8, 1, 4, 2, 1], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 12, 8, 4, 3, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.negative(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3034231662750244, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]