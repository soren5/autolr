[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223330497741699, 1.8670156002044678, 1.3935511112213135, 1.1012579202651978, 0.9477801322937012, 0.8379126191139221, 0.7764281630516052, 0.7235901951789856, 0.6839449405670166, 0.6511124968528748, 0.6340097188949585, 0.6069210171699524, 0.5817078948020935, 0.5635776519775391, 0.5524153113365173, 0.5367791652679443, 0.5212588906288147, 0.5178380608558655, 0.5019086003303528, 0.4879888892173767, 0.4858485460281372, 0.4747111201286316, 0.45951735973358154, 0.4532293975353241, 0.4492609202861786, 0.4330301284790039, 0.4310648441314697, 0.42051371932029724, 0.41327017545700073, 0.4060419201850891, 0.3997148871421814, 0.39729252457618713, 0.3869434893131256, 0.3869549036026001, 0.38186177611351013, 0.3692651391029358, 0.36346086859703064, 0.3634459972381592, 0.3600703179836273, 0.3489670753479004, 0.3429599404335022, 0.34309908747673035, 0.3401198089122772, 0.3303268253803253, 0.3301240801811218, 0.3276282846927643, 0.3180643618106842, 0.3136589229106903, 0.3090694546699524, 0.3071834146976471, 0.3011736273765564, 0.30332496762275696, 0.29351481795310974, 0.2937680780887604], "accuracy": [0.26680755615234375, 0.49451854825019836, 0.5679566860198975, 0.6209219098091125, 0.6646413803100586, 0.7078325152397156, 0.7234182953834534, 0.7387399077415466, 0.7541936039924622, 0.7672698497772217, 0.7677981853485107, 0.7820631265640259, 0.7897239327430725, 0.7977809906005859, 0.798309326171875, 0.8082155585289001, 0.8138951063156128, 0.8094043135643005, 0.822348415851593, 0.8269713521003723, 0.8208954930305481, 0.8310658931732178, 0.8350284099578857, 0.8367455005645752, 0.8368775844573975, 0.8444063067436218, 0.843481719493866, 0.850350022315979, 0.8502179384231567, 0.8570862412452698, 0.857218325138092, 0.8574824929237366, 0.8610487580299377, 0.8610487580299377, 0.8607845902442932, 0.8658037185668945, 0.8701624870300293, 0.8689737319946289, 0.8708229064941406, 0.8792761564254761, 0.8798044919967651, 0.8765024542808533, 0.8765024542808533, 0.8824461698532104, 0.880729079246521, 0.8844274282455444, 0.8838990926742554, 0.8887861371040344, 0.8878615498542786, 0.8903711438179016, 0.8924844861030579, 0.8912957310676575, 0.8976356983184814, 0.8960506916046143], "val_loss": [2.040694236755371, 1.5166728496551514, 1.045767068862915, 0.8421168327331543, 0.7569165229797363, 0.7011509537696838, 0.6573318839073181, 0.6179470419883728, 0.5908101201057434, 0.5737177133560181, 0.5541383624076843, 0.5365487933158875, 0.518412172794342, 0.5104728937149048, 0.49868762493133545, 0.485697478055954, 0.48461878299713135, 0.46694132685661316, 0.459992378950119, 0.44818419218063354, 0.45110249519348145, 0.4507465958595276, 0.4339507520198822, 0.4287099242210388, 0.42590731382369995, 0.4119842052459717, 0.4104468524456024, 0.4069807529449463, 0.40372517704963684, 0.3985708951950073, 0.3967111110687256, 0.39305025339126587, 0.39346253871917725, 0.3906964063644409, 0.3815464675426483, 0.3792845904827118, 0.37928369641304016, 0.3762374818325043, 0.37582898139953613, 0.37387406826019287, 0.3717586398124695, 0.36671704053878784, 0.363382488489151, 0.36401286721229553, 0.3619881868362427, 0.35666540265083313, 0.3588123917579651, 0.3541429042816162, 0.35232576727867126, 0.35342442989349365, 0.3524846136569977, 0.34847813844680786, 0.34814298152923584, 0.35015836358070374], "val_accuracy": [0.5323333144187927, 0.6446666717529297, 0.6756666898727417, 0.7043333053588867, 0.7239999771118164, 0.7493333220481873, 0.753000020980835, 0.7706666588783264, 0.7820000052452087, 0.7873333096504211, 0.7956666946411133, 0.800000011920929, 0.8136666417121887, 0.812666654586792, 0.8199999928474426, 0.824999988079071, 0.8246666789054871, 0.8326666951179504, 0.8303333520889282, 0.8376666903495789, 0.8333333134651184, 0.8343333601951599, 0.8446666598320007, 0.843666672706604, 0.846666693687439, 0.8513333201408386, 0.8546666502952576, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8529999852180481, 0.859333336353302, 0.8546666502952576, 0.8569999933242798, 0.8606666922569275, 0.8633333444595337, 0.8643333315849304, 0.8629999756813049, 0.8576666712760925, 0.8703333139419556, 0.8640000224113464, 0.8643333315849304, 0.8676666617393494, 0.8663333058357239, 0.8713333606719971, 0.871999979019165, 0.8693333268165588, 0.8693333268165588, 0.878000020980835, 0.8756666779518127, 0.8706666827201843, 0.8756666779518127, 0.8769999742507935, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8742856979370117, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2250373363494873, 1.8760950565338135, 1.3959107398986816, 1.0921156406402588, 0.9372438192367554, 0.8370489478111267, 0.7755206227302551, 0.723310649394989, 0.6915373206138611, 0.6699429154396057, 0.6409175395965576, 0.6208922863006592, 0.6089023947715759, 0.5947810411453247, 0.5732561349868774, 0.5508012175559998, 0.5314949750900269, 0.5342832207679749, 0.5165290832519531, 0.5053065419197083, 0.4974904954433441, 0.48518168926239014, 0.47886183857917786, 0.4645358622074127, 0.4595017433166504, 0.4534972608089447, 0.4487195909023285, 0.43536895513534546, 0.4255647361278534, 0.41849204897880554, 0.4138890206813812, 0.4160267412662506, 0.41176140308380127, 0.39429548382759094, 0.38975492119789124, 0.38952043652534485, 0.3780268430709839, 0.37135347723960876, 0.37384939193725586, 0.3707677721977234, 0.3614084720611572, 0.35270148515701294, 0.34804561734199524, 0.35174989700317383, 0.34194421768188477], "accuracy": [0.2705058753490448, 0.4842160940170288, 0.5629374980926514, 0.6209219098091125, 0.6641130447387695, 0.7036058902740479, 0.719852089881897, 0.739928662776947, 0.7512878179550171, 0.7569673657417297, 0.7683265209197998, 0.77677983045578, 0.77677983045578, 0.7815347909927368, 0.7981772422790527, 0.8000264167785645, 0.8074230551719666, 0.8037247657775879, 0.8153480291366577, 0.8208954930305481, 0.8203672170639038, 0.8298771381378174, 0.8286884427070618, 0.8342359066009521, 0.837537944316864, 0.8354246616363525, 0.8401796221733093, 0.8426892161369324, 0.8474441766738892, 0.8506141901016235, 0.8521991968154907, 0.8529917001724243, 0.8558974862098694, 0.8650112152099609, 0.8634262084960938, 0.8658037185668945, 0.8626337051391602, 0.8706908226013184, 0.8636903762817383, 0.8714832663536072, 0.8732003569602966, 0.8704266548156738, 0.8742570281028748, 0.8768987059593201, 0.884691596031189], "val_loss": [2.042252779006958, 1.5139734745025635, 1.0340496301651, 0.8261843919754028, 0.7327023148536682, 0.6774103045463562, 0.6304046511650085, 0.6012420058250427, 0.5706852674484253, 0.5509836673736572, 0.5335269570350647, 0.5183542370796204, 0.511130154132843, 0.4900790750980377, 0.4751119315624237, 0.4654462933540344, 0.45302802324295044, 0.4493720829486847, 0.4413915276527405, 0.42969220876693726, 0.4224047064781189, 0.41420650482177734, 0.41096532344818115, 0.4065556228160858, 0.3999498188495636, 0.39717963337898254, 0.38930898904800415, 0.38831591606140137, 0.38316991925239563, 0.3772919178009033, 0.37641385197639465, 0.3736099302768707, 0.3714290261268616, 0.36283889412879944, 0.35564085841178894, 0.3557867705821991, 0.35539957880973816, 0.35253995656967163, 0.34722524881362915, 0.34389469027519226, 0.3450460135936737, 0.34302663803100586, 0.3399546444416046, 0.336764395236969, 0.33755162358283997], "val_accuracy": [0.5483333468437195, 0.6606666445732117, 0.684333324432373, 0.7043333053588867, 0.7383333444595337, 0.746666669845581, 0.762666642665863, 0.7756666541099548, 0.777999997138977, 0.7979999780654907, 0.8016666769981384, 0.7976666688919067, 0.8090000152587891, 0.8169999718666077, 0.8259999752044678, 0.8273333311080933, 0.8330000042915344, 0.8320000171661377, 0.8363333344459534, 0.8476666808128357, 0.8496666550636292, 0.8503333330154419, 0.8513333201408386, 0.8556666374206543, 0.8586666584014893, 0.8606666922569275, 0.8613333106040955, 0.8619999885559082, 0.8659999966621399, 0.8643333315849304, 0.8650000095367432, 0.8686666488647461, 0.8640000224113464, 0.8713333606719971, 0.8709999918937683, 0.8736666440963745, 0.8766666650772095, 0.8726666569709778, 0.878000020980835, 0.8796666860580444, 0.8773333430290222, 0.8766666650772095, 0.878333330154419, 0.8776666522026062, 0.8776666522026062]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8248571157455444, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4810900688171387, 0.7841472029685974, 0.6729854941368103, 0.6049948334693909, 0.5606431365013123, 0.5515846014022827, 0.5345021486282349, 0.5132330656051636, 0.5079128742218018, 0.47560256719589233, 0.47249168157577515, 0.4888554513454437], "accuracy": [0.49729230999946594, 0.7302865982055664, 0.7621186375617981, 0.77677983045578, 0.7901201844215393, 0.7968564033508301, 0.7998943328857422, 0.8125742673873901, 0.8131026029586792, 0.8253863453865051, 0.8245938420295715, 0.826310932636261], "val_loss": [0.8230107426643372, 0.5902135968208313, 0.5580206513404846, 0.4963754117488861, 0.5063233375549316, 0.4939737915992737, 0.45863083004951477, 0.457206130027771, 0.4606500267982483, 0.4536488950252533, 0.4761224389076233, 0.46971532702445984], "val_accuracy": [0.7250000238418579, 0.7829999923706055, 0.8016666769981384, 0.8199999928474426, 0.8166666626930237, 0.8130000233650208, 0.8473333120346069, 0.8429999947547913, 0.8403333425521851, 0.8326666951179504, 0.8423333168029785, 0.8423333168029785]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8045714497566223, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292313814163208, 2.1877694129943848, 1.7690999507904053, 1.3305572271347046, 1.0551787614822388, 0.9081205725669861, 0.8297882080078125, 0.807283878326416, 0.7633576989173889, 0.74443119764328, 0.71282559633255, 0.6793245077133179, 0.6523801684379578, 0.6411747932434082, 0.6027883887290955, 0.6072674989700317, 0.5874983072280884, 0.5737243294715881, 0.5559365749359131, 0.5405425429344177, 0.5288731455802917, 0.5230218172073364, 0.5223624110221863, 0.5005645751953125, 0.4873608946800232, 0.48500266671180725, 0.47887784242630005, 0.463766485452652, 0.4609944522380829, 0.46613937616348267, 0.4464612603187561, 0.43495726585388184, 0.4243553578853607, 0.43286627531051636, 0.4237556755542755, 0.40541964769363403, 0.4042036235332489, 0.39234209060668945, 0.3969876170158386, 0.3952542841434479, 0.3850102722644806, 0.37721967697143555, 0.3762017786502838, 0.3700264096260071, 0.3593422472476959, 0.3483555316925049, 0.3517862856388092, 0.3474405109882355], "accuracy": [0.13115836679935455, 0.33086779713630676, 0.4451195299625397, 0.5489367246627808, 0.6409985423088074, 0.6749438643455505, 0.700171709060669, 0.7025492191314697, 0.7029454708099365, 0.7091533541679382, 0.7363624572753906, 0.7310791015625, 0.7567031979560852, 0.7605336308479309, 0.7692511081695557, 0.7707040309906006, 0.776251494884491, 0.7812706232070923, 0.7954035401344299, 0.7942147850990295, 0.7898560166358948, 0.8053097128868103, 0.8033285140991211, 0.8101968169212341, 0.819970965385437, 0.816008448600769, 0.8182538747787476, 0.8244617581367493, 0.8247259259223938, 0.8230088353157043, 0.8272355198860168, 0.8317263126373291, 0.8436138033866882, 0.834632158279419, 0.8421608805656433, 0.8445383906364441, 0.8450667262077332, 0.8473120927810669, 0.8457271456718445, 0.8535200357437134, 0.8525954484939575, 0.8545766472816467, 0.8508783578872681, 0.8595958352088928, 0.86118084192276, 0.8617091774940491, 0.8614450097084045, 0.8594637513160706], "val_loss": [2.2452220916748047, 2.0146522521972656, 1.1257917881011963, 0.8638955354690552, 0.7651412487030029, 0.6882622241973877, 0.6850221157073975, 0.6478971242904663, 0.63326096534729, 0.610793948173523, 0.5694267749786377, 0.5481483340263367, 0.5384461879730225, 0.5409883856773376, 0.5301374793052673, 0.5172775387763977, 0.5059065222740173, 0.49271121621131897, 0.4843865633010864, 0.4792267382144928, 0.4809274971485138, 0.4759485125541687, 0.4609987735748291, 0.46188056468963623, 0.46387720108032227, 0.46138080954551697, 0.4517937898635864, 0.4466173052787781, 0.4406909942626953, 0.43074971437454224, 0.42899248003959656, 0.42631250619888306, 0.42854398488998413, 0.41880694031715393, 0.4147096872329712, 0.4220952093601227, 0.41761523485183716, 0.40611469745635986, 0.40743449330329895, 0.4221116900444031, 0.4069882929325104, 0.3979056775569916, 0.39862605929374695, 0.41078317165374756, 0.39987972378730774, 0.40717318654060364, 0.4102596044540405, 0.4077836573123932], "val_accuracy": [0.4246666729450226, 0.531000018119812, 0.656333327293396, 0.7016666531562805, 0.7210000157356262, 0.7416666746139526, 0.737333357334137, 0.7673333287239075, 0.7639999985694885, 0.7746666669845581, 0.7820000052452087, 0.796999990940094, 0.7906666398048401, 0.8033333420753479, 0.8053333163261414, 0.8056666851043701, 0.8180000185966492, 0.8203333616256714, 0.8213333487510681, 0.8286666870117188, 0.82833331823349, 0.828000009059906, 0.8346666693687439, 0.8336666822433472, 0.8320000171661377, 0.8326666951179504, 0.8373333215713501, 0.8420000076293945, 0.8423333168029785, 0.8416666388511658, 0.8493333458900452, 0.8519999980926514, 0.8473333120346069, 0.8519999980926514, 0.8546666502952576, 0.8576666712760925, 0.8566666841506958, 0.856333315372467, 0.862333357334137, 0.8610000014305115, 0.856333315372467, 0.859666645526886, 0.8653333187103271, 0.8629999756813049, 0.8640000224113464, 0.8636666536331177, 0.8633333444595337, 0.8533333539962769]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [5, 2, 3, 0, 0], [1, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 2, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 6, 0, 1, 4, 1, 4, 2, 3], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 68, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 1, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.3122811317443848, 2.3222553730010986, 2.354008197784424, 2.44649600982666, 2343.8544921875, 2.585502147347411e+30, 2.3071980476379395, 2.3077735900878906, 2.308540105819702], "accuracy": [0.08915598690509796, 0.07832518965005875, 0.07013604789972305, 0.07079645991325378, 0.0956280529499054, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3145761489868164, 2.3378231525421143, 2.3908021450042725, 2.5988974571228027, 153281773568.0, 2.3064470291137695, 2.3069403171539307, 2.307579755783081, 2.308464288711548], "val_accuracy": [0.08933333307504654, 0.09033333510160446, 0.09399999678134918, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 5, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 0, 3, 6, 8, 1, 6, 5, 5, 2, 2, 1, 5, 4, 5, 8, 6], [0, 0, 0, 1, 0, 0, 3, 1, 0, 0, 7], [16, 99, 96, 99, 61, 68, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 10, 6, 4, 2, 2, 1, 1, 1, 28, 17, 11, 7], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), tf.math.square(alpha)))), tf.math.sqrt(tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0948355570435524, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [1, 93], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5, 8], [0, 2, 0, 3, 0], [16, 16, 51], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 0, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 96, 81, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 12, 7, 5, 3, 2, 1, 1, 1, 13, 7, 6, 5], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), tf.math.sqrt(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303679943084717, 2.302584648132324, 2.302584409713745, 2.302584648132324, 2.302584648132324, 2.302584409713745], "accuracy": [0.10487385839223862, 0.11028926074504852, 0.10447761416435242, 0.10698718577623367, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025851249694824, 2.3025853633880615, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 1], [0, 2, 0, 3, 2], [16, 16], [0, 0, 0, 1, 1], [0, 0, 4], [0, 2], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 9], [0, 0, 0, 4, 4, 0, 3, 1, 2, 0], [16, 15, 96, 99, 61, 1]], "fitness": -0.09457142651081085, "mapping_values": [1, 6, 3, 3, 1, 12, 7, 5, 2, 5, 3, 2, 1, 21, 12, 9, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, grad)), tf.math.pow(tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), tf.math.add(tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), alpha)), beta)))", "other_info": {"loss": [2.3102800846099854, 2.3087236881256104, 2.3099722862243652, 2.310333251953125, 2.3098838329315186, 2.3109323978424072], "accuracy": [0.08994849026203156, 0.09298639744520187, 0.08691058307886124, 0.09126931428909302, 0.09721305221319199, 0.09034473448991776], "val_loss": [2.3082995414733887, 2.3082995414733887, 2.3082995414733887, 2.3082995414733887, 2.3082995414733887, 2.3082995414733887], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]