[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2238242626190186, 1.8702408075332642, 1.3989253044128418, 1.0938103199005127, 0.9440132975578308, 0.843924880027771, 0.7770308256149292, 0.7348120808601379, 0.6891900300979614, 0.6686111092567444, 0.6465572118759155, 0.6186468601226807, 0.59220290184021, 0.5814334154129028, 0.5669078230857849, 0.5489019155502319, 0.5301827788352966, 0.5177485942840576, 0.5101649165153503, 0.5117051601409912, 0.4893052577972412, 0.48222053050994873, 0.4678787291049957, 0.4636562168598175, 0.45587465167045593, 0.44814491271972656, 0.43622511625289917, 0.4354732930660248, 0.4265357553958893, 0.4142124354839325, 0.40815725922584534, 0.40005847811698914, 0.4003210663795471, 0.39108172059059143, 0.38397613167762756, 0.3733125925064087, 0.3779296278953552, 0.36518383026123047, 0.3614937663078308, 0.35672062635421753, 0.3492109775543213, 0.3464018404483795, 0.339365154504776, 0.3396804630756378, 0.3307111859321594, 0.3236643671989441, 0.31257879734039307, 0.321456640958786, 0.3110101521015167, 0.31273698806762695, 0.3105744421482086, 0.29919567704200745, 0.29805487394332886, 0.2930542230606079, 0.2938970923423767, 0.28714412450790405, 0.27642741799354553, 0.2792717218399048, 0.27095139026641846], "accuracy": [0.2674679756164551, 0.4842160940170288, 0.5562012791633606, 0.6153744459152222, 0.6609430909156799, 0.6980583667755127, 0.7190595865249634, 0.7337207794189453, 0.748778223991394, 0.7569673657417297, 0.7651565074920654, 0.7724210619926453, 0.7843085527420044, 0.7864218950271606, 0.7895918488502502, 0.7981772422790527, 0.8043851256370544, 0.8068947196006775, 0.8137630224227905, 0.8169330358505249, 0.8247259259223938, 0.8222163319587708, 0.8313300609588623, 0.8313300609588623, 0.8359529972076416, 0.8407079577445984, 0.843481719493866, 0.845859169960022, 0.8451988101005554, 0.8507462739944458, 0.8564258217811584, 0.8552370667457581, 0.856689989566803, 0.8610487580299377, 0.8625016212463379, 0.868049144744873, 0.8625016212463379, 0.8684453964233398, 0.8697662353515625, 0.8705587387084961, 0.8745211958885193, 0.8692378997802734, 0.8753136992454529, 0.8790120482444763, 0.8804649114608765, 0.8819178342819214, 0.8879936337471008, 0.8854840993881226, 0.8858803510665894, 0.8870691061019897, 0.884691596031189, 0.8912957310676575, 0.891559898853302, 0.8919561505317688, 0.8942015767097473, 0.8982961177825928, 0.8972394466400146, 0.8985602855682373, 0.9022586345672607], "val_loss": [2.0391974449157715, 1.5139026641845703, 1.0389410257339478, 0.833385169506073, 0.7425699830055237, 0.6892187595367432, 0.6448782086372375, 0.6089656352996826, 0.5808338522911072, 0.5622445344924927, 0.5464872121810913, 0.5286971926689148, 0.5147833824157715, 0.4997008442878723, 0.4904420077800751, 0.4809882342815399, 0.4727213978767395, 0.4639192223548889, 0.45640018582344055, 0.4523184895515442, 0.44721314311027527, 0.4373686611652374, 0.43181267380714417, 0.4304860830307007, 0.4228566884994507, 0.4188160002231598, 0.41898444294929504, 0.4127434194087982, 0.4063724875450134, 0.4022892117500305, 0.4021618664264679, 0.400217741727829, 0.39576902985572815, 0.38946452736854553, 0.38671496510505676, 0.3825148940086365, 0.3844337463378906, 0.38124749064445496, 0.3744789659976959, 0.37623274326324463, 0.37700000405311584, 0.3697681427001953, 0.3748103380203247, 0.36868640780448914, 0.3667578101158142, 0.3650318682193756, 0.3685290217399597, 0.3615975081920624, 0.3626455068588257, 0.3592783510684967, 0.3611542284488678, 0.36187154054641724, 0.35318341851234436, 0.35676851868629456, 0.3524584174156189, 0.35657671093940735, 0.35240715742111206, 0.34654515981674194, 0.3482426404953003], "val_accuracy": [0.5376666784286499, 0.656000018119812, 0.6850000023841858, 0.7146666646003723, 0.7383333444595337, 0.7543333172798157, 0.765999972820282, 0.7773333191871643, 0.7889999747276306, 0.7926666736602783, 0.7963333129882812, 0.8029999732971191, 0.8086666464805603, 0.8209999799728394, 0.824999988079071, 0.82833331823349, 0.8306666612625122, 0.8336666822433472, 0.8379999995231628, 0.8443333506584167, 0.843666672706604, 0.8416666388511658, 0.8476666808128357, 0.8476666808128357, 0.846666693687439, 0.8483333587646484, 0.8503333330154419, 0.856333315372467, 0.8576666712760925, 0.8619999885559082, 0.8586666584014893, 0.8613333106040955, 0.859333336353302, 0.862333357334137, 0.8650000095367432, 0.8650000095367432, 0.8633333444595337, 0.8683333396911621, 0.8663333058357239, 0.8686666488647461, 0.8679999709129333, 0.8696666955947876, 0.8686666488647461, 0.871666669845581, 0.8740000128746033, 0.8726666569709778, 0.8709999918937683, 0.8736666440963745, 0.875333309173584, 0.8740000128746033, 0.8769999742507935, 0.8736666440963745, 0.875, 0.8823333382606506, 0.8769999742507935, 0.8786666393280029, 0.8726666569709778, 0.8786666393280029, 0.8809999823570251]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8537142872810364, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2219831943511963, 1.8618419170379639, 1.3859890699386597, 1.0837839841842651, 0.9364770650863647, 0.8267369866371155, 0.7583147883415222, 0.71695476770401, 0.6800240874290466, 0.6458263993263245, 0.6285755634307861, 0.6042308807373047, 0.5863966941833496, 0.5733879208564758, 0.5549741387367249, 0.5295099020004272, 0.5217710137367249, 0.5126352906227112, 0.5017973780632019, 0.49734416604042053, 0.4846084415912628, 0.4720846116542816, 0.46448010206222534, 0.45414650440216064, 0.45125553011894226, 0.44834181666374207, 0.42691758275032043, 0.4260599911212921, 0.4197896122932434, 0.4105827808380127, 0.4049789607524872, 0.38964709639549255, 0.3936941921710968, 0.38911688327789307, 0.3780445158481598, 0.3780752122402191, 0.3733810782432556, 0.3668373227119446, 0.3610808253288269, 0.35784777998924255, 0.3499748706817627, 0.3475123941898346, 0.34209612011909485, 0.33358234167099, 0.34090179204940796, 0.32110974192619324, 0.31912505626678467, 0.3218277096748352, 0.31948328018188477, 0.31484100222587585, 0.3104989230632782, 0.3013639450073242, 0.29490023851394653, 0.295116126537323, 0.2836013734340668, 0.2890804708003998, 0.2750580608844757, 0.28086376190185547], "accuracy": [0.27618545293807983, 0.4920089840888977, 0.5749570727348328, 0.6264694333076477, 0.6667547225952148, 0.7053229212760925, 0.7284374833106995, 0.7375511527061462, 0.7483819723129272, 0.7671377658843994, 0.7711002230644226, 0.7795535326004028, 0.7915731072425842, 0.7972526550292969, 0.7988376617431641, 0.8100647330284119, 0.8138951063156128, 0.813498854637146, 0.8187822103500366, 0.8219521641731262, 0.8227446675300598, 0.8276317715644836, 0.8366134166717529, 0.8356888294219971, 0.843481719493866, 0.8407079577445984, 0.8453308939933777, 0.8486329317092896, 0.8507462739944458, 0.8506141901016235, 0.8561616539955139, 0.857218325138092, 0.8590674996376038, 0.8585391640663147, 0.8656716346740723, 0.8656716346740723, 0.8665962219238281, 0.8683133125305176, 0.8717474341392517, 0.876370370388031, 0.8766345381736755, 0.8734645247459412, 0.8794082403182983, 0.8786157965660095, 0.8750495314598083, 0.885219931602478, 0.8813894987106323, 0.887201189994812, 0.8860124349594116, 0.8869370222091675, 0.8860124349594116, 0.8906353116035461, 0.8942015767097473, 0.893541157245636, 0.8992207050323486, 0.8949940800666809, 0.9029190540313721, 0.901862382888794], "val_loss": [2.0364809036254883, 1.510961890220642, 1.043208122253418, 0.8322532773017883, 0.7419898509979248, 0.6841640472412109, 0.6408923268318176, 0.6049755215644836, 0.5785403847694397, 0.5544236898422241, 0.539094865322113, 0.5261564254760742, 0.5093910098075867, 0.49854639172554016, 0.48534536361694336, 0.477627158164978, 0.4693269431591034, 0.4588513970375061, 0.4563674032688141, 0.450781911611557, 0.4383964538574219, 0.43356746435165405, 0.433033287525177, 0.42889508605003357, 0.41819316148757935, 0.4100337028503418, 0.4146547019481659, 0.40579959750175476, 0.4030286371707916, 0.39502978324890137, 0.39110067486763, 0.38923224806785583, 0.38850894570350647, 0.3800751566886902, 0.3873305320739746, 0.3801892101764679, 0.3731366693973541, 0.37601909041404724, 0.3685832619667053, 0.3759171962738037, 0.36466920375823975, 0.3659718334674835, 0.3658536672592163, 0.36536771059036255, 0.35850465297698975, 0.3551594316959381, 0.35499218106269836, 0.3523391783237457, 0.3494298458099365, 0.3577392101287842, 0.35064932703971863, 0.34504368901252747, 0.34282976388931274, 0.3472411632537842, 0.3475721478462219, 0.3465366065502167, 0.34514331817626953, 0.34196874499320984], "val_accuracy": [0.5166666507720947, 0.6543333530426025, 0.6909999847412109, 0.715666651725769, 0.7369999885559082, 0.750333309173584, 0.7720000147819519, 0.7786666750907898, 0.7950000166893005, 0.8046666383743286, 0.8130000233650208, 0.8149999976158142, 0.8253333568572998, 0.8326666951179504, 0.8373333215713501, 0.8286666870117188, 0.8396666646003723, 0.846666693687439, 0.8446666598320007, 0.8519999980926514, 0.8543333411216736, 0.8536666631698608, 0.8503333330154419, 0.8556666374206543, 0.859000027179718, 0.8610000014305115, 0.8586666584014893, 0.862333357334137, 0.8613333106040955, 0.8666666746139526, 0.8683333396911621, 0.8683333396911621, 0.8666666746139526, 0.8730000257492065, 0.8659999966621399, 0.8706666827201843, 0.8709999918937683, 0.8659999966621399, 0.8736666440963745, 0.8713333606719971, 0.8766666650772095, 0.8723333477973938, 0.8713333606719971, 0.8733333349227905, 0.8793333172798157, 0.8763333559036255, 0.878000020980835, 0.8823333382606506, 0.8826666474342346, 0.8803333044052124, 0.875333309173584, 0.8790000081062317, 0.8843333125114441, 0.8806666731834412, 0.8796666860580444, 0.8820000290870667, 0.8816666603088379, 0.8813333511352539]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 0], [0], [0], [0, 0, 1, 1], [0, 1], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8442857265472412, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2934491634368896, 2.18957257270813, 1.7701797485351562, 1.3694450855255127, 1.0736000537872314, 0.9150396585464478, 0.8443669676780701, 0.7915269136428833, 0.7694950699806213, 0.7410397529602051, 0.7101543545722961, 0.6735570430755615, 0.6402813196182251, 0.6260347962379456, 0.6054232120513916, 0.5782593488693237, 0.5775783658027649, 0.5565557479858398, 0.5506855845451355, 0.5504918098449707, 0.5331311225891113, 0.5145321488380432, 0.5057404041290283, 0.4914597272872925, 0.48757287859916687, 0.473737508058548, 0.4625767469406128, 0.451567143201828, 0.44504982233047485, 0.4418104290962219, 0.427460253238678, 0.416693776845932, 0.42267605662345886, 0.4129931926727295, 0.3965524137020111, 0.3862801790237427, 0.3849252164363861, 0.3753040134906769, 0.3736307621002197, 0.36837238073349, 0.35852810740470886, 0.35640376806259155, 0.3444376587867737, 0.34772661328315735, 0.34563860297203064, 0.33609524369239807, 0.3262064754962921, 0.3253701627254486, 0.3318287134170532, 0.3245770335197449, 0.32075235247612, 0.31630319356918335, 0.31568557024002075, 0.3065597712993622, 0.2915055453777313, 0.2938748598098755], "accuracy": [0.1274600476026535, 0.32241448760032654, 0.4415532946586609, 0.5379738211631775, 0.6336019039154053, 0.6647734642028809, 0.6876237988471985, 0.7088891863822937, 0.7037379741668701, 0.7193237543106079, 0.7310791015625, 0.7425703406333923, 0.7573636174201965, 0.7593448758125305, 0.76542067527771, 0.7765156626701355, 0.774270236492157, 0.7841764688491821, 0.7872143983840942, 0.7913089394569397, 0.7979130744934082, 0.8025360107421875, 0.802800178527832, 0.8128384351730347, 0.8189142942428589, 0.8215559124946594, 0.8240655064582825, 0.8286884427070618, 0.8347642421722412, 0.8335754871368408, 0.8370096683502197, 0.8360850811004639, 0.8416325449943542, 0.8413683772087097, 0.852859616279602, 0.8511425256729126, 0.8561616539955139, 0.8515387773513794, 0.859199583530426, 0.858671247959137, 0.8599920868873596, 0.8601241707801819, 0.8668603897094727, 0.8627657890319824, 0.8555012345314026, 0.8684453964233398, 0.8702945709228516, 0.8688416481018066, 0.8658037185668945, 0.871879518032074, 0.8732003569602966, 0.8751816153526306, 0.872407853603363, 0.8792761564254761, 0.8850878477096558, 0.8857482671737671], "val_loss": [2.2459216117858887, 2.019383192062378, 1.124409556388855, 0.8479654788970947, 0.7582610845565796, 0.7049103379249573, 0.6713700294494629, 0.6471804976463318, 0.6282164454460144, 0.6134487390518188, 0.5681415796279907, 0.5466806888580322, 0.5306546092033386, 0.5187113881111145, 0.5037804245948792, 0.5003529191017151, 0.48292452096939087, 0.4778610169887543, 0.4764024317264557, 0.4793415665626526, 0.46442487835884094, 0.45534607768058777, 0.44597193598747253, 0.444648802280426, 0.4457622170448303, 0.44032543897628784, 0.42883092164993286, 0.4190211594104767, 0.41585856676101685, 0.4060576856136322, 0.4024304151535034, 0.4026467800140381, 0.4059080481529236, 0.39976879954338074, 0.3896876573562622, 0.3870106339454651, 0.377664715051651, 0.3849439322948456, 0.38205569982528687, 0.3889881670475006, 0.37368252873420715, 0.3718578815460205, 0.3818639814853668, 0.3848193287849426, 0.3790951371192932, 0.38072672486305237, 0.3804818391799927, 0.3858640193939209, 0.3800719678401947, 0.3841952681541443, 0.3762117922306061, 0.3749891221523285, 0.38327738642692566, 0.39263010025024414, 0.3813665509223938, 0.384321928024292], "val_accuracy": [0.4143333435058594, 0.47699999809265137, 0.6443333625793457, 0.6933333277702332, 0.7246666550636292, 0.7303333282470703, 0.7396666407585144, 0.7540000081062317, 0.7639999985694885, 0.7590000033378601, 0.7683333158493042, 0.7823333144187927, 0.7893333435058594, 0.800000011920929, 0.8053333163261414, 0.8016666769981384, 0.8153333067893982, 0.8289999961853027, 0.824999988079071, 0.82833331823349, 0.8363333344459534, 0.8373333215713501, 0.8370000123977661, 0.8399999737739563, 0.8460000157356262, 0.8403333425521851, 0.8483333587646484, 0.8533333539962769, 0.8579999804496765, 0.862333357334137, 0.8586666584014893, 0.8616666793823242, 0.8643333315849304, 0.8646666407585144, 0.8663333058357239, 0.8636666536331177, 0.8653333187103271, 0.8633333444595337, 0.8686666488647461, 0.8619999885559082, 0.8693333268165588, 0.871999979019165, 0.8763333559036255, 0.8763333559036255, 0.8763333559036255, 0.875333309173584, 0.8803333044052124, 0.8776666522026062, 0.878000020980835, 0.8809999823570251, 0.8859999775886536, 0.8859999775886536, 0.8816666603088379, 0.8843333125114441, 0.8843333125114441, 0.8813333511352539]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8291428685188293, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5297884941101074, 0.8928756713867188, 0.7165805697441101, 0.6406223177909851, 0.594754695892334, 0.568345308303833, 0.5286608338356018, 0.5062533617019653, 0.48279187083244324, 0.5089647173881531, 0.49229493737220764, 0.4959579408168793, 0.5381280779838562, 0.5622430443763733, 0.543796181678772], "accuracy": [0.48646149039268494, 0.7036058902740479, 0.7481178045272827, 0.7569673657417297, 0.7823272943496704, 0.791969358921051, 0.8068947196006775, 0.8165367841720581, 0.8227446675300598, 0.8150838613510132, 0.8274996876716614, 0.8228767514228821, 0.8264430165290833, 0.806630551815033, 0.8146876096725464], "val_loss": [0.8085403442382812, 0.6480605602264404, 0.580739438533783, 0.5223706960678101, 0.4950829744338989, 0.5053473114967346, 0.5094401836395264, 0.49121251702308655, 0.518301784992218, 0.4886569678783417, 0.4908055067062378, 0.48416635394096375, 0.5706474781036377, 0.5576266050338745, 0.5761945843696594], "val_accuracy": [0.7223333120346069, 0.7586666941642761, 0.7749999761581421, 0.8146666884422302, 0.8146666884422302, 0.8133333325386047, 0.8209999799728394, 0.8223333358764648, 0.8213333487510681, 0.8349999785423279, 0.8293333053588867, 0.8343333601951599, 0.8289999961853027, 0.8180000185966492, 0.8339999914169312]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 3, 0, 2], [39, 39, 59], [1, 1, 0, 0, 1, 0, 1, 1, 1], [1, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0, 0], [0], [0], [0, 1], [0], [1], [16, 99, 96, 99, 61, 1]], "fitness": -0.13371428847312927, "mapping_values": [1, 10, 5, 5, 3, 1, 0, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.4434127807617188, 623884.125, NaN, NaN, NaN, NaN], "accuracy": [0.22401267290115356, 0.10527011007070541, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.086604595184326, 4.419157134357299e+19, NaN, NaN, NaN, NaN], "val_accuracy": [0.13300000131130219, 0.09966666996479034, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 3, 6, 3, 8], [0, 1, 0, 2, 3], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [2, 2, 0, 2], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 4, 0], [16, 99, 96, 22, 17, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 6, 3, 3, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 4, 9], [0, 3, 0, 3], [16, 16, 18], [0, 1], [0, 0], [4], [30], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 2, 2, 2, 2, 4, 2, 8, 0, 0, 7, 0, 2, 3, 1, 7, 2, 3], [4, 0, 0, 3, 0, 0, 3, 1, 4, 0, 2, 5, 3, 1, 2, 3, 4, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 9, 6, 3, 3, 2, 1, 1, 0, 39, 21, 18, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(sigma, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma))), tf.math.sqrt(tf.math.negative(alpha))), grad)), tf.math.negative(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta)))), tf.math.add(tf.math.multiply(grad, tf.math.subtract(sigma, alpha)), tf.math.add(tf.math.add(tf.math.multiply(beta, sigma), grad), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 1, 3, 5], [2, 1, 0, 2, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 7], [0, 4, 3, 3, 5], [16, 72], [0, 1], [0, 3], [0, 7], [0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 7, 0, 7, 0, 7, 7, 8], [2, 1, 4, 7, 4], [0]], "fitness": -0.09485714137554169, "mapping_values": [1, 4, 2, 2, 0, 11, 6, 5, 1, 2, 1, 1, 1, 8, 5, 3, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(grad, tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(beta), tf.math.add(tf.math.negative(alpha), grad)))", "other_info": {"loss": [6403043.5, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16510368883609772, 0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.3957877399662126e+26, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10866666585206985, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}]