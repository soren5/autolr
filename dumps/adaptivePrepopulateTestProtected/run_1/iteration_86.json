[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8682857155799866, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223895311355591, 1.8735743761062622, 1.4012253284454346, 1.0948843955993652, 0.9410139322280884, 0.8406234979629517, 0.776501476764679, 0.7262030839920044, 0.6886265277862549, 0.6542136669158936, 0.6399052143096924, 0.6016775965690613, 0.5980598330497742, 0.5800246000289917, 0.5534980893135071, 0.547107994556427, 0.5331868529319763, 0.514386773109436, 0.5142486095428467, 0.49938106536865234, 0.4953325688838959, 0.4776908755302429, 0.4658634066581726, 0.4593011736869812, 0.4607009291648865, 0.4515842795372009, 0.44002825021743774, 0.4257771670818329, 0.42547842860221863, 0.41691291332244873, 0.4078778922557831, 0.40313607454299927, 0.3971240818500519, 0.38703447580337524, 0.38487035036087036, 0.38205599784851074, 0.3752232789993286, 0.37657007575035095, 0.3702252507209778, 0.35872262716293335, 0.3510757088661194, 0.353047639131546, 0.3402445912361145, 0.3459680676460266, 0.33985793590545654, 0.3309885263442993, 0.32449203729629517, 0.3223661780357361, 0.3129795789718628, 0.31587231159210205, 0.30417710542678833, 0.2943267524242401, 0.2940766513347626, 0.2946104109287262, 0.287441611289978, 0.28223034739494324, 0.28034666180610657, 0.2752898335456848, 0.27442389726638794], "accuracy": [0.26178839802742004, 0.4776119291782379, 0.5580504536628723, 0.6135252714157104, 0.6695284843444824, 0.6946242451667786, 0.7161537408828735, 0.7329282760620117, 0.7465327978134155, 0.7633073329925537, 0.7663452625274658, 0.7815347909927368, 0.7807422876358032, 0.7906485199928284, 0.8004226684570312, 0.8030643463134766, 0.8038568496704102, 0.8125742673873901, 0.8156121969223022, 0.817461371421814, 0.8228767514228821, 0.8293488025665283, 0.8335754871368408, 0.8362171649932861, 0.835160493850708, 0.8424250483512878, 0.8411042094230652, 0.8485008478164673, 0.8455950617790222, 0.8510104417800903, 0.8536521196365356, 0.8569541573524475, 0.8578787446022034, 0.8593316674232483, 0.863558292388916, 0.8681812286376953, 0.86553955078125, 0.8689737319946289, 0.8671245574951172, 0.871879518032074, 0.8708229064941406, 0.8726720213890076, 0.8778232932090759, 0.8725399374961853, 0.8767666220664978, 0.8837670087814331, 0.8856161832809448, 0.8798044919967651, 0.8873332738876343, 0.8877294659614563, 0.8885219693183899, 0.8948619961738586, 0.8963148593902588, 0.8922203183174133, 0.8942015767097473, 0.8963148593902588, 0.8961827754974365, 0.9012019634246826, 0.9026548862457275], "val_loss": [2.0430550575256348, 1.519246220588684, 1.0428756475448608, 0.8338807225227356, 0.7489201426506042, 0.6915208101272583, 0.647205650806427, 0.6158372163772583, 0.5925228595733643, 0.5671585202217102, 0.5575152039527893, 0.5403789281845093, 0.5281953811645508, 0.5189589262008667, 0.5080249309539795, 0.4914754331111908, 0.4889287054538727, 0.47450029850006104, 0.4640292525291443, 0.4621492922306061, 0.45383936166763306, 0.45142924785614014, 0.443571001291275, 0.4405851364135742, 0.43668195605278015, 0.42747998237609863, 0.4220687747001648, 0.4136047065258026, 0.4159427583217621, 0.40933987498283386, 0.40389546751976013, 0.40176182985305786, 0.3978014290332794, 0.3963527977466583, 0.39366617798805237, 0.3892492651939392, 0.3852722644805908, 0.3845917582511902, 0.3877789378166199, 0.3779526650905609, 0.37371861934661865, 0.3801521062850952, 0.3830518424510956, 0.3709598481655121, 0.3704274892807007, 0.3655657172203064, 0.36409687995910645, 0.3676644265651703, 0.3659232556819916, 0.3617428243160248, 0.35929355025291443, 0.36024999618530273, 0.3566218614578247, 0.3555110692977905, 0.35197803378105164, 0.35752344131469727, 0.35533350706100464, 0.3544277250766754, 0.3524508476257324], "val_accuracy": [0.5180000066757202, 0.659333348274231, 0.6930000185966492, 0.718999981880188, 0.7319999933242798, 0.7419999837875366, 0.7580000162124634, 0.7633333206176758, 0.7703333497047424, 0.7883333563804626, 0.7919999957084656, 0.7900000214576721, 0.8043333292007446, 0.8116666674613953, 0.8136666417121887, 0.8220000267028809, 0.824999988079071, 0.8273333311080933, 0.8296666741371155, 0.831333339214325, 0.8330000042915344, 0.8303333520889282, 0.8393333554267883, 0.8433333039283752, 0.8413333296775818, 0.8456666469573975, 0.8496666550636292, 0.8519999980926514, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8506666421890259, 0.8566666841506958, 0.8550000190734863, 0.8603333234786987, 0.8606666922569275, 0.862333357334137, 0.859333336353302, 0.8573333621025085, 0.8643333315849304, 0.8656666874885559, 0.8636666536331177, 0.8643333315849304, 0.8663333058357239, 0.8669999837875366, 0.8666666746139526, 0.8676666617393494, 0.8650000095367432, 0.8706666827201843, 0.8673333525657654, 0.8726666569709778, 0.8713333606719971, 0.8713333606719971, 0.8733333349227905, 0.8730000257492065, 0.8713333606719971, 0.8696666955947876, 0.8676666617393494, 0.8730000257492065]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 7, 5, 8, 0, 7, 5, 7, 6, 6, 3, 8, 9, 1, 6, 9, 8, 0], [0, 4, 2, 0, 3, 3, 5], [0, 87, 80, 40], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 6, 1, 5, 2, 7, 9, 5, 9, 3, 8, 1, 7], [0, 4, 4, 1, 3, 0], [0, 51, 98, 48], [0, 1], [0], [1], [0]], "fitness": -0.852571427822113, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, beta), tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad), grad))), tf.math.sqrt(tf.math.negative(grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(grad), tf.math.add(tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.sqrt(grad), tf.math.subtract(tf.math.add(alpha, sigma), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2932276725769043, 2.188416004180908, 1.7761584520339966, 1.3557214736938477, 1.093273639678955, 0.9483655691146851, 0.8616372346878052, 0.8219981789588928, 0.7751263380050659, 0.7468636631965637, 0.7122511863708496, 0.6923995614051819, 0.6626972556114197, 0.6346238851547241, 0.6081658601760864, 0.6092954277992249, 0.5897576212882996, 0.5905109643936157, 0.5637876391410828, 0.5638571977615356, 0.5503242015838623, 0.5395772457122803, 0.520034670829773, 0.5105794668197632, 0.5138144493103027, 0.502091646194458, 0.4799931049346924, 0.48060372471809387, 0.47316524386405945, 0.46517640352249146, 0.4635048806667328, 0.4335399568080902, 0.4349975287914276, 0.4349202513694763, 0.4120982885360718, 0.4053787291049957, 0.40406548976898193, 0.3871251344680786, 0.3878953158855438, 0.3856534957885742, 0.37422457337379456, 0.35671302676200867], "accuracy": [0.12415797263383865, 0.33126401901245117, 0.43864747881889343, 0.531369686126709, 0.6281865239143372, 0.6507726907730103, 0.6892088055610657, 0.6975300312042236, 0.7043983340263367, 0.7124554514884949, 0.726192057132721, 0.7277770638465881, 0.7440232634544373, 0.757099449634552, 0.7619865536689758, 0.7677981853485107, 0.7751948237419128, 0.7732135653495789, 0.7862898111343384, 0.7854973077774048, 0.7814027070999146, 0.791969358921051, 0.7987055778503418, 0.8035926818847656, 0.8054417967796326, 0.8088759779930115, 0.8131026029586792, 0.8164047002792358, 0.8220842480659485, 0.8156121969223022, 0.8219521641731262, 0.8301413059234619, 0.8304054737091064, 0.8374059200286865, 0.8408400416374207, 0.8370096683502197, 0.8473120927810669, 0.8500858545303345, 0.8500858545303345, 0.8527275323867798, 0.8552370667457581, 0.860652506351471], "val_loss": [2.246507167816162, 2.0148653984069824, 1.1340833902359009, 0.8923517465591431, 0.7891174554824829, 0.7400162816047668, 0.7019378542900085, 0.6639286279678345, 0.6509226560592651, 0.6265773177146912, 0.6018251776695251, 0.5708979964256287, 0.5589701533317566, 0.5531522035598755, 0.5569106936454773, 0.5278501510620117, 0.523896336555481, 0.5092315077781677, 0.5130534768104553, 0.5124384164810181, 0.5036849975585938, 0.4915213882923126, 0.48913487792015076, 0.48981013894081116, 0.49821606278419495, 0.47811374068260193, 0.4784370958805084, 0.472429484128952, 0.46867406368255615, 0.48111945390701294, 0.4664810299873352, 0.457773894071579, 0.4574942886829376, 0.4440828859806061, 0.43641772866249084, 0.4378933608531952, 0.43382418155670166, 0.4218859076499939, 0.42691177129745483, 0.4235570430755615, 0.41858065128326416, 0.4135383367538452], "val_accuracy": [0.42266666889190674, 0.4690000116825104, 0.6380000114440918, 0.6956666707992554, 0.7053333520889282, 0.7173333168029785, 0.7319999933242798, 0.7526666522026062, 0.7593333125114441, 0.7586666941642761, 0.7609999775886536, 0.7743333578109741, 0.7816666960716248, 0.7879999876022339, 0.7836666703224182, 0.7950000166893005, 0.7990000247955322, 0.8040000200271606, 0.8056666851043701, 0.8013333082199097, 0.812333345413208, 0.8166666626930237, 0.8236666917800903, 0.8263333439826965, 0.8209999799728394, 0.8316666483879089, 0.8299999833106995, 0.8373333215713501, 0.8396666646003723, 0.8360000252723694, 0.8363333344459534, 0.8386666774749756, 0.8399999737739563, 0.8379999995231628, 0.8383333086967468, 0.8426666855812073, 0.8506666421890259, 0.8496666550636292, 0.843666672706604, 0.8456666469573975, 0.8479999899864197, 0.8500000238418579]}, "mapping_values": [1, 10, 5, 5, 3, 25, 18, 7, 4, 19, 13, 6, 4, 2, 1, 1, 0], "tree_depth": 26}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8274285793304443, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5714268684387207, 0.8720988631248474, 0.706831693649292, 0.630089521408081, 0.5845827460289001, 0.549066424369812, 0.5232828259468079, 0.5070388317108154, 0.5221055746078491, 0.5125532150268555, 0.5280894637107849, 0.5288053750991821, 0.5055945515632629, 0.48070308566093445, 0.49473339319229126, 0.4833289682865143, 0.517302393913269, 0.5356827974319458], "accuracy": [0.47351735830307007, 0.6913221478462219, 0.7430986762046814, 0.7614582180976868, 0.7800818681716919, 0.800290584564209, 0.8137630224227905, 0.8100647330284119, 0.8203672170639038, 0.8234050869941711, 0.8183859586715698, 0.8206313848495483, 0.8197067975997925, 0.8330471515655518, 0.8231409192085266, 0.8334434032440186, 0.834632158279419, 0.8245938420295715], "val_loss": [0.829932451248169, 0.6115819811820984, 0.5441047549247742, 0.4950743317604065, 0.4881930649280548, 0.4694889783859253, 0.4558959901332855, 0.456655889749527, 0.46173185110092163, 0.46806856989860535, 0.5011877417564392, 0.503633975982666, 0.4577868580818176, 0.4539768099784851, 0.48532038927078247, 0.4840283691883087, 0.5231766104698181, 0.5199074149131775], "val_accuracy": [0.7256666421890259, 0.7789999842643738, 0.7870000004768372, 0.8106666803359985, 0.8196666836738586, 0.8316666483879089, 0.8353333473205566, 0.8389999866485596, 0.8373333215713501, 0.8383333086967468, 0.8383333086967468, 0.8383333086967468, 0.8513333201408386, 0.8493333458900452, 0.8423333168029785, 0.8423333168029785, 0.8379999995231628, 0.8423333168029785]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 5, 3, 0, 3, 1, 9, 4], [0, 0, 0, 2], [39, 39, 63, 38], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 8, 4], [0, 2, 0, 3, 4], [16, 16], [0, 1, 1], [6], [0, 1], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [6, 4, 2, 6, 8, 1, 2, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 8, 4, 4, 12, 7, 5, 2, 3, 1, 2, 1, 14, 7, 7, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.sqrt(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [54.706298828125, 352.1350402832031, 1258.0711669921875, 3148.898193359375, 6105.42724609375, 10335.185546875], "accuracy": [0.09787346422672272, 0.1018359512090683, 0.09800554811954498, 0.1026284471154213, 0.10328886657953262, 0.09866596013307571], "val_loss": [60.71443176269531, 651.509765625, 2097.18310546875, 4612.71875, 8367.052734375, 13496.4453125], "val_accuracy": [0.10066666454076767, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 9, 4, 1, 4, 2, 8, 3, 7], [0, 0, 0, 2, 0, 0, 3, 1, 4, 0], [16, 99, 30, 99, 61, 1, 59]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 23, 13, 10, 7], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(beta, tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.math.multiply(tf.math.add(sigma, alpha), grad)))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 1, 1, 5], [0, 0, 2, 2, 2], [39, 39, 87], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9, 3, 0, 6, 3, 8, 2], [0, 2, 0, 3, 4, 3, 2], [16, 16], [0, 1], [0], [0, 5, 1, 6], [0], [1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 2, 2, 0, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303565502166748, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 9, 3, 9, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 6, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 7, 1], [0, 6, 0, 0], [49, 74, 73], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 0, 1, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 6, 3, 3, 2, 8, 4, 4, 3, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), grad), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(alpha, sigma))), alpha), tf.math.add(tf.math.sqrt(grad), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}]