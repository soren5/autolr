[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8645714521408081, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2281081676483154, 1.87716543674469, 1.4149938821792603, 1.1195578575134277, 0.9530678987503052, 0.8539429306983948, 0.7926144599914551, 0.7429251670837402, 0.7139579653739929, 0.6701937317848206, 0.6470732092857361, 0.6295831203460693, 0.6055376529693604, 0.5915229916572571, 0.5698085427284241, 0.5601955056190491, 0.550002932548523, 0.537520170211792, 0.5158711671829224, 0.5096639394760132, 0.49752166867256165, 0.4852806329727173, 0.48269975185394287, 0.47818484902381897, 0.47565358877182007, 0.4656539559364319, 0.4492945075035095, 0.445130854845047, 0.43168777227401733, 0.42419135570526123, 0.42145663499832153, 0.41160017251968384, 0.4063202738761902, 0.4021730124950409, 0.3944486379623413, 0.38402897119522095, 0.3891054391860962, 0.376956045627594, 0.37569889426231384, 0.363889217376709], "accuracy": [0.2514859437942505, 0.4897635579109192, 0.555408775806427, 0.6079778075218201, 0.6530181169509888, 0.6925109028816223, 0.7106062769889832, 0.7322678565979004, 0.7432307600975037, 0.7563069462776184, 0.7651565074920654, 0.7685906887054443, 0.778761088848114, 0.7862898111343384, 0.7951393723487854, 0.7985734939575195, 0.8034605979919434, 0.806630551815033, 0.8168009519577026, 0.8153480291366577, 0.821820080280304, 0.8276317715644836, 0.8260467648506165, 0.8278959393501282, 0.8309338092803955, 0.834632158279419, 0.8426892161369324, 0.8467837572097778, 0.8485008478164673, 0.8535200357437134, 0.8535200357437134, 0.8552370667457581, 0.8570862412452698, 0.856689989566803, 0.8603883385658264, 0.863558292388916, 0.8628978729248047, 0.8659358024597168, 0.8632941246032715, 0.8722757697105408], "val_loss": [2.047095537185669, 1.5292670726776123, 1.050493836402893, 0.8391104340553284, 0.7532675862312317, 0.6969581842422485, 0.6531607508659363, 0.6152817606925964, 0.5918976068496704, 0.5700687766075134, 0.5490769743919373, 0.5376091599464417, 0.5190137624740601, 0.5117514729499817, 0.49795255064964294, 0.4870826303958893, 0.4784063994884491, 0.4673178195953369, 0.45990967750549316, 0.44844356179237366, 0.4450923800468445, 0.4386879503726959, 0.43441423773765564, 0.4240303635597229, 0.428770512342453, 0.4178112745285034, 0.40804409980773926, 0.40841901302337646, 0.401076078414917, 0.4001927971839905, 0.39652350544929504, 0.3902725875377655, 0.3902861475944519, 0.3826168477535248, 0.3779011368751526, 0.3804921805858612, 0.38393059372901917, 0.3738894462585449, 0.3703753352165222, 0.36493706703186035], "val_accuracy": [0.5316666960716248, 0.6536666750907898, 0.6859999895095825, 0.7016666531562805, 0.7226666808128357, 0.7440000176429749, 0.7633333206176758, 0.7720000147819519, 0.781000018119812, 0.7929999828338623, 0.8006666898727417, 0.8046666383743286, 0.8149999976158142, 0.8206666707992554, 0.8216666579246521, 0.8286666870117188, 0.8306666612625122, 0.8330000042915344, 0.8366666436195374, 0.8423333168029785, 0.8443333506584167, 0.8456666469573975, 0.8456666469573975, 0.8479999899864197, 0.8443333506584167, 0.8586666584014893, 0.8579999804496765, 0.859333336353302, 0.8556666374206543, 0.8579999804496765, 0.8633333444595337, 0.8663333058357239, 0.8633333444595337, 0.8650000095367432, 0.871999979019165, 0.8656666874885559, 0.8610000014305115, 0.8676666617393494, 0.8679999709129333, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0], [0, 0, 9], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8502857089042664, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2920615673065186, 2.18709397315979, 1.74998140335083, 1.356102466583252, 1.0654176473617554, 0.9193407297134399, 0.8322588205337524, 0.8099480271339417, 0.7552745342254639, 0.7474414110183716, 0.7071303725242615, 0.6930001378059387, 0.6507238745689392, 0.6304274797439575, 0.6157605648040771, 0.5961682796478271, 0.5822449922561646, 0.5773081183433533, 0.5667760372161865, 0.5579543709754944, 0.534881055355072, 0.5351977944374084, 0.5127360224723816, 0.5091334581375122, 0.5006281733512878, 0.4912642240524292, 0.4741884768009186, 0.4675919711589813, 0.4457453787326813, 0.4440835416316986, 0.43260714411735535, 0.43345433473587036, 0.4163494408130646, 0.4189838469028473, 0.41757676005363464, 0.40770334005355835, 0.40542641282081604, 0.38888001441955566, 0.38393107056617737, 0.39415907859802246, 0.37534335255622864, 0.3624459207057953, 0.35813331604003906, 0.3567023277282715, 0.3510047197341919, 0.35060226917266846, 0.3371775150299072], "accuracy": [0.13578127324581146, 0.3222824037075043, 0.4364020526409149, 0.5488046407699585, 0.6395456194877625, 0.6691322326660156, 0.7013604640960693, 0.7040021419525146, 0.7106062769889832, 0.7168141603469849, 0.7277770638465881, 0.7338528633117676, 0.7470611333847046, 0.7586844563484192, 0.7621186375617981, 0.7714964747428894, 0.7820631265640259, 0.7790252566337585, 0.7874785661697388, 0.7922335267066956, 0.7956677079200745, 0.7950072884559631, 0.8057059645652771, 0.8016114234924316, 0.8127063512802124, 0.8145555257797241, 0.8181217908859253, 0.8267071843147278, 0.8305375576019287, 0.829216718673706, 0.8350284099578857, 0.8400475382804871, 0.8445383906364441, 0.8396512866020203, 0.8356888294219971, 0.844010055065155, 0.8449346423149109, 0.8521991968154907, 0.8491612672805786, 0.8482366800308228, 0.8555012345314026, 0.8607845902442932, 0.8580108284950256, 0.8602562546730042, 0.8613129258155823, 0.8646149635314941, 0.8681812286376953], "val_loss": [2.2456092834472656, 2.0098955631256104, 1.1313397884368896, 0.9116246700286865, 0.7809814214706421, 0.7279364466667175, 0.6863225698471069, 0.6542596817016602, 0.6555683016777039, 0.6242846846580505, 0.5846548080444336, 0.5570916533470154, 0.5465922355651855, 0.5346677303314209, 0.5182005167007446, 0.5159268379211426, 0.5049465894699097, 0.49789515137672424, 0.48968806862831116, 0.47291505336761475, 0.4690374732017517, 0.46432003378868103, 0.45642325282096863, 0.435314416885376, 0.4424945116043091, 0.4235738515853882, 0.4265645742416382, 0.4383048117160797, 0.4190991222858429, 0.4122700095176697, 0.4150925278663635, 0.4197213053703308, 0.40800678730010986, 0.4050738513469696, 0.4041021764278412, 0.40046271681785583, 0.39173591136932373, 0.3892037868499756, 0.40017563104629517, 0.3938289284706116, 0.3897968828678131, 0.37876221537590027, 0.3799290359020233, 0.3940475583076477, 0.4006786346435547, 0.3993851840496063, 0.3953324854373932], "val_accuracy": [0.40533334016799927, 0.4429999887943268, 0.637333333492279, 0.684333324432373, 0.7083333134651184, 0.7176666855812073, 0.7379999756813049, 0.7559999823570251, 0.731333315372467, 0.7360000014305115, 0.7590000033378601, 0.7710000276565552, 0.7763333320617676, 0.7863333225250244, 0.7913333177566528, 0.7919999957084656, 0.7983333468437195, 0.7993333339691162, 0.8029999732971191, 0.8203333616256714, 0.8143333196640015, 0.8213333487510681, 0.8209999799728394, 0.8376666903495789, 0.8323333263397217, 0.8383333086967468, 0.8339999914169312, 0.8336666822433472, 0.8399999737739563, 0.8379999995231628, 0.8366666436195374, 0.8360000252723694, 0.8453333377838135, 0.8503333330154419, 0.8446666598320007, 0.8443333506584167, 0.8546666502952576, 0.8529999852180481, 0.8519999980926514, 0.8566666841506958, 0.859000027179718, 0.8640000224113464, 0.8629999756813049, 0.8610000014305115, 0.859000027179718, 0.8550000190734863, 0.859333336353302]}, "mapping_values": [1, 10, 5, 5, 3, 3, 3, 0, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 1], [0, 5, 3, 9], [0], [0, 32], [1], [0], [2], [0]], "fitness": -0.8305714130401611, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5738896131515503, 0.9049201011657715, 0.6895734071731567, 0.633715808391571, 0.5789859294891357, 0.5478345155715942, 0.5058416128158569, 0.5005476474761963, 0.47043368220329285, 0.44923123717308044, 0.4478376805782318, 0.49059441685676575, 0.4852319061756134, 0.5120141506195068, 0.5231806039810181], "accuracy": [0.46585655212402344, 0.6869634389877319, 0.7493065595626831, 0.7640998363494873, 0.7911768555641174, 0.7901201844215393, 0.81548011302948, 0.819442629814148, 0.8219521641731262, 0.8396512866020203, 0.8413683772087097, 0.8345000743865967, 0.8347642421722412, 0.8255184292793274, 0.8330471515655518], "val_loss": [0.9381567239761353, 0.622995138168335, 0.567094087600708, 0.5447209477424622, 0.5115376114845276, 0.47465404868125916, 0.4713503122329712, 0.47057217359542847, 0.47228747606277466, 0.4587269723415375, 0.5058321952819824, 0.5217444896697998, 0.5276328325271606, 0.55562424659729, 0.5362558364868164], "val_accuracy": [0.6733333468437195, 0.7676666378974915, 0.7853333353996277, 0.8006666898727417, 0.8183333277702332, 0.831333339214325, 0.8339999914169312, 0.831333339214325, 0.843666672706604, 0.8473333120346069, 0.843999981880188, 0.8383333086967468, 0.8309999704360962, 0.8353333473205566, 0.8376666903495789]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 5, 4, 1, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [3, 2, 3, 0, 3, 5], [2, 2, 0, 3], [16, 16], [0, 1], [0], [2], [99], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 6, 1, 4, 1, 4, 2, 5], [0, 2, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 8, 4, 4, 1, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.add(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3034565448760986, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [2, 1, 0, 2], [39, 98], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 5, 3, 0, 3, 5], [0, 2, 3, 3], [11, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 7, 1], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0, 3, 7], [16, 99, 36, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 1, 2, 1, 1, 1, 2, 1, 1, 1, 25, 13, 12, 6], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(grad, tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), grad)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.add(alpha, beta))))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3], [0, 0, 0, 2], [39, 39, 90], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [9, 2, 3, 8, 3, 8], [0, 2, 0, 3], [16, 16], [1, 1], [3], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 3, 6, 6, 8, 1, 4, 1, 4, 1, 5, 4, 1, 4, 1, 2, 6], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0, 3, 7, 0, 0, 0, 4], [16, 99, 96, 20, 61, 27, 31, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 3, 1, 1, 0, 1, 1, 0, 1, 1, 33, 17, 16, 8], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), sigma), tf.math.square(tf.math.pow(alpha, beta)))))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.math.pow(tf.math.subtract(tf.math.add(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1026284471154213, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 3, 0, 3, 5], [3, 3, 0, 3], [16, 50], [0, 1], [0], [0], [99], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 6], [0, 0, 0, 3, 0, 0, 3, 1, 2, 3], [16, 99, 70, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 4, 2, 0, 2, 1, 1, 1, 22, 12, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(alpha, beta)), sigma))))", "other_info": {"loss": [58.27410888671875, 3327.440673828125, 48303.95703125, 329413.5625, 1541904.5, 5432648.0], "accuracy": [0.09813763201236725, 0.10474177449941635, 0.09893012791872025, 0.09906221181154251, 0.09694888442754745, 0.09919429570436478], "val_loss": [368.3252868652344, 11112.5693359375, 107276.4140625, 598694.4375, 2409732.5, 7768467.0], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]