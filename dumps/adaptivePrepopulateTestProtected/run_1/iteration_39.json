[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2238242626190186, 1.8702408075332642, 1.3989253044128418, 1.0938103199005127, 0.9440132975578308, 0.843924880027771, 0.7770308256149292, 0.7348120808601379, 0.6891900300979614, 0.6686111092567444, 0.6465572118759155, 0.6186468601226807, 0.59220290184021, 0.5814334154129028, 0.5669078230857849, 0.5489019155502319, 0.5301827788352966, 0.5177485942840576, 0.5101649165153503, 0.5117051601409912, 0.4893052577972412, 0.48222053050994873, 0.4678787291049957, 0.4636562168598175, 0.45587465167045593, 0.44814491271972656, 0.43622511625289917, 0.4354732930660248, 0.4265357553958893, 0.4142124354839325, 0.40815725922584534, 0.40005847811698914, 0.4003210663795471, 0.39108172059059143, 0.38397613167762756, 0.3733125925064087, 0.3779296278953552, 0.36518383026123047, 0.3614937663078308, 0.35672062635421753, 0.3492109775543213, 0.3464018404483795, 0.339365154504776, 0.3396804630756378, 0.3307111859321594, 0.3236643671989441, 0.31257879734039307, 0.321456640958786, 0.3110101521015167, 0.31273698806762695, 0.3105744421482086, 0.29919567704200745, 0.29805487394332886, 0.2930542230606079, 0.2938970923423767, 0.28714412450790405, 0.27642741799354553, 0.2792717218399048, 0.27095139026641846], "accuracy": [0.2674679756164551, 0.4842160940170288, 0.5562012791633606, 0.6153744459152222, 0.6609430909156799, 0.6980583667755127, 0.7190595865249634, 0.7337207794189453, 0.748778223991394, 0.7569673657417297, 0.7651565074920654, 0.7724210619926453, 0.7843085527420044, 0.7864218950271606, 0.7895918488502502, 0.7981772422790527, 0.8043851256370544, 0.8068947196006775, 0.8137630224227905, 0.8169330358505249, 0.8247259259223938, 0.8222163319587708, 0.8313300609588623, 0.8313300609588623, 0.8359529972076416, 0.8407079577445984, 0.843481719493866, 0.845859169960022, 0.8451988101005554, 0.8507462739944458, 0.8564258217811584, 0.8552370667457581, 0.856689989566803, 0.8610487580299377, 0.8625016212463379, 0.868049144744873, 0.8625016212463379, 0.8684453964233398, 0.8697662353515625, 0.8705587387084961, 0.8745211958885193, 0.8692378997802734, 0.8753136992454529, 0.8790120482444763, 0.8804649114608765, 0.8819178342819214, 0.8879936337471008, 0.8854840993881226, 0.8858803510665894, 0.8870691061019897, 0.884691596031189, 0.8912957310676575, 0.891559898853302, 0.8919561505317688, 0.8942015767097473, 0.8982961177825928, 0.8972394466400146, 0.8985602855682373, 0.9022586345672607], "val_loss": [2.0391974449157715, 1.5139026641845703, 1.0389410257339478, 0.833385169506073, 0.7425699830055237, 0.6892187595367432, 0.6448782086372375, 0.6089656352996826, 0.5808338522911072, 0.5622445344924927, 0.5464872121810913, 0.5286971926689148, 0.5147833824157715, 0.4997008442878723, 0.4904420077800751, 0.4809882342815399, 0.4727213978767395, 0.4639192223548889, 0.45640018582344055, 0.4523184895515442, 0.44721314311027527, 0.4373686611652374, 0.43181267380714417, 0.4304860830307007, 0.4228566884994507, 0.4188160002231598, 0.41898444294929504, 0.4127434194087982, 0.4063724875450134, 0.4022892117500305, 0.4021618664264679, 0.400217741727829, 0.39576902985572815, 0.38946452736854553, 0.38671496510505676, 0.3825148940086365, 0.3844337463378906, 0.38124749064445496, 0.3744789659976959, 0.37623274326324463, 0.37700000405311584, 0.3697681427001953, 0.3748103380203247, 0.36868640780448914, 0.3667578101158142, 0.3650318682193756, 0.3685290217399597, 0.3615975081920624, 0.3626455068588257, 0.3592783510684967, 0.3611542284488678, 0.36187154054641724, 0.35318341851234436, 0.35676851868629456, 0.3524584174156189, 0.35657671093940735, 0.35240715742111206, 0.34654515981674194, 0.3482426404953003], "val_accuracy": [0.5376666784286499, 0.656000018119812, 0.6850000023841858, 0.7146666646003723, 0.7383333444595337, 0.7543333172798157, 0.765999972820282, 0.7773333191871643, 0.7889999747276306, 0.7926666736602783, 0.7963333129882812, 0.8029999732971191, 0.8086666464805603, 0.8209999799728394, 0.824999988079071, 0.82833331823349, 0.8306666612625122, 0.8336666822433472, 0.8379999995231628, 0.8443333506584167, 0.843666672706604, 0.8416666388511658, 0.8476666808128357, 0.8476666808128357, 0.846666693687439, 0.8483333587646484, 0.8503333330154419, 0.856333315372467, 0.8576666712760925, 0.8619999885559082, 0.8586666584014893, 0.8613333106040955, 0.859333336353302, 0.862333357334137, 0.8650000095367432, 0.8650000095367432, 0.8633333444595337, 0.8683333396911621, 0.8663333058357239, 0.8686666488647461, 0.8679999709129333, 0.8696666955947876, 0.8686666488647461, 0.871666669845581, 0.8740000128746033, 0.8726666569709778, 0.8709999918937683, 0.8736666440963745, 0.875333309173584, 0.8740000128746033, 0.8769999742507935, 0.8736666440963745, 0.875, 0.8823333382606506, 0.8769999742507935, 0.8786666393280029, 0.8726666569709778, 0.8786666393280029, 0.8809999823570251]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8594285845756531, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2246623039245605, 1.8655071258544922, 1.3965333700180054, 1.0878949165344238, 0.9363220930099487, 0.8302210569381714, 0.7674537897109985, 0.7093241810798645, 0.6781227588653564, 0.6460816860198975, 0.6197469830513, 0.5948875546455383, 0.5776495337486267, 0.5633233785629272, 0.5351058840751648, 0.5323726534843445, 0.5260959267616272, 0.49995219707489014, 0.4929364323616028, 0.4901435971260071, 0.47438904643058777, 0.45922333002090454, 0.44619786739349365, 0.4448825418949127, 0.43191277980804443, 0.4279906153678894, 0.41860446333885193, 0.4208182990550995, 0.4093150198459625, 0.4034019410610199, 0.3962104022502899, 0.38842105865478516, 0.38560158014297485, 0.375984787940979, 0.3802044987678528, 0.36434584856033325, 0.3538000285625458, 0.3537997305393219, 0.3516576886177063, 0.3454427123069763, 0.33367347717285156, 0.33385905623435974, 0.3288488984107971, 0.32593023777008057, 0.32176870107650757, 0.31739452481269836, 0.3121607303619385, 0.3113536238670349, 0.30140426754951477, 0.29798969626426697], "accuracy": [0.2694492042064667, 0.49412229657173157, 0.5560691952705383, 0.6247523427009583, 0.6679434776306152, 0.7009642124176025, 0.7210407853126526, 0.7432307600975037, 0.7569673657417297, 0.7705719470977783, 0.7770439982414246, 0.7848368883132935, 0.7902522683143616, 0.7950072884559631, 0.8107251524925232, 0.804649293422699, 0.8133667707443237, 0.8190463781356812, 0.8228767514228821, 0.8214238286018372, 0.832650899887085, 0.8347642421722412, 0.842028796672821, 0.8422929644584656, 0.8475762605667114, 0.8473120927810669, 0.8498216867446899, 0.8491612672805786, 0.8496896028518677, 0.854708731174469, 0.86118084192276, 0.8602562546730042, 0.86553955078125, 0.8646149635314941, 0.8650112152099609, 0.8692378997802734, 0.8765024542808533, 0.8746532797813416, 0.8741249442100525, 0.8771628737449646, 0.8782195448875427, 0.8831065893173218, 0.883238673210144, 0.8821820020675659, 0.8833707571029663, 0.8856161832809448, 0.8907673954963684, 0.8877294659614563, 0.8942015767097473, 0.8936732411384583], "val_loss": [2.041018486022949, 1.5284169912338257, 1.0709232091903687, 0.8699213862419128, 0.7781134247779846, 0.7215074896812439, 0.6798906922340393, 0.6417081952095032, 0.6183429956436157, 0.5969805717468262, 0.5753208994865417, 0.559991180896759, 0.5426256656646729, 0.5290282368659973, 0.5175246000289917, 0.5090587735176086, 0.506921648979187, 0.4954929053783417, 0.48828938603401184, 0.4811229705810547, 0.4786529839038849, 0.46599170565605164, 0.46177342534065247, 0.45530965924263, 0.4531504213809967, 0.4447653293609619, 0.4511986970901489, 0.43429720401763916, 0.4413885772228241, 0.43261587619781494, 0.4339310824871063, 0.423488050699234, 0.4249347448348999, 0.41793209314346313, 0.4222223162651062, 0.4155679941177368, 0.41032201051712036, 0.4070456624031067, 0.40490779280662537, 0.4054170250892639, 0.40228649973869324, 0.40125712752342224, 0.4071188271045685, 0.3977927565574646, 0.39419156312942505, 0.3988276422023773, 0.39855363965034485, 0.39476239681243896, 0.39124804735183716, 0.3875233829021454], "val_accuracy": [0.5376666784286499, 0.6370000243186951, 0.6650000214576721, 0.6970000267028809, 0.718999981880188, 0.7369999885559082, 0.746666669845581, 0.7606666684150696, 0.7706666588783264, 0.7760000228881836, 0.793666660785675, 0.7963333129882812, 0.8043333292007446, 0.8069999814033508, 0.8133333325386047, 0.8199999928474426, 0.8106666803359985, 0.8223333358764648, 0.8266666531562805, 0.8259999752044678, 0.8289999961853027, 0.8363333344459534, 0.8339999914169312, 0.8376666903495789, 0.8416666388511658, 0.8416666388511658, 0.8410000205039978, 0.8453333377838135, 0.8413333296775818, 0.8476666808128357, 0.8493333458900452, 0.8519999980926514, 0.8510000109672546, 0.8556666374206543, 0.8460000157356262, 0.8556666374206543, 0.8550000190734863, 0.8543333411216736, 0.859333336353302, 0.8619999885559082, 0.8603333234786987, 0.8579999804496765, 0.8536666631698608, 0.8569999933242798, 0.8636666536331177, 0.8583333492279053, 0.859333336353302, 0.8606666922569275, 0.8606666922569275, 0.8629999756813049]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.838857114315033, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292581558227539, 2.186352491378784, 1.7622549533843994, 1.3566935062408447, 1.061984658241272, 0.918461799621582, 0.8244280219078064, 0.7975659966468811, 0.7634182572364807, 0.7401430606842041, 0.6897129416465759, 0.6749050617218018, 0.6471508741378784, 0.6302667856216431, 0.6004146337509155, 0.5994606614112854, 0.5774283409118652, 0.56643146276474, 0.5514524579048157, 0.533979058265686, 0.5245882868766785, 0.5182417631149292, 0.5109303593635559, 0.5034512281417847, 0.4908598065376282, 0.47657424211502075, 0.46001845598220825, 0.46129515767097473, 0.44716382026672363, 0.44983190298080444, 0.4297739565372467, 0.4400246739387512, 0.42236238718032837, 0.40862837433815, 0.4036182463169098, 0.3994161784648895, 0.38788771629333496, 0.38385000824928284, 0.36945614218711853, 0.36131855845451355, 0.3608478307723999, 0.3536888659000397, 0.3483876585960388, 0.3456336259841919, 0.34315788745880127, 0.3433346748352051, 0.31969812512397766, 0.33056506514549255], "accuracy": [0.1270637959241867, 0.3276977837085724, 0.4423457980155945, 0.5466912984848022, 0.6357152462005615, 0.652621865272522, 0.6988508701324463, 0.7014925479888916, 0.7012283802032471, 0.7177387475967407, 0.7318716049194336, 0.7371549606323242, 0.7572315335273743, 0.7618544697761536, 0.7697794437408447, 0.7642319202423096, 0.7779685854911804, 0.7820631265640259, 0.7868181467056274, 0.7989697456359863, 0.8005547523498535, 0.8057059645652771, 0.8079513907432556, 0.8049134612083435, 0.8127063512802124, 0.8177255392074585, 0.8165367841720581, 0.8177255392074585, 0.8222163319587708, 0.8276317715644836, 0.8348963260650635, 0.8310658931732178, 0.8374059200286865, 0.8457271456718445, 0.848368763923645, 0.8462554216384888, 0.8485008478164673, 0.8543124794960022, 0.8589354157447815, 0.8578787446022034, 0.8593316674232483, 0.8628978729248047, 0.8651432991027832, 0.8688416481018066, 0.8648791313171387, 0.8628978729248047, 0.874389111995697, 0.8693699836730957], "val_loss": [2.245009660720825, 2.008852005004883, 1.121972680091858, 0.8308120369911194, 0.7623234987258911, 0.6747569441795349, 0.6320894956588745, 0.630823016166687, 0.6148759126663208, 0.5796172022819519, 0.5432040095329285, 0.5149126052856445, 0.5078205466270447, 0.49627795815467834, 0.4910659193992615, 0.4899415671825409, 0.46939417719841003, 0.4573467969894409, 0.44959017634391785, 0.4427172541618347, 0.4371393322944641, 0.43578848242759705, 0.4422782063484192, 0.4262144863605499, 0.4221261739730835, 0.4189401865005493, 0.41602104902267456, 0.40742895007133484, 0.40804654359817505, 0.3918818235397339, 0.3839951455593109, 0.3882398009300232, 0.38587942719459534, 0.3775371015071869, 0.3755626976490021, 0.36951130628585815, 0.3649393320083618, 0.36200639605522156, 0.360879123210907, 0.35533589124679565, 0.3557562530040741, 0.3578580617904663, 0.3610738217830658, 0.36454182863235474, 0.3628445565700531, 0.3610445261001587, 0.35522836446762085, 0.35501009225845337], "val_accuracy": [0.4336666762828827, 0.4413333237171173, 0.6579999923706055, 0.7066666483879089, 0.7316666841506958, 0.7509999871253967, 0.7543333172798157, 0.7616666555404663, 0.7583333253860474, 0.7836666703224182, 0.7903333306312561, 0.8003333210945129, 0.7983333468437195, 0.8009999990463257, 0.8013333082199097, 0.8169999718666077, 0.8216666579246521, 0.8223333358764648, 0.8270000219345093, 0.8286666870117188, 0.824999988079071, 0.8370000123977661, 0.8320000171661377, 0.8373333215713501, 0.8383333086967468, 0.8420000076293945, 0.8460000157356262, 0.8479999899864197, 0.8486666679382324, 0.8489999771118164, 0.8519999980926514, 0.8510000109672546, 0.8586666584014893, 0.8633333444595337, 0.862666666507721, 0.8633333444595337, 0.8673333525657654, 0.8663333058357239, 0.8683333396911621, 0.8723333477973938, 0.8693333268165588, 0.871666669845581, 0.8763333559036255, 0.8743333220481873, 0.8709999918937683, 0.8700000047683716, 0.8723333477973938, 0.8756666779518127]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8137142658233643, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.500183343887329, 0.7954087257385254, 0.6866762042045593, 0.6393694281578064, 0.5880450010299683, 0.5823806524276733, 0.5751704573631287, 0.5781110525131226, 0.572095513343811, 0.5130598545074463, 0.518402099609375, 0.4786820411682129, 0.47834333777427673, 0.47374239563941956, 0.46663299202919006, 0.4668697416782379, 0.4689752459526062, 0.4825882315635681, 0.5085684657096863, 0.5022602081298828, 0.49484074115753174, 0.46384555101394653, 0.4611126780509949, 0.48154324293136597, 0.5034072399139404], "accuracy": [0.469819039106369, 0.726192057132721, 0.7588165402412415, 0.7808743715286255, 0.7880068421363831, 0.7874785661697388, 0.7959318161010742, 0.8039889335632324, 0.8012151718139648, 0.8161405324935913, 0.8227446675300598, 0.8289526104927063, 0.8341038227081299, 0.8374059200286865, 0.8378021121025085, 0.839519202709198, 0.8389908671379089, 0.8411042094230652, 0.8345000743865967, 0.8271034359931946, 0.8305375576019287, 0.8384625315666199, 0.848368763923645, 0.8352925777435303, 0.8274996876716614], "val_loss": [0.7478348612785339, 0.6293426156044006, 0.5636993646621704, 0.5246548056602478, 0.5179232954978943, 0.5095312595367432, 0.551255464553833, 0.5579717755317688, 0.5185337662696838, 0.5632995963096619, 0.5390415787696838, 0.5127374529838562, 0.5265012383460999, 0.5052713751792908, 0.5207904577255249, 0.5482897758483887, 0.5226417779922485, 0.6724696755409241, 0.5741721987724304, 0.5458793640136719, 0.5660496950149536, 0.613175630569458, 0.5665450692176819, 0.6092013716697693, 0.5794605016708374], "val_accuracy": [0.734666645526886, 0.7796666622161865, 0.7986666560173035, 0.8073333501815796, 0.8166666626930237, 0.8159999847412109, 0.8116666674613953, 0.8086666464805603, 0.82833331823349, 0.831333339214325, 0.8360000252723694, 0.8346666693687439, 0.8349999785423279, 0.8360000252723694, 0.8363333344459534, 0.82833331823349, 0.8376666903495789, 0.828000009059906, 0.8223333358764648, 0.8433333039283752, 0.8289999961853027, 0.8413333296775818, 0.8349999785423279, 0.82833331823349, 0.8299999833106995]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 2, 8, 5], [0, 1, 2, 2, 3], [2, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 2], [16, 16], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 2, 8, 2], [0, 1, 0, 1], [99, 98], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 1, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 56, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.add(grad, tf.math.sqrt(tf.math.square(grad))), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [1.577187689889792e+16, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10553427785634995, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.8795326643109888e+17, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 13, 8, 5, 1, 7, 4, 3, 2, 9, 5, 4, 2, 16, 8, 8, 5], "tree_depth": 15}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 3, 4, 2, 8], [0, 0, 0, 3, 2, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 77]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, beta))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, alpha)))", "other_info": {"loss": [2.303569793701172, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 0], [2, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [43], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 5, 8, 1, 3, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 0, 10, 6, 4, 2, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09113723784685135, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 2, 3, 0, 3, 3, 2, 0, 9], [0, 2, 0, 2, 2], [39, 39, 30], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 4, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [91], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 0], [0, 0, 4, 3, 0, 0, 4, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 9, 5, 3, 10, 6, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.negative(grad), grad), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3036251068115234, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]