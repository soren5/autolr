[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8791428804397583, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224691152572632, 1.8683772087097168, 1.4013793468475342, 1.0939387083053589, 0.9551045894622803, 0.8530007004737854, 0.779485821723938, 0.7457146048545837, 0.7030880451202393, 0.6819782257080078, 0.646918535232544, 0.6262496709823608, 0.5985910296440125, 0.5927533507347107, 0.5734840035438538, 0.5512962341308594, 0.5397131443023682, 0.5306671261787415, 0.5227266550064087, 0.5091748833656311, 0.493897944688797, 0.4855693578720093, 0.4755500555038452, 0.46436217427253723, 0.4576524496078491, 0.4496408700942993, 0.4397708475589752, 0.4444425106048584, 0.4241836667060852, 0.43109697103500366, 0.4217256009578705, 0.40949341654777527, 0.40209436416625977, 0.40443363785743713, 0.39794257283210754, 0.3834945559501648, 0.3769911527633667, 0.3764527142047882, 0.3669157326221466, 0.37186846137046814, 0.36375153064727783, 0.35602423548698425, 0.3509747087955475, 0.3444776237010956, 0.3358671963214874, 0.32751885056495667, 0.33768701553344727, 0.3213590085506439, 0.3252784311771393, 0.32559001445770264, 0.3185674250125885, 0.3153201639652252, 0.30147793889045715, 0.30520761013031006, 0.2942403256893158, 0.29585933685302734, 0.29156526923179626, 0.28494489192962646, 0.2864094078540802, 0.2840997576713562, 0.28428274393081665, 0.27462372183799744, 0.2701452672481537, 0.26235172152519226, 0.26258987188339233, 0.25485068559646606, 0.25275006890296936, 0.2532438039779663, 0.25031259655952454, 0.24532482028007507, 0.2331540286540985, 0.2390974760055542, 0.23482851684093475, 0.23101423680782318, 0.22753727436065674, 0.22632567584514618], "accuracy": [0.25941091775894165, 0.4893673360347748, 0.55791836977005, 0.6210539937019348, 0.6567164063453674, 0.6983225345611572, 0.7206445932388306, 0.7283053994178772, 0.7486461400985718, 0.7526086568832397, 0.7619865536689758, 0.7676661014556885, 0.7792893648147583, 0.7816668748855591, 0.7922335267066956, 0.7997622489929199, 0.8053097128868103, 0.8055738806724548, 0.8107251524925232, 0.8133667707443237, 0.8222163319587708, 0.8226125836372375, 0.8300092220306396, 0.8327829837799072, 0.8310658931732178, 0.844010055065155, 0.8417646288871765, 0.8400475382804871, 0.846387505531311, 0.845859169960022, 0.8498216867446899, 0.8511425256729126, 0.8581429123878479, 0.8519350290298462, 0.8560295701026917, 0.8639545440673828, 0.8640866279602051, 0.8636903762817383, 0.8676528930664062, 0.8632941246032715, 0.86553955078125, 0.8687095642089844, 0.8733324408531189, 0.8751816153526306, 0.8776912093162537, 0.8792761564254761, 0.8746532797813416, 0.8809932470321655, 0.8815215826034546, 0.8833707571029663, 0.8837670087814331, 0.8850878477096558, 0.8930128216743469, 0.8902390599250793, 0.8947299122810364, 0.8943336606025696, 0.891559898853302, 0.8963148593902588, 0.89552241563797, 0.8947299122810364, 0.895918607711792, 0.8989565372467041, 0.9046360850334167, 0.9054285883903503, 0.9002773761749268, 0.9064852595329285, 0.9074098467826843, 0.9099194407463074, 0.9104477763175964, 0.915070652961731, 0.9157310724258423, 0.9129573106765747, 0.9148064851760864, 0.9124290347099304, 0.9171839952468872, 0.9171839952468872], "val_loss": [2.038526773452759, 1.510238766670227, 1.0447747707366943, 0.8352280259132385, 0.7531793713569641, 0.6963355541229248, 0.6498194932937622, 0.6246073842048645, 0.5953369736671448, 0.5716328024864197, 0.5562007427215576, 0.5438976287841797, 0.5279420018196106, 0.51389080286026, 0.5057971477508545, 0.49414271116256714, 0.482173353433609, 0.47447696328163147, 0.46831631660461426, 0.4581488370895386, 0.4518188536167145, 0.4512670934200287, 0.4456486403942108, 0.43329060077667236, 0.43261417746543884, 0.4205039143562317, 0.4206644594669342, 0.413736492395401, 0.4104427099227905, 0.40436092019081116, 0.4019021689891815, 0.401526540517807, 0.3927256762981415, 0.39569756388664246, 0.388218492269516, 0.39298149943351746, 0.3826553523540497, 0.3818466365337372, 0.3840924799442291, 0.3762838542461395, 0.3779735565185547, 0.3782140612602234, 0.3694102466106415, 0.3699958026409149, 0.36511310935020447, 0.366933137178421, 0.36473965644836426, 0.3623674213886261, 0.35939449071884155, 0.35847315192222595, 0.3595349192619324, 0.35298311710357666, 0.3535289168357849, 0.35462313890457153, 0.35054683685302734, 0.34882593154907227, 0.3493621349334717, 0.3531535565853119, 0.34503549337387085, 0.34384992718696594, 0.3448854088783264, 0.34570378065109253, 0.34537023305892944, 0.34840068221092224, 0.34696924686431885, 0.3487513065338135, 0.33932241797447205, 0.3398410975933075, 0.33569568395614624, 0.33905473351478577, 0.34274718165397644, 0.34127065539360046, 0.33783894777297974, 0.34692227840423584, 0.35144636034965515, 0.33920830488204956], "val_accuracy": [0.5683333277702332, 0.6576666831970215, 0.6836666464805603, 0.7106666564941406, 0.7303333282470703, 0.746666669845581, 0.7596666812896729, 0.7696666717529297, 0.7720000147819519, 0.7870000004768372, 0.7943333387374878, 0.800000011920929, 0.8013333082199097, 0.8119999766349792, 0.8103333115577698, 0.8133333325386047, 0.8209999799728394, 0.8266666531562805, 0.8293333053588867, 0.8296666741371155, 0.831333339214325, 0.8373333215713501, 0.8320000171661377, 0.8396666646003723, 0.8389999866485596, 0.8483333587646484, 0.8433333039283752, 0.8503333330154419, 0.8510000109672546, 0.8523333072662354, 0.8506666421890259, 0.8529999852180481, 0.8543333411216736, 0.8569999933242798, 0.8603333234786987, 0.8576666712760925, 0.859333336353302, 0.8576666712760925, 0.8550000190734863, 0.8643333315849304, 0.859666645526886, 0.8619999885559082, 0.8683333396911621, 0.8663333058357239, 0.8686666488647461, 0.8650000095367432, 0.8663333058357239, 0.8693333268165588, 0.8700000047683716, 0.8709999918937683, 0.8723333477973938, 0.8730000257492065, 0.875, 0.871999979019165, 0.8726666569709778, 0.875, 0.8759999871253967, 0.8723333477973938, 0.8763333559036255, 0.8743333220481873, 0.875, 0.8776666522026062, 0.875, 0.8756666779518127, 0.8759999871253967, 0.8763333559036255, 0.8796666860580444, 0.8806666731834412, 0.8769999742507935, 0.8790000081062317, 0.8840000033378601, 0.8790000081062317, 0.8796666860580444, 0.878333330154419, 0.878000020980835, 0.8816666603088379]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 5, 2, 2, 6, 6, 8, 0, 3, 3, 5, 2, 9], [0, 1, 1, 3, 2, 4, 1, 2], [0, 92], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8379999995231628, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.negative(beta))), tf.math.multiply(tf.math.multiply(tf.math.square(tf.math.add(grad, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), alpha), beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2930407524108887, 2.1870036125183105, 1.7698291540145874, 1.3269294500350952, 1.0592842102050781, 0.8975062370300293, 0.8317199945449829, 0.811931848526001, 0.7714919447898865, 0.7326498627662659, 0.6868380904197693, 0.6637675166130066, 0.6569154858589172, 0.6297255754470825, 0.6057727336883545, 0.5959475040435791, 0.5717862844467163, 0.5558707118034363, 0.5544058680534363, 0.5428726673126221, 0.5288650393486023, 0.5105581283569336, 0.5248516201972961, 0.503984808921814, 0.48524975776672363, 0.4860689640045166, 0.47234368324279785, 0.463039755821228, 0.446023166179657, 0.44614994525909424, 0.44371330738067627, 0.4263201653957367, 0.41673505306243896, 0.41600969433784485, 0.40329253673553467, 0.3868592083454132, 0.38631850481033325, 0.37906599044799805, 0.36954978108406067, 0.36097314953804016, 0.3577251434326172, 0.3558509945869446, 0.349109023809433, 0.34471404552459717, 0.3426052927970886, 0.344444215297699, 0.33279797434806824, 0.32782015204429626], "accuracy": [0.12640337646007538, 0.3350944519042969, 0.4282129108905792, 0.5525029897689819, 0.6349227428436279, 0.6713775992393494, 0.689869225025177, 0.6988508701324463, 0.7010962963104248, 0.7205125093460083, 0.7364945411682129, 0.7445515990257263, 0.7481178045272827, 0.7592127919197083, 0.7652885913848877, 0.7729493975639343, 0.778232753276825, 0.7881389260292053, 0.7889314293861389, 0.7887993454933167, 0.7987055778503418, 0.8006868362426758, 0.7994980812072754, 0.8058380484580994, 0.8182538747787476, 0.8131026029586792, 0.8148196935653687, 0.8264430165290833, 0.8304054737091064, 0.8265751004219055, 0.8264430165290833, 0.832650899887085, 0.844010055065155, 0.841500461101532, 0.845859169960022, 0.8510104417800903, 0.8506141901016235, 0.8552370667457581, 0.8598600029945374, 0.8610487580299377, 0.8619733452796936, 0.8659358024597168, 0.8659358024597168, 0.8710870146751404, 0.8671245574951172, 0.8650112152099609, 0.8708229064941406, 0.8698983192443848], "val_loss": [2.245854377746582, 2.019477605819702, 1.1448556184768677, 0.906219482421875, 0.7580973505973816, 0.7310647964477539, 0.6915525794029236, 0.6747004985809326, 0.6550952196121216, 0.6406626105308533, 0.6114194393157959, 0.5870829224586487, 0.5608388781547546, 0.549936830997467, 0.5535358190536499, 0.5403867363929749, 0.5376775860786438, 0.5226077437400818, 0.5200281143188477, 0.5110944509506226, 0.5028848648071289, 0.4892231523990631, 0.48261967301368713, 0.4884375035762787, 0.48377493023872375, 0.4715023636817932, 0.4695301949977875, 0.46517711877822876, 0.4668607711791992, 0.46801289916038513, 0.46105679869651794, 0.4571497440338135, 0.44845739006996155, 0.44107356667518616, 0.4363628327846527, 0.4272519648075104, 0.4270375072956085, 0.4236660897731781, 0.41584935784339905, 0.4231112003326416, 0.4217434823513031, 0.41336920857429504, 0.41867223381996155, 0.43010473251342773, 0.4257884919643402, 0.4225805699825287, 0.4256395697593689, 0.43355217576026917], "val_accuracy": [0.41200000047683716, 0.43566668033599854, 0.6489999890327454, 0.6806666851043701, 0.7196666598320007, 0.7229999899864197, 0.737666666507721, 0.7443333268165588, 0.7526666522026062, 0.7583333253860474, 0.765666663646698, 0.7716666460037231, 0.7910000085830688, 0.7990000247955322, 0.7940000295639038, 0.7946666479110718, 0.8063333630561829, 0.8069999814033508, 0.8080000281333923, 0.8246666789054871, 0.815666675567627, 0.8146666884422302, 0.8289999961853027, 0.8259999752044678, 0.8303333520889282, 0.8353333473205566, 0.8363333344459534, 0.8266666531562805, 0.8289999961853027, 0.8389999866485596, 0.8403333425521851, 0.8423333168029785, 0.8483333587646484, 0.8486666679382324, 0.8503333330154419, 0.8569999933242798, 0.8586666584014893, 0.8600000143051147, 0.862666666507721, 0.859666645526886, 0.8603333234786987, 0.862333357334137, 0.8653333187103271, 0.8640000224113464, 0.8636666536331177, 0.8606666922569275, 0.8646666407585144, 0.862333357334137]}, "mapping_values": [1, 10, 5, 5, 3, 22, 14, 8, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 24}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 2], [0, 2], [0], [1], [0], [2], [0]], "fitness": -0.8339999914169312, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5459494590759277, 0.8349137306213379, 0.6901025176048279, 0.6220115423202515, 0.6012105941772461, 0.5605610013008118, 0.5558441281318665, 0.5012657642364502, 0.499174028635025, 0.47275087237358093, 0.47483471035957336, 0.5040838122367859, 0.5182538628578186, 0.49144813418388367, 0.4692215025424957, 0.4890458583831787, 0.5130678415298462, 0.5180423855781555, 0.5324931740760803], "accuracy": [0.47430986166000366, 0.7164179086685181, 0.7491744756698608, 0.776251494884491, 0.7824593782424927, 0.7981772422790527, 0.8053097128868103, 0.8086118102073669, 0.8171972036361694, 0.8327829837799072, 0.8338396549224854, 0.8290846943855286, 0.8226125836372375, 0.8293488025665283, 0.83119797706604, 0.8260467648506165, 0.8333113193511963, 0.8278959393501282, 0.813498854637146], "val_loss": [0.8554360270500183, 0.6063969731330872, 0.541365385055542, 0.5367928147315979, 0.5442807674407959, 0.5420976281166077, 0.4929969906806946, 0.5133824944496155, 0.5423202514648438, 0.5365450978279114, 0.5248227715492249, 0.5531474351882935, 0.5362985730171204, 0.5184258818626404, 0.5375517010688782, 0.5848448276519775, 0.6025447845458984, 0.6005317568778992, 0.5497650504112244], "val_accuracy": [0.7436666488647461, 0.7680000066757202, 0.7993333339691162, 0.7856666445732117, 0.8046666383743286, 0.796999990940094, 0.8186666369438171, 0.82833331823349, 0.8236666917800903, 0.8270000219345093, 0.8309999704360962, 0.8306666612625122, 0.8296666741371155, 0.8323333263397217, 0.8193333148956299, 0.82833331823349, 0.8289999961853027, 0.8273333311080933, 0.8246666789054871]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 9, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [6, 4, 2, 8, 3, 4, 6, 9], [0, 0, 0, 4, 2, 2], [98, 61, 26, 50], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [44, 99, 96, 50, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 10, 6, 4, 2, 14, 8, 6, 4, 16, 8, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.multiply(grad, tf.math.pow(tf.math.divide_no_nan(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), beta), beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 9], [0, 3, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 8, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 95]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 9, 6, 3, 2, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.math.sqrt(sigma)), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [0, 2, 3, 0, 5, 3, 2, 0, 2, 6, 1, 8, 8, 4, 7, 2, 4, 8, 6, 6, 9], [0, 1, 0, 2, 1, 3, 2, 0, 1, 0, 1, 3, 0], [39, 39, 58, 4, 27, 74], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [2, 1, 0, 1, 2], [0, 6, 6, 4, 0], [99, 20], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 34, 21, 13, 6, 10, 6, 4, 2, 10, 5, 5, 2, 10, 5, 5, 4], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.divide_no_nan(grad, alpha), tf.math.subtract(tf.math.sqrt(tf.math.sqrt(grad)), tf.math.pow(tf.math.add(tf.math.add(tf.math.pow(grad, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha)), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, grad))))), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.add(grad, grad), grad)), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), sigma), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [13.813138008117676, 2.6411921977996826, 3.669530153274536, 6.287672519683838, 75.75404357910156, 15.624320030212402], "accuracy": [0.09615638852119446, 0.09536388516426086, 0.10038304328918457, 0.09959053993225098, 0.09311848133802414, 0.10236428678035736], "val_loss": [2.4366698265075684, 2.521526575088501, 3.857516288757324, 13.077088356018066, 9.55749225616455, 21.509458541870117], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.09933333098888397, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 1, 0, 3, 5, 9], [0, 2, 0, 3], [5, 16, 14], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 1, 1, 4, 2, 8, 0, 7], [0, 0, 2, 3, 0, 0, 4, 1, 2, 0, 3], [16, 99, 94, 99, 42, 1]], "fitness": -0.09200000017881393, "mapping_values": [1, 7, 4, 3, 1, 10, 7, 3, 3, 2, 1, 1, 1, 24, 13, 11, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), grad)))), tf.math.sqrt(tf.math.negative(alpha)))), beta), tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.30950665473938, 2.3101847171783447, 2.3106961250305176, 2.3103225231170654, 2.3100595474243164, 2.3107521533966064], "accuracy": [0.09576013684272766, 0.08796724677085876, 0.09008057415485382, 0.09047681838274002, 0.09311848133802414, 0.08809932321310043], "val_loss": [2.3085501194000244, 2.3085501194000244, 2.3085501194000244, 2.3085501194000244, 2.3085501194000244, 2.3085501194000244], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}]