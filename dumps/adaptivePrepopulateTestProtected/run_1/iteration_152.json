[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8591428399085999, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2229297161102295, 1.871749997138977, 1.406985878944397, 1.1195287704467773, 0.9542893171310425, 0.8528962731361389, 0.7878455519676208, 0.7434598803520203, 0.7064849734306335, 0.6757097840309143, 0.6494928002357483, 0.6207500696182251, 0.5986391305923462, 0.5862526297569275, 0.5642444491386414, 0.5506079196929932, 0.53572016954422, 0.5286173820495605, 0.5136772394180298, 0.5174890160560608, 0.501009464263916, 0.49790117144584656, 0.4814705550670624, 0.4679734408855438, 0.46236860752105713, 0.4650323987007141, 0.45096713304519653, 0.4410971701145172, 0.43394792079925537, 0.42452892661094666, 0.4175983965396881, 0.4183674454689026, 0.4182372987270355, 0.40827086567878723, 0.40362977981567383, 0.3853324353694916, 0.3864218592643738, 0.38491618633270264, 0.37544867396354675, 0.36860328912734985, 0.3633664548397064, 0.3588038384914398, 0.35371169447898865, 0.35061973333358765, 0.34629249572753906, 0.3436151146888733, 0.34151580929756165, 0.33381569385528564, 0.32124125957489014, 0.32935765385627747, 0.322249174118042, 0.312650591135025, 0.3070460855960846, 0.29942601919174194, 0.30630919337272644, 0.29845479130744934, 0.29757991433143616, 0.28454071283340454, 0.28056588768959045, 0.2684805691242218, 0.2710956037044525, 0.26844099164009094, 0.2631478011608124, 0.26561152935028076], "accuracy": [0.2825254201889038, 0.4760269522666931, 0.5635979175567627, 0.607449471950531, 0.6622639298439026, 0.6901333928108215, 0.7150970697402954, 0.7337207794189453, 0.7372870445251465, 0.7524765729904175, 0.7568352818489075, 0.7701756954193115, 0.7828556299209595, 0.7882710099220276, 0.7943468689918518, 0.7998943328857422, 0.8035926818847656, 0.807158887386322, 0.8109893202781677, 0.8096684813499451, 0.8208954930305481, 0.8215559124946594, 0.8273676037788391, 0.8310658931732178, 0.8318583965301514, 0.8305375576019287, 0.8368775844573975, 0.8416325449943542, 0.8467837572097778, 0.8481045961380005, 0.8533879518508911, 0.852331280708313, 0.8545766472816467, 0.8544445633888245, 0.8533879518508911, 0.8636903762817383, 0.8634262084960938, 0.8619733452796936, 0.8636903762817383, 0.8684453964233398, 0.8691058158874512, 0.8705587387084961, 0.8770307898521423, 0.8716153502464294, 0.8762382864952087, 0.8794082403182983, 0.8749174475669861, 0.8824461698532104, 0.8803328275680542, 0.8792761564254761, 0.8837670087814331, 0.8869370222091675, 0.8877294659614563, 0.8905032277107239, 0.8907673954963684, 0.8931449055671692, 0.8928807377815247, 0.897899866104126, 0.898428201675415, 0.9058248400688171, 0.8981640338897705, 0.9043719172477722, 0.9030511379241943, 0.9025228023529053], "val_loss": [2.0375564098358154, 1.516048550605774, 1.0424333810806274, 0.8267526030540466, 0.7369016408920288, 0.6785953044891357, 0.6324862837791443, 0.5986990332603455, 0.5757622718811035, 0.5557796955108643, 0.5323107838630676, 0.5181253552436829, 0.5015877485275269, 0.4885369837284088, 0.4761914908885956, 0.465907484292984, 0.4621090590953827, 0.447805792093277, 0.4501393139362335, 0.4385250508785248, 0.43521955609321594, 0.42855334281921387, 0.4223182499408722, 0.41282376646995544, 0.4085560441017151, 0.4026220738887787, 0.39954671263694763, 0.38996973633766174, 0.38849174976348877, 0.3854694366455078, 0.3833576738834381, 0.3826636075973511, 0.3822326362133026, 0.3771892786026001, 0.37568017840385437, 0.3656962513923645, 0.3651679754257202, 0.361154705286026, 0.36372384428977966, 0.35875481367111206, 0.35786405205726624, 0.3566497266292572, 0.3519439697265625, 0.35214102268218994, 0.3500687777996063, 0.3482629358768463, 0.34397268295288086, 0.3410901129245758, 0.340712308883667, 0.3404481112957001, 0.3377988636493683, 0.33905115723609924, 0.3326919972896576, 0.3340410888195038, 0.3325481414794922, 0.3309944272041321, 0.32677462697029114, 0.3274935781955719, 0.32671645283699036, 0.3289852738380432, 0.3243870139122009, 0.3291393518447876, 0.3216831088066101, 0.32100167870521545], "val_accuracy": [0.5286666750907898, 0.656000018119812, 0.6883333325386047, 0.718999981880188, 0.7276666760444641, 0.753000020980835, 0.7666666507720947, 0.781333327293396, 0.7873333096504211, 0.7973333597183228, 0.8033333420753479, 0.8086666464805603, 0.8203333616256714, 0.8240000009536743, 0.8316666483879089, 0.8346666693687439, 0.8330000042915344, 0.840666651725769, 0.8393333554267883, 0.8450000286102295, 0.8410000205039978, 0.8453333377838135, 0.8496666550636292, 0.8546666502952576, 0.856333315372467, 0.8610000014305115, 0.8600000143051147, 0.8633333444595337, 0.8659999966621399, 0.8676666617393494, 0.8659999966621399, 0.8629999756813049, 0.8669999837875366, 0.8646666407585144, 0.8700000047683716, 0.8696666955947876, 0.8740000128746033, 0.874666690826416, 0.8740000128746033, 0.8740000128746033, 0.8726666569709778, 0.8740000128746033, 0.8786666393280029, 0.874666690826416, 0.8806666731834412, 0.878333330154419, 0.8776666522026062, 0.874666690826416, 0.8809999823570251, 0.8820000290870667, 0.8806666731834412, 0.8806666731834412, 0.8836666941642761, 0.8820000290870667, 0.8830000162124634, 0.887333333492279, 0.8859999775886536, 0.887333333492279, 0.887666642665863, 0.8856666684150696, 0.887666642665863, 0.8856666684150696, 0.887666642665863, 0.887333333492279]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1], [0, 8], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8362857103347778, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293161392211914, 2.1878132820129395, 1.7580620050430298, 1.3325409889221191, 1.069576621055603, 0.9144084453582764, 0.8495603203773499, 0.8084920048713684, 0.7501809000968933, 0.7514639496803284, 0.6887404918670654, 0.6793215274810791, 0.6466644406318665, 0.6338475942611694, 0.6185148358345032, 0.5996041297912598, 0.5972931385040283, 0.5758845210075378, 0.5641171932220459, 0.5388737916946411, 0.5351039171218872, 0.5283505320549011, 0.5186406970024109, 0.5093969702720642, 0.5062572956085205, 0.4847184419631958, 0.4800108075141907, 0.4762686491012573, 0.4568530023097992], "accuracy": [0.1328754425048828, 0.3276977837085724, 0.4492141008377075, 0.5453705191612244, 0.6404702067375183, 0.669792652130127, 0.6914542317390442, 0.7087571024894714, 0.707568347454071, 0.7082287669181824, 0.7341170310974121, 0.7403249144554138, 0.7535332441329956, 0.7585523724555969, 0.7597411274909973, 0.7765156626701355, 0.7729493975639343, 0.7769119143486023, 0.7847048044204712, 0.7936864495277405, 0.7959318161010742, 0.7979130744934082, 0.7998943328857422, 0.7956677079200745, 0.7957997918128967, 0.816008448600769, 0.8162726163864136, 0.8164047002792358, 0.8256505131721497], "val_loss": [2.246903896331787, 2.0182743072509766, 1.142575740814209, 0.9041182994842529, 0.767355740070343, 0.7074747085571289, 0.6745486259460449, 0.643729031085968, 0.6389420032501221, 0.6121957898139954, 0.5822663307189941, 0.5589369535446167, 0.5380335450172424, 0.5363225936889648, 0.5173876881599426, 0.5046810507774353, 0.5093809962272644, 0.5013265013694763, 0.5000197887420654, 0.4933100938796997, 0.47757038474082947, 0.47312986850738525, 0.4647361934185028, 0.4557065963745117, 0.45252659916877747, 0.45316267013549805, 0.45582807064056396, 0.4529988467693329, 0.4450019896030426], "val_accuracy": [0.3919999897480011, 0.4690000116825104, 0.6223333477973938, 0.6909999847412109, 0.7046666741371155, 0.734666645526886, 0.7436666488647461, 0.762666642665863, 0.7590000033378601, 0.7673333287239075, 0.7710000276565552, 0.7826666831970215, 0.7923333048820496, 0.7910000085830688, 0.79666668176651, 0.8036666512489319, 0.8026666641235352, 0.8056666851043701, 0.8073333501815796, 0.8136666417121887, 0.8176666498184204, 0.8136666417121887, 0.8266666531562805, 0.8373333215713501, 0.8270000219345093, 0.8266666531562805, 0.8336666822433472, 0.8356666564941406, 0.8273333311080933]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8005714416503906, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.547995686531067, 0.7924160957336426, 0.6507958173751831, 0.6058893799781799, 0.5596802830696106, 0.5261649489402771, 0.49881500005722046, 0.488287091255188, 0.45978620648384094, 0.471818208694458, 0.43798378109931946, 0.4751242995262146, 0.44254764914512634, 0.43928733468055725, 0.4563400149345398, 0.4259360730648041, 0.46666789054870605, 0.4704369306564331], "accuracy": [0.48170650005340576, 0.7173424959182739, 0.7683265209197998, 0.7765156626701355, 0.7923656105995178, 0.8113855719566345, 0.8186501264572144, 0.8334434032440186, 0.8343679904937744, 0.8252542614936829, 0.8362171649932861, 0.8391229510307312, 0.8404437899589539, 0.8412362933158875, 0.848368763923645, 0.8457271456718445, 0.8378021121025085, 0.847840428352356], "val_loss": [0.7325829863548279, 0.5938620567321777, 0.5384411215782166, 0.5037421584129333, 0.4752737283706665, 0.4815943241119385, 0.5017415881156921, 0.5280488133430481, 0.5215888023376465, 0.49393290281295776, 0.6155262589454651, 0.5321241617202759, 0.4999779164791107, 0.5371749401092529, 0.5326438546180725, 0.5437261462211609, 0.5750910043716431, 0.5871776342391968], "val_accuracy": [0.7536666393280029, 0.7923333048820496, 0.8036666512489319, 0.8209999799728394, 0.8330000042915344, 0.8299999833106995, 0.8339999914169312, 0.8353333473205566, 0.8320000171661377, 0.8339999914169312, 0.8293333053588867, 0.8433333039283752, 0.847000002861023, 0.8450000286102295, 0.8450000286102295, 0.8450000286102295, 0.8383333086967468, 0.8353333473205566]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [8, 39, 94], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 5, 7, 8], [0, 3], [16, 16], [0, 1, 1], [7], [0, 2], [88], [0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 5, 0, 5], [16, 99, 96, 99, 61, 1]], "fitness": -0.10114285349845886, "mapping_values": [1, 6, 3, 3, 2, 6, 4, 2, 1, 3, 1, 2, 1, 3, 1, 2, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.add(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, grad)", "other_info": {"loss": [44829848.0, 51613176.0, 50862404.0, 50808616.0, 52024880.0, 51064664.0, 50591476.0, 51973416.0, 51216176.0, 51740476.0, 52361832.0], "accuracy": [0.0936468094587326, 0.09734513610601425, 0.09800554811954498, 0.09496764093637466, 0.0882314071059227, 0.09747721254825592, 0.10157178342342377, 0.0944393053650856, 0.09972262382507324, 0.09430722147226334, 0.09694888442754745], "val_loss": [28444386.0, 28444192.0, 28443732.0, 28441098.0, 28440366.0, 28577882.0, 28577650.0, 28578684.0, 28576148.0, 28576818.0, 28579708.0], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [1, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 5, 3, 2, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 9, 4, 2, 8, 5, 4], [0, 3, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 3, 2, 1, 1, 2, 1, 1, 1, 22, 13, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma), tf.math.sqrt(tf.math.square(tf.math.pow(alpha, beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 3, 3, 0, 3, 8], [0, 2, 0, 3], [17, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [9, 3, 3, 2, 1, 1, 8, 0, 4, 2, 8], [0, 2, 3, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 63]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3037021160125732, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 4, 0, 9], [0, 1, 2, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 1, 5], [0, 2, 2, 3], [16, 16], [0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 3, 4, 4, 5], [0, 3, 5, 5], [99], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 3, 3, 6, 8, 1, 4, 1, 4, 2, 1], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 5, 2, 2, 6, 3, 3, 1, 9, 5, 4, 1, 4, 2, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(sigma, grad)), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [7.584331035614014, 58.031429290771484, 201.119384765625, 500.1319885253906, 1006.544189453125, 1798.0167236328125], "accuracy": [0.09549596905708313, 0.09668471664190292, 0.10579843819141388, 0.09800554811954498, 0.1006472036242485, 0.1022322028875351], "val_loss": [20.638648986816406, 96.5539779663086, 267.54449462890625, 582.9479370117188, 1091.699462890625, 1843.1556396484375], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]