[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8548571467399597, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2216384410858154, 1.854946255683899, 1.376369833946228, 1.0802658796310425, 0.9138762354850769, 0.8189433813095093, 0.7644668221473694, 0.7117204666137695, 0.6898713111877441, 0.6538929343223572, 0.6216577291488647, 0.6013640761375427, 0.583899974822998, 0.563907265663147, 0.5532967448234558, 0.546312153339386, 0.5263916850090027, 0.5122033953666687, 0.5041117668151855, 0.49131712317466736, 0.4848944842815399, 0.4705297648906708, 0.46394774317741394, 0.45257022976875305, 0.44473037123680115, 0.4344465434551239, 0.4315164089202881, 0.4193638265132904, 0.422681599855423, 0.4155610203742981, 0.40932711958885193, 0.40451157093048096, 0.3957909047603607, 0.39652833342552185, 0.3812088966369629, 0.3768763542175293, 0.3749917447566986, 0.36265644431114197, 0.35382750630378723, 0.3570232093334198, 0.354226291179657, 0.34912198781967163, 0.34014892578125, 0.33951735496520996, 0.3342899680137634, 0.3293980360031128, 0.32308685779571533], "accuracy": [0.2740721106529236, 0.499009370803833, 0.5691454410552979, 0.6209219098091125, 0.6713775992393494, 0.7051908373832703, 0.7213049530982971, 0.739400327205658, 0.7446836829185486, 0.7539294958114624, 0.7741381525993347, 0.7777044177055359, 0.7837802171707153, 0.791969358921051, 0.7971205711364746, 0.8045172095298767, 0.8059701323509216, 0.8144234418869019, 0.8164047002792358, 0.8255184292793274, 0.8211596608161926, 0.8318583965301514, 0.83119797706604, 0.8388587832450867, 0.8396512866020203, 0.843481719493866, 0.8477083444595337, 0.8465195894241333, 0.8507462739944458, 0.8514066934585571, 0.8521991968154907, 0.852859616279602, 0.8581429123878479, 0.8585391640663147, 0.8673887252807617, 0.870030403137207, 0.8659358024597168, 0.8750495314598083, 0.8721436858177185, 0.873860776424408, 0.8702945709228516, 0.8776912093162537, 0.8742570281028748, 0.8792761564254761, 0.8799365758895874, 0.8829745054244995, 0.8848236799240112], "val_loss": [2.036417245864868, 1.4997485876083374, 1.0269436836242676, 0.8193217515945435, 0.7249062657356262, 0.6676499843597412, 0.6247637271881104, 0.5978831052780151, 0.5701308846473694, 0.5522887110710144, 0.5281935334205627, 0.5144096612930298, 0.5012240409851074, 0.493177205324173, 0.47999462485313416, 0.47726675868034363, 0.45714476704597473, 0.4524043798446655, 0.44873377680778503, 0.4370427131652832, 0.4365195035934448, 0.4264460504055023, 0.4197825789451599, 0.41581812500953674, 0.4125887155532837, 0.40749678015708923, 0.39996403455734253, 0.3985201120376587, 0.3967345058917999, 0.3908785283565521, 0.38819965720176697, 0.3888688087463379, 0.38362857699394226, 0.3813927471637726, 0.3817615211009979, 0.37268102169036865, 0.36926916241645813, 0.37024980783462524, 0.36794349551200867, 0.36470189690589905, 0.36534976959228516, 0.3621111512184143, 0.3649677038192749, 0.3547792136669159, 0.35819926857948303, 0.3601723313331604, 0.35826408863067627], "val_accuracy": [0.5440000295639038, 0.6636666655540466, 0.690666675567627, 0.7083333134651184, 0.7329999804496765, 0.7513333559036255, 0.7620000243186951, 0.7710000276565552, 0.7893333435058594, 0.7850000262260437, 0.8019999861717224, 0.8113333582878113, 0.8116666674613953, 0.8193333148956299, 0.8223333358764648, 0.8306666612625122, 0.8379999995231628, 0.8323333263397217, 0.8416666388511658, 0.8413333296775818, 0.8426666855812073, 0.8503333330154419, 0.847000002861023, 0.8533333539962769, 0.8486666679382324, 0.8523333072662354, 0.8573333621025085, 0.8556666374206543, 0.8583333492279053, 0.8543333411216736, 0.8629999756813049, 0.8646666407585144, 0.859666645526886, 0.8659999966621399, 0.862666666507721, 0.8659999966621399, 0.8663333058357239, 0.8629999756813049, 0.8696666955947876, 0.8696666955947876, 0.8703333139419556, 0.871999979019165, 0.8683333396911621, 0.871666669845581, 0.871999979019165, 0.8713333606719971, 0.8686666488647461]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0], [0, 9], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.833142876625061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292114019393921, 2.186331272125244, 1.7596158981323242, 1.3288494348526, 1.0431040525436401, 0.8993852734565735, 0.819481372833252, 0.7903062105178833, 0.7465291619300842, 0.7212164402008057, 0.6960263848304749, 0.6726188659667969, 0.6535829305648804, 0.6273621320724487, 0.6059892773628235, 0.5871233344078064, 0.5771610736846924, 0.5635603666305542, 0.5466157793998718, 0.5391646027565002, 0.5244228839874268, 0.5069710612297058, 0.4944009780883789, 0.49363699555397034, 0.48137763142585754, 0.4802084267139435, 0.46432268619537354, 0.4479801058769226, 0.4530101418495178, 0.43643614649772644, 0.4139665961265564, 0.4288228452205658], "accuracy": [0.12930920720100403, 0.3267732262611389, 0.4383833110332489, 0.5494650602340698, 0.6439043879508972, 0.6649055480957031, 0.7004358768463135, 0.7033417224884033, 0.7102100253105164, 0.7260599732398987, 0.7358341217041016, 0.7382115721702576, 0.7515519857406616, 0.7556465268135071, 0.7675340175628662, 0.7755910754203796, 0.7755910754203796, 0.7835160493850708, 0.7913089394569397, 0.7926297783851624, 0.8061022162437439, 0.8050455451011658, 0.8113855719566345, 0.8187822103500366, 0.8183859586715698, 0.8211596608161926, 0.8210275769233704, 0.8337075710296631, 0.8289526104927063, 0.8317263126373291, 0.8442742228507996, 0.8391229510307312], "val_loss": [2.2459795475006104, 2.0183873176574707, 1.123293399810791, 0.8633227348327637, 0.7417664527893066, 0.6972184181213379, 0.6459063291549683, 0.6419802308082581, 0.6180692911148071, 0.6078362464904785, 0.5615626573562622, 0.5376768708229065, 0.5198485255241394, 0.5188900232315063, 0.5243334770202637, 0.5233086943626404, 0.5205933451652527, 0.49971145391464233, 0.5061557292938232, 0.488468736410141, 0.49373379349708557, 0.4866964519023895, 0.4823625981807709, 0.48472413420677185, 0.471526563167572, 0.4736769199371338, 0.46955356001853943, 0.47125381231307983, 0.4678977131843567, 0.457367867231369, 0.4592316746711731, 0.457572340965271], "val_accuracy": [0.39666667580604553, 0.4359999895095825, 0.6549999713897705, 0.6936666369438171, 0.7233333587646484, 0.7329999804496765, 0.7566666603088379, 0.7646666765213013, 0.7736666798591614, 0.7630000114440918, 0.7860000133514404, 0.7919999957084656, 0.8040000200271606, 0.8036666512489319, 0.7933333516120911, 0.796999990940094, 0.8023333549499512, 0.8056666851043701, 0.8100000023841858, 0.8236666917800903, 0.8180000185966492, 0.8216666579246521, 0.8323333263397217, 0.8326666951179504, 0.8373333215713501, 0.824999988079071, 0.8456666469573975, 0.8426666855812073, 0.8343333601951599, 0.8373333215713501, 0.8443333506584167, 0.8399999737739563]}, "mapping_values": [1, 10, 5, 5, 3, 2, 2, 0, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 0, 1, 1], [0, 1, 2], [0, 4, 2], [0], [1], [0], [2], [0]], "fitness": -0.828000009059906, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, beta))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5099563598632812, 0.8689610958099365, 0.6780818104743958, 0.622997522354126, 0.5853532552719116, 0.5576242804527283, 0.5384824275970459, 0.542121171951294, 0.5018479228019714, 0.5320063233375549, 0.5024151802062988, 0.5293325185775757, 0.5453774929046631, 0.5509979128837585, 0.5322362780570984, 0.48714423179626465, 0.50248783826828, 0.5108470320701599, 0.4708603620529175, 0.46422114968299866, 0.4935128390789032, 0.47060132026672363, 0.48189184069633484, 0.5165234804153442], "accuracy": [0.47985735535621643, 0.7071720957756042, 0.7512878179550171, 0.7623828053474426, 0.7755910754203796, 0.7965922355651855, 0.8090080618858337, 0.8127063512802124, 0.8169330358505249, 0.8141592741012573, 0.8203672170639038, 0.8171972036361694, 0.8208954930305481, 0.8178576231002808, 0.8181217908859253, 0.8261788487434387, 0.8302733898162842, 0.8248580098152161, 0.8325188159942627, 0.8388587832450867, 0.8409721255302429, 0.8321225643157959, 0.8426892161369324, 0.8261788487434387], "val_loss": [0.7917288541793823, 0.6145051121711731, 0.5483443737030029, 0.4837151765823364, 0.4850368797779083, 0.4851783812046051, 0.4959394037723541, 0.47675105929374695, 0.4537917375564575, 0.4716413915157318, 0.4904954135417938, 0.5219595432281494, 0.5034070611000061, 0.5310338735580444, 0.4756125807762146, 0.46243709325790405, 0.5201603770256042, 0.4645934998989105, 0.4989584982395172, 0.48705172538757324, 0.4863489270210266, 0.5263144373893738, 0.48559725284576416, 0.4959541857242584], "val_accuracy": [0.7233333587646484, 0.7713333368301392, 0.7903333306312561, 0.8370000123977661, 0.8196666836738586, 0.8289999961853027, 0.8410000205039978, 0.843999981880188, 0.8376666903495789, 0.8346666693687439, 0.8473333120346069, 0.8323333263397217, 0.8483333587646484, 0.843999981880188, 0.8393333554267883, 0.840666651725769, 0.8536666631698608, 0.8526666760444641, 0.8579999804496765, 0.8489999771118164, 0.847000002861023, 0.8516666889190674, 0.8486666679382324, 0.8516666889190674]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [3, 2, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3], [28, 16], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [6, 1, 6, 1, 2, 0, 2, 6, 3, 6], [4, 7, 3, 5, 5, 3, 6, 3, 1, 0], [87, 73], [0, 1, 1], [7, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 6, 3, 3, 1, 20, 10, 10, 1, 3, 1, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.multiply(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.math.negative(grad), grad), tf.math.add(tf.math.divide_no_nan(tf.math.multiply(sigma, grad), tf.math.divide_no_nan(grad, sigma)), grad)), sigma), alpha), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, beta)", "other_info": {"loss": [2.304535150527954, 2.304403305053711, 2.305595636367798, 2.3110992908477783, 2.3136816024780273, 2.3228847980499268, 2.3315322399139404], "accuracy": [0.09140139818191528, 0.1010434553027153, 0.09840179979801178, 0.09509972482919693, 0.09985470771789551, 0.1006472036242485, 0.09259014576673508], "val_loss": [2.3027448654174805, 2.303022861480713, 2.3039653301239014, 2.3055498600006104, 2.3060574531555176, 2.314223051071167, 2.31312894821167], "val_accuracy": [0.10199999809265137, 0.10400000214576721, 0.09833333641290665, 0.09799999743700027, 0.09833333641290665, 0.09799999743700027, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 8, 3, 5, 3], [1, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [97, 16], [0, 1], [0], [4], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 2, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 10, 6, 4, 2, 2, 1, 1, 0, 16, 8, 8, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(beta), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 3, 3, 0, 3], [0, 0, 1, 0, 2], [39, 69, 78], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 4, 5, 3], [53, 8], [0, 1], [0], [2], [99], [1, 0], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [56903132.0, 8444472320.0, 143274180608.0, 1011506085888.0, 4535373791232.0, 14931467436032.0], "accuracy": [0.09826971590518951, 0.09826971590518951, 0.09906221181154251, 0.10421344637870789, 0.10434553027153015, 0.10579843819141388], "val_loss": [586636736.0, 31616546816.0, 339336724480.0, 1849932775424.0, 6929243963392.0, 20439342514176.0], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [1, 0, 3, 0, 2], [83, 99, 27], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 4, 1, 3, 4, 2, 4, 5], [0, 4, 1, 3, 5, 1, 0], [16, 16], [0, 1, 0, 1, 1], [7, 3, 5, 2, 3, 9], [0, 7, 3], [0, 73], [0, 1], [0], [1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 15, 8, 7, 2, 5, 2, 3, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(grad, tf.math.add(alpha, grad)), tf.math.pow(tf.math.square(grad), alpha))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]