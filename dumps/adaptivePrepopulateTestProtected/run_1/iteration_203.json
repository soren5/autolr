[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8708571195602417, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223649024963379, 1.8699860572814941, 1.3905024528503418, 1.098613977432251, 0.9424744844436646, 0.8382240533828735, 0.7763913869857788, 0.7347729206085205, 0.6884158849716187, 0.6517821550369263, 0.6370949149131775, 0.6113658547401428, 0.5911855101585388, 0.5739825367927551, 0.5629085898399353, 0.5463846921920776, 0.5437481999397278, 0.5157166719436646, 0.5134723782539368, 0.5015912652015686, 0.48673105239868164, 0.47147029638290405, 0.4561552107334137, 0.4536210894584656, 0.4466303288936615, 0.4396350085735321, 0.4317656457424164, 0.4272476136684418, 0.415610671043396, 0.4123450815677643, 0.40498411655426025, 0.39670202136039734, 0.3959674537181854, 0.37258729338645935, 0.374825119972229, 0.3730611205101013, 0.37012508511543274, 0.3621906042098999, 0.35256314277648926], "accuracy": [0.26337340474128723, 0.4881785809993744, 0.5708624720573425, 0.6203936338424683, 0.6625280380249023, 0.7029454708099365, 0.7197200059890747, 0.7310791015625, 0.7464007139205933, 0.761590301990509, 0.7685906887054443, 0.7781006693840027, 0.7885351777076721, 0.7921014428138733, 0.7977809906005859, 0.8038568496704102, 0.8035926818847656, 0.8131026029586792, 0.8140271902084351, 0.8210275769233704, 0.8189142942428589, 0.8347642421722412, 0.83119797706604, 0.8362171649932861, 0.8379341959953308, 0.8426892161369324, 0.8450667262077332, 0.8467837572097778, 0.8516708612442017, 0.8536521196365356, 0.8548408150672913, 0.8562937378883362, 0.8558974862098694, 0.8652753829956055, 0.8667283058166504, 0.8626337051391602, 0.8654074668884277, 0.8684453964233398, 0.8746532797813416], "val_loss": [2.037109375, 1.5096924304962158, 1.0272103548049927, 0.8127390742301941, 0.7235564589500427, 0.6665716767311096, 0.6214166879653931, 0.5944108963012695, 0.5710232853889465, 0.5418275594711304, 0.5295860171318054, 0.5084756016731262, 0.4969319701194763, 0.48855477571487427, 0.47501635551452637, 0.46532702445983887, 0.45992422103881836, 0.4514100253582001, 0.4454799294471741, 0.44055357575416565, 0.4374508857727051, 0.4258389174938202, 0.4175378680229187, 0.4129677712917328, 0.40841954946517944, 0.40527480840682983, 0.40399712324142456, 0.4040546119213104, 0.39951440691947937, 0.39650389552116394, 0.3892642557621002, 0.3846489191055298, 0.3865962624549866, 0.3813602030277252, 0.3812864124774933, 0.3781295716762543, 0.3762916624546051, 0.3730657696723938, 0.36918720602989197], "val_accuracy": [0.5519999861717224, 0.6643333435058594, 0.699999988079071, 0.7243333458900452, 0.7456666827201843, 0.765666663646698, 0.777999997138977, 0.7826666831970215, 0.7910000085830688, 0.7983333468437195, 0.8050000071525574, 0.8163333535194397, 0.8209999799728394, 0.8220000267028809, 0.8330000042915344, 0.8356666564941406, 0.8320000171661377, 0.8363333344459534, 0.8396666646003723, 0.8416666388511658, 0.8456666469573975, 0.8476666808128357, 0.8523333072662354, 0.8523333072662354, 0.8513333201408386, 0.8576666712760925, 0.8516666889190674, 0.8506666421890259, 0.8579999804496765, 0.8566666841506958, 0.8583333492279053, 0.8576666712760925, 0.856333315372467, 0.8643333315849304, 0.8583333492279053, 0.8583333492279053, 0.859666645526886, 0.862666666507721, 0.862666666507721]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 1], [0, 6, 5], [0, 5], [0], [0, 0, 1], [0, 5], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.847428560256958, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2921762466430664, 2.185391426086426, 1.7509547472000122, 1.3654260635375977, 1.0795671939849854, 0.9409928917884827, 0.8461880683898926, 0.8075140714645386, 0.7657803893089294, 0.7398257851600647, 0.7061673998832703, 0.6756910085678101, 0.6506824493408203, 0.616756021976471, 0.5970462560653687, 0.5938450694084167, 0.5625638365745544, 0.5547804236412048, 0.5489822030067444, 0.5473449230194092, 0.5224502682685852, 0.5258501172065735, 0.5253342390060425, 0.5079922080039978, 0.4983058273792267, 0.48298314213752747, 0.4723503589630127, 0.4724469482898712, 0.4747794568538666, 0.4459976851940155, 0.45109784603118896, 0.44564133882522583, 0.4487089216709137, 0.4312223792076111, 0.41385146975517273, 0.4202919900417328, 0.40935850143432617, 0.40705010294914246, 0.4028582274913788, 0.38573169708251953, 0.40030163526535034, 0.39037537574768066, 0.3791215419769287, 0.3732842803001404, 0.3753911852836609, 0.36216700077056885, 0.3539044260978699, 0.3440830707550049, 0.33632123470306396, 0.335324227809906], "accuracy": [0.13195087015628815, 0.3230748772621155, 0.43904373049736023, 0.5362567901611328, 0.62660151720047, 0.6631884574890137, 0.6892088055610657, 0.702681303024292, 0.7125874757766724, 0.7098137736320496, 0.7308149337768555, 0.7452120184898376, 0.7478536367416382, 0.7658169269561768, 0.7766477465629578, 0.7691190242767334, 0.7853652238845825, 0.7884030938148499, 0.7898560166358948, 0.7940827012062073, 0.7975168228149414, 0.7979130744934082, 0.7996301651000977, 0.8057059645652771, 0.8099326491355896, 0.8175934553146362, 0.816008448600769, 0.8245938420295715, 0.8183859586715698, 0.8280280232429504, 0.8297450542449951, 0.8330471515655518, 0.828820526599884, 0.8313300609588623, 0.8453308939933777, 0.8413683772087097, 0.8445383906364441, 0.8450667262077332, 0.8416325449943542, 0.8487650156021118, 0.8469158411026001, 0.8494254350662231, 0.8502179384231567, 0.8540483713150024, 0.8578787446022034, 0.8665962219238281, 0.8671245574951172, 0.8701624870300293, 0.8714832663536072, 0.8693699836730957], "val_loss": [2.2450060844421387, 2.0108988285064697, 1.136202335357666, 0.9212407469749451, 0.8143633008003235, 0.752326250076294, 0.7299094796180725, 0.6975904107093811, 0.6725165843963623, 0.6637974381446838, 0.6362272500991821, 0.6057514548301697, 0.5906350016593933, 0.5916590690612793, 0.5842075347900391, 0.5710299015045166, 0.5635225176811218, 0.5581373572349548, 0.5763257741928101, 0.5625176429748535, 0.5348638296127319, 0.5410412549972534, 0.5268487334251404, 0.5205866694450378, 0.5103272199630737, 0.5061142444610596, 0.5143057703971863, 0.5152410268783569, 0.5062745809555054, 0.5151751637458801, 0.5139244198799133, 0.5066802501678467, 0.4884795844554901, 0.4712941348552704, 0.4780551791191101, 0.5013917684555054, 0.47182756662368774, 0.47445419430732727, 0.45075365900993347, 0.4892970323562622, 0.5125795602798462, 0.48383593559265137, 0.46991464495658875, 0.47994568943977356, 0.47649919986724854, 0.4960097670555115, 0.5185572504997253, 0.49688032269477844, 0.49668097496032715, 0.4875885546207428], "val_accuracy": [0.40033334493637085, 0.4566666781902313, 0.6366666555404663, 0.6866666674613953, 0.6919999718666077, 0.7106666564941406, 0.7393333315849304, 0.7429999709129333, 0.7419999837875366, 0.7546666860580444, 0.7590000033378601, 0.7746666669845581, 0.7833333611488342, 0.7806666493415833, 0.7910000085830688, 0.7910000085830688, 0.7876666784286499, 0.8009999990463257, 0.8023333549499512, 0.7903333306312561, 0.8063333630561829, 0.8096666932106018, 0.8133333325386047, 0.812666654586792, 0.8169999718666077, 0.8183333277702332, 0.8223333358764648, 0.8209999799728394, 0.8303333520889282, 0.8190000057220459, 0.8276666402816772, 0.8316666483879089, 0.8383333086967468, 0.8446666598320007, 0.8446666598320007, 0.8360000252723694, 0.8396666646003723, 0.8299999833106995, 0.8463333249092102, 0.8450000286102295, 0.8473333120346069, 0.8450000286102295, 0.843666672706604, 0.8426666855812073, 0.8479999899864197, 0.847000002861023, 0.8426666855812073, 0.847000002861023, 0.847000002861023, 0.8479999899864197]}, "mapping_values": [1, 10, 5, 5, 3, 5, 3, 2, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 4, 1, 2, 6, 4, 1, 7, 6, 9], [0, 3, 3, 7, 6, 2, 1, 6], [0, 75], [1], [0], [2], [0]], "fitness": -0.8131428360939026, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.pow(sigma, tf.math.subtract(grad, grad)), tf.math.add(tf.math.divide_no_nan(beta, alpha), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6464656591415405, 0.900654137134552, 0.7153223156929016, 0.6306056380271912, 0.6159663200378418, 0.6266337633132935, 0.6069169044494629, 0.5799484848976135, 0.5321484804153442, 0.5543156266212463, 0.517715573310852, 0.579262912273407, 0.5657604336738586, 0.5381036400794983, 0.5576111078262329, 0.5125441551208496, 0.5680752396583557, 0.5503585934638977, 0.5742149353027344, 0.6111519932746887, 0.5910367369651794, 0.5973888039588928, 0.5789177417755127, 0.6269871592521667], "accuracy": [0.46770572662353516, 0.6959450244903564, 0.7374191284179688, 0.7685906887054443, 0.7781006693840027, 0.7732135653495789, 0.7957997918128967, 0.7895918488502502, 0.8133667707443237, 0.8197067975997925, 0.811649739742279, 0.7972526550292969, 0.8202351331710815, 0.8168009519577026, 0.8133667707443237, 0.8208954930305481, 0.8141592741012573, 0.8140271902084351, 0.8198388814926147, 0.8092722296714783, 0.806630551815033, 0.8157442808151245, 0.8109893202781677, 0.8149517774581909], "val_loss": [1.0120306015014648, 0.6679593324661255, 0.6091769337654114, 0.5427080392837524, 0.5217682123184204, 0.5218886137008667, 0.5250417590141296, 0.5142804384231567, 0.5277519822120667, 0.5279862880706787, 0.5433361530303955, 0.5392554402351379, 0.5402079820632935, 0.5206490159034729, 0.5545785427093506, 0.5050804615020752, 0.5842401385307312, 0.5245368480682373, 0.6279409527778625, 0.5419800281524658, 0.6326406002044678, 0.5210717916488647, 0.6356051564216614, 0.6172088384628296], "val_accuracy": [0.6916666626930237, 0.750333309173584, 0.7703333497047424, 0.7990000247955322, 0.809333324432373, 0.8190000057220459, 0.8143333196640015, 0.8220000267028809, 0.8153333067893982, 0.824999988079071, 0.8066666722297668, 0.8063333630561829, 0.8096666932106018, 0.8270000219345093, 0.8223333358764648, 0.8343333601951599, 0.8190000057220459, 0.8216666579246521, 0.8386666774749756, 0.8103333115577698, 0.8173333406448364, 0.8166666626930237, 0.8073333501815796, 0.8220000267028809]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 18, 10, 8, 2, 1, 0, 1, 0], "tree_depth": 17}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3], [2, 0, 1, 0, 2], [68, 29], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5], [3, 0, 2, 0, 3, 1, 0], [16, 87], [0, 1], [8, 9], [0], [99], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 2, 4, 8, 2, 4, 1, 4, 2, 8], [2, 1, 5, 2, 6, 1, 4, 5, 1, 5], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 7, 4, 3, 1, 2, 1, 1, 1, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, alpha)", "other_info": {"loss": [7.782662868499756, 62.23180389404297, 213.3556671142578, 531.968017578125, 1070.6661376953125, 1939.990966796875], "accuracy": [0.10077928751707077, 0.09959053993225098, 0.09774138033390045, 0.09721305221319199, 0.10289261490106583, 0.09655263274908066], "val_loss": [21.69911766052246, 101.95651245117188, 283.65655517578125, 619.490478515625, 1161.7103271484375, 1962.9578857421875], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 1, 0, 2, 2], [39, 39], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 4, 9, 4], [0, 1], [16, 16], [0, 0, 1, 0, 0, 1, 1], [2, 8, 5, 6], [0, 3, 3], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 5, 4, 4, 1, 8, 2, 0], [1, 5, 7, 2, 0], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 1, 0, 1, 1, 7, 4, 3, 1, 3, 2, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 3, 1, 3, 7], [0, 1, 1, 0, 0, 3], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 4, 2, 6, 3, 2, 7], [0, 2, 0, 3, 0, 2, 3, 1], [0, 48, 22], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 6, 8, 0, 4, 2, 8, 6, 5, 0, 9, 4, 2, 1, 5, 5, 0, 9, 4, 9], [0, 2, 7, 2, 5, 4, 2, 4], [67, 20, 18, 82], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 7, 0, 5, 3, 9], [0, 0, 1, 3, 2, 0, 4, 1, 0, 4, 4], [0, 82, 3, 27, 65, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 3, 16, 8, 8, 3, 17, 12, 5, 2, 27, 16, 11, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), tf.math.divide_no_nan(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(beta, grad), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(tf.math.pow(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), beta))), tf.math.add(tf.math.sqrt(grad), beta)), tf.math.divide_no_nan(tf.math.square(grad), tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.subtract(sigma, beta)), tf.math.pow(tf.math.subtract(tf.math.pow(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))), tf.math.negative(grad)), tf.math.square(tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), grad))))", "other_info": {"loss": [2.303101062774658, 2.3025851249694824, 2.3025851249694824, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3], [1, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 67], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 6, 9, 4, 2, 8], [3, 0, 0, 3, 0, 0, 3, 2, 2, 0], [16, 99, 76, 99, 61, 1]], "fitness": -0.09942857176065445, "mapping_values": [1, 6, 3, 3, 1, 1, 0, 1, 1, 2, 1, 1, 0, 14, 8, 6, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.311856269836426, 2.323991060256958, 2.3499929904937744, 2.390559673309326, 2.4580605030059814, 2.569310426712036, 2.701857328414917, 2.686500072479248, 2.514427661895752, 2.440784454345703, 2.4558277130126953, 2.516587018966675, 2.60634183883667, 2.630338191986084, 2.5839946269989014], "accuracy": [0.09008057415485382, 0.0804385170340538, 0.07396645098924637, 0.068022720515728, 0.07158895581960678, 0.07145687192678452, 0.07436270266771317, 0.07740060985088348, 0.08677849918603897, 0.08453308790922165, 0.07290978729724884, 0.06260731816291809, 0.05904107913374901, 0.068022720515728, 0.07317395508289337], "val_loss": [2.315687894821167, 2.3365132808685303, 2.3708677291870117, 2.423661470413208, 2.509857654571533, 2.640880584716797, 2.7211320400238037, 2.5720295906066895, 2.441896915435791, 2.431875228881836, 2.4727489948272705, 2.5490431785583496, 2.623120069503784, 2.557054042816162, 2.588066816329956], "val_accuracy": [0.09266666322946548, 0.09300000220537186, 0.09166666865348816, 0.09133332967758179, 0.09399999678134918, 0.0963333323597908, 0.09833333641290665, 0.0963333323597908, 0.10066666454076767, 0.10166666656732559, 0.043666668236255646, 0.0273333340883255, 0.03500000014901161, 0.05433333292603493, 0.10133333504199982]}}]