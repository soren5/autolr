[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87371426820755, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2208547592163086, 1.8624979257583618, 1.3722436428070068, 1.0955519676208496, 0.9178754091262817, 0.8375728130340576, 0.7702651023864746, 0.7130398750305176, 0.6880782246589661, 0.6588989496231079, 0.6347857713699341, 0.609532356262207, 0.5918376445770264, 0.5759581923484802, 0.5602739453315735, 0.5432077050209045, 0.5293483734130859, 0.5153968334197998, 0.5087259411811829, 0.48960232734680176, 0.47925522923469543, 0.4681938588619232, 0.4665397107601166, 0.44876575469970703, 0.4449044466018677, 0.4394720792770386, 0.4317355155944824, 0.42675477266311646, 0.41794365644454956, 0.4133738577365875, 0.3985462188720703, 0.3947402834892273, 0.38993847370147705, 0.3822970390319824, 0.3821435272693634, 0.3714338541030884, 0.36171120405197144, 0.3637334108352661, 0.3584587574005127, 0.346829354763031, 0.3421517312526703, 0.3370020091533661, 0.33699482679367065, 0.3270680904388428, 0.322665274143219, 0.322502076625824, 0.3220296800136566, 0.3188757300376892, 0.30778267979621887], "accuracy": [0.2793554365634918, 0.49385812878608704, 0.5822216272354126, 0.6209219098091125, 0.6711134314537048, 0.696209192276001, 0.7199841737747192, 0.737947404384613, 0.7489103078842163, 0.7515519857406616, 0.7724210619926453, 0.7770439982414246, 0.7794214487075806, 0.7901201844215393, 0.7973847389221191, 0.8024039268493652, 0.8025360107421875, 0.8157442808151245, 0.8175934553146362, 0.8236692547798157, 0.8265751004219055, 0.8314621448516846, 0.8310658931732178, 0.8350284099578857, 0.8367455005645752, 0.8421608805656433, 0.8412362933158875, 0.8450667262077332, 0.8521991968154907, 0.852331280708313, 0.8558974862098694, 0.8585391640663147, 0.863029956817627, 0.8594637513160706, 0.8618412613868713, 0.8668603897094727, 0.8696341514587402, 0.8677849769592285, 0.8692378997802734, 0.8716153502464294, 0.8782195448875427, 0.8790120482444763, 0.876370370388031, 0.882710337638855, 0.8878615498542786, 0.8840311765670776, 0.8823140859603882, 0.8840311765670776, 0.8881257176399231], "val_loss": [2.0400285720825195, 1.511319637298584, 1.0421712398529053, 0.8442913293838501, 0.7550491690635681, 0.6998712420463562, 0.6557533144950867, 0.6179172992706299, 0.5981246829032898, 0.572820246219635, 0.5572530627250671, 0.5388716459274292, 0.5239112377166748, 0.5080597400665283, 0.49835148453712463, 0.4880608022212982, 0.4819546639919281, 0.4715821444988251, 0.46700283885002136, 0.45656120777130127, 0.4463428556919098, 0.44898751378059387, 0.43410271406173706, 0.4267461895942688, 0.42764022946357727, 0.42217713594436646, 0.4136224389076233, 0.4089515805244446, 0.41293469071388245, 0.4070909023284912, 0.3975130319595337, 0.39451920986175537, 0.3937724232673645, 0.3908687233924866, 0.38619011640548706, 0.38986894488334656, 0.3797370493412018, 0.3825356066226959, 0.37500694394111633, 0.3751796782016754, 0.37233707308769226, 0.36766183376312256, 0.37076854705810547, 0.3623661398887634, 0.36861321330070496, 0.36874303221702576, 0.3640476167201996, 0.36072680354118347, 0.3533261716365814], "val_accuracy": [0.515666663646698, 0.659333348274231, 0.6740000247955322, 0.6980000138282776, 0.7269999980926514, 0.7456666827201843, 0.7590000033378601, 0.7683333158493042, 0.7743333578109741, 0.7963333129882812, 0.7973333597183228, 0.8043333292007446, 0.812666654586792, 0.8199999928474426, 0.824999988079071, 0.8289999961853027, 0.8253333568572998, 0.8320000171661377, 0.8363333344459534, 0.8410000205039978, 0.8413333296775818, 0.8393333554267883, 0.8479999899864197, 0.8500000238418579, 0.846666693687439, 0.8486666679382324, 0.8523333072662354, 0.8533333539962769, 0.8496666550636292, 0.8536666631698608, 0.8543333411216736, 0.8546666502952576, 0.8560000061988831, 0.8576666712760925, 0.862666666507721, 0.856333315372467, 0.8640000224113464, 0.8583333492279053, 0.862333357334137, 0.8643333315849304, 0.8676666617393494, 0.8653333187103271, 0.8659999966621399, 0.871999979019165, 0.8663333058357239, 0.8690000176429749, 0.8683333396911621, 0.8653333187103271, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 1, 0, 0, 1], [0, 5, 3, 4, 8, 9], [0, 5], [0, 95], [1], [0], [2], [0]], "fitness": -0.8242856860160828, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.7252460718154907, 0.8508618474006653, 0.6989914178848267, 0.6131801009178162, 0.5874391198158264, 0.5607525706291199, 0.522901713848114, 0.5054373145103455, 0.4819938838481903, 0.47443830966949463, 0.44766950607299805, 0.4620271325111389, 0.4636279046535492, 0.43872174620628357, 0.4353049695491791, 0.45377540588378906, 0.44580042362213135, 0.45524412393569946, 0.44037315249443054, 0.4708583950996399, 0.47168809175491333], "accuracy": [0.46308282017707825, 0.7018887996673584, 0.7460044622421265, 0.7724210619926453, 0.7890635132789612, 0.7938185334205627, 0.8049134612083435, 0.8124422430992126, 0.8178576231002808, 0.8232730031013489, 0.8339717388153076, 0.8315942287445068, 0.8364813327789307, 0.8418967127799988, 0.8366134166717529, 0.8325188159942627, 0.835160493850708, 0.8364813327789307, 0.8413683772087097, 0.8348963260650635, 0.8330471515655518], "val_loss": [0.8022231459617615, 0.5943148136138916, 0.543980062007904, 0.5068697333335876, 0.4958222210407257, 0.4759529232978821, 0.4791598618030548, 0.4526660144329071, 0.46265584230422974, 0.4758976697921753, 0.45779988169670105, 0.45350438356399536, 0.47318676114082336, 0.4432923495769501, 0.46486717462539673, 0.45488256216049194, 0.4391041696071625, 0.45213907957077026, 0.5133211016654968, 0.5340818166732788, 0.5275856256484985], "val_accuracy": [0.7136666774749756, 0.7893333435058594, 0.8119999766349792, 0.8220000267028809, 0.8230000138282776, 0.8320000171661377, 0.8333333134651184, 0.8363333344459534, 0.8389999866485596, 0.8363333344459534, 0.8500000238418579, 0.8413333296775818, 0.8413333296775818, 0.8523333072662354, 0.8396666646003723, 0.8539999723434448, 0.8506666421890259, 0.8516666889190674, 0.8413333296775818, 0.8503333330154419, 0.843666672706604]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 8, 6, 2, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 4], [0, 2], [0], [0, 0, 0, 1, 1], [0, 8, 1], [0, 4], [0], [0, 1], [0], [1], [0]], "fitness": -0.8171428442001343, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294506311416626, 2.19468092918396, 1.7955776453018188, 1.3517754077911377, 1.0956170558929443, 0.9358052611351013, 0.8578540086746216, 0.8264623284339905, 0.7720101475715637, 0.7582759261131287, 0.7066669464111328, 0.6974802613258362, 0.6461148262023926, 0.6303888559341431, 0.6212170124053955, 0.6036857962608337, 0.5917841792106628, 0.5718525648117065, 0.5521361231803894, 0.5567739605903625, 0.542378842830658, 0.5187339186668396], "accuracy": [0.12296922504901886, 0.3218861520290375, 0.42689210176467896, 0.5326905250549316, 0.6318848133087158, 0.651168942451477, 0.689869225025177, 0.7016246318817139, 0.6963412761688232, 0.7141724824905396, 0.7256637215614319, 0.7383436560630798, 0.7539294958114624, 0.7660810947418213, 0.7648923397064209, 0.7684586048126221, 0.776251494884491, 0.7917051911354065, 0.7938185334205627, 0.7878747582435608, 0.7901201844215393, 0.8021397590637207], "val_loss": [2.2470593452453613, 2.032890558242798, 1.160474419593811, 0.8627027869224548, 0.7783607840538025, 0.736772358417511, 0.6888224482536316, 0.66888827085495, 0.6616378426551819, 0.6174806952476501, 0.5787385702133179, 0.5517140030860901, 0.5463408827781677, 0.5358895063400269, 0.5400441884994507, 0.5140819549560547, 0.49426740407943726, 0.4907445013523102, 0.4892900288105011, 0.4796164631843567, 0.48196786642074585, 0.4847854673862457], "val_accuracy": [0.4386666715145111, 0.4673333466053009, 0.6389999985694885, 0.6943333148956299, 0.718999981880188, 0.7246666550636292, 0.7306666374206543, 0.746666669845581, 0.7609999775886536, 0.7689999938011169, 0.7713333368301392, 0.7960000038146973, 0.7910000085830688, 0.7979999780654907, 0.800000011920929, 0.8063333630561829, 0.8316666483879089, 0.8243333101272583, 0.8113333582878113, 0.8213333487510681, 0.8270000219345093, 0.8180000185966492]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 5, 3, 3], [0, 2, 0, 2, 3], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 5, 0, 5], [0, 78], [0, 1], [0, 9], [0], [0], [1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 7], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 10, 6, 4, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.square(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [48987.99609375, 2.3028619289398193, 2.3035292625427246, 2.304500102996826, 2.305927276611328, 2.3075814247131348], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.302706718444824, 2.3032138347625732, 2.3040969371795654, 2.3053407669067383, 2.3069345951080322, 2.3088717460632324], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 82], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [1, 2, 3, 0, 3, 5, 7, 4, 3, 7, 9], [0, 2, 0, 3, 4, 5, 2, 0], [16, 16, 40, 94], [0, 1], [0], [0], [64], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 9, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 19, 11, 8, 4, 2, 1, 1, 1, 12, 7, 5, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.add(tf.math.pow(grad, grad), tf.math.multiply(beta, tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3031911849975586, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 0, 0, 2], [0, 1, 0, 2], [16, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 3, 2], [16, 16], [0, 1], [0], [1], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 6, 8, 1, 4, 6, 4, 2, 8], [0, 3, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 6, 3, 3, 1, 2, 1, 1, 0, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(sigma, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09457138925790787, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 2], [39, 39], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 2, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 9, 6, 8, 1, 4, 1, 4, 2, 0], [0, 3, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 18, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 1, 2, 1, 1, 1, 8, 5, 3, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(grad), tf.math.multiply(beta, tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(sigma), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30336332321167, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}]