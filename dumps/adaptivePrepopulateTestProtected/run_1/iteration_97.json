[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8579999804496765, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2239277362823486, 1.864586353302002, 1.3849800825119019, 1.0975219011306763, 0.9326674938201904, 0.8353477716445923, 0.7655487656593323, 0.706167459487915, 0.6720151901245117, 0.645887553691864, 0.6147586107254028, 0.5900985598564148, 0.5674830079078674, 0.5549960136413574, 0.5452472567558289, 0.5259141325950623, 0.5129169821739197, 0.5079996585845947, 0.490155965089798, 0.49129894375801086, 0.470917671918869, 0.46129217743873596, 0.4537157118320465, 0.4393760561943054, 0.428688108921051, 0.42807531356811523, 0.41486263275146484, 0.412854939699173, 0.4093121290206909, 0.3995467722415924, 0.39890992641448975, 0.38500866293907166, 0.38243013620376587, 0.3772098124027252, 0.3754146993160248, 0.3621354103088379, 0.3570205271244049, 0.35699462890625, 0.3469708561897278, 0.3424546420574188, 0.3333379626274109, 0.322420209646225], "accuracy": [0.25861841440200806, 0.48870691657066345, 0.5655791759490967, 0.6156386137008667, 0.6625280380249023, 0.7025492191314697, 0.7224937081336975, 0.7445515990257263, 0.7518161535263062, 0.7683265209197998, 0.7783648371696472, 0.7910447716712952, 0.7930260300636292, 0.7997622489929199, 0.8021397590637207, 0.8096684813499451, 0.8168009519577026, 0.8142913579940796, 0.8228767514228821, 0.8249900937080383, 0.8314621448516846, 0.8384625315666199, 0.8362171649932861, 0.8432175517082214, 0.8448025584220886, 0.8461233377456665, 0.8557654023170471, 0.847840428352356, 0.8512746095657349, 0.8556333184242249, 0.8558974862098694, 0.8640866279602051, 0.8621054291725159, 0.86553955078125, 0.8665962219238281, 0.8709549307823181, 0.8768987059593201, 0.8685774803161621, 0.874389111995697, 0.8780874609947205, 0.8799365758895874, 0.8816536664962769], "val_loss": [2.032813310623169, 1.499088168144226, 1.0265991687774658, 0.8209252953529358, 0.7311864495277405, 0.6731005907058716, 0.6277828216552734, 0.5901224613189697, 0.5639592409133911, 0.544126570224762, 0.5295907258987427, 0.5102342367172241, 0.5007645487785339, 0.48698410391807556, 0.4739033877849579, 0.4647998511791229, 0.4550948143005371, 0.44705402851104736, 0.4414779543876648, 0.43654096126556396, 0.4304238259792328, 0.4258520007133484, 0.42149266600608826, 0.41371622681617737, 0.40874719619750977, 0.40860888361930847, 0.39800286293029785, 0.4066919684410095, 0.3974055051803589, 0.3933398425579071, 0.3928823173046112, 0.38962695002555847, 0.38517627120018005, 0.38373705744743347, 0.3762889802455902, 0.37996670603752136, 0.37533101439476013, 0.37312301993370056, 0.36986321210861206, 0.37094080448150635, 0.3659299314022064, 0.3647419512271881], "val_accuracy": [0.5556666851043701, 0.6713333129882812, 0.6869999766349792, 0.715666651725769, 0.7540000081062317, 0.7693333625793457, 0.7756666541099548, 0.7876666784286499, 0.7906666398048401, 0.8013333082199097, 0.8090000152587891, 0.8113333582878113, 0.8130000233650208, 0.8196666836738586, 0.8226666450500488, 0.8286666870117188, 0.8306666612625122, 0.8349999785423279, 0.8389999866485596, 0.8373333215713501, 0.8366666436195374, 0.840666651725769, 0.8460000157356262, 0.8463333249092102, 0.846666693687439, 0.8463333249092102, 0.8503333330154419, 0.8496666550636292, 0.8496666550636292, 0.8546666502952576, 0.8506666421890259, 0.8553333282470703, 0.8503333330154419, 0.8553333282470703, 0.8583333492279053, 0.8566666841506958, 0.8613333106040955, 0.8566666841506958, 0.8603333234786987, 0.8606666922569275, 0.8603333234786987, 0.8613333106040955]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 2, 2, 6, 5, 5, 9, 7, 5], [0, 3, 4, 3], [0, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 7, 8, 6, 7], [0, 1, 5, 7], [0], [0, 1], [0], [1], [0]], "fitness": -0.8488571643829346, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.square(grad), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2916862964630127, 2.18585467338562, 1.7530834674835205, 1.3611462116241455, 1.054174542427063, 0.9221856594085693, 0.8387517929077148, 0.8237188458442688, 0.7663520574569702, 0.7378935217857361, 0.6979219913482666, 0.6714348793029785, 0.6485695838928223, 0.6245123147964478, 0.6098020672798157, 0.5996617078781128, 0.585162878036499, 0.5678676962852478, 0.5535233020782471, 0.5388638973236084, 0.5346526503562927, 0.5257965326309204, 0.5116909146308899, 0.504350483417511, 0.49373623728752136, 0.5012803673744202, 0.47991445660591125, 0.4638097882270813, 0.46046894788742065, 0.4542669653892517, 0.44442451000213623, 0.43777012825012207, 0.42572909593582153, 0.4156028926372528, 0.4135424494743347, 0.4113917350769043, 0.40128567814826965, 0.39667457342147827, 0.38277873396873474, 0.37619611620903015, 0.35821518301963806, 0.364842027425766, 0.3524966537952423, 0.35135015845298767, 0.3546164929866791, 0.35712099075317383], "accuracy": [0.1274600476026535, 0.3222824037075043, 0.4387795627117157, 0.5443138480186462, 0.6402060389518738, 0.6514331102371216, 0.689869225025177, 0.694360077381134, 0.7021529674530029, 0.7127195596694946, 0.7310791015625, 0.7390040755271912, 0.7541936039924622, 0.7580240368843079, 0.7614582180976868, 0.7683265209197998, 0.772288978099823, 0.7796856164932251, 0.7907806038856506, 0.7979130744934082, 0.7932901978492737, 0.7984414100646973, 0.8072909712791443, 0.8109893202781677, 0.8153480291366577, 0.8113855719566345, 0.8124422430992126, 0.8228767514228821, 0.8235371708869934, 0.8259146809577942, 0.8348963260650635, 0.8367455005645752, 0.8370096683502197, 0.8471800088882446, 0.8441421389579773, 0.8470479249954224, 0.8495575189590454, 0.8479725122451782, 0.8525954484939575, 0.8573504090309143, 0.8658037185668945, 0.858671247959137, 0.8643507957458496, 0.8681812286376953, 0.8647470474243164, 0.8668603897094727], "val_loss": [2.2460877895355225, 2.0112812519073486, 1.1299183368682861, 0.8862598538398743, 0.7861071825027466, 0.7319409847259521, 0.7085970044136047, 0.6797986626625061, 0.6541058421134949, 0.6200768351554871, 0.5881562232971191, 0.5678878426551819, 0.5522451996803284, 0.5528426766395569, 0.5408088564872742, 0.5240283012390137, 0.5154019594192505, 0.5241271257400513, 0.5175549983978271, 0.5056642889976501, 0.49401232600212097, 0.48773983120918274, 0.4848209321498871, 0.4774136543273926, 0.47835275530815125, 0.46532130241394043, 0.46327900886535645, 0.48209723830223083, 0.4531201124191284, 0.43977245688438416, 0.4419296979904175, 0.4479295313358307, 0.4443478286266327, 0.44217032194137573, 0.4349844455718994, 0.43377894163131714, 0.43323418498039246, 0.4317811131477356, 0.4252719283103943, 0.4262523651123047, 0.4088198244571686, 0.4066764712333679, 0.4317356050014496, 0.419208288192749, 0.4157840311527252, 0.41325855255126953], "val_accuracy": [0.42533332109451294, 0.437333345413208, 0.6396666765213013, 0.6903333067893982, 0.7183333039283752, 0.7350000143051147, 0.7336666584014893, 0.7570000290870667, 0.7683333158493042, 0.7853333353996277, 0.7793333530426025, 0.7963333129882812, 0.7996666431427002, 0.7983333468437195, 0.8043333292007446, 0.812666654586792, 0.8223333358764648, 0.8050000071525574, 0.8140000104904175, 0.8276666402816772, 0.8303333520889282, 0.8296666741371155, 0.8303333520889282, 0.8423333168029785, 0.8316666483879089, 0.8346666693687439, 0.8476666808128357, 0.8510000109672546, 0.8560000061988831, 0.8519999980926514, 0.8506666421890259, 0.8533333539962769, 0.8566666841506958, 0.8569999933242798, 0.8613333106040955, 0.8640000224113464, 0.862666666507721, 0.8633333444595337, 0.8539999723434448, 0.8679999709129333, 0.8706666827201843, 0.8679999709129333, 0.8659999966621399, 0.8666666746139526, 0.862333357334137, 0.8640000224113464]}, "mapping_values": [1, 10, 5, 5, 3, 13, 9, 4, 2, 9, 5, 4, 1, 2, 1, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8465714454650879, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4755418300628662, 0.7822328805923462, 0.6534249782562256, 0.5663501620292664, 0.528389573097229, 0.4981114864349365, 0.4996613562107086, 0.4867120683193207, 0.44491782784461975, 0.44747963547706604, 0.4449906051158905, 0.4340991675853729, 0.4640648365020752], "accuracy": [0.4935939908027649, 0.7207766771316528, 0.7567031979560852, 0.793422281742096, 0.8088759779930115, 0.8182538747787476, 0.817989706993103, 0.8305375576019287, 0.8413683772087097, 0.8450667262077332, 0.8367455005645752, 0.852859616279602, 0.8477083444595337], "val_loss": [0.7986176609992981, 0.5881956219673157, 0.5058399438858032, 0.468654066324234, 0.4486410319805145, 0.467306911945343, 0.4496561586856842, 0.4349515438079834, 0.48565271496772766, 0.45976126194000244, 0.5091320276260376, 0.4605517089366913, 0.5364780426025391], "val_accuracy": [0.7099999785423279, 0.778333306312561, 0.8133333325386047, 0.8289999961853027, 0.8416666388511658, 0.8379999995231628, 0.8423333168029785, 0.859333336353302, 0.8523333072662354, 0.8463333249092102, 0.8523333072662354, 0.8550000190734863, 0.8529999852180481]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 6], [0, 2, 0, 3, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 9, 3, 6, 8, 1, 4, 1, 0, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 11, 6, 5, 2, 2, 1, 1, 1, 17, 10, 7, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.negative(sigma)), tf.math.add(grad, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 3, 3, 8], [0, 1, 0, 2, 0], [39, 39, 52], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [8], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 0, 5, 8, 1], [0, 0, 0, 3, 4, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 1, 0, 1, 1, 2, 1, 1, 1, 21, 12, 9, 4], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma)), tf.math.square(grad)))), tf.constant(1.0, shape=shape, dtype=tf.float32))), grad), tf.math.sqrt(tf.math.subtract(alpha, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [40, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 3, 3, 0, 3, 5], [0, 2, 0, 3], [65, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 0, 2, 0], [16, 99, 50, 99, 61, 84, 15]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(beta), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3033230304718018, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 2, 3, 0, 3, 8, 8, 2, 5, 6, 9, 2, 9, 0, 8], [0, 1, 2, 2, 2], [39, 39, 93], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 6, 3, 5], [0, 2, 0, 3, 2], [16, 72], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 4, 8, 1, 4, 1, 4, 2, 8, 2], [0, 0, 4, 3, 3, 0, 3, 1, 2, 4, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.09114285558462143, "mapping_values": [1, 20, 15, 5, 3, 11, 6, 5, 2, 2, 1, 1, 1, 23, 12, 11, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.sqrt(tf.math.sqrt(grad)), tf.math.add(tf.math.square(grad), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(grad)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(tf.math.pow(tf.math.add(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(tf.math.add(alpha, beta))))), grad), beta)", "other_info": {"loss": [2.309830665588379, 2.3113667964935303, 2.3101863861083984, 2.31032133102417, 2.3111233711242676, 2.3101966381073], "accuracy": [0.09100515395402908, 0.0886276587843895, 0.09100515395402908, 0.08928807079792023, 0.09377889335155487, 0.09153348207473755], "val_loss": [2.3080084323883057, 2.3080084323883057, 2.3080084323883057, 2.3080084323883057, 2.3080084323883057, 2.3080084323883057], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}]