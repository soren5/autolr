[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8585714101791382, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294081449508667, 2.19219970703125, 1.7795039415359497, 1.346073031425476, 1.0830256938934326, 0.9252002835273743, 0.8569461703300476, 0.8198578953742981, 0.7698561549186707, 0.7478032112121582, 0.7056385278701782, 0.6751673817634583, 0.653102457523346, 0.6336509585380554, 0.6081119179725647, 0.5971027612686157, 0.5819708704948425, 0.5621397495269775, 0.559727132320404, 0.5470672845840454, 0.5355640649795532, 0.5393134355545044, 0.5206762552261353, 0.5266550779342651, 0.49758094549179077, 0.49089765548706055, 0.488848477602005, 0.47631409764289856, 0.4608813524246216, 0.4567349851131439, 0.44741544127464294, 0.44256770610809326, 0.434776246547699, 0.4114971160888672, 0.41415470838546753, 0.40254175662994385, 0.39783093333244324, 0.39269936084747314, 0.3792540729045868, 0.3792819380760193, 0.37136805057525635], "accuracy": [0.12402588874101639, 0.33020737767219543, 0.4360058009624481, 0.5359926223754883, 0.6365077495574951, 0.6553955674171448, 0.6900013089179993, 0.7053229212760925, 0.7028133869171143, 0.7047945857048035, 0.7322678565979004, 0.7391361594200134, 0.7467969655990601, 0.7553823590278625, 0.7630431652069092, 0.7720248103141785, 0.7794214487075806, 0.7795535326004028, 0.7829877138137817, 0.7895918488502502, 0.7918372750282288, 0.7891955971717834, 0.7998943328857422, 0.8004226684570312, 0.8035926818847656, 0.8103289008140564, 0.811649739742279, 0.8182538747787476, 0.8189142942428589, 0.8245938420295715, 0.830669641494751, 0.8343679904937744, 0.837141752243042, 0.8436138033866882, 0.8381983637809753, 0.8465195894241333, 0.8393871188163757, 0.8512746095657349, 0.8537842035293579, 0.8570862412452698, 0.8565579056739807], "val_loss": [2.2474045753479004, 2.026637077331543, 1.1450673341751099, 0.8798473477363586, 0.7654902338981628, 0.7100936770439148, 0.6746543049812317, 0.6615029573440552, 0.6522088050842285, 0.6163895130157471, 0.5832180380821228, 0.5620465278625488, 0.5545235872268677, 0.5451456904411316, 0.5334940552711487, 0.5175967812538147, 0.5067899823188782, 0.49853426218032837, 0.5013242363929749, 0.49065569043159485, 0.49115338921546936, 0.4794656038284302, 0.49117130041122437, 0.4747859835624695, 0.4662681519985199, 0.4606528580188751, 0.45562100410461426, 0.4474615752696991, 0.45049983263015747, 0.4342486262321472, 0.42547354102134705, 0.42144760489463806, 0.41289693117141724, 0.41945746541023254, 0.4251183271408081, 0.41152164340019226, 0.4098978340625763, 0.4041125774383545, 0.4017168879508972, 0.39672574400901794, 0.4089728891849518], "val_accuracy": [0.4180000126361847, 0.4690000116825104, 0.656000018119812, 0.6966666579246521, 0.7103333473205566, 0.7413333058357239, 0.7263333201408386, 0.749666690826416, 0.7390000224113464, 0.765666663646698, 0.7766666412353516, 0.7906666398048401, 0.7870000004768372, 0.7903333306312561, 0.793666660785675, 0.7996666431427002, 0.8066666722297668, 0.8066666722297668, 0.8026666641235352, 0.8119999766349792, 0.8090000152587891, 0.8153333067893982, 0.8080000281333923, 0.8183333277702332, 0.8246666789054871, 0.8286666870117188, 0.8349999785423279, 0.8373333215713501, 0.8303333520889282, 0.8386666774749756, 0.8403333425521851, 0.8479999899864197, 0.8510000109672546, 0.8536666631698608, 0.8550000190734863, 0.8613333106040955, 0.8569999933242798, 0.8583333492279053, 0.8603333234786987, 0.8566666841506958, 0.856333315372467]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8577142953872681, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2225871086120605, 1.862732172012329, 1.3872926235198975, 1.0877248048782349, 0.9247499704360962, 0.8418170213699341, 0.7706767916679382, 0.7382146716117859, 0.6999015808105469, 0.6719090938568115, 0.6502300500869751, 0.6312475204467773, 0.6055106520652771, 0.5915414690971375, 0.5718702077865601, 0.5493268370628357, 0.5442831516265869, 0.5291460156440735, 0.5164355635643005, 0.5051773190498352, 0.487278014421463, 0.4896399974822998, 0.47845518589019775, 0.4629342555999756, 0.45838528871536255, 0.4490327835083008, 0.43979427218437195, 0.43143898248672485, 0.4342459738254547, 0.4258098304271698, 0.40818870067596436, 0.41260185837745667, 0.40687891840934753, 0.39596688747406006, 0.3924473226070404, 0.3820174038410187, 0.3768187165260315], "accuracy": [0.2654867172241211, 0.4896314740180969, 0.5691454410552979, 0.6243560910224915, 0.6779817938804626, 0.700171709060669, 0.7214370369911194, 0.7362303733825684, 0.7449478507041931, 0.7553823590278625, 0.7622507214546204, 0.7670056819915771, 0.7784969210624695, 0.7853652238845825, 0.7910447716712952, 0.7993659973144531, 0.8001585006713867, 0.8098005652427673, 0.8140271902084351, 0.8181217908859253, 0.8269713521003723, 0.8226125836372375, 0.8293488025665283, 0.8318583965301514, 0.8368775844573975, 0.8383304476737976, 0.8433496356010437, 0.8486329317092896, 0.8425571322441101, 0.8486329317092896, 0.8510104417800903, 0.8548408150672913, 0.8556333184242249, 0.8588033318519592, 0.8607845902442932, 0.8639545440673828, 0.8631620407104492], "val_loss": [2.03828763961792, 1.5152292251586914, 1.048115849494934, 0.8435949683189392, 0.7499788403511047, 0.6953194737434387, 0.6550670862197876, 0.6169110536575317, 0.5896150469779968, 0.5692189335823059, 0.5495481491088867, 0.5283957123756409, 0.5184298157691956, 0.508987545967102, 0.4905109107494354, 0.4765932559967041, 0.46674662828445435, 0.46858760714530945, 0.45056599378585815, 0.4422895610332489, 0.43455925583839417, 0.4281323552131653, 0.4277273714542389, 0.41742345690727234, 0.41589176654815674, 0.41088274121284485, 0.4050348997116089, 0.4012700319290161, 0.3975129723548889, 0.3965502977371216, 0.3903394341468811, 0.3865007758140564, 0.38229870796203613, 0.3792293965816498, 0.3772484064102173, 0.37612515687942505, 0.3775826692581177], "val_accuracy": [0.527999997138977, 0.6340000033378601, 0.6853333115577698, 0.7013333439826965, 0.7229999899864197, 0.7473333477973938, 0.753000020980835, 0.7736666798591614, 0.7793333530426025, 0.7866666913032532, 0.79666668176651, 0.8059999942779541, 0.8076666593551636, 0.8100000023841858, 0.8206666707992554, 0.8230000138282776, 0.8339999914169312, 0.828000009059906, 0.8343333601951599, 0.847000002861023, 0.8423333168029785, 0.8486666679382324, 0.8450000286102295, 0.8483333587646484, 0.8516666889190674, 0.8519999980926514, 0.8569999933242798, 0.8569999933242798, 0.8573333621025085, 0.8560000061988831, 0.8610000014305115, 0.8679999709129333, 0.8636666536331177, 0.8656666874885559, 0.8679999709129333, 0.8663333058357239, 0.8653333187103271]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 5], [0], [0], [1], [0], [2], [0]], "fitness": -0.826285719871521, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5430729389190674, 0.8363431692123413, 0.7068267464637756, 0.6406337022781372, 0.5950413942337036, 0.5530750155448914, 0.5389994382858276, 0.5226379036903381, 0.4981899559497833, 0.48270460963249207, 0.49729856848716736, 0.5021501779556274, 0.47060781717300415, 0.45391878485679626, 0.46120113134384155, 0.4730922281742096, 0.4953930377960205, 0.48617005348205566], "accuracy": [0.47510236501693726, 0.700171709060669, 0.7429665923118591, 0.7637035846710205, 0.7781006693840027, 0.7931581139564514, 0.805177628993988, 0.8146876096725464, 0.8127063512802124, 0.8293488025665283, 0.8239334225654602, 0.8206313848495483, 0.8425571322441101, 0.8436138033866882, 0.8416325449943542, 0.8339717388153076, 0.824329674243927, 0.8354246616363525], "val_loss": [0.7611783146858215, 0.6212018132209778, 0.5508924722671509, 0.5185734629631042, 0.5037615299224854, 0.5168572068214417, 0.4874178171157837, 0.5159938335418701, 0.5484251976013184, 0.5456036925315857, 0.4831165075302124, 0.5216726064682007, 0.5488513112068176, 0.530318558216095, 0.5350112915039062, 0.5150722861289978, 0.5463899970054626, 0.5687276124954224], "val_accuracy": [0.7246666550636292, 0.7599999904632568, 0.7910000085830688, 0.8043333292007446, 0.8116666674613953, 0.8100000023841858, 0.8256666660308838, 0.8273333311080933, 0.8293333053588867, 0.8320000171661377, 0.8320000171661377, 0.8296666741371155, 0.8463333249092102, 0.8433333039283752, 0.8413333296775818, 0.8336666822433472, 0.8450000286102295, 0.8456666469573975]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 2, 5, 3], [0, 1, 2, 2], [39, 39], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [55], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [6, 3, 3, 6, 8, 1, 1, 1, 4, 2, 8, 1, 4, 9], [4, 0, 0, 3, 4, 0, 3, 1, 2, 0, 2], [8, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 1, 0, 1, 0, 2, 1, 1, 1, 25, 14, 11, 5], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.subtract(tf.math.subtract(tf.math.pow(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))), grad), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, alpha))), beta)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 4], [3, 2, 0, 3, 4], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 0, 8, 8, 4, 1, 8, 2, 8], [0, 0, 4, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 55]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 11, 6, 5, 1, 2, 1, 1, 1, 15, 9, 6, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [4724.78662109375, 3.0931522846221924, 3.027376651763916, 3.0789427757263184, 3.027376413345337, 3.027376651763916], "accuracy": [0.09932637959718704, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.0097014904022217, 3.0097014904022217, 3.0097014904022217, 3.0097014904022217, 3.0097014904022217, 3.0097014904022217], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [5, 2, 3, 0, 3, 6, 3, 6, 4, 5, 3, 2, 8], [0, 1, 0, 2, 3, 1, 0, 2, 0, 2], [39, 39, 83, 96], [0, 0, 1, 1], [0, 4], [0, 2, 0, 3], [0], [0, 1], [0], [0], [0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 0, 4, 1, 4, 2, 8, 5, 9, 1, 4, 9, 5, 5, 7, 0], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 32, 47, 82, 1, 58, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 13, 10, 4, 4, 2, 2, 1, 2, 1, 1, 1, 30, 20, 10, 7], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), grad), tf.math.divide_no_nan(tf.math.pow(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), grad)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.pow(tf.math.subtract(tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), sigma), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), sigma)))), alpha)), tf.math.add(tf.math.negative(beta), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 3, 0, 3], [0, 1, 0, 1], [39, 39], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [24, 16], [0, 1], [0], [0], [65], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 5, 3, 6, 8, 4, 2, 1, 4, 2, 8], [4, 1, 0, 3, 4, 0, 3, 1, 2, 0], [98, 99, 96, 99, 61, 1]], "fitness": -0.09485714137554169, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 17, 9, 8, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(alpha, tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))))), alpha)", "other_info": {"loss": [2.3104538917541504, 2.3100061416625977, 2.310216188430786, 2.310473918914795, 2.311258316040039, 2.3085715770721436], "accuracy": [0.0878351628780365, 0.08770307898521423, 0.09298639744520187, 0.09325055778026581, 0.08585391938686371, 0.09628847241401672], "val_loss": [2.308178663253784, 2.308178663253784, 2.308178663253784, 2.308178663253784, 2.308178663253784, 2.308178663253784], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]