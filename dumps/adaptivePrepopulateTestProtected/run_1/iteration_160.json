[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8625714182853699, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222625255584717, 1.8662545680999756, 1.381125807762146, 1.0842258930206299, 0.9254795908927917, 0.837367594242096, 0.7751210927963257, 0.7241119742393494, 0.6908047795295715, 0.6546509265899658, 0.6276997923851013, 0.6168680787086487, 0.5862156748771667, 0.5700223445892334, 0.5522461533546448, 0.5408154726028442, 0.5282573699951172, 0.5124285817146301, 0.5089352130889893, 0.48875805735588074, 0.4790235161781311, 0.4682154357433319, 0.462956964969635, 0.4577571451663971, 0.44519349932670593, 0.4423527717590332, 0.42811185121536255, 0.42437881231307983, 0.4109315872192383, 0.41299042105674744, 0.4000667929649353, 0.38720232248306274, 0.385796457529068, 0.3831385672092438, 0.3751811385154724, 0.36944031715393066, 0.36465805768966675, 0.35934779047966003, 0.35358119010925293, 0.34742772579193115, 0.3378545641899109, 0.3316453993320465, 0.3318358063697815, 0.3254285156726837, 0.3217753469944, 0.3118727207183838, 0.3173529803752899, 0.3094072937965393], "accuracy": [0.2806762754917145, 0.5013868808746338, 0.5758816599845886, 0.6250165104866028, 0.6724342703819275, 0.7041342258453369, 0.7228899598121643, 0.7437590956687927, 0.7511557340621948, 0.7631752490997314, 0.7744023203849792, 0.7765156626701355, 0.7847048044204712, 0.7915731072425842, 0.7967243194580078, 0.8058380484580994, 0.8109893202781677, 0.8161405324935913, 0.819442629814148, 0.8249900937080383, 0.8294808864593506, 0.8298771381378174, 0.8363492488861084, 0.8372738361358643, 0.8433496356010437, 0.8409721255302429, 0.848368763923645, 0.8492933511734009, 0.8558974862098694, 0.8504821062088013, 0.8577466607093811, 0.8598600029945374, 0.8617091774940491, 0.8631620407104492, 0.8660678863525391, 0.8696341514587402, 0.8698983192443848, 0.8698983192443848, 0.8709549307823181, 0.8732003569602966, 0.8768987059593201, 0.8815215826034546, 0.8849557638168335, 0.8768987059593201, 0.8833707571029663, 0.8874653577804565, 0.880729079246521, 0.8911636471748352], "val_loss": [2.0378224849700928, 1.506079077720642, 1.0322532653808594, 0.8345550298690796, 0.7511011362075806, 0.6979724764823914, 0.6535739898681641, 0.6223522424697876, 0.5930988192558289, 0.5746439695358276, 0.5560040473937988, 0.5366945266723633, 0.5281162261962891, 0.5131193995475769, 0.5113681554794312, 0.5023940205574036, 0.4910908341407776, 0.4845135807991028, 0.48171141743659973, 0.4683704078197479, 0.4575223922729492, 0.45759791135787964, 0.44598153233528137, 0.4567393362522125, 0.4408312141895294, 0.4306001663208008, 0.42957019805908203, 0.43091830611228943, 0.4214073121547699, 0.42310214042663574, 0.41735053062438965, 0.4115493893623352, 0.40385502576828003, 0.40526115894317627, 0.4020123779773712, 0.4043383002281189, 0.4029885530471802, 0.39926382899284363, 0.39573758840560913, 0.38913166522979736, 0.39122867584228516, 0.3837742209434509, 0.3814256489276886, 0.3908005654811859, 0.3807317316532135, 0.38281023502349854, 0.3880542516708374, 0.3910462260246277], "val_accuracy": [0.5400000214576721, 0.6700000166893005, 0.6840000152587891, 0.7093333601951599, 0.7289999723434448, 0.7446666955947876, 0.7570000290870667, 0.7643333077430725, 0.7773333191871643, 0.7886666655540466, 0.7863333225250244, 0.7993333339691162, 0.793666660785675, 0.8109999895095825, 0.8143333196640015, 0.8149999976158142, 0.8166666626930237, 0.8230000138282776, 0.8246666789054871, 0.8326666951179504, 0.8309999704360962, 0.8270000219345093, 0.8416666388511658, 0.8296666741371155, 0.8450000286102295, 0.8413333296775818, 0.8463333249092102, 0.843999981880188, 0.8473333120346069, 0.846666693687439, 0.8506666421890259, 0.8539999723434448, 0.8539999723434448, 0.8543333411216736, 0.8560000061988831, 0.856333315372467, 0.8539999723434448, 0.8529999852180481, 0.8553333282470703, 0.8583333492279053, 0.8583333492279053, 0.8613333106040955, 0.8633333444595337, 0.8613333106040955, 0.859333336353302, 0.862666666507721, 0.8610000014305115, 0.8600000143051147]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 1, 6, 1, 5, 9], [0, 0, 5], [0, 13, 1], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8494285941123962, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.math.subtract(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2927026748657227, 2.187429428100586, 1.7511305809020996, 1.3652931451797485, 1.0798189640045166, 0.9341772198677063, 0.8575490713119507, 0.8215742707252502, 0.7708542943000793, 0.7518189549446106, 0.6958596706390381, 0.6990551948547363, 0.6418130993843079, 0.620685875415802, 0.6038712859153748, 0.5933249592781067, 0.5833967924118042, 0.5637158751487732, 0.5546337962150574, 0.5332549810409546, 0.5309799909591675, 0.5184373259544373, 0.5019215941429138, 0.48958736658096313, 0.4879286289215088, 0.4765225052833557, 0.48019537329673767, 0.4702501893043518, 0.45543357729911804, 0.45161283016204834, 0.42650526762008667, 0.4387042224407196, 0.4112652838230133, 0.41487476229667664, 0.40522879362106323, 0.4080806374549866, 0.4025334119796753, 0.3886030614376068, 0.3837212920188904, 0.3778529465198517, 0.3739229440689087, 0.3671075701713562, 0.3541508615016937, 0.3474125564098358], "accuracy": [0.13419628143310547, 0.3255844712257385, 0.45027077198028564, 0.54220050573349, 0.6312243938446045, 0.6634526252746582, 0.6859067678451538, 0.6911900639533997, 0.7069079279899597, 0.7135120630264282, 0.7440232634544373, 0.7322678565979004, 0.755118191242218, 0.7662131786346436, 0.7633073329925537, 0.7769119143486023, 0.7853652238845825, 0.7836481332778931, 0.7824593782424927, 0.7988376617431641, 0.8035926818847656, 0.8062343001365662, 0.8053097128868103, 0.8152159452438354, 0.8166688680648804, 0.8181217908859253, 0.8074230551719666, 0.8214238286018372, 0.828820526599884, 0.8293488025665283, 0.8325188159942627, 0.8313300609588623, 0.8396512866020203, 0.8422929644584656, 0.8432175517082214, 0.8457271456718445, 0.8424250483512878, 0.8479725122451782, 0.8532558679580688, 0.8535200357437134, 0.8524633646011353, 0.8576145768165588, 0.859199583530426, 0.8619733452796936], "val_loss": [2.2456586360931396, 2.0147266387939453, 1.1314799785614014, 0.8691433668136597, 0.7757927775382996, 0.6921311616897583, 0.6512045860290527, 0.6298197507858276, 0.6368681788444519, 0.6221948266029358, 0.5847600102424622, 0.5489257574081421, 0.5364768505096436, 0.5108199119567871, 0.5200647115707397, 0.5059887170791626, 0.5043714642524719, 0.4950316250324249, 0.4853440821170807, 0.48660600185394287, 0.47636234760284424, 0.47440198063850403, 0.47010287642478943, 0.4661042392253876, 0.46064069867134094, 0.4549812972545624, 0.45065584778785706, 0.4430769979953766, 0.452178031206131, 0.4450908601284027, 0.4440757632255554, 0.43545567989349365, 0.42863979935646057, 0.43591204285621643, 0.4345463514328003, 0.4312888979911804, 0.43434324860572815, 0.42438849806785583, 0.42152953147888184, 0.41871941089630127, 0.42704805731773376, 0.4332258403301239, 0.4276444613933563, 0.4348442852497101], "val_accuracy": [0.43566668033599854, 0.45500001311302185, 0.6460000276565552, 0.6930000185966492, 0.7173333168029785, 0.7303333282470703, 0.7463333606719971, 0.7543333172798157, 0.7609999775886536, 0.7673333287239075, 0.765999972820282, 0.7886666655540466, 0.7919999957084656, 0.8066666722297668, 0.8040000200271606, 0.8080000281333923, 0.8073333501815796, 0.8243333101272583, 0.8243333101272583, 0.8140000104904175, 0.8306666612625122, 0.8370000123977661, 0.8343333601951599, 0.8309999704360962, 0.8383333086967468, 0.8423333168029785, 0.8423333168029785, 0.8489999771118164, 0.846666693687439, 0.846666693687439, 0.8496666550636292, 0.847000002861023, 0.8460000157356262, 0.8496666550636292, 0.8486666679382324, 0.8526666760444641, 0.8553333282470703, 0.862333357334137, 0.8643333315849304, 0.859333336353302, 0.8529999852180481, 0.8556666374206543, 0.8566666841506958, 0.8613333106040955]}, "mapping_values": [1, 10, 5, 5, 3, 9, 6, 3, 3, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 3, 7, 8, 4, 0, 4, 6, 2, 2, 9, 1, 9, 7], [0, 0, 6, 7, 4, 4, 1, 5], [0, 81, 27, 32], [1], [0], [2], [0]], "fitness": -0.8274285793304443, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.negative(tf.math.pow(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), grad)), tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), grad)), tf.math.add(grad, alpha)))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6252542734146118, 0.8590149879455566, 0.7042827606201172, 0.6378244757652283, 0.5832161903381348, 0.5610065460205078, 0.5295071601867676, 0.5402401089668274, 0.5100626945495605, 0.49637261033058167, 0.492404580116272, 0.4912107586860657, 0.49235305190086365, 0.4907549023628235, 0.4886990785598755, 0.5710635185241699, 0.5721338391304016, 0.5236152410507202, 0.5142702460289001, 0.5200355648994446, 0.5312197208404541, 0.4862429201602936, 0.481888085603714, 0.499820739030838], "accuracy": [0.48144233226776123, 0.7059833407402039, 0.7437590956687927, 0.7677981853485107, 0.7794214487075806, 0.7964601516723633, 0.804649293422699, 0.8137630224227905, 0.8124422430992126, 0.8161405324935913, 0.8202351331710815, 0.8251221776008606, 0.8244617581367493, 0.8364813327789307, 0.8264430165290833, 0.8182538747787476, 0.8047813773155212, 0.8248580098152161, 0.8285563588142395, 0.8224804997444153, 0.8334434032440186, 0.8255184292793274, 0.8366134166717529, 0.8339717388153076], "val_loss": [0.8883680105209351, 0.6286909580230713, 0.5546712279319763, 0.5366478562355042, 0.5431598424911499, 0.503339946269989, 0.5149592161178589, 0.47951847314834595, 0.4984508454799652, 0.5145605206489563, 0.46805089712142944, 0.4697090983390808, 0.5070860981941223, 0.49074292182922363, 0.5340924859046936, 0.5717288851737976, 0.501133143901825, 0.5649787783622742, 0.5195159912109375, 0.5080047845840454, 0.5123253464698792, 0.5120121240615845, 0.5585741400718689, 0.5597068071365356], "val_accuracy": [0.6676666736602783, 0.7770000100135803, 0.8040000200271606, 0.8026666641235352, 0.8106666803359985, 0.8140000104904175, 0.8253333568572998, 0.8379999995231628, 0.8263333439826965, 0.82833331823349, 0.8433333039283752, 0.8426666855812073, 0.8433333039283752, 0.8453333377838135, 0.8396666646003723, 0.843999981880188, 0.8330000042915344, 0.8446666598320007, 0.8546666502952576, 0.8446666598320007, 0.8423333168029785, 0.8516666889190674, 0.8423333168029785, 0.8460000157356262]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 22, 14, 8, 4, 1, 0, 1, 0], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 9], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 5, 0, 3, 5], [0, 2, 0, 3], [0, 66, 22, 99, 21, 80], [0, 1], [0], [0], [99], [0, 1, 1], [2, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 5, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.2759999930858612, "mapping_values": [1, 9, 6, 3, 3, 6, 4, 2, 1, 2, 1, 1, 1, 3, 1, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)", "other_info": {"loss": [2.2653701305389404, 2.2718582153320312, 2.3032543659210205, 2.3030576705932617, 2.302947521209717, 2.3029189109802246], "accuracy": [0.1442345827817917, 0.11068551242351532, 0.0956280529499054, 0.09998679161071777, 0.09602430462837219, 0.09813763201236725], "val_loss": [1.880835771560669, 2.3033106327056885, 2.302833318710327, 2.3025529384613037, 2.302603244781494, 2.3024954795837402], "val_accuracy": [0.2669999897480011, 0.09566666930913925, 0.09566666930913925, 0.10400000214576721, 0.10000000149011612, 0.10433333367109299]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 8, 0, 3], [0, 1, 0, 2], [83, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 18], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 8, 6, 8, 1, 4, 1, 1, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [9, 99, 95, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 10, 6, 4, 2, 2, 1, 1, 1, 20, 11, 9, 4], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.subtract(sigma, tf.math.add(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma)))), tf.math.sqrt(alpha))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 8, 3, 0, 3], [2, 1, 0, 2], [75, 21], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 8], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 6, 1, 6, 4, 4, 9, 6], [0, 0, 0, 4, 0, 0, 3, 2, 2, 0, 2, 3, 2, 5, 4], [16, 99, 96, 62, 61, 1, 80]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 0, 10, 6, 4, 2, 2, 1, 1, 1, 33, 18, 15, 7], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(grad), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.divide_no_nan(beta, beta)))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.divide_no_nan(tf.math.pow(tf.math.pow(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), beta), sigma), tf.math.divide_no_nan(beta, grad)), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 5, 3], [0, 1, 0, 2, 2], [84, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [4, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 1, 2, 4, 1, 7, 1, 9, 2, 1], [0, 0, 0, 3, 1, 0, 4, 1, 4, 0, 5, 7, 1, 6, 2, 5, 1], [31, 99, 10, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 10, 6, 4, 2, 2, 1, 1, 1, 37, 20, 17, 6], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(alpha, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.sqrt(tf.math.subtract(alpha, grad))))))), tf.math.add(tf.math.pow(tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(grad, alpha)), tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(beta, grad))))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}]