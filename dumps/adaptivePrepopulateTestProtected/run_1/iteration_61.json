[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8791428804397583, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224691152572632, 1.8683772087097168, 1.4013793468475342, 1.0939387083053589, 0.9551045894622803, 0.8530007004737854, 0.779485821723938, 0.7457146048545837, 0.7030880451202393, 0.6819782257080078, 0.646918535232544, 0.6262496709823608, 0.5985910296440125, 0.5927533507347107, 0.5734840035438538, 0.5512962341308594, 0.5397131443023682, 0.5306671261787415, 0.5227266550064087, 0.5091748833656311, 0.493897944688797, 0.4855693578720093, 0.4755500555038452, 0.46436217427253723, 0.4576524496078491, 0.4496408700942993, 0.4397708475589752, 0.4444425106048584, 0.4241836667060852, 0.43109697103500366, 0.4217256009578705, 0.40949341654777527, 0.40209436416625977, 0.40443363785743713, 0.39794257283210754, 0.3834945559501648, 0.3769911527633667, 0.3764527142047882, 0.3669157326221466, 0.37186846137046814, 0.36375153064727783, 0.35602423548698425, 0.3509747087955475, 0.3444776237010956, 0.3358671963214874, 0.32751885056495667, 0.33768701553344727, 0.3213590085506439, 0.3252784311771393, 0.32559001445770264, 0.3185674250125885, 0.3153201639652252, 0.30147793889045715, 0.30520761013031006, 0.2942403256893158, 0.29585933685302734, 0.29156526923179626, 0.28494489192962646, 0.2864094078540802, 0.2840997576713562, 0.28428274393081665, 0.27462372183799744, 0.2701452672481537, 0.26235172152519226, 0.26258987188339233, 0.25485068559646606, 0.25275006890296936, 0.2532438039779663, 0.25031259655952454, 0.24532482028007507, 0.2331540286540985, 0.2390974760055542, 0.23482851684093475, 0.23101423680782318, 0.22753727436065674, 0.22632567584514618], "accuracy": [0.25941091775894165, 0.4893673360347748, 0.55791836977005, 0.6210539937019348, 0.6567164063453674, 0.6983225345611572, 0.7206445932388306, 0.7283053994178772, 0.7486461400985718, 0.7526086568832397, 0.7619865536689758, 0.7676661014556885, 0.7792893648147583, 0.7816668748855591, 0.7922335267066956, 0.7997622489929199, 0.8053097128868103, 0.8055738806724548, 0.8107251524925232, 0.8133667707443237, 0.8222163319587708, 0.8226125836372375, 0.8300092220306396, 0.8327829837799072, 0.8310658931732178, 0.844010055065155, 0.8417646288871765, 0.8400475382804871, 0.846387505531311, 0.845859169960022, 0.8498216867446899, 0.8511425256729126, 0.8581429123878479, 0.8519350290298462, 0.8560295701026917, 0.8639545440673828, 0.8640866279602051, 0.8636903762817383, 0.8676528930664062, 0.8632941246032715, 0.86553955078125, 0.8687095642089844, 0.8733324408531189, 0.8751816153526306, 0.8776912093162537, 0.8792761564254761, 0.8746532797813416, 0.8809932470321655, 0.8815215826034546, 0.8833707571029663, 0.8837670087814331, 0.8850878477096558, 0.8930128216743469, 0.8902390599250793, 0.8947299122810364, 0.8943336606025696, 0.891559898853302, 0.8963148593902588, 0.89552241563797, 0.8947299122810364, 0.895918607711792, 0.8989565372467041, 0.9046360850334167, 0.9054285883903503, 0.9002773761749268, 0.9064852595329285, 0.9074098467826843, 0.9099194407463074, 0.9104477763175964, 0.915070652961731, 0.9157310724258423, 0.9129573106765747, 0.9148064851760864, 0.9124290347099304, 0.9171839952468872, 0.9171839952468872], "val_loss": [2.038526773452759, 1.510238766670227, 1.0447747707366943, 0.8352280259132385, 0.7531793713569641, 0.6963355541229248, 0.6498194932937622, 0.6246073842048645, 0.5953369736671448, 0.5716328024864197, 0.5562007427215576, 0.5438976287841797, 0.5279420018196106, 0.51389080286026, 0.5057971477508545, 0.49414271116256714, 0.482173353433609, 0.47447696328163147, 0.46831631660461426, 0.4581488370895386, 0.4518188536167145, 0.4512670934200287, 0.4456486403942108, 0.43329060077667236, 0.43261417746543884, 0.4205039143562317, 0.4206644594669342, 0.413736492395401, 0.4104427099227905, 0.40436092019081116, 0.4019021689891815, 0.401526540517807, 0.3927256762981415, 0.39569756388664246, 0.388218492269516, 0.39298149943351746, 0.3826553523540497, 0.3818466365337372, 0.3840924799442291, 0.3762838542461395, 0.3779735565185547, 0.3782140612602234, 0.3694102466106415, 0.3699958026409149, 0.36511310935020447, 0.366933137178421, 0.36473965644836426, 0.3623674213886261, 0.35939449071884155, 0.35847315192222595, 0.3595349192619324, 0.35298311710357666, 0.3535289168357849, 0.35462313890457153, 0.35054683685302734, 0.34882593154907227, 0.3493621349334717, 0.3531535565853119, 0.34503549337387085, 0.34384992718696594, 0.3448854088783264, 0.34570378065109253, 0.34537023305892944, 0.34840068221092224, 0.34696924686431885, 0.3487513065338135, 0.33932241797447205, 0.3398410975933075, 0.33569568395614624, 0.33905473351478577, 0.34274718165397644, 0.34127065539360046, 0.33783894777297974, 0.34692227840423584, 0.35144636034965515, 0.33920830488204956], "val_accuracy": [0.5683333277702332, 0.6576666831970215, 0.6836666464805603, 0.7106666564941406, 0.7303333282470703, 0.746666669845581, 0.7596666812896729, 0.7696666717529297, 0.7720000147819519, 0.7870000004768372, 0.7943333387374878, 0.800000011920929, 0.8013333082199097, 0.8119999766349792, 0.8103333115577698, 0.8133333325386047, 0.8209999799728394, 0.8266666531562805, 0.8293333053588867, 0.8296666741371155, 0.831333339214325, 0.8373333215713501, 0.8320000171661377, 0.8396666646003723, 0.8389999866485596, 0.8483333587646484, 0.8433333039283752, 0.8503333330154419, 0.8510000109672546, 0.8523333072662354, 0.8506666421890259, 0.8529999852180481, 0.8543333411216736, 0.8569999933242798, 0.8603333234786987, 0.8576666712760925, 0.859333336353302, 0.8576666712760925, 0.8550000190734863, 0.8643333315849304, 0.859666645526886, 0.8619999885559082, 0.8683333396911621, 0.8663333058357239, 0.8686666488647461, 0.8650000095367432, 0.8663333058357239, 0.8693333268165588, 0.8700000047683716, 0.8709999918937683, 0.8723333477973938, 0.8730000257492065, 0.875, 0.871999979019165, 0.8726666569709778, 0.875, 0.8759999871253967, 0.8723333477973938, 0.8763333559036255, 0.8743333220481873, 0.875, 0.8776666522026062, 0.875, 0.8756666779518127, 0.8759999871253967, 0.8763333559036255, 0.8796666860580444, 0.8806666731834412, 0.8769999742507935, 0.8790000081062317, 0.8840000033378601, 0.8790000081062317, 0.8796666860580444, 0.878333330154419, 0.878000020980835, 0.8816666603088379]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8674286007881165, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2214272022247314, 1.8639377355575562, 1.3911917209625244, 1.0935252904891968, 0.9289316534996033, 0.8369989991188049, 0.7811607122421265, 0.7222653031349182, 0.6896011829376221, 0.6569339036941528, 0.6353241801261902, 0.6122194528579712, 0.5933483839035034, 0.5785660743713379, 0.5597288012504578, 0.5473631620407104, 0.5364406108856201, 0.5199394822120667, 0.5167171359062195, 0.5031330585479736, 0.4959865212440491, 0.48103851079940796, 0.47024792432785034, 0.46321946382522583, 0.4590623676776886, 0.4528237283229828, 0.43818899989128113, 0.4358242154121399, 0.4208355247974396, 0.418346107006073, 0.42172685265541077, 0.4070023000240326, 0.40616413950920105, 0.39747950434684753, 0.3883935809135437, 0.3922109305858612, 0.38212400674819946, 0.3779487907886505, 0.36972469091415405, 0.3643285036087036, 0.366375207901001, 0.3542860746383667, 0.3469820022583008, 0.35278400778770447, 0.3422738015651703, 0.3383559584617615, 0.33602383732795715, 0.3285973072052002, 0.3213846981525421, 0.3203628659248352, 0.31574103236198425, 0.3174615502357483, 0.30991753935813904, 0.30361437797546387, 0.30239662528038025, 0.2937062978744507, 0.29248446226119995, 0.2832052707672119, 0.2772245407104492, 0.2771584391593933, 0.27805057168006897, 0.27461856603622437, 0.2650676369667053, 0.2627009153366089, 0.25450772047042847, 0.2598430812358856, 0.25617676973342896, 0.25261247158050537, 0.2539792060852051, 0.24107466638088226], "accuracy": [0.2677321434020996, 0.49966979026794434, 0.5671641826629639, 0.6240919232368469, 0.6670188903808594, 0.6991150379180908, 0.7205125093460083, 0.7321357727050781, 0.7497028112411499, 0.7658169269561768, 0.7708360552787781, 0.7792893648147583, 0.78113853931427, 0.7898560166358948, 0.798309326171875, 0.8018755912780762, 0.8070268034934998, 0.8108572363853455, 0.8171972036361694, 0.8206313848495483, 0.8273676037788391, 0.8289526104927063, 0.8363492488861084, 0.8335754871368408, 0.8413683772087097, 0.8378021121025085, 0.8471800088882446, 0.842028796672821, 0.8491612672805786, 0.8515387773513794, 0.8519350290298462, 0.8573504090309143, 0.8540483713150024, 0.8603883385658264, 0.8623695969581604, 0.858671247959137, 0.8650112152099609, 0.8668603897094727, 0.8701624870300293, 0.8710870146751404, 0.872407853603363, 0.8779553771018982, 0.876370370388031, 0.873860776424408, 0.8768987059593201, 0.8821820020675659, 0.880729079246521, 0.8823140859603882, 0.8853520154953003, 0.8883898854255676, 0.8887861371040344, 0.8874653577804565, 0.889050304889679, 0.8924844861030579, 0.8932769894599915, 0.8957865834236145, 0.8988244533538818, 0.902390718460083, 0.9027869701385498, 0.9034473896026611, 0.9005415439605713, 0.9039757251739502, 0.9062210917472839, 0.906749427318573, 0.9115044474601746, 0.9026548862457275, 0.9068815112113953, 0.9115044474601746, 0.9064852595329285, 0.9161273241043091], "val_loss": [2.0386579036712646, 1.5173276662826538, 1.0555176734924316, 0.8517890572547913, 0.7617403864860535, 0.7062845230102539, 0.6620252132415771, 0.6290543079376221, 0.6007091403007507, 0.5787631869316101, 0.5609300136566162, 0.5378814339637756, 0.5267347097396851, 0.5219953060150146, 0.49927327036857605, 0.48677030205726624, 0.4861246645450592, 0.4710058569908142, 0.4677298069000244, 0.4586239755153656, 0.4536759853363037, 0.44487881660461426, 0.4349985420703888, 0.4408966600894928, 0.4234411120414734, 0.42248332500457764, 0.41318750381469727, 0.41197651624679565, 0.4093742370605469, 0.404377818107605, 0.4046294689178467, 0.39698120951652527, 0.3942203223705292, 0.3922904431819916, 0.38965174555778503, 0.38174542784690857, 0.38620108366012573, 0.3819306194782257, 0.37792426347732544, 0.37326252460479736, 0.36772826313972473, 0.3692059814929962, 0.3646012246608734, 0.3649637997150421, 0.3584502041339874, 0.36005720496177673, 0.3618395924568176, 0.35685214400291443, 0.3521832227706909, 0.3550051748752594, 0.3514150381088257, 0.349172443151474, 0.3552151322364807, 0.34321972727775574, 0.35166776180267334, 0.34442374110221863, 0.3426177501678467, 0.3433287739753723, 0.33789512515068054, 0.33850914239883423, 0.3396989703178406, 0.33959099650382996, 0.3353848159313202, 0.3345079720020294, 0.3342406153678894, 0.33305859565734863, 0.33362308144569397, 0.33637022972106934, 0.3325636386871338, 0.3305560350418091], "val_accuracy": [0.5490000247955322, 0.6513333320617676, 0.668666660785675, 0.6946666836738586, 0.715666651725769, 0.7363333106040955, 0.746999979019165, 0.7603333592414856, 0.7673333287239075, 0.7773333191871643, 0.784333348274231, 0.8009999990463257, 0.8019999861717224, 0.8143333196640015, 0.8166666626930237, 0.8276666402816772, 0.8209999799728394, 0.831333339214325, 0.8289999961853027, 0.8420000076293945, 0.8360000252723694, 0.8433333039283752, 0.8429999947547913, 0.8413333296775818, 0.8506666421890259, 0.8486666679382324, 0.8539999723434448, 0.8546666502952576, 0.8546666502952576, 0.8600000143051147, 0.8536666631698608, 0.8640000224113464, 0.862333357334137, 0.8663333058357239, 0.8643333315849304, 0.8640000224113464, 0.8650000095367432, 0.8706666827201843, 0.8650000095367432, 0.8709999918937683, 0.874666690826416, 0.874666690826416, 0.8743333220481873, 0.8756666779518127, 0.8773333430290222, 0.871999979019165, 0.8759999871253967, 0.8743333220481873, 0.8790000081062317, 0.8799999952316284, 0.8776666522026062, 0.8833333253860474, 0.878000020980835, 0.8793333172798157, 0.8786666393280029, 0.8820000290870667, 0.8840000033378601, 0.8846666812896729, 0.8856666684150696, 0.8846666812896729, 0.887666642665863, 0.8849999904632568, 0.8849999904632568, 0.8830000162124634, 0.8889999985694885, 0.8849999904632568, 0.8883333206176758, 0.8856666684150696, 0.8889999985694885, 0.8849999904632568]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 8], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8514285683631897, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2915596961975098, 2.1846091747283936, 1.7599600553512573, 1.3252058029174805, 1.0595481395721436, 0.9069768190383911, 0.8333571553230286, 0.8125763535499573, 0.7624198794364929, 0.7421079277992249, 0.7043694853782654, 0.6880249977111816, 0.6664307117462158, 0.6226519346237183, 0.6164696216583252, 0.5916747450828552, 0.5766382217407227, 0.5631502270698547, 0.5563657283782959, 0.5346698760986328, 0.5212988257408142, 0.5173839330673218, 0.5065032243728638, 0.5016448497772217, 0.489935040473938, 0.48466846346855164, 0.46056169271469116, 0.45900875329971313, 0.4517156183719635, 0.44185131788253784, 0.4391572177410126, 0.432727187871933, 0.4296765923500061, 0.4267626106739044, 0.41191166639328003, 0.4023757576942444], "accuracy": [0.1340641975402832, 0.33060362935066223, 0.43230748176574707, 0.5577862858772278, 0.6383568644523621, 0.6546030640602112, 0.7016246318817139, 0.7057191729545593, 0.6977941989898682, 0.724739134311676, 0.7322678565979004, 0.7388719916343689, 0.7450799345970154, 0.76542067527771, 0.767930269241333, 0.7730814814567566, 0.783119797706604, 0.7832518815994263, 0.7893276810646057, 0.7951393723487854, 0.7952714562416077, 0.8080834746360779, 0.8080834746360779, 0.8094043135643005, 0.8131026029586792, 0.8140271902084351, 0.8309338092803955, 0.8277638554573059, 0.8273676037788391, 0.8337075710296631, 0.8388587832450867, 0.8376700282096863, 0.8399154543876648, 0.8358209133148193, 0.8474441766738892, 0.8524633646011353], "val_loss": [2.245382785797119, 2.0113179683685303, 1.1256225109100342, 0.8900817036628723, 0.774237871170044, 0.7211706638336182, 0.7010566592216492, 0.6795085072517395, 0.64835125207901, 0.6332523822784424, 0.5962415933609009, 0.583207368850708, 0.5634117722511292, 0.5606660842895508, 0.550586998462677, 0.541921079158783, 0.5190361738204956, 0.5201646685600281, 0.5160627961158752, 0.5105738043785095, 0.5105408430099487, 0.5146505236625671, 0.5066155791282654, 0.48782292008399963, 0.47592806816101074, 0.47571200132369995, 0.48247143626213074, 0.47398555278778076, 0.4631648361682892, 0.4648244082927704, 0.4586588144302368, 0.46710050106048584, 0.4583595395088196, 0.44938182830810547, 0.44592374563217163, 0.46110114455223083], "val_accuracy": [0.4203333258628845, 0.4506666660308838, 0.6433333158493042, 0.6863333582878113, 0.7080000042915344, 0.7226666808128357, 0.7276666760444641, 0.7456666827201843, 0.7456666827201843, 0.7480000257492065, 0.7680000066757202, 0.7756666541099548, 0.7820000052452087, 0.7853333353996277, 0.7900000214576721, 0.7943333387374878, 0.8100000023841858, 0.8040000200271606, 0.8043333292007446, 0.812666654586792, 0.8203333616256714, 0.8206666707992554, 0.8209999799728394, 0.8209999799728394, 0.8320000171661377, 0.8393333554267883, 0.8320000171661377, 0.8330000042915344, 0.8389999866485596, 0.8413333296775818, 0.8496666550636292, 0.8463333249092102, 0.8429999947547913, 0.843999981880188, 0.8476666808128357, 0.8396666646003723]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8385714292526245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5646377801895142, 0.8487600684165955, 0.6967323422431946, 0.6185150742530823, 0.5896031856536865, 0.5575199127197266, 0.5222209692001343, 0.47474411129951477, 0.4680965542793274, 0.47051432728767395, 0.45610368251800537, 0.44860783219337463, 0.47321388125419617, 0.4475361108779907, 0.4517553150653839, 0.4570123255252838], "accuracy": [0.47127196192741394, 0.705058753490448, 0.7448157668113708, 0.7709681391716003, 0.7858935594558716, 0.7977809906005859, 0.8031964302062988, 0.8269713521003723, 0.8304054737091064, 0.8309338092803955, 0.8360850811004639, 0.8418967127799988, 0.8409721255302429, 0.8359529972076416, 0.8424250483512878, 0.8413683772087097], "val_loss": [0.7852547764778137, 0.6099071502685547, 0.5514119267463684, 0.5071722269058228, 0.4724704921245575, 0.45076990127563477, 0.4610065221786499, 0.4459265470504761, 0.454242467880249, 0.4928906261920929, 0.4704846143722534, 0.505731999874115, 0.467020720243454, 0.4779646098613739, 0.4945133328437805, 0.47432616353034973], "val_accuracy": [0.737333357334137, 0.7713333368301392, 0.7960000038146973, 0.8166666626930237, 0.8299999833106995, 0.8413333296775818, 0.8349999785423279, 0.840666651725769, 0.8489999771118164, 0.8429999947547913, 0.8560000061988831, 0.8503333330154419, 0.8416666388511658, 0.8376666903495789, 0.8493333458900452, 0.8516666889190674]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 0, 8, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 53, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 21, 12, 9, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(grad, tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma)), tf.math.sqrt(tf.math.sqrt(alpha))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 0], [0, 3, 2, 0, 2], [83, 99, 27], [0, 1, 1], [6, 2, 3, 0, 3, 5], [0, 2, 0, 3], [0], [0, 1], [0, 3, 4, 6, 1, 2, 4, 2, 2, 6, 2, 4, 5, 7, 9, 0, 6, 5, 2], [0, 7, 2, 7, 4, 7, 4, 4, 7, 7, 3, 4, 7, 3], [52, 9], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 3, 1, 2, 1, 2, 1, 1, 1, 12, 6, 6, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.negative(grad), tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 7, 6, 0, 0], [0, 1, 0, 2, 2, 0], [39, 39, 98], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 2], [0, 2, 0, 3, 4], [16, 16], [0, 1], [0], [0], [53], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 3, 8], [1, 4, 0, 3, 4, 0, 3, 1, 2, 0, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 9, 6, 3, 11, 6, 5, 2, 2, 1, 1, 1, 23, 12, 11, 3], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.negative(tf.math.negative(grad)))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(grad, tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma)))), alpha)))), beta)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 1, 2, 3, 4, 7, 8, 6, 4, 9, 2], [0, 1, 0, 2, 3, 2, 0, 1, 3, 2, 1], [39, 81, 83, 49], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [24, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.subtract(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.pow(grad, grad), tf.math.add(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.math.pow(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)))))), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(sigma, alpha)), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}, "mapping_values": [1, 26, 15, 11, 4, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 21}]