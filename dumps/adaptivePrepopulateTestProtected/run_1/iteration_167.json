[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8585714101791382, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220862865447998, 1.862156867980957, 1.3778131008148193, 1.0801310539245605, 0.9274140000343323, 0.8286862373352051, 0.7641744017601013, 0.7235159277915955, 0.6869841814041138, 0.6631553173065186, 0.6334134936332703, 0.6218919157981873, 0.5865050554275513, 0.5770300030708313, 0.5611878633499146, 0.5577096939086914, 0.5428792238235474, 0.5206182599067688, 0.5143467783927917, 0.5001032948493958, 0.48727723956108093, 0.4833982586860657, 0.468213826417923, 0.4612410068511963, 0.4515141248703003, 0.43558016419410706, 0.44043847918510437, 0.4261758327484131, 0.42326807975769043, 0.41821521520614624, 0.41496267914772034, 0.4036174714565277, 0.39330804347991943, 0.3922198414802551, 0.380052387714386, 0.373912513256073, 0.3705875277519226, 0.36737462878227234, 0.36656445264816284, 0.3573633134365082], "accuracy": [0.2697133719921112, 0.4876502454280853, 0.5638620853424072, 0.6255448460578918, 0.6749438643455505, 0.7013604640960693, 0.7250033020973206, 0.7390040755271912, 0.752740740776062, 0.7626469135284424, 0.7693831920623779, 0.7777044177055359, 0.7918372750282288, 0.7897239327430725, 0.7975168228149414, 0.7997622489929199, 0.8039889335632324, 0.8104609847068787, 0.8178576231002808, 0.8220842480659485, 0.8253863453865051, 0.8251221776008606, 0.832650899887085, 0.8392550349235535, 0.837537944316864, 0.846387505531311, 0.8393871188163757, 0.8479725122451782, 0.8521991968154907, 0.8518029451370239, 0.852331280708313, 0.8590674996376038, 0.8609166741371155, 0.8622375130653381, 0.8625016212463379, 0.8697662353515625, 0.8704266548156738, 0.8677849769592285, 0.8651432991027832, 0.8747853636741638], "val_loss": [2.0392348766326904, 1.5043922662734985, 1.0365283489227295, 0.8343450427055359, 0.7472249269485474, 0.6864109635353088, 0.6463172435760498, 0.6030611991882324, 0.5800338983535767, 0.5629615783691406, 0.5486496686935425, 0.5260579586029053, 0.5160970091819763, 0.502246081829071, 0.5056301951408386, 0.4844396114349365, 0.47682854533195496, 0.47069376707077026, 0.4572945237159729, 0.4568759500980377, 0.4472326636314392, 0.441133588552475, 0.4338860809803009, 0.4297923147678375, 0.42252835631370544, 0.4214816987514496, 0.42655298113822937, 0.412252277135849, 0.4043423533439636, 0.40189045667648315, 0.407258540391922, 0.4004800319671631, 0.40335962176322937, 0.39137768745422363, 0.3879188597202301, 0.3870983123779297, 0.38741421699523926, 0.3849916160106659, 0.37925153970718384, 0.3740766644477844], "val_accuracy": [0.5446666479110718, 0.6613333225250244, 0.6759999990463257, 0.7053333520889282, 0.7336666584014893, 0.7526666522026062, 0.7556666731834412, 0.7736666798591614, 0.7860000133514404, 0.7886666655540466, 0.7983333468437195, 0.8106666803359985, 0.8036666512489319, 0.8180000185966492, 0.812666654586792, 0.8266666531562805, 0.8236666917800903, 0.82833331823349, 0.8343333601951599, 0.8309999704360962, 0.8366666436195374, 0.8423333168029785, 0.843999981880188, 0.840666651725769, 0.8486666679382324, 0.8456666469573975, 0.8413333296775818, 0.8506666421890259, 0.8516666889190674, 0.8506666421890259, 0.8473333120346069, 0.8526666760444641, 0.8526666760444641, 0.8546666502952576, 0.8629999756813049, 0.859666645526886, 0.8573333621025085, 0.8619999885559082, 0.8616666793823242, 0.8616666793823242]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 1], [0, 3, 3, 0], [0, 3, 0], [0, 0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8534285426139832, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294632911682129, 2.19559645652771, 1.7882847785949707, 1.3293471336364746, 1.0937151908874512, 0.9086722731590271, 0.8381525278091431, 0.809825599193573, 0.769303560256958, 0.7313313484191895, 0.6952333450317383, 0.6725481152534485, 0.6512535214424133, 0.6280450224876404, 0.6089668869972229, 0.5928353071212769, 0.5763124227523804, 0.5499184727668762, 0.5506547093391418, 0.5468958020210266, 0.5240970849990845, 0.5174006223678589, 0.5101721882820129, 0.49715089797973633, 0.4793665409088135, 0.4669399559497833, 0.4579535126686096, 0.4510892331600189, 0.4485594928264618, 0.43861374258995056, 0.44043222069740295, 0.4242563247680664, 0.417530357837677, 0.40762943029403687, 0.3896232843399048, 0.39160028100013733, 0.3793933093547821, 0.3894716799259186, 0.36894938349723816, 0.3710709512233734, 0.3674481213092804, 0.35615304112434387, 0.3621344566345215, 0.34872838854789734, 0.3406792879104614, 0.3425847291946411, 0.3392055630683899, 0.33212313055992126, 0.3267078697681427, 0.3161185681819916, 0.3170210123062134, 0.3146136403083801, 0.3197777569293976, 0.3068252205848694, 0.30509239435195923, 0.29271477460861206, 0.30002596974372864, 0.2969663739204407, 0.28360623121261597, 0.29110953211784363], "accuracy": [0.12600713968276978, 0.3159424066543579, 0.4383833110332489, 0.550521731376648, 0.6380926966667175, 0.6704530715942383, 0.6925109028816223, 0.7022850513458252, 0.6996433734893799, 0.7205125093460083, 0.7368907928466797, 0.7371549606323242, 0.7535332441329956, 0.7598732113838196, 0.7703077793121338, 0.7729493975639343, 0.7716285586357117, 0.785101056098938, 0.7854973077774048, 0.7881389260292053, 0.802271842956543, 0.8038568496704102, 0.8064984679222107, 0.811649739742279, 0.8238013386726379, 0.8267071843147278, 0.826310932636261, 0.8315942287445068, 0.8323867321014404, 0.8329150676727295, 0.8343679904937744, 0.842028796672821, 0.8462554216384888, 0.8425571322441101, 0.8500858545303345, 0.852859616279602, 0.8565579056739807, 0.8551049828529358, 0.8618412613868713, 0.8557654023170471, 0.8564258217811584, 0.8626337051391602, 0.8594637513160706, 0.8643507957458496, 0.8673887252807617, 0.870030403137207, 0.8706908226013184, 0.8693699836730957, 0.8771628737449646, 0.876370370388031, 0.8786157965660095, 0.8717474341392517, 0.8758420348167419, 0.8766345381736755, 0.8751816153526306, 0.8842953443527222, 0.8813894987106323, 0.8865407705307007, 0.8865407705307007, 0.886672854423523], "val_loss": [2.2468433380126953, 2.0303735733032227, 1.1721967458724976, 0.9158191084861755, 0.7595457434654236, 0.7213612198829651, 0.6816675662994385, 0.6554198265075684, 0.6420377492904663, 0.632252037525177, 0.5866987109184265, 0.5719292759895325, 0.5551645755767822, 0.5462697148323059, 0.5340391397476196, 0.5310189723968506, 0.5198566913604736, 0.5060678124427795, 0.506801187992096, 0.506943941116333, 0.5018264055252075, 0.4987782835960388, 0.48913997411727905, 0.4768746793270111, 0.46519413590431213, 0.4555834233760834, 0.4518440067768097, 0.4542328417301178, 0.4558432102203369, 0.44709447026252747, 0.45054927468299866, 0.44883325695991516, 0.4391613304615021, 0.44391852617263794, 0.4385351538658142, 0.4379258155822754, 0.4448612332344055, 0.4391014277935028, 0.43044307827949524, 0.4337766170501709, 0.4323907494544983, 0.43628931045532227, 0.44289541244506836, 0.43017688393592834, 0.4382396340370178, 0.4457327425479889, 0.4333361089229584, 0.4353017210960388, 0.45220646262168884, 0.4388989210128784, 0.44655337929725647, 0.4480557441711426, 0.44265928864479065, 0.4249725639820099, 0.42339104413986206, 0.435519814491272, 0.44854801893234253, 0.43806231021881104, 0.4294068515300751, 0.4377911388874054], "val_accuracy": [0.4246666729450226, 0.4830000102519989, 0.6396666765213013, 0.6726666688919067, 0.7200000286102295, 0.7273333072662354, 0.7360000014305115, 0.7519999742507935, 0.7463333606719971, 0.7596666812896729, 0.765999972820282, 0.7756666541099548, 0.7773333191871643, 0.7893333435058594, 0.7913333177566528, 0.79666668176651, 0.8069999814033508, 0.8083333373069763, 0.8056666851043701, 0.8033333420753479, 0.8140000104904175, 0.8166666626930237, 0.8196666836738586, 0.824999988079071, 0.8303333520889282, 0.8320000171661377, 0.8326666951179504, 0.8326666951179504, 0.8349999785423279, 0.8373333215713501, 0.8339999914169312, 0.8363333344459534, 0.8399999737739563, 0.8396666646003723, 0.8423333168029785, 0.843666672706604, 0.8446666598320007, 0.8450000286102295, 0.8479999899864197, 0.8516666889190674, 0.8476666808128357, 0.8503333330154419, 0.8486666679382324, 0.8510000109672546, 0.8566666841506958, 0.8569999933242798, 0.8603333234786987, 0.8619999885559082, 0.8566666841506958, 0.8603333234786987, 0.8603333234786987, 0.8600000143051147, 0.862333357334137, 0.8633333444595337, 0.8659999966621399, 0.8656666874885559, 0.8600000143051147, 0.8619999885559082, 0.8613333106040955, 0.8629999756813049]}, "mapping_values": [1, 10, 5, 5, 3, 7, 4, 3, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8242856860160828, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5565950870513916, 0.8234673738479614, 0.7003318071365356, 0.6978750228881836, 0.6236444711685181, 0.6032456755638123, 0.5899551510810852, 0.5523441433906555, 0.493463397026062, 0.4771813452243805, 0.4941175878047943, 0.5130254030227661, 0.5030588507652283, 0.5283359885215759, 0.5105986595153809], "accuracy": [0.4784044325351715, 0.7069079279899597, 0.7346453666687012, 0.7467969655990601, 0.7670056819915771, 0.78113853931427, 0.7876105904579163, 0.8035926818847656, 0.8195747137069702, 0.8215559124946594, 0.8156121969223022, 0.8278959393501282, 0.822348415851593, 0.8170651197433472, 0.828292191028595], "val_loss": [0.934306800365448, 0.6447348594665527, 0.5718503594398499, 0.624220073223114, 0.5817083120346069, 0.5826835036277771, 0.5806194543838501, 0.5659897327423096, 0.5531535744667053, 0.5333057641983032, 0.6559858322143555, 0.6579310894012451, 0.58988356590271, 0.6427156329154968, 0.6103275418281555], "val_accuracy": [0.6919999718666077, 0.765666663646698, 0.7870000004768372, 0.7850000262260437, 0.7976666688919067, 0.8216666579246521, 0.8140000104904175, 0.8309999704360962, 0.8330000042915344, 0.8383333086967468, 0.8273333311080933, 0.8263333439826965, 0.8206666707992554, 0.8213333487510681, 0.8320000171661377]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 0, 0], [2, 1, 0, 2], [39, 78], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 4, 3, 5, 0], [0, 2, 0, 3, 0], [16, 16, 90], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 0, 6, 8, 1, 4, 1, 4, 2, 9], [4, 0, 4, 4, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 1, 12, 7, 5, 3, 2, 1, 1, 1, 17, 9, 8, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.math.negative(tf.math.negative(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(grad), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 3, 0, 4], [0, 1, 0, 2, 0], [39, 13, 99], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 10, 6, 4, 2, 2, 1, 1, 1, 10, 5, 5, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), grad)), tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303701639175415, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [6, 2, 3, 0, 0], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 6, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 1], [4], [0, 7], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 22, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 2, 3, 1, 2, 1, 21, 11, 10, 5], "tree_depth": 18}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [9, 2, 3, 0, 3, 5], [0, 0, 2, 0, 3, 1, 0], [16, 16], [0, 1], [0], [0], [99, 91], [1], [0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0]], "fitness": -0.08971428871154785, "mapping_values": [1, 1, 0, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3101022243499756, 2.31000018119812, 2.3097221851348877, 2.3106157779693604, 2.310389280319214, 2.309901714324951], "accuracy": [0.0956280529499054, 0.0936468094587326, 0.09179764986038208, 0.08796724677085876, 0.09245806187391281, 0.0936468094587326], "val_loss": [2.308837890625, 2.308837890625, 2.308837890625, 2.308837890625, 2.308837890625, 2.308837890625], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]