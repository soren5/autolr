[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8679999709129333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2945077419281006, 2.1900131702423096, 1.775449275970459, 1.3365037441253662, 1.0425827503204346, 0.8979001641273499, 0.8251091837882996, 0.7940956354141235, 0.7550297379493713, 0.7212159037590027, 0.7024487257003784, 0.6764990091323853, 0.6500189900398254, 0.6333245038986206, 0.6123484373092651, 0.5860747694969177, 0.5831712484359741, 0.5660780072212219, 0.559002161026001, 0.5342444777488708, 0.5360380411148071, 0.5182926654815674, 0.5111504197120667, 0.5009772777557373, 0.49396830797195435, 0.4895307421684265, 0.47196710109710693, 0.4725513756275177, 0.4595222771167755, 0.4396161735057831, 0.4486156702041626, 0.43226781487464905, 0.42541319131851196, 0.4097273647785187, 0.40159571170806885, 0.39627569913864136, 0.40913698077201843, 0.38730210065841675, 0.38512328267097473, 0.37478694319725037, 0.36634883284568787, 0.373640239238739, 0.3538636267185211, 0.3595024049282074, 0.3361853063106537, 0.34871986508369446], "accuracy": [0.12178047746419907, 0.33205652236938477, 0.4353454113006592, 0.5481442213058472, 0.6460176706314087, 0.6723021864891052, 0.702681303024292, 0.7059833407402039, 0.7129837274551392, 0.7182670831680298, 0.7342491149902344, 0.7400607466697693, 0.7543256878852844, 0.7581561207771301, 0.7662131786346436, 0.7784969210624695, 0.7829877138137817, 0.7840443849563599, 0.7874785661697388, 0.7973847389221191, 0.7948752045631409, 0.8024039268493652, 0.8016114234924316, 0.8137630224227905, 0.8094043135643005, 0.816008448600769, 0.8216879963874817, 0.8201030492782593, 0.8304054737091064, 0.8300092220306396, 0.8301413059234619, 0.8362171649932861, 0.8384625315666199, 0.8442742228507996, 0.8459912538528442, 0.846387505531311, 0.8438779711723328, 0.8494254350662231, 0.8488970994949341, 0.857218325138092, 0.8638224601745605, 0.8578787446022034, 0.8683133125305176, 0.8589354157447815, 0.8685774803161621, 0.8647470474243164], "val_loss": [2.2465896606445312, 2.023669481277466, 1.1430071592330933, 0.9239776134490967, 0.7529210448265076, 0.6961434483528137, 0.6656956672668457, 0.6518244743347168, 0.6245047450065613, 0.6011032462120056, 0.5845105051994324, 0.5549589395523071, 0.5392968058586121, 0.5277913212776184, 0.528163492679596, 0.5159844756126404, 0.5055459141731262, 0.5029686093330383, 0.5043562650680542, 0.49529051780700684, 0.48966944217681885, 0.4833163321018219, 0.4782525300979614, 0.4680957794189453, 0.4719013571739197, 0.4498313069343567, 0.44149211049079895, 0.4566268026828766, 0.4403454661369324, 0.4470674693584442, 0.4567812383174896, 0.4429222345352173, 0.4444231688976288, 0.4336090087890625, 0.42204296588897705, 0.4467310309410095, 0.43646419048309326, 0.4204009473323822, 0.4406651556491852, 0.42323994636535645, 0.4356018900871277, 0.4291733503341675, 0.42420369386672974, 0.4266207814216614, 0.4278806149959564, 0.4415922462940216], "val_accuracy": [0.43033334612846375, 0.43700000643730164, 0.6420000195503235, 0.6743333339691162, 0.7210000157356262, 0.7393333315849304, 0.7519999742507935, 0.7580000162124634, 0.753333330154419, 0.7753333449363708, 0.7576666474342346, 0.781000018119812, 0.7820000052452087, 0.7943333387374878, 0.7973333597183228, 0.8036666512489319, 0.8016666769981384, 0.8119999766349792, 0.8090000152587891, 0.8113333582878113, 0.8196666836738586, 0.8159999847412109, 0.8183333277702332, 0.824999988079071, 0.8309999704360962, 0.8416666388511658, 0.8416666388511658, 0.8366666436195374, 0.8416666388511658, 0.8413333296775818, 0.843999981880188, 0.8443333506584167, 0.8489999771118164, 0.8493333458900452, 0.8550000190734863, 0.8510000109672546, 0.8489999771118164, 0.8533333539962769, 0.8479999899864197, 0.8556666374206543, 0.859333336353302, 0.8586666584014893, 0.8510000109672546, 0.8553333282470703, 0.8586666584014893, 0.8566666841506958]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8674286007881165, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220644235610962, 1.8554272651672363, 1.3811513185501099, 1.0865079164505005, 0.9423559308052063, 0.8443963527679443, 0.7754309177398682, 0.7281164526939392, 0.683994472026825, 0.6617884635925293, 0.6403224468231201, 0.6157258152961731, 0.594923734664917, 0.5831125378608704, 0.5552079081535339, 0.5469551086425781, 0.5304678082466125, 0.5229758620262146, 0.5074537396430969, 0.4914933443069458, 0.48616042733192444, 0.4798542857170105, 0.4682861566543579, 0.45689448714256287, 0.45901015400886536, 0.442970335483551, 0.434627890586853, 0.42990750074386597, 0.4248962998390198, 0.415280282497406, 0.40420570969581604, 0.400132954120636, 0.3966849148273468, 0.39228615164756775, 0.38765937089920044, 0.3765101134777069, 0.3811478018760681, 0.3700835406780243, 0.3610486090183258, 0.35115036368370056, 0.352477490901947, 0.3513151705265045, 0.34112969040870667, 0.33879876136779785, 0.3333956301212311, 0.3341151475906372, 0.33143550157546997, 0.32241907715797424, 0.3127811551094055, 0.31121835112571716, 0.2969760298728943, 0.3033655881881714, 0.300070196390152, 0.2961369752883911, 0.2850898206233978, 0.2852073907852173, 0.2765085995197296, 0.27008214592933655, 0.27446210384368896, 0.26474055647850037, 0.2649575471878052, 0.25466614961624146, 0.24780431389808655, 0.2552224099636078, 0.25087273120880127, 0.24373866617679596, 0.2412179559469223, 0.23752132058143616, 0.24001730978488922], "accuracy": [0.2759212851524353, 0.49729230999946594, 0.5690133571624756, 0.6192048788070679, 0.6633205413818359, 0.6997754573822021, 0.7207766771316528, 0.7360982894897461, 0.7549861073493958, 0.7601373791694641, 0.7670056819915771, 0.7741381525993347, 0.7861577272415161, 0.7887993454933167, 0.8029322624206543, 0.8033285140991211, 0.8087438941001892, 0.8146876096725464, 0.8190463781356812, 0.8272355198860168, 0.8241975903511047, 0.8286884427070618, 0.8294808864593506, 0.8372738361358643, 0.8416325449943542, 0.8449346423149109, 0.8451988101005554, 0.8448025584220886, 0.852859616279602, 0.8531237840652466, 0.8584070801734924, 0.8603883385658264, 0.8595958352088928, 0.8627657890319824, 0.8652753829956055, 0.8677849769592285, 0.8659358024597168, 0.8704266548156738, 0.8746532797813416, 0.8779553771018982, 0.8759741187095642, 0.878351628780365, 0.8786157965660095, 0.8819178342819214, 0.8823140859603882, 0.8796724081039429, 0.8825782537460327, 0.8850878477096558, 0.8930128216743469, 0.8911636471748352, 0.8944657444953918, 0.8936732411384583, 0.8947299122810364, 0.8920882344245911, 0.8957865834236145, 0.8985602855682373, 0.901862382888794, 0.9046360850334167, 0.8986923694610596, 0.9075419306755066, 0.9060890078544617, 0.91124027967453, 0.9103156924247742, 0.9078060984611511, 0.9129573106765747, 0.9125610589981079, 0.9124290347099304, 0.9133535623550415, 0.9108440279960632], "val_loss": [2.03949236869812, 1.5174684524536133, 1.0497403144836426, 0.8472840785980225, 0.7504425644874573, 0.7009925842285156, 0.6531957983970642, 0.6145535707473755, 0.5893986821174622, 0.5650709867477417, 0.5556057691574097, 0.5393129587173462, 0.5212087631225586, 0.513456404209137, 0.4992848336696625, 0.49311313033103943, 0.4844822585582733, 0.4722723662853241, 0.46303674578666687, 0.4627962112426758, 0.4547029733657837, 0.45093077421188354, 0.4429125487804413, 0.4351221024990082, 0.4333264231681824, 0.4261036813259125, 0.4245697557926178, 0.42295071482658386, 0.41659075021743774, 0.4110748767852783, 0.4136766791343689, 0.4059769809246063, 0.40114453434944153, 0.4061201512813568, 0.4008248746395111, 0.40395596623420715, 0.39475464820861816, 0.3956313133239746, 0.39711710810661316, 0.3895491659641266, 0.3840710520744324, 0.3844362795352936, 0.381959468126297, 0.37874341011047363, 0.3786042034626007, 0.37955424189567566, 0.38160282373428345, 0.3710537850856781, 0.3739432692527771, 0.3678428530693054, 0.3696447014808655, 0.3696708083152771, 0.365937739610672, 0.3646996319293976, 0.36471936106681824, 0.3651634156703949, 0.36198949813842773, 0.36581990122795105, 0.36121875047683716, 0.36546313762664795, 0.35679179430007935, 0.3669811189174652, 0.3635433614253998, 0.356668084859848, 0.3645766079425812, 0.3623606860637665, 0.35806912183761597, 0.3599822521209717, 0.3581802546977997], "val_accuracy": [0.5266666412353516, 0.6570000052452087, 0.6853333115577698, 0.703000009059906, 0.7426666617393494, 0.7593333125114441, 0.7620000243186951, 0.7803333401679993, 0.781000018119812, 0.7886666655540466, 0.7926666736602783, 0.79666668176651, 0.8026666641235352, 0.8073333501815796, 0.8083333373069763, 0.809333324432373, 0.8136666417121887, 0.8226666450500488, 0.8223333358764648, 0.8226666450500488, 0.8233333230018616, 0.8330000042915344, 0.8293333053588867, 0.8363333344459534, 0.8333333134651184, 0.8370000123977661, 0.8389999866485596, 0.840666651725769, 0.8453333377838135, 0.8476666808128357, 0.846666693687439, 0.8483333587646484, 0.8510000109672546, 0.8410000205039978, 0.8483333587646484, 0.8463333249092102, 0.8526666760444641, 0.847000002861023, 0.8519999980926514, 0.8546666502952576, 0.8583333492279053, 0.8556666374206543, 0.8600000143051147, 0.8600000143051147, 0.8586666584014893, 0.859000027179718, 0.8566666841506958, 0.8619999885559082, 0.8613333106040955, 0.8643333315849304, 0.8650000095367432, 0.8656666874885559, 0.8643333315849304, 0.8656666874885559, 0.8673333525657654, 0.8679999709129333, 0.8686666488647461, 0.8709999918937683, 0.8669999837875366, 0.8703333139419556, 0.8726666569709778, 0.8673333525657654, 0.8709999918937683, 0.874666690826416, 0.8703333139419556, 0.8713333606719971, 0.8723333477973938, 0.8690000176429749, 0.8696666955947876]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 0, 1, 0, 1], [0, 7, 7, 5], [0, 1, 5], [0], [1], [0], [2], [0]], "fitness": -0.833142876625061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6329110860824585, 0.8250234127044678, 0.6958757042884827, 0.6287526488304138, 0.5938444137573242, 0.5372189283370972, 0.5364784598350525, 0.545192301273346, 0.5203924179077148, 0.492348313331604, 0.4999503791332245, 0.47661229968070984, 0.47697654366493225, 0.47150301933288574, 0.5219821929931641, 0.5559309720993042, 0.5259223580360413, 0.5194391012191772, 0.5261953473091125, 0.5109444260597229], "accuracy": [0.4445911943912506, 0.7021529674530029, 0.739928662776947, 0.7666094303131104, 0.7845727205276489, 0.8018755912780762, 0.7997622489929199, 0.8129705190658569, 0.8132346868515015, 0.8182538747787476, 0.8215559124946594, 0.8327829837799072, 0.8230088353157043, 0.8337075710296631, 0.8204993009567261, 0.8162726163864136, 0.828820526599884, 0.8238013386726379, 0.8208954930305481, 0.828820526599884], "val_loss": [0.821858823299408, 0.6901434063911438, 0.591643214225769, 0.5748493075370789, 0.5509491562843323, 0.5355403423309326, 0.5437790155410767, 0.5568243265151978, 0.6059758067131042, 0.5710521936416626, 0.595325767993927, 0.5405083298683167, 0.5305027961730957, 0.5795275568962097, 0.6412891149520874, 0.5847108364105225, 0.5598149299621582, 0.5855410695075989, 0.5544538497924805, 0.5916287302970886], "val_accuracy": [0.6940000057220459, 0.7269999980926514, 0.781000018119812, 0.8029999732971191, 0.8106666803359985, 0.8063333630561829, 0.8196666836738586, 0.8146666884422302, 0.8083333373069763, 0.8353333473205566, 0.8220000267028809, 0.8293333053588867, 0.8316666483879089, 0.8163333535194397, 0.8386666774749756, 0.82833331823349, 0.8196666836738586, 0.8243333101272583, 0.8306666612625122, 0.8289999961853027]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 3, 0, 3], [0, 1, 2, 2], [39, 49], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 0, 6, 2, 1, 4, 1, 4, 2, 8], [0, 0, 1, 3, 0, 0, 3, 1, 2, 0], [16, 37, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.math.pow(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), alpha), sigma), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [5.388166427612305, 2.9064414501190186, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09826971590518951, 0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.565896987915039, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 3, 2, 1, 1, 6, 3, 3, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 16}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 3, 1, 3, 8, 1, 5, 0, 8], [0, 1, 0, 2, 1, 3], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 7, 1, 2, 5], [0, 2, 3, 3], [16, 87], [0, 1], [5], [0], [0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [6, 2, 3, 6, 8, 4, 4, 6, 4, 2, 8, 0, 2], [1, 3, 4, 4, 7, 7, 0, 2, 6, 7, 0], [20, 41, 70]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 10, 6, 2, 10, 6, 4, 1, 2, 1, 1, 1, 7, 3, 4, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), grad)), tf.math.subtract(alpha, tf.math.square(tf.math.negative(tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.add(grad, tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.add(tf.math.multiply(sigma, grad), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 9], [0, 0, 0, 0, 2], [76, 99, 27], [0, 0, 1, 1], [0, 7], [0, 5], [0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [7, 0, 6, 6, 7, 8, 1, 2, 3, 3, 1, 7, 6], [0, 1, 4, 3, 2, 7, 3, 1, 0, 3, 6, 0], [0, 49, 47], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 1, 25, 13, 12, 3, 2, 1, 1, 0], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.sqrt(tf.math.subtract(tf.math.add(grad, tf.math.multiply(sigma, tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(beta, grad), sigma), alpha), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), sigma))), grad)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303379535675049, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 2, 1, 0, 3, 6, 5, 1, 8, 2, 0], [0, 1, 0, 2, 1, 1, 0], [39, 39, 52], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 5, 1, 4, 1, 4, 2, 8, 0, 8, 0, 3], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 11, 7, 3, 1, 0, 1, 1, 2, 1, 1, 1, 26, 15, 11, 6], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.subtract(tf.math.sqrt(tf.math.add(tf.math.negative(alpha), alpha)), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.negative(alpha)))), beta)), tf.math.sqrt(tf.math.negative(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}]