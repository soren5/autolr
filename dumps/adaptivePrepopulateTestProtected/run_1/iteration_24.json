[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223330497741699, 1.8670156002044678, 1.3935511112213135, 1.1012579202651978, 0.9477801322937012, 0.8379126191139221, 0.7764281630516052, 0.7235901951789856, 0.6839449405670166, 0.6511124968528748, 0.6340097188949585, 0.6069210171699524, 0.5817078948020935, 0.5635776519775391, 0.5524153113365173, 0.5367791652679443, 0.5212588906288147, 0.5178380608558655, 0.5019086003303528, 0.4879888892173767, 0.4858485460281372, 0.4747111201286316, 0.45951735973358154, 0.4532293975353241, 0.4492609202861786, 0.4330301284790039, 0.4310648441314697, 0.42051371932029724, 0.41327017545700073, 0.4060419201850891, 0.3997148871421814, 0.39729252457618713, 0.3869434893131256, 0.3869549036026001, 0.38186177611351013, 0.3692651391029358, 0.36346086859703064, 0.3634459972381592, 0.3600703179836273, 0.3489670753479004, 0.3429599404335022, 0.34309908747673035, 0.3401198089122772, 0.3303268253803253, 0.3301240801811218, 0.3276282846927643, 0.3180643618106842, 0.3136589229106903, 0.3090694546699524, 0.3071834146976471, 0.3011736273765564, 0.30332496762275696, 0.29351481795310974, 0.2937680780887604], "accuracy": [0.26680755615234375, 0.49451854825019836, 0.5679566860198975, 0.6209219098091125, 0.6646413803100586, 0.7078325152397156, 0.7234182953834534, 0.7387399077415466, 0.7541936039924622, 0.7672698497772217, 0.7677981853485107, 0.7820631265640259, 0.7897239327430725, 0.7977809906005859, 0.798309326171875, 0.8082155585289001, 0.8138951063156128, 0.8094043135643005, 0.822348415851593, 0.8269713521003723, 0.8208954930305481, 0.8310658931732178, 0.8350284099578857, 0.8367455005645752, 0.8368775844573975, 0.8444063067436218, 0.843481719493866, 0.850350022315979, 0.8502179384231567, 0.8570862412452698, 0.857218325138092, 0.8574824929237366, 0.8610487580299377, 0.8610487580299377, 0.8607845902442932, 0.8658037185668945, 0.8701624870300293, 0.8689737319946289, 0.8708229064941406, 0.8792761564254761, 0.8798044919967651, 0.8765024542808533, 0.8765024542808533, 0.8824461698532104, 0.880729079246521, 0.8844274282455444, 0.8838990926742554, 0.8887861371040344, 0.8878615498542786, 0.8903711438179016, 0.8924844861030579, 0.8912957310676575, 0.8976356983184814, 0.8960506916046143], "val_loss": [2.040694236755371, 1.5166728496551514, 1.045767068862915, 0.8421168327331543, 0.7569165229797363, 0.7011509537696838, 0.6573318839073181, 0.6179470419883728, 0.5908101201057434, 0.5737177133560181, 0.5541383624076843, 0.5365487933158875, 0.518412172794342, 0.5104728937149048, 0.49868762493133545, 0.485697478055954, 0.48461878299713135, 0.46694132685661316, 0.459992378950119, 0.44818419218063354, 0.45110249519348145, 0.4507465958595276, 0.4339507520198822, 0.4287099242210388, 0.42590731382369995, 0.4119842052459717, 0.4104468524456024, 0.4069807529449463, 0.40372517704963684, 0.3985708951950073, 0.3967111110687256, 0.39305025339126587, 0.39346253871917725, 0.3906964063644409, 0.3815464675426483, 0.3792845904827118, 0.37928369641304016, 0.3762374818325043, 0.37582898139953613, 0.37387406826019287, 0.3717586398124695, 0.36671704053878784, 0.363382488489151, 0.36401286721229553, 0.3619881868362427, 0.35666540265083313, 0.3588123917579651, 0.3541429042816162, 0.35232576727867126, 0.35342442989349365, 0.3524846136569977, 0.34847813844680786, 0.34814298152923584, 0.35015836358070374], "val_accuracy": [0.5323333144187927, 0.6446666717529297, 0.6756666898727417, 0.7043333053588867, 0.7239999771118164, 0.7493333220481873, 0.753000020980835, 0.7706666588783264, 0.7820000052452087, 0.7873333096504211, 0.7956666946411133, 0.800000011920929, 0.8136666417121887, 0.812666654586792, 0.8199999928474426, 0.824999988079071, 0.8246666789054871, 0.8326666951179504, 0.8303333520889282, 0.8376666903495789, 0.8333333134651184, 0.8343333601951599, 0.8446666598320007, 0.843666672706604, 0.846666693687439, 0.8513333201408386, 0.8546666502952576, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8529999852180481, 0.859333336353302, 0.8546666502952576, 0.8569999933242798, 0.8606666922569275, 0.8633333444595337, 0.8643333315849304, 0.8629999756813049, 0.8576666712760925, 0.8703333139419556, 0.8640000224113464, 0.8643333315849304, 0.8676666617393494, 0.8663333058357239, 0.8713333606719971, 0.871999979019165, 0.8693333268165588, 0.8693333268165588, 0.878000020980835, 0.8756666779518127, 0.8706666827201843, 0.8756666779518127, 0.8769999742507935, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8565714359283447, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2201006412506104, 1.8544249534606934, 1.3881497383117676, 1.0869563817977905, 0.9348487854003906, 0.8374278545379639, 0.7638523578643799, 0.7235829830169678, 0.689911961555481, 0.6652560830116272, 0.6328169107437134, 0.6312642693519592, 0.5947310328483582, 0.5825467109680176, 0.5562414526939392, 0.5504819750785828, 0.5355991125106812, 0.5192953944206238, 0.5140392780303955, 0.48848646879196167, 0.4917811155319214, 0.4753488302230835, 0.47169989347457886, 0.4657774269580841, 0.4514494240283966, 0.44486361742019653, 0.42991209030151367, 0.4267609417438507, 0.41292452812194824, 0.41999727487564087, 0.40837612748146057, 0.39805352687835693, 0.39188486337661743, 0.39508405327796936, 0.3758271634578705, 0.3772584795951843, 0.36186012625694275, 0.3670543432235718, 0.3563385307788849, 0.35005491971969604, 0.34311944246292114, 0.3407127261161804, 0.33229875564575195, 0.32500526309013367, 0.3247024118900299, 0.3217082917690277], "accuracy": [0.2817329168319702, 0.4983489513397217, 0.5641262531280518, 0.6176198720932007, 0.668339729309082, 0.6984546184539795, 0.7272487282752991, 0.7347774505615234, 0.7449478507041931, 0.7618544697761536, 0.767401933670044, 0.7693831920623779, 0.7833839654922485, 0.7897239327430725, 0.793950617313385, 0.7956677079200745, 0.8038568496704102, 0.8157442808151245, 0.8109893202781677, 0.8249900937080383, 0.8183859586715698, 0.8293488025665283, 0.8281601071357727, 0.832650899887085, 0.8370096683502197, 0.8407079577445984, 0.8469158411026001, 0.847840428352356, 0.8481045961380005, 0.8494254350662231, 0.8578787446022034, 0.8564258217811584, 0.86118084192276, 0.8594637513160706, 0.8671245574951172, 0.8659358024597168, 0.871879518032074, 0.8685774803161621, 0.8687095642089844, 0.874389111995697, 0.8770307898521423, 0.8767666220664978, 0.8791441321372986, 0.8803328275680542, 0.8829745054244995, 0.884691596031189], "val_loss": [2.0335378646850586, 1.5001842975616455, 1.042607069015503, 0.8455535769462585, 0.7596304416656494, 0.701490581035614, 0.6587121486663818, 0.6245729327201843, 0.5983058214187622, 0.575138509273529, 0.55820232629776, 0.5435141324996948, 0.5338558554649353, 0.5133598446846008, 0.5042440295219421, 0.4962424337863922, 0.48097124695777893, 0.4700540006160736, 0.4668003022670746, 0.4570035934448242, 0.4544268250465393, 0.4429585039615631, 0.4421062767505646, 0.43196964263916016, 0.43432024121284485, 0.4244866669178009, 0.4146091341972351, 0.4097209572792053, 0.417848140001297, 0.4103337526321411, 0.3987453579902649, 0.3977120816707611, 0.39350491762161255, 0.39611294865608215, 0.39169251918792725, 0.38866475224494934, 0.38166844844818115, 0.38886621594429016, 0.3835279047489166, 0.37692952156066895, 0.37566524744033813, 0.37661319971084595, 0.3710983991622925, 0.3741801679134369, 0.3709222078323364, 0.3659660518169403], "val_accuracy": [0.5476666688919067, 0.656333327293396, 0.6793333292007446, 0.6963333487510681, 0.7229999899864197, 0.7396666407585144, 0.7463333606719971, 0.7599999904632568, 0.7689999938011169, 0.7820000052452087, 0.7870000004768372, 0.7979999780654907, 0.8043333292007446, 0.8016666769981384, 0.8173333406448364, 0.8196666836738586, 0.8206666707992554, 0.8353333473205566, 0.831333339214325, 0.8343333601951599, 0.8330000042915344, 0.8429999947547913, 0.8426666855812073, 0.8479999899864197, 0.840666651725769, 0.8489999771118164, 0.8556666374206543, 0.8526666760444641, 0.8483333587646484, 0.8510000109672546, 0.8553333282470703, 0.8573333621025085, 0.8576666712760925, 0.8600000143051147, 0.8569999933242798, 0.8610000014305115, 0.8600000143051147, 0.8600000143051147, 0.8646666407585144, 0.8629999756813049, 0.8686666488647461, 0.862333357334137, 0.8633333444595337, 0.8676666617393494, 0.8669999837875366, 0.8673333525657654]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1], [0, 6, 8, 7, 9, 2, 5, 8], [0, 2, 7], [0, 82], [0, 1], [0], [1], [0]], "fitness": -0.8397142887115479, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293426513671875, 2.1911611557006836, 1.7780112028121948, 1.3631329536437988, 1.0872567892074585, 0.9501227736473083, 0.8674899339675903, 0.8360918760299683, 0.7807386517524719, 0.7608552575111389, 0.7177570462226868, 0.6908725500106812, 0.6546536087989807, 0.641139805316925, 0.6183902621269226, 0.61263507604599, 0.5790709257125854, 0.5824636816978455, 0.5738916993141174, 0.5644890666007996, 0.5548631548881531, 0.5402926802635193, 0.5327876210212708, 0.5291649699211121, 0.5027519464492798, 0.5045596957206726, 0.4965331554412842, 0.4860483407974243, 0.4797097146511078, 0.46133503317832947, 0.45422685146331787, 0.4417937397956848, 0.4376617968082428, 0.44467851519584656, 0.4196574091911316, 0.41094914078712463, 0.3998817205429077], "accuracy": [0.12402588874101639, 0.322150319814682, 0.4336283206939697, 0.535860538482666, 0.6258090138435364, 0.6428477168083191, 0.6833971738815308, 0.6915863156318665, 0.7020208835601807, 0.7029454708099365, 0.7259278893470764, 0.7321357727050781, 0.7500990629196167, 0.7561748623847961, 0.7607977986335754, 0.7667415142059326, 0.778232753276825, 0.7796856164932251, 0.7868181467056274, 0.7792893648147583, 0.7841764688491821, 0.7950072884559631, 0.8047813773155212, 0.7996301651000977, 0.8123101592063904, 0.8095363974571228, 0.8132346868515015, 0.8149517774581909, 0.8173292875289917, 0.8210275769233704, 0.8304054737091064, 0.8301413059234619, 0.8315942287445068, 0.8297450542449951, 0.8401796221733093, 0.8428213000297546, 0.8473120927810669], "val_loss": [2.2462353706359863, 2.020357847213745, 1.1404553651809692, 0.8826209902763367, 0.7765318751335144, 0.7114249467849731, 0.6542261838912964, 0.6362026929855347, 0.6407070755958557, 0.6101797223091125, 0.5607422590255737, 0.5490410327911377, 0.5419156551361084, 0.5314764380455017, 0.5311266779899597, 0.5081659555435181, 0.5046309232711792, 0.49107831716537476, 0.488194078207016, 0.47580137848854065, 0.4806547164916992, 0.4861430525779724, 0.48923274874687195, 0.47587552666664124, 0.47550830245018005, 0.4722461402416229, 0.45472583174705505, 0.4472889304161072, 0.4394124448299408, 0.43677905201911926, 0.4237951636314392, 0.4204961061477661, 0.41679203510284424, 0.41687166690826416, 0.4052404761314392, 0.3991236090660095, 0.402658611536026], "val_accuracy": [0.4050000011920929, 0.49166667461395264, 0.6470000147819519, 0.6919999718666077, 0.6946666836738586, 0.7336666584014893, 0.7423333525657654, 0.7593333125114441, 0.7519999742507935, 0.7649999856948853, 0.7720000147819519, 0.7816666960716248, 0.7829999923706055, 0.7950000166893005, 0.7946666479110718, 0.7933333516120911, 0.7976666688919067, 0.8146666884422302, 0.8169999718666077, 0.8186666369438171, 0.8209999799728394, 0.815666675567627, 0.8296666741371155, 0.8376666903495789, 0.8309999704360962, 0.8266666531562805, 0.8410000205039978, 0.846666693687439, 0.843999981880188, 0.8500000238418579, 0.8523333072662354, 0.8633333444595337, 0.856333315372467, 0.8633333444595337, 0.8613333106040955, 0.8616666793823242, 0.859000027179718]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 11, 8, 3, 2, 2, 1, 1, 0], "tree_depth": 15}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.7925714254379272, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6846474409103394, 0.9483231902122498, 0.7452861666679382, 0.6913896203041077, 0.6894872784614563, 0.7469973564147949, 0.6358410716056824, 0.6540104746818542], "accuracy": [0.45172369480133057, 0.6763967871665955, 0.7306828498840332, 0.7481178045272827, 0.7565711140632629, 0.7534011602401733, 0.7600052952766418, 0.7623828053474426], "val_loss": [0.924518883228302, 0.6960262656211853, 0.5878036022186279, 0.5758684873580933, 0.7084538340568542, 0.5608919858932495, 0.618092954158783, 0.587738573551178], "val_accuracy": [0.6646666526794434, 0.7419999837875366, 0.7976666688919067, 0.79666668176651, 0.7896666526794434, 0.7953333258628845, 0.7910000085830688, 0.7889999747276306]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 5], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 6, 1, 6, 2, 6, 6, 3, 8, 1, 6, 3, 5], [0, 6, 6, 2, 5, 2, 0, 1, 1, 5, 7], [99, 26], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 9, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 3, 0, 4, 4, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 10, 6, 4, 2, 24, 13, 11, 2, 16, 9, 7, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.multiply(grad, beta)), tf.math.sqrt(grad)), beta)), tf.math.subtract(tf.math.divide_no_nan(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, alpha)), tf.math.square(grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(sigma, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(grad, tf.math.pow(grad, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 1, 0, 2], [39, 39, 23], [0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [0, 71], [0, 1], [0], [7], [99], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 8, 5, 4, 7, 2, 9], [1, 6, 6, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 7, 4, 3, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.math.negative(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [69004.7734375, 11228021.0, 198324432.0, 1440904960.0, 6597670912.0, 22947627008.0], "accuracy": [0.10249637067317963, 0.09787346422672272, 0.09774138033390045, 0.09840179979801178, 0.09642054885625839, 0.09338264167308807], "val_loss": [735573.5, 41025240.0, 457161920.0, 2589335808.0, 10080268288.0, 30911739904.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 5, 9], [0, 2, 0, 3], [16, 16, 5], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 4, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 7, 3, 3, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha))))", "other_info": {"loss": [2.3035049438476562, 2.3025851249694824, 2.3025853633880615, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025853633880615, 2.3025853633880615], "accuracy": [0.09285431355237961, 0.09060890227556229, 0.09417514503002167, 0.09919429570436478, 0.09417514503002167, 0.09826971590518951, 0.09708096832036972, 0.09708096832036972, 0.09549596905708313], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025848865509033, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.1003333330154419, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 0], [16, 16, 61], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 5, 2, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 3], [16, 99, 96, 99, 61, 27]], "fitness": -0.09314285963773727, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 3, 2, 1, 1, 1, 25, 14, 11, 6], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.square(alpha))))))), beta), tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.square(sigma)))", "other_info": {"loss": [2.3103392124176025, 2.3104987144470215, 2.3089845180511475, 2.3096766471862793, 2.310025930404663, 2.311091899871826], "accuracy": [0.08968432247638702, 0.08942015469074249, 0.08994849026203156, 0.0948355570435524, 0.09351472556591034, 0.08651433140039444], "val_loss": [2.3087446689605713, 2.308744192123413, 2.308743953704834, 2.308743715286255, 2.308743715286255, 2.308743715286255], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]