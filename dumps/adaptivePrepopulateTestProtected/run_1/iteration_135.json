[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8688571453094482, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2234551906585693, 1.865549087524414, 1.3807742595672607, 1.0791287422180176, 0.9333462715148926, 0.8293061852455139, 0.7687221169471741, 0.7235857248306274, 0.6764019727706909, 0.6578865051269531, 0.6257950663566589, 0.6123367547988892, 0.5831018090248108, 0.5594225525856018, 0.5455485582351685, 0.5511858463287354, 0.5230382680892944, 0.5051747560501099, 0.5061191916465759, 0.4876812696456909, 0.48764657974243164, 0.47471895813941956, 0.4642202854156494, 0.4550155699253082, 0.4479186534881592, 0.44058388471603394, 0.4305899739265442, 0.4254073202610016, 0.4259207546710968, 0.40702131390571594, 0.40124601125717163, 0.39013969898223877, 0.385305255651474, 0.39136603474617004, 0.37616509199142456, 0.3655453324317932, 0.3545210659503937, 0.3563501834869385, 0.3537668287754059, 0.34699299931526184, 0.3425004780292511, 0.3351002037525177, 0.33594346046447754, 0.33381083607673645, 0.3297691345214844, 0.3281330168247223], "accuracy": [0.2697133719921112, 0.49425438046455383, 0.5678246021270752, 0.6272619366645813, 0.6670188903808594, 0.7005679607391357, 0.7234182953834534, 0.739400327205658, 0.7567031979560852, 0.7598732113838196, 0.7738739848136902, 0.7761194109916687, 0.7909126877784729, 0.7968564033508301, 0.8014793395996094, 0.807158887386322, 0.81112140417099, 0.8148196935653687, 0.8173292875289917, 0.8285563588142395, 0.8238013386726379, 0.8323867321014404, 0.8339717388153076, 0.8381983637809753, 0.8384625315666199, 0.8441421389579773, 0.8399154543876648, 0.844010055065155, 0.846387505531311, 0.8529917001724243, 0.8545766472816467, 0.8617091774940491, 0.8605204224586487, 0.8577466607093811, 0.8669924736022949, 0.8683133125305176, 0.870030403137207, 0.8765024542808533, 0.8688416481018066, 0.8772949576377869, 0.8768987059593201, 0.8782195448875427, 0.8751816153526306, 0.8798044919967651, 0.8775591254234314, 0.8787478804588318], "val_loss": [2.037799119949341, 1.5059058666229248, 1.0291500091552734, 0.8126088976860046, 0.725394070148468, 0.6664896011352539, 0.6249243021011353, 0.5883070230484009, 0.5673482418060303, 0.5454332828521729, 0.5330172777175903, 0.5097997188568115, 0.503705620765686, 0.4852757155895233, 0.4780595600605011, 0.4663708508014679, 0.4553612768650055, 0.4480166435241699, 0.4385111927986145, 0.4304182231426239, 0.43244296312332153, 0.4191657602787018, 0.41246163845062256, 0.4131189286708832, 0.4033004939556122, 0.40289875864982605, 0.39195311069488525, 0.39187076687812805, 0.3977474868297577, 0.3855205774307251, 0.3753024637699127, 0.3849625587463379, 0.37818098068237305, 0.3677195608615875, 0.3618611693382263, 0.3617194890975952, 0.35647818446159363, 0.36227425932884216, 0.3663056492805481, 0.34994596242904663, 0.35104629397392273, 0.3484516143798828, 0.35225018858909607, 0.34625008702278137, 0.34633132815361023, 0.3472425937652588], "val_accuracy": [0.5273333191871643, 0.6573333144187927, 0.6886666417121887, 0.7136666774749756, 0.737666666507721, 0.7556666731834412, 0.7666666507720947, 0.7776666879653931, 0.7846666574478149, 0.8003333210945129, 0.7940000295639038, 0.8073333501815796, 0.8173333406448364, 0.8216666579246521, 0.8193333148956299, 0.831333339214325, 0.8379999995231628, 0.8309999704360962, 0.8433333039283752, 0.8413333296775818, 0.8410000205039978, 0.8506666421890259, 0.8513333201408386, 0.8483333587646484, 0.8519999980926514, 0.8513333201408386, 0.8583333492279053, 0.8553333282470703, 0.859666645526886, 0.8576666712760925, 0.8713333606719971, 0.8543333411216736, 0.8636666536331177, 0.8686666488647461, 0.8733333349227905, 0.8683333396911621, 0.874666690826416, 0.8690000176429749, 0.8690000176429749, 0.8733333349227905, 0.8766666650772095, 0.8763333559036255, 0.8733333349227905, 0.875333309173584, 0.875, 0.8740000128746033]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8597142696380615, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2920467853546143, 2.1881136894226074, 1.764678716659546, 1.3339571952819824, 1.0881024599075317, 0.9373806118965149, 0.8456647992134094, 0.8345831632614136, 0.7554786205291748, 0.7517251372337341, 0.6908702850341797, 0.6756137013435364, 0.6473203897476196, 0.6178434491157532, 0.6105913519859314, 0.6003628969192505, 0.5724372863769531, 0.5611683130264282, 0.5433446168899536, 0.5462543368339539, 0.531247079372406, 0.5319916009902954, 0.5002290606498718, 0.48995035886764526, 0.48125776648521423, 0.4743644595146179, 0.47161468863487244, 0.46674296259880066, 0.4473632574081421, 0.4397432804107666, 0.43201661109924316, 0.42754611372947693, 0.42121726274490356, 0.41486385464668274, 0.40811580419540405, 0.40516820549964905, 0.39290764927864075, 0.38024795055389404, 0.3772493004798889, 0.3732759952545166, 0.3652814030647278, 0.36784467101097107, 0.35861319303512573, 0.3432586193084717, 0.34089547395706177, 0.3460310995578766, 0.32867005467414856, 0.3204270005226135, 0.32193705439567566, 0.3066510856151581, 0.3134757876396179, 0.29696977138519287, 0.29677924513816833, 0.2883027195930481, 0.2800062596797943, 0.2843867242336273, 0.26614680886268616, 0.28567659854888916, 0.2748894989490509, 0.2594013214111328, 0.25347670912742615, 0.2694268524646759, 0.26673412322998047, 0.2575487196445465, 0.23826947808265686, 0.2489633560180664, 0.24709343910217285, 0.25606516003608704, 0.2522442638874054, 0.24129746854305267, 0.23770871758460999, 0.23965758085250854, 0.24742722511291504, 0.24436479806900024, 0.2475077360868454, 0.24870139360427856], "accuracy": [0.12878087162971497, 0.32862237095832825, 0.4279487431049347, 0.5404834151268005, 0.6301677227020264, 0.6654338836669922, 0.6890767216682434, 0.7061154246330261, 0.7067758440971375, 0.7152291536331177, 0.7359662055969238, 0.7374191284179688, 0.7497028112411499, 0.7691190242767334, 0.7594769597053528, 0.7741381525993347, 0.7786290049552917, 0.7852331399917603, 0.7942147850990295, 0.7921014428138733, 0.7923656105995178, 0.7940827012062073, 0.8041210174560547, 0.8119139075279236, 0.8124422430992126, 0.8251221776008606, 0.8158763647079468, 0.817461371421814, 0.8253863453865051, 0.8354246616363525, 0.8342359066009521, 0.8366134166717529, 0.8384625315666199, 0.8432175517082214, 0.8421608805656433, 0.8491612672805786, 0.8479725122451782, 0.8537842035293579, 0.8520671129226685, 0.8545766472816467, 0.8570862412452698, 0.8573504090309143, 0.8578787446022034, 0.8626337051391602, 0.8623695969581604, 0.8693699836730957, 0.8697662353515625, 0.8741249442100525, 0.8741249442100525, 0.8794082403182983, 0.8758420348167419, 0.8848236799240112, 0.8819178342819214, 0.8813894987106323, 0.8905032277107239, 0.8870691061019897, 0.8969752788543701, 0.8924844861030579, 0.8903711438179016, 0.8918240666389465, 0.8993527889251709, 0.8920882344245911, 0.893541157245636, 0.8972394466400146, 0.9033153057098389, 0.9031832218170166, 0.9068815112113953, 0.8942015767097473, 0.9005415439605713, 0.9052965044975281, 0.9045040011405945, 0.9015982151031494, 0.8968431949615479, 0.9009377956390381, 0.8988244533538818, 0.9056927561759949], "val_loss": [2.246051073074341, 2.011629819869995, 1.1196039915084839, 0.8398820757865906, 0.758226215839386, 0.7090306878089905, 0.6762579679489136, 0.6222212910652161, 0.6318156123161316, 0.6113934516906738, 0.553271472454071, 0.529962956905365, 0.5260160565376282, 0.5165244340896606, 0.5098228454589844, 0.49410074949264526, 0.489195853471756, 0.47844794392585754, 0.4774880111217499, 0.4698837101459503, 0.4684622883796692, 0.46650081872940063, 0.461640864610672, 0.45383191108703613, 0.44944921135902405, 0.44807347655296326, 0.43864232301712036, 0.43565255403518677, 0.43549227714538574, 0.4294007420539856, 0.4277539849281311, 0.43093204498291016, 0.4175964295864105, 0.4140588343143463, 0.42075446248054504, 0.4084424376487732, 0.4134899973869324, 0.4068542420864105, 0.4148441553115845, 0.4030819237232208, 0.4006568193435669, 0.40175870060920715, 0.40778547525405884, 0.39356330037117004, 0.38899585604667664, 0.3833948075771332, 0.3820445239543915, 0.382252037525177, 0.3869214653968811, 0.39188453555107117, 0.4004923105239868, 0.39767977595329285, 0.395088791847229, 0.39398306608200073, 0.39069709181785583, 0.39407145977020264, 0.4042145907878876, 0.41225969791412354, 0.41034215688705444, 0.4168485403060913, 0.43249258399009705, 0.4348998963832855, 0.4377956986427307, 0.43741801381111145, 0.43429306149482727, 0.43303048610687256, 0.44113069772720337, 0.4804731011390686, 0.5090301036834717, 0.4775281250476837, 0.44436269998550415, 0.44894906878471375, 0.4706370532512665, 0.505662739276886, 0.49713003635406494, 0.5085271596908569], "val_accuracy": [0.39666667580604553, 0.4323333203792572, 0.6570000052452087, 0.7023333311080933, 0.7160000205039978, 0.7490000128746033, 0.7480000257492065, 0.7666666507720947, 0.7723333239555359, 0.778333306312561, 0.7926666736602783, 0.7976666688919067, 0.8083333373069763, 0.7986666560173035, 0.8066666722297668, 0.8130000233650208, 0.8166666626930237, 0.8176666498184204, 0.8206666707992554, 0.8293333053588867, 0.8316666483879089, 0.8273333311080933, 0.8336666822433472, 0.8376666903495789, 0.8379999995231628, 0.8379999995231628, 0.8413333296775818, 0.8450000286102295, 0.8446666598320007, 0.8450000286102295, 0.8500000238418579, 0.8476666808128357, 0.8556666374206543, 0.8586666584014893, 0.8583333492279053, 0.8646666407585144, 0.8613333106040955, 0.8600000143051147, 0.8566666841506958, 0.8643333315849304, 0.8673333525657654, 0.8636666536331177, 0.8579999804496765, 0.8663333058357239, 0.8683333396911621, 0.8700000047683716, 0.8700000047683716, 0.8723333477973938, 0.8723333477973938, 0.8726666569709778, 0.871666669845581, 0.8673333525657654, 0.8706666827201843, 0.8743333220481873, 0.8743333220481873, 0.8740000128746033, 0.8769999742507935, 0.8776666522026062, 0.8733333349227905, 0.8733333349227905, 0.8769999742507935, 0.8763333559036255, 0.878333330154419, 0.8766666650772095, 0.8790000081062317, 0.8786666393280029, 0.8786666393280029, 0.8776666522026062, 0.8826666474342346, 0.8793333172798157, 0.8866666555404663, 0.8693333268165588, 0.8836666941642761, 0.874666690826416, 0.8786666393280029, 0.878000020980835]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0], [0, 7, 3, 1, 2, 4, 8, 0, 7, 7, 8, 7, 2, 9, 1, 2, 2, 3, 3, 8, 1, 4, 9], [0, 1, 2, 2, 0, 7, 1, 1, 5, 6, 7, 3, 4, 2, 4], [0, 84, 13, 7], [1], [0], [2], [0]], "fitness": -0.8328571319580078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.add(tf.math.sqrt(beta), tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), grad))), alpha), alpha)), tf.math.subtract(grad, tf.math.add(tf.math.add(tf.math.multiply(tf.math.multiply(grad, tf.math.sqrt(grad)), tf.math.subtract(sigma, tf.math.pow(grad, beta))), grad), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.666128396987915, 0.8777543902397156, 0.7372312545776367, 0.6543762683868408, 0.6032301187515259, 0.5906884074211121, 0.5576481819152832, 0.5308265089988708, 0.5274920463562012, 0.5073091387748718, 0.4926036596298218, 0.4735637903213501, 0.4793761372566223, 0.4748203754425049, 0.4457622468471527, 0.4944207966327667, 0.45380592346191406, 0.46485814452171326, 0.46114253997802734, 0.5146588683128357, 0.5140603184700012, 0.5425639748573303, 0.5467166304588318], "accuracy": [0.4493461847305298, 0.6964733600616455, 0.7327961921691895, 0.7567031979560852, 0.7716285586357117, 0.7829877138137817, 0.791969358921051, 0.7952714562416077, 0.8157442808151245, 0.8182538747787476, 0.8168009519577026, 0.8298771381378174, 0.821820080280304, 0.8355567455291748, 0.837141752243042, 0.8302733898162842, 0.8457271456718445, 0.8474441766738892, 0.8492933511734009, 0.8374059200286865, 0.8356888294219971, 0.8259146809577942, 0.8245938420295715], "val_loss": [0.8199451565742493, 0.6493877172470093, 0.672715425491333, 0.5974391102790833, 0.5247980952262878, 0.5346662402153015, 0.4969872534275055, 0.49736377596855164, 0.5063233375549316, 0.5277799367904663, 0.5220220685005188, 0.5631269812583923, 0.5343992710113525, 0.5327448844909668, 0.519214928150177, 0.6374222636222839, 0.5572289228439331, 0.5465753674507141, 0.525644063949585, 0.6054418683052063, 0.626385509967804, 0.6139633655548096, 0.5351707339286804], "val_accuracy": [0.7089999914169312, 0.7566666603088379, 0.7753333449363708, 0.7929999828338623, 0.8103333115577698, 0.8133333325386047, 0.8163333535194397, 0.8233333230018616, 0.8303333520889282, 0.8259999752044678, 0.8256666660308838, 0.8299999833106995, 0.8293333053588867, 0.8456666469573975, 0.8443333506584167, 0.8333333134651184, 0.8493333458900452, 0.8546666502952576, 0.8529999852180481, 0.831333339214325, 0.8303333520889282, 0.8396666646003723, 0.8230000138282776]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 38, 23, 15, 4, 1, 0, 1, 0], "tree_depth": 26}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [1, 2, 6, 0, 3, 7, 5], [0, 1, 0, 0, 2, 1], [39, 97, 69], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [3, 0, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 1, 5, 4, 1, 4, 6, 8], [0, 0, 0, 3, 0, 0, 3, 1, 0, 0], [16, 99, 96, 84, 69, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 3, 9, 5, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.square(grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303964376449585, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 5, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 3, 0, 3, 5], [0, 2, 0, 3, 2], [16, 42], [0, 1, 1], [4], [0, 3], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 8, 4, 2, 8, 7], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 21, 99, 45, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 5, 5, 2, 3, 1, 2, 1, 22, 12, 10, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), sigma)), tf.math.sqrt(tf.math.add(alpha, beta))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3, 8, 3], [0, 1, 0, 2, 0], [39, 39, 14], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 0, 1, 1], [1, 6], [0, 1, 6], [99], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 6, 3, 6, 8, 3, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 3, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 1, 0, 1, 1, 5, 2, 3, 1, 21, 11, 10, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), sigma)), tf.math.subtract(grad, tf.math.pow(sigma, sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [85, 92], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 1], [0, 5], [2], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 8, 1, 4, 2, 8], [0, 2, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 3, 2, 1, 0, 17, 9, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(beta, tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma)), tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]