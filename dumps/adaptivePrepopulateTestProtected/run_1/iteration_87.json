[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8577142953872681, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2256295680999756, 1.876383662223816, 1.4093496799468994, 1.109410285949707, 0.9512950778007507, 0.8518518209457397, 0.7831071019172668, 0.7446231245994568, 0.7029080986976624, 0.6670287847518921, 0.6433723568916321, 0.627460777759552, 0.6027711033821106, 0.5914978384971619, 0.5732476115226746, 0.5660288333892822, 0.5454389452934265, 0.5321995615959167, 0.5257147550582886, 0.5048088431358337, 0.5005843043327332, 0.48622336983680725, 0.4864881932735443, 0.47339388728141785, 0.47101476788520813, 0.45262789726257324, 0.4517543613910675, 0.4452972114086151, 0.43264979124069214, 0.42606067657470703, 0.4249488413333893, 0.41427376866340637, 0.4153461158275604, 0.4037160277366638, 0.3936038315296173, 0.39665496349334717, 0.38278067111968994, 0.38070881366729736, 0.37891167402267456, 0.36785104870796204, 0.354820191860199, 0.3613596260547638, 0.35572704672813416, 0.3530227541923523, 0.343095064163208, 0.3396962583065033, 0.3327159881591797, 0.3337723910808563, 0.3233190178871155, 0.3259356617927551, 0.320555180311203, 0.3091098368167877, 0.30820098519325256, 0.30479782819747925, 0.30511027574539185, 0.29668617248535156, 0.2929375469684601, 0.29343676567077637, 0.2857186794281006, 0.28860560059547424, 0.27961939573287964, 0.27197030186653137, 0.26626887917518616, 0.2678387463092804, 0.26823118329048157, 0.2551468312740326], "accuracy": [0.2723550498485565, 0.4803856909275055, 0.5614846348762512, 0.6104874014854431, 0.6609430909156799, 0.6954167485237122, 0.7161537408828735, 0.72672039270401, 0.7450799345970154, 0.7597411274909973, 0.7666094303131104, 0.7758552432060242, 0.7848368883132935, 0.7866860628128052, 0.7951393723487854, 0.7998943328857422, 0.802800178527832, 0.8101968169212341, 0.81112140417099, 0.8185180425643921, 0.821820080280304, 0.8248580098152161, 0.8239334225654602, 0.8302733898162842, 0.8314621448516846, 0.8355567455291748, 0.8364813327789307, 0.8442742228507996, 0.8500858545303345, 0.8481045961380005, 0.8496896028518677, 0.8529917001724243, 0.8511425256729126, 0.8544445633888245, 0.8613129258155823, 0.8590674996376038, 0.8610487580299377, 0.8652753829956055, 0.8687095642089844, 0.8721436858177185, 0.8726720213890076, 0.8730682730674744, 0.8704266548156738, 0.8742570281028748, 0.873860776424408, 0.878351628780365, 0.8779553771018982, 0.8778232932090759, 0.8835028409957886, 0.8795403242111206, 0.8891823887825012, 0.8881257176399231, 0.8873332738876343, 0.8910315632820129, 0.8914278149604797, 0.8949940800666809, 0.8960506916046143, 0.8949940800666809, 0.8965790271759033, 0.89552241563797, 0.8928807377815247, 0.9039757251739502, 0.9064852595329285, 0.9013340473175049, 0.9045040011405945, 0.9059569239616394], "val_loss": [2.042030096054077, 1.5171632766723633, 1.0414906740188599, 0.8297244310379028, 0.7344308495521545, 0.6798608303070068, 0.6369597315788269, 0.6118534207344055, 0.5768829584121704, 0.5623579025268555, 0.5392706990242004, 0.5318307280540466, 0.516976535320282, 0.5030757784843445, 0.4905863404273987, 0.48180586099624634, 0.4733828008174896, 0.4653884768486023, 0.46172240376472473, 0.4520961046218872, 0.4434088170528412, 0.44066187739372253, 0.4386441707611084, 0.4293754994869232, 0.42735233902931213, 0.42527779936790466, 0.41915372014045715, 0.40884318947792053, 0.4061794579029083, 0.40406444668769836, 0.3969455659389496, 0.3968803584575653, 0.38892483711242676, 0.3952224552631378, 0.38430821895599365, 0.3832557499408722, 0.3843326270580292, 0.3769261837005615, 0.37575751543045044, 0.37337830662727356, 0.36815112829208374, 0.370400071144104, 0.37156346440315247, 0.36690425872802734, 0.3616296052932739, 0.36423298716545105, 0.36170583963394165, 0.3657684028148651, 0.35676485300064087, 0.3548896908760071, 0.3549445867538452, 0.35639554262161255, 0.3528432250022888, 0.3500731885433197, 0.34833669662475586, 0.3448026180267334, 0.3456271290779114, 0.3493061661720276, 0.34632614254951477, 0.34527987241744995, 0.3424181342124939, 0.34288662672042847, 0.3464014530181885, 0.3406088352203369, 0.3399578034877777, 0.3433810770511627], "val_accuracy": [0.5529999732971191, 0.656333327293396, 0.6859999895095825, 0.7136666774749756, 0.731333315372467, 0.7523333430290222, 0.7616666555404663, 0.7693333625793457, 0.7926666736602783, 0.7916666865348816, 0.8036666512489319, 0.8066666722297668, 0.8090000152587891, 0.8149999976158142, 0.8230000138282776, 0.8263333439826965, 0.82833331823349, 0.8296666741371155, 0.8273333311080933, 0.8363333344459534, 0.8396666646003723, 0.8403333425521851, 0.8433333039283752, 0.8426666855812073, 0.8420000076293945, 0.8456666469573975, 0.8473333120346069, 0.8496666550636292, 0.8506666421890259, 0.8500000238418579, 0.8556666374206543, 0.8503333330154419, 0.859000027179718, 0.8496666550636292, 0.8573333621025085, 0.8579999804496765, 0.8583333492279053, 0.8603333234786987, 0.8606666922569275, 0.8610000014305115, 0.859666645526886, 0.862333357334137, 0.8603333234786987, 0.8633333444595337, 0.8656666874885559, 0.8650000095367432, 0.8676666617393494, 0.8679999709129333, 0.8676666617393494, 0.8663333058357239, 0.8676666617393494, 0.8686666488647461, 0.8709999918937683, 0.8709999918937683, 0.8736666440963745, 0.8740000128746033, 0.8730000257492065, 0.871999979019165, 0.871999979019165, 0.875, 0.8776666522026062, 0.874666690826416, 0.875, 0.8756666779518127, 0.8756666779518127, 0.8759999871253967]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 6, 9, 4, 2, 8, 7, 3, 6, 7], [0, 6, 5, 5, 1, 4, 7, 2], [0, 47], [0, 1], [0], [1], [0]], "fitness": -0.8577142953872681, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.add(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, grad)), grad)), alpha), tf.math.add(grad, grad))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.29266619682312, 2.190218687057495, 1.7703856229782104, 1.361465573310852, 1.080650806427002, 0.9262827634811401, 0.8405221700668335, 0.827923059463501, 0.7702866196632385, 0.7518452405929565, 0.7063094973564148, 0.6794086694717407, 0.6406087279319763, 0.6164126992225647, 0.6134865880012512, 0.5947330594062805, 0.5773370265960693, 0.5706011652946472, 0.5649107098579407, 0.5516042709350586, 0.5436630249023438, 0.5294102430343628, 0.5122064352035522, 0.5075327157974243, 0.4869513213634491, 0.478372186422348, 0.47201910614967346, 0.4616338312625885, 0.4516775608062744, 0.4528230130672455, 0.43537449836730957, 0.43289411067962646, 0.41609498858451843, 0.42174771428108215, 0.39803680777549744, 0.4005456864833832, 0.39288705587387085, 0.38863980770111084, 0.3810886740684509, 0.37049272656440735, 0.3698804974555969, 0.3685789704322815, 0.35540276765823364, 0.3376971185207367, 0.34105464816093445, 0.333204448223114, 0.34443533420562744, 0.3309258222579956, 0.31541019678115845, 0.3161718547344208, 0.3152143955230713, 0.3138448894023895, 0.30605548620224, 0.3019563555717468, 0.31316429376602173, 0.29402926564216614, 0.2884555757045746, 0.2991268038749695, 0.30021795630455017], "accuracy": [0.13221503794193268, 0.3160744905471802, 0.43587371706962585, 0.5418042540550232, 0.6370360851287842, 0.668339729309082, 0.6913221478462219, 0.7053229212760925, 0.7021529674530029, 0.7136441469192505, 0.7375511527061462, 0.7374191284179688, 0.7597411274909973, 0.7672698497772217, 0.7675340175628662, 0.7718927264213562, 0.7833839654922485, 0.7854973077774048, 0.7880068421363831, 0.7932901978492737, 0.7971205711364746, 0.7984414100646973, 0.8104609847068787, 0.8086118102073669, 0.8100647330284119, 0.819442629814148, 0.824329674243927, 0.8228767514228821, 0.8290846943855286, 0.8248580098152161, 0.8358209133148193, 0.8325188159942627, 0.8411042094230652, 0.8403117060661316, 0.8453308939933777, 0.8488970994949341, 0.854708731174469, 0.8525954484939575, 0.8520671129226685, 0.8585391640663147, 0.8589354157447815, 0.86118084192276, 0.8618412613868713, 0.869502067565918, 0.870030403137207, 0.870030403137207, 0.8599920868873596, 0.8725399374961853, 0.8816536664962769, 0.8776912093162537, 0.8729361891746521, 0.8771628737449646, 0.8776912093162537, 0.8874653577804565, 0.8812574148178101, 0.8853520154953003, 0.8874653577804565, 0.8796724081039429, 0.8805969953536987], "val_loss": [2.246864080429077, 2.022432565689087, 1.1534940004348755, 0.9492381811141968, 0.7758935689926147, 0.7204089164733887, 0.6832774877548218, 0.6618292927742004, 0.6597407460212708, 0.631392240524292, 0.5988820195198059, 0.5593170523643494, 0.5492508411407471, 0.5335871577262878, 0.524225652217865, 0.5074700117111206, 0.5091571807861328, 0.5007961392402649, 0.5007455945014954, 0.48780152201652527, 0.4804944694042206, 0.47529375553131104, 0.4798198342323303, 0.46000155806541443, 0.45162948966026306, 0.45336246490478516, 0.4479735791683197, 0.4423508644104004, 0.4286019206047058, 0.4399071931838989, 0.42723843455314636, 0.4299667179584503, 0.44100451469421387, 0.42282459139823914, 0.4121251106262207, 0.4207604229450226, 0.4156632125377655, 0.4163855314254761, 0.4049316346645355, 0.42223262786865234, 0.4139496684074402, 0.3991861939430237, 0.40871289372444153, 0.42510005831718445, 0.4204051196575165, 0.41574785113334656, 0.41292011737823486, 0.4309593439102173, 0.44619396328926086, 0.42961233854293823, 0.42090904712677, 0.4298337399959564, 0.42938464879989624, 0.45064106583595276, 0.45158055424690247, 0.44337740540504456, 0.43897977471351624, 0.4384748637676239, 0.45518848299980164], "val_accuracy": [0.3889999985694885, 0.46133333444595337, 0.6396666765213013, 0.6736666560173035, 0.7286666631698608, 0.7319999933242798, 0.7486666440963745, 0.7509999871253967, 0.7566666603088379, 0.762666642665863, 0.7706666588783264, 0.7823333144187927, 0.7863333225250244, 0.7979999780654907, 0.8040000200271606, 0.8009999990463257, 0.7976666688919067, 0.8063333630561829, 0.8083333373069763, 0.8063333630561829, 0.8180000185966492, 0.8186666369438171, 0.8246666789054871, 0.8270000219345093, 0.8289999961853027, 0.831333339214325, 0.8396666646003723, 0.8330000042915344, 0.8403333425521851, 0.8410000205039978, 0.8463333249092102, 0.8393333554267883, 0.8353333473205566, 0.8460000157356262, 0.8446666598320007, 0.8519999980926514, 0.8523333072662354, 0.8556666374206543, 0.8550000190734863, 0.8560000061988831, 0.862666666507721, 0.8566666841506958, 0.8616666793823242, 0.8600000143051147, 0.8653333187103271, 0.859000027179718, 0.8603333234786987, 0.8669999837875366, 0.862333357334137, 0.862666666507721, 0.8619999885559082, 0.8693333268165588, 0.8703333139419556, 0.871666669845581, 0.8683333396911621, 0.8646666407585144, 0.8640000224113464, 0.8636666536331177, 0.8659999966621399]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 19, 11, 8, 2, 2, 1, 1, 0], "tree_depth": 21}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [0, 6, 7, 6, 4, 0, 9, 8, 5, 8, 7, 1, 6, 8, 5, 6, 7], [0, 4, 6, 3, 5, 5, 2, 2, 1], [0, 50], [1], [0], [2], [0]], "fitness": -0.8385714292526245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.square(tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), tf.math.add(grad, tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(grad)), sigma), grad))), grad), tf.math.divide_no_nan(beta, tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5536129474639893, 0.8268954157829285, 0.685032844543457, 0.6178226470947266, 0.5948265194892883, 0.561779797077179, 0.5261034965515137, 0.5098586678504944, 0.5006680488586426, 0.4919666349887848, 0.46903687715530396, 0.4569686949253082, 0.46213605999946594, 0.44899654388427734, 0.4719337821006775, 0.4792424738407135, 0.48701900243759155, 0.5042769908905029, 0.4929312765598297, 0.474918395280838], "accuracy": [0.4653282165527344, 0.7014925479888916, 0.7396644949913025, 0.7667415142059326, 0.783119797706604, 0.7901201844215393, 0.806630551815033, 0.8161405324935913, 0.8260467648506165, 0.8182538747787476, 0.8337075710296631, 0.8285563588142395, 0.8271034359931946, 0.8457271456718445, 0.8317263126373291, 0.8466516733169556, 0.8259146809577942, 0.8387266993522644, 0.8388587832450867, 0.8457271456718445], "val_loss": [0.8431508541107178, 0.6341753602027893, 0.5591711401939392, 0.5162580013275146, 0.5153281092643738, 0.49077388644218445, 0.47235798835754395, 0.4958740174770355, 0.5169793367385864, 0.4650983214378357, 0.5126890540122986, 0.4769911766052246, 0.5218774676322937, 0.5500260591506958, 0.5447417497634888, 0.49094462394714355, 0.49957817792892456, 0.6347926259040833, 0.542648434638977, 0.5347247123718262], "val_accuracy": [0.7026666402816772, 0.7746666669845581, 0.7829999923706055, 0.7996666431427002, 0.8063333630561829, 0.8183333277702332, 0.8333333134651184, 0.8346666693687439, 0.8293333053588867, 0.8316666483879089, 0.8383333086967468, 0.8259999752044678, 0.8456666469573975, 0.8333333134651184, 0.8500000238418579, 0.8356666564941406, 0.8360000252723694, 0.8346666693687439, 0.8456666469573975, 0.8339999914169312]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 26, 17, 9, 2, 1, 0, 1, 0], "tree_depth": 21}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 3, 3, 9], [0, 2, 0, 3, 1], [64, 16, 39], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 3, 3, 6, 8, 1, 1, 1, 4, 2, 8], [0, 0, 2, 3, 0, 0, 3, 3, 2, 0], [99, 99, 96, 99, 61, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 14, 9, 5, 3, 2, 1, 1, 1, 11, 6, 5, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), beta)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [49, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 97], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 9, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 5, 3, 2, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3035888671875, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [0, 1, 0, 2], [99, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 2, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 3, 8, 1, 4, 1, 4, 2, 5], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 80, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha)))))", "other_info": {"loss": [2.307100772857666, 3884211387760640.0, 4464483212722176.0, 4464483212722176.0, 4464482675851264.0, 4464483212722176.0, 4464483212722176.0], "accuracy": [0.0944393053650856, 0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [77358.4140625, 4449107229802496.0, 4449107229802496.0, 4449107229802496.0, 4449107229802496.0, 4449107229802496.0, 4449107229802496.0], "val_accuracy": [0.09933333098888397, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [92, 82], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 5, 0, 3, 5], [0, 2, 0, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 5, 3, 4, 8, 1, 4, 1, 4, 1, 8], [0, 0, 0, 3, 4, 0, 3, 1, 4, 0], [16, 99, 96, 22, 61, 1]], "fitness": -0.09314285963773727, "mapping_values": [1, 2, 1, 1, 1, 6, 4, 2, 1, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), sigma))))), alpha)", "other_info": {"loss": [2.309915065765381, 2.3098862171173096, 2.3105268478393555, 2.309340238571167, 2.309978723526001, 2.310227155685425], "accuracy": [0.09325055778026581, 0.09311848133802414, 0.09536388516426086, 0.09694888442754745, 0.09245806187391281, 0.09153348207473755], "val_loss": [2.3080875873565674, 2.3080832958221436, 2.3080809116363525, 2.308079242706299, 2.308077812194824, 2.308076858520508], "val_accuracy": [0.09366666525602341, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]