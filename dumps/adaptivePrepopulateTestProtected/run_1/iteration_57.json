[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8791428804397583, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224691152572632, 1.8683772087097168, 1.4013793468475342, 1.0939387083053589, 0.9551045894622803, 0.8530007004737854, 0.779485821723938, 0.7457146048545837, 0.7030880451202393, 0.6819782257080078, 0.646918535232544, 0.6262496709823608, 0.5985910296440125, 0.5927533507347107, 0.5734840035438538, 0.5512962341308594, 0.5397131443023682, 0.5306671261787415, 0.5227266550064087, 0.5091748833656311, 0.493897944688797, 0.4855693578720093, 0.4755500555038452, 0.46436217427253723, 0.4576524496078491, 0.4496408700942993, 0.4397708475589752, 0.4444425106048584, 0.4241836667060852, 0.43109697103500366, 0.4217256009578705, 0.40949341654777527, 0.40209436416625977, 0.40443363785743713, 0.39794257283210754, 0.3834945559501648, 0.3769911527633667, 0.3764527142047882, 0.3669157326221466, 0.37186846137046814, 0.36375153064727783, 0.35602423548698425, 0.3509747087955475, 0.3444776237010956, 0.3358671963214874, 0.32751885056495667, 0.33768701553344727, 0.3213590085506439, 0.3252784311771393, 0.32559001445770264, 0.3185674250125885, 0.3153201639652252, 0.30147793889045715, 0.30520761013031006, 0.2942403256893158, 0.29585933685302734, 0.29156526923179626, 0.28494489192962646, 0.2864094078540802, 0.2840997576713562, 0.28428274393081665, 0.27462372183799744, 0.2701452672481537, 0.26235172152519226, 0.26258987188339233, 0.25485068559646606, 0.25275006890296936, 0.2532438039779663, 0.25031259655952454, 0.24532482028007507, 0.2331540286540985, 0.2390974760055542, 0.23482851684093475, 0.23101423680782318, 0.22753727436065674, 0.22632567584514618], "accuracy": [0.25941091775894165, 0.4893673360347748, 0.55791836977005, 0.6210539937019348, 0.6567164063453674, 0.6983225345611572, 0.7206445932388306, 0.7283053994178772, 0.7486461400985718, 0.7526086568832397, 0.7619865536689758, 0.7676661014556885, 0.7792893648147583, 0.7816668748855591, 0.7922335267066956, 0.7997622489929199, 0.8053097128868103, 0.8055738806724548, 0.8107251524925232, 0.8133667707443237, 0.8222163319587708, 0.8226125836372375, 0.8300092220306396, 0.8327829837799072, 0.8310658931732178, 0.844010055065155, 0.8417646288871765, 0.8400475382804871, 0.846387505531311, 0.845859169960022, 0.8498216867446899, 0.8511425256729126, 0.8581429123878479, 0.8519350290298462, 0.8560295701026917, 0.8639545440673828, 0.8640866279602051, 0.8636903762817383, 0.8676528930664062, 0.8632941246032715, 0.86553955078125, 0.8687095642089844, 0.8733324408531189, 0.8751816153526306, 0.8776912093162537, 0.8792761564254761, 0.8746532797813416, 0.8809932470321655, 0.8815215826034546, 0.8833707571029663, 0.8837670087814331, 0.8850878477096558, 0.8930128216743469, 0.8902390599250793, 0.8947299122810364, 0.8943336606025696, 0.891559898853302, 0.8963148593902588, 0.89552241563797, 0.8947299122810364, 0.895918607711792, 0.8989565372467041, 0.9046360850334167, 0.9054285883903503, 0.9002773761749268, 0.9064852595329285, 0.9074098467826843, 0.9099194407463074, 0.9104477763175964, 0.915070652961731, 0.9157310724258423, 0.9129573106765747, 0.9148064851760864, 0.9124290347099304, 0.9171839952468872, 0.9171839952468872], "val_loss": [2.038526773452759, 1.510238766670227, 1.0447747707366943, 0.8352280259132385, 0.7531793713569641, 0.6963355541229248, 0.6498194932937622, 0.6246073842048645, 0.5953369736671448, 0.5716328024864197, 0.5562007427215576, 0.5438976287841797, 0.5279420018196106, 0.51389080286026, 0.5057971477508545, 0.49414271116256714, 0.482173353433609, 0.47447696328163147, 0.46831631660461426, 0.4581488370895386, 0.4518188536167145, 0.4512670934200287, 0.4456486403942108, 0.43329060077667236, 0.43261417746543884, 0.4205039143562317, 0.4206644594669342, 0.413736492395401, 0.4104427099227905, 0.40436092019081116, 0.4019021689891815, 0.401526540517807, 0.3927256762981415, 0.39569756388664246, 0.388218492269516, 0.39298149943351746, 0.3826553523540497, 0.3818466365337372, 0.3840924799442291, 0.3762838542461395, 0.3779735565185547, 0.3782140612602234, 0.3694102466106415, 0.3699958026409149, 0.36511310935020447, 0.366933137178421, 0.36473965644836426, 0.3623674213886261, 0.35939449071884155, 0.35847315192222595, 0.3595349192619324, 0.35298311710357666, 0.3535289168357849, 0.35462313890457153, 0.35054683685302734, 0.34882593154907227, 0.3493621349334717, 0.3531535565853119, 0.34503549337387085, 0.34384992718696594, 0.3448854088783264, 0.34570378065109253, 0.34537023305892944, 0.34840068221092224, 0.34696924686431885, 0.3487513065338135, 0.33932241797447205, 0.3398410975933075, 0.33569568395614624, 0.33905473351478577, 0.34274718165397644, 0.34127065539360046, 0.33783894777297974, 0.34692227840423584, 0.35144636034965515, 0.33920830488204956], "val_accuracy": [0.5683333277702332, 0.6576666831970215, 0.6836666464805603, 0.7106666564941406, 0.7303333282470703, 0.746666669845581, 0.7596666812896729, 0.7696666717529297, 0.7720000147819519, 0.7870000004768372, 0.7943333387374878, 0.800000011920929, 0.8013333082199097, 0.8119999766349792, 0.8103333115577698, 0.8133333325386047, 0.8209999799728394, 0.8266666531562805, 0.8293333053588867, 0.8296666741371155, 0.831333339214325, 0.8373333215713501, 0.8320000171661377, 0.8396666646003723, 0.8389999866485596, 0.8483333587646484, 0.8433333039283752, 0.8503333330154419, 0.8510000109672546, 0.8523333072662354, 0.8506666421890259, 0.8529999852180481, 0.8543333411216736, 0.8569999933242798, 0.8603333234786987, 0.8576666712760925, 0.859333336353302, 0.8576666712760925, 0.8550000190734863, 0.8643333315849304, 0.859666645526886, 0.8619999885559082, 0.8683333396911621, 0.8663333058357239, 0.8686666488647461, 0.8650000095367432, 0.8663333058357239, 0.8693333268165588, 0.8700000047683716, 0.8709999918937683, 0.8723333477973938, 0.8730000257492065, 0.875, 0.871999979019165, 0.8726666569709778, 0.875, 0.8759999871253967, 0.8723333477973938, 0.8763333559036255, 0.8743333220481873, 0.875, 0.8776666522026062, 0.875, 0.8756666779518127, 0.8759999871253967, 0.8763333559036255, 0.8796666860580444, 0.8806666731834412, 0.8769999742507935, 0.8790000081062317, 0.8840000033378601, 0.8790000081062317, 0.8796666860580444, 0.878333330154419, 0.878000020980835, 0.8816666603088379]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8565714359283447, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.226572275161743, 1.8726046085357666, 1.4112601280212402, 1.106567621231079, 0.9479973316192627, 0.849149227142334, 0.7865360975265503, 0.7432125806808472, 0.7005745768547058, 0.6663590669631958, 0.643679141998291, 0.6159047484397888, 0.6054465174674988, 0.5869572162628174, 0.5676252245903015, 0.5566906332969666, 0.5448781251907349, 0.5313058495521545, 0.5183185338973999, 0.5055310130119324, 0.4933275878429413, 0.4791458249092102, 0.46677833795547485, 0.47032713890075684, 0.4639812707901001, 0.4495029151439667, 0.4463713467121124, 0.4388786256313324, 0.43263334035873413, 0.41998884081840515, 0.41175004839897156, 0.4117952883243561, 0.4065684378147125, 0.39735954999923706, 0.3920663595199585, 0.3873264491558075, 0.3766672611236572, 0.3697400987148285, 0.36793917417526245, 0.362840473651886, 0.35888466238975525, 0.35899221897125244], "accuracy": [0.26601505279541016, 0.49451854825019836, 0.5577862858772278, 0.6128648519515991, 0.6647734642028809, 0.6966054439544678, 0.7230220437049866, 0.7285695672035217, 0.7442874312400818, 0.7537974119186401, 0.7689869403839111, 0.7751948237419128, 0.7795535326004028, 0.7866860628128052, 0.7976489067077637, 0.8005547523498535, 0.8043851256370544, 0.8107251524925232, 0.8178576231002808, 0.8206313848495483, 0.8210275769233704, 0.8293488025665283, 0.8313300609588623, 0.8302733898162842, 0.8327829837799072, 0.8388587832450867, 0.8400475382804871, 0.8454629778862, 0.8442742228507996, 0.8498216867446899, 0.8521991968154907, 0.8527275323867798, 0.8551049828529358, 0.860652506351471, 0.8605204224586487, 0.8601241707801819, 0.8646149635314941, 0.8689737319946289, 0.8714832663536072, 0.8648791313171387, 0.8692378997802734, 0.8747853636741638], "val_loss": [2.0455782413482666, 1.520938754081726, 1.0381420850753784, 0.8282990455627441, 0.7399148941040039, 0.6897843480110168, 0.6418176293373108, 0.6057159304618835, 0.5817750096321106, 0.5652129650115967, 0.5433272123336792, 0.5230616927146912, 0.510940670967102, 0.5000768303871155, 0.4918699562549591, 0.4840722978115082, 0.47063419222831726, 0.4557309150695801, 0.4578574299812317, 0.4431363642215729, 0.43953630328178406, 0.4320625960826874, 0.43081510066986084, 0.4220629930496216, 0.4175384044647217, 0.41159915924072266, 0.4113580584526062, 0.4051975905895233, 0.40086629986763, 0.39954280853271484, 0.39359959959983826, 0.3932265341281891, 0.3923969268798828, 0.38493412733078003, 0.3874238133430481, 0.3810789883136749, 0.3763347864151001, 0.3739148676395416, 0.37596362829208374, 0.3786117434501648, 0.3730846047401428, 0.3677505552768707], "val_accuracy": [0.5440000295639038, 0.6443333625793457, 0.6856666803359985, 0.7153333425521851, 0.734666645526886, 0.7556666731834412, 0.7616666555404663, 0.7763333320617676, 0.7803333401679993, 0.7923333048820496, 0.800000011920929, 0.7993333339691162, 0.812666654586792, 0.8143333196640015, 0.8196666836738586, 0.8216666579246521, 0.82833331823349, 0.8326666951179504, 0.8299999833106995, 0.8376666903495789, 0.8383333086967468, 0.8450000286102295, 0.8423333168029785, 0.8500000238418579, 0.8479999899864197, 0.8479999899864197, 0.8483333587646484, 0.8536666631698608, 0.8560000061988831, 0.8579999804496765, 0.8573333621025085, 0.859666645526886, 0.8586666584014893, 0.8606666922569275, 0.8579999804496765, 0.859333336353302, 0.8650000095367432, 0.859333336353302, 0.8643333315849304, 0.8640000224113464, 0.8610000014305115, 0.8646666407585144]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 1], [0, 0, 8], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8528571724891663, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292417526245117, 2.1896605491638184, 1.7655757665634155, 1.3326623439788818, 1.0460474491119385, 0.9099264144897461, 0.8368304967880249, 0.8157487511634827, 0.7620432376861572, 0.7460269331932068, 0.6890924572944641, 0.6825292706489563, 0.6417712569236755, 0.6272801756858826, 0.6132187843322754, 0.5968377590179443, 0.5856712460517883, 0.5569234490394592, 0.5454644560813904, 0.5247889757156372, 0.5296464562416077, 0.5113863945007324, 0.49815353751182556, 0.48550987243652344, 0.48885729908943176, 0.4740702211856842, 0.45847630500793457, 0.44475388526916504, 0.4354572892189026, 0.43166643381118774, 0.4232870042324066, 0.4211616814136505, 0.4028363823890686, 0.4067783057689667, 0.39213383197784424, 0.3928779363632202, 0.3816889524459839, 0.3588021695613861, 0.37326356768608093, 0.3657700717449188, 0.34464919567108154, 0.34789755940437317, 0.3363478481769562, 0.3336155414581299, 0.3147948384284973, 0.31030067801475525, 0.319528728723526, 0.31229767203330994, 0.30353838205337524], "accuracy": [0.1310262829065323, 0.3241315484046936, 0.4423457980155945, 0.5502575635910034, 0.6448289752006531, 0.668339729309082, 0.6915863156318665, 0.6988508701324463, 0.707568347454071, 0.7103421092033386, 0.735569953918457, 0.7437590956687927, 0.7567031979560852, 0.7588165402412415, 0.7644960880279541, 0.776251494884491, 0.7848368883132935, 0.7911768555641174, 0.7948752045631409, 0.7980451583862305, 0.8035926818847656, 0.8127063512802124, 0.8191784620285034, 0.8177255392074585, 0.81112140417099, 0.8202351331710815, 0.8256505131721497, 0.8348963260650635, 0.8376700282096863, 0.8358209133148193, 0.8426892161369324, 0.8424250483512878, 0.846387505531311, 0.8492933511734009, 0.8529917001724243, 0.8496896028518677, 0.8555012345314026, 0.8639545440673828, 0.8627657890319824, 0.8632941246032715, 0.8692378997802734, 0.8708229064941406, 0.8729361891746521, 0.8712190985679626, 0.8770307898521423, 0.8840311765670776, 0.8794082403182983, 0.8821820020675659, 0.8813894987106323], "val_loss": [2.245525360107422, 2.013054132461548, 1.1138750314712524, 0.8555237650871277, 0.7384480237960815, 0.6974798440933228, 0.6420270204544067, 0.6319637894630432, 0.6206845045089722, 0.5863826274871826, 0.5634102821350098, 0.5458728671073914, 0.5267195701599121, 0.519634485244751, 0.5160735249519348, 0.5009523630142212, 0.4972814917564392, 0.4947344958782196, 0.4760676324367523, 0.46351179480552673, 0.46318021416664124, 0.4635470509529114, 0.44741007685661316, 0.44344377517700195, 0.4319270849227905, 0.4255194365978241, 0.42375415563583374, 0.41384997963905334, 0.40258145332336426, 0.4118242859840393, 0.4036756157875061, 0.3901047706604004, 0.39407628774642944, 0.406975656747818, 0.3960532546043396, 0.38523244857788086, 0.38318169116973877, 0.4039435088634491, 0.3901132047176361, 0.38830068707466125, 0.4010019898414612, 0.40671470761299133, 0.38900598883628845, 0.37190109491348267, 0.38010627031326294, 0.41319820284843445, 0.4158102571964264, 0.410259485244751, 0.4011048674583435], "val_accuracy": [0.42133334279060364, 0.4633333384990692, 0.6629999876022339, 0.7036666870117188, 0.7333333492279053, 0.7480000257492065, 0.762333333492279, 0.7753333449363708, 0.7756666541099548, 0.781333327293396, 0.7829999923706055, 0.7906666398048401, 0.7976666688919067, 0.8023333549499512, 0.8163333535194397, 0.812666654586792, 0.8173333406448364, 0.8233333230018616, 0.8286666870117188, 0.8306666612625122, 0.8343333601951599, 0.8363333344459534, 0.8360000252723694, 0.8396666646003723, 0.8463333249092102, 0.8489999771118164, 0.8483333587646484, 0.8560000061988831, 0.8619999885559082, 0.8566666841506958, 0.8619999885559082, 0.8653333187103271, 0.8633333444595337, 0.862666666507721, 0.8679999709129333, 0.8666666746139526, 0.8723333477973938, 0.8690000176429749, 0.871999979019165, 0.8726666569709778, 0.875333309173584, 0.8766666650772095, 0.8756666779518127, 0.8803333044052124, 0.878000020980835, 0.8733333349227905, 0.8743333220481873, 0.8773333430290222, 0.8799999952316284]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 4, 3, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 1], [0, 7, 0], [0, 0], [0, 59], [1], [0], [2], [0]], "fitness": -0.843999981880188, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.555911898612976, 0.848308801651001, 0.6747213006019592, 0.588895320892334, 0.5449237823486328, 0.5117528438568115, 0.4965018928050995, 0.48461174964904785, 0.48533570766448975, 0.4836597144603729, 0.46805575489997864, 0.4636077284812927, 0.4553438425064087, 0.49901634454727173, 0.4572787582874298, 0.4092075824737549, 0.41416633129119873, 0.44507282972335815, 0.4308813810348511, 0.4560854732990265, 0.42049115896224976, 0.4339701533317566], "accuracy": [0.4624224007129669, 0.7004358768463135, 0.7494386434555054, 0.7786290049552917, 0.8039889335632324, 0.8148196935653687, 0.8202351331710815, 0.8230088353157043, 0.8230088353157043, 0.8305375576019287, 0.8367455005645752, 0.839519202709198, 0.8335754871368408, 0.8329150676727295, 0.8372738361358643, 0.8578787446022034, 0.8562937378883362, 0.8317263126373291, 0.8650112152099609, 0.8471800088882446, 0.8556333184242249, 0.8561616539955139], "val_loss": [0.8426005840301514, 0.6477996706962585, 0.543756365776062, 0.4981173574924469, 0.4751722812652588, 0.4940187931060791, 0.5213291645050049, 0.5037511587142944, 0.5291658043861389, 0.5266897082328796, 0.5826130509376526, 0.49674248695373535, 0.5637220144271851, 0.5554519295692444, 0.5013945698738098, 0.5481633543968201, 0.548846423625946, 0.590282142162323, 0.5660455822944641, 0.5596641898155212, 0.5817650556564331, 0.583713710308075], "val_accuracy": [0.6896666884422302, 0.7493333220481873, 0.7933333516120911, 0.8163333535194397, 0.8273333311080933, 0.8220000267028809, 0.8289999961853027, 0.8299999833106995, 0.831333339214325, 0.8266666531562805, 0.8306666612625122, 0.8399999737739563, 0.8349999785423279, 0.8413333296775818, 0.8403333425521851, 0.8416666388511658, 0.843999981880188, 0.8416666388511658, 0.843999981880188, 0.8420000076293945, 0.8399999737739563, 0.8386666774749756]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 5, 3, 2, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [5, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5, 0, 6, 7, 8, 4, 0, 0], [0, 2, 0, 3, 0, 4, 3], [16, 16, 81], [1, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 6, 1, 4, 2, 4], [4, 0, 0, 3, 1, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 20, 13, 7, 3, 1, 0, 1, 1, 12, 6, 6, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(grad), tf.math.pow(tf.math.negative(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, alpha)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 5], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [74, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 64, 83, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), tf.math.subtract(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), sigma)))), alpha)), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [21309.00390625, 25899.880859375, 26192.50390625, 26285.685546875, 26314.185546875, 26313.708984375], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [25713.365234375, 26184.712890625, 26323.5625, 26370.46875, 26378.1015625, 26368.662109375], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [1, 3, 3, 7, 3, 7, 5, 2, 7, 6, 1, 2, 9, 7, 2, 1, 4], [0, 0, 0, 2, 2, 3, 0, 3, 1, 1, 1, 3, 2, 3, 0], [39, 39, 74, 50, 81, 68], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 7, 7, 9], [0, 2, 0, 3], [53, 84], [0, 0, 1], [0, 5], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 32, 17, 15, 6, 6, 3, 3, 2, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(tf.math.add(tf.math.divide_no_nan(grad, grad), grad), tf.math.subtract(tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(grad, alpha), alpha)))))), alpha), tf.math.subtract(grad, tf.math.pow(grad, grad))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), beta), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 9], [2, 1, 0, 1], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 1, 0, 3, 5], [0, 2, 0, 3], [16, 62], [0, 0, 0, 0, 1, 0, 1, 1], [5, 6, 3, 8, 8], [0, 2, 3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 6, 2, 8], [0, 0, 0, 3, 0, 2, 3, 1, 2, 0], [16, 99, 96, 99, 98, 1]], "fitness": -0.09057142585515976, "mapping_values": [1, 7, 5, 2, 1, 6, 3, 3, 2, 8, 5, 3, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(beta)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(beta, sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3090455532073975, 2.310722589492798, 2.310635805130005, 2.311123847961426, 2.3101606369018555, 2.310223340988159], "accuracy": [0.09932637959718704, 0.09140139818191528, 0.08796724677085876, 0.09100515395402908, 0.09536388516426086, 0.09285431355237961], "val_loss": [2.309063196182251, 2.309063196182251, 2.309063196182251, 2.309063196182251, 2.309063196182251, 2.309063196182251], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}]