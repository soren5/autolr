[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223330497741699, 1.8670156002044678, 1.3935511112213135, 1.1012579202651978, 0.9477801322937012, 0.8379126191139221, 0.7764281630516052, 0.7235901951789856, 0.6839449405670166, 0.6511124968528748, 0.6340097188949585, 0.6069210171699524, 0.5817078948020935, 0.5635776519775391, 0.5524153113365173, 0.5367791652679443, 0.5212588906288147, 0.5178380608558655, 0.5019086003303528, 0.4879888892173767, 0.4858485460281372, 0.4747111201286316, 0.45951735973358154, 0.4532293975353241, 0.4492609202861786, 0.4330301284790039, 0.4310648441314697, 0.42051371932029724, 0.41327017545700073, 0.4060419201850891, 0.3997148871421814, 0.39729252457618713, 0.3869434893131256, 0.3869549036026001, 0.38186177611351013, 0.3692651391029358, 0.36346086859703064, 0.3634459972381592, 0.3600703179836273, 0.3489670753479004, 0.3429599404335022, 0.34309908747673035, 0.3401198089122772, 0.3303268253803253, 0.3301240801811218, 0.3276282846927643, 0.3180643618106842, 0.3136589229106903, 0.3090694546699524, 0.3071834146976471, 0.3011736273765564, 0.30332496762275696, 0.29351481795310974, 0.2937680780887604], "accuracy": [0.26680755615234375, 0.49451854825019836, 0.5679566860198975, 0.6209219098091125, 0.6646413803100586, 0.7078325152397156, 0.7234182953834534, 0.7387399077415466, 0.7541936039924622, 0.7672698497772217, 0.7677981853485107, 0.7820631265640259, 0.7897239327430725, 0.7977809906005859, 0.798309326171875, 0.8082155585289001, 0.8138951063156128, 0.8094043135643005, 0.822348415851593, 0.8269713521003723, 0.8208954930305481, 0.8310658931732178, 0.8350284099578857, 0.8367455005645752, 0.8368775844573975, 0.8444063067436218, 0.843481719493866, 0.850350022315979, 0.8502179384231567, 0.8570862412452698, 0.857218325138092, 0.8574824929237366, 0.8610487580299377, 0.8610487580299377, 0.8607845902442932, 0.8658037185668945, 0.8701624870300293, 0.8689737319946289, 0.8708229064941406, 0.8792761564254761, 0.8798044919967651, 0.8765024542808533, 0.8765024542808533, 0.8824461698532104, 0.880729079246521, 0.8844274282455444, 0.8838990926742554, 0.8887861371040344, 0.8878615498542786, 0.8903711438179016, 0.8924844861030579, 0.8912957310676575, 0.8976356983184814, 0.8960506916046143], "val_loss": [2.040694236755371, 1.5166728496551514, 1.045767068862915, 0.8421168327331543, 0.7569165229797363, 0.7011509537696838, 0.6573318839073181, 0.6179470419883728, 0.5908101201057434, 0.5737177133560181, 0.5541383624076843, 0.5365487933158875, 0.518412172794342, 0.5104728937149048, 0.49868762493133545, 0.485697478055954, 0.48461878299713135, 0.46694132685661316, 0.459992378950119, 0.44818419218063354, 0.45110249519348145, 0.4507465958595276, 0.4339507520198822, 0.4287099242210388, 0.42590731382369995, 0.4119842052459717, 0.4104468524456024, 0.4069807529449463, 0.40372517704963684, 0.3985708951950073, 0.3967111110687256, 0.39305025339126587, 0.39346253871917725, 0.3906964063644409, 0.3815464675426483, 0.3792845904827118, 0.37928369641304016, 0.3762374818325043, 0.37582898139953613, 0.37387406826019287, 0.3717586398124695, 0.36671704053878784, 0.363382488489151, 0.36401286721229553, 0.3619881868362427, 0.35666540265083313, 0.3588123917579651, 0.3541429042816162, 0.35232576727867126, 0.35342442989349365, 0.3524846136569977, 0.34847813844680786, 0.34814298152923584, 0.35015836358070374], "val_accuracy": [0.5323333144187927, 0.6446666717529297, 0.6756666898727417, 0.7043333053588867, 0.7239999771118164, 0.7493333220481873, 0.753000020980835, 0.7706666588783264, 0.7820000052452087, 0.7873333096504211, 0.7956666946411133, 0.800000011920929, 0.8136666417121887, 0.812666654586792, 0.8199999928474426, 0.824999988079071, 0.8246666789054871, 0.8326666951179504, 0.8303333520889282, 0.8376666903495789, 0.8333333134651184, 0.8343333601951599, 0.8446666598320007, 0.843666672706604, 0.846666693687439, 0.8513333201408386, 0.8546666502952576, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8529999852180481, 0.859333336353302, 0.8546666502952576, 0.8569999933242798, 0.8606666922569275, 0.8633333444595337, 0.8643333315849304, 0.8629999756813049, 0.8576666712760925, 0.8703333139419556, 0.8640000224113464, 0.8643333315849304, 0.8676666617393494, 0.8663333058357239, 0.8713333606719971, 0.871999979019165, 0.8693333268165588, 0.8693333268165588, 0.878000020980835, 0.8756666779518127, 0.8706666827201843, 0.8756666779518127, 0.8769999742507935, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8611428737640381, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2254371643066406, 1.8678545951843262, 1.3858100175857544, 1.0868074893951416, 0.9351158738136292, 0.8319524526596069, 0.7726144790649414, 0.7261943221092224, 0.6846054792404175, 0.6477856636047363, 0.62955641746521, 0.613865315914154, 0.5873925685882568, 0.5765812397003174, 0.5559748411178589, 0.5454565286636353, 0.5304333567619324, 0.5188639163970947, 0.5098002552986145, 0.4972382187843323, 0.4881786108016968, 0.4824301600456238, 0.4694218039512634, 0.4648803174495697, 0.4639831483364105, 0.4489894211292267, 0.4385993778705597, 0.4304226040840149, 0.4222177267074585, 0.4234732687473297, 0.4082481861114502, 0.4057837128639221, 0.397372841835022, 0.3935279846191406, 0.3949616253376007, 0.3800148665904999, 0.3840911388397217, 0.37106192111968994, 0.36911189556121826, 0.3597239553928375, 0.35391271114349365, 0.3505054712295532, 0.35053369402885437, 0.3449949026107788], "accuracy": [0.28041210770606995, 0.5000660419464111, 0.573107898235321, 0.6210539937019348, 0.6680755615234375, 0.7008321285247803, 0.7211728692054749, 0.7359662055969238, 0.7530049085617065, 0.7683265209197998, 0.7700436115264893, 0.7790252566337585, 0.7868181467056274, 0.7862898111343384, 0.7975168228149414, 0.7984414100646973, 0.8078193068504333, 0.8124422430992126, 0.8206313848495483, 0.8183859586715698, 0.8228767514228821, 0.8251221776008606, 0.8286884427070618, 0.8362171649932861, 0.83119797706604, 0.8400475382804871, 0.8422929644584656, 0.8429533839225769, 0.8479725122451782, 0.8457271456718445, 0.8552370667457581, 0.852859616279602, 0.8603883385658264, 0.8576145768165588, 0.8590674996376038, 0.8648791313171387, 0.8602562546730042, 0.8689737319946289, 0.8676528930664062, 0.8684453964233398, 0.8726720213890076, 0.8732003569602966, 0.8728041052818298, 0.8754457831382751], "val_loss": [2.0368967056274414, 1.4976152181625366, 1.0173777341842651, 0.8100875616073608, 0.7208215594291687, 0.669118344783783, 0.621799647808075, 0.5935515761375427, 0.5658315420150757, 0.5384759902954102, 0.5244548916816711, 0.5100542902946472, 0.4996507167816162, 0.48336002230644226, 0.47439974546432495, 0.46565136313438416, 0.45747941732406616, 0.4486316442489624, 0.4462796747684479, 0.4357413351535797, 0.42761772871017456, 0.42411959171295166, 0.42750412225723267, 0.41785112023353577, 0.41679248213768005, 0.40282511711120605, 0.3970452845096588, 0.4011085629463196, 0.3926461935043335, 0.38938117027282715, 0.3831990957260132, 0.38175827264785767, 0.38273885846138, 0.37605488300323486, 0.36946532130241394, 0.3692348599433899, 0.3673332631587982, 0.36340510845184326, 0.3623896837234497, 0.35816553235054016, 0.3608218729496002, 0.35542812943458557, 0.354288250207901, 0.3524034321308136], "val_accuracy": [0.5676666498184204, 0.6666666865348816, 0.6949999928474426, 0.7110000252723694, 0.7429999709129333, 0.7480000257492065, 0.7706666588783264, 0.7763333320617676, 0.7856666445732117, 0.8009999990463257, 0.8046666383743286, 0.8069999814033508, 0.8083333373069763, 0.8206666707992554, 0.8226666450500488, 0.8243333101272583, 0.8253333568572998, 0.8379999995231628, 0.8370000123977661, 0.8373333215713501, 0.847000002861023, 0.8423333168029785, 0.8473333120346069, 0.8483333587646484, 0.8426666855812073, 0.8536666631698608, 0.8576666712760925, 0.8513333201408386, 0.8566666841506958, 0.8550000190734863, 0.862333357334137, 0.862333357334137, 0.8573333621025085, 0.8650000095367432, 0.8650000095367432, 0.8653333187103271, 0.8686666488647461, 0.8673333525657654, 0.871999979019165, 0.8676666617393494, 0.8700000047683716, 0.8666666746139526, 0.8656666874885559, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 0, 1, 1], [0, 5, 0, 0, 7], [0, 5], [0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 7, 7, 6, 6, 5, 1, 6, 8, 0, 4, 9, 2, 0, 3, 8, 7, 6, 2, 5, 3, 7, 0, 2, 4], [0, 1, 6, 3, 0, 2, 0, 6, 6, 2, 4, 6, 0, 3, 1, 0], [0, 73, 0, 67, 99, 19], [0, 1], [0], [1], [0]], "fitness": -0.8557142615318298, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.negative(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(alpha), grad), sigma)), tf.math.subtract(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.multiply(grad, tf.math.add(beta, grad)))), tf.math.negative(grad))), tf.math.add(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), alpha))))))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2923178672790527, 2.187685251235962, 1.7532752752304077, 1.3360958099365234, 1.0713623762130737, 0.9028084874153137, 0.8447386622428894, 0.8039321899414062, 0.7645108103752136, 0.737568199634552, 0.6937369108200073, 0.6719415783882141, 0.6411171555519104, 0.6159011721611023, 0.5995327830314636, 0.5799577832221985, 0.5789597630500793, 0.565034031867981, 0.5463548302650452, 0.5353525876998901, 0.5324780941009521, 0.5150244832038879, 0.5027341842651367, 0.4909887909889221, 0.49543488025665283, 0.46504032611846924, 0.4662567377090454, 0.4606733024120331, 0.4495795667171478, 0.4313458800315857, 0.42290306091308594, 0.4241492450237274, 0.41850796341896057, 0.40614375472068787, 0.41380342841148376, 0.39636045694351196, 0.3911062180995941, 0.39330023527145386, 0.39176300168037415, 0.3843316435813904, 0.38870659470558167], "accuracy": [0.13036586344242096, 0.32545238733291626, 0.4443270266056061, 0.5513142347335815, 0.635979413986206, 0.6700568199157715, 0.6913221478462219, 0.703209638595581, 0.7061154246330261, 0.7103421092033386, 0.7387399077415466, 0.7460044622421265, 0.7613261342048645, 0.7676661014556885, 0.7707040309906006, 0.7837802171707153, 0.7843085527420044, 0.7878747582435608, 0.7954035401344299, 0.7927618622779846, 0.8010830879211426, 0.8074230551719666, 0.8068947196006775, 0.8105930685997009, 0.8107251524925232, 0.8245938420295715, 0.8241975903511047, 0.8259146809577942, 0.83119797706604, 0.8338396549224854, 0.8413683772087097, 0.8362171649932861, 0.8457271456718445, 0.8424250483512878, 0.8424250483512878, 0.8515387773513794, 0.8525954484939575, 0.8492933511734009, 0.8490291833877563, 0.8585391640663147, 0.8508783578872681], "val_loss": [2.245987892150879, 2.010262966156006, 1.1311702728271484, 0.8932929635047913, 0.7602443099021912, 0.7131156325340271, 0.6745600700378418, 0.6425172686576843, 0.6433194875717163, 0.6158177256584167, 0.5758121609687805, 0.5659758448600769, 0.5397306680679321, 0.5296996831893921, 0.5187687873840332, 0.5119248628616333, 0.49808576703071594, 0.4944325387477875, 0.4946826994419098, 0.4863218069076538, 0.46801912784576416, 0.46534931659698486, 0.4659162163734436, 0.45404306054115295, 0.45497769117355347, 0.4476100206375122, 0.44699934124946594, 0.43796613812446594, 0.4280856251716614, 0.4291837215423584, 0.42658594250679016, 0.4285373389720917, 0.41729626059532166, 0.4141460359096527, 0.4119780659675598, 0.42000797390937805, 0.40805479884147644, 0.40848860144615173, 0.42158716917037964, 0.41699308156967163, 0.4021035134792328], "val_accuracy": [0.3916666805744171, 0.4490000009536743, 0.640666663646698, 0.6786666512489319, 0.7206666469573975, 0.7266666889190674, 0.7426666617393494, 0.753000020980835, 0.7426666617393494, 0.762666642665863, 0.7773333191871643, 0.7770000100135803, 0.7996666431427002, 0.800000011920929, 0.7993333339691162, 0.8069999814033508, 0.8119999766349792, 0.8133333325386047, 0.812666654586792, 0.8213333487510681, 0.8299999833106995, 0.8306666612625122, 0.8299999833106995, 0.8410000205039978, 0.8336666822433472, 0.8379999995231628, 0.8339999914169312, 0.8413333296775818, 0.8516666889190674, 0.8506666421890259, 0.8529999852180481, 0.8526666760444641, 0.8553333282470703, 0.8529999852180481, 0.8583333492279053, 0.8603333234786987, 0.859000027179718, 0.8579999804496765, 0.8566666841506958, 0.8539999723434448, 0.8579999804496765]}, "mapping_values": [1, 10, 5, 5, 3, 7, 5, 2, 1, 41, 25, 16, 6, 2, 1, 1, 0], "tree_depth": 35}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 2, 7, 2, 9, 5, 9, 0, 1, 9, 0], [0, 2], [0, 15, 32, 97], [1], [0], [2], [0]], "fitness": -0.8320000171661377, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.46273934841156, 0.7693285346031189, 0.6766998171806335, 0.6044811010360718, 0.5488937497138977, 0.5686776638031006, 0.5162712931632996, 0.5079101920127869, 0.4843364953994751, 0.4490959644317627, 0.449223130941391, 0.43580588698387146, 0.44741249084472656, 0.4771295487880707], "accuracy": [0.5056135058403015, 0.726192057132721, 0.7561748623847961, 0.7848368883132935, 0.7988376617431641, 0.800290584564209, 0.8136309385299683, 0.8252542614936829, 0.822348415851593, 0.8428213000297546, 0.8350284099578857, 0.8536521196365356, 0.8508783578872681, 0.8360850811004639], "val_loss": [0.7804090976715088, 0.6263973712921143, 0.5331000685691833, 0.5196686387062073, 0.5521465539932251, 0.5066940188407898, 0.4999277889728546, 0.5148496031761169, 0.466055303812027, 0.4594065845012665, 0.5067737102508545, 0.48731815814971924, 0.5154445767402649, 0.5628052949905396], "val_accuracy": [0.7326666712760925, 0.7806666493415833, 0.8109999895095825, 0.8136666417121887, 0.8206666707992554, 0.8326666951179504, 0.8346666693687439, 0.8389999866485596, 0.8539999723434448, 0.846666693687439, 0.8483333587646484, 0.847000002861023, 0.843999981880188, 0.8536666631698608]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 13, 11, 2, 4, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 2], [0, 3, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 41, 61, 1]], "fitness": -0.8208571672439575, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 18, 9, 9, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(sigma, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), beta)", "other_info": {"loss": [2.255934953689575, 1.7608975172042847, 1.153404951095581, 0.9140174984931946, 0.8116456270217896, 0.7604047060012817, 0.7157546877861023, 0.7036149501800537, 0.675057053565979, 0.656301736831665, 0.6542211174964905, 0.6395376324653625, 0.6323580145835876, 0.6097281575202942, 0.6120004653930664, 0.5997341275215149, 0.591119110584259, 0.5870513916015625, 0.5874186754226685, 0.5851582884788513, 0.5766734480857849, 0.5742999315261841, 0.5600536465644836, 0.5586158037185669, 0.5499086380004883, 0.5489633083343506, 0.5493541955947876, 0.5424768328666687, 0.5421640872955322, 0.5408951640129089, 0.5384705066680908, 0.5354777574539185, 0.5332458019256592, 0.5246003866195679, 0.5282995104789734, 0.5269578695297241, 0.5257822871208191, 0.5177369117736816, 0.5213913917541504], "accuracy": [0.2122572958469391, 0.44551578164100647, 0.5910711884498596, 0.6693964004516602, 0.6947563290596008, 0.7121912837028503, 0.7323999404907227, 0.7362303733825684, 0.7481178045272827, 0.7555144429206848, 0.7568352818489075, 0.7627789974212646, 0.7650244235992432, 0.7778365015983582, 0.7729493975639343, 0.7769119143486023, 0.7839123010635376, 0.78113853931427, 0.7880068421363831, 0.7858935594558716, 0.7874785661697388, 0.7936864495277405, 0.7961959838867188, 0.7989697456359863, 0.8010830879211426, 0.7947431206703186, 0.7994980812072754, 0.7993659973144531, 0.8025360107421875, 0.8035926818847656, 0.7988376617431641, 0.8063663840293884, 0.8076872229576111, 0.8076872229576111, 0.8083476424217224, 0.8120459914207458, 0.8080834746360779, 0.8107251524925232, 0.8080834746360779], "val_loss": [2.0822603702545166, 1.0394823551177979, 0.7845606803894043, 0.7064358592033386, 0.6680362820625305, 0.6313389539718628, 0.6027098894119263, 0.5861517786979675, 0.5833110809326172, 0.5698871612548828, 0.5614324808120728, 0.5522376894950867, 0.5447917580604553, 0.5418756604194641, 0.5362744331359863, 0.5331792831420898, 0.5297199487686157, 0.520479679107666, 0.5175901055335999, 0.5163953304290771, 0.5106697082519531, 0.5087199807167053, 0.5040187835693359, 0.5022485256195068, 0.4985201060771942, 0.49520421028137207, 0.4917736053466797, 0.4908302426338196, 0.48947176337242126, 0.48900845646858215, 0.4881090521812439, 0.4826619029045105, 0.4820857644081116, 0.48158666491508484, 0.4796993136405945, 0.47715094685554504, 0.47599300742149353, 0.47470980882644653, 0.4726690649986267], "val_accuracy": [0.4346666634082794, 0.6629999876022339, 0.7136666774749756, 0.7303333282470703, 0.7296666502952576, 0.7556666731834412, 0.7663333415985107, 0.7793333530426025, 0.7736666798591614, 0.7823333144187927, 0.7833333611488342, 0.7940000295639038, 0.7916666865348816, 0.7926666736602783, 0.8013333082199097, 0.8016666769981384, 0.7976666688919067, 0.8073333501815796, 0.8076666593551636, 0.8073333501815796, 0.8063333630561829, 0.8086666464805603, 0.8086666464805603, 0.8100000023841858, 0.8106666803359985, 0.8149999976158142, 0.8140000104904175, 0.8143333196640015, 0.8149999976158142, 0.815666675567627, 0.8199999928474426, 0.8230000138282776, 0.8196666836738586, 0.8240000009536743, 0.8209999799728394, 0.8223333358764648, 0.8220000267028809, 0.8220000267028809, 0.8240000009536743]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 3, 0, 3], [2, 1, 1, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 3, 3, 6, 8, 1, 4, 0, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 3, 0], [16, 99, 96, 90, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 0, 2, 1, 1, 1, 2, 1, 1, 1, 16, 9, 7, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(grad), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(sigma, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 9, 9, 4, 1, 4, 0, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 72, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 11, 7, 4, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3032069206237793, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 3, 6, 0, 3], [0, 2, 3, 0, 2], [74, 39], [0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [0], [1, 1], [4], [0], [85], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 2, 1, 1, 1, 1, 0, 1, 1, 2, 2, 0, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [7.609561920166016, 58.38636779785156, 203.5670928955078, 491.648193359375, 986.083984375, 1803.2318115234375], "accuracy": [0.10315678268671036, 0.09800554811954498, 0.1022322028875351, 0.09985470771789551, 0.10460969805717468, 0.09576013684272766], "val_loss": [20.653104782104492, 96.85841369628906, 268.7800598144531, 586.2023315429688, 1098.4178466796875, 1855.1099853515625], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}]