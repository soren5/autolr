[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8591428399085999, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222416877746582, 1.859883189201355, 1.3848553895950317, 1.0903400182724, 0.9284099340438843, 0.8264114856719971, 0.772147536277771, 0.718180775642395, 0.6764454245567322, 0.6506279110908508, 0.626063346862793, 0.6015205979347229, 0.5820329785346985, 0.56267249584198, 0.547192394733429, 0.5349379777908325, 0.5225938558578491, 0.507266640663147, 0.4953976571559906, 0.4947062134742737, 0.47657740116119385, 0.45992523431777954, 0.4568260908126831, 0.44231560826301575, 0.4413900673389435, 0.4365031123161316, 0.42699238657951355, 0.41873598098754883, 0.40500739216804504, 0.3988474905490875, 0.401995450258255, 0.3850584924221039, 0.3797345459461212, 0.3769805431365967, 0.36407509446144104, 0.36486637592315674, 0.36441728472709656, 0.3575725853443146, 0.3565588891506195, 0.3473900556564331, 0.34269675612449646, 0.3356865346431732, 0.33727049827575684, 0.3368886709213257], "accuracy": [0.2818650007247925, 0.5001981258392334, 0.5641262531280518, 0.6170915365219116, 0.6705851554870605, 0.7024171352386475, 0.7174745798110962, 0.7362303733825684, 0.7470611333847046, 0.7629110813140869, 0.7726852297782898, 0.7841764688491821, 0.7862898111343384, 0.7956677079200745, 0.7984414100646973, 0.8075551390647888, 0.8140271902084351, 0.8171972036361694, 0.8269713521003723, 0.8198388814926147, 0.828292191028595, 0.8352925777435303, 0.841500461101532, 0.8408400416374207, 0.8482366800308228, 0.847840428352356, 0.8465195894241333, 0.8560295701026917, 0.8564258217811584, 0.8585391640663147, 0.8570862412452698, 0.8627657890319824, 0.8646149635314941, 0.8614450097084045, 0.8687095642089844, 0.8702945709228516, 0.872407853603363, 0.8759741187095642, 0.8758420348167419, 0.8750495314598083, 0.8754457831382751, 0.8794082403182983, 0.8799365758895874, 0.8799365758895874], "val_loss": [2.039191961288452, 1.516512155532837, 1.0565588474273682, 0.8557843565940857, 0.7633177042007446, 0.7023541927337646, 0.6577450037002563, 0.619398832321167, 0.5952487587928772, 0.5705877542495728, 0.55814528465271, 0.5375979542732239, 0.5202134847640991, 0.5081562399864197, 0.49799051880836487, 0.48472917079925537, 0.47977694869041443, 0.4670059382915497, 0.4576970338821411, 0.4598791003227234, 0.44984903931617737, 0.4353233277797699, 0.4321173429489136, 0.4296894073486328, 0.42280805110931396, 0.4278069734573364, 0.41977551579475403, 0.4072580635547638, 0.4090523421764374, 0.40230709314346313, 0.40056657791137695, 0.40046027302742004, 0.393866628408432, 0.39104512333869934, 0.39138659834861755, 0.3940918743610382, 0.3850117623806, 0.3797755539417267, 0.38383519649505615, 0.38496989011764526, 0.3785325586795807, 0.3844185471534729, 0.3777424991130829, 0.3777540326118469], "val_accuracy": [0.5493333339691162, 0.6396666765213013, 0.671999990940094, 0.6956666707992554, 0.7246666550636292, 0.7480000257492065, 0.7586666941642761, 0.7796666622161865, 0.7793333530426025, 0.7919999957084656, 0.8023333549499512, 0.8056666851043701, 0.8133333325386047, 0.8180000185966492, 0.8240000009536743, 0.8309999704360962, 0.8309999704360962, 0.8316666483879089, 0.8373333215713501, 0.8373333215713501, 0.8389999866485596, 0.846666693687439, 0.843999981880188, 0.8496666550636292, 0.8473333120346069, 0.8493333458900452, 0.8543333411216736, 0.8583333492279053, 0.859333336353302, 0.8583333492279053, 0.859000027179718, 0.8629999756813049, 0.862333357334137, 0.8610000014305115, 0.8629999756813049, 0.862666666507721, 0.8673333525657654, 0.8673333525657654, 0.8686666488647461, 0.8629999756813049, 0.8676666617393494, 0.8650000095367432, 0.8659999966621399, 0.8666666746139526]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 5], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8497142791748047, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2931597232818604, 2.191441059112549, 1.782007098197937, 1.349151611328125, 1.0792338848114014, 0.9303801655769348, 0.8476786017417908, 0.8123779892921448, 0.7663930654525757, 0.7484540343284607, 0.7012176513671875, 0.675357460975647, 0.6403724551200867, 0.6225621700286865, 0.5939782857894897, 0.5968268513679504, 0.5821105241775513, 0.5607412457466125, 0.5574735999107361, 0.5391452312469482, 0.5219162106513977, 0.5207976698875427, 0.5059919357299805, 0.4922349750995636, 0.4823984205722809, 0.4865766763687134, 0.4576088488101959, 0.44858527183532715, 0.444240003824234, 0.42937716841697693, 0.4173785448074341, 0.409413605928421, 0.3952387571334839, 0.3973790109157562, 0.382534921169281, 0.39104601740837097, 0.3726324737071991, 0.3758312463760376, 0.3636651039123535, 0.35786575078964233, 0.35568860173225403], "accuracy": [0.12930920720100403, 0.3125082552433014, 0.4325716495513916, 0.547087550163269, 0.6413947939872742, 0.6672830581665039, 0.6946242451667786, 0.7016246318817139, 0.7034738063812256, 0.7180029153823853, 0.7297582626342773, 0.7358341217041016, 0.7559106945991516, 0.7631752490997314, 0.769911527633667, 0.780610203742981, 0.7869502305984497, 0.7891955971717834, 0.7869502305984497, 0.7955356240272522, 0.802271842956543, 0.805177628993988, 0.8132346868515015, 0.8210275769233704, 0.8168009519577026, 0.8193105459213257, 0.8278959393501282, 0.8278959393501282, 0.8363492488861084, 0.8404437899589539, 0.841500461101532, 0.8418967127799988, 0.8488970994949341, 0.8475762605667114, 0.8508783578872681, 0.8454629778862, 0.8605204224586487, 0.854708731174469, 0.8648791313171387, 0.8667283058166504, 0.8625016212463379], "val_loss": [2.2461764812469482, 2.022841453552246, 1.1384259462356567, 0.878390371799469, 0.7580141425132751, 0.6974537968635559, 0.6729652285575867, 0.6413220167160034, 0.6403393745422363, 0.6111428737640381, 0.5641550421714783, 0.5490865707397461, 0.5302402377128601, 0.5172790288925171, 0.5088905692100525, 0.5079957842826843, 0.48792675137519836, 0.48166292905807495, 0.48973631858825684, 0.48237311840057373, 0.46841275691986084, 0.46146100759506226, 0.482738196849823, 0.45744454860687256, 0.4393991231918335, 0.42834705114364624, 0.430946946144104, 0.4299497604370117, 0.4180866777896881, 0.4102330803871155, 0.4133058786392212, 0.4236837923526764, 0.4214005172252655, 0.40493375062942505, 0.40278851985931396, 0.4117885231971741, 0.4115740656852722, 0.4189135730266571, 0.4205757677555084, 0.4121590852737427, 0.4060395359992981], "val_accuracy": [0.4086666703224182, 0.44966667890548706, 0.653333306312561, 0.6913333535194397, 0.7223333120346069, 0.7413333058357239, 0.7456666827201843, 0.7486666440963745, 0.7553333044052124, 0.7666666507720947, 0.781000018119812, 0.7866666913032532, 0.7916666865348816, 0.8019999861717224, 0.8080000281333923, 0.8096666932106018, 0.8149999976158142, 0.8246666789054871, 0.8203333616256714, 0.8193333148956299, 0.8266666531562805, 0.8320000171661377, 0.8276666402816772, 0.8336666822433472, 0.8393333554267883, 0.8423333168029785, 0.8393333554267883, 0.8383333086967468, 0.8450000286102295, 0.8460000157356262, 0.8433333039283752, 0.847000002861023, 0.8510000109672546, 0.8556666374206543, 0.8526666760444641, 0.8613333106040955, 0.859666645526886, 0.8560000061988831, 0.8556666374206543, 0.8553333282470703, 0.8523333072662354]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 3, 3, 2, 1, 6, 9, 5, 4, 4, 7, 8, 7, 1, 0, 6, 1], [0, 1, 1, 6, 6, 4, 3, 0, 7, 2, 3, 7], [0, 26, 30], [1], [0], [2], [0]], "fitness": -0.8231428861618042, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.divide_no_nan(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), grad), tf.math.square(tf.math.pow(tf.math.pow(grad, tf.math.add(tf.math.sqrt(tf.math.add(tf.math.subtract(tf.math.negative(grad), sigma), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), grad)), tf.math.divide_no_nan(tf.math.subtract(beta, sigma), grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6069334745407104, 1.081079363822937, 0.793923556804657, 0.696796715259552, 0.7035933136940002, 0.7040176391601562, 0.6321340799331665, 0.6011506915092468, 0.5897305011749268, 0.5977497696876526, 0.5832005739212036, 0.5660702586174011, 0.5497853755950928, 0.5565342903137207, 0.5218905210494995, 0.538512647151947, 0.5149403214454651, 0.545721173286438, 0.5737497806549072, 0.5527232885360718, 0.5768694281578064, 0.5670937895774841, 0.5532195568084717, 0.5684272050857544, 0.6171686053276062, 0.6704214215278625], "accuracy": [0.48289525508880615, 0.6696605682373047, 0.7173424959182739, 0.737022876739502, 0.7460044622421265, 0.7491744756698608, 0.769911527633667, 0.7881389260292053, 0.789988100528717, 0.7905164361000061, 0.7951393723487854, 0.7969884872436523, 0.7897239327430725, 0.817461371421814, 0.8156121969223022, 0.8047813773155212, 0.8132346868515015, 0.8170651197433472, 0.8127063512802124, 0.8088759779930115, 0.8101968169212341, 0.8107251524925232, 0.81112140417099, 0.8010830879211426, 0.8087438941001892, 0.7849689722061157], "val_loss": [1.1499073505401611, 0.6564161777496338, 0.6198810338973999, 0.6005045771598816, 0.6210913062095642, 0.5455272793769836, 0.5364251136779785, 0.6150067448616028, 0.5315403938293457, 0.5336865186691284, 0.5591806173324585, 0.5405206084251404, 0.5672210454940796, 0.5873048305511475, 0.5224518179893494, 0.4930906295776367, 0.5538718104362488, 0.5850591659545898, 0.5655327439308167, 0.57697993516922, 0.5648478269577026, 0.5661637187004089, 0.5713037252426147, 0.5646619200706482, 0.5780892968177795, 0.6253519654273987], "val_accuracy": [0.6196666955947876, 0.7523333430290222, 0.7620000243186951, 0.781333327293396, 0.7799999713897705, 0.8026666641235352, 0.809333324432373, 0.8213333487510681, 0.8163333535194397, 0.8169999718666077, 0.8169999718666077, 0.8069999814033508, 0.8230000138282776, 0.8286666870117188, 0.8109999895095825, 0.8253333568572998, 0.8259999752044678, 0.8209999799728394, 0.8289999961853027, 0.8309999704360962, 0.8330000042915344, 0.824999988079071, 0.8216666579246521, 0.8243333101272583, 0.8140000104904175, 0.8166666626930237]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 29, 17, 12, 3, 1, 0, 1, 0], "tree_depth": 23}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 4], [0, 1, 0, 1], [39, 39], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 5, 3, 0, 3, 5], [0, 2, 0, 2], [2, 9], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [9, 3, 3, 6, 8, 2, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 2, 2, 0], [16, 53, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3033533096313477, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [6, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 0], [0, 2, 0, 3], [16, 69], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 2, 1, 8, 4, 4, 0, 8], [0, 0, 3, 4, 0, 0, 3, 1, 2, 0], [16, 57, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.math.add(sigma, tf.math.subtract(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, alpha)))", "other_info": {"loss": [2.303793430328369, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1014397069811821, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025848865509033, 2.3025848865509033, 2.3025848865509033, 2.3025851249694824, 2.3025848865509033, 2.3025848865509033], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 0, 3, 6, 8, 1, 4, 1, 4, 2, 8, 0, 2], [0, 4, 0, 3, 0, 0, 3, 1, 0, 1], [16, 99, 5, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 10, 6, 4, 2, 2, 1, 1, 0, 23, 13, 10, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))))))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [56, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 9, 0], [0, 2, 0, 3], [16, 79, 26], [0, 1], [0], [3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 2, 0, 3, 2, 4, 7, 3, 2, 4, 0, 7, 4, 8, 8, 9], [0, 0, 4, 3, 4, 1, 0, 1, 2, 0, 4, 2, 3, 5, 4, 6, 3, 3, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.09428571164608002, "mapping_values": [1, 9, 5, 4, 2, 10, 7, 3, 3, 2, 1, 1, 0, 45, 26, 19, 5], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), beta), tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(grad, tf.math.pow(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, beta)))))), tf.math.negative(tf.math.multiply(tf.math.add(tf.math.pow(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(grad), tf.math.add(tf.math.pow(beta, tf.math.sqrt(sigma)), grad))), grad), grad), sigma), tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), sigma))), sigma)", "other_info": {"loss": [2.3100979328155518, 2.3098409175872803, 2.310086965560913, 2.310213088989258, 2.3095622062683105, 2.31060791015625], "accuracy": [0.09536388516426086, 0.09536388516426086, 0.09021265059709549, 0.09206181764602661, 0.09351472556591034, 0.09272222965955734], "val_loss": [2.3088278770446777, 2.3088278770446777, 2.3088278770446777, 2.3088278770446777, 2.3088278770446777, 2.3088278770446777], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]