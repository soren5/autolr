[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.868571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2237913608551025, 1.8768354654312134, 1.4015109539031982, 1.0896304845809937, 0.9314815998077393, 0.817586362361908, 0.7779426574707031, 0.7209463119506836, 0.6897522211074829, 0.6516618132591248, 0.6318751573562622, 0.6088257431983948, 0.5823484063148499, 0.5588323473930359, 0.5514978766441345, 0.5354762673377991, 0.5216091871261597, 0.5119508504867554, 0.5054106116294861, 0.4882553517818451, 0.4789804220199585, 0.4716934263706207, 0.4619212746620178, 0.4517957270145416, 0.4492117166519165, 0.4339666962623596, 0.4272160530090332, 0.4282558262348175, 0.4222511351108551, 0.421049028635025, 0.40830063819885254, 0.40210872888565063, 0.394024521112442, 0.3926442265510559, 0.38001736998558044, 0.38094404339790344, 0.3684079051017761, 0.3664492964744568, 0.3652780055999756, 0.3567749261856079, 0.348482221364975, 0.34026476740837097, 0.34735769033432007, 0.3366454243659973, 0.33319759368896484, 0.3322118818759918, 0.32924845814704895, 0.3267093002796173], "accuracy": [0.2798837721347809, 0.4785365164279938, 0.5675604343414307, 0.6234315037727356, 0.6704530715942383, 0.7045304179191589, 0.7218332886695862, 0.7407211661338806, 0.7486461400985718, 0.7631752490997314, 0.7614582180976868, 0.7781006693840027, 0.7845727205276489, 0.7959318161010742, 0.8024039268493652, 0.8033285140991211, 0.8119139075279236, 0.8166688680648804, 0.8185180425643921, 0.8261788487434387, 0.83119797706604, 0.8298771381378174, 0.8352925777435303, 0.8370096683502197, 0.8401796221733093, 0.8470479249954224, 0.8541803956031799, 0.842028796672821, 0.8541803956031799, 0.8477083444595337, 0.854708731174469, 0.8582749962806702, 0.8555012345314026, 0.8597279191017151, 0.8631620407104492, 0.8642187118530273, 0.867520809173584, 0.8697662353515625, 0.8709549307823181, 0.8721436858177185, 0.8761062026023865, 0.8800686597824097, 0.873860776424408, 0.8824461698532104, 0.8819178342819214, 0.8815215826034546, 0.8787478804588318, 0.8836349248886108], "val_loss": [2.04099440574646, 1.5164188146591187, 1.0436099767684937, 0.8330209851264954, 0.7441796064376831, 0.6830399632453918, 0.642865002155304, 0.6127917170524597, 0.5864114761352539, 0.5620424151420593, 0.5461270213127136, 0.5271670818328857, 0.5085183382034302, 0.5016932487487793, 0.4913506805896759, 0.47702786326408386, 0.47209614515304565, 0.47187623381614685, 0.45714738965034485, 0.4452970325946808, 0.43791234493255615, 0.43656232953071594, 0.43543171882629395, 0.43101754784584045, 0.42145678400993347, 0.4171386659145355, 0.4126306176185608, 0.4098507761955261, 0.4062640070915222, 0.4069812297821045, 0.39820051193237305, 0.3966900706291199, 0.3994731903076172, 0.389241486787796, 0.3888271450996399, 0.3892250955104828, 0.3820202648639679, 0.3773394823074341, 0.37179121375083923, 0.3717893958091736, 0.37175390124320984, 0.37385568022727966, 0.36587104201316833, 0.3657275438308716, 0.365574449300766, 0.36429572105407715, 0.36624234914779663, 0.3596387207508087], "val_accuracy": [0.531333327293396, 0.6633333563804626, 0.6809999942779541, 0.7056666612625122, 0.7260000109672546, 0.7553333044052124, 0.7593333125114441, 0.7730000019073486, 0.7799999713897705, 0.7963333129882812, 0.7983333468437195, 0.8146666884422302, 0.8166666626930237, 0.8183333277702332, 0.8236666917800903, 0.8270000219345093, 0.8263333439826965, 0.8273333311080933, 0.8316666483879089, 0.8363333344459534, 0.8393333554267883, 0.8423333168029785, 0.840666651725769, 0.8446666598320007, 0.8483333587646484, 0.846666693687439, 0.8506666421890259, 0.8506666421890259, 0.8516666889190674, 0.8519999980926514, 0.8566666841506958, 0.8529999852180481, 0.8553333282470703, 0.8566666841506958, 0.8579999804496765, 0.8600000143051147, 0.859000027179718, 0.8619999885559082, 0.8679999709129333, 0.8643333315849304, 0.8659999966621399, 0.8619999885559082, 0.871666669845581, 0.8650000095367432, 0.8669999837875366, 0.8686666488647461, 0.8679999709129333, 0.8669999837875366]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8320000171661377, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6020582914352417, 0.8284952044487, 0.6676342487335205, 0.5913920402526855, 0.569189727306366, 0.5159915089607239, 0.5178405046463013, 0.5163857936859131, 0.5095553398132324, 0.48996397852897644, 0.48186635971069336, 0.489604651927948], "accuracy": [0.47747984528541565, 0.6999075412750244, 0.7506273984909058, 0.7828556299209595, 0.7893276810646057, 0.8092722296714783, 0.8152159452438354, 0.8108572363853455, 0.8212917447090149, 0.8207634687423706, 0.8220842480659485, 0.8294808864593506], "val_loss": [0.8932737112045288, 0.6072643995285034, 0.5430126786231995, 0.4831286072731018, 0.49523410201072693, 0.4985603988170624, 0.4636070132255554, 0.45398780703544617, 0.4818230867385864, 0.4929737150669098, 0.4795932471752167, 0.49586284160614014], "val_accuracy": [0.675000011920929, 0.7693333625793457, 0.7900000214576721, 0.8163333535194397, 0.8193333148956299, 0.8316666483879089, 0.8386666774749756, 0.8343333601951599, 0.8209999799728394, 0.8303333520889282, 0.8363333344459534, 0.8376666903495789]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0], [0, 9], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8142856955528259, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293368101119995, 2.189706563949585, 1.783818006515503, 1.3568813800811768, 1.0849151611328125, 0.9403460621833801, 0.8666287660598755, 0.813079297542572, 0.7625675797462463, 0.7406160235404968, 0.6977233290672302, 0.6737057566642761, 0.6511307954788208, 0.633558452129364, 0.6149629950523376, 0.5948309302330017, 0.5909242630004883, 0.5721348524093628, 0.556496798992157, 0.5477281808853149, 0.5444006323814392, 0.5267952084541321, 0.5045400261878967, 0.5054290294647217, 0.4894433617591858, 0.46257954835891724, 0.4647756814956665, 0.45528340339660645, 0.4405262768268585, 0.43419092893600464, 0.4315367639064789, 0.4175639748573303, 0.41898825764656067, 0.41083765029907227, 0.40659821033477783, 0.39359888434410095, 0.3978475034236908, 0.37010982632637024, 0.3772842288017273, 0.3580169975757599, 0.3560951352119446, 0.3612517714500427, 0.3476634621620178, 0.33838793635368347, 0.3393140435218811, 0.3423384428024292, 0.3393203020095825, 0.3222293257713318, 0.31685253977775574, 0.31569740176200867, 0.31290340423583984, 0.3111339807510376, 0.29218336939811707, 0.30403566360473633, 0.3057975769042969, 0.2917286455631256], "accuracy": [0.12442214041948318, 0.33060362935066223, 0.4283449947834015, 0.5366530418395996, 0.6330735683441162, 0.6538106203079224, 0.6816800832748413, 0.6996433734893799, 0.7103421092033386, 0.7162858247756958, 0.7424382567405701, 0.7471932172775269, 0.7512878179550171, 0.7572315335273743, 0.7642319202423096, 0.7741381525993347, 0.7734777331352234, 0.785629391670227, 0.7861577272415161, 0.7948752045631409, 0.7930260300636292, 0.8042530417442322, 0.8075551390647888, 0.8125742673873901, 0.8107251524925232, 0.8244617581367493, 0.8232730031013489, 0.8204993009567261, 0.83119797706604, 0.839519202709198, 0.8342359066009521, 0.8391229510307312, 0.8387266993522644, 0.839519202709198, 0.8461233377456665, 0.846387505531311, 0.8469158411026001, 0.8524633646011353, 0.8555012345314026, 0.8573504090309143, 0.8636903762817383, 0.8638224601745605, 0.8648791313171387, 0.8673887252807617, 0.8712190985679626, 0.8679170608520508, 0.8673887252807617, 0.878879964351654, 0.8802007436752319, 0.8753136992454529, 0.8720116019248962, 0.8805969953536987, 0.8819178342819214, 0.8768987059593201, 0.8794082403182983, 0.8877294659614563], "val_loss": [2.2464468479156494, 2.0236990451812744, 1.151781439781189, 0.8643585443496704, 0.776863694190979, 0.7208305597305298, 0.6713336706161499, 0.6496777534484863, 0.6321868300437927, 0.6112700700759888, 0.5800062417984009, 0.5545944571495056, 0.5474554300308228, 0.5358873009681702, 0.5294943451881409, 0.5127142071723938, 0.5091389417648315, 0.512732207775116, 0.5018460154533386, 0.5029035806655884, 0.4925672709941864, 0.49247363209724426, 0.4860694110393524, 0.47513383626937866, 0.46581995487213135, 0.46591922640800476, 0.453433096408844, 0.44481950998306274, 0.44259122014045715, 0.44757434725761414, 0.4394901990890503, 0.43815121054649353, 0.45068973302841187, 0.4334438443183899, 0.42719417810440063, 0.42910245060920715, 0.41711530089378357, 0.4094160199165344, 0.3957682251930237, 0.39760908484458923, 0.40320172905921936, 0.39916327595710754, 0.4065673053264618, 0.4116440415382385, 0.39368847012519836, 0.3919934630393982, 0.4038076102733612, 0.41170549392700195, 0.4249953329563141, 0.42868342995643616, 0.42147281765937805, 0.43031659722328186, 0.41463300585746765, 0.42475831508636475, 0.4479845464229584, 0.46345254778862], "val_accuracy": [0.42100000381469727, 0.4716666638851166, 0.6486666798591614, 0.7003333568572998, 0.7229999899864197, 0.7486666440963745, 0.749666690826416, 0.7523333430290222, 0.768666684627533, 0.7670000195503235, 0.7889999747276306, 0.7893333435058594, 0.7896666526794434, 0.7876666784286499, 0.796999990940094, 0.8059999942779541, 0.8056666851043701, 0.8056666851043701, 0.8076666593551636, 0.8116666674613953, 0.8130000233650208, 0.8183333277702332, 0.8209999799728394, 0.8276666402816772, 0.8373333215713501, 0.8296666741371155, 0.8363333344459534, 0.8333333134651184, 0.8413333296775818, 0.8403333425521851, 0.843666672706604, 0.8423333168029785, 0.8376666903495789, 0.8460000157356262, 0.8496666550636292, 0.8453333377838135, 0.8533333539962769, 0.8560000061988831, 0.8606666922569275, 0.856333315372467, 0.8603333234786987, 0.862333357334137, 0.862666666507721, 0.8586666584014893, 0.8640000224113464, 0.8650000095367432, 0.8666666746139526, 0.8666666746139526, 0.8650000095367432, 0.859000027179718, 0.8679999709129333, 0.8679999709129333, 0.8673333525657654, 0.8653333187103271, 0.8600000143051147, 0.8600000143051147]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 2, 0, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [9, 2, 3, 0, 5, 0], [1, 2, 0, 3], [16, 84], [0, 0, 0, 1, 1], [0, 5, 7], [0, 1], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 3, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 1, 0, 1, 5, 3, 2, 1, 22, 11, 11, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), grad)), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 6, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 0, 1, 0, 1, 0, 1, 1], [3, 4, 4, 6], [0, 3, 1, 0, 3], [99, 51], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 6, 6, 8, 1, 4, 3, 4, 2, 8], [0, 0, 1, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.pow(alpha, tf.math.divide_no_nan(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 9, 4, 5, 2, 16, 8, 8, 4], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1], [9, 9, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], [6, 2, 2, 0, 3, 5, 3, 9], [0, 2, 0, 3, 0], [16, 16, 19, 98], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 8, 8, 9, 4, 1, 4, 2, 8], [1, 0, 4, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 79, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.sqrt(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(grad, sigma))", "other_info": {"loss": [7.718122793294697e+25, 8.161333655802376e+27, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.10077928751707077, 0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.707712691456294e+25, Infinity, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09000000357627869, 0.0949999988079071, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}, "mapping_values": [1, 1, 1, 0, 1, 13, 8, 5, 4, 2, 1, 1, 1, 11, 7, 4, 2], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 5, 2], [0, 2, 0, 3], [0], [0, 1], [0], [4, 3, 4, 5, 3, 5, 4], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 8, 1, 4, 2, 8, 1, 4, 2, 7, 6, 8, 1, 7], [1, 6, 3, 2, 0, 3, 7, 4, 4, 2, 1, 2, 7, 7, 1, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 6, 4, 2, 1, 2, 1, 1, 0, 35, 19, 16, 1], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.sqrt(alpha), tf.math.subtract(grad, sigma))), tf.math.pow(beta, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), sigma))), grad), tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(grad, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.sqrt(beta))), tf.math.subtract(grad, tf.math.add(grad, alpha))))))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]