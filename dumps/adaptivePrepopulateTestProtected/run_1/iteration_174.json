[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8551428318023682, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2248692512512207, 1.8723633289337158, 1.396846055984497, 1.1014724969863892, 0.935481607913971, 0.8362990617752075, 0.7742931842803955, 0.7208623886108398, 0.6886612176895142, 0.6613340973854065, 0.6416009664535522, 0.6028174161911011, 0.5886542201042175, 0.5653581023216248, 0.5579257011413574, 0.5380489826202393, 0.5339002013206482, 0.5196637511253357, 0.5083538889884949, 0.4904051423072815, 0.4857252836227417, 0.4712855815887451, 0.4582914412021637, 0.4529322683811188, 0.4468674957752228, 0.4388844966888428, 0.4325577914714813, 0.4267372190952301, 0.4185256063938141, 0.4178830087184906, 0.4045904874801636, 0.3949751555919647, 0.3920779824256897, 0.38477247953414917, 0.3747923970222473, 0.376491516828537, 0.37082749605178833, 0.36794164776802063, 0.3588957190513611, 0.3492698073387146, 0.3507938086986542, 0.34960153698921204, 0.34443458914756775, 0.3312321603298187, 0.32916322350502014, 0.3298698365688324, 0.3180743157863617, 0.314357727766037, 0.30846256017684937, 0.30481353402137756, 0.30423200130462646, 0.2985408902168274, 0.29948148131370544, 0.28960150480270386, 0.28212228417396545, 0.2838521897792816, 0.28035566210746765, 0.28236615657806396, 0.27557703852653503, 0.26623108983039856, 0.2620953321456909, 0.2583913505077362, 0.24957960844039917, 0.25087761878967285, 0.25072750449180603, 0.24482937157154083, 0.24081793427467346, 0.23877443373203278, 0.2297847419977188, 0.2312363237142563, 0.22840940952301025, 0.22003382444381714, 0.2191394567489624, 0.2208801805973053, 0.2090773731470108, 0.21598725020885468, 0.2120765894651413, 0.20803232491016388, 0.20085427165031433, 0.1976514458656311, 0.1971331387758255, 0.19220635294914246, 0.187773197889328], "accuracy": [0.26865673065185547, 0.49253731966018677, 0.5670320987701416, 0.6164311170578003, 0.6610751748085022, 0.7058512568473816, 0.7213049530982971, 0.7412495017051697, 0.7535332441329956, 0.7633073329925537, 0.7664773464202881, 0.7796856164932251, 0.783119797706604, 0.798309326171875, 0.7993659973144531, 0.8031964302062988, 0.8099326491355896, 0.8149517774581909, 0.8162726163864136, 0.8264430165290833, 0.8227446675300598, 0.8327829837799072, 0.8383304476737976, 0.8367455005645752, 0.839519202709198, 0.8426892161369324, 0.8421608805656433, 0.8514066934585571, 0.852859616279602, 0.8516708612442017, 0.8585391640663147, 0.857218325138092, 0.8617091774940491, 0.8627657890319824, 0.86553955078125, 0.863558292388916, 0.8734645247459412, 0.8676528930664062, 0.8706908226013184, 0.8757099509239197, 0.8733324408531189, 0.8775591254234314, 0.8772949576377869, 0.8815215826034546, 0.883238673210144, 0.8795403242111206, 0.884691596031189, 0.8893144726753235, 0.8887861371040344, 0.8905032277107239, 0.8883898854255676, 0.8928807377815247, 0.8945978283882141, 0.898428201675415, 0.896446943283081, 0.9026548862457275, 0.8977677822113037, 0.9009377956390381, 0.8993527889251709, 0.9025228023529053, 0.9033153057098389, 0.9076740145683289, 0.9083344340324402, 0.9128252267837524, 0.9083344340324402, 0.9120327830314636, 0.9117686152458191, 0.9115044474601746, 0.9191652536392212, 0.9166556596755981, 0.9177123308181763, 0.9202219247817993, 0.9194294214248657, 0.9225993752479553, 0.9247127175331116, 0.9236560463905334, 0.9227314591407776, 0.9231277108192444, 0.928411066532135, 0.9319772720336914, 0.927882730960846, 0.9285431504249573, 0.9313168525695801], "val_loss": [2.043818950653076, 1.5169111490249634, 1.0467380285263062, 0.843432605266571, 0.754395604133606, 0.6981087327003479, 0.6534276604652405, 0.6163061261177063, 0.5874223709106445, 0.5625236630439758, 0.5494584441184998, 0.5270410776138306, 0.5137360692024231, 0.49768000841140747, 0.48956072330474854, 0.47827181220054626, 0.4696638286113739, 0.45949649810791016, 0.4497024714946747, 0.44173139333724976, 0.43300920724868774, 0.43222159147262573, 0.426021933555603, 0.41756051778793335, 0.41615816950798035, 0.4086669087409973, 0.4062422811985016, 0.4017651677131653, 0.40504613518714905, 0.39773714542388916, 0.38644734025001526, 0.3851308524608612, 0.38015058636665344, 0.3818204700946808, 0.37540751695632935, 0.37415194511413574, 0.3696245849132538, 0.3703215420246124, 0.3652213513851166, 0.3650263547897339, 0.3625078797340393, 0.3655276298522949, 0.3590950071811676, 0.35771623253822327, 0.3692193329334259, 0.353253573179245, 0.3531774580478668, 0.3548024892807007, 0.34872493147850037, 0.34985631704330444, 0.3471258878707886, 0.3498624563217163, 0.341209352016449, 0.342151939868927, 0.3410705626010895, 0.3399342894554138, 0.3391380310058594, 0.3441613018512726, 0.33576932549476624, 0.337431937456131, 0.3390703499317169, 0.33739173412323, 0.3362572491168976, 0.3353966772556305, 0.3370697498321533, 0.3343331813812256, 0.3323553800582886, 0.3300114870071411, 0.33418339490890503, 0.33278876543045044, 0.33273011445999146, 0.3367471992969513, 0.33017656207084656, 0.33486393094062805, 0.337668240070343, 0.3359702229499817, 0.3317844569683075, 0.33264458179473877, 0.33678460121154785, 0.32904839515686035, 0.33455726504325867, 0.32936206459999084, 0.33386367559432983], "val_accuracy": [0.5526666641235352, 0.6470000147819519, 0.6746666431427002, 0.6966666579246521, 0.7246666550636292, 0.7416666746139526, 0.7606666684150696, 0.7699999809265137, 0.7773333191871643, 0.7866666913032532, 0.7883333563804626, 0.8023333549499512, 0.8019999861717224, 0.8130000233650208, 0.8223333358764648, 0.8270000219345093, 0.8326666951179504, 0.8316666483879089, 0.8373333215713501, 0.8420000076293945, 0.846666693687439, 0.8423333168029785, 0.8450000286102295, 0.8503333330154419, 0.8523333072662354, 0.8569999933242798, 0.8566666841506958, 0.8566666841506958, 0.8500000238418579, 0.8576666712760925, 0.8676666617393494, 0.8643333315849304, 0.8656666874885559, 0.8646666407585144, 0.8679999709129333, 0.8679999709129333, 0.8673333525657654, 0.8693333268165588, 0.871666669845581, 0.8700000047683716, 0.8690000176429749, 0.8723333477973938, 0.8740000128746033, 0.8723333477973938, 0.8669999837875366, 0.8723333477973938, 0.875, 0.8759999871253967, 0.878000020980835, 0.8776666522026062, 0.878000020980835, 0.8773333430290222, 0.8813333511352539, 0.8816666603088379, 0.8806666731834412, 0.8826666474342346, 0.8813333511352539, 0.8776666522026062, 0.8816666603088379, 0.8836666941642761, 0.8813333511352539, 0.8853333592414856, 0.8806666731834412, 0.8843333125114441, 0.8820000290870667, 0.8809999823570251, 0.8856666684150696, 0.8846666812896729, 0.8856666684150696, 0.8859999775886536, 0.8853333592414856, 0.8866666555404663, 0.8870000243186951, 0.8880000114440918, 0.8863333463668823, 0.8840000033378601, 0.8866666555404663, 0.8933333158493042, 0.8883333206176758, 0.8883333206176758, 0.887333333492279, 0.8899999856948853, 0.8866666555404663]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 1, 7, 0, 7, 3], [0, 4, 2, 4, 4, 3], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8485714197158813, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.negative(beta))), tf.math.add(grad, tf.math.multiply(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293553590774536, 2.190544843673706, 1.7729620933532715, 1.3358678817749023, 1.0601909160614014, 0.9005782604217529, 0.8639437556266785, 0.7894513607025146, 0.7646835446357727, 0.728575587272644, 0.7194787859916687, 0.6810107231140137, 0.6391404271125793, 0.6206095814704895, 0.5984414219856262, 0.5933441519737244, 0.5783407092094421, 0.5693022608757019, 0.5514912605285645, 0.542482852935791, 0.5246220827102661, 0.5256435871124268, 0.5122884511947632, 0.4934521019458771, 0.49957019090652466, 0.4749571979045868, 0.47118252515792847, 0.46354368329048157, 0.45824724435806274, 0.4384392201900482, 0.4475712478160858, 0.4330625534057617, 0.42961397767066956, 0.41941186785697937, 0.4086705446243286, 0.4007931649684906, 0.3901277184486389, 0.3925168812274933, 0.3770238757133484, 0.36915481090545654, 0.37365370988845825, 0.35207152366638184, 0.34461820125579834, 0.33566808700561523, 0.3366127908229828, 0.3291613757610321, 0.3213347792625427, 0.32851484417915344, 0.31404435634613037, 0.32484737038612366, 0.31111904978752136, 0.31766730546951294, 0.31121277809143066, 0.311970978975296], "accuracy": [0.12534672021865845, 0.3329811096191406, 0.4353454113006592, 0.553031325340271, 0.6445648074150085, 0.6720380187034607, 0.6886804699897766, 0.703209638595581, 0.7082287669181824, 0.7197200059890747, 0.7276449799537659, 0.7388719916343689, 0.7601373791694641, 0.7611940503120422, 0.772288978099823, 0.7778365015983582, 0.7758552432060242, 0.7854973077774048, 0.7890635132789612, 0.7872143983840942, 0.796328067779541, 0.7993659973144531, 0.7965922355651855, 0.8047813773155212, 0.8145555257797241, 0.8215559124946594, 0.8178576231002808, 0.8236692547798157, 0.8249900937080383, 0.8339717388153076, 0.8298771381378174, 0.8327829837799072, 0.8343679904937744, 0.8405758738517761, 0.8475762605667114, 0.8479725122451782, 0.8514066934585571, 0.8518029451370239, 0.8543124794960022, 0.8584070801734924, 0.8551049828529358, 0.8684453964233398, 0.8644828796386719, 0.8693699836730957, 0.8676528930664062, 0.8701624870300293, 0.8729361891746521, 0.8730682730674744, 0.8819178342819214, 0.8780874609947205, 0.876370370388031, 0.8698983192443848, 0.8805969953536987, 0.8762382864952087], "val_loss": [2.2460012435913086, 2.0210185050964355, 1.1480424404144287, 0.8974007368087769, 0.7601239681243896, 0.7390289902687073, 0.6868405938148499, 0.6815499663352966, 0.6431306004524231, 0.6433517336845398, 0.6050941348075867, 0.586602509021759, 0.5740371942520142, 0.5581974983215332, 0.5452931523323059, 0.530755877494812, 0.52890545129776, 0.5242632031440735, 0.5152157545089722, 0.5158395767211914, 0.5076617002487183, 0.49049925804138184, 0.48339617252349854, 0.4674547612667084, 0.4714413285255432, 0.45777350664138794, 0.45513716340065, 0.45022982358932495, 0.44240009784698486, 0.456634521484375, 0.4313032925128937, 0.42522984743118286, 0.4255158007144928, 0.41315656900405884, 0.41597387194633484, 0.425421804189682, 0.4158860743045807, 0.4152621328830719, 0.4186328649520874, 0.4111180901527405, 0.402865469455719, 0.41139858961105347, 0.40955793857574463, 0.3997904360294342, 0.4054577350616455, 0.41230225563049316, 0.40332701802253723, 0.40786874294281006, 0.41280004382133484, 0.3959161043167114, 0.3958088755607605, 0.38516348600387573, 0.4100155532360077, 0.4271071255207062], "val_accuracy": [0.43166667222976685, 0.46533334255218506, 0.640666663646698, 0.6813333630561829, 0.7196666598320007, 0.7229999899864197, 0.7293333411216736, 0.7513333559036255, 0.753000020980835, 0.7633333206176758, 0.762666642665863, 0.7799999713897705, 0.7733333110809326, 0.7833333611488342, 0.7946666479110718, 0.8023333549499512, 0.800000011920929, 0.8033333420753479, 0.809333324432373, 0.8086666464805603, 0.8143333196640015, 0.8186666369438171, 0.8203333616256714, 0.8259999752044678, 0.8343333601951599, 0.8353333473205566, 0.8339999914169312, 0.8363333344459534, 0.8360000252723694, 0.8386666774749756, 0.8473333120346069, 0.8473333120346069, 0.8426666855812073, 0.8519999980926514, 0.8479999899864197, 0.8513333201408386, 0.8539999723434448, 0.8529999852180481, 0.8539999723434448, 0.8583333492279053, 0.859000027179718, 0.8586666584014893, 0.8543333411216736, 0.8586666584014893, 0.8653333187103271, 0.8673333525657654, 0.8663333058357239, 0.871666669845581, 0.875333309173584, 0.8709999918937683, 0.8653333187103271, 0.8700000047683716, 0.8669999837875366, 0.8640000224113464]}, "mapping_values": [1, 10, 5, 5, 3, 13, 7, 6, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 13}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 3], [0, 5], [0], [1], [0], [2], [0]], "fitness": -0.8202857375144958, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.484135389328003, 0.7754929065704346, 0.6942265033721924, 0.6075894832611084, 0.5690516233444214, 0.5779225826263428, 0.5627845525741577, 0.5518967509269714, 0.5684592127799988, 0.5688106417655945, 0.5245669484138489, 0.52752685546875, 0.5373029708862305, 0.5484359860420227, 0.5717939138412476, 0.6162992715835571, 0.6295992136001587, 0.5681383013725281, 0.554767906665802], "accuracy": [0.4974243938922882, 0.7281733155250549, 0.7535332441329956, 0.7769119143486023, 0.7915731072425842, 0.7936864495277405, 0.7977809906005859, 0.8014793395996094, 0.8042530417442322, 0.8050455451011658, 0.8164047002792358, 0.8087438941001892, 0.809140145778656, 0.8125742673873901, 0.8149517774581909, 0.7992339134216309, 0.7847048044204712, 0.8059701323509216, 0.8107251524925232], "val_loss": [0.7784784436225891, 0.6452950835227966, 0.546481192111969, 0.5195471048355103, 0.49708080291748047, 0.5468978881835938, 0.5059173703193665, 0.49395254254341125, 0.551994800567627, 0.47365397214889526, 0.4674382209777832, 0.47317737340927124, 0.4933539927005768, 0.573316216468811, 0.5609328746795654, 0.5522925853729248, 0.5796931982040405, 0.5377457737922668, 0.5442131757736206], "val_accuracy": [0.7353333234786987, 0.7556666731834412, 0.7946666479110718, 0.7990000247955322, 0.8136666417121887, 0.8036666512489319, 0.8169999718666077, 0.8083333373069763, 0.8273333311080933, 0.831333339214325, 0.8306666612625122, 0.8316666483879089, 0.8339999914169312, 0.8343333601951599, 0.8259999752044678, 0.8106666803359985, 0.8146666884422302, 0.8270000219345093, 0.824999988079071]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 9, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 4, 3, 5, 3], [0, 2, 2, 3, 5, 2], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 3, 3, 6, 8, 1, 4, 1, 4, 2, 9], [0, 0, 0, 3, 4, 0, 3, 1, 1, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 4, 1, 1, 13, 7, 6, 1, 2, 1, 1, 1, 11, 6, 5, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), beta), tf.math.square(grad)), tf.math.multiply(grad, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, grad)))", "other_info": {"loss": [23.690391540527344, 25.813888549804688, 4135715.5, 1173.004638671875, 81492.5234375, 1387.7811279296875, 1985.517822265625, 2863.427978515625], "accuracy": [0.09985470771789551, 0.10870426893234253, 0.10157178342342377, 0.09734513610601425, 0.09813763201236725, 0.09747721254825592, 0.09787346422672272, 0.10011887550354004], "val_loss": [6.780860900878906, 8.977351188659668, 1281.689208984375, 1107.207763671875, 1238.9608154296875, 1704.0340576171875, 2465.02294921875, 8843325.0], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 7, 3, 8, 4, 3, 2, 9, 3, 6, 6, 0, 6, 2, 7, 6, 0, 9], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0, 2, 4, 5, 7, 0, 1, 5, 5, 1, 0], [16, 99, 96, 99, 61, 1, 49, 5, 51, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 48, 28, 20, 10], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), beta), tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), grad))), tf.math.multiply(grad, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.negative(alpha))))), tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(tf.math.divide_no_nan(grad, tf.math.negative(alpha)), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [53, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [3, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 8, 0], [0, 3, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 1, 10, 6, 4, 2, 2, 1, 1, 1, 23, 13, 10, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(sigma, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.add(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.negative(sigma))), alpha))), beta), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 2, 3, 2, 3], [0, 1, 0, 2], [78, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [4, 2, 8, 0, 3, 5], [0, 2, 0, 3], [16, 24], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [4, 2, 7, 6, 6, 0, 8, 0, 1, 8], [0, 0, 3, 7, 7, 1, 6], [99, 29], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 0, 4, 1, 4, 4, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 64]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta), tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.negative(sigma)))), tf.math.subtract(grad, tf.math.sqrt(grad))), alpha), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}, "mapping_values": [1, 1, 1, 0, 1, 9, 5, 4, 2, 17, 10, 7, 2, 10, 5, 5, 4], "tree_depth": 17}]