[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2238242626190186, 1.8702408075332642, 1.3989253044128418, 1.0938103199005127, 0.9440132975578308, 0.843924880027771, 0.7770308256149292, 0.7348120808601379, 0.6891900300979614, 0.6686111092567444, 0.6465572118759155, 0.6186468601226807, 0.59220290184021, 0.5814334154129028, 0.5669078230857849, 0.5489019155502319, 0.5301827788352966, 0.5177485942840576, 0.5101649165153503, 0.5117051601409912, 0.4893052577972412, 0.48222053050994873, 0.4678787291049957, 0.4636562168598175, 0.45587465167045593, 0.44814491271972656, 0.43622511625289917, 0.4354732930660248, 0.4265357553958893, 0.4142124354839325, 0.40815725922584534, 0.40005847811698914, 0.4003210663795471, 0.39108172059059143, 0.38397613167762756, 0.3733125925064087, 0.3779296278953552, 0.36518383026123047, 0.3614937663078308, 0.35672062635421753, 0.3492109775543213, 0.3464018404483795, 0.339365154504776, 0.3396804630756378, 0.3307111859321594, 0.3236643671989441, 0.31257879734039307, 0.321456640958786, 0.3110101521015167, 0.31273698806762695, 0.3105744421482086, 0.29919567704200745, 0.29805487394332886, 0.2930542230606079, 0.2938970923423767, 0.28714412450790405, 0.27642741799354553, 0.2792717218399048, 0.27095139026641846], "accuracy": [0.2674679756164551, 0.4842160940170288, 0.5562012791633606, 0.6153744459152222, 0.6609430909156799, 0.6980583667755127, 0.7190595865249634, 0.7337207794189453, 0.748778223991394, 0.7569673657417297, 0.7651565074920654, 0.7724210619926453, 0.7843085527420044, 0.7864218950271606, 0.7895918488502502, 0.7981772422790527, 0.8043851256370544, 0.8068947196006775, 0.8137630224227905, 0.8169330358505249, 0.8247259259223938, 0.8222163319587708, 0.8313300609588623, 0.8313300609588623, 0.8359529972076416, 0.8407079577445984, 0.843481719493866, 0.845859169960022, 0.8451988101005554, 0.8507462739944458, 0.8564258217811584, 0.8552370667457581, 0.856689989566803, 0.8610487580299377, 0.8625016212463379, 0.868049144744873, 0.8625016212463379, 0.8684453964233398, 0.8697662353515625, 0.8705587387084961, 0.8745211958885193, 0.8692378997802734, 0.8753136992454529, 0.8790120482444763, 0.8804649114608765, 0.8819178342819214, 0.8879936337471008, 0.8854840993881226, 0.8858803510665894, 0.8870691061019897, 0.884691596031189, 0.8912957310676575, 0.891559898853302, 0.8919561505317688, 0.8942015767097473, 0.8982961177825928, 0.8972394466400146, 0.8985602855682373, 0.9022586345672607], "val_loss": [2.0391974449157715, 1.5139026641845703, 1.0389410257339478, 0.833385169506073, 0.7425699830055237, 0.6892187595367432, 0.6448782086372375, 0.6089656352996826, 0.5808338522911072, 0.5622445344924927, 0.5464872121810913, 0.5286971926689148, 0.5147833824157715, 0.4997008442878723, 0.4904420077800751, 0.4809882342815399, 0.4727213978767395, 0.4639192223548889, 0.45640018582344055, 0.4523184895515442, 0.44721314311027527, 0.4373686611652374, 0.43181267380714417, 0.4304860830307007, 0.4228566884994507, 0.4188160002231598, 0.41898444294929504, 0.4127434194087982, 0.4063724875450134, 0.4022892117500305, 0.4021618664264679, 0.400217741727829, 0.39576902985572815, 0.38946452736854553, 0.38671496510505676, 0.3825148940086365, 0.3844337463378906, 0.38124749064445496, 0.3744789659976959, 0.37623274326324463, 0.37700000405311584, 0.3697681427001953, 0.3748103380203247, 0.36868640780448914, 0.3667578101158142, 0.3650318682193756, 0.3685290217399597, 0.3615975081920624, 0.3626455068588257, 0.3592783510684967, 0.3611542284488678, 0.36187154054641724, 0.35318341851234436, 0.35676851868629456, 0.3524584174156189, 0.35657671093940735, 0.35240715742111206, 0.34654515981674194, 0.3482426404953003], "val_accuracy": [0.5376666784286499, 0.656000018119812, 0.6850000023841858, 0.7146666646003723, 0.7383333444595337, 0.7543333172798157, 0.765999972820282, 0.7773333191871643, 0.7889999747276306, 0.7926666736602783, 0.7963333129882812, 0.8029999732971191, 0.8086666464805603, 0.8209999799728394, 0.824999988079071, 0.82833331823349, 0.8306666612625122, 0.8336666822433472, 0.8379999995231628, 0.8443333506584167, 0.843666672706604, 0.8416666388511658, 0.8476666808128357, 0.8476666808128357, 0.846666693687439, 0.8483333587646484, 0.8503333330154419, 0.856333315372467, 0.8576666712760925, 0.8619999885559082, 0.8586666584014893, 0.8613333106040955, 0.859333336353302, 0.862333357334137, 0.8650000095367432, 0.8650000095367432, 0.8633333444595337, 0.8683333396911621, 0.8663333058357239, 0.8686666488647461, 0.8679999709129333, 0.8696666955947876, 0.8686666488647461, 0.871666669845581, 0.8740000128746033, 0.8726666569709778, 0.8709999918937683, 0.8736666440963745, 0.875333309173584, 0.8740000128746033, 0.8769999742507935, 0.8736666440963745, 0.875, 0.8823333382606506, 0.8769999742507935, 0.8786666393280029, 0.8726666569709778, 0.8786666393280029, 0.8809999823570251]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 3], [0, 4], [0], [0, 0, 1, 1], [0, 4], [0, 7], [0], [0, 1], [0], [1], [0]], "fitness": -0.8597142696380615, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293921709060669, 2.1928749084472656, 1.7894905805587769, 1.3573001623153687, 1.0768344402313232, 0.9165840744972229, 0.8497412204742432, 0.8122415542602539, 0.7692562341690063, 0.7195777893066406, 0.6787945628166199, 0.6513992547988892, 0.6396039128303528, 0.6148205995559692, 0.6065499186515808, 0.5912157297134399, 0.5840457081794739, 0.569377601146698, 0.5511108040809631, 0.5384644865989685, 0.5415253639221191, 0.5163853764533997, 0.5087611079216003, 0.49427908658981323, 0.4894699454307556, 0.4894055724143982, 0.46536168456077576, 0.46186554431915283, 0.4447645843029022, 0.4443340003490448, 0.439192533493042, 0.43353506922721863, 0.4332331418991089, 0.42046457529067993, 0.41710057854652405, 0.4046543538570404, 0.38877958059310913, 0.39269983768463135, 0.4024549424648285, 0.37819960713386536, 0.36142414808273315, 0.3586347997188568, 0.36534547805786133, 0.3564838469028473, 0.34392374753952026, 0.3523961007595062, 0.33253785967826843, 0.3296011984348297, 0.3306647539138794, 0.3319145739078522, 0.3080413043498993, 0.3124407231807709], "accuracy": [0.1270637959241867, 0.32584863901138306, 0.4294016659259796, 0.5303130149841309, 0.6350548267364502, 0.6662263870239258, 0.6861709356307983, 0.6960771083831787, 0.7014925479888916, 0.7240787148475647, 0.744419515132904, 0.7503632307052612, 0.7553823590278625, 0.7648923397064209, 0.7664773464202881, 0.7708360552787781, 0.7799497842788696, 0.783119797706604, 0.7829877138137817, 0.7885351777076721, 0.793422281742096, 0.8013472557067871, 0.8038568496704102, 0.8094043135643005, 0.8144234418869019, 0.8076872229576111, 0.8214238286018372, 0.8193105459213257, 0.8293488025665283, 0.829216718673706, 0.8304054737091064, 0.8339717388153076, 0.8381983637809753, 0.8354246616363525, 0.8422929644584656, 0.845859169960022, 0.8491612672805786, 0.8465195894241333, 0.8426892161369324, 0.858671247959137, 0.8627657890319824, 0.8618412613868713, 0.8594637513160706, 0.8618412613868713, 0.8652753829956055, 0.8644828796386719, 0.8687095642089844, 0.8717474341392517, 0.86553955078125, 0.8734645247459412, 0.8786157965660095, 0.8809932470321655], "val_loss": [2.2469403743743896, 2.0254032611846924, 1.1601788997650146, 0.8748757243156433, 0.7800399661064148, 0.7273575067520142, 0.685579776763916, 0.6598354578018188, 0.6356712579727173, 0.6091994047164917, 0.5817575454711914, 0.5743080377578735, 0.5599528551101685, 0.5538334250450134, 0.5453720688819885, 0.5372442007064819, 0.5363062620162964, 0.5196680426597595, 0.510233461856842, 0.503503680229187, 0.48937639594078064, 0.48785024881362915, 0.48687300086021423, 0.4768713414669037, 0.4692060947418213, 0.46049758791923523, 0.4550701081752777, 0.4495585560798645, 0.4525326192378998, 0.44323283433914185, 0.4461206793785095, 0.4337228238582611, 0.4344566762447357, 0.42888012528419495, 0.4413909912109375, 0.42665621638298035, 0.4132653772830963, 0.40520524978637695, 0.3999100625514984, 0.4078693091869354, 0.4188450574874878, 0.4132422208786011, 0.4051647186279297, 0.399635374546051, 0.3919035792350769, 0.3887496888637543, 0.3976650536060333, 0.402798593044281, 0.41673412919044495, 0.4390847980976105, 0.4384949803352356, 0.4141559302806854], "val_accuracy": [0.4183333218097687, 0.4699999988079071, 0.6423333287239075, 0.6896666884422302, 0.7153333425521851, 0.7253333330154419, 0.7450000047683716, 0.7486666440963745, 0.7566666603088379, 0.7643333077430725, 0.7763333320617676, 0.7799999713897705, 0.7833333611488342, 0.7886666655540466, 0.7986666560173035, 0.7973333597183228, 0.7979999780654907, 0.8033333420753479, 0.8086666464805603, 0.8040000200271606, 0.8169999718666077, 0.8180000185966492, 0.8263333439826965, 0.8263333439826965, 0.8306666612625122, 0.8333333134651184, 0.8349999785423279, 0.8363333344459534, 0.8379999995231628, 0.8389999866485596, 0.8336666822433472, 0.8423333168029785, 0.8450000286102295, 0.8473333120346069, 0.8423333168029785, 0.8479999899864197, 0.859666645526886, 0.856333315372467, 0.8613333106040955, 0.8629999756813049, 0.8603333234786987, 0.862666666507721, 0.8619999885559082, 0.8603333234786987, 0.8633333444595337, 0.8640000224113464, 0.8683333396911621, 0.862666666507721, 0.8633333444595337, 0.8650000095367432, 0.8650000095367432, 0.8673333525657654]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8554285764694214, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2231040000915527, 1.8648864030838013, 1.3931920528411865, 1.1171636581420898, 0.9588561654090881, 0.8413177132606506, 0.7908737659454346, 0.7333200573921204, 0.7091411352157593, 0.6710719466209412, 0.6496782302856445, 0.6237373352050781, 0.61237633228302, 0.5870258212089539, 0.5713747143745422, 0.559117317199707, 0.5350213050842285, 0.5326921343803406, 0.5129087567329407, 0.501303493976593, 0.5007007718086243, 0.49105629324913025, 0.47642090916633606, 0.46373361349105835, 0.4561554789543152, 0.45047420263290405, 0.4399760961532593, 0.4353470206260681, 0.4344446063041687, 0.41893574595451355, 0.41118118166923523, 0.40707871317863464, 0.39371436834335327, 0.3916374146938324, 0.3908916413784027, 0.3925005793571472, 0.37507909536361694, 0.37017181515693665, 0.3676866888999939, 0.3633976876735687, 0.35814064741134644, 0.35136064887046814, 0.3415887653827667, 0.34193477034568787, 0.3299809694290161, 0.3318033218383789, 0.3221704959869385, 0.32363250851631165, 0.31717875599861145, 0.3103379011154175, 0.30892473459243774, 0.3042406141757965, 0.3011319637298584, 0.2927013039588928, 0.28638389706611633, 0.2862095534801483, 0.2795022428035736, 0.27448830008506775, 0.2790345549583435, 0.2698618769645691, 0.26605162024497986, 0.2665943205356598, 0.26269829273223877, 0.2585940957069397, 0.25486093759536743, 0.249480202794075, 0.2513405680656433, 0.24024802446365356, 0.24322763085365295, 0.23533186316490173, 0.23283322155475616, 0.22807839512825012, 0.22965368628501892, 0.215703085064888, 0.21851931512355804], "accuracy": [0.2719587981700897, 0.4846123456954956, 0.5614846348762512, 0.6063928008079529, 0.6522256135940552, 0.6964733600616455, 0.7087571024894714, 0.7310791015625, 0.7413815855979919, 0.7461365461349487, 0.7572315335273743, 0.7692511081695557, 0.780610203742981, 0.7869502305984497, 0.7880068421363831, 0.7973847389221191, 0.7987055778503418, 0.8049134612083435, 0.8109893202781677, 0.8148196935653687, 0.8198388814926147, 0.821820080280304, 0.8286884427070618, 0.828820526599884, 0.8362171649932861, 0.8362171649932861, 0.8433496356010437, 0.8469158411026001, 0.8425571322441101, 0.8514066934585571, 0.8556333184242249, 0.8516708612442017, 0.8574824929237366, 0.8585391640663147, 0.859199583530426, 0.8598600029945374, 0.8706908226013184, 0.8677849769592285, 0.8631620407104492, 0.8679170608520508, 0.8726720213890076, 0.878351628780365, 0.8713511824607849, 0.8745211958885193, 0.8835028409957886, 0.8811253309249878, 0.8813894987106323, 0.8815215826034546, 0.8858803510665894, 0.8864086866378784, 0.8854840993881226, 0.8883898854255676, 0.889050304889679, 0.891559898853302, 0.8914278149604797, 0.896446943283081, 0.8977677822113037, 0.9015982151031494, 0.8993527889251709, 0.9031832218170166, 0.9015982151031494, 0.9050323367118835, 0.9033153057098389, 0.9041078090667725, 0.9060890078544617, 0.9100515246391296, 0.91124027967453, 0.9119006991386414, 0.910711944103241, 0.9163914918899536, 0.9145423173904419, 0.9174481630325317, 0.9181085824966431, 0.9229956269264221, 0.9191652536392212], "val_loss": [2.039085865020752, 1.5139116048812866, 1.0482757091522217, 0.8413277864456177, 0.7511842250823975, 0.6881020665168762, 0.643626868724823, 0.6148579120635986, 0.5928178429603577, 0.5620672702789307, 0.5546382069587708, 0.5333117842674255, 0.5179928541183472, 0.5066356062889099, 0.4986174404621124, 0.4832823872566223, 0.47953370213508606, 0.47014859318733215, 0.4656849801540375, 0.4636610448360443, 0.44871965050697327, 0.44079241156578064, 0.4391818046569824, 0.43447762727737427, 0.4308724105358124, 0.42634350061416626, 0.41870081424713135, 0.413940966129303, 0.412814199924469, 0.4064526855945587, 0.4095383286476135, 0.3990749418735504, 0.39191561937332153, 0.3927808403968811, 0.3927958905696869, 0.39466169476509094, 0.3874150812625885, 0.3801148235797882, 0.37786197662353516, 0.38019245862960815, 0.37635624408721924, 0.379512220621109, 0.37545400857925415, 0.3675743043422699, 0.36983373761177063, 0.36507707834243774, 0.3652644455432892, 0.3668856620788574, 0.36308467388153076, 0.36320173740386963, 0.36295628547668457, 0.36267244815826416, 0.3571354150772095, 0.3577706217765808, 0.3569630980491638, 0.36266031861305237, 0.3555040955543518, 0.35518649220466614, 0.3551464378833771, 0.3541434705257416, 0.35078465938568115, 0.3513064384460449, 0.3570595681667328, 0.3517622947692871, 0.35079509019851685, 0.3490736484527588, 0.35203829407691956, 0.34811994433403015, 0.3468784987926483, 0.34734591841697693, 0.3494870960712433, 0.3440048396587372, 0.34623128175735474, 0.35021987557411194, 0.34782445430755615], "val_accuracy": [0.5256666541099548, 0.6536666750907898, 0.6833333373069763, 0.7149999737739563, 0.7379999756813049, 0.7509999871253967, 0.7643333077430725, 0.7770000100135803, 0.7889999747276306, 0.8036666512489319, 0.793666660785675, 0.8090000152587891, 0.8213333487510681, 0.8176666498184204, 0.828000009059906, 0.8303333520889282, 0.8349999785423279, 0.8373333215713501, 0.8316666483879089, 0.8343333601951599, 0.8420000076293945, 0.8450000286102295, 0.847000002861023, 0.8479999899864197, 0.8510000109672546, 0.8463333249092102, 0.8539999723434448, 0.8539999723434448, 0.8550000190734863, 0.8573333621025085, 0.856333315372467, 0.8643333315849304, 0.8613333106040955, 0.8619999885559082, 0.859666645526886, 0.8600000143051147, 0.8676666617393494, 0.8653333187103271, 0.8679999709129333, 0.8679999709129333, 0.8700000047683716, 0.8693333268165588, 0.8659999966621399, 0.871999979019165, 0.871999979019165, 0.8683333396911621, 0.8740000128746033, 0.8706666827201843, 0.871666669845581, 0.875, 0.8730000257492065, 0.8723333477973938, 0.878000020980835, 0.878333330154419, 0.8773333430290222, 0.8733333349227905, 0.8790000081062317, 0.8790000081062317, 0.878333330154419, 0.878333330154419, 0.8806666731834412, 0.8776666522026062, 0.878333330154419, 0.8826666474342346, 0.8793333172798157, 0.8830000162124634, 0.8806666731834412, 0.8833333253860474, 0.8843333125114441, 0.8863333463668823, 0.8799999952316284, 0.8836666941642761, 0.8796666860580444, 0.8843333125114441, 0.8856666684150696]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 4], [0, 4], [0], [1], [0], [2], [0]], "fitness": -0.8294285535812378, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4175536632537842, 0.7488840818405151, 0.6764899492263794, 0.6272355318069458, 0.5986997485160828, 0.5479130744934082, 0.5108758211135864, 0.4750983715057373, 0.4675542116165161, 0.438753217458725, 0.4382826089859009, 0.44370022416114807, 0.42380887269973755, 0.46223393082618713, 0.449375718832016, 0.4351044297218323], "accuracy": [0.5099722743034363, 0.7430986762046814, 0.7700436115264893, 0.7701756954193115, 0.7881389260292053, 0.8083476424217224, 0.81112140417099, 0.8249900937080383, 0.8267071843147278, 0.8424250483512878, 0.8379341959953308, 0.844010055065155, 0.8504821062088013, 0.8354246616363525, 0.8487650156021118, 0.8436138033866882], "val_loss": [0.7114636301994324, 0.6337934732437134, 0.53841632604599, 0.5458680391311646, 0.527580976486206, 0.5078161358833313, 0.5015456676483154, 0.4932902455329895, 0.5021424889564514, 0.48452091217041016, 0.4747847616672516, 0.5037322044372559, 0.5208531618118286, 0.5472474098205566, 0.5265659689903259, 0.5501601696014404], "val_accuracy": [0.7433333396911621, 0.7903333306312561, 0.8026666641235352, 0.8019999861717224, 0.8149999976158142, 0.8286666870117188, 0.8173333406448364, 0.8270000219345093, 0.8443333506584167, 0.8420000076293945, 0.8460000157356262, 0.8420000076293945, 0.8396666646003723, 0.8330000042915344, 0.8413333296775818, 0.8450000286102295]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 31], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 47], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 4, 4, 2, 0], [16, 20, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 3, 1, 0, 1, 1, 1, 0, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(grad, sigma), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))))), grad), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [4, 1, 3, 1, 3, 3, 4, 8, 8, 0, 0, 8, 8, 3, 3, 0, 8, 8, 8], [0, 1, 0, 2, 1, 0, 3, 0, 3, 1], [39, 39, 64, 40], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [9, 2, 3, 4, 3, 5, 4, 9], [0, 4, 4, 4, 5, 0, 2, 3], [0, 63], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 3, 8, 4, 9, 5, 3, 4, 1, 8, 3], [0, 0, 7, 2, 6, 2, 4], [56, 67, 49], [0, 1, 0, 1, 0, 1, 1], [6, 3, 6, 6, 8, 1, 4, 1, 4, 2, 8], [1, 4, 5, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 19, 10, 4, 1, 1, 0, 1, 8, 6, 2, 3, 7, 3, 4, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.sqrt(tf.math.sqrt(grad)), tf.math.negative(tf.math.negative(tf.math.sqrt(alpha))))), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), grad), tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.sqrt(grad)))), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.multiply(grad, tf.math.divide_no_nan(grad, sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 2, 3, 0, 3, 2], [0, 1, 0, 2, 0, 0], [39, 39, 80, 58], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [36, 26], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 3, 1, 4, 1, 4, 2, 8], [4, 0, 0, 3, 4, 0, 3, 1, 2, 0, 7], [16, 99, 96, 99, 61, 35]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 4, 10, 6, 4, 2, 2, 1, 1, 1, 22, 11, 11, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(grad, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.sqrt(beta), tf.constant(1.0, shape=shape, dtype=tf.float32))), grad)", "other_info": {"loss": [729336.625, 2.304222822189331, 2.303938388824463, 2.303753137588501, 2.303626775741577, 2.303534507751465], "accuracy": [0.09192973375320435, 0.09998679161071777, 0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.303501844406128, 2.303239345550537, 2.303093194961548, 2.3030035495758057, 2.3029391765594482, 2.302886962890625], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 2, 3, 0, 3], [0, 1, 0, 0], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [57, 16], [0, 1, 0, 1, 0, 0, 1], [6, 1, 5, 8], [0, 0, 2], [99, 70], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [6, 3, 3, 3, 8, 1, 4, 1, 9, 2, 0], [0, 3, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 10, 6, 4, 2, 7, 4, 3, 2, 16, 8, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.subtract(sigma, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}]