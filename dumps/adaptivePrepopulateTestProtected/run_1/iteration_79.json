[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8694285750389099, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2242414951324463, 1.873990535736084, 1.389577031135559, 1.0996041297912598, 0.9386141896247864, 0.8398947715759277, 0.775288999080658, 0.7287111878395081, 0.6846228837966919, 0.6758082509040833, 0.6454035639762878, 0.6104606986045837, 0.5976505279541016, 0.576252281665802, 0.563029944896698, 0.5500378608703613, 0.5402260422706604, 0.5253262519836426, 0.5235790014266968, 0.5059814453125, 0.49588847160339355, 0.48591113090515137, 0.4758594334125519, 0.46893852949142456, 0.4583079516887665, 0.45269128680229187, 0.44418203830718994, 0.43926936388015747, 0.42385733127593994, 0.42120060324668884, 0.4024251401424408, 0.4098416864871979, 0.4004221260547638, 0.3976665735244751, 0.38388049602508545, 0.37705695629119873, 0.37504884600639343, 0.3733339309692383, 0.36548563838005066, 0.36141690611839294, 0.3500431776046753, 0.3464747369289398, 0.35034850239753723, 0.3380212187767029, 0.3331820070743561, 0.3312723934650421, 0.3255004584789276, 0.3186694085597992, 0.31808584928512573, 0.3218799829483032, 0.31129190325737, 0.3033290207386017, 0.2996595799922943], "accuracy": [0.27644962072372437, 0.48448026180267334, 0.568220853805542, 0.6211860775947571, 0.6667547225952148, 0.7018887996673584, 0.7181349992752075, 0.7358341217041016, 0.7512878179550171, 0.7528728246688843, 0.7664773464202881, 0.7786290049552917, 0.7803460359573364, 0.7942147850990295, 0.7977809906005859, 0.7988376617431641, 0.8020076751708984, 0.811649739742279, 0.8119139075279236, 0.8165367841720581, 0.8207634687423706, 0.8265751004219055, 0.8277638554573059, 0.8289526104927063, 0.8367455005645752, 0.8378021121025085, 0.8437458872795105, 0.8471800088882446, 0.8506141901016235, 0.8473120927810669, 0.8560295701026917, 0.8504821062088013, 0.8549728989601135, 0.856689989566803, 0.8617091774940491, 0.8638224601745605, 0.8658037185668945, 0.8669924736022949, 0.8712190985679626, 0.8714832663536072, 0.8730682730674744, 0.8761062026023865, 0.8716153502464294, 0.8803328275680542, 0.8809932470321655, 0.8796724081039429, 0.8840311765670776, 0.884691596031189, 0.8865407705307007, 0.8840311765670776, 0.8854840993881226, 0.8916919827461243, 0.8922203183174133], "val_loss": [2.0479724407196045, 1.529237151145935, 1.0540465116500854, 0.8433173894882202, 0.7545961737632751, 0.6980624794960022, 0.6580017805099487, 0.6195607781410217, 0.5999526381492615, 0.5752860307693481, 0.559104859828949, 0.5439989566802979, 0.5292894244194031, 0.5178523063659668, 0.5022426247596741, 0.5017285943031311, 0.48823103308677673, 0.47873440384864807, 0.477595716714859, 0.46564924716949463, 0.4590565860271454, 0.45899832248687744, 0.4475051164627075, 0.4418163597583771, 0.43368008732795715, 0.43417733907699585, 0.4239557683467865, 0.42434272170066833, 0.41751551628112793, 0.41126132011413574, 0.4116916060447693, 0.40738537907600403, 0.4071451425552368, 0.4017147123813629, 0.39535269141197205, 0.39715105295181274, 0.39165571331977844, 0.39393991231918335, 0.3857952356338501, 0.3832482099533081, 0.3798846900463104, 0.37473782896995544, 0.37857675552368164, 0.3764359951019287, 0.3764081299304962, 0.3671824038028717, 0.3662751317024231, 0.3666841685771942, 0.3628946840763092, 0.36532390117645264, 0.3623155951499939, 0.36221349239349365, 0.3565906584262848], "val_accuracy": [0.5086666941642761, 0.6493333578109741, 0.6740000247955322, 0.6963333487510681, 0.734000027179718, 0.7513333559036255, 0.7490000128746033, 0.7749999761581421, 0.7833333611488342, 0.7896666526794434, 0.7950000166893005, 0.8043333292007446, 0.8080000281333923, 0.8180000185966492, 0.8246666789054871, 0.8199999928474426, 0.8186666369438171, 0.8270000219345093, 0.8336666822433472, 0.8383333086967468, 0.8346666693687439, 0.8333333134651184, 0.840666651725769, 0.8420000076293945, 0.8456666469573975, 0.843999981880188, 0.8456666469573975, 0.8533333539962769, 0.856333315372467, 0.8519999980926514, 0.8566666841506958, 0.856333315372467, 0.8523333072662354, 0.8579999804496765, 0.8569999933242798, 0.8629999756813049, 0.8573333621025085, 0.856333315372467, 0.862333357334137, 0.8646666407585144, 0.8650000095367432, 0.8669999837875366, 0.8603333234786987, 0.8663333058357239, 0.8653333187103271, 0.871999979019165, 0.8733333349227905, 0.8743333220481873, 0.8730000257492065, 0.8703333139419556, 0.8703333139419556, 0.8723333477973938, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0], [0, 9], [0], [0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 6, 3, 7, 0, 9, 2, 0, 1, 9, 2, 2], [0, 2, 7, 6, 1, 7], [0, 51, 86], [0, 1], [0], [1], [0]], "fitness": -0.8502857089042664, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.negative(tf.math.subtract(grad, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(grad, alpha), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2937633991241455, 2.1923091411590576, 1.7752206325531006, 1.3513799905776978, 1.072171688079834, 0.9320513606071472, 0.853792667388916, 0.8269205093383789, 0.7654349207878113, 0.7395961284637451, 0.6933777332305908, 0.6847112774848938, 0.6645384430885315, 0.633359432220459, 0.6034026741981506, 0.6033876538276672, 0.5852552652359009, 0.571386456489563, 0.5586058497428894, 0.5488037467002869, 0.5590955018997192, 0.5389012098312378, 0.5431457757949829, 0.5351940989494324, 0.5216749310493469, 0.5129664540290833, 0.48484161496162415, 0.4778262972831726, 0.4714576005935669, 0.4643320143222809, 0.46017739176750183, 0.4595870077610016, 0.437869668006897, 0.4234628975391388, 0.4196632504463196, 0.4101184904575348, 0.4094439744949341, 0.40533116459846497, 0.3849898874759674, 0.38730019330978394, 0.3786357343196869, 0.3678848445415497, 0.3629514276981354, 0.3618486821651459, 0.3599713146686554, 0.3477061688899994, 0.3487633168697357, 0.3501899540424347, 0.3415640592575073, 0.33471596240997314, 0.33720663189888, 0.3339006304740906], "accuracy": [0.13076211512088776, 0.3197728097438812, 0.44128912687301636, 0.5494650602340698, 0.6394135355949402, 0.6609430909156799, 0.6869634389877319, 0.6915863156318665, 0.7077004313468933, 0.7230220437049866, 0.7404569983482361, 0.7448157668113708, 0.7477215528488159, 0.7606657147407532, 0.7759873270988464, 0.7721568942070007, 0.7823272943496704, 0.7876105904579163, 0.791969358921051, 0.791441023349762, 0.7931581139564514, 0.7991018295288086, 0.7967243194580078, 0.7955356240272522, 0.8035926818847656, 0.8105930685997009, 0.8119139075279236, 0.8191784620285034, 0.8181217908859253, 0.8253863453865051, 0.8252542614936829, 0.8261788487434387, 0.8359529972076416, 0.8384625315666199, 0.8428213000297546, 0.8466516733169556, 0.8411042094230652, 0.8510104417800903, 0.8570862412452698, 0.8549728989601135, 0.8581429123878479, 0.8613129258155823, 0.8679170608520508, 0.8634262084960938, 0.8658037185668945, 0.8631620407104492, 0.8661999702453613, 0.8671245574951172, 0.8667283058166504, 0.8681812286376953, 0.8689737319946289, 0.8706908226013184], "val_loss": [2.246405601501465, 2.02078914642334, 1.140797734260559, 0.8904911875724792, 0.750567615032196, 0.7144407629966736, 0.661472499370575, 0.6377736926078796, 0.6369783878326416, 0.610393226146698, 0.5897000432014465, 0.5597788095474243, 0.5409489870071411, 0.5261069536209106, 0.5225569009780884, 0.511366069316864, 0.5051568150520325, 0.5043150186538696, 0.4954036474227905, 0.49047353863716125, 0.49207043647766113, 0.49575158953666687, 0.4828225076198578, 0.47273385524749756, 0.46970081329345703, 0.4777877926826477, 0.45934513211250305, 0.4619518518447876, 0.4508558213710785, 0.44698336720466614, 0.4606913924217224, 0.4468490779399872, 0.4322425425052643, 0.4278031289577484, 0.42754504084587097, 0.42667484283447266, 0.43243294954299927, 0.4334830641746521, 0.4213290214538574, 0.4183075428009033, 0.42450574040412903, 0.43344542384147644, 0.43419885635375977, 0.4256837069988251, 0.43652409315109253, 0.42663827538490295, 0.42487266659736633, 0.43252864480018616, 0.4242834448814392, 0.44390130043029785, 0.4360504448413849, 0.4370638132095337], "val_accuracy": [0.43299999833106995, 0.4729999899864197, 0.6483333110809326, 0.690666675567627, 0.7293333411216736, 0.7409999966621399, 0.753000020980835, 0.7570000290870667, 0.7493333220481873, 0.7576666474342346, 0.7666666507720947, 0.7806666493415833, 0.7903333306312561, 0.7946666479110718, 0.8040000200271606, 0.8006666898727417, 0.7976666688919067, 0.7976666688919067, 0.8066666722297668, 0.8106666803359985, 0.809333324432373, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8286666870117188, 0.8226666450500488, 0.8306666612625122, 0.8230000138282776, 0.8346666693687439, 0.8373333215713501, 0.8316666483879089, 0.843999981880188, 0.8483333587646484, 0.8523333072662354, 0.8576666712760925, 0.8556666374206543, 0.8510000109672546, 0.8500000238418579, 0.856333315372467, 0.8586666584014893, 0.8519999980926514, 0.8546666502952576, 0.859333336353302, 0.8606666922569275, 0.8546666502952576, 0.8573333621025085, 0.8669999837875366, 0.8636666536331177, 0.8640000224113464, 0.8646666407585144, 0.8643333315849304, 0.8613333106040955]}, "mapping_values": [1, 10, 5, 5, 3, 2, 2, 0, 1, 18, 12, 6, 3, 2, 1, 1, 0], "tree_depth": 16}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8222857117652893, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.496407151222229, 0.7849909067153931, 0.63486647605896, 0.5565025806427002, 0.5441464781761169, 0.5182162523269653, 0.5146229267120361, 0.4762376546859741, 0.4682806432247162, 0.47806516289711, 0.4566754102706909, 0.45043838024139404, 0.4771929979324341, 0.49155348539352417, 0.4859381914138794, 0.4714645445346832, 0.4533623456954956, 0.5439770221710205], "accuracy": [0.4855369031429291, 0.7220974564552307, 0.7646281719207764, 0.7903843522071838, 0.7992339134216309, 0.8020076751708984, 0.8099326491355896, 0.8232730031013489, 0.8273676037788391, 0.822348415851593, 0.8335754871368408, 0.8416325449943542, 0.8384625315666199, 0.8280280232429504, 0.8257825970649719, 0.8318583965301514, 0.8413683772087097, 0.833179235458374], "val_loss": [0.7902492880821228, 0.5765603184700012, 0.5088744163513184, 0.4974626898765564, 0.47344499826431274, 0.4671294391155243, 0.498847097158432, 0.4646889567375183, 0.4732230603694916, 0.4883991777896881, 0.515494704246521, 0.519139289855957, 0.5304158329963684, 0.4940042793750763, 0.5472859144210815, 0.5269832611083984, 0.5583916306495667, 0.5922593474388123], "val_accuracy": [0.7333333492279053, 0.7823333144187927, 0.8013333082199097, 0.8136666417121887, 0.8289999961853027, 0.8343333601951599, 0.8429999947547913, 0.8379999995231628, 0.8389999866485596, 0.843999981880188, 0.8420000076293945, 0.8413333296775818, 0.8483333587646484, 0.8399999737739563, 0.843666672706604, 0.8453333377838135, 0.843666672706604, 0.8416666388511658]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 5, 8], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [7, 2, 3, 0, 6, 3, 9, 2], [0, 2, 0, 5, 3, 2, 3], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 1], [99], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 3, 2, 6, 8, 8, 8], [2, 1, 0, 1], [60, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 12, 7, 5, 3, 4, 2, 2, 1, 4, 2, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, alpha))", "other_info": {"loss": [1.2986363618420326e+17, 445.6451721191406, 456.25274658203125, 528.4986572265625, 506.5549011230469, 423.63946533203125], "accuracy": [0.1022322028875351, 0.1002509593963623, 0.10038304328918457, 0.09998679161071777, 0.10460969805717468, 0.09787346422672272], "val_loss": [666.9700317382812, 592.7936401367188, 562.5235595703125, 348.8697204589844, 421.95074462890625, 624.7643432617188], "val_accuracy": [0.10233332961797714, 0.10000000149011612, 0.10066666454076767, 0.10066666454076767, 0.09833333641290665, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 1], [0, 8], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [102748880.0, 37333721088.0, 1709067468800.0, 38271459524608.0, 619689692626944.0, 8547127189831680.0], "accuracy": [0.10276053100824356, 0.10315678268671036, 0.1022322028875351, 0.10077928751707077, 0.1010434553027153, 0.09681680053472519], "val_loss": [1246361216.0, 182376792064.0, 6032755523584.0, 115120608903168.0, 1706254544142336.0, 2.230966860067635e+16], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 3, 3, 0, 3, 8], [0, 1, 0, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [3, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 16, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [2, 9, 3, 1, 3, 2, 1, 6, 6, 7], [0, 0, 1, 0, 2, 2, 1, 2, 2], [0, 39, 39, 54], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 7], [0, 0, 2, 0, 0, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 8], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.09457142651081085, "mapping_values": [1, 19, 10, 9, 4, 6, 3, 3, 2, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.divide_no_nan(grad, grad), tf.math.divide_no_nan(tf.math.add(alpha, grad), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3102197647094727, 2.3106133937835693, 2.309239387512207, 2.3102548122406006, 2.3105382919311523, 2.3095943927764893], "accuracy": [0.09338264167308807, 0.09153348207473755, 0.08889182657003403, 0.09417514503002167, 0.08809932321310043, 0.09377889335155487], "val_loss": [2.308586835861206, 2.308586835861206, 2.308586835861206, 2.308586835861206, 2.308586835861206, 2.308586835861206], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}]