[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222581624984741, 1.8599525690078735, 1.387638807296753, 1.0932934284210205, 0.944896399974823, 0.8427925705909729, 0.781058669090271, 0.737969160079956, 0.6935274004936218, 0.6611576676368713, 0.6398860216140747, 0.6179032325744629, 0.60103839635849, 0.5839085578918457, 0.5580132007598877, 0.5441495776176453, 0.535332441329956, 0.5306277275085449, 0.5194913744926453, 0.5068543553352356, 0.4959303140640259, 0.49186819791793823, 0.4703788459300995, 0.465047150850296, 0.4597294330596924, 0.4484984278678894, 0.44131264090538025, 0.4404471516609192, 0.4346439242362976, 0.41964438557624817, 0.41316136717796326, 0.409914493560791, 0.3981304466724396, 0.3966872990131378, 0.3890320062637329, 0.3904731273651123, 0.3703020513057709, 0.3771737515926361, 0.3746733069419861, 0.36148685216903687, 0.36140426993370056, 0.3510262668132782, 0.3516899347305298, 0.3468944728374481], "accuracy": [0.28424251079559326, 0.5052172541618347, 0.561880886554718, 0.6184123754501343, 0.6610751748085022, 0.7033417224884033, 0.719852089881897, 0.7327961921691895, 0.7442874312400818, 0.7568352818489075, 0.7718927264213562, 0.7746664881706238, 0.7836481332778931, 0.7858935594558716, 0.8016114234924316, 0.8009510040283203, 0.8086118102073669, 0.8109893202781677, 0.81112140417099, 0.8170651197433472, 0.8183859586715698, 0.8297450542449951, 0.8330471515655518, 0.8396512866020203, 0.8356888294219971, 0.841500461101532, 0.8450667262077332, 0.8391229510307312, 0.8426892161369324, 0.845859169960022, 0.8555012345314026, 0.857218325138092, 0.8594637513160706, 0.8577466607093811, 0.86118084192276, 0.8617091774940491, 0.8632941246032715, 0.8607845902442932, 0.8663320541381836, 0.8716153502464294, 0.8691058158874512, 0.876370370388031, 0.8721436858177185, 0.8717474341392517], "val_loss": [2.035897731781006, 1.5097589492797852, 1.039507269859314, 0.8311957716941833, 0.744013249874115, 0.687319278717041, 0.6423984169960022, 0.6109897494316101, 0.5832470059394836, 0.565523624420166, 0.5422946214675903, 0.5326063632965088, 0.5169527530670166, 0.5043017268180847, 0.4950087368488312, 0.4837435781955719, 0.4769287109375, 0.4715540409088135, 0.46575072407722473, 0.4586402177810669, 0.4517759680747986, 0.45043525099754333, 0.43777355551719666, 0.435914546251297, 0.43075937032699585, 0.42526525259017944, 0.426057904958725, 0.41858047246932983, 0.4153059124946594, 0.41958093643188477, 0.4059593975543976, 0.40534716844558716, 0.4052426815032959, 0.398561030626297, 0.39683300256729126, 0.3948875367641449, 0.3897661566734314, 0.3872804045677185, 0.3896560072898865, 0.3879593014717102, 0.3824343979358673, 0.3810494840145111, 0.380729079246521, 0.3797580897808075], "val_accuracy": [0.5569999814033508, 0.6489999890327454, 0.6733333468437195, 0.7006666660308838, 0.734333336353302, 0.7523333430290222, 0.7620000243186951, 0.7720000147819519, 0.7823333144187927, 0.7850000262260437, 0.8059999942779541, 0.8076666593551636, 0.8106666803359985, 0.8276666402816772, 0.8289999961853027, 0.8223333358764648, 0.8293333053588867, 0.8349999785423279, 0.8333333134651184, 0.8386666774749756, 0.8433333039283752, 0.8429999947547913, 0.8476666808128357, 0.8489999771118164, 0.8473333120346069, 0.8519999980926514, 0.8500000238418579, 0.8539999723434448, 0.8533333539962769, 0.8553333282470703, 0.856333315372467, 0.8586666584014893, 0.8566666841506958, 0.859666645526886, 0.8640000224113464, 0.8616666793823242, 0.8636666536331177, 0.8603333234786987, 0.8650000095367432, 0.8629999756813049, 0.8650000095367432, 0.862666666507721, 0.8650000095367432, 0.8633333444595337]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 1], [0, 3, 8, 5], [0, 0], [0, 55], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8600000143051147, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.square(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293894052505493, 2.1925318241119385, 1.7760690450668335, 1.3264302015304565, 1.0882723331451416, 0.8996028900146484, 0.8304414749145508, 0.7878840565681458, 0.7494415640830994, 0.7173764705657959, 0.6861270666122437, 0.6547884345054626, 0.6319982409477234, 0.6043220162391663, 0.59432452917099, 0.580342173576355, 0.5693609118461609, 0.5548622608184814, 0.535325825214386, 0.5415633320808411, 0.5272077918052673, 0.5202547907829285, 0.5055139064788818, 0.499500036239624, 0.4940034747123718, 0.484306275844574, 0.4750751256942749, 0.45518073439598083, 0.44782915711402893, 0.43436357378959656, 0.4282366931438446, 0.41756466031074524, 0.42731741070747375, 0.40990957617759705, 0.40622615814208984, 0.4079931974411011, 0.4064127206802368, 0.38602450489997864, 0.38747358322143555, 0.3746224641799927, 0.36185991764068604, 0.3700482249259949, 0.36772266030311584, 0.3451773524284363, 0.34286653995513916, 0.35737791657447815, 0.3492162525653839, 0.34747493267059326, 0.32941246032714844, 0.32572248578071594, 0.32601651549339294, 0.3359438180923462, 0.31357884407043457, 0.31474927067756653, 0.31013384461402893], "accuracy": [0.12481838464736938, 0.3280940353870392, 0.43983620405197144, 0.5522388219833374, 0.6407343745231628, 0.6717738509178162, 0.6952846646308899, 0.7057191729545593, 0.7157574892044067, 0.7276449799537659, 0.7392682433128357, 0.7470611333847046, 0.7577598690986633, 0.7691190242767334, 0.7697794437408447, 0.7807422876358032, 0.7833839654922485, 0.7783648371696472, 0.7961959838867188, 0.7913089394569397, 0.7973847389221191, 0.7992339134216309, 0.8031964302062988, 0.8109893202781677, 0.8142913579940796, 0.8193105459213257, 0.8230088353157043, 0.8239334225654602, 0.8285563588142395, 0.8321225643157959, 0.8333113193511963, 0.8428213000297546, 0.8380662798881531, 0.8453308939933777, 0.8498216867446899, 0.8467837572097778, 0.8521991968154907, 0.8524633646011353, 0.8553691506385803, 0.857218325138092, 0.8664641380310059, 0.858671247959137, 0.8552370667457581, 0.8647470474243164, 0.8661999702453613, 0.8619733452796936, 0.8636903762817383, 0.8664641380310059, 0.8767666220664978, 0.8766345381736755, 0.8749174475669861, 0.8691058158874512, 0.8757099509239197, 0.8776912093162537, 0.8795403242111206], "val_loss": [2.2457783222198486, 2.0227251052856445, 1.1362617015838623, 0.8610445857048035, 0.732896625995636, 0.6777410507202148, 0.6320591568946838, 0.6288715600967407, 0.6039448380470276, 0.5735251307487488, 0.5437639355659485, 0.532444417476654, 0.5170598030090332, 0.5118442177772522, 0.5013259053230286, 0.4959987699985504, 0.48614516854286194, 0.47943219542503357, 0.47365376353263855, 0.47823214530944824, 0.4712585508823395, 0.4658697843551636, 0.45800748467445374, 0.46019285917282104, 0.44593220949172974, 0.43332067131996155, 0.42906808853149414, 0.43301481008529663, 0.43360114097595215, 0.42796188592910767, 0.42443743348121643, 0.41765445470809937, 0.4223291873931885, 0.4104761481285095, 0.4137067496776581, 0.4059634506702423, 0.40061601996421814, 0.39419877529144287, 0.3940325379371643, 0.4001123905181885, 0.41403257846832275, 0.4011346101760864, 0.39376285672187805, 0.3898094594478607, 0.3980797231197357, 0.39221426844596863, 0.3914819061756134, 0.39748314023017883, 0.3922480344772339, 0.39738795161247253, 0.4010452926158905, 0.40115320682525635, 0.41134074330329895, 0.3880791962146759, 0.3915714621543884], "val_accuracy": [0.4233333468437195, 0.4856666624546051, 0.6506666541099548, 0.7023333311080933, 0.7263333201408386, 0.7536666393280029, 0.7596666812896729, 0.7590000033378601, 0.7839999794960022, 0.777999997138977, 0.7836666703224182, 0.7860000133514404, 0.8043333292007446, 0.8069999814033508, 0.8083333373069763, 0.8083333373069763, 0.8143333196640015, 0.8169999718666077, 0.8226666450500488, 0.8230000138282776, 0.8173333406448364, 0.824999988079071, 0.8393333554267883, 0.8339999914169312, 0.8396666646003723, 0.8423333168029785, 0.8413333296775818, 0.8426666855812073, 0.8476666808128357, 0.8519999980926514, 0.8543333411216736, 0.8543333411216736, 0.8553333282470703, 0.859333336353302, 0.8579999804496765, 0.8576666712760925, 0.8556666374206543, 0.8586666584014893, 0.8636666536331177, 0.859666645526886, 0.8619999885559082, 0.8656666874885559, 0.8646666407585144, 0.8659999966621399, 0.8663333058357239, 0.8683333396911621, 0.8696666955947876, 0.8610000014305115, 0.871666669845581, 0.8743333220481873, 0.8700000047683716, 0.8669999837875366, 0.8673333525657654, 0.8733333349227905, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 6, 4, 2, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 7, 2, 4, 9, 5, 8, 7, 7, 0, 2], [0, 6, 5, 6, 2, 3], [0, 74], [1], [0], [2], [0]], "fitness": -0.8451428413391113, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(tf.math.add(grad, grad), tf.math.negative(tf.math.add(grad, beta))))), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.556180715560913, 0.9042672514915466, 0.7238757014274597, 0.6543405652046204, 0.6156185865402222, 0.5862840414047241, 0.5647208094596863, 0.5764302611351013, 0.5519077181816101, 0.5597530603408813, 0.537361741065979, 0.5406309366226196, 0.520882785320282, 0.5393577814102173, 0.5449831485748291, 0.4903419613838196, 0.48506349325180054, 0.49117907881736755, 0.4800525903701782, 0.5107000470161438, 0.5095301866531372, 0.5247708559036255], "accuracy": [0.4625544846057892, 0.7020208835601807, 0.7401928305625916, 0.7548540234565735, 0.7637035846710205, 0.7854973077774048, 0.7955356240272522, 0.8031964302062988, 0.800290584564209, 0.8006868362426758, 0.8053097128868103, 0.8059701323509216, 0.8203672170639038, 0.8158763647079468, 0.8138951063156128, 0.8211596608161926, 0.8354246616363525, 0.8314621448516846, 0.8296129703521729, 0.8235371708869934, 0.8197067975997925, 0.8149517774581909], "val_loss": [0.8399797081947327, 0.6862099766731262, 0.6200331449508667, 0.5929368138313293, 0.5724395513534546, 0.5697922110557556, 0.6524484753608704, 0.6006324291229248, 0.5165163278579712, 0.551596999168396, 0.5715364217758179, 0.549031674861908, 0.5762500166893005, 0.5852765440940857, 0.5692289471626282, 0.551325261592865, 0.5663871765136719, 0.5988283157348633, 0.5845798254013062, 0.6116665601730347, 0.6130567789077759, 0.5986793041229248], "val_accuracy": [0.7206666469573975, 0.746666669845581, 0.7786666750907898, 0.7749999761581421, 0.7893333435058594, 0.7979999780654907, 0.8106666803359985, 0.8143333196640015, 0.8206666707992554, 0.8166666626930237, 0.8119999766349792, 0.8153333067893982, 0.8153333067893982, 0.8213333487510681, 0.8293333053588867, 0.8299999833106995, 0.8323333263397217, 0.8270000219345093, 0.8190000057220459, 0.8206666707992554, 0.8286666870117188, 0.8176666498184204]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 17, 11, 6, 2, 1, 0, 1, 0], "tree_depth": 17}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 2, 0, 2], [39, 39, 6], [0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 5], [0], [0, 5, 24], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 0, 0, 1, 4, 1, 4, 2, 8], [1, 5, 7, 2, 5, 4, 6, 4, 2, 1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 1, 3, 2, 1, 1, 11, 6, 5, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.negative(grad)), tf.math.negative(grad)), tf.math.subtract(beta, grad))", "other_info": {"loss": [2.327565908432007, 2.4697322845458984, 7.585510730743408, 2.7992517948150635, 2.3673489093780518, 2.4830121994018555, 2.7945961952209473, 3.1598703861236572, 3.819913387298584, 5.070437431335449], "accuracy": [0.07845727354288101, 0.0672302171587944, 0.08321225643157959, 0.10011887550354004, 0.10210011899471283, 0.10276053100824356, 0.08928807079792023, 0.09549596905708313, 0.10077928751707077, 0.09998679161071777], "val_loss": [2.3778622150421143, 2.8438236713409424, 5.653554916381836, 2.3413965702056885, 2.430462121963501, 2.6057493686676025, 2.949550151824951, 3.496544599533081, 4.411593914031982, 18.272109985351562], "val_accuracy": [0.0963333323597908, 0.08833333104848862, 0.10266666859388351, 0.10199999809265137, 0.10333333164453506, 0.10300000011920929, 0.10266666859388351, 0.10100000351667404, 0.10133333504199982, 0.06133333221077919]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [8, 1, 3, 1, 3], [2, 0, 1, 0, 2], [76, 59, 27], [0, 0, 1, 1], [0, 3], [0, 3], [0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 7, 8, 2, 6, 8, 4, 1, 3, 8, 6, 9, 8, 4, 4, 8, 0, 3, 9], [0, 0, 5, 4, 2, 7, 2, 7, 4, 5], [0, 5, 24], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 4, 2, 2, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 4, 3, 1, 6, 1, 9, 3, 8, 2, 5, 4, 6, 9, 1], [0, 1, 0, 2, 2, 0, 3, 1, 0, 1, 0], [39, 96, 52, 73, 17, 17, 38], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [1, 2, 0, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 28, 17, 11, 7, 10, 6, 4, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.multiply(grad, tf.math.sqrt(tf.math.add(tf.math.square(tf.math.pow(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad)), tf.math.divide_no_nan(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))), tf.math.subtract(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), alpha)), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [1, 1, 0, 2], [39, 56], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [93, 16], [0, 1], [0], [2], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 8, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09342857450246811, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 2, 1, 1, 0, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))))), alpha)", "other_info": {"loss": [2.3091681003570557, 2.3104522228240967, 2.308640480041504, 2.3098273277282715, 2.31064772605896, 2.308828592300415], "accuracy": [0.09681680053472519, 0.09536388516426086, 0.08770307898521423, 0.08968432247638702, 0.08994849026203156, 0.09853387624025345], "val_loss": [2.308943748474121, 2.308943748474121, 2.308943748474121, 2.308943748474121, 2.308943748474121, 2.308943748474121], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]