[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8708571195602417, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222914457321167, 1.8685959577560425, 1.3924140930175781, 1.089424967765808, 0.9492877721786499, 0.8436889052391052, 0.7812269926071167, 0.7207340598106384, 0.6971274018287659, 0.6675599813461304, 0.6352823376655579, 0.6113818883895874, 0.5938334465026855, 0.5772460699081421, 0.5566527247428894, 0.5411046147346497, 0.5268383622169495, 0.5179440379142761, 0.5084345936775208, 0.49983713030815125, 0.48209667205810547, 0.47989124059677124, 0.4645971655845642, 0.4558502733707428, 0.4472942054271698, 0.43908631801605225, 0.4392927587032318, 0.42224568128585815, 0.4159633219242096, 0.4184127151966095, 0.4075765907764435, 0.4027480185031891, 0.3950516879558563, 0.3790510892868042, 0.38917937874794006, 0.377072274684906, 0.3662484586238861, 0.3583894670009613, 0.3609154522418976, 0.34875616431236267, 0.3417956531047821, 0.33928182721138, 0.3322365880012512, 0.326907217502594, 0.3209529519081116, 0.3120496869087219, 0.31895965337753296, 0.3053432106971741, 0.30505749583244324, 0.3025767207145691, 0.29716625809669495, 0.2925037443637848, 0.28889381885528564, 0.29147371649742126, 0.284342885017395, 0.27981385588645935, 0.2716016173362732, 0.2678036093711853, 0.2623603940010071, 0.2589084804058075, 0.26211535930633545, 0.25557824969291687, 0.24516117572784424, 0.24661384522914886, 0.2396063506603241, 0.24163469672203064, 0.23253707587718964, 0.2344515025615692, 0.22638319432735443, 0.23018498718738556, 0.21929901838302612, 0.22100874781608582], "accuracy": [0.27499669790267944, 0.4877823293209076, 0.5591071248054504, 0.620261549949646, 0.6649055480957031, 0.6988508701324463, 0.7238145470619202, 0.7421740889549255, 0.7458723783493042, 0.7586844563484192, 0.7736098170280457, 0.7810064554214478, 0.7836481332778931, 0.7917051911354065, 0.7977809906005859, 0.8074230551719666, 0.8120459914207458, 0.8137630224227905, 0.8220842480659485, 0.8249900937080383, 0.8315942287445068, 0.8304054737091064, 0.8354246616363525, 0.8345000743865967, 0.8400475382804871, 0.8473120927810669, 0.8451988101005554, 0.850350022315979, 0.8506141901016235, 0.8557654023170471, 0.8527275323867798, 0.8560295701026917, 0.8589354157447815, 0.8654074668884277, 0.8569541573524475, 0.8656716346740723, 0.8706908226013184, 0.8754457831382751, 0.8704266548156738, 0.8751816153526306, 0.8758420348167419, 0.8815215826034546, 0.8816536664962769, 0.8811253309249878, 0.8838990926742554, 0.8868049383163452, 0.8869370222091675, 0.8901069760322571, 0.889578640460968, 0.8905032277107239, 0.8926165699958801, 0.893541157245636, 0.89552241563797, 0.89552241563797, 0.8985602855682373, 0.8982961177825928, 0.9031832218170166, 0.9043719172477722, 0.9045040011405945, 0.9075419306755066, 0.9046360850334167, 0.9085986018180847, 0.9108440279960632, 0.9096552729606628, 0.9140139818191528, 0.9138818979263306, 0.9145423173904419, 0.9163914918899536, 0.9159952402114868, 0.9157310724258423, 0.9183727502822876, 0.919561505317688], "val_loss": [2.0425524711608887, 1.518656611442566, 1.0450330972671509, 0.8370274305343628, 0.7515208125114441, 0.69685959815979, 0.6513968706130981, 0.6156761646270752, 0.5908230543136597, 0.5728890299797058, 0.5511547923088074, 0.5365252494812012, 0.5218045115470886, 0.5089165568351746, 0.4972670376300812, 0.4845508635044098, 0.47081053256988525, 0.4658023416996002, 0.4594309628009796, 0.4563050866127014, 0.45264682173728943, 0.44192326068878174, 0.4329475462436676, 0.4334276020526886, 0.42306065559387207, 0.41766589879989624, 0.4138094484806061, 0.4122494161128998, 0.4179808795452118, 0.4050447940826416, 0.4056010842323303, 0.3966136574745178, 0.39780330657958984, 0.3935365378856659, 0.395016074180603, 0.3847515881061554, 0.3835097551345825, 0.38276907801628113, 0.3875062167644501, 0.3809646666049957, 0.37402424216270447, 0.3768168091773987, 0.37478384375572205, 0.3673161268234253, 0.36899295449256897, 0.37482064962387085, 0.3684370219707489, 0.36811181902885437, 0.367524653673172, 0.36882084608078003, 0.3626534044742584, 0.36828744411468506, 0.36885449290275574, 0.36321282386779785, 0.35709795355796814, 0.3626002073287964, 0.35596224665641785, 0.3582359254360199, 0.3557676672935486, 0.3571290671825409, 0.3607541024684906, 0.3522002100944519, 0.35654914379119873, 0.3550100028514862, 0.35580867528915405, 0.35370588302612305, 0.35591447353363037, 0.35124486684799194, 0.3616813123226166, 0.34874510765075684, 0.35049954056739807, 0.35288262367248535], "val_accuracy": [0.5289999842643738, 0.6546666622161865, 0.6863333582878113, 0.7093333601951599, 0.7286666631698608, 0.7436666488647461, 0.7613333463668823, 0.7676666378974915, 0.7763333320617676, 0.7873333096504211, 0.796999990940094, 0.7963333129882812, 0.8033333420753479, 0.8166666626930237, 0.8149999976158142, 0.8253333568572998, 0.8289999961853027, 0.8289999961853027, 0.8353333473205566, 0.8316666483879089, 0.8363333344459534, 0.8373333215713501, 0.8383333086967468, 0.8416666388511658, 0.8413333296775818, 0.8519999980926514, 0.8443333506584167, 0.8486666679382324, 0.8486666679382324, 0.8503333330154419, 0.8526666760444641, 0.8510000109672546, 0.8529999852180481, 0.8550000190734863, 0.8536666631698608, 0.859000027179718, 0.859000027179718, 0.8633333444595337, 0.8546666502952576, 0.8613333106040955, 0.8636666536331177, 0.859000027179718, 0.8610000014305115, 0.8650000095367432, 0.8669999837875366, 0.859000027179718, 0.8636666536331177, 0.8696666955947876, 0.8656666874885559, 0.8636666536331177, 0.8733333349227905, 0.8683333396911621, 0.8700000047683716, 0.8713333606719971, 0.871999979019165, 0.8743333220481873, 0.874666690826416, 0.874666690826416, 0.8756666779518127, 0.8756666779518127, 0.871666669845581, 0.8766666650772095, 0.8756666779518127, 0.8766666650772095, 0.874666690826416, 0.8763333559036255, 0.8836666941642761, 0.8796666860580444, 0.8773333430290222, 0.8803333044052124, 0.8823333382606506, 0.8796666860580444]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 3], [0, 0], [0, 34], [0, 0, 1], [0, 8], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8588571548461914, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2934491634368896, 2.1902592182159424, 1.7664439678192139, 1.3783787488937378, 1.081702709197998, 0.9392876625061035, 0.8556262850761414, 0.8187505006790161, 0.7674879431724548, 0.7413291335105896, 0.7057492733001709, 0.6735588908195496, 0.648168683052063, 0.6306977272033691, 0.6038788557052612, 0.5956783890724182, 0.5794587135314941, 0.5737100839614868, 0.5597932934761047, 0.5444808602333069, 0.5384191274642944, 0.5279102325439453, 0.5131146311759949, 0.5132448673248291, 0.4978466033935547, 0.4850882589817047, 0.47257351875305176, 0.45908981561660767, 0.458391398191452, 0.4403185248374939, 0.43548348546028137, 0.4262585937976837, 0.43107160925865173, 0.42098480463027954, 0.41012781858444214, 0.41198885440826416, 0.3991842269897461, 0.3970157206058502, 0.38570883870124817, 0.39223113656044006, 0.38406774401664734, 0.3758952021598816, 0.3703908920288086, 0.35807865858078003, 0.35490894317626953, 0.34705090522766113, 0.3457517623901367, 0.33897334337234497, 0.32017382979393005, 0.3302409052848816, 0.33195760846138], "accuracy": [0.12534672021865845, 0.32545238733291626, 0.4371945559978485, 0.5350680351257324, 0.631488561630249, 0.658961832523346, 0.6944921612739563, 0.6995112895965576, 0.7024171352386475, 0.7148329019546509, 0.7386078238487244, 0.7391361594200134, 0.7559106945991516, 0.7580240368843079, 0.7642319202423096, 0.774270236492157, 0.7814027070999146, 0.7796856164932251, 0.7903843522071838, 0.7927618622779846, 0.7960638999938965, 0.8012151718139648, 0.8070268034934998, 0.8072909712791443, 0.8090080618858337, 0.8150838613510132, 0.8255184292793274, 0.8296129703521729, 0.8277638554573059, 0.82683926820755, 0.8334434032440186, 0.8411042094230652, 0.8383304476737976, 0.8455950617790222, 0.8442742228507996, 0.8453308939933777, 0.8469158411026001, 0.8465195894241333, 0.8518029451370239, 0.8532558679580688, 0.8512746095657349, 0.857218325138092, 0.8574824929237366, 0.86118084192276, 0.8619733452796936, 0.8691058158874512, 0.8683133125305176, 0.8696341514587402, 0.8689737319946289, 0.8749174475669861, 0.872407853603363], "val_loss": [2.2462196350097656, 2.0197930335998535, 1.142666220664978, 0.8866405487060547, 0.780689537525177, 0.717025876045227, 0.6815804839134216, 0.6568841338157654, 0.6541608572006226, 0.6185963749885559, 0.5710350871086121, 0.5509436130523682, 0.5512917041778564, 0.5326560735702515, 0.5325649976730347, 0.5187314748764038, 0.4965292513370514, 0.4885989725589752, 0.49756529927253723, 0.4778068959712982, 0.466042160987854, 0.45898762345314026, 0.4677754342556, 0.46344417333602905, 0.45354312658309937, 0.43514958024024963, 0.43375325202941895, 0.43844181299209595, 0.4276289939880371, 0.4255087077617645, 0.41972172260284424, 0.4168386161327362, 0.41634461283683777, 0.40809229016304016, 0.42118048667907715, 0.40175625681877136, 0.40060657262802124, 0.4193894565105438, 0.41667553782463074, 0.39551302790641785, 0.4036369323730469, 0.4105549454689026, 0.39450326561927795, 0.3908560276031494, 0.38337281346321106, 0.40047091245651245, 0.39335009455680847, 0.39005666971206665, 0.40512385964393616, 0.41607242822647095, 0.3906031847000122], "val_accuracy": [0.41100001335144043, 0.46933332085609436, 0.6423333287239075, 0.6949999928474426, 0.7153333425521851, 0.7326666712760925, 0.7409999966621399, 0.750333309173584, 0.7636666893959045, 0.7723333239555359, 0.7836666703224182, 0.7893333435058594, 0.7886666655540466, 0.8003333210945129, 0.7983333468437195, 0.8013333082199097, 0.8106666803359985, 0.8033333420753479, 0.8066666722297668, 0.8276666402816772, 0.8206666707992554, 0.8240000009536743, 0.8233333230018616, 0.828000009059906, 0.8293333053588867, 0.8379999995231628, 0.8416666388511658, 0.8429999947547913, 0.8476666808128357, 0.847000002861023, 0.8500000238418579, 0.8496666550636292, 0.8500000238418579, 0.8556666374206543, 0.8503333330154419, 0.8560000061988831, 0.8556666374206543, 0.843999981880188, 0.8573333621025085, 0.8573333621025085, 0.8573333621025085, 0.8633333444595337, 0.8676666617393494, 0.8579999804496765, 0.8683333396911621, 0.8736666440963745, 0.8713333606719971, 0.862666666507721, 0.8703333139419556, 0.8726666569709778, 0.8673333525657654]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 2, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8408571481704712, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5728785991668701, 0.8518638610839844, 0.6856293678283691, 0.634215772151947, 0.5852447152137756, 0.5560674071311951, 0.5633390545845032, 0.5427718162536621, 0.5453040599822998, 0.5309025645256042, 0.5409350395202637, 0.5674813389778137, 0.5308599472045898, 0.555988073348999, 0.5132349729537964, 0.5354529023170471, 0.5151360630989075, 0.5272275805473328, 0.506989061832428, 0.5152835249900818, 0.5052585601806641, 0.5084818005561829, 0.4758148193359375], "accuracy": [0.4745740294456482, 0.7099458575248718, 0.7466648817062378, 0.763967752456665, 0.7796856164932251, 0.793422281742096, 0.7988376617431641, 0.8030643463134766, 0.8099326491355896, 0.8166688680648804, 0.7988376617431641, 0.7988376617431641, 0.821820080280304, 0.8053097128868103, 0.8259146809577942, 0.8148196935653687, 0.8272355198860168, 0.8145555257797241, 0.8202351331710815, 0.8164047002792358, 0.8278959393501282, 0.8249900937080383, 0.8337075710296631], "val_loss": [0.8723118305206299, 0.6406887769699097, 0.5676506161689758, 0.5383487939834595, 0.5204236507415771, 0.5477755665779114, 0.4928044378757477, 0.5321105122566223, 0.5529782176017761, 0.5223204493522644, 0.49564045667648315, 0.5672078728675842, 0.5273482203483582, 0.5755507946014404, 0.5688164234161377, 0.584854245185852, 0.5125784873962402, 0.5225886106491089, 0.5388129353523254, 0.5275143980979919, 0.49684032797813416, 0.5332626104354858, 0.5519424080848694], "val_accuracy": [0.715666651725769, 0.7760000228881836, 0.7856666445732117, 0.8066666722297668, 0.8169999718666077, 0.8166666626930237, 0.828000009059906, 0.8259999752044678, 0.8216666579246521, 0.8159999847412109, 0.8339999914169312, 0.8286666870117188, 0.8233333230018616, 0.8339999914169312, 0.8360000252723694, 0.8343333601951599, 0.8306666612625122, 0.8493333458900452, 0.8336666822433472, 0.8403333425521851, 0.8366666436195374, 0.8410000205039978, 0.8429999947547913]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 48], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 3, 1], [0, 2, 0, 3, 3, 5], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 3, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 0, 1, 2, 0], [16, 67, 96, 99, 61, 1, 66]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 13, 7, 6, 2, 2, 1, 1, 1, 21, 11, 10, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(grad, grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [5, 2, 5, 2, 2, 6, 6, 8, 0, 3, 3, 5, 2, 9], [0, 2, 0, 0, 3], [0, 92, 21], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 7, 1, 8, 6, 2, 6, 2, 0, 2], [0, 6, 1, 1, 0, 5, 4, 0], [99, 23, 14], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 5, 7, 0, 0, 1, 1], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0, 63, 97]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 11, 6, 5, 3, 19, 11, 8, 3, 11, 7, 4, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.math.subtract(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), grad)), tf.math.negative(tf.math.add(grad, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), sigma)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1026284471154213, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 5], [2, 1, 0, 2], [38, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 2, 2, 8], [2, 0, 1, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09514285624027252, "mapping_values": [1, 8, 5, 3, 1, 10, 6, 4, 2, 2, 1, 1, 1, 14, 7, 7, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.square(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.310100555419922, 2.309387683868408, 2.309917688369751, 2.3093674182891846, 2.309563159942627, 2.3096508979797363], "accuracy": [0.09377889335155487, 0.09298639744520187, 0.09140139818191528, 0.09430722147226334, 0.0944393053650856, 0.08928807079792023], "val_loss": [2.3077046871185303, 2.3077034950256348, 2.3077001571655273, 2.307694435119629, 2.307685136795044, 2.3076720237731934], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 2], [54, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 2, 0, 3, 5, 9], [0, 2, 1, 2], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 5, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 26, 96, 99, 61, 1]], "fitness": -0.09000000357627869, "mapping_values": [1, 9, 5, 4, 1, 10, 7, 3, 2, 1, 0, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma), alpha)", "other_info": {"loss": [2.310232400894165, 2.309429168701172, 2.309826135635376, 2.3105292320251465, 2.3117082118988037, 2.3095815181732178], "accuracy": [0.09047681838274002, 0.09259014576673508, 0.09457138925790787, 0.09311848133802414, 0.09377889335155487, 0.09179764986038208], "val_loss": [2.3084354400634766, 2.3084354400634766, 2.3084354400634766, 2.3084354400634766, 2.3084354400634766, 2.3084354400634766], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]