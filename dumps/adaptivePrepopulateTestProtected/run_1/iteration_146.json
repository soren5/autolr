[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8771428465843201, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224409341812134, 1.866883397102356, 1.4001463651657104, 1.0866658687591553, 0.9199720621109009, 0.8241984248161316, 0.7542692422866821, 0.7100286483764648, 0.6804669499397278, 0.6531182527542114, 0.6252083778381348, 0.6058558821678162, 0.5829254984855652, 0.5664787292480469, 0.5612106919288635, 0.5385898351669312, 0.530884861946106, 0.5106523633003235, 0.5060731172561646, 0.4973580837249756, 0.4784611165523529, 0.4715133011341095, 0.4705090820789337, 0.4560485780239105, 0.4394570291042328, 0.44117987155914307, 0.4310234785079956, 0.4188030958175659, 0.41430673003196716, 0.4098314642906189, 0.39754894375801086, 0.39344143867492676, 0.39460626244544983, 0.3897266089916229, 0.37895357608795166, 0.37182238698005676, 0.3633183240890503, 0.3633265197277069, 0.3564075231552124, 0.347648561000824, 0.3443751335144043, 0.3451286852359772, 0.3296632468700409, 0.3300444185733795, 0.32357531785964966, 0.3250088095664978, 0.31258076429367065, 0.31657320261001587, 0.31601643562316895, 0.30213677883148193], "accuracy": [0.2748646140098572, 0.4909523129463196, 0.5634658336639404, 0.6199973821640015, 0.6738871932029724, 0.707568347454071, 0.7263241410255432, 0.7407211661338806, 0.7541936039924622, 0.7672698497772217, 0.7695152759552002, 0.7759873270988464, 0.7891955971717834, 0.7951393723487854, 0.7944789528846741, 0.8010830879211426, 0.8082155585289001, 0.816008448600769, 0.8132346868515015, 0.8215559124946594, 0.8264430165290833, 0.8313300609588623, 0.8281601071357727, 0.8334434032440186, 0.839519202709198, 0.8367455005645752, 0.843481719493866, 0.8552370667457581, 0.8496896028518677, 0.8527275323867798, 0.8581429123878479, 0.858671247959137, 0.8569541573524475, 0.8532558679580688, 0.8632941246032715, 0.8648791313171387, 0.8661999702453613, 0.8683133125305176, 0.8722757697105408, 0.8779553771018982, 0.8709549307823181, 0.8765024542808533, 0.8824461698532104, 0.8790120482444763, 0.8850878477096558, 0.8802007436752319, 0.8856161832809448, 0.8845595121383667, 0.8873332738876343, 0.8894465565681458], "val_loss": [2.0413830280303955, 1.5172150135040283, 1.0435527563095093, 0.831889808177948, 0.7418982982635498, 0.6823017001152039, 0.6369895935058594, 0.6006233096122742, 0.5766393542289734, 0.5537018179893494, 0.5289885401725769, 0.5190175771713257, 0.5033494234085083, 0.48885855078697205, 0.4794333577156067, 0.477308988571167, 0.45441746711730957, 0.4537404775619507, 0.4422915577888489, 0.4372789263725281, 0.4271417260169983, 0.41733846068382263, 0.41654422879219055, 0.4090157151222229, 0.40650975704193115, 0.400319904088974, 0.3961951434612274, 0.3903762102127075, 0.39190420508384705, 0.3834100663661957, 0.3741222023963928, 0.37994274497032166, 0.3778409957885742, 0.3664207458496094, 0.36396101117134094, 0.36554044485092163, 0.3579214811325073, 0.3562394082546234, 0.3516705334186554, 0.34905239939689636, 0.3547612428665161, 0.3494042158126831, 0.34790176153182983, 0.3451874554157257, 0.34452393651008606, 0.34012356400489807, 0.33787792921066284, 0.3395804762840271, 0.3413597047328949, 0.3343392312526703], "val_accuracy": [0.5389999747276306, 0.6510000228881836, 0.6779999732971191, 0.7053333520889282, 0.7306666374206543, 0.75, 0.762333333492279, 0.7739999890327454, 0.7823333144187927, 0.793666660785675, 0.8080000281333923, 0.8023333549499512, 0.8113333582878113, 0.8223333358764648, 0.8270000219345093, 0.8186666369438171, 0.8389999866485596, 0.8399999737739563, 0.8443333506584167, 0.8386666774749756, 0.8460000157356262, 0.8586666584014893, 0.8533333539962769, 0.8586666584014893, 0.8550000190734863, 0.8573333621025085, 0.8646666407585144, 0.8606666922569275, 0.8539999723434448, 0.8656666874885559, 0.871666669845581, 0.8659999966621399, 0.8636666536331177, 0.8730000257492065, 0.871666669845581, 0.8676666617393494, 0.8726666569709778, 0.8763333559036255, 0.8776666522026062, 0.8793333172798157, 0.871999979019165, 0.8776666522026062, 0.8806666731834412, 0.8763333559036255, 0.8840000033378601, 0.8830000162124634, 0.8830000162124634, 0.8823333382606506, 0.8820000290870667, 0.8836666941642761]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 5], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8622857332229614, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294133424758911, 2.1931705474853516, 1.7803974151611328, 1.3736581802368164, 1.0765613317489624, 0.9488584995269775, 0.8433873057365417, 0.81172776222229, 0.7799386978149414, 0.7600147128105164, 0.7053003907203674, 0.6804560422897339, 0.6633498668670654, 0.6204407811164856, 0.6074399352073669, 0.5900750160217285, 0.5839860439300537, 0.5653953552246094, 0.5571624040603638, 0.5557964444160461, 0.5427272915840149, 0.5237357020378113, 0.5123007893562317, 0.5115635395050049, 0.5002189874649048, 0.49126997590065, 0.47011375427246094, 0.4738406240940094, 0.45943036675453186, 0.45222219824790955, 0.44263485074043274, 0.43836119771003723, 0.4321745038032532, 0.4189806878566742, 0.42699936032295227, 0.4208658039569855, 0.40169066190719604, 0.4040996730327606, 0.40092387795448303, 0.37244972586631775, 0.3700680732727051, 0.37082144618034363, 0.3700428009033203, 0.36701568961143494, 0.3511962294578552], "accuracy": [0.12891295552253723, 0.3249240517616272, 0.44010037183761597, 0.540219247341156, 0.6283186078071594, 0.6546030640602112, 0.6861709356307983, 0.6948884129524231, 0.7083608508110046, 0.700700044631958, 0.7323999404907227, 0.7375511527061462, 0.7449478507041931, 0.76542067527771, 0.7712323069572449, 0.7763835787773132, 0.7750627398490906, 0.7854973077774048, 0.7910447716712952, 0.7913089394569397, 0.7886672616004944, 0.7981772422790527, 0.8088759779930115, 0.8096684813499451, 0.8029322624206543, 0.8124422430992126, 0.8228767514228821, 0.8257825970649719, 0.8261788487434387, 0.8334434032440186, 0.8343679904937744, 0.8347642421722412, 0.8343679904937744, 0.8399154543876648, 0.8362171649932861, 0.8404437899589539, 0.8438779711723328, 0.8477083444595337, 0.8481045961380005, 0.8561616539955139, 0.8590674996376038, 0.8597279191017151, 0.8601241707801819, 0.8597279191017151, 0.8665962219238281], "val_loss": [2.247317314147949, 2.0243003368377686, 1.154122233390808, 0.8925070762634277, 0.7820835709571838, 0.732029139995575, 0.6964109539985657, 0.6713646650314331, 0.650743305683136, 0.6189576983451843, 0.5871676206588745, 0.5579596161842346, 0.5554878115653992, 0.5415852665901184, 0.5402871370315552, 0.5326947569847107, 0.5158392786979675, 0.5221115946769714, 0.522046685218811, 0.5071027278900146, 0.49809378385543823, 0.49442920088768005, 0.5115066170692444, 0.48966455459594727, 0.47592130303382874, 0.4722374677658081, 0.4832022190093994, 0.47131863236427307, 0.4513009786605835, 0.449891597032547, 0.43669673800468445, 0.4382086992263794, 0.43811121582984924, 0.4469793438911438, 0.44953805208206177, 0.43532508611679077, 0.43319401144981384, 0.4441050589084625, 0.4392872452735901, 0.42543911933898926, 0.4179806709289551, 0.4196734130382538, 0.4280535578727722, 0.44272395968437195, 0.45140770077705383], "val_accuracy": [0.437333345413208, 0.4690000116825104, 0.6423333287239075, 0.6886666417121887, 0.718999981880188, 0.737333357334137, 0.7440000176429749, 0.7506666779518127, 0.7593333125114441, 0.7733333110809326, 0.7713333368301392, 0.7919999957084656, 0.7976666688919067, 0.7976666688919067, 0.7979999780654907, 0.796999990940094, 0.8083333373069763, 0.8063333630561829, 0.8036666512489319, 0.8103333115577698, 0.8159999847412109, 0.8243333101272583, 0.8220000267028809, 0.828000009059906, 0.8259999752044678, 0.8306666612625122, 0.8353333473205566, 0.8379999995231628, 0.8423333168029785, 0.8433333039283752, 0.8453333377838135, 0.8429999947547913, 0.8503333330154419, 0.8513333201408386, 0.8496666550636292, 0.8533333539962769, 0.8560000061988831, 0.859333336353302, 0.8579999804496765, 0.8610000014305115, 0.8573333621025085, 0.8550000190734863, 0.8586666584014893, 0.8579999804496765, 0.8550000190734863]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 5, 0, 3, 5], [0, 2, 2, 3], [55, 61], [0, 1], [9], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 4, 1, 4, 0, 5, 2, 2], [1, 0, 0, 3, 0, 2, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8602856993675232, "mapping_values": [1, 9, 5, 4, 2, 6, 4, 2, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.1116154193878174, 1.187662959098816, 0.8138481378555298, 0.6917279362678528, 0.617900013923645, 0.5797257423400879, 0.5371949076652527, 0.5045177936553955, 0.4821711778640747, 0.46532824635505676, 0.4472322463989258, 0.43161308765411377, 0.4131915271282196, 0.3980426490306854, 0.3785656690597534, 0.3729873299598694, 0.3647155463695526, 0.3471319079399109, 0.3354354202747345, 0.33442726731300354], "accuracy": [0.29097872972488403, 0.5904107689857483, 0.6950204968452454, 0.7346453666687012, 0.7642319202423096, 0.7800818681716919, 0.8013472557067871, 0.8121780753135681, 0.8210275769233704, 0.8257825970649719, 0.8341038227081299, 0.8368775844573975, 0.8471800088882446, 0.8574824929237366, 0.8595958352088928, 0.863029956817627, 0.8676528930664062, 0.8683133125305176, 0.8728041052818298, 0.8737286925315857], "val_loss": [1.0923603773117065, 0.7326692938804626, 0.6489112377166748, 0.5699571967124939, 0.5247710943222046, 0.4888622760772705, 0.4652027189731598, 0.4605722725391388, 0.4464868903160095, 0.42855599522590637, 0.4301304519176483, 0.405547171831131, 0.4049600064754486, 0.39000287652015686, 0.3936179280281067, 0.39717617630958557, 0.3930789530277252, 0.38080355525016785, 0.37672412395477295, 0.38167479634284973], "val_accuracy": [0.6293333172798157, 0.7229999899864197, 0.7493333220481873, 0.7770000100135803, 0.7923333048820496, 0.8216666579246521, 0.8386666774749756, 0.8346666693687439, 0.8416666388511658, 0.8516666889190674, 0.8399999737739563, 0.8616666793823242, 0.8533333539962769, 0.8690000176429749, 0.871999979019165, 0.8633333444595337, 0.8640000224113464, 0.8673333525657654, 0.8703333139419556, 0.8686666488647461]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 1], [0, 6, 0], [0, 1], [0], [1], [0], [2], [0]], "fitness": -0.8317142724990845, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5462594032287598, 0.8186328411102295, 0.6587013602256775, 0.6003456115722656, 0.5579224228858948, 0.5510556101799011, 0.5190295577049255, 0.5017930269241333, 0.4960889220237732, 0.4976016879081726, 0.510778546333313, 0.5500892400741577, 0.5510457754135132, 0.5686535239219666], "accuracy": [0.4745740294456482, 0.7108704447746277, 0.7621186375617981, 0.7829877138137817, 0.7895918488502502, 0.8021397590637207, 0.8121780753135681, 0.8222163319587708, 0.8239334225654602, 0.828820526599884, 0.8189142942428589, 0.8171972036361694, 0.8128384351730347, 0.8082155585289001], "val_loss": [0.8183814883232117, 0.6377537846565247, 0.540665328502655, 0.5044739842414856, 0.5025870203971863, 0.5397460460662842, 0.496162474155426, 0.5346850752830505, 0.4926174283027649, 0.5416533946990967, 0.5353895425796509, 0.5448275804519653, 0.5304465889930725, 0.5975232124328613], "val_accuracy": [0.722000002861023, 0.7776666879653931, 0.8086666464805603, 0.8153333067893982, 0.8209999799728394, 0.8209999799728394, 0.8253333568572998, 0.8379999995231628, 0.8386666774749756, 0.8349999785423279, 0.8289999961853027, 0.8306666612625122, 0.82833331823349, 0.8220000267028809]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 26], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [6, 2, 3, 2, 3, 6, 9], [0, 2, 0, 3, 0, 1], [63, 16, 20, 15], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 7, 2, 5, 3, 1, 9, 2, 1, 4, 7, 1, 3, 5, 3, 0, 0, 2, 5, 7, 4, 9, 9, 3], [4, 1, 4, 1, 4, 0, 2, 6, 2, 6, 3, 2, 1, 7], [99, 63, 19, 99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 3, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 9, 96, 88, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 13, 7, 6, 4, 39, 25, 14, 4, 21, 11, 10, 6], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), alpha), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.math.square(tf.math.multiply(grad, alpha)), grad), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(alpha, grad), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(tf.math.subtract(tf.math.multiply(beta, tf.math.square(tf.math.multiply(grad, beta))), tf.math.negative(grad)), tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.pow(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma)), beta))), tf.math.multiply(alpha, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 9], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5], [0, 2, 0, 3, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 2, 9, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 9, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 11, 6, 5, 2, 2, 1, 1, 0, 16, 9, 7, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), sigma), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 6], [0, 1, 0, 2], [1, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 1, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 0, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09057142585515976, "mapping_values": [1, 9, 5, 4, 2, 5, 3, 2, 1, 2, 1, 1, 1, 10, 5, 5, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(sigma, tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3102221488952637, 2.308687210083008, 2.3091723918914795, 2.3093771934509277, 2.3095602989196777, 2.309180974960327, 2.3097729682922363], "accuracy": [0.08902391046285629, 0.09576013684272766, 0.0940430611371994, 0.09615638852119446, 0.09391097724437714, 0.09074098616838455, 0.09272222965955734], "val_loss": [2.308286190032959, 2.308134078979492, 2.308042526245117, 2.3079769611358643, 2.3079264163970947, 2.30788516998291, 2.3078503608703613], "val_accuracy": [0.09000000357627869, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]