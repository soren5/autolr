[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8700000047683716, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222557783126831, 1.8589941263198853, 1.368308663368225, 1.0732219219207764, 0.9169390201568604, 0.823807418346405, 0.7486013174057007, 0.7059555053710938, 0.6661861538887024, 0.6466628313064575, 0.6187012195587158, 0.6012243032455444, 0.5806113481521606, 0.5598390698432922, 0.549433708190918, 0.5332087874412537, 0.5190650224685669, 0.50861656665802, 0.48879390954971313, 0.4857892394065857, 0.4693344533443451, 0.46324047446250916, 0.44882258772850037, 0.44721993803977966, 0.44394993782043457, 0.4359044134616852, 0.42767763137817383, 0.4146454632282257, 0.40721872448921204, 0.40239790081977844, 0.39261582493782043, 0.3902496099472046, 0.38001689314842224, 0.37580254673957825, 0.3719310462474823, 0.3636005222797394, 0.3656192123889923, 0.3577554225921631, 0.3573533296585083, 0.34561556577682495, 0.3352644741535187, 0.32973337173461914, 0.33495888113975525, 0.32723090052604675, 0.3234245777130127, 0.3206033706665039, 0.3129650354385376, 0.3037564754486084, 0.3024013936519623, 0.29532214999198914, 0.2932247519493103, 0.28261804580688477, 0.28804004192352295], "accuracy": [0.2716946303844452, 0.4912164807319641, 0.5744287371635437, 0.6299035549163818, 0.6741513609886169, 0.7005679607391357, 0.7310791015625, 0.7412495017051697, 0.752740740776062, 0.7611940503120422, 0.7709681391716003, 0.78113853931427, 0.7911768555641174, 0.802800178527832, 0.8030643463134766, 0.8096684813499451, 0.8109893202781677, 0.8127063512802124, 0.826310932636261, 0.826310932636261, 0.8321225643157959, 0.8318583965301514, 0.8370096683502197, 0.8396512866020203, 0.8407079577445984, 0.8408400416374207, 0.8459912538528442, 0.8490291833877563, 0.8529917001724243, 0.8574824929237366, 0.8581429123878479, 0.8613129258155823, 0.8622375130653381, 0.8618412613868713, 0.8676528930664062, 0.8650112152099609, 0.8672566413879395, 0.8713511824607849, 0.8698983192443848, 0.876370370388031, 0.8786157965660095, 0.8796724081039429, 0.8791441321372986, 0.8816536664962769, 0.8844274282455444, 0.8853520154953003, 0.8845595121383667, 0.8943336606025696, 0.8922203183174133, 0.8905032277107239, 0.8957865834236145, 0.8944657444953918, 0.8938053250312805], "val_loss": [2.038835048675537, 1.5075469017028809, 1.0391695499420166, 0.8412295579910278, 0.7564391493797302, 0.7030672430992126, 0.6610625982284546, 0.6278497576713562, 0.6093478202819824, 0.5839001536369324, 0.5665292739868164, 0.5512700080871582, 0.5397608876228333, 0.5265726447105408, 0.5171334743499756, 0.5071759223937988, 0.49562162160873413, 0.4895135164260864, 0.476197749376297, 0.4724183678627014, 0.4648300111293793, 0.46073147654533386, 0.4622596502304077, 0.45177099108695984, 0.451518714427948, 0.43847379088401794, 0.4370940029621124, 0.4407201409339905, 0.4272727072238922, 0.4258197844028473, 0.42226117849349976, 0.4162476360797882, 0.4150802493095398, 0.41499170660972595, 0.4076835811138153, 0.40720075368881226, 0.40089738368988037, 0.4019153118133545, 0.39886754751205444, 0.3981802463531494, 0.39584654569625854, 0.3928392827510834, 0.39518213272094727, 0.3902900815010071, 0.3897343873977661, 0.3886895775794983, 0.3854714035987854, 0.3883967399597168, 0.38330158591270447, 0.3844500780105591, 0.3849644064903259, 0.3882571756839752, 0.38090628385543823], "val_accuracy": [0.5410000085830688, 0.6553333401679993, 0.6769999861717224, 0.7020000219345093, 0.7260000109672546, 0.7419999837875366, 0.7556666731834412, 0.768666684627533, 0.7753333449363708, 0.7839999794960022, 0.7863333225250244, 0.793666660785675, 0.7986666560173035, 0.8019999861717224, 0.8086666464805603, 0.8153333067893982, 0.8173333406448364, 0.8226666450500488, 0.8266666531562805, 0.8246666789054871, 0.831333339214325, 0.8323333263397217, 0.8323333263397217, 0.8363333344459534, 0.8389999866485596, 0.8376666903495789, 0.8423333168029785, 0.8363333344459534, 0.843666672706604, 0.8420000076293945, 0.840666651725769, 0.8443333506584167, 0.8486666679382324, 0.8483333587646484, 0.8486666679382324, 0.8483333587646484, 0.8486666679382324, 0.8496666550636292, 0.8489999771118164, 0.8493333458900452, 0.8523333072662354, 0.8483333587646484, 0.8529999852180481, 0.8536666631698608, 0.8543333411216736, 0.856333315372467, 0.8579999804496765, 0.859333336353302, 0.859000027179718, 0.8579999804496765, 0.8576666712760925, 0.8569999933242798, 0.859000027179718]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8468571305274963, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292515277862549, 2.18886399269104, 1.7647204399108887, 1.347350835800171, 1.0394829511642456, 0.9089224934577942, 0.8454830050468445, 0.7882151007652283, 0.7653201222419739, 0.7334365248680115, 0.6953125596046448, 0.6725984215736389, 0.6544780731201172, 0.6264671683311462, 0.6048012375831604, 0.5784708261489868, 0.5727673768997192, 0.5579591393470764, 0.5518606305122375, 0.5476253628730774, 0.533209502696991, 0.5255737900733948, 0.5158179998397827, 0.5087078213691711, 0.49822962284088135, 0.47523924708366394, 0.47559139132499695, 0.4544335901737213, 0.4428345561027527, 0.4396277368068695, 0.42408841848373413, 0.4221936762332916, 0.41602954268455505, 0.4038991332054138, 0.39615732431411743, 0.3942403495311737, 0.38004592061042786, 0.3888504207134247], "accuracy": [0.1278562992811203, 0.3209615647792816, 0.433760404586792, 0.5429930090904236, 0.6390172839164734, 0.6536785364151001, 0.6824725866317749, 0.7080966830253601, 0.7086250185966492, 0.715889573097229, 0.7353057861328125, 0.7428345084190369, 0.7541936039924622, 0.7532690763473511, 0.7667415142059326, 0.7766477465629578, 0.776251494884491, 0.7864218950271606, 0.7882710099220276, 0.7861577272415161, 0.7940827012062073, 0.7989697456359863, 0.7972526550292969, 0.8039889335632324, 0.8083476424217224, 0.8170651197433472, 0.8178576231002808, 0.8267071843147278, 0.8296129703521729, 0.8289526104927063, 0.832650899887085, 0.8362171649932861, 0.8418967127799988, 0.8429533839225769, 0.8504821062088013, 0.8471800088882446, 0.8553691506385803, 0.8499537706375122], "val_loss": [2.2458529472351074, 2.0134973526000977, 1.12519109249115, 0.8751775026321411, 0.7562363147735596, 0.719072163105011, 0.6687289476394653, 0.6572314500808716, 0.6255702376365662, 0.6230883002281189, 0.5772985219955444, 0.5695756673812866, 0.5496485233306885, 0.532058835029602, 0.5131174921989441, 0.4987819492816925, 0.4966255724430084, 0.49913105368614197, 0.49457600712776184, 0.48445963859558105, 0.48276659846305847, 0.4714202582836151, 0.4615456163883209, 0.4583030939102173, 0.4476528763771057, 0.4424069821834564, 0.43947386741638184, 0.4347074329853058, 0.42315447330474854, 0.42000511288642883, 0.42472729086875916, 0.4134661555290222, 0.41011059284210205, 0.4057981073856354, 0.41853591799736023, 0.41148364543914795, 0.4161508083343506, 0.41775259375572205], "val_accuracy": [0.41600000858306885, 0.45500001311302185, 0.6613333225250244, 0.703000009059906, 0.7226666808128357, 0.7289999723434448, 0.7406666874885559, 0.7583333253860474, 0.7683333158493042, 0.7723333239555359, 0.7816666960716248, 0.7829999923706055, 0.7793333530426025, 0.7873333096504211, 0.796999990940094, 0.8130000233650208, 0.8133333325386047, 0.8033333420753479, 0.812333345413208, 0.8146666884422302, 0.8136666417121887, 0.8246666789054871, 0.8220000267028809, 0.8276666402816772, 0.8289999961853027, 0.8420000076293945, 0.8493333458900452, 0.8546666502952576, 0.8600000143051147, 0.8586666584014893, 0.8556666374206543, 0.8586666584014893, 0.8650000095367432, 0.8603333234786987, 0.8539999723434448, 0.8583333492279053, 0.8610000014305115, 0.856333315372467]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 7, 8, 5, 6], [0, 2, 7, 6, 5], [0], [1], [0], [2], [0]], "fitness": -0.8337143063545227, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), tf.math.sqrt(grad)), tf.math.square(tf.math.divide_no_nan(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5794875621795654, 0.9041987657546997, 0.7350981831550598, 0.6652790307998657, 0.6086153984069824, 0.5771278142929077, 0.538228452205658, 0.5240512490272522, 0.4896453022956848, 0.4750767946243286, 0.47856956720352173, 0.47402888536453247, 0.462553471326828, 0.4924219250679016, 0.5010061860084534, 0.5261202454566956, 0.531383216381073, 0.5666223764419556, 0.5714825391769409], "accuracy": [0.4571390748023987, 0.6893408894538879, 0.7326641082763672, 0.7430986762046814, 0.7736098170280457, 0.7873464822769165, 0.7972526550292969, 0.8068947196006775, 0.8146876096725464, 0.8189142942428589, 0.8220842480659485, 0.835160493850708, 0.8285563588142395, 0.829216718673706, 0.8449346423149109, 0.8313300609588623, 0.8236692547798157, 0.8158763647079468, 0.8045172095298767], "val_loss": [0.790999174118042, 0.6626627445220947, 0.5834122896194458, 0.5564582347869873, 0.5321887135505676, 0.5326033234596252, 0.5311192274093628, 0.4988452196121216, 0.5142995715141296, 0.5266968607902527, 0.5770703554153442, 0.5829620957374573, 0.5471002459526062, 0.5825337767601013, 0.5803807377815247, 0.574574887752533, 0.6255109906196594, 0.7167239785194397, 0.6336531639099121], "val_accuracy": [0.7036666870117188, 0.7613333463668823, 0.7763333320617676, 0.7873333096504211, 0.809333324432373, 0.8183333277702332, 0.812666654586792, 0.8379999995231628, 0.8343333601951599, 0.8296666741371155, 0.8413333296775818, 0.8386666774749756, 0.8263333439826965, 0.8526666760444641, 0.8396666646003723, 0.8429999947547913, 0.8286666870117188, 0.840666651725769, 0.8360000252723694]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [1, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [8], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 3, 6, 8, 1, 6, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 2, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 2, 1, 1, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, beta)))", "other_info": {"loss": [2.303499460220337, 2.3025853633880615, 2.3025834560394287, 2.302584171295166, 2.3025856018066406, 2.302589178085327], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025848865509033, 2.3025848865509033, 2.302584409713745, 2.3025827407836914, 2.302582263946533, 2.302584648132324], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 8], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [92], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 6, 8, 6, 8, 1, 4, 1, 4, 2, 1], [0, 3, 0, 3, 0, 0, 3, 1, 2, 0], [39, 99, 98, 99, 61, 6]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(sigma, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 2, 4, 3, 5], [0, 2, 0, 3, 0], [86, 16, 44], [0, 0, 1], [0, 0], [0], [99], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 1, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 11, 6, 5, 3, 3, 2, 1, 1, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.pow(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3040595054626465, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 1, 4, 1, 3, 9], [1, 0, 0, 2, 0], [83, 99, 27, 82], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9], [0], [16, 16], [0, 1], [0], [0, 1, 4, 5], [6], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 7, 2, 4, 3, 4, 9], [1, 7, 1, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 4, 2, 2, 0, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.pow(tf.math.subtract(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]