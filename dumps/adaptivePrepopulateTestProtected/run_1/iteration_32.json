[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223330497741699, 1.8670156002044678, 1.3935511112213135, 1.1012579202651978, 0.9477801322937012, 0.8379126191139221, 0.7764281630516052, 0.7235901951789856, 0.6839449405670166, 0.6511124968528748, 0.6340097188949585, 0.6069210171699524, 0.5817078948020935, 0.5635776519775391, 0.5524153113365173, 0.5367791652679443, 0.5212588906288147, 0.5178380608558655, 0.5019086003303528, 0.4879888892173767, 0.4858485460281372, 0.4747111201286316, 0.45951735973358154, 0.4532293975353241, 0.4492609202861786, 0.4330301284790039, 0.4310648441314697, 0.42051371932029724, 0.41327017545700073, 0.4060419201850891, 0.3997148871421814, 0.39729252457618713, 0.3869434893131256, 0.3869549036026001, 0.38186177611351013, 0.3692651391029358, 0.36346086859703064, 0.3634459972381592, 0.3600703179836273, 0.3489670753479004, 0.3429599404335022, 0.34309908747673035, 0.3401198089122772, 0.3303268253803253, 0.3301240801811218, 0.3276282846927643, 0.3180643618106842, 0.3136589229106903, 0.3090694546699524, 0.3071834146976471, 0.3011736273765564, 0.30332496762275696, 0.29351481795310974, 0.2937680780887604], "accuracy": [0.26680755615234375, 0.49451854825019836, 0.5679566860198975, 0.6209219098091125, 0.6646413803100586, 0.7078325152397156, 0.7234182953834534, 0.7387399077415466, 0.7541936039924622, 0.7672698497772217, 0.7677981853485107, 0.7820631265640259, 0.7897239327430725, 0.7977809906005859, 0.798309326171875, 0.8082155585289001, 0.8138951063156128, 0.8094043135643005, 0.822348415851593, 0.8269713521003723, 0.8208954930305481, 0.8310658931732178, 0.8350284099578857, 0.8367455005645752, 0.8368775844573975, 0.8444063067436218, 0.843481719493866, 0.850350022315979, 0.8502179384231567, 0.8570862412452698, 0.857218325138092, 0.8574824929237366, 0.8610487580299377, 0.8610487580299377, 0.8607845902442932, 0.8658037185668945, 0.8701624870300293, 0.8689737319946289, 0.8708229064941406, 0.8792761564254761, 0.8798044919967651, 0.8765024542808533, 0.8765024542808533, 0.8824461698532104, 0.880729079246521, 0.8844274282455444, 0.8838990926742554, 0.8887861371040344, 0.8878615498542786, 0.8903711438179016, 0.8924844861030579, 0.8912957310676575, 0.8976356983184814, 0.8960506916046143], "val_loss": [2.040694236755371, 1.5166728496551514, 1.045767068862915, 0.8421168327331543, 0.7569165229797363, 0.7011509537696838, 0.6573318839073181, 0.6179470419883728, 0.5908101201057434, 0.5737177133560181, 0.5541383624076843, 0.5365487933158875, 0.518412172794342, 0.5104728937149048, 0.49868762493133545, 0.485697478055954, 0.48461878299713135, 0.46694132685661316, 0.459992378950119, 0.44818419218063354, 0.45110249519348145, 0.4507465958595276, 0.4339507520198822, 0.4287099242210388, 0.42590731382369995, 0.4119842052459717, 0.4104468524456024, 0.4069807529449463, 0.40372517704963684, 0.3985708951950073, 0.3967111110687256, 0.39305025339126587, 0.39346253871917725, 0.3906964063644409, 0.3815464675426483, 0.3792845904827118, 0.37928369641304016, 0.3762374818325043, 0.37582898139953613, 0.37387406826019287, 0.3717586398124695, 0.36671704053878784, 0.363382488489151, 0.36401286721229553, 0.3619881868362427, 0.35666540265083313, 0.3588123917579651, 0.3541429042816162, 0.35232576727867126, 0.35342442989349365, 0.3524846136569977, 0.34847813844680786, 0.34814298152923584, 0.35015836358070374], "val_accuracy": [0.5323333144187927, 0.6446666717529297, 0.6756666898727417, 0.7043333053588867, 0.7239999771118164, 0.7493333220481873, 0.753000020980835, 0.7706666588783264, 0.7820000052452087, 0.7873333096504211, 0.7956666946411133, 0.800000011920929, 0.8136666417121887, 0.812666654586792, 0.8199999928474426, 0.824999988079071, 0.8246666789054871, 0.8326666951179504, 0.8303333520889282, 0.8376666903495789, 0.8333333134651184, 0.8343333601951599, 0.8446666598320007, 0.843666672706604, 0.846666693687439, 0.8513333201408386, 0.8546666502952576, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8529999852180481, 0.859333336353302, 0.8546666502952576, 0.8569999933242798, 0.8606666922569275, 0.8633333444595337, 0.8643333315849304, 0.8629999756813049, 0.8576666712760925, 0.8703333139419556, 0.8640000224113464, 0.8643333315849304, 0.8676666617393494, 0.8663333058357239, 0.8713333606719971, 0.871999979019165, 0.8693333268165588, 0.8693333268165588, 0.878000020980835, 0.8756666779518127, 0.8706666827201843, 0.8756666779518127, 0.8769999742507935, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8614285588264465, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224609136581421, 1.8780664205551147, 1.408972144126892, 1.1176965236663818, 0.965401291847229, 0.8560882210731506, 0.7836978435516357, 0.7423611879348755, 0.7045226693153381, 0.6694841384887695, 0.6472983360290527, 0.6213445067405701, 0.6021168828010559, 0.5834991335868835, 0.553683876991272, 0.5586636662483215, 0.5408697724342346, 0.5253649950027466, 0.5111024975776672, 0.5058971643447876, 0.49266180396080017, 0.48548099398612976, 0.4666133224964142, 0.45687952637672424, 0.4633459448814392, 0.4425733685493469, 0.4438127279281616, 0.4335784614086151, 0.4293459951877594, 0.4238172769546509, 0.4152372181415558, 0.4051479995250702, 0.4018627107143402, 0.38909631967544556, 0.39078471064567566, 0.38159656524658203, 0.3808819055557251, 0.37173283100128174, 0.36388590931892395, 0.3571241796016693, 0.35203200578689575, 0.349886029958725, 0.3412671983242035, 0.3291347324848175, 0.3356322646141052, 0.32762205600738525, 0.32637524604797363, 0.3207932710647583, 0.3173883259296417, 0.31156349182128906, 0.30245140194892883, 0.3033318519592285, 0.2993406057357788, 0.2920609414577484, 0.28315818309783936, 0.29356667399406433], "accuracy": [0.26443007588386536, 0.47906485199928284, 0.5674283504486084, 0.6159027814865112, 0.6556597352027893, 0.7012283802032471, 0.7223616242408752, 0.7357020378112793, 0.7395324110984802, 0.7592127919197083, 0.7671377658843994, 0.7751948237419128, 0.7837802171707153, 0.7874785661697388, 0.8004226684570312, 0.796328067779541, 0.8104609847068787, 0.8096684813499451, 0.8204993009567261, 0.821820080280304, 0.8241975903511047, 0.8271034359931946, 0.8384625315666199, 0.8416325449943542, 0.8359529972076416, 0.841500461101532, 0.8421608805656433, 0.8445383906364441, 0.8446704745292664, 0.8459912538528442, 0.8499537706375122, 0.8568220734596252, 0.8541803956031799, 0.8610487580299377, 0.8589354157447815, 0.8621054291725159, 0.8651432991027832, 0.869502067565918, 0.8708229064941406, 0.8717474341392517, 0.8758420348167419, 0.8753136992454529, 0.8739928603172302, 0.8813894987106323, 0.8805969953536987, 0.8857482671737671, 0.8817857503890991, 0.8828424215316772, 0.883238673210144, 0.8882578015327454, 0.8927486538887024, 0.894069492816925, 0.8936732411384583, 0.8905032277107239, 0.8969752788543701, 0.8949940800666809], "val_loss": [2.0415091514587402, 1.5297099351882935, 1.0522812604904175, 0.8414750099182129, 0.7609881162643433, 0.6842796206474304, 0.6390843391418457, 0.6032015085220337, 0.5754948854446411, 0.5505626797676086, 0.5340456366539001, 0.5194523334503174, 0.5056682825088501, 0.4942589998245239, 0.4808512330055237, 0.47717538475990295, 0.47333964705467224, 0.45689529180526733, 0.44658276438713074, 0.4455223083496094, 0.4355262815952301, 0.43110987544059753, 0.4253804385662079, 0.4190419912338257, 0.4169323742389679, 0.41743090748786926, 0.4195253551006317, 0.40577757358551025, 0.39981400966644287, 0.39507389068603516, 0.3953031897544861, 0.39505359530448914, 0.3847414553165436, 0.38248828053474426, 0.38315463066101074, 0.38292333483695984, 0.3832556903362274, 0.3804331123828888, 0.3731125593185425, 0.3726437985897064, 0.37444400787353516, 0.3721027970314026, 0.3672800362110138, 0.3671499788761139, 0.3641223907470703, 0.3627230226993561, 0.3571397364139557, 0.3599201738834381, 0.3593255281448364, 0.351869136095047, 0.3523291051387787, 0.34984415769577026, 0.3534306585788727, 0.3524976372718811, 0.3480018675327301, 0.3482678532600403], "val_accuracy": [0.5473333597183228, 0.6439999938011169, 0.6816666722297668, 0.7009999752044678, 0.7293333411216736, 0.750333309173584, 0.7639999985694885, 0.7730000019073486, 0.781333327293396, 0.7913333177566528, 0.800000011920929, 0.809333324432373, 0.8106666803359985, 0.812666654586792, 0.8176666498184204, 0.8193333148956299, 0.8180000185966492, 0.8266666531562805, 0.8379999995231628, 0.8356666564941406, 0.8429999947547913, 0.8413333296775818, 0.8433333039283752, 0.8433333039283752, 0.843999981880188, 0.8426666855812073, 0.8426666855812073, 0.8506666421890259, 0.8513333201408386, 0.8536666631698608, 0.8529999852180481, 0.8553333282470703, 0.859666645526886, 0.8576666712760925, 0.859333336353302, 0.8610000014305115, 0.8566666841506958, 0.8613333106040955, 0.8619999885559082, 0.8613333106040955, 0.8603333234786987, 0.8576666712760925, 0.8640000224113464, 0.8603333234786987, 0.8606666922569275, 0.8643333315849304, 0.8646666407585144, 0.8646666407585144, 0.8653333187103271, 0.8643333315849304, 0.8706666827201843, 0.8673333525657654, 0.8669999837875366, 0.8676666617393494, 0.8679999709129333, 0.8679999709129333]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 0], [0], [0], [0, 0], [0, 9], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8448571562767029, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292961597442627, 2.1847915649414062, 1.7500662803649902, 1.3381894826889038, 1.0541150569915771, 0.9007948637008667, 0.8433387875556946, 0.814318060874939, 0.7472901940345764, 0.7216594219207764, 0.6839709877967834, 0.6630350947380066, 0.6385960578918457, 0.6056204438209534, 0.5852552652359009, 0.5708850622177124, 0.5641898512840271, 0.5504896640777588, 0.5344184041023254, 0.5299215912818909, 0.5166661143302917, 0.5164936780929565, 0.5015732645988464, 0.48828285932540894, 0.4911307096481323, 0.48298799991607666, 0.4758823812007904, 0.46179506182670593, 0.4547361433506012, 0.4396706819534302, 0.42849287390708923, 0.429532527923584, 0.43154504895210266, 0.41654205322265625, 0.4097306430339813, 0.40379923582077026, 0.3964303731918335, 0.38136300444602966, 0.38536006212234497, 0.38589757680892944, 0.3663410544395447, 0.3647726774215698, 0.38860201835632324, 0.3664192259311676, 0.3539353907108307, 0.35403183102607727], "accuracy": [0.12996962666511536, 0.3345661163330078, 0.4497424364089966, 0.5523709058761597, 0.6387531161308289, 0.6675472259521484, 0.6934354901313782, 0.7009642124176025, 0.7091533541679382, 0.726192057132721, 0.737022876739502, 0.7446836829185486, 0.7535332441329956, 0.7688548564910889, 0.776251494884491, 0.7777044177055359, 0.785101056098938, 0.7860256433486938, 0.793422281742096, 0.789988100528717, 0.8033285140991211, 0.8020076751708984, 0.8068947196006775, 0.8121780753135681, 0.8146876096725464, 0.8149517774581909, 0.8182538747787476, 0.8215559124946594, 0.8191784620285034, 0.8310658931732178, 0.8319904804229736, 0.8337075710296631, 0.8355567455291748, 0.8355567455291748, 0.8422929644584656, 0.8510104417800903, 0.8479725122451782, 0.8539162874221802, 0.8514066934585571, 0.8524633646011353, 0.8597279191017151, 0.86553955078125, 0.8602562546730042, 0.8613129258155823, 0.8598600029945374, 0.8648791313171387], "val_loss": [2.245037317276001, 2.0061862468719482, 1.0984702110290527, 0.8346758484840393, 0.7399188876152039, 0.6790282130241394, 0.6492289900779724, 0.6206121444702148, 0.6025980710983276, 0.5695592164993286, 0.5482816696166992, 0.5399580597877502, 0.5151142477989197, 0.5073073506355286, 0.5028845071792603, 0.49579158425331116, 0.49132588505744934, 0.48196175694465637, 0.47683337330818176, 0.4762395918369293, 0.4736616909503937, 0.46838030219078064, 0.46783924102783203, 0.45899149775505066, 0.4505627453327179, 0.4518688917160034, 0.44548338651657104, 0.433194100856781, 0.42523786425590515, 0.4294132590293884, 0.4342709183692932, 0.41739127039909363, 0.410565584897995, 0.4170049726963043, 0.4183824956417084, 0.417008638381958, 0.39214766025543213, 0.38751620054244995, 0.40518730878829956, 0.39589542150497437, 0.39996859431266785, 0.41466814279556274, 0.39741063117980957, 0.39414268732070923, 0.3983913064002991, 0.3875190317630768], "val_accuracy": [0.3943333327770233, 0.4716666638851166, 0.6626666784286499, 0.7016666531562805, 0.7260000109672546, 0.7400000095367432, 0.7506666779518127, 0.7666666507720947, 0.7649999856948853, 0.7799999713897705, 0.7826666831970215, 0.7896666526794434, 0.800000011920929, 0.8013333082199097, 0.8053333163261414, 0.8036666512489319, 0.8136666417121887, 0.8166666626930237, 0.8209999799728394, 0.8216666579246521, 0.8236666917800903, 0.8270000219345093, 0.8253333568572998, 0.8253333568572998, 0.8339999914169312, 0.8303333520889282, 0.8333333134651184, 0.8496666550636292, 0.8463333249092102, 0.8453333377838135, 0.8500000238418579, 0.8550000190734863, 0.8526666760444641, 0.847000002861023, 0.8510000109672546, 0.8516666889190674, 0.8569999933242798, 0.859666645526886, 0.8606666922569275, 0.8629999756813049, 0.8673333525657654, 0.8646666407585144, 0.8633333444595337, 0.8610000014305115, 0.8579999804496765, 0.8640000224113464]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 2, 2, 0, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8208571672439575, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.551721453666687, 0.8908445239067078, 0.726076602935791, 0.6528463959693909, 0.6154974699020386, 0.5554941892623901, 0.5441086292266846, 0.5160412788391113, 0.5081218481063843, 0.5125327110290527, 0.5428017377853394, 0.5221360921859741, 0.5583575963973999, 0.685852587223053, 0.7094622254371643], "accuracy": [0.47364944219589233, 0.7016246318817139, 0.7331924438476562, 0.750759482383728, 0.7744023203849792, 0.7960638999938965, 0.8050455451011658, 0.8125742673873901, 0.8175934553146362, 0.8137630224227905, 0.8156121969223022, 0.8195747137069702, 0.8166688680648804, 0.7836481332778931, 0.787082314491272], "val_loss": [0.8630402088165283, 0.6393762826919556, 0.5662826299667358, 0.5529718995094299, 0.5054649114608765, 0.5101203918457031, 0.5180298089981079, 0.5249589681625366, 0.5007389783859253, 0.532762885093689, 0.592245876789093, 0.5754866003990173, 0.6429706811904907, 0.650691568851471, 0.6238691210746765], "val_accuracy": [0.7099999785423279, 0.7743333578109741, 0.7990000247955322, 0.8076666593551636, 0.8226666450500488, 0.8309999704360962, 0.8259999752044678, 0.8193333148956299, 0.8296666741371155, 0.8339999914169312, 0.8163333535194397, 0.8276666402816772, 0.8233333230018616, 0.8223333358764648, 0.8203333616256714]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 4, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [0, 92, 16, 0], [0, 0, 1, 0, 0, 1, 1, 1], [0, 4, 1, 0], [0, 5, 2], [0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 4, 8, 7, 7, 9], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [0, 94, 93, 99]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 7, 4, 3, 2, 7, 4, 3, 1, 4, 2, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(beta), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.negative(grad), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1150404992.0, 21386000384.0, 99938656256.0, 278950182912.0, 602878312448.0, 1085720166400.0], "accuracy": [0.09655263274908066, 0.1002509593963623, 0.10289261490106583, 0.10249637067317963, 0.09985470771789551, 0.108440101146698], "val_loss": [5201143808.0, 41603866624.0, 140408438784.0, 332810518528.0, 650013966336.0, 1123201187840.0], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5, 2, 3], [3, 2, 0, 3, 3, 3, 1], [16, 16], [0, 1], [5], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [2, 0, 0, 1, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 15, 8, 7, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.math.multiply(tf.math.square(beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad)))), grad), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 2], [0, 2, 3, 3, 0], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [5, 3, 3, 6, 9, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 64, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 11, 6, 5, 2, 2, 1, 1, 0, 16, 9, 7, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), tf.math.subtract(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma))))", "other_info": {"loss": [817291.875, 5847666655232.0, 3.5687935220213875e+19, 2.909508466274702e+26, 1.6943222637609317e+33, NaN], "accuracy": [0.09985470771789551, 0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [65992540.0, 441066935287808.0, 3.151325440833164e+21, 2.054595639569042e+28, Infinity, NaN], "val_accuracy": [0.10366666316986084, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 0, 2, 0, 3, 1, 0], [52, 97, 16, 0], [0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 2, 6], [0, 7, 3, 7], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 8, 4, 2, 2], [0, 0, 0, 3, 2, 0, 3, 4, 2, 4], [31, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 9, 5, 4, 3, 8, 4, 4, 1, 17, 9, 8, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(grad, sigma), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma), beta), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10368511080741882, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]