[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8634285926818848, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2241899967193604, 1.8685200214385986, 1.3886504173278809, 1.0931203365325928, 0.9369062185287476, 0.838294506072998, 0.7690702080726624, 0.7278684377670288, 0.6835262775421143, 0.6510962247848511, 0.6375056505203247, 0.6164647340774536, 0.596216082572937, 0.5730733275413513, 0.5529778003692627, 0.5392006039619446, 0.5300474762916565, 0.519465982913971, 0.5117599368095398, 0.4860982596874237, 0.48250460624694824, 0.47010454535484314, 0.4613543748855591, 0.4545634388923645, 0.44049128890037537, 0.43229353427886963, 0.4333477020263672, 0.4169587194919586, 0.40769097208976746, 0.4092576205730438, 0.3996960520744324, 0.39555823802948, 0.37986230850219727, 0.3713599145412445, 0.3723140358924866, 0.3614935278892517, 0.35911130905151367, 0.35609903931617737, 0.3505176305770874, 0.3408728837966919], "accuracy": [0.26218464970588684, 0.4916127324104309, 0.5691454410552979, 0.6214502453804016, 0.6622639298439026, 0.6963412761688232, 0.7211728692054749, 0.7366266250610352, 0.7499669790267944, 0.7662131786346436, 0.7613261342048645, 0.7711002230644226, 0.78113853931427, 0.7887993454933167, 0.8004226684570312, 0.8059701323509216, 0.8103289008140564, 0.8158763647079468, 0.8166688680648804, 0.8241975903511047, 0.8253863453865051, 0.8317263126373291, 0.8343679904937744, 0.8389908671379089, 0.8421608805656433, 0.8433496356010437, 0.844010055065155, 0.8519350290298462, 0.8549728989601135, 0.8527275323867798, 0.8536521196365356, 0.8597279191017151, 0.8676528930664062, 0.868049144744873, 0.8673887252807617, 0.8746532797813416, 0.8734645247459412, 0.873860776424408, 0.876370370388031, 0.8741249442100525], "val_loss": [2.039903402328491, 1.517340064048767, 1.043259859085083, 0.8403092622756958, 0.7529087066650391, 0.6968698501586914, 0.6481198668479919, 0.6123846769332886, 0.5866156220436096, 0.5679503083229065, 0.5514151453971863, 0.5374783873558044, 0.5260519981384277, 0.5105981230735779, 0.4974859356880188, 0.49145475029945374, 0.47661036252975464, 0.4702067971229553, 0.45783260464668274, 0.4525723159313202, 0.4475032687187195, 0.4395299553871155, 0.43241578340530396, 0.4321940839290619, 0.42293697595596313, 0.4221356511116028, 0.4193781614303589, 0.4109640419483185, 0.405327707529068, 0.4038674235343933, 0.395287424325943, 0.3983045220375061, 0.3967929184436798, 0.38881251215934753, 0.38431116938591003, 0.38387036323547363, 0.38696491718292236, 0.37881818413734436, 0.37735000252723694, 0.3765632212162018], "val_accuracy": [0.5113333463668823, 0.6483333110809326, 0.6846666932106018, 0.706333339214325, 0.7333333492279053, 0.753000020980835, 0.762666642665863, 0.7773333191871643, 0.7820000052452087, 0.7923333048820496, 0.8003333210945129, 0.8040000200271606, 0.8109999895095825, 0.8133333325386047, 0.8213333487510681, 0.8216666579246521, 0.8370000123977661, 0.8379999995231628, 0.8360000252723694, 0.840666651725769, 0.843666672706604, 0.8450000286102295, 0.847000002861023, 0.8463333249092102, 0.8550000190734863, 0.8526666760444641, 0.8550000190734863, 0.8569999933242798, 0.8576666712760925, 0.859666645526886, 0.8633333444595337, 0.8656666874885559, 0.8636666536331177, 0.8616666793823242, 0.8709999918937683, 0.8679999709129333, 0.862666666507721, 0.8666666746139526, 0.8703333139419556, 0.8690000176429749]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.826285719871521, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5725277662277222, 0.8518644571304321, 0.6955385208129883, 0.6642820239067078, 0.5986613631248474, 0.5516769289970398, 0.5196134448051453, 0.4976709485054016, 0.505428671836853, 0.4907245635986328, 0.47915080189704895, 0.48202672600746155, 0.5057821869850159, 0.5010783076286316, 0.5073921084403992], "accuracy": [0.48012152314186096, 0.7166820764541626, 0.7519482374191284, 0.7600052952766418, 0.7718927264213562, 0.7952714562416077, 0.8070268034934998, 0.8177255392074585, 0.8244617581367493, 0.8156121969223022, 0.8252542614936829, 0.8286884427070618, 0.8315942287445068, 0.8214238286018372, 0.8278959393501282], "val_loss": [0.8830515742301941, 0.6261273622512817, 0.5625073909759521, 0.5312470197677612, 0.5167922377586365, 0.49790501594543457, 0.48848265409469604, 0.4708259403705597, 0.47744569182395935, 0.4731055498123169, 0.5435478687286377, 0.5385671854019165, 0.5513584613800049, 0.529614269733429, 0.5259088277816772], "val_accuracy": [0.6926666498184204, 0.7606666684150696, 0.778333306312561, 0.793666660785675, 0.8023333549499512, 0.8203333616256714, 0.8173333406448364, 0.8273333311080933, 0.8323333263397217, 0.8343333601951599, 0.8293333053588867, 0.8230000138282776, 0.8116666674613953, 0.8296666741371155, 0.8323333263397217]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 0, 0, 1, 0], [0, 8, 5, 5, 2, 9], [0], [0, 49], [0, 1], [0], [1], [0]], "fitness": -0.7891428470611572, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.square(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292391300201416, 2.1884660720825195, 1.755847454071045, 1.36172616481781, 1.0673094987869263, 0.9216393232345581, 0.8496688604354858, 0.8181101679801941, 0.7705197334289551, 0.7494591474533081, 0.7200864553451538, 0.678473174571991, 0.6629946231842041, 0.6328848004341125, 0.6247263550758362, 0.6061937212944031, 0.5889071822166443, 0.5764239430427551, 0.5655540227890015], "accuracy": [0.13181878626346588, 0.3214899003505707, 0.4410249590873718, 0.5406154990196228, 0.6387531161308289, 0.659490168094635, 0.6839255094528198, 0.6869634389877319, 0.7016246318817139, 0.7063795924186707, 0.7308149337768555, 0.7331924438476562, 0.7483819723129272, 0.7600052952766418, 0.7607977986335754, 0.7692511081695557, 0.7771760821342468, 0.7814027070999146, 0.7839123010635376], "val_loss": [2.246915102005005, 2.0172674655914307, 1.1462247371673584, 0.887489914894104, 0.770126223564148, 0.733011782169342, 0.6964274048805237, 0.6820576786994934, 0.6498051881790161, 0.6251291632652283, 0.5819651484489441, 0.563657283782959, 0.5503666996955872, 0.5427356362342834, 0.5277446508407593, 0.5222991704940796, 0.5163453221321106, 0.5186269283294678, 0.5041829347610474], "val_accuracy": [0.4086666703224182, 0.41100001335144043, 0.6326666474342346, 0.6866666674613953, 0.7173333168029785, 0.7213333249092102, 0.7456666827201843, 0.7456666827201843, 0.7369999885559082, 0.7580000162124634, 0.7699999809265137, 0.7826666831970215, 0.7866666913032532, 0.8080000281333923, 0.793666660785675, 0.7996666431427002, 0.800000011920929, 0.8046666383743286, 0.8019999861717224]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 7, 6, 1, 2, 2, 1, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 0, 1, 3], [0, 0, 1, 3, 2], [83, 99, 27], [1, 1], [0], [0], [0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [0, 7, 5, 6, 2, 5, 8], [0, 3, 7, 3, 0], [0, 78], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [46752808960.0, 6930786942976.0, 119078605815808.0, 852217141657600.0, 3643749859065856.0, 1.221720627216384e+16], "accuracy": [0.09853387624025345, 0.09972262382507324, 0.10606260597705841, 0.09615638852119446, 0.10394927859306335, 0.10038304328918457], "val_loss": [472774246400.0, 25489257267200.0, 273607771029504.0, 1491588723245056.0, 5587286985015296.0, 1.64808095694848e+16], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [6, 2, 3, 0, 3, 5, 3, 3, 9], [0, 2, 0, 3, 3, 4], [40, 16, 30], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 3, 0, 8, 0, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 34, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 15, 9, 6, 3, 2, 1, 1, 1, 16, 9, 7, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.multiply(tf.math.square(grad), tf.math.multiply(grad, tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.negative(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 7, 1, 3, 7], [0, 1, 0, 3, 0, 2], [39, 39, 66], [0, 1], [0], [0], [0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [3, 7, 4, 7, 2, 5, 8], [0, 1, 3, 3, 2, 4], [99], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 2, 5, 7, 2, 8, 9], [1, 6, 4, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 3, 2, 1, 1, 1, 13, 7, 6, 1, 12, 8, 4, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.subtract(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), tf.math.add(sigma, tf.math.add(tf.math.square(sigma), tf.math.sqrt(beta)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.square(alpha), tf.math.add(tf.math.add(grad, tf.math.sqrt(grad)), beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [2], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 4, 8, 1, 4, 1, 4, 2, 8], [0, 0, 2, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.08914285898208618, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 0, 16, 8, 8, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(tf.math.sqrt(beta), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))))", "other_info": {"loss": [2.311220169067383, 2.310112714767456, 2.3102760314941406, 2.3083577156066895, 2.3098866939544678, 2.3106517791748047, 2.3090360164642334, 2.310321092605591], "accuracy": [0.08942015469074249, 0.09206181764602661, 0.09430722147226334, 0.1006472036242485, 0.09298639744520187, 0.09259014576673508, 0.0866464152932167, 0.09192973375320435], "val_loss": [2.3092095851898193, 2.3091862201690674, 2.3091561794281006, 2.3091225624084473, 2.309084892272949, 2.3090434074401855, 2.3089990615844727, 2.308952569961548], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09700000286102295, 0.09700000286102295, 0.09600000083446503, 0.09533333033323288, 0.09533333033323288, 0.0949999988079071]}}]