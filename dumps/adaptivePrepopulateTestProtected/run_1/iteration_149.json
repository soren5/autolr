[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8582857251167297, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235968112945557, 1.865234136581421, 1.3928292989730835, 1.0982534885406494, 0.9325101375579834, 0.8406623601913452, 0.7615548968315125, 0.7231364250183105, 0.6835538148880005, 0.6602813601493835, 0.6326121687889099, 0.6041315793991089, 0.5867224931716919, 0.5691707134246826, 0.5560688972473145, 0.5384036302566528, 0.5257606506347656, 0.5083068609237671, 0.5005101561546326, 0.4909037947654724, 0.4838964343070984, 0.47311311960220337, 0.4625575840473175, 0.4501914978027344, 0.4511024057865143, 0.4430494010448456, 0.42696067690849304, 0.43096405267715454, 0.4149874448776245, 0.40829041600227356, 0.3987821638584137, 0.3948064148426056, 0.39124926924705505, 0.3859002888202667, 0.37831637263298035, 0.37144678831100464, 0.3709637224674225, 0.3645906448364258, 0.3591437339782715, 0.3546530604362488, 0.34669506549835205, 0.3414134383201599, 0.33420756459236145, 0.3296108543872833, 0.33218681812286377, 0.3231254518032074, 0.3221665322780609, 0.31722894310951233, 0.3090033233165741, 0.2978004515171051, 0.29322513937950134, 0.29602473974227905, 0.29421162605285645, 0.2904296815395355, 0.28660982847213745, 0.2762688398361206, 0.2781515419483185, 0.2670009136199951, 0.2607596516609192, 0.2635484039783478, 0.2600947618484497, 0.2525545358657837, 0.2535839080810547, 0.24592062830924988, 0.24439740180969238, 0.24099946022033691, 0.23592862486839294, 0.2371051013469696, 0.22909234464168549, 0.21726348996162415, 0.2236192673444748, 0.21780705451965332, 0.22096377611160278, 0.2214534431695938, 0.21543696522712708, 0.20771265029907227], "accuracy": [0.272090882062912, 0.4908202290534973, 0.5604279637336731, 0.6161669492721558, 0.6659622192382812, 0.6977941989898682, 0.7223616242408752, 0.739400327205658, 0.7543256878852844, 0.7606657147407532, 0.7745344042778015, 0.7802139520645142, 0.7864218950271606, 0.7944789528846741, 0.7979130744934082, 0.8079513907432556, 0.8109893202781677, 0.8236692547798157, 0.8183859586715698, 0.8208954930305481, 0.8232730031013489, 0.8321225643157959, 0.837141752243042, 0.837537944316864, 0.8405758738517761, 0.8436138033866882, 0.8516708612442017, 0.8510104417800903, 0.8537842035293579, 0.8540483713150024, 0.8562937378883362, 0.8558974862098694, 0.8626337051391602, 0.8607845902442932, 0.8663320541381836, 0.8683133125305176, 0.8683133125305176, 0.8696341514587402, 0.8730682730674744, 0.8746532797813416, 0.8774270415306091, 0.878351628780365, 0.8809932470321655, 0.8816536664962769, 0.8800686597824097, 0.883238673210144, 0.889050304889679, 0.8860124349594116, 0.8894465565681458, 0.8931449055671692, 0.8960506916046143, 0.894069492816925, 0.8957865834236145, 0.8957865834236145, 0.894069492816925, 0.901862382888794, 0.8967111110687256, 0.9027869701385498, 0.9043719172477722, 0.9012019634246826, 0.909259021282196, 0.9121648669242859, 0.908730685710907, 0.9142781496047974, 0.9120327830314636, 0.913089394569397, 0.9124290347099304, 0.9146744012832642, 0.917580246925354, 0.9203540086746216, 0.919561505317688, 0.9222031235694885, 0.9224672913551331, 0.9232597947120667, 0.9243164658546448, 0.9227314591407776], "val_loss": [2.0386154651641846, 1.517572283744812, 1.0520415306091309, 0.8425016403198242, 0.7514388561248779, 0.6890191435813904, 0.6443211436271667, 0.6130017638206482, 0.5848138928413391, 0.5668181777000427, 0.5443642735481262, 0.5331461429595947, 0.5147110223770142, 0.5044869780540466, 0.49806416034698486, 0.48912423849105835, 0.4799688458442688, 0.47375020384788513, 0.46094074845314026, 0.45152994990348816, 0.4445592164993286, 0.441710501909256, 0.43968114256858826, 0.4328082799911499, 0.4259520173072815, 0.4251299500465393, 0.416523277759552, 0.41505521535873413, 0.4137990176677704, 0.4058258533477783, 0.4065200984477997, 0.4030820429325104, 0.40799349546432495, 0.39318424463272095, 0.39105239510536194, 0.39513513445854187, 0.38855862617492676, 0.38637134432792664, 0.3809589743614197, 0.3828607499599457, 0.38377001881599426, 0.37848690152168274, 0.3675082325935364, 0.37397509813308716, 0.37497571110725403, 0.3702535033226013, 0.36714595556259155, 0.36930304765701294, 0.3619251251220703, 0.3672657012939453, 0.3652055263519287, 0.3611901104450226, 0.35617730021476746, 0.35812634229660034, 0.3576522171497345, 0.36013367772102356, 0.35483354330062866, 0.3565904200077057, 0.35742488503456116, 0.3495250940322876, 0.34919068217277527, 0.3591972291469574, 0.34983766078948975, 0.3532761335372925, 0.3521350026130676, 0.3503139615058899, 0.3457382023334503, 0.3523942828178406, 0.3463882505893707, 0.35635435581207275, 0.3472151756286621, 0.348398357629776, 0.3463934063911438, 0.3453020751476288, 0.3463253676891327, 0.3510587513446808], "val_accuracy": [0.5353333353996277, 0.6633333563804626, 0.687333345413208, 0.7123333215713501, 0.7400000095367432, 0.7566666603088379, 0.765666663646698, 0.7786666750907898, 0.7946666479110718, 0.7983333468437195, 0.8036666512489319, 0.8100000023841858, 0.8169999718666077, 0.8193333148956299, 0.824999988079071, 0.828000009059906, 0.8316666483879089, 0.8333333134651184, 0.8383333086967468, 0.8433333039283752, 0.8433333039283752, 0.8420000076293945, 0.8473333120346069, 0.8443333506584167, 0.8516666889190674, 0.8516666889190674, 0.8516666889190674, 0.8533333539962769, 0.8543333411216736, 0.856333315372467, 0.8566666841506958, 0.8586666584014893, 0.8573333621025085, 0.856333315372467, 0.862333357334137, 0.8629999756813049, 0.8600000143051147, 0.8666666746139526, 0.8653333187103271, 0.8640000224113464, 0.8650000095367432, 0.8663333058357239, 0.8676666617393494, 0.8676666617393494, 0.8666666746139526, 0.8666666746139526, 0.8673333525657654, 0.8706666827201843, 0.8690000176429749, 0.8709999918937683, 0.8676666617393494, 0.874666690826416, 0.8740000128746033, 0.8756666779518127, 0.8730000257492065, 0.875333309173584, 0.874666690826416, 0.8743333220481873, 0.8773333430290222, 0.875, 0.8756666779518127, 0.875, 0.8790000081062317, 0.8713333606719971, 0.8793333172798157, 0.8713333606719971, 0.8803333044052124, 0.878000020980835, 0.8803333044052124, 0.8769999742507935, 0.8830000162124634, 0.8816666603088379, 0.875333309173584, 0.8796666860580444, 0.8813333511352539, 0.8773333430290222]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8451428413391113, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293790102005005, 2.1898910999298096, 1.770013689994812, 1.3600592613220215, 1.0939668416976929, 0.9391400814056396, 0.8482259511947632, 0.8091372847557068, 0.7477486729621887, 0.7467802166938782, 0.7124943733215332, 0.6884628534317017, 0.640791118144989, 0.6191035509109497, 0.6057156324386597, 0.5679775476455688, 0.5759828090667725, 0.5599258542060852, 0.5672337412834167, 0.5468983054161072, 0.5427587032318115, 0.5237371921539307, 0.525055468082428, 0.5078005790710449, 0.49767357110977173, 0.4830538332462311, 0.48393943905830383, 0.4668118357658386, 0.46049943566322327, 0.4507937431335449, 0.4520876109600067, 0.4377672076225281, 0.4475381672382355, 0.4250015914440155, 0.4166775345802307, 0.4052148759365082, 0.39552000164985657, 0.3909401297569275, 0.39145949482917786, 0.3818454444408417, 0.36981990933418274, 0.37489593029022217, 0.3674112856388092, 0.3655351400375366, 0.3577028810977936, 0.3493521809577942, 0.3368089497089386, 0.3425273597240448, 0.32658666372299194, 0.32605358958244324], "accuracy": [0.12191256135702133, 0.3222824037075043, 0.428609162569046, 0.5379738211631775, 0.6248844265937805, 0.6608110070228577, 0.6909258961677551, 0.7065116763114929, 0.705058753490448, 0.7061154246330261, 0.7197200059890747, 0.7313432693481445, 0.750231146812439, 0.7586844563484192, 0.7667415142059326, 0.7741381525993347, 0.776251494884491, 0.7889314293861389, 0.783119797706604, 0.7938185334205627, 0.7910447716712952, 0.7993659973144531, 0.7981772422790527, 0.8033285140991211, 0.8049134612083435, 0.8112534880638123, 0.8132346868515015, 0.8226125836372375, 0.8190463781356812, 0.8222163319587708, 0.8227446675300598, 0.8297450542449951, 0.8255184292793274, 0.8378021121025085, 0.8359529972076416, 0.8407079577445984, 0.844010055065155, 0.8529917001724243, 0.8544445633888245, 0.8568220734596252, 0.8564258217811584, 0.8520671129226685, 0.8590674996376038, 0.8602562546730042, 0.8627657890319824, 0.86118084192276, 0.8692378997802734, 0.8677849769592285, 0.8721436858177185, 0.8704266548156738], "val_loss": [2.2469582557678223, 2.0244200229644775, 1.1709843873977661, 0.9035955667495728, 0.789198637008667, 0.7395921349525452, 0.7095121145248413, 0.6647492051124573, 0.6431043744087219, 0.6302735805511475, 0.5849820375442505, 0.5734540820121765, 0.5505421757698059, 0.5429407358169556, 0.5499840378761292, 0.5409025549888611, 0.5269225835800171, 0.5277203917503357, 0.5310834050178528, 0.5051836967468262, 0.5031165480613708, 0.5004646182060242, 0.49708887934684753, 0.5042766332626343, 0.4848691523075104, 0.49376651644706726, 0.49192196130752563, 0.48155292868614197, 0.47979840636253357, 0.48027026653289795, 0.45966824889183044, 0.44833093881607056, 0.45530420541763306, 0.4471313953399658, 0.43682876229286194, 0.4350561201572418, 0.4392538368701935, 0.4489358365535736, 0.45531532168388367, 0.4386416971683502, 0.4331600069999695, 0.4439759850502014, 0.4583071172237396, 0.43587663769721985, 0.4122186005115509, 0.41423723101615906, 0.43758752942085266, 0.4396633207798004, 0.42200154066085815, 0.41704410314559937], "val_accuracy": [0.4153333306312561, 0.4416666626930237, 0.6359999775886536, 0.6846666932106018, 0.6959999799728394, 0.7289999723434448, 0.7369999885559082, 0.7433333396911621, 0.7513333559036255, 0.7536666393280029, 0.7599999904632568, 0.7736666798591614, 0.7850000262260437, 0.7870000004768372, 0.7846666574478149, 0.7866666913032532, 0.7926666736602783, 0.8019999861717224, 0.7996666431427002, 0.809333324432373, 0.812333345413208, 0.812666654586792, 0.8220000267028809, 0.8159999847412109, 0.8180000185966492, 0.8223333358764648, 0.8246666789054871, 0.8163333535194397, 0.8233333230018616, 0.8289999961853027, 0.8316666483879089, 0.8360000252723694, 0.8383333086967468, 0.8366666436195374, 0.843999981880188, 0.843666672706604, 0.8473333120346069, 0.843999981880188, 0.8413333296775818, 0.8523333072662354, 0.8536666631698608, 0.8536666631698608, 0.8510000109672546, 0.8506666421890259, 0.8606666922569275, 0.8586666584014893, 0.8539999723434448, 0.8550000190734863, 0.8510000109672546, 0.8583333492279053]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8408571481704712, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.622755765914917, 0.863746702671051, 0.6844546794891357, 0.5931881070137024, 0.5672622919082642, 0.5291836261749268, 0.516733705997467, 0.4969472587108612, 0.45931631326675415, 0.4598354697227478, 0.4400216042995453, 0.4228982627391815, 0.4087955355644226, 0.4449203610420227, 0.43917495012283325, 0.4473864436149597, 0.45872762799263], "accuracy": [0.4571390748023987, 0.6942279934883118, 0.7454761862754822, 0.7769119143486023, 0.7903843522071838, 0.804649293422699, 0.8164047002792358, 0.8230088353157043, 0.8300092220306396, 0.8356888294219971, 0.8392550349235535, 0.8446704745292664, 0.8520671129226685, 0.8436138033866882, 0.8428213000297546, 0.8469158411026001, 0.8536521196365356], "val_loss": [0.8987843990325928, 0.6236777901649475, 0.550376832485199, 0.5214375853538513, 0.5059182047843933, 0.5326507687568665, 0.5033212900161743, 0.5033862590789795, 0.4991925060749054, 0.4744186997413635, 0.4497125744819641, 0.5237272381782532, 0.49123597145080566, 0.5670034885406494, 0.5352673530578613, 0.599402904510498, 0.5718206167221069], "val_accuracy": [0.6846666932106018, 0.7689999938011169, 0.7993333339691162, 0.8136666417121887, 0.8220000267028809, 0.8240000009536743, 0.828000009059906, 0.8346666693687439, 0.8246666789054871, 0.8393333554267883, 0.843999981880188, 0.8503333330154419, 0.8503333330154419, 0.8476666808128357, 0.8356666564941406, 0.8443333506584167, 0.843666672706604]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [2, 2, 3, 0, 3, 2], [0, 1, 0, 2, 0, 2], [39, 52, 60], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 0, 2, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 4, 8, 1, 2, 1, 4, 2, 8], [1, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 48, 96, 99, 61, 8]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 3, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 2, 5, 1, 0, 2], [0, 0, 1, 3, 3, 0, 3, 1, 2, 0, 6, 0, 6], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 29, 16, 13, 5], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(alpha, sigma))), tf.math.subtract(sigma, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.add(alpha, beta))))))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.subtract(grad, tf.math.negative(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [0, 1, 0, 2], [39, 39], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [4, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [9], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 8, 8, 1, 4, 3, 4, 5, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 5, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 2, 4, 1, 4, 0, 8], [2, 0, 0, 3, 0, 0, 3, 1, 2, 0], [5, 99, 96, 99, 61, 1]], "fitness": -0.09114285558462143, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 20, 11, 9, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha), tf.math.negative(tf.math.sqrt(beta)))", "other_info": {"loss": [2.3096232414245605, 2.3094398975372314, 2.3093645572662354, 2.3104958534240723, 2.3088955879211426, 2.308035135269165, 2.3094465732574463, 2.3089938163757324, 2.308926582336426, 2.309223175048828, 2.3081674575805664, 2.309309482574463, 2.309434413909912, 2.308910608291626, 2.3088223934173584, 2.308567523956299, 2.3080241680145264, 2.3081583976745605, 2.307424783706665, 2.307185649871826, 2.30641770362854, 2.308790683746338, 2.3069236278533936, 2.306730031967163, 2.307291030883789], "accuracy": [0.08955223858356476, 0.09008057415485382, 0.09615638852119446, 0.09232597798109055, 0.09140139818191528, 0.09351472556591034, 0.09047681838274002, 0.08942015469074249, 0.09760929644107819, 0.09087307006120682, 0.09496764093637466, 0.09166556596755981, 0.09192973375320435, 0.09496764093637466, 0.08994849026203156, 0.09351472556591034, 0.09245806187391281, 0.09298639744520187, 0.09298639744520187, 0.09668471664190292, 0.09338264167308807, 0.09391097724437714, 0.09311848133802414, 0.0952318087220192, 0.08981640636920929], "val_loss": [2.307666063308716, 2.3075661659240723, 2.307446002960205, 2.307318687438965, 2.307188034057617, 2.3070573806762695, 2.3069255352020264, 2.306792974472046, 2.30666184425354, 2.306530475616455, 2.306398630142212, 2.3062665462493896, 2.3061347007751465, 2.306002616882324, 2.305870532989502, 2.305739402770996, 2.305607318878174, 2.305476665496826, 2.3053457736968994, 2.305216073989868, 2.3050858974456787, 2.304955005645752, 2.3048255443573, 2.3046963214874268, 2.3045670986175537], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09366666525602341, 0.09366666525602341, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.09533333033323288, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}]