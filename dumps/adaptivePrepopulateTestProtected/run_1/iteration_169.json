[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.868571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220630407333374, 1.8591214418411255, 1.3888709545135498, 1.109884262084961, 0.9433242082595825, 0.828829824924469, 0.7809362411499023, 0.7396879196166992, 0.690706729888916, 0.6596418023109436, 0.6342960000038147, 0.6188686490058899, 0.5915887951850891, 0.5741510987281799, 0.5605632662773132, 0.550950825214386, 0.5229248404502869, 0.516612708568573, 0.5061606168746948, 0.49516746401786804, 0.4844987392425537, 0.4727984070777893, 0.4586004316806793, 0.4510762393474579, 0.4514216184616089, 0.43882545828819275, 0.42939838767051697, 0.4212915897369385, 0.42029884457588196, 0.4076755940914154, 0.39898955821990967, 0.3958103060722351, 0.39379093050956726, 0.3882560729980469, 0.37819626927375793, 0.36589711904525757, 0.36642929911613464, 0.3566090166568756, 0.3634316623210907, 0.3480087220668793, 0.3540554940700531, 0.34180113673210144, 0.33773714303970337, 0.3351278007030487, 0.3258811831474304, 0.3206638693809509, 0.3157966136932373, 0.318097859621048, 0.31313657760620117], "accuracy": [0.2785629332065582, 0.4822348356246948, 0.5571258664131165, 0.6129969358444214, 0.6606789231300354, 0.6980583667755127, 0.7143045663833618, 0.7302865982055664, 0.7489103078842163, 0.7565711140632629, 0.7721568942070007, 0.7728173136711121, 0.7829877138137817, 0.7930260300636292, 0.7998943328857422, 0.8026680946350098, 0.8137630224227905, 0.811649739742279, 0.8198388814926147, 0.8212917447090149, 0.8265751004219055, 0.8286884427070618, 0.8367455005645752, 0.8352925777435303, 0.8400475382804871, 0.8426892161369324, 0.8492933511734009, 0.8500858545303345, 0.8512746095657349, 0.8564258217811584, 0.8569541573524475, 0.8615770936012268, 0.8590674996376038, 0.8660678863525391, 0.8697662353515625, 0.8705587387084961, 0.8709549307823181, 0.8714832663536072, 0.8710870146751404, 0.8812574148178101, 0.8739928603172302, 0.8749174475669861, 0.8791441321372986, 0.8802007436752319, 0.8840311765670776, 0.8850878477096558, 0.8934090733528137, 0.887597382068634, 0.889050304889679], "val_loss": [2.037526845932007, 1.509920358657837, 1.0510121583938599, 0.8548119068145752, 0.7727962136268616, 0.7136213183403015, 0.6793416142463684, 0.6424185037612915, 0.6190482974052429, 0.594842255115509, 0.5763131976127625, 0.5580644011497498, 0.545236349105835, 0.5374884009361267, 0.5257026553153992, 0.5143154859542847, 0.5047369003295898, 0.49607568979263306, 0.48683565855026245, 0.48118579387664795, 0.47449445724487305, 0.4627755880355835, 0.4591917395591736, 0.4558051824569702, 0.4489170014858246, 0.4451637864112854, 0.43650227785110474, 0.43469396233558655, 0.4326220154762268, 0.42564526200294495, 0.4260530471801758, 0.419392853975296, 0.41418567299842834, 0.4191182553768158, 0.41272199153900146, 0.4052387773990631, 0.4069993793964386, 0.403483122587204, 0.39716747403144836, 0.3974439203739166, 0.3957861065864563, 0.39362865686416626, 0.3876290023326874, 0.39092618227005005, 0.38522106409072876, 0.39820730686187744, 0.38425296545028687, 0.38266506791114807, 0.3930695652961731], "val_accuracy": [0.5170000195503235, 0.6483333110809326, 0.6746666431427002, 0.7036666870117188, 0.7229999899864197, 0.7386666536331177, 0.7486666440963745, 0.765333354473114, 0.7689999938011169, 0.7820000052452087, 0.7943333387374878, 0.7976666688919067, 0.8130000233650208, 0.8109999895095825, 0.8109999895095825, 0.8173333406448364, 0.8240000009536743, 0.8270000219345093, 0.831333339214325, 0.8356666564941406, 0.8336666822433472, 0.8336666822433472, 0.8396666646003723, 0.8376666903495789, 0.8410000205039978, 0.8413333296775818, 0.8456666469573975, 0.8476666808128357, 0.843666672706604, 0.847000002861023, 0.8476666808128357, 0.8456666469573975, 0.8503333330154419, 0.8526666760444641, 0.8523333072662354, 0.856333315372467, 0.8513333201408386, 0.8550000190734863, 0.856333315372467, 0.8586666584014893, 0.8550000190734863, 0.8553333282470703, 0.8603333234786987, 0.8643333315849304, 0.8606666922569275, 0.8560000061988831, 0.8633333444595337, 0.8610000014305115, 0.8556666374206543]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8494285941123962, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2937424182891846, 2.1897788047790527, 1.7735097408294678, 1.3557469844818115, 1.0744104385375977, 0.9259347319602966, 0.8534882068634033, 0.8066723346710205, 0.7617926597595215, 0.7300500869750977, 0.7135745882987976, 0.6913543939590454, 0.6581589579582214, 0.6335632801055908, 0.6167511343955994, 0.6004483699798584, 0.6020722389221191, 0.5751441121101379, 0.5511963367462158, 0.5475198030471802, 0.5238745212554932, 0.5245062708854675, 0.5228898525238037, 0.5177138447761536, 0.4959753453731537, 0.5010829567909241, 0.4810568690299988, 0.47094014286994934, 0.4642722010612488, 0.46278443932533264, 0.4546775817871094, 0.44138842821121216, 0.44022005796432495, 0.4322505593299866, 0.4125525653362274, 0.4069739878177643, 0.3979692757129669, 0.38636717200279236, 0.3780520260334015, 0.3785489797592163, 0.36015433073043823], "accuracy": [0.1298375427722931, 0.3245278000831604, 0.43270373344421387, 0.542728841304779, 0.639809787273407, 0.6625280380249023, 0.6882842183113098, 0.7078325152397156, 0.7152291536331177, 0.724739134311676, 0.7374191284179688, 0.7383436560630798, 0.7495707273483276, 0.7617223858833313, 0.7633073329925537, 0.7676661014556885, 0.7695152759552002, 0.7796856164932251, 0.7889314293861389, 0.7907806038856506, 0.798309326171875, 0.8021397590637207, 0.8053097128868103, 0.806630551815033, 0.8088759779930115, 0.8145555257797241, 0.8220842480659485, 0.824329674243927, 0.8214238286018372, 0.82683926820755, 0.8310658931732178, 0.8364813327789307, 0.832650899887085, 0.8370096683502197, 0.8465195894241333, 0.8448025584220886, 0.8475762605667114, 0.8515387773513794, 0.8573504090309143, 0.8498216867446899, 0.8651432991027832], "val_loss": [2.2462074756622314, 2.017202138900757, 1.1289284229278564, 0.8370213508605957, 0.7430008053779602, 0.7056432366371155, 0.6702373623847961, 0.640637993812561, 0.6266130208969116, 0.6217942833900452, 0.5807631611824036, 0.5515744090080261, 0.5328125953674316, 0.5278539657592773, 0.51893550157547, 0.5104902982711792, 0.4935839772224426, 0.4862399995326996, 0.48787230253219604, 0.4772164225578308, 0.47317618131637573, 0.4628992974758148, 0.46041616797447205, 0.4589155614376068, 0.4570798873901367, 0.45210132002830505, 0.4436354637145996, 0.43332624435424805, 0.43076783418655396, 0.4253951907157898, 0.41847729682922363, 0.4107796549797058, 0.4041253328323364, 0.41631633043289185, 0.40928369760513306, 0.4036392271518707, 0.40350598096847534, 0.405549556016922, 0.4076072871685028, 0.40631428360939026, 0.4024187922477722], "val_accuracy": [0.42133334279060364, 0.4729999899864197, 0.6506666541099548, 0.6949999928474426, 0.7400000095367432, 0.734333336353302, 0.7566666603088379, 0.7563333511352539, 0.7593333125114441, 0.7666666507720947, 0.7773333191871643, 0.7829999923706055, 0.7910000085830688, 0.7933333516120911, 0.800000011920929, 0.7996666431427002, 0.8113333582878113, 0.8086666464805603, 0.815666675567627, 0.8186666369438171, 0.8206666707992554, 0.8323333263397217, 0.8309999704360962, 0.8320000171661377, 0.8363333344459534, 0.8423333168029785, 0.8453333377838135, 0.8429999947547913, 0.8379999995231628, 0.8516666889190674, 0.8500000238418579, 0.847000002861023, 0.8569999933242798, 0.8503333330154419, 0.8519999980926514, 0.8583333492279053, 0.8583333492279053, 0.8579999804496765, 0.856333315372467, 0.8556666374206543, 0.8556666374206543]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8351428508758545, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5738271474838257, 0.8773882985115051, 0.8477702736854553, 0.7072601914405823, 0.6443199515342712, 0.6059197187423706, 0.60425865650177, 0.5634729266166687, 0.5413039922714233, 0.5333540439605713, 0.4896800220012665, 0.4951082468032837, 0.5488825440406799, 0.5342334508895874, 0.5253021121025085, 0.5538200736045837, 0.5553023815155029], "accuracy": [0.474970281124115, 0.6995112895965576, 0.7214370369911194, 0.7478536367416382, 0.7611940503120422, 0.7840443849563599, 0.7857614755630493, 0.7956677079200745, 0.8035926818847656, 0.8115176558494568, 0.8062343001365662, 0.819970965385437, 0.8148196935653687, 0.8183859586715698, 0.81112140417099, 0.8230088353157043, 0.8095363974571228], "val_loss": [0.8463433980941772, 0.8176206350326538, 0.5968217253684998, 0.5538768172264099, 0.5243681073188782, 0.5132725238800049, 0.49523478746414185, 0.4968205988407135, 0.5220739841461182, 0.48526015877723694, 0.48240894079208374, 0.5367579460144043, 0.5514814257621765, 0.5388143062591553, 0.5925578474998474, 0.6149478554725647, 0.5865607857704163], "val_accuracy": [0.7260000109672546, 0.7293333411216736, 0.7886666655540466, 0.7886666655540466, 0.815666675567627, 0.812666654586792, 0.8159999847412109, 0.8226666450500488, 0.8270000219345093, 0.8330000042915344, 0.8240000009536743, 0.8336666822433472, 0.8263333439826965, 0.828000009059906, 0.8256666660308838, 0.8063333630561829, 0.831333339214325]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 8, 0, 3], [0, 0, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [8, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [85], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 2, 4, 1, 4, 2, 8, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 2, 1, 0, 1, 1, 22, 12, 10, 6], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.sqrt(alpha))))))), beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [8, 2, 3, 0, 4], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 6, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [67], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 8, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 2, 2, 1, 1, 1, 20, 11, 9, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.sqrt(grad)))), tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma), alpha), tf.math.sqrt(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 1], [2, 2, 3, 0, 3], [0, 1, 0, 2], [39, 66], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 6], [0, 2, 0, 3], [16, 16], [0, 1, 0, 1, 0, 1, 0, 1, 1], [2, 4, 3, 2], [0, 5, 7, 3, 0], [99, 34], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 9, 4, 8, 1, 2, 8], [0, 4, 0, 4, 0, 3, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 9, 4, 5, 2, 10, 6, 4, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.multiply(grad, tf.math.add(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(grad), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [2, 0, 3, 1, 3, 7], [0, 1, 0, 2, 3, 1], [39, 39], [0, 1], [0], [0], [0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [2, 6, 5, 7, 8, 9, 7, 9, 4, 6, 0], [0, 3, 1, 5, 0], [0, 22, 67, 22], [0, 1], [0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0]], "fitness": -0.08828571438789368, "mapping_values": [1, 12, 6, 6, 2, 2, 1, 1, 1, 16, 11, 5, 4, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), grad))), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.add(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.divide_no_nan(alpha, grad), tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3108224868774414, 2.3099019527435303, 2.310525417327881, 2.3101699352264404, 2.3100152015686035, 2.310938596725464], "accuracy": [0.09298639744520187, 0.09536388516426086, 0.08677849918603897, 0.09140139818191528, 0.09272222965955734, 0.08955223858356476], "val_loss": [2.308488368988037, 2.308488368988037, 2.308488368988037, 2.308488368988037, 2.308488368988037, 2.308488368988037], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]