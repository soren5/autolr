[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224374532699585, 1.8752986192703247, 1.4026663303375244, 1.116557240486145, 0.9350301027297974, 0.8410618305206299, 0.7642853260040283, 0.718426525592804, 0.6824144124984741, 0.6449280381202698, 0.6257578730583191, 0.5931977033615112, 0.5839303135871887, 0.5638020634651184, 0.5443964600563049, 0.5437382459640503, 0.5250334739685059, 0.5115805864334106, 0.4999142289161682, 0.4849873483181, 0.4832463264465332, 0.46267732977867126, 0.4584156572818756, 0.45710813999176025, 0.44265446066856384, 0.42792609333992004, 0.4270223081111908, 0.41774502396583557, 0.41080179810523987, 0.3988945484161377, 0.40066856145858765, 0.38262778520584106, 0.38350173830986023, 0.38492873311042786, 0.37401649355888367, 0.3680776357650757, 0.3678428828716278, 0.3543335795402527, 0.3520011007785797, 0.34229904413223267, 0.34293919801712036, 0.3377801179885864, 0.3293686807155609, 0.33026614785194397, 0.3210282325744629, 0.3177851438522339, 0.31051117181777954, 0.3046264350414276, 0.29918596148490906, 0.2961965501308441, 0.2955911457538605, 0.2929236590862274, 0.28514519333839417, 0.28358325362205505], "accuracy": [0.2715625464916229, 0.49108439683914185, 0.5732399821281433, 0.6147140264511108, 0.6647734642028809, 0.6984546184539795, 0.7199841737747192, 0.7349095344543457, 0.7445515990257263, 0.7613261342048645, 0.7717606425285339, 0.7839123010635376, 0.7872143983840942, 0.7967243194580078, 0.8031964302062988, 0.8042530417442322, 0.8090080618858337, 0.8133667707443237, 0.8214238286018372, 0.8219521641731262, 0.8189142942428589, 0.8315942287445068, 0.8323867321014404, 0.8379341959953308, 0.8379341959953308, 0.8451988101005554, 0.8412362933158875, 0.8511425256729126, 0.8533879518508911, 0.8521991968154907, 0.8561616539955139, 0.8628978729248047, 0.8564258217811584, 0.8636903762817383, 0.8644828796386719, 0.8679170608520508, 0.8681812286376953, 0.8714832663536072, 0.8722757697105408, 0.8755778670310974, 0.8745211958885193, 0.8808611631393433, 0.8816536664962769, 0.8811253309249878, 0.8858803510665894, 0.8842953443527222, 0.8861445188522339, 0.8883898854255676, 0.8897107243537903, 0.8919561505317688, 0.89552241563797, 0.8945978283882141, 0.8919561505317688, 0.8957865834236145], "val_loss": [2.0428614616394043, 1.5296437740325928, 1.0654667615890503, 0.8604651093482971, 0.7720746994018555, 0.712005615234375, 0.6651419997215271, 0.6275389194488525, 0.5996974110603333, 0.5781272053718567, 0.5618891716003418, 0.5445107221603394, 0.5253300666809082, 0.5142191648483276, 0.5040012001991272, 0.49454429745674133, 0.4866046607494354, 0.4731700122356415, 0.46685776114463806, 0.4788488447666168, 0.4517795145511627, 0.4472123086452484, 0.4464327394962311, 0.4374232292175293, 0.42898812890052795, 0.4278152585029602, 0.41453588008880615, 0.41443827748298645, 0.41249337792396545, 0.40538010001182556, 0.4036525785923004, 0.399099200963974, 0.3917686641216278, 0.3890293836593628, 0.39202189445495605, 0.3874908983707428, 0.38429003953933716, 0.38237619400024414, 0.38106095790863037, 0.3751034438610077, 0.3726227283477783, 0.37004175782203674, 0.37164366245269775, 0.3691098690032959, 0.36737149953842163, 0.3675733208656311, 0.36494579911231995, 0.3596431612968445, 0.3565498888492584, 0.3567638397216797, 0.3581658601760864, 0.3571936786174774, 0.35670968890190125, 0.3543391525745392], "val_accuracy": [0.515666663646698, 0.6386666893959045, 0.668666660785675, 0.6959999799728394, 0.7223333120346069, 0.737333357334137, 0.7490000128746033, 0.762666642665863, 0.7676666378974915, 0.777999997138977, 0.7829999923706055, 0.79666668176651, 0.8066666722297668, 0.8063333630561829, 0.8106666803359985, 0.8206666707992554, 0.8169999718666077, 0.8270000219345093, 0.8323333263397217, 0.8286666870117188, 0.8386666774749756, 0.8330000042915344, 0.8370000123977661, 0.843999981880188, 0.840666651725769, 0.840666651725769, 0.8460000157356262, 0.8476666808128357, 0.846666693687439, 0.846666693687439, 0.8519999980926514, 0.8543333411216736, 0.8553333282470703, 0.859000027179718, 0.8569999933242798, 0.859333336353302, 0.859666645526886, 0.859333336353302, 0.8576666712760925, 0.8619999885559082, 0.8640000224113464, 0.8656666874885559, 0.8636666536331177, 0.8636666536331177, 0.8636666536331177, 0.8690000176429749, 0.8669999837875366, 0.8656666874885559, 0.8733333349227905, 0.8696666955947876, 0.8683333396911621, 0.8706666827201843, 0.8700000047683716, 0.8730000257492065]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8248571157455444, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.545431137084961, 0.8009592890739441, 0.6503245830535889, 0.5861998200416565, 0.5640477538108826, 0.5256338715553284, 0.5222806930541992, 0.49434971809387207, 0.5017300844192505, 0.5024613738059998, 0.530444324016571, 0.553154468536377, 0.5792198181152344, 0.623437762260437, 0.5405244827270508, 0.5899019241333008, 0.579987108707428, 0.5778762102127075], "accuracy": [0.47668737173080444, 0.7148329019546509, 0.7662131786346436, 0.7840443849563599, 0.7961959838867188, 0.8195747137069702, 0.8074230551719666, 0.8203672170639038, 0.8207634687423706, 0.8240655064582825, 0.8157442808151245, 0.8038568496704102, 0.8220842480659485, 0.8043851256370544, 0.8144234418869019, 0.8125742673873901, 0.8049134612083435, 0.8136309385299683], "val_loss": [0.771675705909729, 0.6233182549476624, 0.5485021471977234, 0.518014669418335, 0.47698238492012024, 0.501944363117218, 0.5200371742248535, 0.5142339468002319, 0.5397101044654846, 0.5331818461418152, 0.581797182559967, 0.5914146304130554, 0.7098431587219238, 0.568436861038208, 0.6269152164459229, 0.6436236500740051, 0.6325289607048035, 0.6584315299987793], "val_accuracy": [0.7406666874885559, 0.7770000100135803, 0.8050000071525574, 0.8199999928474426, 0.8343333601951599, 0.8309999704360962, 0.8306666612625122, 0.8296666741371155, 0.8383333086967468, 0.8296666741371155, 0.8230000138282776, 0.8253333568572998, 0.8426666855812073, 0.8343333601951599, 0.8336666822433472, 0.8203333616256714, 0.8216666579246521, 0.8316666483879089]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 5], [0], [0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 7, 8, 6, 3, 5], [0, 0, 4, 2], [0, 60], [0, 1], [0], [1], [0]], "fitness": -0.8240000009536743, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(grad), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293461322784424, 2.189912796020508, 1.7801146507263184, 1.3522108793258667, 1.075964093208313, 0.9115472435951233, 0.8412403464317322, 0.8089638352394104, 0.7456406354904175, 0.7462878227233887, 0.7000132203102112, 0.6684094071388245, 0.65569007396698, 0.6227527856826782, 0.6030374765396118, 0.5777697563171387, 0.5837557315826416, 0.5586709380149841, 0.5501531362533569, 0.534411609172821, 0.52571702003479, 0.5236062407493591, 0.5076550245285034, 0.496632844209671, 0.4902604818344116, 0.47090232372283936, 0.4595024585723877, 0.46717333793640137, 0.45156776905059814, 0.44883424043655396, 0.4282054007053375, 0.4225183129310608, 0.4150674641132355, 0.4024902880191803, 0.39444398880004883, 0.3834775984287262, 0.37513530254364014, 0.3727063238620758, 0.3672381639480591, 0.3708304464817047, 0.36607980728149414, 0.3492765426635742, 0.3457389771938324, 0.3348260223865509, 0.33077311515808105, 0.32308611273765564, 0.3155408799648285, 0.3118009567260742, 0.32287538051605225, 0.31152886152267456, 0.30743834376335144, 0.30792734026908875, 0.2991296947002411, 0.2857826352119446, 0.28306740522384644, 0.27177128195762634, 0.2854767143726349, 0.2796564996242523, 0.27742764353752136, 0.28613120317459106, 0.29925158619880676, 0.2586474120616913, 0.2670283615589142, 0.27277639508247375, 0.26579001545906067, 0.2750881314277649], "accuracy": [0.1270637959241867, 0.3387927711009979, 0.4383833110332489, 0.5324263572692871, 0.6325452327728271, 0.6700568199157715, 0.6880200505256653, 0.702681303024292, 0.7061154246330261, 0.7096816897392273, 0.7375511527061462, 0.7449478507041931, 0.7475894689559937, 0.7642319202423096, 0.7681944370269775, 0.7790252566337585, 0.7802139520645142, 0.7858935594558716, 0.789459764957428, 0.7907806038856506, 0.7977809906005859, 0.7997622489929199, 0.8092722296714783, 0.8121780753135681, 0.8086118102073669, 0.8141592741012573, 0.8231409192085266, 0.8178576231002808, 0.8238013386726379, 0.8244617581367493, 0.8280280232429504, 0.8333113193511963, 0.8422929644584656, 0.8425571322441101, 0.846387505531311, 0.8507462739944458, 0.8568220734596252, 0.8582749962806702, 0.8558974862098694, 0.8573504090309143, 0.8603883385658264, 0.8673887252807617, 0.8691058158874512, 0.8716153502464294, 0.8730682730674744, 0.8779553771018982, 0.8739928603172302, 0.8828424215316772, 0.8762382864952087, 0.8796724081039429, 0.8791441321372986, 0.8817857503890991, 0.8820499181747437, 0.886672854423523, 0.8930128216743469, 0.8961827754974365, 0.8873332738876343, 0.8922203183174133, 0.8908994793891907, 0.8885219693183899, 0.8848236799240112, 0.8971073627471924, 0.8927486538887024, 0.8932769894599915, 0.89552241563797, 0.8877294659614563], "val_loss": [2.248231887817383, 2.0257742404937744, 1.1547155380249023, 0.9011272192001343, 0.7907015085220337, 0.7271713614463806, 0.702250063419342, 0.6709051728248596, 0.6445065140724182, 0.6197398900985718, 0.5902824997901917, 0.5758127570152283, 0.5594747066497803, 0.5460622310638428, 0.5395680069923401, 0.5307531952857971, 0.5268462896347046, 0.527487576007843, 0.5240365266799927, 0.5200910568237305, 0.5087466239929199, 0.4985389709472656, 0.5076395869255066, 0.48296183347702026, 0.4719999134540558, 0.4616432189941406, 0.46448564529418945, 0.4577244520187378, 0.45246782898902893, 0.4422944188117981, 0.4362945258617401, 0.4452434480190277, 0.44272342324256897, 0.4465456008911133, 0.4393558204174042, 0.4234643578529358, 0.41214653849601746, 0.41777706146240234, 0.41611894965171814, 0.4202575981616974, 0.4246279299259186, 0.4236738383769989, 0.4191184937953949, 0.43312540650367737, 0.45088666677474976, 0.4445066750049591, 0.42811766266822815, 0.42587199807167053, 0.41839390993118286, 0.4219515025615692, 0.42713215947151184, 0.4380892813205719, 0.4584886133670807, 0.4482390582561493, 0.4486423432826996, 0.46975550055503845, 0.49538445472717285, 0.4639603793621063, 0.46442025899887085, 0.49721232056617737, 0.474460244178772, 0.48076343536376953, 0.4900473654270172, 0.5080045461654663, 0.4871564209461212, 0.49990034103393555], "val_accuracy": [0.40933331847190857, 0.4763333201408386, 0.6273333430290222, 0.690666675567627, 0.706333339214325, 0.7260000109672546, 0.7416666746139526, 0.7476666569709778, 0.7443333268165588, 0.7596666812896729, 0.762333333492279, 0.7766666412353516, 0.7853333353996277, 0.7926666736602783, 0.7979999780654907, 0.8013333082199097, 0.8033333420753479, 0.7993333339691162, 0.8043333292007446, 0.8046666383743286, 0.8159999847412109, 0.8233333230018616, 0.8176666498184204, 0.8253333568572998, 0.8330000042915344, 0.8373333215713501, 0.8353333473205566, 0.8330000042915344, 0.8399999737739563, 0.8446666598320007, 0.843999981880188, 0.8383333086967468, 0.8473333120346069, 0.8533333539962769, 0.8536666631698608, 0.859000027179718, 0.8576666712760925, 0.8586666584014893, 0.8603333234786987, 0.8636666536331177, 0.8659999966621399, 0.8653333187103271, 0.8656666874885559, 0.8666666746139526, 0.8656666874885559, 0.8676666617393494, 0.8676666617393494, 0.8650000095367432, 0.8700000047683716, 0.8656666874885559, 0.8643333315849304, 0.8653333187103271, 0.8709999918937683, 0.8676666617393494, 0.8726666569709778, 0.8713333606719971, 0.8733333349227905, 0.8756666779518127, 0.871666669845581, 0.8673333525657654, 0.8769999742507935, 0.8653333187103271, 0.8700000047683716, 0.8646666407585144, 0.8663333058357239, 0.8696666955947876]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 10, 6, 4, 2, 2, 1, 1, 0], "tree_depth": 13}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 91], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 1, 2, 4, 5], [0, 0, 0, 3, 4, 5, 1], [16, 16, 21], [0, 0, 0, 1], [0, 8, 5], [0], [32], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 3, 6, 1, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [59, 7, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 16, 9, 7, 3, 4, 3, 1, 1, 17, 8, 9, 4], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.square(grad)))), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.square(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [2, 2, 3, 0, 0, 3, 0], [0, 1, 2, 2, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 2, 1, 4, 1, 2, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 5], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 1, 10, 6, 4, 2, 2, 1, 1, 1, 22, 11, 11, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(grad)), tf.math.multiply(grad, tf.math.negative(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 0], [39, 39, 83], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 0, 3, 5], [1, 2, 0, 3], [62, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [1, 3, 3, 6, 8, 1, 4, 1, 1, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 6, 4, 2, 0, 2, 1, 1, 0, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(alpha)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [58, 16], [0, 1], [0], [0], [13], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 1, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 0, 96, 11, 61, 1]], "fitness": -0.09342857450246811, "mapping_values": [1, 1, 0, 1, 0, 10, 6, 4, 1, 2, 1, 1, 1, 12, 6, 6, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), grad)))", "other_info": {"loss": [2.310980796813965, 2.3096365928649902, 2.3098623752593994, 2.3102762699127197, 2.311038017272949, 2.3090715408325195], "accuracy": [0.09034473448991776, 0.09034473448991776, 0.09694888442754745, 0.09034473448991776, 0.08796724677085876, 0.09642054885625839], "val_loss": [2.3083834648132324, 2.3083834648132324, 2.3083834648132324, 2.3083834648132324, 2.3083834648132324, 2.3083834648132324], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]