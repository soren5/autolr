[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8617143034934998, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2214558124542236, 1.8590689897537231, 1.3853259086608887, 1.0827949047088623, 0.9334380626678467, 0.83712238073349, 0.7674064040184021, 0.7137023210525513, 0.6861598491668701, 0.657658576965332, 0.6279170513153076, 0.6040922999382019, 0.586150586605072, 0.5782153606414795, 0.5558261871337891, 0.5388210415840149, 0.5281066298484802, 0.5201776623725891, 0.5101252198219299, 0.4961748719215393, 0.48361343145370483, 0.47243714332580566, 0.46209320425987244, 0.44910120964050293, 0.44847479462623596, 0.4314381182193756, 0.4336407482624054, 0.4228796064853668, 0.4113197922706604, 0.40569284558296204, 0.4009420871734619, 0.40078482031822205, 0.39210399985313416, 0.37949666380882263, 0.3718545138835907, 0.3693036139011383, 0.3678549826145172, 0.35369762778282166, 0.3552309274673462, 0.35068508982658386, 0.3461878001689911, 0.3356616497039795, 0.3350214958190918, 0.32711848616600037, 0.3275013864040375, 0.3190181255340576, 0.3122219741344452, 0.3095640242099762, 0.3053744435310364, 0.298200398683548], "accuracy": [0.2709021270275116, 0.48910316824913025, 0.5675604343414307, 0.6292431354522705, 0.6643772125244141, 0.6984546184539795, 0.7213049530982971, 0.7388719916343689, 0.7559106945991516, 0.7623828053474426, 0.7681944370269775, 0.783119797706604, 0.7862898111343384, 0.7921014428138733, 0.8021397590637207, 0.8034605979919434, 0.8088759779930115, 0.8142913579940796, 0.8144234418869019, 0.8169330358505249, 0.8276317715644836, 0.8290846943855286, 0.8360850811004639, 0.8425571322441101, 0.8359529972076416, 0.8457271456718445, 0.8401796221733093, 0.8444063067436218, 0.854708731174469, 0.8529917001724243, 0.854708731174469, 0.852331280708313, 0.8577466607093811, 0.8625016212463379, 0.8638224601745605, 0.8650112152099609, 0.8677849769592285, 0.8710870146751404, 0.8730682730674744, 0.8712190985679626, 0.8770307898521423, 0.8771628737449646, 0.8799365758895874, 0.8809932470321655, 0.8759741187095642, 0.8856161832809448, 0.8836349248886108, 0.8854840993881226, 0.8897107243537903, 0.8920882344245911], "val_loss": [2.0345287322998047, 1.5037099123001099, 1.0305858850479126, 0.8228115439414978, 0.7438869476318359, 0.6886513829231262, 0.6423689723014832, 0.6063002347946167, 0.5836012363433838, 0.5595334768295288, 0.5422439575195312, 0.5257906317710876, 0.5159377455711365, 0.5074667930603027, 0.4903723895549774, 0.4839388430118561, 0.4731939435005188, 0.46589162945747375, 0.45654842257499695, 0.4493117332458496, 0.44735822081565857, 0.4375423491001129, 0.4324517548084259, 0.42449870705604553, 0.41872987151145935, 0.4140106737613678, 0.4141955077648163, 0.40632525086402893, 0.406383216381073, 0.3988833725452423, 0.3960404396057129, 0.3923928141593933, 0.3911190629005432, 0.38993313908576965, 0.38261646032333374, 0.38892337679862976, 0.3804779350757599, 0.3786720037460327, 0.37591755390167236, 0.3737871050834656, 0.37014272809028625, 0.37150755524635315, 0.3683461844921112, 0.3835839331150055, 0.3651258945465088, 0.36521467566490173, 0.3636131286621094, 0.35865673422813416, 0.35611939430236816, 0.3562858998775482], "val_accuracy": [0.5360000133514404, 0.6579999923706055, 0.6899999976158142, 0.7206666469573975, 0.7369999885559082, 0.7540000081062317, 0.7710000276565552, 0.777999997138977, 0.7866666913032532, 0.7960000038146973, 0.8056666851043701, 0.8116666674613953, 0.8116666674613953, 0.8199999928474426, 0.8270000219345093, 0.8266666531562805, 0.8339999914169312, 0.8343333601951599, 0.8403333425521851, 0.840666651725769, 0.8403333425521851, 0.8460000157356262, 0.8450000286102295, 0.8493333458900452, 0.8539999723434448, 0.8516666889190674, 0.8543333411216736, 0.856333315372467, 0.8600000143051147, 0.859666645526886, 0.859000027179718, 0.8616666793823242, 0.8616666793823242, 0.8650000095367432, 0.8656666874885559, 0.8676666617393494, 0.8686666488647461, 0.8700000047683716, 0.8730000257492065, 0.8709999918937683, 0.8733333349227905, 0.8723333477973938, 0.875, 0.8606666922569275, 0.8786666393280029, 0.8759999871253967, 0.8740000128746033, 0.8763333559036255, 0.8769999742507935, 0.875]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8217142820358276, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4858758449554443, 0.7974637150764465, 0.7001490592956543, 0.6110370755195618, 0.5496258735656738, 0.5141271352767944, 0.4718342423439026, 0.4642525911331177, 0.4707311987876892, 0.44313186407089233, 0.42529207468032837, 0.42108049988746643, 0.47704946994781494, 0.4880702495574951, 0.498321533203125, 0.4836618900299072, 0.4887112081050873, 0.49307677149772644, 0.5206189751625061, 0.5247511863708496], "accuracy": [0.49729230999946594, 0.724210798740387, 0.7500990629196167, 0.7800818681716919, 0.7979130744934082, 0.8171972036361694, 0.8337075710296631, 0.8384625315666199, 0.8359529972076416, 0.8426892161369324, 0.8457271456718445, 0.8516708612442017, 0.848368763923645, 0.8411042094230652, 0.8400475382804871, 0.844010055065155, 0.8244617581367493, 0.8418967127799988, 0.8392550349235535, 0.8389908671379089], "val_loss": [0.7381183505058289, 0.686337411403656, 0.5411649942398071, 0.4857437014579773, 0.49801403284072876, 0.4566926956176758, 0.4613511562347412, 0.5010191202163696, 0.50177401304245, 0.44528353214263916, 0.5197693705558777, 0.5973582863807678, 0.6063849329948425, 0.5593721866607666, 0.5890077948570251, 0.5675621628761292, 0.4800265431404114, 0.5674698352813721, 0.6708084940910339, 0.6685315370559692], "val_accuracy": [0.7293333411216736, 0.75, 0.8019999861717224, 0.8186666369438171, 0.8236666917800903, 0.8243333101272583, 0.8263333439826965, 0.8346666693687439, 0.8370000123977661, 0.8513333201408386, 0.8510000109672546, 0.8450000286102295, 0.8303333520889282, 0.8386666774749756, 0.8529999852180481, 0.8383333086967468, 0.8446666598320007, 0.8460000157356262, 0.840666651725769, 0.843666672706604]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0], [0, 1, 9], [0], [0, 67], [0, 0, 0, 0], [0, 3, 9, 9], [0], [0, 78], [0, 1], [0], [1], [0]], "fitness": -0.8140000104904175, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2911417484283447, 2.188800096511841, 1.7674320936203003, 1.3405215740203857, 1.0786796808242798, 0.91680908203125, 0.8533777594566345, 0.7930960655212402, 0.753161609172821, 0.7211245894432068, 0.695129930973053, 0.6801239848136902, 0.6395290493965149, 0.6140845417976379, 0.5978361964225769, 0.6007330417633057, 0.5732267498970032, 0.556298017501831, 0.542992889881134, 0.5415567755699158, 0.5330007076263428, 0.5193447470664978, 0.5064523816108704, 0.5029152631759644, 0.49430814385414124, 0.4776824116706848, 0.48206716775894165, 0.45114365220069885, 0.4433765113353729, 0.43276432156562805, 0.4390926659107208, 0.4226033687591553, 0.4287569224834442, 0.41120249032974243, 0.41085344552993774, 0.39431139826774597, 0.3906753361225128, 0.396867036819458, 0.39106184244155884, 0.3846069276332855, 0.3616802990436554, 0.3801857531070709, 0.36182931065559387, 0.36301469802856445, 0.35923314094543457], "accuracy": [0.1402720957994461, 0.3155461549758911, 0.4294016659259796, 0.5489367246627808, 0.6415268778800964, 0.6804913282394409, 0.691850483417511, 0.7128516435623169, 0.7063795924186707, 0.7160216569900513, 0.7396644949913025, 0.7412495017051697, 0.7580240368843079, 0.7680623531341553, 0.7705719470977783, 0.7753269076347351, 0.783119797706604, 0.7893276810646057, 0.7940827012062073, 0.7952714562416077, 0.7991018295288086, 0.8012151718139648, 0.807158887386322, 0.8086118102073669, 0.8121780753135681, 0.8193105459213257, 0.8164047002792358, 0.8255184292793274, 0.828292191028595, 0.8358209133148193, 0.8330471515655518, 0.8379341959953308, 0.8348963260650635, 0.844010055065155, 0.8467837572097778, 0.8496896028518677, 0.8508783578872681, 0.846387505531311, 0.8474441766738892, 0.8511425256729126, 0.8619733452796936, 0.8570862412452698, 0.8619733452796936, 0.8556333184242249, 0.8558974862098694], "val_loss": [2.246427297592163, 2.0138654708862305, 1.1320953369140625, 0.8866701722145081, 0.7488351464271545, 0.6980314254760742, 0.6470213532447815, 0.6325814723968506, 0.6186901926994324, 0.5801712870597839, 0.5660692453384399, 0.542405903339386, 0.5381135940551758, 0.5270716547966003, 0.5095728635787964, 0.4948771893978119, 0.5030550360679626, 0.4944767355918884, 0.4828146994113922, 0.48302921652793884, 0.4728357195854187, 0.4609827399253845, 0.4536575376987457, 0.4445200264453888, 0.44325944781303406, 0.45726457238197327, 0.44760826230049133, 0.4294751286506653, 0.43328067660331726, 0.4285082519054413, 0.42559677362442017, 0.4215078055858612, 0.40829452872276306, 0.412458211183548, 0.4089806377887726, 0.39918577671051025, 0.40514424443244934, 0.4183623492717743, 0.40847834944725037, 0.4013558030128479, 0.41527706384658813, 0.39841926097869873, 0.3896946609020233, 0.39762043952941895, 0.40612101554870605], "val_accuracy": [0.41466665267944336, 0.47333332896232605, 0.6576666831970215, 0.6896666884422302, 0.7326666712760925, 0.7440000176429749, 0.7573333382606506, 0.7433333396911621, 0.7570000290870667, 0.7746666669845581, 0.7776666879653931, 0.7906666398048401, 0.79666668176651, 0.8069999814033508, 0.8086666464805603, 0.8146666884422302, 0.8149999976158142, 0.8096666932106018, 0.8199999928474426, 0.8149999976158142, 0.8226666450500488, 0.8333333134651184, 0.8306666612625122, 0.8299999833106995, 0.8366666436195374, 0.8360000252723694, 0.8296666741371155, 0.8399999737739563, 0.8403333425521851, 0.8453333377838135, 0.846666693687439, 0.8416666388511658, 0.8479999899864197, 0.8510000109672546, 0.8560000061988831, 0.8546666502952576, 0.8486666679382324, 0.846666693687439, 0.8546666502952576, 0.862333357334137, 0.8583333492279053, 0.8619999885559082, 0.8613333106040955, 0.8586666584014893, 0.859666645526886]}, "mapping_values": [1, 10, 5, 5, 3, 4, 3, 1, 2, 4, 4, 0, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 2, 3, 3, 3, 9], [2, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 0, 2, 0, 3, 1, 0], [6, 16, 20], [0, 1], [0, 1], [0, 3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [8, 4, 4, 6, 1, 0, 5, 4, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0, 13, 72, 68, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 1, 10, 6, 4, 3, 2, 1, 1, 1, 15, 9, 6, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(grad, alpha), tf.math.multiply(grad, grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.pow(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), sigma)), tf.math.pow(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [9, 2, 3, 0, 3, 1], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 9, 8, 1, 4, 1, 4, 2, 8, 7], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 21, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(tf.math.add(alpha, beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}, "mapping_values": [1, 2, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 21, 12, 9, 6], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [17, 39, 93], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 1, 6, 0, 3, 5, 7, 2, 7, 9], [0, 2, 3, 3, 0, 4], [67, 16, 33], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 0, 0, 1, 0, 4, 4, 3, 2, 3], [16, 99, 96, 85, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 16, 10, 6, 3, 2, 1, 1, 1, 21, 11, 10, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.add(grad, tf.math.add(tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad)))), sigma), tf.math.add(tf.math.sqrt(beta), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0], [0, 1, 3, 1, 3], [3, 1, 0, 2, 1], [39, 39], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 8, 3, 0], [5, 2, 0, 0], [30, 87], [0, 0, 1, 1], [0, 2], [0, 7], [99], [0, 1, 1], [8, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 0, 6, 3, 3, 1, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(grad, alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.subtract(grad, beta), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]