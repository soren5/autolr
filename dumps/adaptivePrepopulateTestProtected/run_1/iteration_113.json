[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2239060401916504, 1.8678350448608398, 1.400795817375183, 1.0930135250091553, 0.9348904490470886, 0.8369361162185669, 0.7699662446975708, 0.718891978263855, 0.6951892375946045, 0.6530970335006714, 0.6263439655303955, 0.6007702350616455, 0.5817314982414246, 0.5675549507141113, 0.5629268884658813, 0.5371110439300537, 0.5317068696022034, 0.5098989605903625, 0.49416831135749817, 0.48740747570991516, 0.4898717403411865, 0.4655618965625763, 0.45554789900779724, 0.44325554370880127, 0.43969276547431946, 0.4282120168209076, 0.42316892743110657, 0.4220808446407318, 0.41693517565727234, 0.40554139018058777, 0.39656469225883484, 0.39409339427948, 0.38237252831459045, 0.3795544505119324, 0.37932640314102173, 0.37046119570732117, 0.3722361922264099, 0.36285170912742615, 0.35624778270721436, 0.34453773498535156, 0.3457854688167572, 0.33583974838256836, 0.33208104968070984, 0.3273039758205414], "accuracy": [0.28080835938453674, 0.5001981258392334, 0.5684850215911865, 0.6186765432357788, 0.6676793098449707, 0.7053229212760925, 0.7243428826332092, 0.7371549606323242, 0.750759482383728, 0.7626469135284424, 0.7745344042778015, 0.7835160493850708, 0.7913089394569397, 0.7897239327430725, 0.7972526550292969, 0.8057059645652771, 0.8098005652427673, 0.8203672170639038, 0.8224804997444153, 0.8226125836372375, 0.8281601071357727, 0.8334434032440186, 0.8397833704948425, 0.8387266993522644, 0.8436138033866882, 0.8492933511734009, 0.8485008478164673, 0.8511425256729126, 0.8512746095657349, 0.8531237840652466, 0.8598600029945374, 0.8593316674232483, 0.8654074668884277, 0.8625016212463379, 0.8639545440673828, 0.8705587387084961, 0.8687095642089844, 0.8705587387084961, 0.8710870146751404, 0.873860776424408, 0.8741249442100525, 0.8821820020675659, 0.8815215826034546, 0.8808611631393433], "val_loss": [2.041283130645752, 1.5173696279525757, 1.0409939289093018, 0.8349230289459229, 0.7478477358818054, 0.6945333480834961, 0.6492171287536621, 0.6180582642555237, 0.5915132164955139, 0.5725072622299194, 0.554328203201294, 0.5315608978271484, 0.5186874866485596, 0.5075413584709167, 0.49457553029060364, 0.4868469536304474, 0.47740477323532104, 0.46740618348121643, 0.45819202065467834, 0.45278605818748474, 0.4461159408092499, 0.4405263364315033, 0.4332437217235565, 0.42424726486206055, 0.4259486496448517, 0.4152035415172577, 0.41090840101242065, 0.4062424600124359, 0.40795549750328064, 0.39921605587005615, 0.39479711651802063, 0.3905344307422638, 0.3862092196941376, 0.38672542572021484, 0.38370466232299805, 0.37953096628189087, 0.37709033489227295, 0.3774678111076355, 0.3735886216163635, 0.3724479079246521, 0.3680781126022339, 0.36900854110717773, 0.36566561460494995, 0.3618515133857727], "val_accuracy": [0.5383333563804626, 0.6503333449363708, 0.6809999942779541, 0.7059999704360962, 0.7286666631698608, 0.7509999871253967, 0.7563333511352539, 0.7630000114440918, 0.7853333353996277, 0.7889999747276306, 0.7950000166893005, 0.8100000023841858, 0.8116666674613953, 0.8163333535194397, 0.8209999799728394, 0.8206666707992554, 0.8233333230018616, 0.8246666789054871, 0.8299999833106995, 0.831333339214325, 0.8336666822433472, 0.8373333215713501, 0.8416666388511658, 0.843999981880188, 0.8453333377838135, 0.8493333458900452, 0.8510000109672546, 0.8526666760444641, 0.8479999899864197, 0.8523333072662354, 0.8546666502952576, 0.8569999933242798, 0.8610000014305115, 0.8616666793823242, 0.8553333282470703, 0.8619999885559082, 0.8600000143051147, 0.8616666793823242, 0.8656666874885559, 0.8613333106040955, 0.8643333315849304, 0.8646666407585144, 0.8650000095367432, 0.8656666874885559]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], [0, 6, 7, 8, 1, 4, 4, 0, 0, 9, 9], [0, 2, 3, 1], [0, 45, 94], [0, 0], [0, 9], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8577142953872681, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), grad), tf.math.pow(tf.math.pow(tf.math.negative(alpha), tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2928593158721924, 2.188896656036377, 1.766840934753418, 1.3504209518432617, 1.0701550245285034, 0.9186136722564697, 0.8354654908180237, 0.7883940935134888, 0.7421444654464722, 0.7295370101928711, 0.6854015588760376, 0.673937201499939, 0.645973265171051, 0.6180019378662109, 0.6043458580970764, 0.6001428365707397, 0.5865788459777832, 0.570159912109375, 0.5738207101821899, 0.5602279305458069, 0.5502669215202332, 0.5300921201705933, 0.52425616979599, 0.5129086375236511, 0.5073777437210083, 0.49421581625938416, 0.48626983165740967, 0.4501945972442627, 0.4615018963813782, 0.44489702582359314, 0.4341484010219574, 0.4314936697483063, 0.4171808063983917, 0.4055706858634949, 0.40580153465270996, 0.3896133303642273, 0.39056241512298584, 0.3733384311199188, 0.35990282893180847, 0.3783058822154999, 0.3522365689277649, 0.34882652759552, 0.3444252908229828, 0.33751681447029114, 0.3350242078304291, 0.3409755229949951, 0.3423129916191101, 0.32829996943473816, 0.3073277175426483, 0.3184267580509186, 0.31579554080963135, 0.293413907289505, 0.30069035291671753, 0.2928783595561981, 0.28834331035614014, 0.2858675718307495, 0.28716132044792175, 0.2840263843536377, 0.2761370837688446, 0.2642914056777954, 0.25989243388175964], "accuracy": [0.13181878626346588, 0.3333773612976074, 0.4403645396232605, 0.548540472984314, 0.635451078414917, 0.6742834448814392, 0.6919825673103333, 0.7036058902740479, 0.7092854380607605, 0.7164179086685181, 0.7416457533836365, 0.746268630027771, 0.7555144429206848, 0.76106196641922, 0.7650244235992432, 0.774798572063446, 0.7773081660270691, 0.7786290049552917, 0.7827235460281372, 0.7876105904579163, 0.7877426743507385, 0.7991018295288086, 0.7988376617431641, 0.8038568496704102, 0.8050455451011658, 0.8112534880638123, 0.8202351331710815, 0.8255184292793274, 0.824329674243927, 0.8305375576019287, 0.8341038227081299, 0.8309338092803955, 0.8380662798881531, 0.847840428352356, 0.8441421389579773, 0.8531237840652466, 0.8521991968154907, 0.8569541573524475, 0.863558292388916, 0.854708731174469, 0.8658037185668945, 0.863029956817627, 0.8688416481018066, 0.8725399374961853, 0.8704266548156738, 0.8646149635314941, 0.8687095642089844, 0.8656716346740723, 0.8775591254234314, 0.8794082403182983, 0.8761062026023865, 0.8824461698532104, 0.8831065893173218, 0.8860124349594116, 0.8848236799240112, 0.8831065893173218, 0.8905032277107239, 0.8911636471748352, 0.8902390599250793, 0.8952582478523254, 0.897899866104126], "val_loss": [2.245215654373169, 2.0133392810821533, 1.1215966939926147, 0.8314700722694397, 0.7562114000320435, 0.6947550177574158, 0.650923490524292, 0.6332073211669922, 0.6306700706481934, 0.6177753210067749, 0.5796894431114197, 0.5559190511703491, 0.5426931381225586, 0.5415749549865723, 0.5503119230270386, 0.5260820388793945, 0.5169187188148499, 0.5239571928977966, 0.5159657597541809, 0.5019763112068176, 0.507024884223938, 0.49582013487815857, 0.4854036569595337, 0.4866999089717865, 0.4807341992855072, 0.47749271988868713, 0.472279816865921, 0.45646220445632935, 0.4477972686290741, 0.44724324345588684, 0.45431745052337646, 0.45076993107795715, 0.4465360641479492, 0.44635507464408875, 0.4525902569293976, 0.44529232382774353, 0.43913525342941284, 0.43738457560539246, 0.43183329701423645, 0.4292793869972229, 0.43049588799476624, 0.4367443919181824, 0.4454288184642792, 0.446463942527771, 0.4544956088066101, 0.4656875431537628, 0.4544917941093445, 0.4468676745891571, 0.4547176957130432, 0.44926977157592773, 0.43593665957450867, 0.43548643589019775, 0.4342949092388153, 0.43630877137184143, 0.43160107731819153, 0.44781970977783203, 0.46393823623657227, 0.4641709327697754, 0.47668489813804626, 0.4634250998497009, 0.4725736975669861], "val_accuracy": [0.4206666648387909, 0.4963333308696747, 0.6499999761581421, 0.7006666660308838, 0.7260000109672546, 0.7450000047683716, 0.7463333606719971, 0.7603333592414856, 0.7646666765213013, 0.7723333239555359, 0.7773333191871643, 0.7850000262260437, 0.7946666479110718, 0.7986666560173035, 0.7929999828338623, 0.796999990940094, 0.8069999814033508, 0.8073333501815796, 0.8086666464805603, 0.8169999718666077, 0.8119999766349792, 0.8183333277702332, 0.8243333101272583, 0.8256666660308838, 0.8233333230018616, 0.8339999914169312, 0.8363333344459534, 0.8333333134651184, 0.8336666822433472, 0.8339999914169312, 0.8429999947547913, 0.8426666855812073, 0.8410000205039978, 0.846666693687439, 0.8496666550636292, 0.856333315372467, 0.8543333411216736, 0.856333315372467, 0.8619999885559082, 0.8606666922569275, 0.859666645526886, 0.8606666922569275, 0.862333357334137, 0.8616666793823242, 0.856333315372467, 0.8529999852180481, 0.8600000143051147, 0.8683333396911621, 0.8640000224113464, 0.8610000014305115, 0.8696666955947876, 0.8663333058357239, 0.8646666407585144, 0.8643333315849304, 0.8676666617393494, 0.871666669845581, 0.8713333606719971, 0.8679999709129333, 0.8610000014305115, 0.8659999966621399, 0.8706666827201843]}, "mapping_values": [1, 10, 5, 5, 3, 15, 11, 4, 3, 2, 2, 0, 1, 2, 1, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8322857022285461, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6828718185424805, 0.9010284543037415, 0.7188425064086914, 0.624427855014801, 0.5775800347328186, 0.5326123237609863, 0.5143505930900574, 0.49384748935699463, 0.4813348054885864, 0.4665268063545227, 0.4765388071537018, 0.5096197724342346, 0.4979666471481323, 0.4813626706600189, 0.49937230348587036, 0.4869404733181, 0.48838070034980774, 0.48850178718566895, 0.4873497188091278], "accuracy": [0.4469687044620514, 0.6822084188461304, 0.7429665923118591, 0.767401933670044, 0.7857614755630493, 0.8076872229576111, 0.8216879963874817, 0.8245938420295715, 0.8224804997444153, 0.8239334225654602, 0.8325188159942627, 0.8222163319587708, 0.8226125836372375, 0.8405758738517761, 0.8384625315666199, 0.8271034359931946, 0.8392550349235535, 0.8207634687423706, 0.8329150676727295], "val_loss": [0.856657087802887, 0.683464527130127, 0.5804942846298218, 0.5308142304420471, 0.5170129537582397, 0.49627283215522766, 0.5135502219200134, 0.5052440166473389, 0.5220977067947388, 0.46593132615089417, 0.5488152503967285, 0.5036789774894714, 0.5126901268959045, 0.5182384252548218, 0.5175275206565857, 0.5237996578216553, 0.5184438228607178, 0.5164908766746521, 0.5602182149887085], "val_accuracy": [0.6896666884422302, 0.7480000257492065, 0.781000018119812, 0.8009999990463257, 0.815666675567627, 0.8216666579246521, 0.8159999847412109, 0.8306666612625122, 0.8289999961853027, 0.8399999737739563, 0.8296666741371155, 0.828000009059906, 0.8366666436195374, 0.8433333039283752, 0.8373333215713501, 0.8383333086967468, 0.8376666903495789, 0.8373333215713501, 0.8360000252723694]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 6, 3, 7, 7, 4, 2, 6, 5, 3, 9, 1, 4, 4, 0, 6, 9, 2, 1, 0, 2, 0, 5, 4, 4], [1, 1, 0, 2, 2, 0, 3, 2, 1, 0, 0, 0, 3, 1, 3, 0, 3, 0], [83, 5, 27, 28, 7, 99, 67, 37, 70], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 7, 3, 0, 3, 5, 5, 6, 9], [0, 4, 3, 4], [16, 16], [0, 1], [0], [0], [0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [6, 3, 3, 6, 5, 1, 4, 1, 4, 2, 8], [1, 3, 0, 2, 2, 0, 2, 3], [0, 65]], "fitness": -0.10000000149011612, "mapping_values": [1, 45, 27, 18, 9, 13, 9, 4, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, grad)), tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)))), tf.math.subtract(tf.math.pow(tf.math.pow(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.subtract(tf.math.negative(tf.math.add(grad, alpha)), tf.math.negative(tf.math.square(grad))), tf.math.pow(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(grad), tf.math.square(grad))), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 2], [0, 1, 0, 0, 2], [31, 39, 99], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 2, 0, 3, 5], [0, 3, 3, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 18, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 9, 5, 4, 1, 1, 0, 1, 1, 18, 9, 9, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3, 1, 3], [0, 1, 0, 2, 0, 1], [39, 39, 83], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 99], [0, 0, 1, 0, 1, 0, 0, 1], [0, 7, 4, 1, 9], [0, 3, 7], [99, 17], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [6, 3, 3, 6, 8, 2, 4, 1, 1, 6, 8], [4, 0, 0, 3, 0, 2, 1, 1, 2, 0], [90, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 3, 10, 6, 4, 2, 8, 5, 3, 2, 16, 8, 8, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.subtract(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(beta, tf.math.subtract(alpha, alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1352529376745224, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 6], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [3], [39], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 5], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09057142585515976, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 2, 1, 1, 0, 22, 12, 10, 5], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.divide_no_nan(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), tf.math.subtract(grad, tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.square(alpha))))))), beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3088066577911377, 2.3094794750213623, 2.3101189136505127, 2.309687614440918, 2.3074426651000977, 2.309206485748291], "accuracy": [0.09536388516426086, 0.09087307006120682, 0.09113723784685135, 0.08955223858356476, 0.09959053993225098, 0.09351472556591034], "val_loss": [2.3081064224243164, 2.3081064224243164, 2.3081064224243164, 2.3081064224243164, 2.3081064224243164, 2.3081064224243164], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]