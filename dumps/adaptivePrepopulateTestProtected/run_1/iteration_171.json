[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8631428480148315, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221543788909912, 1.8635849952697754, 1.3863714933395386, 1.0792008638381958, 0.9450228214263916, 0.8469656705856323, 0.7731990814208984, 0.7243092060089111, 0.6882336735725403, 0.6684259176254272, 0.6292397975921631, 0.6238495111465454, 0.5946426391601562, 0.5836036205291748, 0.561007022857666, 0.5537955164909363, 0.5378190875053406, 0.5254619121551514, 0.5120406746864319, 0.5074493288993835, 0.4933045208454132, 0.48993250727653503, 0.47905370593070984, 0.47992369532585144, 0.45978567004203796, 0.4481406509876251, 0.4397394061088562, 0.4334079325199127, 0.43432027101516724, 0.41779977083206177, 0.41497907042503357, 0.40602561831474304, 0.4017193913459778, 0.3915797173976898, 0.39807820320129395, 0.382921040058136, 0.3778364658355713, 0.3801044821739197, 0.3728920519351959, 0.3612802028656006, 0.36114081740379333, 0.35447803139686584, 0.35108235478401184, 0.3424859046936035, 0.34284862875938416, 0.33639761805534363, 0.32965564727783203, 0.3253192901611328, 0.3161334693431854, 0.3145560324192047, 0.3137325346469879, 0.3023443818092346, 0.2980912923812866, 0.2988441586494446, 0.29393506050109863, 0.28942593932151794, 0.28103557229042053, 0.2821540832519531, 0.2712376117706299, 0.2791772186756134, 0.2688368558883667, 0.2702438533306122, 0.25963640213012695], "accuracy": [0.28120461106300354, 0.488971084356308, 0.5665037631988525, 0.6185444593429565, 0.6586976647377014, 0.6923788189888, 0.717870831489563, 0.7329282760620117, 0.7432307600975037, 0.7585523724555969, 0.7675340175628662, 0.770439863204956, 0.7823272943496704, 0.7878747582435608, 0.7907806038856506, 0.7981772422790527, 0.8057059645652771, 0.8101968169212341, 0.8144234418869019, 0.8191784620285034, 0.8248580098152161, 0.8259146809577942, 0.8264430165290833, 0.8284242749214172, 0.837141752243042, 0.8384625315666199, 0.8409721255302429, 0.8471800088882446, 0.8450667262077332, 0.8492933511734009, 0.8540483713150024, 0.8593316674232483, 0.8598600029945374, 0.8601241707801819, 0.8619733452796936, 0.8632941246032715, 0.8646149635314941, 0.8656716346740723, 0.8721436858177185, 0.8725399374961853, 0.8702945709228516, 0.8741249442100525, 0.8735966086387634, 0.880729079246521, 0.882710337638855, 0.8795403242111206, 0.8870691061019897, 0.8868049383163452, 0.887597382068634, 0.8887861371040344, 0.8865407705307007, 0.8931449055671692, 0.8945978283882141, 0.8943336606025696, 0.8952582478523254, 0.8982961177825928, 0.9001452922821045, 0.8961827754974365, 0.9056927561759949, 0.8996169567108154, 0.9035794734954834, 0.9038436412811279, 0.9068815112113953], "val_loss": [2.0299794673919678, 1.4941450357437134, 1.0229170322418213, 0.8217813968658447, 0.7353017330169678, 0.6802608370780945, 0.6350482702255249, 0.6004538536071777, 0.5787099599838257, 0.5614688992500305, 0.5361737608909607, 0.5288458466529846, 0.5186395049095154, 0.49822983145713806, 0.49619820713996887, 0.4813363552093506, 0.4730145335197449, 0.464188814163208, 0.45196402072906494, 0.44530412554740906, 0.44973039627075195, 0.4321051836013794, 0.4365500807762146, 0.42739835381507874, 0.4166595935821533, 0.4066431522369385, 0.4023778438568115, 0.4009588956832886, 0.39543452858924866, 0.39131486415863037, 0.3869556188583374, 0.38502955436706543, 0.3806111514568329, 0.3806059658527374, 0.37515413761138916, 0.3738279938697815, 0.37201473116874695, 0.36673682928085327, 0.3666864037513733, 0.36446261405944824, 0.3567692041397095, 0.3623519241809845, 0.35527586936950684, 0.3531285524368286, 0.3531740605831146, 0.3513718247413635, 0.34714582562446594, 0.34462353587150574, 0.344620943069458, 0.3437357246875763, 0.34077492356300354, 0.3389238715171814, 0.3387235105037689, 0.3420453667640686, 0.3334836959838867, 0.33362674713134766, 0.3319835960865021, 0.332604318857193, 0.3390137255191803, 0.33808431029319763, 0.33034998178482056, 0.33902788162231445, 0.3304259777069092], "val_accuracy": [0.5566666722297668, 0.6766666769981384, 0.6853333115577698, 0.7120000123977661, 0.7329999804496765, 0.7519999742507935, 0.765666663646698, 0.7696666717529297, 0.7760000228881836, 0.7836666703224182, 0.7979999780654907, 0.8033333420753479, 0.7979999780654907, 0.8133333325386047, 0.815666675567627, 0.8236666917800903, 0.8243333101272583, 0.8263333439826965, 0.8320000171661377, 0.8376666903495789, 0.8363333344459534, 0.8443333506584167, 0.8370000123977661, 0.8446666598320007, 0.847000002861023, 0.8526666760444641, 0.856333315372467, 0.8523333072662354, 0.856333315372467, 0.859333336353302, 0.862333357334137, 0.8579999804496765, 0.8669999837875366, 0.8613333106040955, 0.8663333058357239, 0.8676666617393494, 0.8633333444595337, 0.8696666955947876, 0.8646666407585144, 0.8693333268165588, 0.8713333606719971, 0.8669999837875366, 0.8709999918937683, 0.871666669845581, 0.8723333477973938, 0.875333309173584, 0.8763333559036255, 0.8759999871253967, 0.8790000081062317, 0.8736666440963745, 0.8769999742507935, 0.878000020980835, 0.8816666603088379, 0.8773333430290222, 0.8823333382606506, 0.8799999952316284, 0.8836666941642761, 0.8846666812896729, 0.8766666650772095, 0.878333330154419, 0.8803333044052124, 0.8793333172798157, 0.8820000290870667]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1, 0, 1], [0, 6, 8], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8602856993675232, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2934744358062744, 2.1876559257507324, 1.7603797912597656, 1.3335975408554077, 1.0709118843078613, 0.9190143346786499, 0.8427389860153198, 0.8042682409286499, 0.7575342059135437, 0.742668628692627, 0.6975148320198059, 0.6554184556007385, 0.6414691209793091, 0.610191822052002, 0.592210590839386, 0.5656941533088684, 0.5573328733444214, 0.5697701573371887, 0.5430710315704346, 0.5279313325881958, 0.5116974115371704, 0.5019426345825195, 0.5100333094596863, 0.4900040924549103, 0.48049089312553406, 0.4737570583820343, 0.46482792496681213, 0.453056663274765, 0.4441538453102112, 0.435935914516449, 0.42479926347732544, 0.4154326021671295, 0.40927353501319885, 0.4112602472305298, 0.4001474976539612, 0.3890300691127777, 0.38065922260284424, 0.3867936134338379, 0.3768780529499054, 0.372840940952301, 0.3619154691696167, 0.3576662540435791, 0.33615127205848694, 0.3472341299057007, 0.34057894349098206, 0.33633923530578613, 0.32259759306907654], "accuracy": [0.1224408894777298, 0.34064191579818726, 0.447761207818985, 0.5478800535202026, 0.6328094005584717, 0.6621318459510803, 0.6964733600616455, 0.6999075412750244, 0.7107383608818054, 0.7103421092033386, 0.7343811988830566, 0.7514199018478394, 0.7489103078842163, 0.7625148296356201, 0.7703077793121338, 0.7784969210624695, 0.7792893648147583, 0.7765156626701355, 0.7872143983840942, 0.7877426743507385, 0.8061022162437439, 0.8090080618858337, 0.8037247657775879, 0.811649739742279, 0.8128384351730347, 0.8186501264572144, 0.8260467648506165, 0.8335754871368408, 0.832650899887085, 0.8396512866020203, 0.8405758738517761, 0.8379341959953308, 0.8417646288871765, 0.8438779711723328, 0.8525954484939575, 0.8515387773513794, 0.8521991968154907, 0.8518029451370239, 0.8580108284950256, 0.8565579056739807, 0.8599920868873596, 0.8627657890319824, 0.8725399374961853, 0.8646149635314941, 0.863029956817627, 0.8710870146751404, 0.8683133125305176], "val_loss": [2.245213747024536, 2.0128931999206543, 1.1323497295379639, 0.9014925360679626, 0.7735870480537415, 0.731248140335083, 0.6891050338745117, 0.6595521569252014, 0.652138352394104, 0.6157078742980957, 0.5996187925338745, 0.5578038096427917, 0.5447249412536621, 0.5487844347953796, 0.5293456315994263, 0.5208585858345032, 0.5210477709770203, 0.5105466842651367, 0.4932025671005249, 0.500456690788269, 0.48709192872047424, 0.49085816740989685, 0.4642913043498993, 0.4661700129508972, 0.4727373421192169, 0.4640560448169708, 0.4524799883365631, 0.4553656280040741, 0.45221126079559326, 0.4349004030227661, 0.4306347370147705, 0.450704962015152, 0.4341069757938385, 0.4262104034423828, 0.437608003616333, 0.4416397213935852, 0.41257724165916443, 0.3997926712036133, 0.4210532307624817, 0.4239276945590973, 0.40775007009506226, 0.3954683542251587, 0.4135896861553192, 0.42145296931266785, 0.4194733202457428, 0.41343724727630615, 0.40560537576675415], "val_accuracy": [0.4359999895095825, 0.48533332347869873, 0.6466666460037231, 0.6826666593551636, 0.7176666855812073, 0.7210000157356262, 0.746999979019165, 0.7490000128746033, 0.7596666812896729, 0.7689999938011169, 0.762666642665863, 0.7860000133514404, 0.7950000166893005, 0.7903333306312561, 0.7983333468437195, 0.8056666851043701, 0.8013333082199097, 0.8080000281333923, 0.8216666579246521, 0.8066666722297668, 0.8180000185966492, 0.8169999718666077, 0.8306666612625122, 0.8236666917800903, 0.8256666660308838, 0.8366666436195374, 0.8383333086967468, 0.8323333263397217, 0.8423333168029785, 0.8433333039283752, 0.8426666855812073, 0.840666651725769, 0.8516666889190674, 0.8496666550636292, 0.8493333458900452, 0.8483333587646484, 0.8519999980926514, 0.8579999804496765, 0.8483333587646484, 0.8529999852180481, 0.8573333621025085, 0.8643333315849304, 0.8610000014305115, 0.8603333234786987, 0.8613333106040955, 0.8643333315849304, 0.8613333106040955]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 5], [0], [0], [1], [0], [2], [0]], "fitness": -0.8345714211463928, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4539207220077515, 0.7392539978027344, 0.6186274290084839, 0.5708503723144531, 0.5178880095481873, 0.5122066140174866, 0.48170605301856995, 0.46559077501296997, 0.4329831898212433, 0.4106239378452301, 0.45464059710502625, 0.4606361389160156, 0.46885061264038086], "accuracy": [0.4834235906600952, 0.7403249144554138, 0.7783648371696472, 0.793422281742096, 0.8062343001365662, 0.8193105459213257, 0.8228767514228821, 0.8241975903511047, 0.843481719493866, 0.8551049828529358, 0.8350284099578857, 0.8399154543876648, 0.8404437899589539], "val_loss": [0.7843354344367981, 0.623157799243927, 0.5582324266433716, 0.5151429176330566, 0.5274888873100281, 0.4899236261844635, 0.5170315504074097, 0.5244779586791992, 0.5290778279304504, 0.5931628942489624, 0.5751509666442871, 0.5336277484893799, 0.5966823101043701], "val_accuracy": [0.7153333425521851, 0.7746666669845581, 0.8103333115577698, 0.8169999718666077, 0.8213333487510681, 0.8253333568572998, 0.8266666531562805, 0.8410000205039978, 0.8333333134651184, 0.8339999914169312, 0.8226666450500488, 0.8343333601951599, 0.8383333086967468]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 1, 6, 8, 3, 4, 1, 4, 2, 8], [0, 4, 0, 4, 0, 0, 3, 1, 4, 0], [16, 99, 82, 43, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(grad, tf.constant(1.0, shape=shape, dtype=tf.float32))), grad)), tf.math.pow(tf.math.subtract(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), sigma)), alpha)), tf.math.add(tf.math.sqrt(grad), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 0], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9, 3, 0, 3, 5], [0, 2, 0, 3], [74, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [9, 3, 3, 6, 8, 1, 4, 1, 0, 8, 8], [0, 0, 0, 3, 0, 2, 3, 1, 3, 0], [16, 99, 61, 99, 63, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 2, 0, 1, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.negative(tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3037357330322266, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 2, 6, 1, 0, 6], [0, 2, 3, 3, 5, 4, 1, 3], [0, 27, 16, 0], [1, 0, 0, 1, 1], [0, 3, 0], [0, 7], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [1, 5, 6, 9, 0, 5], [2, 3], [63]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 18, 10, 8, 1, 1, 0, 1, 1, 8, 6, 2, 1], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.subtract(grad, tf.math.negative(tf.math.divide_no_nan(grad, grad))))), alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(tf.math.divide_no_nan(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.square(sigma)))", "other_info": {"loss": [2.3033864498138428, 2.302600860595703, 2.302581548690796, 2.3026223182678223, 2.3025920391082764, 2.3025951385498047, 2.3026068210601807, 2.3025946617126465], "accuracy": [0.10130762308835983, 0.10196803510189056, 0.09879804402589798, 0.10606260597705841, 0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025832176208496, 2.302574634552002, 2.3025636672973633, 2.3025665283203125, 2.302567481994629, 2.302565336227417, 2.3025760650634766, 2.30257248878479], "val_accuracy": [0.0976666659116745, 0.10133333504199982, 0.10233332961797714, 0.10133333504199982, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 9, 0, 3], [0, 1, 1, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 3, 0, 3, 5], [1, 2, 2, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 3, 6, 8, 1, 4, 6, 4, 2, 8], [0, 0, 0, 3, 0, 0, 0, 1, 2, 0], [16, 99, 96, 99, 61, 1, 88]], "fitness": -0.08828571438789368, "mapping_values": [1, 5, 4, 1, 2, 1, 0, 1, 0, 2, 1, 1, 1, 21, 11, 10, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3109664916992188, 2.3106541633605957, 2.30935001373291, 2.310473918914795, 2.3096210956573486, 2.3113627433776855], "accuracy": [0.08902391046285629, 0.08691058307886124, 0.08849557489156723, 0.09325055778026581, 0.08928807079792023, 0.09153348207473755], "val_loss": [2.3076424598693848, 2.3076424598693848, 2.3076424598693848, 2.3076424598693848, 2.3076424598693848, 2.3076424598693848], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}]