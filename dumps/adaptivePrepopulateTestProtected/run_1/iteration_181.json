[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2218732833862305, 1.8641282320022583, 1.3905830383300781, 1.0929527282714844, 0.9167851805686951, 0.8372408747673035, 0.7774587273597717, 0.7208666801452637, 0.6861229538917542, 0.6541911959648132, 0.6370176076889038, 0.6137421131134033, 0.5998287200927734, 0.5695139765739441, 0.5639244318008423, 0.554013729095459, 0.5357509255409241, 0.522990345954895, 0.509216845035553, 0.49668946862220764, 0.49723100662231445, 0.48423704504966736, 0.46625152230262756, 0.45862069725990295, 0.4602867364883423, 0.447716623544693, 0.4503459930419922, 0.43149253726005554, 0.4325939118862152, 0.4125277101993561, 0.42247986793518066, 0.4120650291442871, 0.40361934900283813, 0.3960142731666565, 0.3893308937549591, 0.3793174922466278, 0.3791479468345642, 0.3719789385795593, 0.3708767294883728, 0.3614743649959564, 0.35884666442871094, 0.3548022210597992, 0.3533909320831299, 0.3427411913871765, 0.3404352068901062, 0.3403117060661316, 0.32763466238975525, 0.321923166513443, 0.32268550992012024, 0.31575000286102295, 0.3102737069129944, 0.306183397769928, 0.30722537636756897], "accuracy": [0.27816668152809143, 0.4893673360347748, 0.5653150081634521, 0.6153744459152222, 0.6670188903808594, 0.6991150379180908, 0.718399167060852, 0.7313432693481445, 0.7452120184898376, 0.7617223858833313, 0.7629110813140869, 0.7677981853485107, 0.7753269076347351, 0.7872143983840942, 0.791969358921051, 0.7996301651000977, 0.802271842956543, 0.8075551390647888, 0.8117818236351013, 0.819970965385437, 0.8189142942428589, 0.8215559124946594, 0.8274996876716614, 0.8333113193511963, 0.8330471515655518, 0.8387266993522644, 0.8338396549224854, 0.8449346423149109, 0.8417646288871765, 0.8467837572097778, 0.8448025584220886, 0.8533879518508911, 0.8555012345314026, 0.8599920868873596, 0.8555012345314026, 0.8627657890319824, 0.8595958352088928, 0.86553955078125, 0.8619733452796936, 0.8708229064941406, 0.8672566413879395, 0.8730682730674744, 0.871879518032074, 0.8751816153526306, 0.8733324408531189, 0.8776912093162537, 0.878879964351654, 0.8812574148178101, 0.8817857503890991, 0.882710337638855, 0.8856161832809448, 0.8883898854255676, 0.8899748921394348], "val_loss": [2.0376369953155518, 1.5141152143478394, 1.0516331195831299, 0.8527892827987671, 0.7682881951332092, 0.7126915454864502, 0.6716832518577576, 0.6316971778869629, 0.6067810654640198, 0.5895653367042542, 0.5721682906150818, 0.5535118579864502, 0.5358334183692932, 0.5258833765983582, 0.5173161625862122, 0.502875566482544, 0.4914373457431793, 0.4859970808029175, 0.47592082619667053, 0.468210369348526, 0.4619823396205902, 0.45386385917663574, 0.44951099157333374, 0.4471699297428131, 0.4319530725479126, 0.4319339096546173, 0.4322057366371155, 0.4229366183280945, 0.4138999879360199, 0.41498228907585144, 0.40732112526893616, 0.4062395691871643, 0.40080565214157104, 0.3958761394023895, 0.39511868357658386, 0.3943839371204376, 0.38531720638275146, 0.3908182680606842, 0.38135969638824463, 0.37744593620300293, 0.3807068169116974, 0.3793184459209442, 0.37224268913269043, 0.3689718544483185, 0.3680477738380432, 0.3621402680873871, 0.3651074171066284, 0.3586326539516449, 0.3609769642353058, 0.35980793833732605, 0.3561359941959381, 0.35706424713134766, 0.34892743825912476], "val_accuracy": [0.5306666493415833, 0.6460000276565552, 0.6696666479110718, 0.6933333277702332, 0.7163333296775818, 0.7273333072662354, 0.7423333525657654, 0.7563333511352539, 0.7730000019073486, 0.7799999713897705, 0.7833333611488342, 0.79666668176651, 0.8009999990463257, 0.8066666722297668, 0.8086666464805603, 0.8173333406448364, 0.8253333568572998, 0.824999988079071, 0.831333339214325, 0.8263333439826965, 0.8336666822433472, 0.8410000205039978, 0.8376666903495789, 0.8370000123977661, 0.8456666469573975, 0.8453333377838135, 0.8486666679382324, 0.847000002861023, 0.8533333539962769, 0.8496666550636292, 0.8560000061988831, 0.8489999771118164, 0.8556666374206543, 0.859000027179718, 0.859333336353302, 0.8560000061988831, 0.8613333106040955, 0.859000027179718, 0.8653333187103271, 0.8656666874885559, 0.862333357334137, 0.8636666536331177, 0.8663333058357239, 0.8656666874885559, 0.8659999966621399, 0.8683333396911621, 0.8683333396911621, 0.871666669845581, 0.8676666617393494, 0.8693333268165588, 0.8706666827201843, 0.8696666955947876, 0.8686666488647461]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 1], [0, 2, 0, 0], [0, 3], [0], [0, 0, 1, 0, 1, 1], [0, 7, 2], [0, 6, 4], [0], [0, 1], [0], [1], [0]], "fitness": -0.8554285764694214, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.291273593902588, 2.185727596282959, 1.7445425987243652, 1.330586552619934, 1.094571590423584, 0.9317851066589355, 0.8596970438957214, 0.8307799696922302, 0.7746210098266602, 0.7574207782745361, 0.7077128887176514, 0.7047175168991089, 0.6697498559951782, 0.6319864392280579, 0.622795820236206, 0.6193004250526428, 0.5892814993858337, 0.5723790526390076, 0.5610814094543457, 0.5540798902511597, 0.5459170937538147, 0.5304418206214905, 0.5136698484420776, 0.5066872835159302, 0.502699613571167, 0.4924510419368744, 0.48629990220069885, 0.47128528356552124, 0.45943477749824524, 0.4460322856903076, 0.44866037368774414, 0.43470287322998047, 0.4240618944168091, 0.42800334095954895, 0.4144259989261627, 0.4133383333683014, 0.38756439089775085, 0.39830997586250305, 0.3864087164402008, 0.3819129168987274, 0.36432892084121704, 0.36886388063430786, 0.3638405203819275, 0.3543533980846405, 0.35308340191841125, 0.32938429713249207, 0.33309757709503174, 0.32688426971435547, 0.31126391887664795, 0.31996503472328186, 0.30980828404426575], "accuracy": [0.13036586344242096, 0.3276977837085724, 0.445779949426651, 0.5502575635910034, 0.6373002529144287, 0.6701889038085938, 0.6807554960250854, 0.6964733600616455, 0.7065116763114929, 0.709021270275116, 0.7353057861328125, 0.7401928305625916, 0.748249888420105, 0.7675340175628662, 0.7671377658843994, 0.7656848430633545, 0.7757231593132019, 0.7862898111343384, 0.7848368883132935, 0.7964601516723633, 0.7948752045631409, 0.7998943328857422, 0.8024039268493652, 0.8103289008140564, 0.8149517774581909, 0.8149517774581909, 0.8173292875289917, 0.8234050869941711, 0.8319904804229736, 0.8362171649932861, 0.8293488025665283, 0.8376700282096863, 0.8433496356010437, 0.8374059200286865, 0.8453308939933777, 0.8429533839225769, 0.8525954484939575, 0.8520671129226685, 0.8529917001724243, 0.8569541573524475, 0.8658037185668945, 0.8614450097084045, 0.8605204224586487, 0.8651432991027832, 0.8663320541381836, 0.8701624870300293, 0.872407853603363, 0.8780874609947205, 0.8784837126731873, 0.8754457831382751, 0.8820499181747437], "val_loss": [2.245713233947754, 2.0071640014648438, 1.1265596151351929, 0.9582969546318054, 0.7900694012641907, 0.7452728152275085, 0.6862441301345825, 0.651088297367096, 0.6460355520248413, 0.6415050625801086, 0.5956810116767883, 0.5655776858329773, 0.5555974841117859, 0.5551122426986694, 0.5497086644172668, 0.525452196598053, 0.5189598798751831, 0.5279774069786072, 0.5054685473442078, 0.4985997676849365, 0.4957941770553589, 0.493282675743103, 0.48304012417793274, 0.46899357438087463, 0.4644160270690918, 0.45127972960472107, 0.45482906699180603, 0.45014530420303345, 0.44595691561698914, 0.45100289583206177, 0.4395890235900879, 0.42523282766342163, 0.423530638217926, 0.4204230010509491, 0.4095980226993561, 0.4092414677143097, 0.4107305109500885, 0.4089047312736511, 0.4146290421485901, 0.410813570022583, 0.4040951430797577, 0.39759117364883423, 0.4011739492416382, 0.41002902388572693, 0.40173837542533875, 0.4008772075176239, 0.4079528748989105, 0.4170091450214386, 0.41942286491394043, 0.4217131733894348, 0.4089904725551605], "val_accuracy": [0.41233333945274353, 0.43533334136009216, 0.6489999890327454, 0.6880000233650208, 0.7176666855812073, 0.731333315372467, 0.7493333220481873, 0.7556666731834412, 0.7649999856948853, 0.7523333430290222, 0.7676666378974915, 0.7913333177566528, 0.7846666574478149, 0.7803333401679993, 0.7829999923706055, 0.7950000166893005, 0.7986666560173035, 0.8009999990463257, 0.8133333325386047, 0.8059999942779541, 0.812666654586792, 0.8159999847412109, 0.8176666498184204, 0.8339999914169312, 0.8316666483879089, 0.8360000252723694, 0.828000009059906, 0.8353333473205566, 0.8423333168029785, 0.8450000286102295, 0.8423333168029785, 0.847000002861023, 0.8496666550636292, 0.8479999899864197, 0.8523333072662354, 0.8519999980926514, 0.8546666502952576, 0.8606666922569275, 0.859333336353302, 0.8600000143051147, 0.8610000014305115, 0.8640000224113464, 0.8633333444595337, 0.8560000061988831, 0.8659999966621399, 0.8683333396911621, 0.8613333106040955, 0.8663333058357239, 0.862666666507721, 0.8643333315849304, 0.8640000224113464]}, "mapping_values": [1, 10, 5, 5, 3, 6, 4, 2, 1, 6, 3, 3, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 8, 8, 5, 2, 7, 3], [0, 2, 2, 2], [0], [1], [0], [2], [0]], "fitness": -0.8354285955429077, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.square(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(beta, beta)), beta))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5906180143356323, 0.8318299651145935, 0.7075437903404236, 0.6146818995475769, 0.5615601539611816, 0.5403254628181458, 0.5248730778694153, 0.4995441138744354, 0.4903727173805237, 0.48754969239234924, 0.5007230639457703, 0.5108298659324646, 0.5269265174865723, 0.48021265864372253, 0.4843722879886627, 0.4792734980583191], "accuracy": [0.4893673360347748, 0.7124554514884949, 0.7456082701683044, 0.7732135653495789, 0.7860256433486938, 0.7946110367774963, 0.8157442808151245, 0.8226125836372375, 0.8230088353157043, 0.8302733898162842, 0.8227446675300598, 0.8335754871368408, 0.8182538747787476, 0.8256505131721497, 0.8314621448516846, 0.8260467648506165], "val_loss": [0.8410949110984802, 0.6731615662574768, 0.5425991415977478, 0.5193641185760498, 0.5039123296737671, 0.4908176362514496, 0.46577975153923035, 0.5045613050460815, 0.5080785155296326, 0.5012696385383606, 0.5118622183799744, 0.5414535999298096, 0.5244446396827698, 0.5311368703842163, 0.5279974937438965, 0.5118679404258728], "val_accuracy": [0.7120000123977661, 0.7583333253860474, 0.7863333225250244, 0.8109999895095825, 0.8130000233650208, 0.831333339214325, 0.8293333053588867, 0.8233333230018616, 0.8403333425521851, 0.8360000252723694, 0.8483333587646484, 0.8376666903495789, 0.8306666612625122, 0.8393333554267883, 0.8416666388511658, 0.843999981880188]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 11, 7, 4, 1, 1, 0, 1, 0], "tree_depth": 17}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 1, 0, 5], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 3, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 72, 96, 99, 61, 1, 7]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 2, 10, 6, 4, 2, 2, 1, 1, 1, 23, 13, 10, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), tf.math.add(tf.math.sqrt(tf.math.multiply(alpha, beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 2, 3, 0, 3, 0, 9], [0, 1, 0, 2], [25, 39, 6], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 1, 0, 3, 5], [1, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 5, 3, 6, 8, 3, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 7, 3, 3, 10, 6, 4, 1, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(alpha), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))))), alpha)", "other_info": {"loss": [19699898368.0, 27096401920.0, 27481968640.0, 27536406528.0, 27564838912.0, 28020248576.0], "accuracy": [0.09734513610601425, 0.09655263274908066, 0.10051512718200684, 0.09932637959718704, 0.10593052208423615, 0.1006472036242485], "val_loss": [19896774656.0, 20515418112.0, 20749664256.0, 20893186048.0, 20999374848.0, 21085716480.0], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 8, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 2], [96, 16], [0, 1], [0], [2], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 5, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 1, 0, 3, 0, 3, 3, 1, 0, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 0, 17, 9, 8, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(alpha, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, sigma))))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 8], [0, 2, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 3, 4, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [9, 3, 3, 6, 8, 2, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [92, 99, 96, 3, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303447723388672, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}, "mapping_values": [1, 10, 6, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 12}]