[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 3], [0, 3], [0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 8, 2, 6, 8, 4, 1, 3, 8, 6, 9, 8, 8, 4, 8, 0, 3, 7], [0, 0, 5, 4, 2, 7, 2, 7, 5, 5], [0, 5, 24], [0, 1], [0], [1], [0]], "fitness": -0.8619999885559082, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(grad)))), tf.math.pow(grad, tf.math.sqrt(beta))), tf.math.negative(grad))), beta), tf.math.multiply(grad, tf.math.add(grad, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293055772781372, 2.1898181438446045, 1.7721935510635376, 1.3437031507492065, 1.0616084337234497, 0.8813676238059998, 0.8203774094581604, 0.7850208282470703, 0.7472618818283081, 0.7090719938278198, 0.6776538491249084, 0.6593731045722961, 0.6409820318222046, 0.6071166396141052, 0.5883763432502747, 0.5744269490242004, 0.5676261186599731, 0.5434166789054871, 0.5294679403305054, 0.5298668742179871, 0.5059300065040588, 0.504604697227478, 0.47961047291755676, 0.4823405146598816, 0.4618038535118103, 0.4659866690635681, 0.45089948177337646, 0.4355977475643158, 0.4322652220726013, 0.43632104992866516, 0.42252108454704285, 0.4141136109828949, 0.40606677532196045, 0.40199014544487, 0.38966917991638184, 0.38875260949134827, 0.3863038122653961, 0.3661145269870758, 0.367105633020401, 0.3638266324996948, 0.3596198260784149, 0.3475448787212372, 0.33916014432907104, 0.3381064236164093, 0.3357526659965515, 0.334526002407074, 0.3236159682273865, 0.3198012411594391, 0.3046756088733673, 0.30086877942085266], "accuracy": [0.1278562992811203, 0.328490287065506, 0.43785497546195984, 0.5412759184837341, 0.6453573107719421, 0.6711134314537048, 0.6946242451667786, 0.7084929347038269, 0.7051908373832703, 0.7275128960609436, 0.7321357727050781, 0.7458723783493042, 0.7619865536689758, 0.7640998363494873, 0.7714964747428894, 0.7757231593132019, 0.778761088848114, 0.7898560166358948, 0.7973847389221191, 0.8013472557067871, 0.8035926818847656, 0.8067626357078552, 0.81548011302948, 0.8109893202781677, 0.822348415851593, 0.8247259259223938, 0.829216718673706, 0.8360850811004639, 0.8358209133148193, 0.8372738361358643, 0.837141752243042, 0.8385946154594421, 0.8445383906364441, 0.8449346423149109, 0.8496896028518677, 0.8533879518508911, 0.8500858545303345, 0.857218325138092, 0.8533879518508911, 0.857218325138092, 0.8623695969581604, 0.8665962219238281, 0.8688416481018066, 0.8671245574951172, 0.867520809173584, 0.8717474341392517, 0.8767666220664978, 0.8746532797813416, 0.8767666220664978, 0.8795403242111206], "val_loss": [2.246443748474121, 2.018252372741699, 1.1479783058166504, 0.8865229487419128, 0.7743580937385559, 0.7222803831100464, 0.7024534344673157, 0.6760773062705994, 0.651970624923706, 0.6180948615074158, 0.5999168157577515, 0.5839647054672241, 0.5702295899391174, 0.5703085064888, 0.5597569346427917, 0.5446801781654358, 0.5324187874794006, 0.5295563340187073, 0.5232008695602417, 0.5146874785423279, 0.5075713992118835, 0.5169079303741455, 0.4996090829372406, 0.500292181968689, 0.4951898157596588, 0.488269567489624, 0.4712735712528229, 0.4639405608177185, 0.46422964334487915, 0.464663565158844, 0.45722436904907227, 0.4539569020271301, 0.4470304250717163, 0.4495033323764801, 0.4430273771286011, 0.4555951654911041, 0.43354475498199463, 0.4386238157749176, 0.4461202323436737, 0.4336743950843811, 0.4267423450946808, 0.44936925172805786, 0.45397359132766724, 0.44094812870025635, 0.44666874408721924, 0.46057817339897156, 0.4508233964443207, 0.4625316560268402, 0.47602686285972595, 0.4963854253292084], "val_accuracy": [0.40533334016799927, 0.4580000042915344, 0.6449999809265137, 0.6963333487510681, 0.7326666712760925, 0.7353333234786987, 0.7443333268165588, 0.7559999823570251, 0.753333330154419, 0.7676666378974915, 0.7716666460037231, 0.781333327293396, 0.7913333177566528, 0.7906666398048401, 0.7933333516120911, 0.7919999957084656, 0.7986666560173035, 0.8043333292007446, 0.8133333325386047, 0.812333345413208, 0.8140000104904175, 0.8266666531562805, 0.8226666450500488, 0.8223333358764648, 0.8186666369438171, 0.8323333263397217, 0.8349999785423279, 0.8376666903495789, 0.843666672706604, 0.8450000286102295, 0.8463333249092102, 0.8493333458900452, 0.8493333458900452, 0.8500000238418579, 0.8483333587646484, 0.8523333072662354, 0.8546666502952576, 0.8513333201408386, 0.8526666760444641, 0.8523333072662354, 0.862333357334137, 0.8613333106040955, 0.8610000014305115, 0.856333315372467, 0.8663333058357239, 0.862333357334137, 0.8566666841506958, 0.8640000224113464, 0.8629999756813049, 0.8650000095367432]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 29, 19, 10, 3, 2, 1, 1, 0], "tree_depth": 27}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8565714359283447, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222530841827393, 1.8688225746154785, 1.4048105478286743, 1.110595703125, 0.9428120851516724, 0.8485643267631531, 0.7784987688064575, 0.7284095883369446, 0.7044241428375244, 0.6708751916885376, 0.6482192277908325, 0.6211732029914856, 0.6096471548080444, 0.5902617573738098, 0.5743523836135864, 0.5580945611000061, 0.5422135591506958, 0.519728422164917, 0.5077508687973022, 0.5003128051757812, 0.49643343687057495, 0.4795664846897125, 0.4692445993423462, 0.4600219428539276, 0.44858038425445557, 0.4478902518749237, 0.4343101978302002, 0.4340415596961975, 0.4193771481513977, 0.4199957847595215, 0.40267860889434814, 0.4037928581237793, 0.396464467048645], "accuracy": [0.2731475234031677, 0.48408401012420654, 0.5658433437347412, 0.6075815558433533, 0.6583014130592346, 0.6950204968452454, 0.7213049530982971, 0.7363624572753906, 0.7449478507041931, 0.76106196641922, 0.7611940503120422, 0.7705719470977783, 0.7778365015983582, 0.7861577272415161, 0.7881389260292053, 0.7973847389221191, 0.8030643463134766, 0.8128384351730347, 0.8195747137069702, 0.8204993009567261, 0.8264430165290833, 0.826310932636261, 0.8338396549224854, 0.8372738361358643, 0.8392550349235535, 0.8372738361358643, 0.8469158411026001, 0.8488970994949341, 0.8482366800308228, 0.8462554216384888, 0.8565579056739807, 0.8568220734596252, 0.858671247959137], "val_loss": [2.0373005867004395, 1.5144479274749756, 1.0399166345596313, 0.8271887302398682, 0.7288128137588501, 0.6735906600952148, 0.626789391040802, 0.5985056757926941, 0.5701336860656738, 0.5540802478790283, 0.5339471101760864, 0.5228316187858582, 0.5055137276649475, 0.4921858012676239, 0.4836413562297821, 0.4729703664779663, 0.46585896611213684, 0.450205534696579, 0.446258008480072, 0.4382193684577942, 0.429933100938797, 0.4217348098754883, 0.41771817207336426, 0.4121319055557251, 0.40927305817604065, 0.39943358302116394, 0.39882344007492065, 0.390403151512146, 0.38726362586021423, 0.3848796784877777, 0.38107654452323914, 0.3790019452571869, 0.37402254343032837], "val_accuracy": [0.5616666674613953, 0.6736666560173035, 0.6866666674613953, 0.7160000205039978, 0.734666645526886, 0.7526666522026062, 0.7680000066757202, 0.7749999761581421, 0.7863333225250244, 0.7870000004768372, 0.7976666688919067, 0.8040000200271606, 0.8159999847412109, 0.8199999928474426, 0.8183333277702332, 0.8293333053588867, 0.8309999704360962, 0.8403333425521851, 0.8389999866485596, 0.8420000076293945, 0.8429999947547913, 0.8456666469573975, 0.8496666550636292, 0.8483333587646484, 0.8526666760444641, 0.8560000061988831, 0.8556666374206543, 0.8650000095367432, 0.8579999804496765, 0.8613333106040955, 0.8650000095367432, 0.862666666507721, 0.8643333315849304]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 6, 2, 3, 5], [0, 4, 7, 4], [0], [1], [0], [2], [0]], "fitness": -0.8339999914169312, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.square(grad), grad), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.620404839515686, 0.8236110210418701, 0.6987480521202087, 0.625873327255249, 0.5922327637672424, 0.5837506055831909, 0.5487446784973145, 0.542429506778717, 0.5056246519088745, 0.5155316591262817, 0.5179174542427063, 0.5634350776672363, 0.5685380697250366, 0.5502492785453796], "accuracy": [0.4831594228744507, 0.7061154246330261, 0.7387399077415466, 0.76542067527771, 0.7804781198501587, 0.789459764957428, 0.7975168228149414, 0.8009510040283203, 0.8132346868515015, 0.8123101592063904, 0.8078193068504333, 0.8083476424217224, 0.8185180425643921, 0.8014793395996094], "val_loss": [0.7663613557815552, 0.6271433234214783, 0.5464566349983215, 0.5157274007797241, 0.5252552628517151, 0.4865325391292572, 0.48394131660461426, 0.4475965201854706, 0.44452404975891113, 0.46560123562812805, 0.5950585007667542, 0.5394238829612732, 0.5315044522285461, 0.501662015914917], "val_accuracy": [0.7363333106040955, 0.7606666684150696, 0.7996666431427002, 0.8130000233650208, 0.8036666512489319, 0.824999988079071, 0.8266666531562805, 0.840666651725769, 0.8429999947547913, 0.8349999785423279, 0.8316666483879089, 0.8316666483879089, 0.8303333520889282, 0.8413333296775818]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 5, 4, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 5, 3, 0, 3], [0, 1, 2, 2], [39, 23], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 6], [0, 2, 0, 1, 3], [24, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10171428322792053, "mapping_values": [1, 6, 4, 2, 1, 12, 7, 5, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [6.684360980987549, 4.049676895141602, 6322.10498046875, 30642.90234375, 4.219759941101074, 6.585659027099609], "accuracy": [0.10210011899471283, 0.1022322028875351, 0.10051512718200684, 0.09747721254825592, 0.10328886657953262, 0.09734513610601425], "val_loss": [3.4227657318115234, 2.304778575897217, 233649.390625, 4.311428546905518, 5.457874774932861, 11.367508888244629], "val_accuracy": [0.10733333230018616, 0.09966666996479034, 0.09833333641290665, 0.1003333330154419, 0.09933333098888397, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 4, 3, 0, 3], [0, 1, 0, 2], [61, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 6, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1], [1, 3, 3, 6, 2, 1, 4, 1, 4, 1, 8], [0, 0, 4, 3, 0, 0, 4, 1, 4, 0], [72, 99, 96, 99, 61, 4]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 19, 9, 10, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, alpha)), tf.math.pow(grad, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [4, 2, 3, 0, 3, 5, 3, 1], [0, 1, 0, 2, 1, 0, 0], [83, 99, 27, 87], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 5, 0, 5], [9, 64], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 4, 8, 3, 5], [0, 4, 7, 3], [25], [1, 1], [0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 4, 9, 5, 4, 2, 10, 6, 4, 1, 1, 0, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.pow(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.math.multiply(grad, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303593873977661, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 6, 3, 0, 3, 5], [0, 2, 0, 3], [31, 70], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 6, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 96, 15, 61, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]