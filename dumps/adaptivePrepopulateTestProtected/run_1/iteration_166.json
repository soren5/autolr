[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8631428480148315, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2191097736358643, 1.855713963508606, 1.3789420127868652, 1.1010397672653198, 0.9441210031509399, 0.8478478193283081, 0.769976794719696, 0.7362213134765625, 0.6937195062637329, 0.6613335013389587, 0.6430873870849609, 0.608907163143158, 0.5846277475357056, 0.5739543437957764, 0.5606276988983154, 0.5410599708557129, 0.5279206037521362, 0.5251036882400513, 0.5091066956520081, 0.5027687549591064, 0.47700658440589905, 0.4719878137111664, 0.4664277136325836, 0.45800650119781494, 0.4499475955963135, 0.4466085731983185, 0.4270288348197937, 0.42221423983573914, 0.42751801013946533, 0.417638897895813, 0.4135325849056244, 0.394635945558548, 0.3878477215766907, 0.3891806900501251, 0.3840366005897522, 0.3793807625770569, 0.37752044200897217, 0.36395224928855896, 0.3647783398628235, 0.3523320257663727, 0.3512275815010071, 0.34070518612861633, 0.34061598777770996, 0.3319070339202881, 0.32727545499801636, 0.3175850212574005, 0.3220870792865753, 0.3169518709182739, 0.3145351707935333, 0.3116670846939087, 0.31121882796287537, 0.30063170194625854, 0.2935968339443207, 0.2897653579711914, 0.28630754351615906, 0.28330329060554504, 0.2785577178001404, 0.2766726315021515, 0.2712637484073639, 0.26162275671958923, 0.2621544301509857], "accuracy": [0.2813366651535034, 0.4912164807319641, 0.5672962665557861, 0.6135252714157104, 0.666358470916748, 0.7033417224884033, 0.7264562249183655, 0.735569953918457, 0.7481178045272827, 0.7617223858833313, 0.7662131786346436, 0.7800818681716919, 0.7909126877784729, 0.793950617313385, 0.7998943328857422, 0.8083476424217224, 0.807158887386322, 0.81548011302948, 0.8165367841720581, 0.822348415851593, 0.833179235458374, 0.8355567455291748, 0.8381983637809753, 0.8408400416374207, 0.8378021121025085, 0.8412362933158875, 0.8474441766738892, 0.8490291833877563, 0.8462554216384888, 0.8525954484939575, 0.8533879518508911, 0.8619733452796936, 0.8636903762817383, 0.8656716346740723, 0.8601241707801819, 0.8626337051391602, 0.8660678863525391, 0.872407853603363, 0.8725399374961853, 0.8729361891746521, 0.8771628737449646, 0.8841632604598999, 0.8782195448875427, 0.882710337638855, 0.880729079246521, 0.8857482671737671, 0.8885219693183899, 0.8854840993881226, 0.8897107243537903, 0.8924844861030579, 0.8893144726753235, 0.8923524022102356, 0.8965790271759033, 0.8948619961738586, 0.9001452922821045, 0.8967111110687256, 0.8992207050323486, 0.90423983335495, 0.902390718460083, 0.9091269373893738, 0.9056927561759949], "val_loss": [2.03090763092041, 1.4939570426940918, 1.0250658988952637, 0.827961266040802, 0.7456196546554565, 0.6935081481933594, 0.6490328907966614, 0.6228866577148438, 0.5937106013298035, 0.5693968534469604, 0.5579038262367249, 0.5419073104858398, 0.5290767550468445, 0.5185384154319763, 0.5071856379508972, 0.4924352765083313, 0.4921962022781372, 0.4791797399520874, 0.47239843010902405, 0.46637487411499023, 0.4566549062728882, 0.45201966166496277, 0.44560810923576355, 0.4398166835308075, 0.44002673029899597, 0.4343109428882599, 0.4303467273712158, 0.42517074942588806, 0.42255619168281555, 0.41726669669151306, 0.4148539900779724, 0.4128236472606659, 0.41045472025871277, 0.40416741371154785, 0.40566447377204895, 0.40289759635925293, 0.39533770084381104, 0.3955243229866028, 0.3884772062301636, 0.3939571976661682, 0.38842660188674927, 0.3875756561756134, 0.37949228286743164, 0.38186246156692505, 0.37794390320777893, 0.37904590368270874, 0.37724024057388306, 0.3768647015094757, 0.37094631791114807, 0.37369874119758606, 0.36690470576286316, 0.3708372414112091, 0.36387190222740173, 0.3714073896408081, 0.36664628982543945, 0.3651781380176544, 0.3626525104045868, 0.3607045114040375, 0.3602299094200134, 0.3622995615005493, 0.35760316252708435], "val_accuracy": [0.5419999957084656, 0.6499999761581421, 0.6790000200271606, 0.7053333520889282, 0.7300000190734863, 0.7450000047683716, 0.7563333511352539, 0.7609999775886536, 0.781333327293396, 0.7913333177566528, 0.7870000004768372, 0.7990000247955322, 0.7996666431427002, 0.8069999814033508, 0.8116666674613953, 0.812666654586792, 0.8196666836738586, 0.8266666531562805, 0.8236666917800903, 0.8343333601951599, 0.8383333086967468, 0.8373333215713501, 0.840666651725769, 0.8443333506584167, 0.8433333039283752, 0.843999981880188, 0.8476666808128357, 0.8500000238418579, 0.8536666631698608, 0.8536666631698608, 0.8573333621025085, 0.8533333539962769, 0.8529999852180481, 0.856333315372467, 0.8579999804496765, 0.8553333282470703, 0.8633333444595337, 0.8613333106040955, 0.8646666407585144, 0.8633333444595337, 0.8633333444595337, 0.8656666874885559, 0.8686666488647461, 0.8653333187103271, 0.8683333396911621, 0.8656666874885559, 0.8679999709129333, 0.8709999918937683, 0.871999979019165, 0.8693333268165588, 0.8709999918937683, 0.8726666569709778, 0.875, 0.8686666488647461, 0.8723333477973938, 0.8759999871253967, 0.8706666827201843, 0.8730000257492065, 0.8730000257492065, 0.871666669845581, 0.8736666440963745]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 1], [0, 6, 0, 9], [0], [0, 91], [1], [0], [2], [0]], "fitness": -0.8437142968177795, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.603150486946106, 0.8711432814598083, 0.6853771805763245, 0.6145809292793274, 0.5866656303405762, 0.5595869421958923, 0.5358471274375916, 0.5146123766899109, 0.49507761001586914, 0.47068822383880615, 0.4789459705352783, 0.50470370054245, 0.4991399347782135, 0.509304404258728, 0.5012509226799011, 0.453214168548584, 0.4842618703842163, 0.4929268956184387, 0.5100971460342407, 0.5524008274078369], "accuracy": [0.4785365164279938, 0.7084929347038269, 0.7568352818489075, 0.7650244235992432, 0.7857614755630493, 0.7955356240272522, 0.804649293422699, 0.8183859586715698, 0.8197067975997925, 0.8281601071357727, 0.82683926820755, 0.8368775844573975, 0.8169330358505249, 0.8343679904937744, 0.8269713521003723, 0.8413683772087097, 0.8387266993522644, 0.8348963260650635, 0.8362171649932861, 0.8207634687423706], "val_loss": [0.9385858774185181, 0.6437894701957703, 0.5525475144386292, 0.5641769170761108, 0.5377969145774841, 0.5286165475845337, 0.5417192578315735, 0.5268471240997314, 0.5544300675392151, 0.5391751527786255, 0.6276982426643372, 0.5694042444229126, 0.6049833297729492, 0.5442660450935364, 0.5374193787574768, 0.5665196180343628, 0.6203498840332031, 0.5346068739891052, 0.5747007131576538, 0.6332923173904419], "val_accuracy": [0.6926666498184204, 0.7599999904632568, 0.7943333387374878, 0.7883333563804626, 0.812333345413208, 0.8076666593551636, 0.8169999718666077, 0.8226666450500488, 0.8240000009536743, 0.8199999928474426, 0.8299999833106995, 0.8263333439826965, 0.8226666450500488, 0.8373333215713501, 0.8379999995231628, 0.8360000252723694, 0.8363333344459534, 0.8333333134651184, 0.8330000042915344, 0.8376666903495789]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 5, 4, 1, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1], [0, 0, 0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8377143144607544, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2927160263061523, 2.1918222904205322, 1.782360553741455, 1.359127163887024, 1.0902429819107056, 0.9406358599662781, 0.8719517588615417, 0.8508755564689636, 0.797375500202179, 0.7840200066566467, 0.7276957631111145, 0.7002609372138977, 0.6813305020332336, 0.6509301662445068, 0.64247727394104, 0.6236705780029297, 0.6037123799324036, 0.5813294053077698, 0.5856272578239441, 0.5707446336746216, 0.5619016885757446, 0.5544866919517517, 0.5351278185844421, 0.523931086063385, 0.5010994672775269, 0.48940595984458923, 0.48008984327316284, 0.4656386077404022, 0.4681738018989563, 0.4563778340816498, 0.46625053882598877, 0.44745659828186035, 0.443259596824646, 0.43396928906440735, 0.4210343360900879, 0.40644216537475586, 0.3938891291618347, 0.38618847727775574, 0.38632407784461975, 0.36310818791389465, 0.3757421672344208, 0.3781428337097168, 0.37503814697265625, 0.3461526036262512, 0.3484007716178894, 0.3503528833389282, 0.33107346296310425, 0.3359450101852417, 0.3297647535800934, 0.31559479236602783, 0.30795979499816895, 0.3027481138706207, 0.2924855351448059, 0.30021607875823975, 0.3074374198913574, 0.30171769857406616, 0.2937335669994354, 0.3151799142360687, 0.2899486720561981, 0.285435289144516, 0.28913941979408264, 0.28207093477249146, 0.28797656297683716, 0.26231980323791504], "accuracy": [0.12534672021865845, 0.32003697752952576, 0.43706247210502625, 0.5355963706970215, 0.6313564777374268, 0.6577730774879456, 0.6807554960250854, 0.6914542317390442, 0.6856426000595093, 0.6910579800605774, 0.7210407853126526, 0.7290979027748108, 0.7305507659912109, 0.7534011602401733, 0.752212405204773, 0.7543256878852844, 0.7695152759552002, 0.778232753276825, 0.7730814814567566, 0.7808743715286255, 0.7881389260292053, 0.7878747582435608, 0.7922335267066956, 0.800290584564209, 0.7996301651000977, 0.8157442808151245, 0.813498854637146, 0.8232730031013489, 0.8226125836372375, 0.8317263126373291, 0.8253863453865051, 0.8285563588142395, 0.8305375576019287, 0.835160493850708, 0.8348963260650635, 0.8469158411026001, 0.8519350290298462, 0.8518029451370239, 0.8578787446022034, 0.858671247959137, 0.8551049828529358, 0.8568220734596252, 0.8594637513160706, 0.8636903762817383, 0.8646149635314941, 0.8660678863525391, 0.8710870146751404, 0.8713511824607849, 0.8698983192443848, 0.8808611631393433, 0.8762382864952087, 0.8798044919967651, 0.886672854423523, 0.8798044919967651, 0.8817857503890991, 0.8864086866378784, 0.887201189994812, 0.8824461698532104, 0.8874653577804565, 0.8905032277107239, 0.885219931602478, 0.8902390599250793, 0.8844274282455444, 0.8916919827461243], "val_loss": [2.2466564178466797, 2.022003650665283, 1.1412490606307983, 0.8832019567489624, 0.773489236831665, 0.7322050929069519, 0.6708326935768127, 0.6531707644462585, 0.6677232980728149, 0.6554762125015259, 0.6089141964912415, 0.5818964242935181, 0.5740617513656616, 0.5437920093536377, 0.5453492403030396, 0.5323379039764404, 0.5376957058906555, 0.5110859274864197, 0.5009013414382935, 0.4915525019168854, 0.49004191160202026, 0.4833618700504303, 0.4697287082672119, 0.47174715995788574, 0.46228262782096863, 0.4580410122871399, 0.4503926634788513, 0.4549659788608551, 0.44675397872924805, 0.4459482431411743, 0.4455626606941223, 0.43188250064849854, 0.42533206939697266, 0.423773854970932, 0.4149598479270935, 0.4146694242954254, 0.420501172542572, 0.4115781784057617, 0.4130280613899231, 0.4099520146846771, 0.4216770827770233, 0.4200034439563751, 0.4131086468696594, 0.40481331944465637, 0.41329169273376465, 0.42337045073509216, 0.4116608798503876, 0.4049578905105591, 0.39910101890563965, 0.41536685824394226, 0.4141065180301666, 0.4155768156051636, 0.42691561579704285, 0.4205132722854614, 0.43534091114997864, 0.4370781183242798, 0.42772603034973145, 0.42426058650016785, 0.44749441742897034, 0.4455691874027252, 0.44628506898880005, 0.45837271213531494, 0.45443516969680786, 0.4778742790222168], "val_accuracy": [0.41999998688697815, 0.4740000069141388, 0.6473333239555359, 0.6946666836738586, 0.7160000205039978, 0.7213333249092102, 0.7463333606719971, 0.750333309173584, 0.7360000014305115, 0.7406666874885559, 0.7609999775886536, 0.7643333077430725, 0.7699999809265137, 0.7826666831970215, 0.778333306312561, 0.781333327293396, 0.7853333353996277, 0.8013333082199097, 0.8086666464805603, 0.8050000071525574, 0.8046666383743286, 0.8153333067893982, 0.8183333277702332, 0.8086666464805603, 0.8230000138282776, 0.8220000267028809, 0.8299999833106995, 0.8333333134651184, 0.8366666436195374, 0.8349999785423279, 0.8393333554267883, 0.8373333215713501, 0.8399999737739563, 0.8443333506584167, 0.8486666679382324, 0.8476666808128357, 0.8433333039283752, 0.8489999771118164, 0.8486666679382324, 0.846666693687439, 0.8433333039283752, 0.8526666760444641, 0.8556666374206543, 0.856333315372467, 0.8536666631698608, 0.8576666712760925, 0.8550000190734863, 0.856333315372467, 0.856333315372467, 0.8586666584014893, 0.859333336353302, 0.8619999885559082, 0.8586666584014893, 0.859666645526886, 0.8640000224113464, 0.8553333282470703, 0.8610000014305115, 0.8646666407585144, 0.8709999918937683, 0.8679999709129333, 0.8663333058357239, 0.8650000095367432, 0.8653333187103271, 0.8700000047683716]}, "mapping_values": [1, 10, 5, 5, 3, 4, 3, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3, 7, 0, 1, 3, 6], [0, 1, 0, 2, 2, 2, 3, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [9], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 3, 4, 1, 1, 2, 0], [4, 0, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 10, 8, 2, 10, 6, 4, 2, 1, 1, 0, 1, 16, 8, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.subtract(grad, tf.math.multiply(grad, grad)))), tf.math.divide_no_nan(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 3, 1, 0, 2], [18, 99, 27], [0, 1], [0], [0, 2, 0, 3], [3], [0, 0, 1, 1], [0, 6], [7, 0], [0, 34], [0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [7, 2, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 2, 1, 1, 1, 4, 2, 2, 1, 5, 2, 3, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.negative(alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(grad, tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.multiply(beta, grad))", "other_info": {"loss": [2.3034470081329346, 2.302584409713745, 2.3025858402252197, 2.3025858402252197, 2.3025858402252197, 2.3025858402252197], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.302574872970581, 2.3025803565979004, 2.3025803565979004, 2.3025803565979004, 2.3025803565979004, 2.3025803565979004], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 6, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [5, 2, 3, 0, 3, 8], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 5, 4, 1, 4, 2, 2], [0, 1, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 11, 6, 5, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(beta))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.square(sigma)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3038907051086426, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025853633880615, 2.3025851249694824, 2.3025851249694824, 2.3025853633880615, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09787346422672272, 0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09966666996479034, 0.09966666996479034, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 21], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 22], [0, 1], [0], [1], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [1, 3, 3, 6, 8, 1, 4, 1, 4, 6, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 0, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad)))), alpha), tf.math.divide_no_nan(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}]