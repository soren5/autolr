[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8648571372032166, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224526882171631, 1.8685353994369507, 1.3892155885696411, 1.093757152557373, 0.9474471807479858, 0.8487478494644165, 0.7800507545471191, 0.7278552055358887, 0.7006569504737854, 0.6655759215354919, 0.6406384706497192, 0.622937023639679, 0.5946973562240601, 0.5807718634605408, 0.5631190538406372, 0.5459643006324768, 0.5461242198944092, 0.523876428604126, 0.5121743679046631, 0.503858745098114, 0.48482656478881836, 0.4798288941383362, 0.46923476457595825, 0.4661658704280853, 0.45168307423591614, 0.445487916469574, 0.4379049241542816, 0.4348430037498474, 0.4324808418750763, 0.4216861426830292, 0.41256579756736755, 0.40249958634376526, 0.404277503490448, 0.394242525100708, 0.38261979818344116, 0.3826063573360443, 0.37452197074890137, 0.3631243109703064, 0.3605026304721832, 0.3573746085166931, 0.3584158718585968, 0.3493322730064392, 0.33723118901252747, 0.3343369960784912, 0.33518722653388977, 0.329170286655426, 0.3195268511772156, 0.3191348612308502, 0.3153265714645386], "accuracy": [0.26839256286621094, 0.48566898703575134, 0.5679566860198975, 0.6152423620223999, 0.6583014130592346, 0.6975300312042236, 0.7197200059890747, 0.7386078238487244, 0.7471932172775269, 0.7560427784919739, 0.7605336308479309, 0.7734777331352234, 0.7839123010635376, 0.7882710099220276, 0.7955356240272522, 0.800290584564209, 0.8047813773155212, 0.81548011302948, 0.816008448600769, 0.8164047002792358, 0.8276317715644836, 0.8327829837799072, 0.8322546482086182, 0.8335754871368408, 0.8392550349235535, 0.8380662798881531, 0.8416325449943542, 0.8428213000297546, 0.8495575189590454, 0.8492933511734009, 0.8519350290298462, 0.8549728989601135, 0.8535200357437134, 0.8610487580299377, 0.8632941246032715, 0.8622375130653381, 0.8648791313171387, 0.8726720213890076, 0.8701624870300293, 0.8747853636741638, 0.8721436858177185, 0.8722757697105408, 0.8836349248886108, 0.8770307898521423, 0.8759741187095642, 0.8842953443527222, 0.8837670087814331, 0.8841632604598999, 0.8870691061019897], "val_loss": [2.039546489715576, 1.5125774145126343, 1.0439540147781372, 0.8359306454658508, 0.7560313940048218, 0.6960721611976624, 0.6502569317817688, 0.6151586174964905, 0.5888552069664001, 0.5674284100532532, 0.553581953048706, 0.5397657752037048, 0.5201249718666077, 0.5084293484687805, 0.4948614537715912, 0.49081161618232727, 0.47549378871917725, 0.47296208143234253, 0.46434006094932556, 0.4524158239364624, 0.4479464888572693, 0.4404781758785248, 0.4326188266277313, 0.42802783846855164, 0.4235813021659851, 0.41877099871635437, 0.41191747784614563, 0.41982486844062805, 0.40355825424194336, 0.3991661071777344, 0.3948415219783783, 0.3980431854724884, 0.39080479741096497, 0.38422462344169617, 0.38178834319114685, 0.3804561495780945, 0.3800056576728821, 0.3743359446525574, 0.3710322380065918, 0.36915653944015503, 0.3669455647468567, 0.36658403277397156, 0.35860782861709595, 0.3591333329677582, 0.3560695946216583, 0.3549165725708008, 0.3542884588241577, 0.3521830141544342, 0.3508269786834717], "val_accuracy": [0.5066666603088379, 0.6633333563804626, 0.684333324432373, 0.7166666388511658, 0.7323333621025085, 0.7513333559036255, 0.7586666941642761, 0.7666666507720947, 0.784333348274231, 0.7856666445732117, 0.7950000166893005, 0.800000011920929, 0.8059999942779541, 0.8119999766349792, 0.8166666626930237, 0.8166666626930237, 0.831333339214325, 0.8240000009536743, 0.8306666612625122, 0.8376666903495789, 0.8416666388511658, 0.8423333168029785, 0.8429999947547913, 0.8450000286102295, 0.8460000157356262, 0.8536666631698608, 0.8500000238418579, 0.8429999947547913, 0.859333336353302, 0.8553333282470703, 0.8586666584014893, 0.8553333282470703, 0.8603333234786987, 0.8640000224113464, 0.8610000014305115, 0.8643333315849304, 0.8583333492279053, 0.8633333444595337, 0.8663333058357239, 0.8643333315849304, 0.8686666488647461, 0.8683333396911621, 0.8696666955947876, 0.871999979019165, 0.8706666827201843, 0.8686666488647461, 0.8709999918937683, 0.8703333139419556, 0.8703333139419556]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8442857265472412, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5972868204116821, 0.8471105098724365, 0.6622435450553894, 0.6211835741996765, 0.5753327012062073, 0.5698137879371643, 0.538985013961792, 0.5591917634010315, 0.5775518417358398, 0.5464664697647095, 0.5309622883796692, 0.5051570534706116, 0.47512608766555786, 0.4639005661010742, 0.47948238253593445, 0.4809955060482025, 0.5357756614685059, 0.5254668593406677, 0.5430059432983398], "accuracy": [0.48289525508880615, 0.6995112895965576, 0.7605336308479309, 0.7778365015983582, 0.7873464822769165, 0.7961959838867188, 0.8012151718139648, 0.8026680946350098, 0.7952714562416077, 0.8061022162437439, 0.81112140417099, 0.8158763647079468, 0.8313300609588623, 0.8358209133148193, 0.8274996876716614, 0.8342359066009521, 0.8219521641731262, 0.8301413059234619, 0.8107251524925232], "val_loss": [0.8366242051124573, 0.5994805693626404, 0.5259546041488647, 0.521914005279541, 0.5013303756713867, 0.4775334596633911, 0.5075569152832031, 0.5403026342391968, 0.5000826120376587, 0.5068573951721191, 0.4909098446369171, 0.4772302210330963, 0.44911113381385803, 0.47936898469924927, 0.5757898688316345, 0.516697347164154, 0.5635820627212524, 0.6105708479881287, 0.597942590713501], "val_accuracy": [0.7269999980926514, 0.7739999890327454, 0.8090000152587891, 0.8199999928474426, 0.8190000057220459, 0.8306666612625122, 0.8196666836738586, 0.8336666822433472, 0.8270000219345093, 0.8266666531562805, 0.8413333296775818, 0.8373333215713501, 0.8476666808128357, 0.859000027179718, 0.8576666712760925, 0.8370000123977661, 0.8246666789054871, 0.82833331823349, 0.8546666502952576]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8357142806053162, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293621063232422, 2.189962148666382, 1.772053599357605, 1.3410941362380981, 1.0592938661575317, 0.9165434837341309, 0.8483858108520508, 0.8181559443473816, 0.7704777717590332, 0.7425780296325684, 0.7254583835601807, 0.7003641128540039, 0.6617622971534729, 0.6375826597213745, 0.6156447529792786, 0.5932520031929016, 0.592605710029602, 0.5743189454078674, 0.5609713196754456, 0.5524642467498779, 0.5415216684341431, 0.5290396809577942, 0.5156384110450745, 0.4984814524650574, 0.49981972575187683, 0.48773977160453796, 0.46391382813453674, 0.46122419834136963, 0.4534684419631958, 0.4452161192893982, 0.4397502541542053, 0.4205873906612396, 0.4234441816806793, 0.4197838604450226, 0.41156962513923645, 0.3947697877883911, 0.38706693053245544, 0.3798324763774872, 0.3800991177558899, 0.37752869725227356, 0.36341020464897156, 0.35394397377967834, 0.3552878499031067, 0.3395468592643738, 0.34466269612312317, 0.3175950050354004, 0.3243463933467865, 0.3265717625617981, 0.3247433006763458, 0.32162824273109436, 0.3084266483783722, 0.31157901883125305, 0.307608962059021, 0.29584959149360657], "accuracy": [0.1294412910938263, 0.33905693888664246, 0.43811914324760437, 0.5425967574119568, 0.6353189945220947, 0.6653017997741699, 0.6926429867744446, 0.703209638595581, 0.6985867023468018, 0.7152291536331177, 0.7210407853126526, 0.7334566116333008, 0.7445515990257263, 0.7559106945991516, 0.7640998363494873, 0.7753269076347351, 0.7781006693840027, 0.7833839654922485, 0.7891955971717834, 0.7932901978492737, 0.7952714562416077, 0.7891955971717834, 0.7987055778503418, 0.8062343001365662, 0.806630551815033, 0.8137630224227905, 0.8227446675300598, 0.819442629814148, 0.822348415851593, 0.828820526599884, 0.8301413059234619, 0.8366134166717529, 0.8367455005645752, 0.8384625315666199, 0.8393871188163757, 0.8425571322441101, 0.8462554216384888, 0.8543124794960022, 0.8525954484939575, 0.8552370667457581, 0.8561616539955139, 0.8618412613868713, 0.8628978729248047, 0.8664641380310059, 0.8663320541381836, 0.8733324408531189, 0.8722757697105408, 0.8687095642089844, 0.8751816153526306, 0.8776912093162537, 0.8792761564254761, 0.8770307898521423, 0.8802007436752319, 0.885219931602478], "val_loss": [2.246648073196411, 2.0218493938446045, 1.1528992652893066, 0.9027827978134155, 0.7707552313804626, 0.7190488576889038, 0.682365894317627, 0.6801093220710754, 0.6692999005317688, 0.6398171186447144, 0.6069019436836243, 0.5804955363273621, 0.5614229440689087, 0.5400121212005615, 0.5278850197792053, 0.5152027010917664, 0.5095068216323853, 0.5026146173477173, 0.4869522154331207, 0.4726641774177551, 0.4710689187049866, 0.46938884258270264, 0.4519731402397156, 0.4537554085254669, 0.44854989647865295, 0.44072625041007996, 0.4332512319087982, 0.421963632106781, 0.41922029852867126, 0.42366763949394226, 0.4176674783229828, 0.40543657541275024, 0.40315526723861694, 0.4098033010959625, 0.3991035223007202, 0.39982640743255615, 0.3957700729370117, 0.3965076506137848, 0.39375951886177063, 0.3926672339439392, 0.3869761526584625, 0.3927222788333893, 0.39687272906303406, 0.39449775218963623, 0.3870575726032257, 0.3744736313819885, 0.3706669807434082, 0.375352144241333, 0.37622395157814026, 0.37974780797958374, 0.38034579157829285, 0.38332071900367737, 0.39567431807518005, 0.40652501583099365], "val_accuracy": [0.43833333253860474, 0.47200000286102295, 0.6463333368301392, 0.6863333582878113, 0.718666672706604, 0.7329999804496765, 0.7336666584014893, 0.731333315372467, 0.7519999742507935, 0.7536666393280029, 0.7620000243186951, 0.7673333287239075, 0.7803333401679993, 0.784333348274231, 0.79666668176651, 0.7973333597183228, 0.7983333468437195, 0.8076666593551636, 0.815666675567627, 0.8220000267028809, 0.8206666707992554, 0.8193333148956299, 0.8299999833106995, 0.8299999833106995, 0.8333333134651184, 0.8343333601951599, 0.8426666855812073, 0.846666693687439, 0.8503333330154419, 0.843999981880188, 0.8446666598320007, 0.8550000190734863, 0.8583333492279053, 0.8586666584014893, 0.859333336353302, 0.8600000143051147, 0.862333357334137, 0.862333357334137, 0.8629999756813049, 0.8633333444595337, 0.8663333058357239, 0.8666666746139526, 0.8726666569709778, 0.8743333220481873, 0.8726666569709778, 0.8696666955947876, 0.8726666569709778, 0.8736666440963745, 0.878333330154419, 0.8756666779518127, 0.8709999918937683, 0.8686666488647461, 0.8733333349227905, 0.8686666488647461]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 3, 1, 3, 9], [0, 0, 1, 0, 3], [83, 99, 27, 53], [0, 1], [0], [0], [0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 4, 7, 6, 4, 0, 2, 0, 1], [2, 7, 1, 0, 5, 2, 4], [45, 79], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), alpha)), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303492546081543, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 10, 6, 4, 4, 2, 1, 1, 1, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 3, 1, 5], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0, 2, 3, 0, 3, 5], [0], [16, 16], [0, 1], [0, 4, 7, 6, 4, 0, 2, 0, 1], [0], [98, 79], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 6, 5, 0, 3, 4, 3], [1, 7, 1, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3037378787994385, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 0, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [6, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 0, 1, 1], [0, 6, 8], [0, 5], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 3, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 8, 4, 4, 2, 5, 3, 2, 1, 21, 11, 10, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), alpha)))), tf.math.sqrt(beta)), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 4, 6, 6, 8, 9], [0, 2, 0, 3, 0, 1], [16, 16, 99, 5], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 8, 6, 8, 1, 4, 1, 4, 5, 8, 2], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [55, 99, 96, 0, 61, 6]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 17, 11, 6, 4, 2, 1, 1, 1, 21, 12, 9, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma)), tf.math.sqrt(tf.math.add(alpha, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]