[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224954605102539, 1.87067449092865, 1.4072418212890625, 1.1155121326446533, 0.9448758363723755, 0.851140558719635, 0.7938821911811829, 0.7322732210159302, 0.7067113518714905, 0.6709851026535034, 0.6398622989654541, 0.6130045056343079, 0.6048279404640198, 0.5889951586723328, 0.5714279413223267, 0.5579394698143005, 0.5431063175201416, 0.5220533609390259, 0.51972895860672, 0.5091439485549927, 0.494289368391037, 0.4810449182987213, 0.48492977023124695, 0.4691634476184845, 0.46037548780441284, 0.4500254690647125, 0.4424905776977539, 0.43612152338027954, 0.44118133187294006, 0.4362802505493164, 0.4263334572315216, 0.41032248735427856, 0.40469488501548767, 0.40300872921943665, 0.39858710765838623, 0.39392465353012085, 0.379660964012146, 0.37607336044311523, 0.3790566623210907, 0.37058180570602417, 0.3616562783718109, 0.35890427231788635, 0.3528295159339905, 0.35106217861175537, 0.33969181776046753, 0.338432252407074, 0.3382548391819, 0.3341710567474365], "accuracy": [0.2697133719921112, 0.4880464971065521, 0.5551446080207825, 0.6095628142356873, 0.6609430909156799, 0.6919825673103333, 0.7148329019546509, 0.7292299270629883, 0.7446836829185486, 0.7563069462776184, 0.7655527591705322, 0.7779685854911804, 0.778232753276825, 0.7902522683143616, 0.7911768555641174, 0.7968564033508301, 0.8041210174560547, 0.8108572363853455, 0.8162726163864136, 0.8142913579940796, 0.8248580098152161, 0.8277638554573059, 0.8289526104927063, 0.8341038227081299, 0.8374059200286865, 0.8380662798881531, 0.8396512866020203, 0.8449346423149109, 0.8450667262077332, 0.8446704745292664, 0.8486329317092896, 0.8549728989601135, 0.8564258217811584, 0.8605204224586487, 0.8597279191017151, 0.8640866279602051, 0.8656716346740723, 0.8689737319946289, 0.8671245574951172, 0.8717474341392517, 0.8689737319946289, 0.872407853603363, 0.8749174475669861, 0.8780874609947205, 0.8767666220664978, 0.880729079246521, 0.8829745054244995, 0.8865407705307007], "val_loss": [2.0421175956726074, 1.5156733989715576, 1.0394326448440552, 0.8262646198272705, 0.7349748015403748, 0.6858555674552917, 0.6335259079933167, 0.5995827317237854, 0.5827677249908447, 0.5526826977729797, 0.5359166860580444, 0.5229726433753967, 0.5096096396446228, 0.5002411603927612, 0.4843102693557739, 0.47441068291664124, 0.46684274077415466, 0.4556652009487152, 0.44892504811286926, 0.44372981786727905, 0.4399529993534088, 0.4282832145690918, 0.4254123270511627, 0.4204328656196594, 0.4144608974456787, 0.41029345989227295, 0.40778833627700806, 0.39956265687942505, 0.4004869759082794, 0.3941526710987091, 0.39555346965789795, 0.3860102593898773, 0.38073739409446716, 0.3870339095592499, 0.38501212000846863, 0.3769821226596832, 0.37709951400756836, 0.36801448464393616, 0.3679933547973633, 0.3669266402721405, 0.3656555116176605, 0.36166825890541077, 0.35468006134033203, 0.36268115043640137, 0.3560730516910553, 0.35905805230140686, 0.35989493131637573, 0.3488249182701111], "val_accuracy": [0.5446666479110718, 0.6523333191871643, 0.6783333420753479, 0.715666651725769, 0.7353333234786987, 0.7490000128746033, 0.7646666765213013, 0.7770000100135803, 0.781000018119812, 0.8063333630561829, 0.8023333549499512, 0.8100000023841858, 0.8213333487510681, 0.8149999976158142, 0.8276666402816772, 0.8286666870117188, 0.831333339214325, 0.8366666436195374, 0.8386666774749756, 0.8433333039283752, 0.8370000123977661, 0.8503333330154419, 0.8483333587646484, 0.8493333458900452, 0.8556666374206543, 0.8546666502952576, 0.8513333201408386, 0.8566666841506958, 0.8556666374206543, 0.8569999933242798, 0.859000027179718, 0.8603333234786987, 0.8606666922569275, 0.8613333106040955, 0.862666666507721, 0.8610000014305115, 0.8640000224113464, 0.8676666617393494, 0.8650000095367432, 0.8643333315849304, 0.862333357334137, 0.8676666617393494, 0.874666690826416, 0.8669999837875366, 0.8700000047683716, 0.871666669845581, 0.8650000095367432, 0.8726666569709778]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8574285507202148, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2924704551696777, 2.185554027557373, 1.7577338218688965, 1.3590548038482666, 1.0941463708877563, 0.9096164107322693, 0.8421915769577026, 0.8402937650680542, 0.7643840312957764, 0.729320228099823, 0.6935561895370483, 0.6870604753494263, 0.6535840630531311, 0.6254645586013794, 0.6022714376449585, 0.599292516708374, 0.581160843372345, 0.5658133625984192, 0.56352698802948, 0.5511882901191711, 0.5377042293548584, 0.5145038962364197, 0.5270755887031555, 0.5022927522659302, 0.5032855868339539, 0.48482513427734375, 0.48222795128822327, 0.4582500755786896, 0.45678359270095825, 0.44691911339759827, 0.4391702115535736, 0.43754687905311584, 0.42010584473609924, 0.40748968720436096, 0.4059359133243561, 0.4106448292732239, 0.40272852778434753, 0.39442768692970276, 0.3994658291339874, 0.3685067892074585, 0.3738026022911072, 0.3676818013191223, 0.3615942895412445, 0.36678144335746765, 0.35193830728530884, 0.3412957191467285, 0.3394581079483032, 0.3399406969547272, 0.323519229888916, 0.32255876064300537, 0.32661953568458557, 0.3165991008281708, 0.3033371865749359, 0.3047557473182678, 0.30398300290107727, 0.30680692195892334, 0.2896806299686432, 0.2895233929157257, 0.2906683385372162, 0.29128435254096985, 0.28154900670051575], "accuracy": [0.12561088800430298, 0.3292827904224396, 0.44128912687301636, 0.5493329763412476, 0.627129852771759, 0.6715096831321716, 0.6929071545600891, 0.6984546184539795, 0.7127195596694946, 0.7230220437049866, 0.7327961921691895, 0.7367587089538574, 0.7497028112411499, 0.7662131786346436, 0.7664773464202881, 0.7687227725982666, 0.774270236492157, 0.7848368883132935, 0.7852331399917603, 0.791969358921051, 0.7961959838867188, 0.800818920135498, 0.7948752045631409, 0.8062343001365662, 0.8058380484580994, 0.8140271902084351, 0.8153480291366577, 0.8183859586715698, 0.819442629814148, 0.8249900937080383, 0.8308017253875732, 0.8337075710296631, 0.8335754871368408, 0.8426892161369324, 0.847840428352356, 0.8462554216384888, 0.8450667262077332, 0.8469158411026001, 0.8512746095657349, 0.8562937378883362, 0.8531237840652466, 0.857218325138092, 0.8564258217811584, 0.8585391640663147, 0.8651432991027832, 0.8610487580299377, 0.8656716346740723, 0.8651432991027832, 0.8710870146751404, 0.8705587387084961, 0.8714832663536072, 0.8730682730674744, 0.8770307898521423, 0.8824461698532104, 0.873860776424408, 0.8770307898521423, 0.8831065893173218, 0.8828424215316772, 0.8837670087814331, 0.886672854423523, 0.889050304889679], "val_loss": [2.245492458343506, 2.012056827545166, 1.1226773262023926, 0.8734647631645203, 0.7443798184394836, 0.6887895464897156, 0.6386367082595825, 0.6219832897186279, 0.6258257031440735, 0.5907456278800964, 0.5585534572601318, 0.5313615202903748, 0.5359432101249695, 0.517444908618927, 0.49967822432518005, 0.49351024627685547, 0.4856759309768677, 0.48807477951049805, 0.4732694625854492, 0.471161425113678, 0.462678462266922, 0.4718881845474243, 0.46314868330955505, 0.44994011521339417, 0.44501176476478577, 0.4462810754776001, 0.4409615397453308, 0.42574751377105713, 0.417279452085495, 0.41164785623550415, 0.4105065166950226, 0.40610888600349426, 0.40544694662094116, 0.4069013297557831, 0.40737468004226685, 0.4002871811389923, 0.40000835061073303, 0.39856624603271484, 0.3826068937778473, 0.3843611180782318, 0.39609748125076294, 0.3878977596759796, 0.3791191279888153, 0.375570684671402, 0.38078197836875916, 0.3844637870788574, 0.3821570575237274, 0.38131242990493774, 0.3825590908527374, 0.38021397590637207, 0.3825947940349579, 0.39046716690063477, 0.40502873063087463, 0.3954595923423767, 0.3776905834674835, 0.377277672290802, 0.3911089599132538, 0.3959457278251648, 0.3868262469768524, 0.38753044605255127, 0.40716812014579773], "val_accuracy": [0.40033334493637085, 0.4676666557788849, 0.6496666669845581, 0.7003333568572998, 0.7286666631698608, 0.7273333072662354, 0.7673333287239075, 0.7603333592414856, 0.7630000114440918, 0.7786666750907898, 0.7766666412353516, 0.7940000295639038, 0.7986666560173035, 0.8050000071525574, 0.8046666383743286, 0.809333324432373, 0.812666654586792, 0.8176666498184204, 0.8199999928474426, 0.8230000138282776, 0.8230000138282776, 0.8243333101272583, 0.8253333568572998, 0.8253333568572998, 0.8396666646003723, 0.8293333053588867, 0.8413333296775818, 0.8413333296775818, 0.846666693687439, 0.8543333411216736, 0.8553333282470703, 0.8489999771118164, 0.8536666631698608, 0.8543333411216736, 0.859666645526886, 0.8600000143051147, 0.8560000061988831, 0.8613333106040955, 0.8616666793823242, 0.8629999756813049, 0.8616666793823242, 0.8636666536331177, 0.8619999885559082, 0.8653333187103271, 0.8706666827201843, 0.8663333058357239, 0.8673333525657654, 0.8713333606719971, 0.8683333396911621, 0.8676666617393494, 0.8690000176429749, 0.871666669845581, 0.8733333349227905, 0.8723333477973938, 0.8740000128746033, 0.8809999823570251, 0.8790000081062317, 0.8773333430290222, 0.8790000081062317, 0.8799999952316284, 0.878000020980835]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8337143063545227, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5936106443405151, 0.9644087553024292, 0.7301298975944519, 0.6725200414657593, 0.5978008508682251, 0.5606269240379333, 0.5233564376831055, 0.5044439435005188, 0.49912601709365845, 0.5226292610168457, 0.539631187915802, 0.4997413754463196, 0.5160821676254272, 0.5288200378417969, 0.5646674633026123, 0.6106975078582764], "accuracy": [0.4563465714454651, 0.6925109028816223, 0.7316074371337891, 0.7434949278831482, 0.7790252566337585, 0.8000264167785645, 0.8146876096725464, 0.8129705190658569, 0.8257825970649719, 0.811649739742279, 0.8227446675300598, 0.8142913579940796, 0.8202351331710815, 0.8146876096725464, 0.81112140417099, 0.8193105459213257], "val_loss": [1.0317468643188477, 0.6943230628967285, 0.6581735610961914, 0.5935791730880737, 0.5570312142372131, 0.5383011698722839, 0.5387269854545593, 0.5343451499938965, 0.5748798251152039, 0.595614492893219, 0.599057674407959, 0.5649353861808777, 0.6658505201339722, 0.6023918986320496, 0.7407819628715515, 0.6402493119239807], "val_accuracy": [0.6416666507720947, 0.7480000257492065, 0.7676666378974915, 0.7863333225250244, 0.8019999861717224, 0.8233333230018616, 0.8183333277702332, 0.8246666789054871, 0.8143333196640015, 0.8069999814033508, 0.828000009059906, 0.8143333196640015, 0.8259999752044678, 0.7950000166893005, 0.8259999752044678, 0.8163333535194397]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [0, 2, 3, 0, 3, 3, 6, 9, 7, 8], [0, 1, 0, 2, 3, 2], [39, 39, 85], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 0, 0, 3], [16, 16, 65], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 6, 8, 2, 4, 8, 0], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 23, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 10, 6, 3, 10, 6, 4, 3, 2, 1, 1, 1, 23, 13, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.divide_no_nan(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(grad), grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), sigma))), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), tf.math.pow(sigma, alpha)))), beta), tf.math.sqrt(tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 5, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 1, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 1, 8, 1, 4, 1, 9, 2, 8], [0, 0, 1, 3, 0, 0, 2, 1, 2, 0], [16, 99, 58, 99, 18, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 10, 6, 4, 1, 2, 1, 1, 1, 16, 9, 7, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(alpha, sigma))), tf.math.subtract(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 5, 0, 3, 5], [0, 1, 0, 0], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 3, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 2, 1, 0, 1, 1, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 5, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 61], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 8, 3, 6, 8, 1, 2, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 3, 2, 0], [16, 94, 96, 99, 99, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 4, 2, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30385160446167, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}]