[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8574285507202148, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22249698638916, 1.8698219060897827, 1.3883997201919556, 1.0876965522766113, 0.9267395734786987, 0.8391044735908508, 0.7638393044471741, 0.7249350547790527, 0.6750518083572388, 0.654900074005127, 0.6273400187492371, 0.6112295985221863, 0.5917384028434753, 0.5714407563209534, 0.557202935218811, 0.5452121496200562, 0.5291348695755005, 0.5198181867599487, 0.502739667892456, 0.4902436435222626, 0.4883683919906616, 0.47251948714256287, 0.46811383962631226, 0.4545063376426697, 0.447746217250824, 0.4452548623085022, 0.432193785905838, 0.42968156933784485, 0.42640256881713867, 0.4090102016925812, 0.4164527356624603, 0.3962990343570709, 0.3944261074066162, 0.3848818242549896, 0.3807342052459717, 0.38104456663131714, 0.36052578687667847, 0.36627569794654846, 0.36446133255958557, 0.35668841004371643, 0.3503539562225342], "accuracy": [0.282129168510437, 0.4892352521419525, 0.5643904209136963, 0.6223748326301575, 0.6654338836669922, 0.6930392384529114, 0.7253995537757874, 0.7341170310974121, 0.7555144429206848, 0.7564390301704407, 0.7656848430633545, 0.7716285586357117, 0.7823272943496704, 0.7954035401344299, 0.7961959838867188, 0.7984414100646973, 0.809140145778656, 0.8100647330284119, 0.8170651197433472, 0.8238013386726379, 0.8227446675300598, 0.83119797706604, 0.8333113193511963, 0.8367455005645752, 0.8360850811004639, 0.8412362933158875, 0.846387505531311, 0.8436138033866882, 0.845859169960022, 0.8552370667457581, 0.8535200357437134, 0.8602562546730042, 0.8562937378883362, 0.8618412613868713, 0.8647470474243164, 0.8639545440673828, 0.8739928603172302, 0.8702945709228516, 0.8679170608520508, 0.8735966086387634, 0.8762382864952087], "val_loss": [2.0373942852020264, 1.5122880935668945, 1.036289930343628, 0.8292115926742554, 0.7413272857666016, 0.6822226643562317, 0.6413161754608154, 0.6049311757087708, 0.5759907364845276, 0.5543063879013062, 0.5294784903526306, 0.5158313512802124, 0.5046903491020203, 0.4850468635559082, 0.4727681577205658, 0.4603276252746582, 0.45619961619377136, 0.44828498363494873, 0.43544381856918335, 0.42909976840019226, 0.4202633798122406, 0.41677388548851013, 0.40928709506988525, 0.40216580033302307, 0.4042060673236847, 0.3996116518974304, 0.4024336636066437, 0.3894408643245697, 0.3843846321105957, 0.3794446587562561, 0.3821224272251129, 0.37628427147865295, 0.37737366557121277, 0.3693164885044098, 0.36648958921432495, 0.3646056056022644, 0.3627825081348419, 0.36090803146362305, 0.36589810252189636, 0.36451616883277893, 0.3554988503456116], "val_accuracy": [0.5289999842643738, 0.6556666493415833, 0.6833333373069763, 0.706333339214325, 0.7286666631698608, 0.7433333396911621, 0.7639999985694885, 0.7816666960716248, 0.7866666913032532, 0.7940000295639038, 0.8076666593551636, 0.8130000233650208, 0.8096666932106018, 0.8316666483879089, 0.8316666483879089, 0.8376666903495789, 0.8399999737739563, 0.8416666388511658, 0.8510000109672546, 0.8556666374206543, 0.8573333621025085, 0.8556666374206543, 0.8633333444595337, 0.8659999966621399, 0.8640000224113464, 0.8643333315849304, 0.8603333234786987, 0.8709999918937683, 0.871666669845581, 0.878333330154419, 0.8723333477973938, 0.8756666779518127, 0.8733333349227905, 0.8786666393280029, 0.8793333172798157, 0.8843333125114441, 0.8836666941642761, 0.8843333125114441, 0.8759999871253967, 0.8809999823570251, 0.8806666731834412]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8277142643928528, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4781712293624878, 0.816851794719696, 0.6543435454368591, 0.5985913872718811, 0.5729448199272156, 0.5559255480766296, 0.5501740574836731, 0.5053694844245911, 0.4861714243888855, 0.48903724551200867, 0.47607359290122986, 0.47205880284309387, 0.4812222421169281, 0.5282876491546631, 0.5757620930671692, 0.5180916786193848], "accuracy": [0.4959714710712433, 0.7098137736320496, 0.7586844563484192, 0.7823272943496704, 0.7874785661697388, 0.798309326171875, 0.8055738806724548, 0.8169330358505249, 0.8251221776008606, 0.821820080280304, 0.8281601071357727, 0.8321225643157959, 0.8290846943855286, 0.8296129703521729, 0.8142913579940796, 0.82683926820755], "val_loss": [0.7813551425933838, 0.6246479153633118, 0.5647097826004028, 0.5344928503036499, 0.5452059507369995, 0.5205804705619812, 0.5085836052894592, 0.5198851823806763, 0.5194715261459351, 0.49118274450302124, 0.5180523991584778, 0.4994383454322815, 0.5812660455703735, 0.5881553888320923, 0.5956204533576965, 0.5934488773345947], "val_accuracy": [0.715666651725769, 0.7676666378974915, 0.7943333387374878, 0.8109999895095825, 0.8140000104904175, 0.812333345413208, 0.8266666531562805, 0.828000009059906, 0.8220000267028809, 0.8320000171661377, 0.8379999995231628, 0.8366666436195374, 0.8343333601951599, 0.8206666707992554, 0.8213333487510681, 0.8199999928474426]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 4], [0, 0], [0, 49], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.826285719871521, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293596029281616, 2.188183546066284, 1.7630577087402344, 1.3342000246047974, 1.069374442100525, 0.9185199737548828, 0.8247312903404236, 0.8015953302383423, 0.7422963380813599, 0.7283167839050293, 0.7033938765525818, 0.6731328368186951, 0.6386110782623291, 0.6156187057495117, 0.5995106101036072, 0.5862823724746704, 0.5801597833633423, 0.5768879055976868, 0.5437020659446716, 0.5504794716835022, 0.5302330851554871, 0.5189563632011414, 0.507426381111145, 0.4995593726634979, 0.49773135781288147, 0.4762613773345947, 0.47895875573158264, 0.4674603343009949, 0.45276984572410583, 0.45103973150253296, 0.4379573464393616, 0.44100114703178406, 0.4218285083770752, 0.4307457208633423, 0.41049349308013916, 0.4061059355735779, 0.39332395792007446, 0.3843272626399994, 0.37750184535980225, 0.3657006025314331, 0.3681120276451111, 0.36880752444267273, 0.3617960214614868, 0.35608410835266113, 0.352174311876297, 0.34805676341056824, 0.3370225429534912, 0.3320276141166687, 0.33036836981773376, 0.3214782178401947, 0.31939730048179626, 0.31237730383872986, 0.30848750472068787, 0.2959895133972168], "accuracy": [0.1266675442457199, 0.3357548415660858, 0.43904373049736023, 0.54655921459198, 0.6316206455230713, 0.677189290523529, 0.6946242451667786, 0.7078325152397156, 0.7164179086685181, 0.7234182953834534, 0.7390040755271912, 0.7425703406333923, 0.7552502751350403, 0.7693831920623779, 0.7697794437408447, 0.7771760821342468, 0.7754589915275574, 0.7700436115264893, 0.7924976944923401, 0.7901201844215393, 0.7972526550292969, 0.8053097128868103, 0.8063663840293884, 0.8090080618858337, 0.8075551390647888, 0.8138951063156128, 0.8120459914207458, 0.8197067975997925, 0.8251221776008606, 0.829216718673706, 0.8276317715644836, 0.8325188159942627, 0.8376700282096863, 0.8304054737091064, 0.8446704745292664, 0.8461233377456665, 0.8459912538528442, 0.8511425256729126, 0.8561616539955139, 0.8598600029945374, 0.856689989566803, 0.8595958352088928, 0.8544445633888245, 0.8623695969581604, 0.8643507957458496, 0.8654074668884277, 0.8671245574951172, 0.8676528930664062, 0.8704266548156738, 0.871879518032074, 0.8750495314598083, 0.8809932470321655, 0.8774270415306091, 0.8829745054244995], "val_loss": [2.2457191944122314, 2.017780065536499, 1.137561559677124, 0.875596821308136, 0.7733592987060547, 0.7195528745651245, 0.6764822006225586, 0.654859185218811, 0.6558461785316467, 0.6295726895332336, 0.6096110343933105, 0.5818979740142822, 0.5788784027099609, 0.5571325421333313, 0.5434415936470032, 0.5388941168785095, 0.5292955040931702, 0.5201398134231567, 0.5075376033782959, 0.5027615427970886, 0.5062429904937744, 0.4900462329387665, 0.492047518491745, 0.4915895164012909, 0.46996891498565674, 0.4568331241607666, 0.457344651222229, 0.45778486132621765, 0.44806769490242004, 0.4351711571216583, 0.4270174503326416, 0.43965083360671997, 0.4294786751270294, 0.4230117201805115, 0.4354429841041565, 0.4271557629108429, 0.41378146409988403, 0.41566532850265503, 0.4140968322753906, 0.41440245509147644, 0.40743565559387207, 0.4132344126701355, 0.42056527733802795, 0.4139493405818939, 0.4130381643772125, 0.41455957293510437, 0.42050015926361084, 0.42930281162261963, 0.4288780093193054, 0.4318147897720337, 0.42503780126571655, 0.4150978624820709, 0.41513243317604065, 0.42387667298316956], "val_accuracy": [0.4099999964237213, 0.4740000069141388, 0.6460000276565552, 0.6853333115577698, 0.7023333311080933, 0.7336666584014893, 0.7426666617393494, 0.7446666955947876, 0.7543333172798157, 0.7573333382606506, 0.7773333191871643, 0.7730000019073486, 0.7749999761581421, 0.7943333387374878, 0.7973333597183228, 0.79666668176651, 0.7983333468437195, 0.7973333597183228, 0.8023333549499512, 0.8090000152587891, 0.8116666674613953, 0.8143333196640015, 0.8180000185966492, 0.8180000185966492, 0.8289999961853027, 0.8263333439826965, 0.8316666483879089, 0.8349999785423279, 0.8376666903495789, 0.8370000123977661, 0.8379999995231628, 0.8356666564941406, 0.847000002861023, 0.8500000238418579, 0.8453333377838135, 0.8473333120346069, 0.8550000190734863, 0.8579999804496765, 0.859333336353302, 0.8523333072662354, 0.8553333282470703, 0.8606666922569275, 0.8556666374206543, 0.8606666922569275, 0.8640000224113464, 0.862666666507721, 0.8666666746139526, 0.8653333187103271, 0.8679999709129333, 0.8619999885559082, 0.8636666536331177, 0.8659999966621399, 0.8666666746139526, 0.8616666793823242]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [3, 1, 3, 1, 3, 7, 0, 9, 8], [2, 1, 0, 2, 0, 3], [56, 99, 27], [0, 1], [0, 2, 3, 0, 3, 5], [0], [0], [0, 1], [0], [0], [0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [6, 3, 3, 6, 8, 2, 1, 1, 4, 2, 8, 2, 0, 9, 2, 1, 6, 6, 1, 4, 7, 8, 4, 6, 3, 0, 8, 6, 8, 5, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 3, 3, 2, 3, 3, 4, 1, 5, 6, 1, 7], [16, 99, 96, 99, 61, 1, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 9, 6, 3, 2, 1, 1, 1, 2, 1, 1, 1, 52, 31, 21, 7], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, alpha), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma)), alpha), tf.math.add(tf.math.sqrt(beta), tf.math.add(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.divide_no_nan(sigma, tf.math.divide_no_nan(sigma, tf.math.subtract(beta, sigma))), tf.math.pow(tf.math.add(sigma, tf.math.sqrt(tf.math.pow(grad, alpha))), tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.math.sqrt(grad)), tf.math.divide_no_nan(tf.math.sqrt(grad), alpha)), tf.math.square(tf.math.sqrt(grad)))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 8, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 2, 4, 1, 2, 3, 4, 1, 8, 3, 7, 4, 1, 3, 2, 0, 1, 5, 2, 8, 8, 7, 8, 7, 0], [0, 2, 0, 3, 4, 5, 3, 3, 2, 5, 3, 5, 0, 1, 0, 4, 4, 4], [16, 16, 70, 59, 81], [0, 1, 1], [2], [0, 4], [0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 8, 8, 6, 5, 7, 4, 7], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0, 23, 65, 23, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 43, 25, 18, 4, 3, 1, 2, 1, 11, 7, 4, 3], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad))), tf.math.pow(tf.math.subtract(tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.pow(grad, grad), grad), tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.negative(tf.math.subtract(beta, grad)), tf.math.square(tf.math.add(grad, tf.math.sqrt(grad)))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))))), grad), tf.math.sqrt(tf.math.add(tf.math.negative(grad), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.divide_no_nan(tf.math.square(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3], [0, 1, 0, 0], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 6, 6, 8, 1, 4, 1, 4, 6, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 7, 4, 3, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(grad, tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 6, 1, 3], [0, 2, 1, 0, 2], [39, 39, 77], [0, 1], [0], [0, 2, 0, 3], [16, 16], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 4, 8, 6, 2, 1, 0, 1, 6, 8, 7, 7], [0, 5, 3, 7, 4, 0, 4, 0, 6], [0, 65, 77], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0], [6, 3, 3, 0, 1, 1, 4, 1, 4, 2, 8, 0, 8, 8, 2, 3, 4, 8, 8, 9, 3, 7, 8, 4, 2, 0, 2, 8], [1, 6, 3, 7, 2, 4, 5, 1, 1, 0, 4, 7, 3, 0, 1, 1], [0, 68, 60, 87]], "fitness": -0.08828571438789368, "mapping_values": [1, 10, 5, 5, 2, 2, 1, 1, 1, 21, 12, 9, 3, 23, 13, 10, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(grad, sigma))), tf.math.divide_no_nan(tf.math.sqrt(grad), grad)), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(grad, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.multiply(tf.math.negative(tf.math.subtract(tf.math.subtract(tf.math.pow(grad, sigma), tf.math.subtract(tf.math.pow(tf.math.add(grad, tf.math.sqrt(beta)), grad), grad)), alpha)), tf.math.negative(alpha))), tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.310347557067871, 2.3097167015075684, 2.3097710609436035, 2.310371160507202, 2.309886932373047, 2.3102385997772217], "accuracy": [0.09100515395402908, 0.08902391046285629, 0.09034473448991776, 0.09338264167308807, 0.08981640636920929, 0.09391097724437714], "val_loss": [2.3091399669647217, 2.3091399669647217, 2.3091399669647217, 2.3091399669647217, 2.3091399669647217, 2.3091399669647217], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]