[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8714285492897034, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2225797176361084, 1.870382308959961, 1.3918060064315796, 1.0916603803634644, 0.9384312033653259, 0.8385211825370789, 0.776557981967926, 0.7256108522415161, 0.6939874291419983, 0.6590026021003723, 0.6342445015907288, 0.6110750436782837, 0.601362943649292, 0.5718945264816284, 0.5617675185203552, 0.5481887459754944, 0.5379052758216858, 0.5291695594787598, 0.5091321468353271, 0.49604442715644836, 0.48822495341300964, 0.4849856495857239, 0.4756344258785248, 0.4605792462825775, 0.45206010341644287, 0.4432622492313385, 0.43720385432243347, 0.4334382116794586, 0.4209313690662384, 0.4271952211856842, 0.40990036725997925, 0.40238386392593384, 0.3948153257369995, 0.40428316593170166, 0.38467729091644287, 0.37795349955558777, 0.37531182169914246, 0.3752378821372986, 0.369829386472702, 0.3635781407356262, 0.35298284888267517, 0.3531802296638489, 0.3447149991989136, 0.3403260111808777, 0.33517423272132874, 0.32541462779045105, 0.3211548924446106, 0.3196367919445038, 0.32511264085769653, 0.32106226682662964, 0.3134267330169678, 0.31038159132003784, 0.30127981305122375, 0.30506160855293274, 0.2964981198310852, 0.29158806800842285, 0.28169897198677063, 0.2810312509536743, 0.27950552105903625, 0.2696332335472107, 0.2704644501209259, 0.26702284812927246, 0.26162898540496826, 0.2616388499736786, 0.24964667856693268, 0.2571485638618469, 0.2533266544342041, 0.24560211598873138, 0.2462506741285324, 0.24366414546966553, 0.24241003394126892, 0.23683278262615204], "accuracy": [0.2693171203136444, 0.4913485646247864, 0.5667679309844971, 0.6155065298080444, 0.6642451286315918, 0.6956809163093567, 0.7168141603469849, 0.7403249144554138, 0.7449478507041931, 0.7574957013130188, 0.7701756954193115, 0.7803460359573364, 0.7836481332778931, 0.7926297783851624, 0.7955356240272522, 0.7992339134216309, 0.8074230551719666, 0.8127063512802124, 0.8173292875289917, 0.8215559124946594, 0.8253863453865051, 0.8265751004219055, 0.8276317715644836, 0.835160493850708, 0.8401796221733093, 0.8399154543876648, 0.845859169960022, 0.8461233377456665, 0.8506141901016235, 0.8474441766738892, 0.8558974862098694, 0.8535200357437134, 0.8589354157447815, 0.8574824929237366, 0.8663320541381836, 0.8643507957458496, 0.8640866279602051, 0.8664641380310059, 0.8681812286376953, 0.8706908226013184, 0.8739928603172302, 0.8728041052818298, 0.878351628780365, 0.8775591254234314, 0.883238673210144, 0.8835028409957886, 0.8804649114608765, 0.8825782537460327, 0.883238673210144, 0.8869370222091675, 0.8891823887825012, 0.8877294659614563, 0.8897107243537903, 0.8902390599250793, 0.8931449055671692, 0.8951261639595032, 0.9017302989959717, 0.8996169567108154, 0.9010698795318604, 0.902390718460083, 0.9055606722831726, 0.9026548862457275, 0.9062210917472839, 0.9038436412811279, 0.9095231890678406, 0.9041078090667725, 0.9033153057098389, 0.9091269373893738, 0.9096552729606628, 0.913617730140686, 0.9108440279960632, 0.9144102334976196], "val_loss": [2.041869878768921, 1.5159801244735718, 1.04576575756073, 0.8420294523239136, 0.7490301132202148, 0.6954053640365601, 0.6533664464950562, 0.61678546667099, 0.5883719325065613, 0.5690403580665588, 0.5482078194618225, 0.5315408706665039, 0.5190221071243286, 0.5076238512992859, 0.5030978322029114, 0.49248361587524414, 0.4779187738895416, 0.4686814844608307, 0.4597092568874359, 0.45616450905799866, 0.4464329481124878, 0.44439053535461426, 0.43524494767189026, 0.42848697304725647, 0.4240463078022003, 0.4177461862564087, 0.4104749858379364, 0.41264936327934265, 0.4105684757232666, 0.40525147318840027, 0.3982942998409271, 0.39782339334487915, 0.3959729075431824, 0.3885922133922577, 0.38790714740753174, 0.3832686245441437, 0.38366568088531494, 0.3819873332977295, 0.3767506182193756, 0.3771687150001526, 0.3696278929710388, 0.37219947576522827, 0.36542969942092896, 0.3672681450843811, 0.36888304352760315, 0.3609808385372162, 0.36343204975128174, 0.3612285256385803, 0.3597014546394348, 0.35218602418899536, 0.3581497371196747, 0.3502442240715027, 0.3527493476867676, 0.3503781259059906, 0.34826311469078064, 0.3453875184059143, 0.34655484557151794, 0.34814712405204773, 0.34559231996536255, 0.34957242012023926, 0.3427848219871521, 0.34307023882865906, 0.33877527713775635, 0.3374451696872711, 0.34037938714027405, 0.3452119827270508, 0.33834609389305115, 0.33504027128219604, 0.3415510952472687, 0.3381067216396332, 0.3391379415988922, 0.33344995975494385], "val_accuracy": [0.5400000214576721, 0.6389999985694885, 0.6813333630561829, 0.6973333358764648, 0.7253333330154419, 0.7456666827201843, 0.7519999742507935, 0.7636666893959045, 0.7749999761581421, 0.7829999923706055, 0.7923333048820496, 0.8009999990463257, 0.8043333292007446, 0.8113333582878113, 0.8153333067893982, 0.8190000057220459, 0.8230000138282776, 0.8366666436195374, 0.8379999995231628, 0.8363333344459534, 0.8416666388511658, 0.8399999737739563, 0.8453333377838135, 0.8463333249092102, 0.8519999980926514, 0.8493333458900452, 0.8539999723434448, 0.8539999723434448, 0.8543333411216736, 0.8553333282470703, 0.8550000190734863, 0.8613333106040955, 0.8586666584014893, 0.8619999885559082, 0.8616666793823242, 0.8613333106040955, 0.8669999837875366, 0.8643333315849304, 0.8703333139419556, 0.8650000095367432, 0.8669999837875366, 0.871666669845581, 0.8740000128746033, 0.871999979019165, 0.8696666955947876, 0.8713333606719971, 0.8690000176429749, 0.8763333559036255, 0.871666669845581, 0.878333330154419, 0.875, 0.8776666522026062, 0.8763333559036255, 0.8773333430290222, 0.8816666603088379, 0.8799999952316284, 0.8796666860580444, 0.8820000290870667, 0.8799999952316284, 0.8809999823570251, 0.8813333511352539, 0.8849999904632568, 0.8849999904632568, 0.8853333592414856, 0.8870000243186951, 0.8840000033378601, 0.887333333492279, 0.8859999775886536, 0.8849999904632568, 0.8846666812896729, 0.887333333492279, 0.8859999775886536]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 6], [0, 1], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8637142777442932, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293240547180176, 2.1868674755096436, 1.7497316598892212, 1.3534213304519653, 1.0484693050384521, 0.9222205281257629, 0.840262770652771, 0.8467080593109131, 0.7691522836685181, 0.7456533908843994, 0.7009754776954651, 0.6859130859375, 0.648926317691803, 0.6265238523483276, 0.6119495034217834, 0.6037037372589111, 0.5904648900032043, 0.5627899169921875, 0.5576021075248718, 0.5456783771514893, 0.522663950920105, 0.5219092965126038, 0.5116048455238342, 0.499204158782959, 0.5033142566680908, 0.46999281644821167, 0.4738806486129761, 0.45589035749435425, 0.46175894141197205, 0.4552922248840332, 0.44327786564826965, 0.44243690371513367, 0.4313453733921051, 0.4190741777420044, 0.415179967880249, 0.3999934196472168, 0.4003014862537384, 0.39376744627952576, 0.3717647194862366, 0.38845446705818176, 0.36415600776672363, 0.36813610792160034, 0.3656623661518097, 0.34711167216300964, 0.34679993987083435, 0.3353760838508606, 0.3313356041908264, 0.33068668842315674, 0.3259861469268799, 0.3377557396888733, 0.3396562337875366, 0.3327554762363434], "accuracy": [0.1266675442457199, 0.33403778076171875, 0.4527803361415863, 0.5396909117698669, 0.6473385095596313, 0.6646413803100586, 0.6877558827400208, 0.6970016956329346, 0.7131158113479614, 0.7239466309547424, 0.7268524765968323, 0.7357020378112793, 0.7498348951339722, 0.7652885913848877, 0.7685906887054443, 0.7744023203849792, 0.7775723338127136, 0.7928939461708069, 0.7891955971717834, 0.7968564033508301, 0.7997622489929199, 0.8016114234924316, 0.8107251524925232, 0.817461371421814, 0.8131026029586792, 0.8162726163864136, 0.819442629814148, 0.8276317715644836, 0.8260467648506165, 0.8280280232429504, 0.8350284099578857, 0.8286884427070618, 0.8363492488861084, 0.8416325449943542, 0.8465195894241333, 0.8499537706375122, 0.8474441766738892, 0.8519350290298462, 0.8603883385658264, 0.8499537706375122, 0.8578787446022034, 0.8599920868873596, 0.8570862412452698, 0.8673887252807617, 0.8660678863525391, 0.8701624870300293, 0.8761062026023865, 0.8708229064941406, 0.8767666220664978, 0.8692378997802734, 0.8659358024597168, 0.8692378997802734], "val_loss": [2.2453014850616455, 2.0113041400909424, 1.1149120330810547, 0.8327942490577698, 0.7558017373085022, 0.7074339985847473, 0.6536064743995667, 0.641477644443512, 0.6229479312896729, 0.6293785572052002, 0.5570427775382996, 0.5453377962112427, 0.52850741147995, 0.5152877569198608, 0.5123048424720764, 0.500106930732727, 0.4930046498775482, 0.47815707325935364, 0.47650042176246643, 0.4688638150691986, 0.4666379392147064, 0.459036648273468, 0.4490845203399658, 0.43569254875183105, 0.43253880739212036, 0.43923255801200867, 0.4304576814174652, 0.41470861434936523, 0.41514283418655396, 0.4180864691734314, 0.4049719274044037, 0.407828688621521, 0.4029709994792938, 0.4016928970813751, 0.39196261763572693, 0.3793088495731354, 0.38005274534225464, 0.37923893332481384, 0.3860771358013153, 0.371103972196579, 0.3743019998073578, 0.3695977032184601, 0.3588774800300598, 0.357794851064682, 0.36628109216690063, 0.37266531586647034, 0.36567366123199463, 0.36606860160827637, 0.3783772885799408, 0.38713979721069336, 0.36980298161506653, 0.3729120194911957], "val_accuracy": [0.4216666519641876, 0.4833333194255829, 0.6416666507720947, 0.6890000104904175, 0.7256666421890259, 0.7450000047683716, 0.7360000014305115, 0.7413333058357239, 0.762333333492279, 0.7483333349227905, 0.7850000262260437, 0.7926666736602783, 0.7976666688919067, 0.7950000166893005, 0.8066666722297668, 0.8056666851043701, 0.8103333115577698, 0.8196666836738586, 0.8140000104904175, 0.8180000185966492, 0.8220000267028809, 0.831333339214325, 0.8353333473205566, 0.8416666388511658, 0.8379999995231628, 0.8399999737739563, 0.843666672706604, 0.8489999771118164, 0.8486666679382324, 0.8483333587646484, 0.8526666760444641, 0.8523333072662354, 0.8550000190734863, 0.8546666502952576, 0.8573333621025085, 0.862666666507721, 0.859666645526886, 0.8613333106040955, 0.859666645526886, 0.8610000014305115, 0.8633333444595337, 0.8653333187103271, 0.8693333268165588, 0.8709999918937683, 0.8656666874885559, 0.8676666617393494, 0.8726666569709778, 0.8690000176429749, 0.8643333315849304, 0.8646666407585144, 0.8676666617393494, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.838857114315033, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.550865888595581, 0.8474404811859131, 0.6998791694641113, 0.6255442500114441, 0.5776180028915405, 0.5716705322265625, 0.5299502611160278, 0.52130526304245, 0.4956538677215576, 0.47000518441200256, 0.4469880759716034, 0.44652801752090454, 0.43852439522743225, 0.4378124177455902, 0.4376696050167084, 0.41470372676849365, 0.4660491347312927, 0.530887246131897, 0.513678789138794], "accuracy": [0.4707436263561249, 0.7042662501335144, 0.7423061728477478, 0.7666094303131104, 0.7882710099220276, 0.7928939461708069, 0.8074230551719666, 0.8095363974571228, 0.8150838613510132, 0.8308017253875732, 0.8350284099578857, 0.8339717388153076, 0.8417646288871765, 0.8379341959953308, 0.845859169960022, 0.850350022315979, 0.8454629778862, 0.833179235458374, 0.8265751004219055], "val_loss": [0.8561943173408508, 0.6339351534843445, 0.5739516019821167, 0.525124192237854, 0.5242571830749512, 0.49825945496559143, 0.4908110797405243, 0.47121572494506836, 0.49359020590782166, 0.4869280457496643, 0.49385908246040344, 0.515380859375, 0.5104390978813171, 0.494983971118927, 0.5674804449081421, 0.5413087606430054, 0.571607232093811, 0.55763179063797, 0.5495384335517883], "val_accuracy": [0.6943333148956299, 0.7649999856948853, 0.7646666765213013, 0.8076666593551636, 0.8050000071525574, 0.8220000267028809, 0.8233333230018616, 0.8263333439826965, 0.8339999914169312, 0.8360000252723694, 0.8299999833106995, 0.840666651725769, 0.8316666483879089, 0.8410000205039978, 0.8330000042915344, 0.8410000205039978, 0.8370000123977661, 0.8373333215713501, 0.8363333344459534]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 8, 3], [0, 1, 0, 1], [37, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 2, 3, 0, 3, 5, 0, 7, 6, 9], [0, 2, 0, 3, 3], [16, 16, 14], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 8, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 67, 74, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 15, 10, 5, 3, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.divide_no_nan(grad, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), sigma)), tf.math.subtract(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), sigma))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 5, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [8], [0], [99], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 1, 3, 6, 8, 8, 1, 3, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 4, 2, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 10, 6, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30411434173584, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 9, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [6, 99, 96, 40, 96, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 0, 20, 10, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), sigma))), alpha), tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 1, 0, 1], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [2, 8, 6, 0, 3, 5], [0, 2, 0, 3], [16, 40], [1, 1], [0], [0], [72], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 6, 2, 8, 7], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 1, 0, 1, 1, 23, 12, 11, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta)), tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.divide_no_nan(sigma, grad), tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]