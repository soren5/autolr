[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8697142601013184, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2215752601623535, 1.862842082977295, 1.3924832344055176, 1.1048862934112549, 0.9380128383636475, 0.8461306691169739, 0.7682694792747498, 0.7241894006729126, 0.6944344639778137, 0.6576157212257385, 0.6320542097091675, 0.6143742799758911, 0.6000224351882935, 0.5809102058410645, 0.5592229962348938, 0.5460045337677002, 0.5458768606185913, 0.5268648266792297, 0.5218135714530945, 0.4985406994819641, 0.48745787143707275, 0.4753812253475189, 0.4724060893058777, 0.4701266884803772, 0.4597819447517395, 0.44233810901641846, 0.4443798065185547, 0.43044137954711914, 0.42727187275886536, 0.42591777443885803, 0.4114987850189209, 0.4055596888065338, 0.39937278628349304, 0.3934177756309509, 0.3915390372276306, 0.3823179304599762, 0.3825496435165405, 0.37774333357810974, 0.3666169345378876, 0.36395761370658875, 0.3584771752357483, 0.3522709906101227], "accuracy": [0.28120461106300354, 0.47747984528541565, 0.559899628162384, 0.6126006841659546, 0.6621318459510803, 0.6934354901313782, 0.7268524765968323, 0.7327961921691895, 0.746268630027771, 0.7518161535263062, 0.7709681391716003, 0.77677983045578, 0.7769119143486023, 0.7885351777076721, 0.7950072884559631, 0.8024039268493652, 0.7973847389221191, 0.8038568496704102, 0.807158887386322, 0.817461371421814, 0.8228767514228821, 0.8253863453865051, 0.8298771381378174, 0.8313300609588623, 0.8297450542449951, 0.8356888294219971, 0.8428213000297546, 0.8430854678153992, 0.8448025584220886, 0.8438779711723328, 0.8552370667457581, 0.856689989566803, 0.8564258217811584, 0.8578787446022034, 0.8574824929237366, 0.8658037185668945, 0.8647470474243164, 0.8642187118530273, 0.8656716346740723, 0.8677849769592285, 0.8714832663536072, 0.8737286925315857], "val_loss": [2.0364906787872314, 1.5057135820388794, 1.0276942253112793, 0.8228594660758972, 0.7365943789482117, 0.681858479976654, 0.6390343308448792, 0.6064659953117371, 0.5797681212425232, 0.5609535574913025, 0.5469517707824707, 0.5305608510971069, 0.5138214826583862, 0.5087834596633911, 0.49384626746177673, 0.48389819264411926, 0.4783209562301636, 0.4732723534107208, 0.46735578775405884, 0.46124258637428284, 0.45445191860198975, 0.4487640857696533, 0.43897777795791626, 0.4397370517253876, 0.4338632822036743, 0.4326457977294922, 0.42198657989501953, 0.4183856248855591, 0.41639474034309387, 0.4134828746318817, 0.4093375504016876, 0.4103364944458008, 0.4053727686405182, 0.397718220949173, 0.3960507810115814, 0.3938768804073334, 0.3884395658969879, 0.3889980614185333, 0.38323095440864563, 0.3814314305782318, 0.3852073550224304, 0.38069674372673035], "val_accuracy": [0.5109999775886536, 0.6523333191871643, 0.6850000023841858, 0.7143333554267883, 0.7356666922569275, 0.7459999918937683, 0.7633333206176758, 0.778333306312561, 0.7826666831970215, 0.7839999794960022, 0.7900000214576721, 0.8119999766349792, 0.8133333325386047, 0.8119999766349792, 0.8216666579246521, 0.8243333101272583, 0.8266666531562805, 0.8256666660308838, 0.8256666660308838, 0.8296666741371155, 0.8276666402816772, 0.8356666564941406, 0.8403333425521851, 0.8450000286102295, 0.8426666855812073, 0.843666672706604, 0.8486666679382324, 0.846666693687439, 0.8489999771118164, 0.8516666889190674, 0.8510000109672546, 0.8519999980926514, 0.856333315372467, 0.8529999852180481, 0.8543333411216736, 0.859000027179718, 0.862666666507721, 0.8573333621025085, 0.8600000143051147, 0.859666645526886, 0.8619999885559082, 0.8610000014305115]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 5], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8465714454650879, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292903184890747, 2.1893327236175537, 1.7708256244659424, 1.3556419610977173, 1.0314666032791138, 0.9100500345230103, 0.8399419188499451, 0.8096181154251099, 0.7687014937400818, 0.7377315759658813, 0.708662748336792, 0.7029967308044434, 0.6433939933776855, 0.6250107288360596, 0.6223377585411072, 0.591217577457428, 0.5876339673995972, 0.5617003440856934, 0.5580692291259766, 0.5605701804161072, 0.5412468910217285, 0.5169155597686768, 0.5150086879730225, 0.5080318450927734, 0.4914007782936096, 0.4864940345287323, 0.4900423586368561, 0.46689605712890625, 0.46387752890586853, 0.45428213477134705, 0.45375296473503113, 0.44323185086250305, 0.42977479100227356, 0.4285634756088257, 0.41527676582336426, 0.4053735136985779, 0.41184043884277344, 0.39117252826690674, 0.3976217806339264, 0.386911541223526, 0.37824001908302307, 0.3756770193576813, 0.3581589162349701, 0.3653205335140228, 0.3534370958805084, 0.34876418113708496, 0.3533669412136078, 0.3425384759902954, 0.3436065912246704, 0.3258419930934906, 0.33147841691970825, 0.31762200593948364, 0.314389705657959, 0.3235396444797516, 0.31162282824516296, 0.30496010184288025, 0.3057662844657898, 0.2995491325855255, 0.31329938769340515, 0.2905440926551819, 0.3067529797554016, 0.3027382493019104, 0.2931702733039856, 0.29460710287094116], "accuracy": [0.12719587981700897, 0.32399946451187134, 0.43626996874809265, 0.5469554662704468, 0.6388852000236511, 0.6670188903808594, 0.6903975605964661, 0.7024171352386475, 0.7088891863822937, 0.7120591998100281, 0.7296261787414551, 0.7338528633117676, 0.7547219395637512, 0.7635715007781982, 0.7605336308479309, 0.7718927264213562, 0.7790252566337585, 0.7869502305984497, 0.7891955971717834, 0.7843085527420044, 0.7865539789199829, 0.8004226684570312, 0.8062343001365662, 0.8070268034934998, 0.8138951063156128, 0.8137630224227905, 0.8115176558494568, 0.819442629814148, 0.8222163319587708, 0.8230088353157043, 0.8236692547798157, 0.8301413059234619, 0.8343679904937744, 0.8315942287445068, 0.8401796221733093, 0.842028796672821, 0.8422929644584656, 0.8469158411026001, 0.8487650156021118, 0.8519350290298462, 0.8556333184242249, 0.8543124794960022, 0.8551049828529358, 0.86118084192276, 0.8593316674232483, 0.8613129258155823, 0.8626337051391602, 0.8652753829956055, 0.8681812286376953, 0.8725399374961853, 0.8705587387084961, 0.8706908226013184, 0.8741249442100525, 0.8704266548156738, 0.8746532797813416, 0.8780874609947205, 0.8750495314598083, 0.878351628780365, 0.8720116019248962, 0.8798044919967651, 0.8758420348167419, 0.8809932470321655, 0.8776912093162537, 0.8768987059593201], "val_loss": [2.247054100036621, 2.0229480266571045, 1.1412577629089355, 0.8733180165290833, 0.7581409215927124, 0.7101725339889526, 0.6732001304626465, 0.6539941430091858, 0.6496533751487732, 0.6129875779151917, 0.5840502381324768, 0.5732350945472717, 0.5517862439155579, 0.5462788343429565, 0.5288240313529968, 0.5342518091201782, 0.5278698801994324, 0.5208377838134766, 0.5103720426559448, 0.5037442445755005, 0.49439144134521484, 0.4884854257106781, 0.4943991005420685, 0.48052531480789185, 0.4824659824371338, 0.478728324174881, 0.47137340903282166, 0.463397741317749, 0.4599074423313141, 0.4784374237060547, 0.46009957790374756, 0.4509185254573822, 0.44368594884872437, 0.44113582372665405, 0.44766882061958313, 0.4360644519329071, 0.4291899502277374, 0.43785911798477173, 0.43895891308784485, 0.43634602427482605, 0.4422420263290405, 0.43980973958969116, 0.4368418753147125, 0.43988168239593506, 0.4292524456977844, 0.44657912850379944, 0.44410258531570435, 0.44067537784576416, 0.43501535058021545, 0.4544904828071594, 0.4799940586090088, 0.4634823501110077, 0.4798862338066101, 0.48860999941825867, 0.5057422518730164, 0.5046852827072144, 0.4818698763847351, 0.4835149645805359, 0.4834766387939453, 0.5089076161384583, 0.5270370244979858, 0.5248132944107056, 0.5378700494766235, 0.5335659980773926], "val_accuracy": [0.3973333239555359, 0.45266667008399963, 0.6453333497047424, 0.7020000219345093, 0.7243333458900452, 0.7323333621025085, 0.7646666765213013, 0.7573333382606506, 0.7616666555404663, 0.7763333320617676, 0.7829999923706055, 0.7900000214576721, 0.7836666703224182, 0.7910000085830688, 0.8063333630561829, 0.8016666769981384, 0.8063333630561829, 0.815666675567627, 0.8083333373069763, 0.8056666851043701, 0.8220000267028809, 0.8236666917800903, 0.8206666707992554, 0.8263333439826965, 0.828000009059906, 0.8303333520889282, 0.8373333215713501, 0.8383333086967468, 0.8353333473205566, 0.8416666388511658, 0.843999981880188, 0.8510000109672546, 0.8513333201408386, 0.8513333201408386, 0.8506666421890259, 0.8539999723434448, 0.8539999723434448, 0.8569999933242798, 0.8533333539962769, 0.8533333539962769, 0.8539999723434448, 0.8516666889190674, 0.8603333234786987, 0.8603333234786987, 0.8579999804496765, 0.8579999804496765, 0.8603333234786987, 0.8606666922569275, 0.8616666793823242, 0.8576666712760925, 0.8553333282470703, 0.8650000095367432, 0.8633333444595337, 0.8650000095367432, 0.8663333058357239, 0.8636666536331177, 0.8663333058357239, 0.8610000014305115, 0.8693333268165588, 0.8650000095367432, 0.8616666793823242, 0.8610000014305115, 0.8603333234786987, 0.8600000143051147]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 0, 1], [0, 3, 0], [0, 3], [0], [1], [0], [2], [0]], "fitness": -0.843999981880188, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4236271381378174, 0.7567970752716064, 0.6446507573127747, 0.5737226605415344, 0.5554853677749634, 0.5064287185668945, 0.5069313645362854, 0.48344457149505615, 0.4790085554122925, 0.45324188470840454, 0.4740765690803528, 0.4533132314682007, 0.4399539828300476, 0.44162601232528687, 0.4232872724533081, 0.4040919244289398, 0.4169682562351227, 0.4423617124557495, 0.4540064334869385, 0.4508533477783203, 0.4637846350669861, 0.4523722231388092, 0.48273035883903503], "accuracy": [0.4994056224822998, 0.7322678565979004, 0.7555144429206848, 0.7840443849563599, 0.7857614755630493, 0.8098005652427673, 0.8113855719566345, 0.8251221776008606, 0.8265751004219055, 0.8352925777435303, 0.8392550349235535, 0.8327829837799072, 0.8416325449943542, 0.8508783578872681, 0.8486329317092896, 0.8560295701026917, 0.8573504090309143, 0.8457271456718445, 0.8479725122451782, 0.8500858545303345, 0.8417646288871765, 0.8491612672805786, 0.8524633646011353], "val_loss": [0.7903130650520325, 0.6216509938240051, 0.5476681590080261, 0.5252514481544495, 0.5219134092330933, 0.5084965229034424, 0.5032665729522705, 0.5122457146644592, 0.5260297656059265, 0.5555295348167419, 0.5785037279129028, 0.5179420709609985, 0.5792322754859924, 0.5465134382247925, 0.5850974917411804, 0.5889104008674622, 0.60029536485672, 0.5002344846725464, 0.6109380125999451, 0.5752805471420288, 0.5896485447883606, 0.667052149772644, 0.6052290201187134], "val_accuracy": [0.7296666502952576, 0.7789999842643738, 0.7886666655540466, 0.8029999732971191, 0.8116666674613953, 0.8206666707992554, 0.8259999752044678, 0.8293333053588867, 0.8246666789054871, 0.8320000171661377, 0.828000009059906, 0.8416666388511658, 0.8389999866485596, 0.8373333215713501, 0.8399999737739563, 0.8389999866485596, 0.8429999947547913, 0.8493333458900452, 0.8386666774749756, 0.8346666693687439, 0.8486666679382324, 0.8420000076293945, 0.8423333168029785]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 2, 3, 2, 3, 6, 2, 1, 8, 0], [1, 0, 0, 2, 3, 2, 0, 1], [39, 39, 68], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1], [4, 2, 3, 1, 8, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 5, 3, 6, 8, 1, 4, 2, 4, 2, 8, 2], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 37, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 10, 8, 3, 1, 0, 1, 1, 2, 1, 1, 1, 22, 12, 10, 6], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.divide_no_nan(grad, tf.math.add(tf.math.subtract(tf.math.sqrt(tf.math.negative(grad)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), alpha)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.add(alpha, beta))))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 3, 2], [39, 39], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [1, 2, 0, 3], [0, 10], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 6, 3, 7, 8, 0, 7, 5, 7, 5, 3, 2, 7, 7], [1, 1, 6, 0, 2, 7, 3, 4, 0, 7], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 2, 1, 1, 0, 2, 1, 1, 1, 24, 14, 10, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.square(grad), tf.math.add(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta)))))), tf.math.multiply(tf.math.add(grad, sigma), tf.math.add(tf.math.add(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)), grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [83, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 8], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [81], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 6, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 4, 3, 1, 2, 0], [44, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 3, 0, 2, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 0, 2, 8], [0, 4, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 17, 9, 8, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]