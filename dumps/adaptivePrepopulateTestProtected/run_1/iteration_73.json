[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.868571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.225525140762329, 1.8799219131469727, 1.4145070314407349, 1.1064245700836182, 0.9366238117218018, 0.8536971211433411, 0.7856565117835999, 0.740587055683136, 0.703395664691925, 0.6775058507919312, 0.6480858325958252, 0.6284965872764587, 0.6105853915214539, 0.584109902381897, 0.5690078139305115, 0.5482566356658936, 0.5392251014709473, 0.5222395658493042, 0.5177888870239258, 0.5075501203536987, 0.4950062036514282, 0.48409417271614075, 0.46864721179008484, 0.4636268615722656, 0.4537346661090851, 0.44842344522476196, 0.4487031102180481, 0.43361878395080566, 0.4246143400669098, 0.4095662534236908, 0.4141872823238373, 0.4026956558227539, 0.4039619266986847, 0.3893028497695923, 0.3866502642631531, 0.37344974279403687, 0.37666285037994385, 0.3673928678035736, 0.36952096223831177, 0.36402779817581177, 0.35059913992881775, 0.346890926361084, 0.346341609954834, 0.339589387178421, 0.3362807333469391, 0.3216957151889801, 0.3251926600933075, 0.31856945157051086, 0.3145352303981781, 0.30806946754455566, 0.3064318597316742, 0.3045566976070404, 0.30528560280799866, 0.28822651505470276, 0.2928578555583954, 0.2849089503288269, 0.2789279818534851, 0.2777477204799652, 0.28157922625541687, 0.26611509919166565, 0.27057692408561707, 0.2694983184337616, 0.2572275400161743, 0.2518186569213867, 0.25058963894844055, 0.2437041699886322, 0.2446107119321823], "accuracy": [0.28001585602760315, 0.4764232039451599, 0.5550125241279602, 0.6098269820213318, 0.6630563735961914, 0.6934354901313782, 0.7148329019546509, 0.7280412316322327, 0.7386078238487244, 0.7449478507041931, 0.7605336308479309, 0.7692511081695557, 0.7758552432060242, 0.7866860628128052, 0.7893276810646057, 0.8053097128868103, 0.805177628993988, 0.8058380484580994, 0.8067626357078552, 0.817461371421814, 0.8181217908859253, 0.8271034359931946, 0.8286884427070618, 0.8343679904937744, 0.8362171649932861, 0.8363492488861084, 0.8337075710296631, 0.845859169960022, 0.8481045961380005, 0.8488970994949341, 0.850350022315979, 0.8573504090309143, 0.8558974862098694, 0.8618412613868713, 0.8619733452796936, 0.8669924736022949, 0.8652753829956055, 0.8661999702453613, 0.8658037185668945, 0.8691058158874512, 0.872407853603363, 0.8749174475669861, 0.8757099509239197, 0.8780874609947205, 0.8798044919967651, 0.882710337638855, 0.8823140859603882, 0.8824461698532104, 0.8874653577804565, 0.8868049383163452, 0.8873332738876343, 0.8928807377815247, 0.8893144726753235, 0.8927486538887024, 0.8928807377815247, 0.8963148593902588, 0.8990886211395264, 0.8980319499969482, 0.9017302989959717, 0.9046360850334167, 0.9027869701385498, 0.9031832218170166, 0.9035794734954834, 0.9078060984611511, 0.9119006991386414, 0.9093911051750183, 0.9121648669242859], "val_loss": [2.045954704284668, 1.5293943881988525, 1.0520514249801636, 0.8331990838050842, 0.7463076114654541, 0.6926256418228149, 0.6537423729896545, 0.6209979057312012, 0.5906111598014832, 0.5703450441360474, 0.5574414730072021, 0.5443387031555176, 0.5277357697486877, 0.5118961334228516, 0.505000650882721, 0.4933162331581116, 0.4843069612979889, 0.47958454489707947, 0.4688597321510315, 0.46145495772361755, 0.457816481590271, 0.44793644547462463, 0.4438944458961487, 0.4391244351863861, 0.4372846186161041, 0.4298386573791504, 0.4266381561756134, 0.42284733057022095, 0.4207615554332733, 0.42743295431137085, 0.412670373916626, 0.4091768264770508, 0.408017098903656, 0.4012794494628906, 0.400082528591156, 0.39663225412368774, 0.3929251432418823, 0.3959052264690399, 0.39670494198799133, 0.39036107063293457, 0.38972964882850647, 0.38288724422454834, 0.38072431087493896, 0.38802117109298706, 0.380646675825119, 0.3808121681213379, 0.3792991638183594, 0.37844693660736084, 0.3781728148460388, 0.3718259632587433, 0.3718303143978119, 0.3698066771030426, 0.3713422417640686, 0.3684099018573761, 0.3666919469833374, 0.3677147328853607, 0.3656265437602997, 0.36816999316215515, 0.3605417013168335, 0.36217305064201355, 0.35867685079574585, 0.35697537660598755, 0.3625023066997528, 0.36390119791030884, 0.3595936596393585, 0.36015528440475464, 0.358849436044693], "val_accuracy": [0.5396666526794434, 0.6506666541099548, 0.6816666722297668, 0.7073333263397217, 0.7273333072662354, 0.7433333396911621, 0.7486666440963745, 0.7566666603088379, 0.7763333320617676, 0.7863333225250244, 0.7893333435058594, 0.7996666431427002, 0.800000011920929, 0.8100000023841858, 0.8116666674613953, 0.8223333358764648, 0.8213333487510681, 0.8206666707992554, 0.8316666483879089, 0.8360000252723694, 0.8333333134651184, 0.8373333215713501, 0.8373333215713501, 0.8446666598320007, 0.8423333168029785, 0.846666693687439, 0.8443333506584167, 0.8479999899864197, 0.847000002861023, 0.843999981880188, 0.8489999771118164, 0.8493333458900452, 0.8500000238418579, 0.8573333621025085, 0.8529999852180481, 0.8519999980926514, 0.8586666584014893, 0.8553333282470703, 0.8519999980926514, 0.8560000061988831, 0.8553333282470703, 0.8659999966621399, 0.8663333058357239, 0.8606666922569275, 0.8629999756813049, 0.8686666488647461, 0.8640000224113464, 0.8613333106040955, 0.8663333058357239, 0.8669999837875366, 0.8703333139419556, 0.871999979019165, 0.8683333396911621, 0.8693333268165588, 0.8709999918937683, 0.8713333606719971, 0.8730000257492065, 0.871666669845581, 0.875333309173584, 0.8730000257492065, 0.874666690826416, 0.878333330154419, 0.8759999871253967, 0.878000020980835, 0.8740000128746033, 0.8759999871253967, 0.8743333220481873]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8354285955429077, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2922120094299316, 2.187619924545288, 1.7619825601577759, 1.3373650312423706, 1.0940606594085693, 0.9346209168434143, 0.8541708588600159, 0.8314697742462158, 0.7828183174133301, 0.7521970272064209, 0.70637047290802, 0.6902464032173157, 0.6438706517219543, 0.6333165764808655, 0.6155798435211182, 0.6055687069892883, 0.5944480895996094, 0.57209712266922, 0.5687255859375, 0.5533153414726257, 0.5364784002304077, 0.5251728892326355, 0.5111204981803894, 0.5079813599586487, 0.49631503224372864, 0.47778013348579407, 0.488128662109375, 0.47586023807525635, 0.4591290056705475, 0.44799530506134033, 0.43879446387290955, 0.43377625942230225], "accuracy": [0.13419628143310547, 0.32333904504776, 0.4379870593547821, 0.549068808555603, 0.6305639743804932, 0.6567164063453674, 0.6944921612739563, 0.6926429867744446, 0.7059833407402039, 0.7106062769889832, 0.7395324110984802, 0.7397965788841248, 0.7481178045272827, 0.7618544697761536, 0.7630431652069092, 0.7693831920623779, 0.7819310426712036, 0.7852331399917603, 0.7832518815994263, 0.7921014428138733, 0.8045172095298767, 0.8054417967796326, 0.8035926818847656, 0.8063663840293884, 0.813498854637146, 0.8189142942428589, 0.8145555257797241, 0.819442629814148, 0.8297450542449951, 0.8309338092803955, 0.8327829837799072, 0.8315942287445068], "val_loss": [2.244347095489502, 2.0069000720977783, 1.1326100826263428, 0.9197490811347961, 0.801082193851471, 0.7502381801605225, 0.7101224064826965, 0.6801121234893799, 0.6797884702682495, 0.6376503705978394, 0.6144673824310303, 0.5968984961509705, 0.5685048699378967, 0.567135214805603, 0.5516834259033203, 0.5408839583396912, 0.5436729788780212, 0.5297905802726746, 0.5233659148216248, 0.5048628449440002, 0.5061491131782532, 0.5075031518936157, 0.4855130910873413, 0.48619934916496277, 0.4749024212360382, 0.4719940721988678, 0.45908862352371216, 0.4542778730392456, 0.4583509862422943, 0.4658268690109253, 0.4575360119342804, 0.4594544768333435], "val_accuracy": [0.4216666519641876, 0.44600000977516174, 0.6346666812896729, 0.6776666641235352, 0.7023333311080933, 0.7070000171661377, 0.7333333492279053, 0.7353333234786987, 0.7490000128746033, 0.7506666779518127, 0.7639999985694885, 0.7699999809265137, 0.7816666960716248, 0.7753333449363708, 0.7986666560173035, 0.7926666736602783, 0.7863333225250244, 0.7979999780654907, 0.8056666851043701, 0.8043333292007446, 0.8050000071525574, 0.8203333616256714, 0.8233333230018616, 0.8136666417121887, 0.8286666870117188, 0.8333333134651184, 0.8410000205039978, 0.8270000219345093, 0.8299999833106995, 0.8376666903495789, 0.8346666693687439, 0.840666651725769]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8271428346633911, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5443710088729858, 0.8876998424530029, 0.7120288610458374, 0.6328029632568359, 0.5734867453575134, 0.5360984206199646, 0.5329369306564331, 0.48938968777656555, 0.48548534512519836, 0.48552587628364563, 0.48566797375679016, 0.5074605345726013, 0.4807837903499603, 0.48372945189476013, 0.47446152567863464, 0.4688045084476471, 0.4754011034965515], "accuracy": [0.47364944219589233, 0.7180029153823853, 0.7375511527061462, 0.7670056819915771, 0.7828556299209595, 0.8090080618858337, 0.8094043135643005, 0.822348415851593, 0.8234050869941711, 0.8220842480659485, 0.8267071843147278, 0.8338396549224854, 0.8363492488861084, 0.8284242749214172, 0.8319904804229736, 0.8383304476737976, 0.8305375576019287], "val_loss": [0.9373549222946167, 0.638799250125885, 0.6026533246040344, 0.5581368207931519, 0.5486404299736023, 0.5375163555145264, 0.5225648880004883, 0.48311617970466614, 0.4876796007156372, 0.4903242290019989, 0.5490896701812744, 0.5580514669418335, 0.5087859630584717, 0.5297252535820007, 0.57346111536026, 0.4766228497028351, 0.5101766586303711], "val_accuracy": [0.6899999976158142, 0.7543333172798157, 0.762666642665863, 0.7820000052452087, 0.8023333549499512, 0.8033333420753479, 0.812666654586792, 0.8199999928474426, 0.8220000267028809, 0.8216666579246521, 0.8180000185966492, 0.8420000076293945, 0.8356666564941406, 0.8306666612625122, 0.8289999961853027, 0.8309999704360962, 0.8346666693687439]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [86, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 3, 2, 3, 5, 8, 1, 4, 0, 5], [0, 2, 0, 3, 1, 2, 0], [55, 37, 63], [0, 1, 1], [3], [4, 1], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 3, 6, 6, 1, 2, 4, 1, 4, 2, 8, 2, 8, 0, 7, 4], [0, 0, 0, 3, 1, 4, 3, 1, 2, 0, 4, 4, 7, 3], [96, 99, 96, 36, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 18, 11, 7, 3, 3, 1, 2, 0, 30, 16, 14, 4], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.sqrt(tf.math.subtract(alpha, tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(grad, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(alpha, grad))), sigma), tf.math.sqrt(tf.math.add(alpha, beta))), tf.math.sqrt(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), grad), tf.math.negative(tf.math.add(tf.math.pow(grad, grad), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 1, 1, 3, 2, 4, 9], [0, 1, 0, 2, 2, 0, 0, 3], [39, 39, 48, 38, 43], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 0], [19, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 5, 1, 4, 2, 8], [3, 3, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 11, 8, 5, 10, 6, 4, 2, 2, 1, 1, 1, 13, 7, 6, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.multiply(grad, tf.math.add(grad, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(sigma, tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3039357662200928, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3, 3, 4], [0, 1, 0, 2, 2, 0, 2], [47, 39, 1], [0, 1], [0, 2, 3, 0, 3, 5], [0], [16, 16], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [4, 1, 8, 1, 8, 2, 3, 7, 8, 0, 8, 5, 0], [4, 1, 1, 0, 0, 0, 3, 1], [0, 94, 68], [0, 1], [0], [1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 7, 7, 3, 2, 1, 1, 1, 19, 12, 7, 3, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(grad, tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.subtract(tf.math.sqrt(tf.math.subtract(tf.math.sqrt(tf.math.add(grad, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)))))))), tf.math.square(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1795007288455963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 3, 0, 3, 1, 8], [0, 1, 0, 2, 3, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [34, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 9, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 93, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 2, 9, 5, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.subtract(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))), grad)), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303583860397339, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]