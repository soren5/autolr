[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223330497741699, 1.8670156002044678, 1.3935511112213135, 1.1012579202651978, 0.9477801322937012, 0.8379126191139221, 0.7764281630516052, 0.7235901951789856, 0.6839449405670166, 0.6511124968528748, 0.6340097188949585, 0.6069210171699524, 0.5817078948020935, 0.5635776519775391, 0.5524153113365173, 0.5367791652679443, 0.5212588906288147, 0.5178380608558655, 0.5019086003303528, 0.4879888892173767, 0.4858485460281372, 0.4747111201286316, 0.45951735973358154, 0.4532293975353241, 0.4492609202861786, 0.4330301284790039, 0.4310648441314697, 0.42051371932029724, 0.41327017545700073, 0.4060419201850891, 0.3997148871421814, 0.39729252457618713, 0.3869434893131256, 0.3869549036026001, 0.38186177611351013, 0.3692651391029358, 0.36346086859703064, 0.3634459972381592, 0.3600703179836273, 0.3489670753479004, 0.3429599404335022, 0.34309908747673035, 0.3401198089122772, 0.3303268253803253, 0.3301240801811218, 0.3276282846927643, 0.3180643618106842, 0.3136589229106903, 0.3090694546699524, 0.3071834146976471, 0.3011736273765564, 0.30332496762275696, 0.29351481795310974, 0.2937680780887604], "accuracy": [0.26680755615234375, 0.49451854825019836, 0.5679566860198975, 0.6209219098091125, 0.6646413803100586, 0.7078325152397156, 0.7234182953834534, 0.7387399077415466, 0.7541936039924622, 0.7672698497772217, 0.7677981853485107, 0.7820631265640259, 0.7897239327430725, 0.7977809906005859, 0.798309326171875, 0.8082155585289001, 0.8138951063156128, 0.8094043135643005, 0.822348415851593, 0.8269713521003723, 0.8208954930305481, 0.8310658931732178, 0.8350284099578857, 0.8367455005645752, 0.8368775844573975, 0.8444063067436218, 0.843481719493866, 0.850350022315979, 0.8502179384231567, 0.8570862412452698, 0.857218325138092, 0.8574824929237366, 0.8610487580299377, 0.8610487580299377, 0.8607845902442932, 0.8658037185668945, 0.8701624870300293, 0.8689737319946289, 0.8708229064941406, 0.8792761564254761, 0.8798044919967651, 0.8765024542808533, 0.8765024542808533, 0.8824461698532104, 0.880729079246521, 0.8844274282455444, 0.8838990926742554, 0.8887861371040344, 0.8878615498542786, 0.8903711438179016, 0.8924844861030579, 0.8912957310676575, 0.8976356983184814, 0.8960506916046143], "val_loss": [2.040694236755371, 1.5166728496551514, 1.045767068862915, 0.8421168327331543, 0.7569165229797363, 0.7011509537696838, 0.6573318839073181, 0.6179470419883728, 0.5908101201057434, 0.5737177133560181, 0.5541383624076843, 0.5365487933158875, 0.518412172794342, 0.5104728937149048, 0.49868762493133545, 0.485697478055954, 0.48461878299713135, 0.46694132685661316, 0.459992378950119, 0.44818419218063354, 0.45110249519348145, 0.4507465958595276, 0.4339507520198822, 0.4287099242210388, 0.42590731382369995, 0.4119842052459717, 0.4104468524456024, 0.4069807529449463, 0.40372517704963684, 0.3985708951950073, 0.3967111110687256, 0.39305025339126587, 0.39346253871917725, 0.3906964063644409, 0.3815464675426483, 0.3792845904827118, 0.37928369641304016, 0.3762374818325043, 0.37582898139953613, 0.37387406826019287, 0.3717586398124695, 0.36671704053878784, 0.363382488489151, 0.36401286721229553, 0.3619881868362427, 0.35666540265083313, 0.3588123917579651, 0.3541429042816162, 0.35232576727867126, 0.35342442989349365, 0.3524846136569977, 0.34847813844680786, 0.34814298152923584, 0.35015836358070374], "val_accuracy": [0.5323333144187927, 0.6446666717529297, 0.6756666898727417, 0.7043333053588867, 0.7239999771118164, 0.7493333220481873, 0.753000020980835, 0.7706666588783264, 0.7820000052452087, 0.7873333096504211, 0.7956666946411133, 0.800000011920929, 0.8136666417121887, 0.812666654586792, 0.8199999928474426, 0.824999988079071, 0.8246666789054871, 0.8326666951179504, 0.8303333520889282, 0.8376666903495789, 0.8333333134651184, 0.8343333601951599, 0.8446666598320007, 0.843666672706604, 0.846666693687439, 0.8513333201408386, 0.8546666502952576, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8529999852180481, 0.859333336353302, 0.8546666502952576, 0.8569999933242798, 0.8606666922569275, 0.8633333444595337, 0.8643333315849304, 0.8629999756813049, 0.8576666712760925, 0.8703333139419556, 0.8640000224113464, 0.8643333315849304, 0.8676666617393494, 0.8663333058357239, 0.8713333606719971, 0.871999979019165, 0.8693333268165588, 0.8693333268165588, 0.878000020980835, 0.8756666779518127, 0.8706666827201843, 0.8756666779518127, 0.8769999742507935, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8622857332229614, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2938637733459473, 2.189764976501465, 1.7731200456619263, 1.3403565883636475, 1.0758099555969238, 0.9126492738723755, 0.8278796672821045, 0.8133906722068787, 0.7673410177230835, 0.7170027494430542, 0.6898444294929504, 0.658948540687561, 0.6432458162307739, 0.6114533543586731, 0.5907065272331238, 0.5814608335494995, 0.570141613483429, 0.5695716738700867, 0.5486491322517395, 0.5324888229370117, 0.5174568295478821, 0.505671501159668, 0.49537569284439087, 0.5052904486656189, 0.4765806198120117, 0.4781592786312103, 0.4709921181201935, 0.4624931216239929, 0.45369359850883484, 0.4469059109687805, 0.438896119594574, 0.4300065040588379, 0.41844993829727173, 0.4159401059150696, 0.4041973054409027, 0.40046215057373047, 0.3841184377670288, 0.38591140508651733, 0.3769334554672241, 0.38111788034439087, 0.3594610095024109, 0.3605833649635315, 0.3573378920555115, 0.3608953058719635, 0.35363954305648804, 0.3362433910369873, 0.338338702917099, 0.3340859115123749, 0.32779332995414734, 0.3265833854675293, 0.32401034235954285, 0.32812565565109253, 0.32233214378356934], "accuracy": [0.12481838464736938, 0.3323206901550293, 0.4361378848552704, 0.5474838018417358, 0.6304318904876709, 0.6619997620582581, 0.6913221478462219, 0.7005679607391357, 0.707040011882782, 0.719852089881897, 0.7367587089538574, 0.7458723783493042, 0.7617223858833313, 0.7689869403839111, 0.7754589915275574, 0.7769119143486023, 0.7799497842788696, 0.7804781198501587, 0.7947431206703186, 0.7956677079200745, 0.7943468689918518, 0.8029322624206543, 0.8108572363853455, 0.8035926818847656, 0.8124422430992126, 0.81548011302948, 0.8170651197433472, 0.8169330358505249, 0.8290846943855286, 0.8321225643157959, 0.8335754871368408, 0.8347642421722412, 0.8401796221733093, 0.8411042094230652, 0.8430854678153992, 0.850350022315979, 0.8565579056739807, 0.8536521196365356, 0.8520671129226685, 0.8543124794960022, 0.8599920868873596, 0.8614450097084045, 0.8642187118530273, 0.8618412613868713, 0.86118084192276, 0.8722757697105408, 0.8639545440673828, 0.8702945709228516, 0.8794082403182983, 0.8721436858177185, 0.8759741187095642, 0.8757099509239197, 0.8735966086387634], "val_loss": [2.246915102005005, 2.020951271057129, 1.1292386054992676, 0.8642928004264832, 0.7627089619636536, 0.7177937626838684, 0.6819375157356262, 0.6802247762680054, 0.6377744078636169, 0.615719735622406, 0.582834780216217, 0.5552682280540466, 0.5382805466651917, 0.5316361784934998, 0.5246062278747559, 0.5089960694313049, 0.4989072382450104, 0.4921306073665619, 0.486367404460907, 0.4843589663505554, 0.470045804977417, 0.46567729115486145, 0.453159898519516, 0.44283241033554077, 0.43860888481140137, 0.43988436460494995, 0.43634113669395447, 0.42934656143188477, 0.42438122630119324, 0.41685473918914795, 0.41714397072792053, 0.4142463505268097, 0.40934666991233826, 0.4022913873195648, 0.39954403042793274, 0.40395060181617737, 0.4084138572216034, 0.40144529938697815, 0.394904226064682, 0.3942733705043793, 0.39459604024887085, 0.40198346972465515, 0.40192243456840515, 0.3978869318962097, 0.38267359137535095, 0.38426879048347473, 0.38349732756614685, 0.38500508666038513, 0.3903310000896454, 0.39171460270881653, 0.40925461053848267, 0.3993830680847168, 0.39829492568969727], "val_accuracy": [0.4189999997615814, 0.4313333332538605, 0.6543333530426025, 0.6996666789054871, 0.7293333411216736, 0.7416666746139526, 0.7453333139419556, 0.7559999823570251, 0.7573333382606506, 0.7576666474342346, 0.7733333110809326, 0.7829999923706055, 0.7889999747276306, 0.7850000262260437, 0.796999990940094, 0.8003333210945129, 0.8109999895095825, 0.8119999766349792, 0.8149999976158142, 0.8256666660308838, 0.8190000057220459, 0.8169999718666077, 0.8223333358764648, 0.8370000123977661, 0.831333339214325, 0.8316666483879089, 0.8366666436195374, 0.846666693687439, 0.843999981880188, 0.8479999899864197, 0.8500000238418579, 0.856333315372467, 0.8493333458900452, 0.8539999723434448, 0.8553333282470703, 0.8606666922569275, 0.8566666841506958, 0.8579999804496765, 0.859000027179718, 0.862666666507721, 0.8650000095367432, 0.8650000095367432, 0.8669999837875366, 0.8700000047683716, 0.8713333606719971, 0.8686666488647461, 0.8600000143051147, 0.8733333349227905, 0.8709999918937683, 0.8696666955947876, 0.8700000047683716, 0.8686666488647461, 0.8696666955947876]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8600000143051147, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2228996753692627, 1.865325689315796, 1.396228551864624, 1.0922738313674927, 0.9346222877502441, 0.8362071514129639, 0.7655928730964661, 0.7131907343864441, 0.68266361951828, 0.6615162491798401, 0.6265829205513, 0.6107633113861084, 0.584921658039093, 0.5807108283042908, 0.5570005178451538, 0.5385349988937378, 0.5260287523269653, 0.5134454965591431, 0.502905011177063, 0.4871404469013214, 0.4841706156730652, 0.4711044728755951, 0.4615696370601654, 0.4548657238483429, 0.4496040642261505, 0.4421100616455078, 0.42889463901519775, 0.4292455017566681, 0.41665568947792053, 0.4117295742034912, 0.4061944782733917, 0.3959144353866577, 0.38788390159606934, 0.392005980014801, 0.37367236614227295, 0.36950087547302246, 0.37226784229278564, 0.3634125590324402], "accuracy": [0.2775062620639801, 0.49491479992866516, 0.5563333630561829, 0.6244881749153137, 0.6641130447387695, 0.6970016956329346, 0.7235503792762756, 0.7396644949913025, 0.7526086568832397, 0.7561748623847961, 0.7684586048126221, 0.7765156626701355, 0.7874785661697388, 0.7874785661697388, 0.7961959838867188, 0.8024039268493652, 0.8082155585289001, 0.8112534880638123, 0.8158763647079468, 0.82683926820755, 0.8248580098152161, 0.8313300609588623, 0.8341038227081299, 0.8358209133148193, 0.8368775844573975, 0.8400475382804871, 0.8404437899589539, 0.8418967127799988, 0.8518029451370239, 0.8524633646011353, 0.8504821062088013, 0.8560295701026917, 0.8584070801734924, 0.8597279191017151, 0.8644828796386719, 0.8643507957458496, 0.8639545440673828, 0.8673887252807617], "val_loss": [2.0386359691619873, 1.5170786380767822, 1.0459301471710205, 0.8420162796974182, 0.7541673183441162, 0.6979002356529236, 0.6553651094436646, 0.6166006922721863, 0.5967764258384705, 0.578076183795929, 0.5515714287757874, 0.5366014242172241, 0.5260651707649231, 0.5086979269981384, 0.504671037197113, 0.4895404577255249, 0.4817883372306824, 0.46952441334724426, 0.46276766061782837, 0.45529064536094666, 0.44783568382263184, 0.441018670797348, 0.43764615058898926, 0.4339909553527832, 0.43445760011672974, 0.42313557863235474, 0.4178684949874878, 0.4157413840293884, 0.4092331528663635, 0.40414363145828247, 0.4024810492992401, 0.3952259123325348, 0.39561235904693604, 0.39071565866470337, 0.3909141719341278, 0.3892233073711395, 0.38603144884109497, 0.38693884015083313], "val_accuracy": [0.5316666960716248, 0.6503333449363708, 0.6826666593551636, 0.7080000042915344, 0.7250000238418579, 0.746999979019165, 0.7553333044052124, 0.7670000195503235, 0.7773333191871643, 0.7793333530426025, 0.7963333129882812, 0.8063333630561829, 0.8073333501815796, 0.8143333196640015, 0.8136666417121887, 0.824999988079071, 0.8263333439826965, 0.8336666822433472, 0.8333333134651184, 0.8383333086967468, 0.8403333425521851, 0.8433333039283752, 0.8486666679382324, 0.8489999771118164, 0.8473333120346069, 0.8489999771118164, 0.8519999980926514, 0.8576666712760925, 0.8600000143051147, 0.8579999804496765, 0.859333336353302, 0.8653333187103271, 0.8666666746139526, 0.8650000095367432, 0.8663333058357239, 0.8629999756813049, 0.8646666407585144, 0.8643333315849304]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8339999914169312, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.618638038635254, 0.8705611824989319, 0.6884522438049316, 0.6439988017082214, 0.6268470883369446, 0.5793690085411072, 0.5514715909957886, 0.553506076335907, 0.5623125433921814, 0.5577588081359863, 0.5610216856002808, 0.5500355958938599], "accuracy": [0.48368775844573975, 0.7005679607391357, 0.7452120184898376, 0.7635715007781982, 0.7745344042778015, 0.7828556299209595, 0.8005547523498535, 0.8031964302062988, 0.7981772422790527, 0.7972526550292969, 0.8133667707443237, 0.7997622489929199], "val_loss": [1.0000224113464355, 0.62973952293396, 0.5739113688468933, 0.5202568173408508, 0.5240922570228577, 0.5275518894195557, 0.4986094534397125, 0.5461922883987427, 0.5179556608200073, 0.5211526155471802, 0.5207303166389465, 0.5184342265129089], "val_accuracy": [0.6439999938011169, 0.7563333511352539, 0.7666666507720947, 0.8116666674613953, 0.7986666560173035, 0.8073333501815796, 0.8349999785423279, 0.8130000233650208, 0.8243333101272583, 0.8140000104904175, 0.8259999752044678, 0.8240000009536743]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3, 7, 3, 4, 7, 0, 4, 4, 7, 0, 1], [0, 2, 0, 2, 0, 3, 1, 2, 0, 3, 2, 3], [39, 39, 43, 73], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 3, 6, 8, 1, 9, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 1, 1, 2, 0], [58, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 27, 15, 12, 4, 1, 0, 1, 1, 2, 1, 1, 1, 16, 9, 7, 6], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(grad, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.negative(tf.math.pow(grad, tf.math.pow(tf.math.add(tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), grad), alpha))), grad), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), grad)), tf.math.subtract(grad, grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma)), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 4, 3, 7, 3, 3, 0, 7, 4, 1, 8], [0, 1, 0, 1, 2, 0, 3, 2, 1, 1, 1], [39, 39, 26], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [2, 2, 3, 0, 3, 5, 6, 6], [0, 1, 0, 3, 0, 0, 4], [16, 16, 3, 64], [0, 1], [0], [3], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 2, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 3, 3, 1, 2, 0, 4], [16, 99, 96, 63, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.multiply(tf.math.multiply(tf.math.negative(tf.math.add(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.subtract(grad, grad), tf.math.sqrt(alpha))), alpha)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.divide_no_nan(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.subtract(tf.math.pow(sigma, sigma), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), grad)", "other_info": {"loss": [2030627712.0, 2682279936.0, 2647542784.0, 2646172928.0, 2595148544.0, 2670526208.0], "accuracy": [0.09721305221319199, 0.09232597798109055, 0.09087307006120682, 0.09668471664190292, 0.0956280529499054, 0.09430722147226334], "val_loss": [2342425088.0, 2342424832.0, 2342424320.0, 2342420480.0, 2342417152.0, 2342416640.0], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}, "mapping_values": [1, 24, 13, 11, 3, 15, 8, 7, 4, 2, 1, 1, 0, 22, 11, 11, 5], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [39, 85, 22], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 8, 8, 7], [0], [0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 7, 4, 0, 3, 4, 9, 3], [0, 2, 6, 4, 6, 6], [0, 37, 70], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 3, 2, 6, 2, 8, 5, 5, 0], [0, 2, 0, 3, 0, 0, 3, 1, 2, 0], [0, 69, 31, 97, 36]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 3, 2, 1, 1, 15, 9, 6, 2, 15, 9, 6, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.negative(beta), tf.math.multiply(grad, grad)), tf.math.pow(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma)), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(tf.math.negative(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 3, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5, 8], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 2], [0, 0, 0, 3, 0, 0, 1, 1, 2, 0], [16, 99, 96, 99, 23, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 11, 7, 4, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.math.square(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, alpha))))", "other_info": {"loss": [2.304485559463501, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}]