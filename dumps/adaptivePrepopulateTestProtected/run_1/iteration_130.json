[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8679999709129333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222294330596924, 1.8700450658798218, 1.400696039199829, 1.0961591005325317, 0.9441497325897217, 0.8384190797805786, 0.7807058691978455, 0.738956093788147, 0.6986990571022034, 0.6627549529075623, 0.6316779255867004, 0.6160032153129578, 0.5848239660263062, 0.5682862997055054, 0.5541574954986572, 0.5346963405609131, 0.5298794507980347, 0.5104566216468811, 0.5089514255523682, 0.48501694202423096, 0.476209431886673, 0.46448221802711487, 0.46611326932907104, 0.4559166729450226, 0.45003899931907654, 0.4373677968978882, 0.42787832021713257, 0.42035427689552307, 0.4238438308238983, 0.41305917501449585, 0.3983820378780365, 0.3904758393764496, 0.38671356439590454, 0.3761150538921356, 0.3798521161079407, 0.3722439408302307, 0.3634026348590851, 0.3606829047203064, 0.3588222861289978, 0.355278342962265, 0.3521275818347931, 0.3393372893333435, 0.3397543728351593, 0.3351098299026489, 0.32555973529815674, 0.3171404004096985, 0.3224000930786133, 0.3145049214363098, 0.310075044631958, 0.3030078411102295, 0.30440691113471985], "accuracy": [0.26865673065185547, 0.4795931875705719, 0.5612204670906067, 0.6172236204147339, 0.6634526252746582, 0.7041342258453369, 0.7215691208839417, 0.7313432693481445, 0.7452120184898376, 0.7528728246688843, 0.765949010848999, 0.7765156626701355, 0.7839123010635376, 0.7954035401344299, 0.7991018295288086, 0.8067626357078552, 0.8063663840293884, 0.8120459914207458, 0.8152159452438354, 0.8257825970649719, 0.828292191028595, 0.8334434032440186, 0.8323867321014404, 0.8378021121025085, 0.8437458872795105, 0.8467837572097778, 0.8487650156021118, 0.8492933511734009, 0.8499537706375122, 0.8525954484939575, 0.8595958352088928, 0.8585391640663147, 0.86118084192276, 0.8658037185668945, 0.8643507957458496, 0.8664641380310059, 0.8721436858177185, 0.873860776424408, 0.870030403137207, 0.8712190985679626, 0.8728041052818298, 0.878351628780365, 0.8784837126731873, 0.8799365758895874, 0.8840311765670776, 0.8862766027450562, 0.8844274282455444, 0.8831065893173218, 0.8881257176399231, 0.8910315632820129, 0.8906353116035461], "val_loss": [2.0377235412597656, 1.5126934051513672, 1.0404937267303467, 0.8341764211654663, 0.7510003447532654, 0.7085748910903931, 0.6568690538406372, 0.6191446781158447, 0.6008915305137634, 0.5764881372451782, 0.559269905090332, 0.5423031449317932, 0.5278767347335815, 0.5215290784835815, 0.5069437623023987, 0.49795085191726685, 0.49192705750465393, 0.48522594571113586, 0.47397488355636597, 0.4683099687099457, 0.46296215057373047, 0.45755091309547424, 0.4540626108646393, 0.44485482573509216, 0.44683000445365906, 0.4379528760910034, 0.4361362159252167, 0.43187254667282104, 0.4246159791946411, 0.42891356348991394, 0.4186209440231323, 0.41673487424850464, 0.4122444987297058, 0.4091757535934448, 0.4077095687389374, 0.4080752432346344, 0.4025072753429413, 0.404198557138443, 0.3981395661830902, 0.39502134919166565, 0.3936209976673126, 0.39064282178878784, 0.3900279998779297, 0.3873482942581177, 0.3863089084625244, 0.38405150175094604, 0.3813539743423462, 0.37998729944229126, 0.38011983036994934, 0.3772469758987427, 0.3789817690849304], "val_accuracy": [0.527999997138977, 0.6690000295639038, 0.6856666803359985, 0.7086666822433472, 0.7310000061988831, 0.7429999709129333, 0.7549999952316284, 0.7723333239555359, 0.7789999842643738, 0.7879999876022339, 0.7933333516120911, 0.7983333468437195, 0.8143333196640015, 0.812333345413208, 0.8130000233650208, 0.8190000057220459, 0.8240000009536743, 0.8216666579246521, 0.824999988079071, 0.8306666612625122, 0.8363333344459534, 0.8383333086967468, 0.8393333554267883, 0.8396666646003723, 0.8423333168029785, 0.840666651725769, 0.8413333296775818, 0.8446666598320007, 0.8489999771118164, 0.8463333249092102, 0.8529999852180481, 0.8536666631698608, 0.8569999933242798, 0.8583333492279053, 0.856333315372467, 0.8579999804496765, 0.8583333492279053, 0.859000027179718, 0.8586666584014893, 0.8619999885559082, 0.8636666536331177, 0.862666666507721, 0.8653333187103271, 0.8646666407585144, 0.8646666407585144, 0.8693333268165588, 0.8640000224113464, 0.8693333268165588, 0.8646666407585144, 0.8646666407585144, 0.8629999756813049]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 1], [0, 4, 1, 8], [0, 1, 0], [0, 3], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8425714373588562, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.subtract(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2936275005340576, 2.1897833347320557, 1.7721585035324097, 1.3630205392837524, 1.097989559173584, 0.9352971911430359, 0.853682279586792, 0.8161192536354065, 0.754205048084259, 0.7455788254737854, 0.7037270069122314, 0.6796182990074158, 0.6470620036125183, 0.6245643496513367, 0.610305905342102, 0.598429799079895, 0.5687854290008545, 0.5691314935684204, 0.5590090751647949, 0.5361630320549011, 0.5284132957458496, 0.5077136158943176, 0.5144203305244446, 0.48845794796943665, 0.48525795340538025, 0.46720895171165466, 0.4613242745399475, 0.4472339153289795, 0.4372989535331726, 0.42747122049331665, 0.4288480579853058, 0.42022618651390076, 0.4104739725589752, 0.39532890915870667, 0.39255502820014954, 0.37763911485671997, 0.3708254098892212, 0.35500290989875793], "accuracy": [0.1278562992811203, 0.3271694481372833, 0.43666622042655945, 0.5411438345909119, 0.6273940205574036, 0.655527651309967, 0.6856426000595093, 0.7008321285247803, 0.711530864238739, 0.7108704447746277, 0.7272487282752991, 0.7388719916343689, 0.7597411274909973, 0.7614582180976868, 0.7691190242767334, 0.769911527633667, 0.7802139520645142, 0.7821952104568481, 0.7884030938148499, 0.7940827012062073, 0.7944789528846741, 0.8078193068504333, 0.806630551815033, 0.8156121969223022, 0.8104609847068787, 0.8181217908859253, 0.8235371708869934, 0.8240655064582825, 0.8321225643157959, 0.8372738361358643, 0.8376700282096863, 0.8385946154594421, 0.8475762605667114, 0.847840428352356, 0.8482366800308228, 0.8576145768165588, 0.8565579056739807, 0.8557654023170471], "val_loss": [2.246227502822876, 2.021301031112671, 1.1506292819976807, 0.8618992567062378, 0.7649146914482117, 0.7157037854194641, 0.6835872530937195, 0.6487354040145874, 0.6343579292297363, 0.6331679821014404, 0.581667423248291, 0.5621169209480286, 0.5519925951957703, 0.5346819162368774, 0.540913999080658, 0.5247617363929749, 0.5129278302192688, 0.505936861038208, 0.4988801181316376, 0.48767757415771484, 0.4798536002635956, 0.4779123067855835, 0.4739917516708374, 0.4611973762512207, 0.45462915301322937, 0.45437321066856384, 0.43952760100364685, 0.42874646186828613, 0.42814984917640686, 0.43301478028297424, 0.41921719908714294, 0.41981175541877747, 0.4194660782814026, 0.4195709228515625, 0.4215536415576935, 0.4142482876777649, 0.4127325713634491, 0.41805925965309143], "val_accuracy": [0.4286666810512543, 0.4516666531562805, 0.6416666507720947, 0.6826666593551636, 0.7193333506584167, 0.7406666874885559, 0.737333357334137, 0.7456666827201843, 0.7620000243186951, 0.7603333592414856, 0.7746666669845581, 0.7853333353996277, 0.7950000166893005, 0.7953333258628845, 0.7929999828338623, 0.7996666431427002, 0.809333324432373, 0.8166666626930237, 0.8096666932106018, 0.8196666836738586, 0.8196666836738586, 0.8259999752044678, 0.8289999961853027, 0.8263333439826965, 0.8303333520889282, 0.828000009059906, 0.8423333168029785, 0.8433333039283752, 0.8473333120346069, 0.8443333506584167, 0.8519999980926514, 0.8533333539962769, 0.8560000061988831, 0.8496666550636292, 0.8479999899864197, 0.8526666760444641, 0.8519999980926514, 0.8519999980926514]}, "mapping_values": [1, 10, 5, 5, 3, 7, 4, 3, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8265714049339294, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4967930316925049, 0.7723900079727173, 0.6669681072235107, 0.5931245684623718, 0.576206624507904, 0.5443981289863586, 0.5235655903816223, 0.48392707109451294, 0.4574267566204071, 0.47875621914863586, 0.46751919388771057, 0.43829381465911865, 0.47432059049606323, 0.4336737096309662, 0.44152799248695374, 0.46376702189445496], "accuracy": [0.4924052357673645, 0.7223616242408752, 0.759080708026886, 0.7778365015983582, 0.7905164361000061, 0.8004226684570312, 0.8129705190658569, 0.8216879963874817, 0.8310658931732178, 0.8293488025665283, 0.8359529972076416, 0.8424250483512878, 0.8407079577445984, 0.8409721255302429, 0.8444063067436218, 0.8338396549224854], "val_loss": [0.7195268273353577, 0.6014678478240967, 0.5217586159706116, 0.49931445717811584, 0.45658403635025024, 0.45881974697113037, 0.4287661910057068, 0.4470210075378418, 0.4771766662597656, 0.45964372158050537, 0.4510553479194641, 0.5075028538703918, 0.5092357397079468, 0.49697229266166687, 0.4830319881439209, 0.5776464939117432], "val_accuracy": [0.734666645526886, 0.7736666798591614, 0.7940000295639038, 0.8133333325386047, 0.8236666917800903, 0.8423333168029785, 0.8386666774749756, 0.8450000286102295, 0.8496666550636292, 0.8500000238418579, 0.8529999852180481, 0.8503333330154419, 0.8500000238418579, 0.8519999980926514, 0.847000002861023, 0.8493333458900452]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [7, 1, 3, 1, 3], [0, 1, 0, 2, 0], [83, 99, 67], [0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [0], [0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 6], [16, 99, 96, 99, 61, 1]], "fitness": -0.11457142978906631, "mapping_values": [1, 9, 4, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 3, 1, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, grad)", "other_info": {"loss": [1.94615933061468e+20, 1.8782530398104569e+31, 7.519673340507904e+31, Infinity, NaN, NaN, NaN, NaN], "accuracy": [0.10632677376270294, 0.10447761416435242, 0.10738343745470047, 0.11134592443704605, 0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.0746327301244892e+22, 2.9192260594057386e+31, Infinity, Infinity, NaN, NaN, NaN, NaN], "val_accuracy": [0.09266666322946548, 0.10266666859388351, 0.11400000005960464, 0.09300000220537186, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 1, 3, 1, 3, 3, 0], [0, 3, 1, 0, 2, 1], [83, 99, 27], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 2, 7, 0, 3, 5], [1, 0, 3, 4], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 5, 9, 3, 8, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 2, 7, 4, 3, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32))), grad), tf.math.negative(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3033058643341064, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 5, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 1, 0, 3], [16, 16], [0, 1], [0], [0], [85], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 6, 6, 5, 1, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 5, 0, 3], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [9], [0], [37], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 1, 8, 2], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0, 7, 1], [16, 99, 67, 99, 61, 48]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 10, 6, 4, 2, 1, 1, 0, 1, 26, 14, 12, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma)))), tf.math.sqrt(tf.math.subtract(alpha, beta)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(grad, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]