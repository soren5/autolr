[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2238242626190186, 1.8702408075332642, 1.3989253044128418, 1.0938103199005127, 0.9440132975578308, 0.843924880027771, 0.7770308256149292, 0.7348120808601379, 0.6891900300979614, 0.6686111092567444, 0.6465572118759155, 0.6186468601226807, 0.59220290184021, 0.5814334154129028, 0.5669078230857849, 0.5489019155502319, 0.5301827788352966, 0.5177485942840576, 0.5101649165153503, 0.5117051601409912, 0.4893052577972412, 0.48222053050994873, 0.4678787291049957, 0.4636562168598175, 0.45587465167045593, 0.44814491271972656, 0.43622511625289917, 0.4354732930660248, 0.4265357553958893, 0.4142124354839325, 0.40815725922584534, 0.40005847811698914, 0.4003210663795471, 0.39108172059059143, 0.38397613167762756, 0.3733125925064087, 0.3779296278953552, 0.36518383026123047, 0.3614937663078308, 0.35672062635421753, 0.3492109775543213, 0.3464018404483795, 0.339365154504776, 0.3396804630756378, 0.3307111859321594, 0.3236643671989441, 0.31257879734039307, 0.321456640958786, 0.3110101521015167, 0.31273698806762695, 0.3105744421482086, 0.29919567704200745, 0.29805487394332886, 0.2930542230606079, 0.2938970923423767, 0.28714412450790405, 0.27642741799354553, 0.2792717218399048, 0.27095139026641846], "accuracy": [0.2674679756164551, 0.4842160940170288, 0.5562012791633606, 0.6153744459152222, 0.6609430909156799, 0.6980583667755127, 0.7190595865249634, 0.7337207794189453, 0.748778223991394, 0.7569673657417297, 0.7651565074920654, 0.7724210619926453, 0.7843085527420044, 0.7864218950271606, 0.7895918488502502, 0.7981772422790527, 0.8043851256370544, 0.8068947196006775, 0.8137630224227905, 0.8169330358505249, 0.8247259259223938, 0.8222163319587708, 0.8313300609588623, 0.8313300609588623, 0.8359529972076416, 0.8407079577445984, 0.843481719493866, 0.845859169960022, 0.8451988101005554, 0.8507462739944458, 0.8564258217811584, 0.8552370667457581, 0.856689989566803, 0.8610487580299377, 0.8625016212463379, 0.868049144744873, 0.8625016212463379, 0.8684453964233398, 0.8697662353515625, 0.8705587387084961, 0.8745211958885193, 0.8692378997802734, 0.8753136992454529, 0.8790120482444763, 0.8804649114608765, 0.8819178342819214, 0.8879936337471008, 0.8854840993881226, 0.8858803510665894, 0.8870691061019897, 0.884691596031189, 0.8912957310676575, 0.891559898853302, 0.8919561505317688, 0.8942015767097473, 0.8982961177825928, 0.8972394466400146, 0.8985602855682373, 0.9022586345672607], "val_loss": [2.0391974449157715, 1.5139026641845703, 1.0389410257339478, 0.833385169506073, 0.7425699830055237, 0.6892187595367432, 0.6448782086372375, 0.6089656352996826, 0.5808338522911072, 0.5622445344924927, 0.5464872121810913, 0.5286971926689148, 0.5147833824157715, 0.4997008442878723, 0.4904420077800751, 0.4809882342815399, 0.4727213978767395, 0.4639192223548889, 0.45640018582344055, 0.4523184895515442, 0.44721314311027527, 0.4373686611652374, 0.43181267380714417, 0.4304860830307007, 0.4228566884994507, 0.4188160002231598, 0.41898444294929504, 0.4127434194087982, 0.4063724875450134, 0.4022892117500305, 0.4021618664264679, 0.400217741727829, 0.39576902985572815, 0.38946452736854553, 0.38671496510505676, 0.3825148940086365, 0.3844337463378906, 0.38124749064445496, 0.3744789659976959, 0.37623274326324463, 0.37700000405311584, 0.3697681427001953, 0.3748103380203247, 0.36868640780448914, 0.3667578101158142, 0.3650318682193756, 0.3685290217399597, 0.3615975081920624, 0.3626455068588257, 0.3592783510684967, 0.3611542284488678, 0.36187154054641724, 0.35318341851234436, 0.35676851868629456, 0.3524584174156189, 0.35657671093940735, 0.35240715742111206, 0.34654515981674194, 0.3482426404953003], "val_accuracy": [0.5376666784286499, 0.656000018119812, 0.6850000023841858, 0.7146666646003723, 0.7383333444595337, 0.7543333172798157, 0.765999972820282, 0.7773333191871643, 0.7889999747276306, 0.7926666736602783, 0.7963333129882812, 0.8029999732971191, 0.8086666464805603, 0.8209999799728394, 0.824999988079071, 0.82833331823349, 0.8306666612625122, 0.8336666822433472, 0.8379999995231628, 0.8443333506584167, 0.843666672706604, 0.8416666388511658, 0.8476666808128357, 0.8476666808128357, 0.846666693687439, 0.8483333587646484, 0.8503333330154419, 0.856333315372467, 0.8576666712760925, 0.8619999885559082, 0.8586666584014893, 0.8613333106040955, 0.859333336353302, 0.862333357334137, 0.8650000095367432, 0.8650000095367432, 0.8633333444595337, 0.8683333396911621, 0.8663333058357239, 0.8686666488647461, 0.8679999709129333, 0.8696666955947876, 0.8686666488647461, 0.871666669845581, 0.8740000128746033, 0.8726666569709778, 0.8709999918937683, 0.8736666440963745, 0.875333309173584, 0.8740000128746033, 0.8769999742507935, 0.8736666440963745, 0.875, 0.8823333382606506, 0.8769999742507935, 0.8786666393280029, 0.8726666569709778, 0.8786666393280029, 0.8809999823570251]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8754285573959351, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.226684093475342, 1.8750967979431152, 1.4043399095535278, 1.1000800132751465, 0.9394887089729309, 0.8402173519134521, 0.786916196346283, 0.7296531796455383, 0.6894593834877014, 0.6662020683288574, 0.6422368884086609, 0.6160602569580078, 0.5980489253997803, 0.5869898796081543, 0.5664808750152588, 0.5477562546730042, 0.5414443612098694, 0.5180586576461792, 0.5019975900650024, 0.49784862995147705, 0.4920145273208618, 0.48020878434181213, 0.47077980637550354, 0.4640863835811615, 0.4485841989517212, 0.446554958820343, 0.4373399317264557, 0.42880111932754517, 0.41964972019195557, 0.41221538186073303, 0.4129144549369812, 0.40350595116615295, 0.39471715688705444, 0.3924393355846405, 0.391528457403183, 0.37820491194725037, 0.37665754556655884, 0.3666864037513733, 0.360580712556839, 0.35730889439582825, 0.352033793926239, 0.35382458567619324, 0.3437861204147339, 0.33466434478759766, 0.3318314254283905, 0.3265211582183838, 0.3265517055988312, 0.3220047056674957, 0.31638580560684204, 0.3195820450782776, 0.3108009099960327, 0.3099909722805023, 0.29981040954589844, 0.29586419463157654, 0.2897058427333832, 0.290496826171875, 0.2871902585029602, 0.2764403522014618, 0.278306245803833, 0.27214643359184265, 0.26931291818618774, 0.26090186834335327, 0.2583528459072113, 0.25461727380752563, 0.25453421473503113, 0.24840804934501648, 0.2496764212846756, 0.24774572253227234, 0.2402961701154709, 0.23395615816116333, 0.2264898121356964, 0.2260759323835373, 0.2277870774269104], "accuracy": [0.26258090138435364, 0.4815744161605835, 0.5645225048065186, 0.615770697593689, 0.6600185036659241, 0.693831741809845, 0.7168141603469849, 0.7320036888122559, 0.7420420050621033, 0.7511557340621948, 0.7676661014556885, 0.7667415142059326, 0.78113853931427, 0.7810064554214478, 0.7918372750282288, 0.7969884872436523, 0.8042530417442322, 0.8131026029586792, 0.8198388814926147, 0.821820080280304, 0.8193105459213257, 0.8252542614936829, 0.8304054737091064, 0.83119797706604, 0.8380662798881531, 0.8389908671379089, 0.8405758738517761, 0.844010055065155, 0.8511425256729126, 0.8524633646011353, 0.8500858545303345, 0.8529917001724243, 0.8603883385658264, 0.856689989566803, 0.8594637513160706, 0.8625016212463379, 0.863029956817627, 0.8665962219238281, 0.8685774803161621, 0.8708229064941406, 0.8725399374961853, 0.8722757697105408, 0.8759741187095642, 0.8792761564254761, 0.8823140859603882, 0.8824461698532104, 0.8844274282455444, 0.8820499181747437, 0.8869370222091675, 0.8856161832809448, 0.8911636471748352, 0.8865407705307007, 0.8893144726753235, 0.8957865834236145, 0.8943336606025696, 0.8951261639595032, 0.8969752788543701, 0.9006736278533936, 0.902390718460083, 0.9030511379241943, 0.9005415439605713, 0.904768168926239, 0.9078060984611511, 0.9109761118888855, 0.9055606722831726, 0.9056927561759949, 0.9104477763175964, 0.908730685710907, 0.9148064851760864, 0.9148064851760864, 0.9202219247817993, 0.9202219247817993, 0.9189010858535767], "val_loss": [2.043083667755127, 1.5205143690109253, 1.0501941442489624, 0.8344064354896545, 0.7387029528617859, 0.6811800003051758, 0.6335665583610535, 0.6002746820449829, 0.5732980370521545, 0.550434947013855, 0.5369649529457092, 0.5169907808303833, 0.5086524486541748, 0.49670109152793884, 0.4801114797592163, 0.4708116352558136, 0.46328386664390564, 0.45350468158721924, 0.4509248435497284, 0.4407147765159607, 0.432382732629776, 0.4291402995586395, 0.42733073234558105, 0.4173508584499359, 0.4086844027042389, 0.4126623272895813, 0.4022465944290161, 0.39865338802337646, 0.39359742403030396, 0.3927950859069824, 0.38664859533309937, 0.3837381601333618, 0.3771298825740814, 0.3762495815753937, 0.37612268328666687, 0.3726648688316345, 0.3770882189273834, 0.36842501163482666, 0.36092591285705566, 0.36116665601730347, 0.3618708848953247, 0.35990503430366516, 0.35723787546157837, 0.3525526225566864, 0.3517203629016876, 0.3504283130168915, 0.3485264182090759, 0.3482438027858734, 0.3475531339645386, 0.34832653403282166, 0.3446618616580963, 0.34739458560943604, 0.33973461389541626, 0.3342815637588501, 0.33668264746665955, 0.33741295337677, 0.33397090435028076, 0.32938554883003235, 0.3272694945335388, 0.33046817779541016, 0.3261719048023224, 0.32186266779899597, 0.32427579164505005, 0.3233555853366852, 0.31952401995658875, 0.3300888240337372, 0.3269217014312744, 0.32078105211257935, 0.3235742151737213, 0.3207252025604248, 0.3228352963924408, 0.3238840401172638, 0.3187966048717499], "val_accuracy": [0.503333330154419, 0.653333306312561, 0.6796666383743286, 0.7153333425521851, 0.7406666874885559, 0.7526666522026062, 0.7643333077430725, 0.7806666493415833, 0.7883333563804626, 0.7979999780654907, 0.8016666769981384, 0.8100000023841858, 0.8076666593551636, 0.8166666626930237, 0.824999988079071, 0.8273333311080933, 0.8339999914169312, 0.8349999785423279, 0.8330000042915344, 0.8420000076293945, 0.8473333120346069, 0.8416666388511658, 0.8479999899864197, 0.8519999980926514, 0.8519999980926514, 0.8506666421890259, 0.8579999804496765, 0.8553333282470703, 0.8573333621025085, 0.8583333492279053, 0.8633333444595337, 0.8579999804496765, 0.8646666407585144, 0.8646666407585144, 0.862666666507721, 0.8650000095367432, 0.8539999723434448, 0.8616666793823242, 0.8636666536331177, 0.8650000095367432, 0.8700000047683716, 0.8676666617393494, 0.8686666488647461, 0.8713333606719971, 0.8703333139419556, 0.8706666827201843, 0.8706666827201843, 0.8756666779518127, 0.8740000128746033, 0.8730000257492065, 0.8713333606719971, 0.8713333606719971, 0.8773333430290222, 0.8776666522026062, 0.8786666393280029, 0.8803333044052124, 0.8786666393280029, 0.8803333044052124, 0.8809999823570251, 0.8820000290870667, 0.8793333172798157, 0.8849999904632568, 0.8859999775886536, 0.8849999904632568, 0.8859999775886536, 0.8799999952316284, 0.8809999823570251, 0.8886666893959045, 0.8849999904632568, 0.8853333592414856, 0.8863333463668823, 0.8866666555404663, 0.8866666555404663]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8420000076293945, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292374610900879, 2.1858768463134766, 1.7695984840393066, 1.3370550870895386, 1.0801441669464111, 0.9287583827972412, 0.8310158848762512, 0.8201417326927185, 0.7701628804206848, 0.7532504200935364, 0.7132394909858704, 0.6827886700630188, 0.6598096489906311, 0.6393735408782959, 0.6097646355628967, 0.6013272404670715, 0.5817765593528748, 0.577716588973999, 0.5742072463035583, 0.5564870834350586, 0.5440771579742432, 0.526496171951294, 0.5227320194244385, 0.5007240772247314, 0.4919597804546356, 0.4816814661026001, 0.4793718457221985, 0.47021251916885376, 0.46917620301246643, 0.4518747925758362, 0.4366784691810608, 0.4303523302078247, 0.4293311536312103, 0.4179966151714325, 0.42025694251060486, 0.41265180706977844, 0.4078657627105713, 0.41082730889320374, 0.39893296360969543, 0.39615824818611145], "accuracy": [0.12719587981700897, 0.3362831771373749, 0.4287412464618683, 0.5526350736618042, 0.635451078414917, 0.6597543358802795, 0.6997754573822021, 0.705058753490448, 0.7077004313468933, 0.7150970697402954, 0.733588695526123, 0.7412495017051697, 0.7436270117759705, 0.7648923397064209, 0.7712323069572449, 0.7753269076347351, 0.785101056098938, 0.7828556299209595, 0.7763835787773132, 0.7887993454933167, 0.7947431206703186, 0.7981772422790527, 0.7972526550292969, 0.809140145778656, 0.8146876096725464, 0.8136309385299683, 0.8129705190658569, 0.8190463781356812, 0.8216879963874817, 0.8271034359931946, 0.8280280232429504, 0.8338396549224854, 0.8416325449943542, 0.8461233377456665, 0.8384625315666199, 0.8405758738517761, 0.846387505531311, 0.8408400416374207, 0.8466516733169556, 0.848368763923645], "val_loss": [2.2443125247955322, 2.0110647678375244, 1.1305725574493408, 0.8828240036964417, 0.7733354568481445, 0.7301656603813171, 0.6859641671180725, 0.6800227761268616, 0.643120527267456, 0.6184191703796387, 0.5829986929893494, 0.5596672892570496, 0.547284722328186, 0.5524358153343201, 0.5365017056465149, 0.5198654532432556, 0.519841730594635, 0.5152029395103455, 0.5155956745147705, 0.5004451870918274, 0.4877418577671051, 0.4989672005176544, 0.4776303172111511, 0.47286996245384216, 0.46398138999938965, 0.47578996419906616, 0.46626368165016174, 0.45944783091545105, 0.4539775848388672, 0.4362304210662842, 0.4295724332332611, 0.43444839119911194, 0.42557844519615173, 0.4204758405685425, 0.40689173340797424, 0.4144197702407837, 0.4239393174648285, 0.40794938802719116, 0.41559597849845886, 0.4239353835582733], "val_accuracy": [0.4416666626930237, 0.43666666746139526, 0.652999997138977, 0.6916666626930237, 0.7253333330154419, 0.7396666407585144, 0.7436666488647461, 0.746666669845581, 0.753000020980835, 0.765999972820282, 0.7763333320617676, 0.7846666574478149, 0.7919999957084656, 0.7913333177566528, 0.7983333468437195, 0.8026666641235352, 0.796999990940094, 0.8106666803359985, 0.8053333163261414, 0.8080000281333923, 0.8133333325386047, 0.8153333067893982, 0.8286666870117188, 0.8289999961853027, 0.8309999704360962, 0.8273333311080933, 0.8370000123977661, 0.8386666774749756, 0.8386666774749756, 0.8489999771118164, 0.8510000109672546, 0.8536666631698608, 0.856333315372467, 0.8489999771118164, 0.8586666584014893, 0.856333315372467, 0.8566666841506958, 0.8513333201408386, 0.8539999723434448, 0.8539999723434448]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 6, 4, 4, 5], [0, 4, 6, 6, 1], [0], [1], [0], [2], [0]], "fitness": -0.831428587436676, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.pow(grad, tf.math.pow(tf.math.square(grad), alpha))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6302273273468018, 0.8305497765541077, 0.6613543629646301, 0.6086010932922363, 0.5427036285400391, 0.5225717425346375, 0.5529214143753052, 0.5494542121887207, 0.5376915335655212, 0.5125535130500793, 0.4973912835121155, 0.49289757013320923, 0.46585309505462646, 0.48476213216781616, 0.4886344075202942, 0.47668638825416565, 0.4873952269554138, 0.49713441729545593, 0.4887222349643707, 0.4945717453956604, 0.4957630932331085, 0.449026882648468, 0.4841734766960144, 0.47536903619766235, 0.4652186334133148, 0.4440571069717407, 0.4677102863788605, 0.4936523139476776, 0.5090523958206177, 0.5248773097991943, 0.48523226380348206, 0.5254059433937073], "accuracy": [0.4744419455528259, 0.7016246318817139, 0.7589486241340637, 0.7761194109916687, 0.796328067779541, 0.8113855719566345, 0.8010830879211426, 0.8042530417442322, 0.8149517774581909, 0.81548011302948, 0.8261788487434387, 0.8280280232429504, 0.8259146809577942, 0.8281601071357727, 0.8400475382804871, 0.8230088353157043, 0.8302733898162842, 0.8177255392074585, 0.8389908671379089, 0.832650899887085, 0.8187822103500366, 0.8396512866020203, 0.8314621448516846, 0.841500461101532, 0.8454629778862, 0.8389908671379089, 0.844010055065155, 0.8347642421722412, 0.8222163319587708, 0.8245938420295715, 0.8433496356010437, 0.8269713521003723], "val_loss": [0.8548356294631958, 0.6257836222648621, 0.5657032132148743, 0.5125585794448853, 0.4962899684906006, 0.5079122185707092, 0.5656039118766785, 0.5390057563781738, 0.4861951768398285, 0.5075631737709045, 0.499208003282547, 0.4982070326805115, 0.4891873896121979, 0.5796195268630981, 0.5560932755470276, 0.5211840271949768, 0.5596963167190552, 0.5330354571342468, 0.5389925241470337, 0.6099653840065002, 0.5201658606529236, 0.5778251886367798, 0.5574846267700195, 0.5927032828330994, 0.5324002504348755, 0.567548394203186, 0.5796318650245667, 0.6382784247398376, 0.603151798248291, 0.6111313104629517, 0.5462546944618225, 0.5206062197685242], "val_accuracy": [0.6806666851043701, 0.7689999938011169, 0.7873333096504211, 0.8100000023841858, 0.8180000185966492, 0.8153333067893982, 0.8240000009536743, 0.8050000071525574, 0.8220000267028809, 0.8373333215713501, 0.8373333215713501, 0.8346666693687439, 0.8376666903495789, 0.8303333520889282, 0.8289999961853027, 0.8393333554267883, 0.8246666789054871, 0.8393333554267883, 0.8396666646003723, 0.8326666951179504, 0.8326666951179504, 0.8399999737739563, 0.8316666483879089, 0.8383333086967468, 0.843666672706604, 0.8393333554267883, 0.846666693687439, 0.8246666789054871, 0.8270000219345093, 0.8423333168029785, 0.831333339214325, 0.8399999737739563]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 11, 6, 5, 1, 1, 0, 1, 0], "tree_depth": 15}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 3, 5, 2, 7, 4], [0, 1, 0, 2, 0, 2, 0, 3], [39, 39, 60, 52], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9, 3, 5, 3, 5], [0, 2, 0, 3], [16, 69], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 0, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 54, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 10, 8, 4, 2, 2, 0, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.add(grad, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3036375045776367, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 5, 0, 3], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 0, 6, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [51], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 6, 3, 6, 8, 2, 3, 5, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 6, 4, 2, 1, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)), alpha)", "other_info": {"loss": [2.3037431240081787, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 1], [3, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 4, 4, 3, 1, 2, 8, 7, 7, 9, 0, 1, 3, 7, 4, 2, 3, 6, 7, 5, 0, 8, 8, 9, 2, 4, 5, 5, 8, 9, 7, 3, 1], [0, 0, 0, 0, 1, 0, 3, 1, 2, 0, 5, 6, 6, 6, 2, 5, 5, 5, 4, 6, 3, 0], [16, 99, 96, 99, 61, 1, 68, 59, 70, 79]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 9, 5, 4, 2, 2, 1, 1, 1, 59, 37, 22, 10], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.multiply(alpha, tf.math.subtract(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.add(sigma, alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.negative(beta))))), tf.math.subtract(tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(grad, tf.math.pow(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(grad, grad), tf.math.square(beta)), tf.math.negative(grad)), tf.math.sqrt(tf.math.sqrt(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.pow(tf.math.square(grad), tf.math.square(grad)), tf.math.sqrt(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(tf.math.multiply(grad, tf.math.subtract(grad, sigma)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 1, 3, 0, 6, 5, 5, 4, 3], [0, 2, 0, 3, 0, 1], [16, 16, 41], [0, 1], [0], [0], [99], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 3, 2, 6, 3, 1, 4, 1, 4, 2, 8, 0, 1, 8, 2, 4, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4, 1, 3, 5, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 15, 9, 6, 3, 2, 1, 1, 1, 31, 17, 14, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(tf.math.pow(tf.math.multiply(grad, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha), tf.math.add(tf.math.sqrt(beta), tf.math.negative(tf.math.subtract(grad, tf.math.sqrt(alpha))))), tf.math.add(tf.math.pow(sigma, grad), tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]