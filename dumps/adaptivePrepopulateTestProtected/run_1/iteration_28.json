[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223330497741699, 1.8670156002044678, 1.3935511112213135, 1.1012579202651978, 0.9477801322937012, 0.8379126191139221, 0.7764281630516052, 0.7235901951789856, 0.6839449405670166, 0.6511124968528748, 0.6340097188949585, 0.6069210171699524, 0.5817078948020935, 0.5635776519775391, 0.5524153113365173, 0.5367791652679443, 0.5212588906288147, 0.5178380608558655, 0.5019086003303528, 0.4879888892173767, 0.4858485460281372, 0.4747111201286316, 0.45951735973358154, 0.4532293975353241, 0.4492609202861786, 0.4330301284790039, 0.4310648441314697, 0.42051371932029724, 0.41327017545700073, 0.4060419201850891, 0.3997148871421814, 0.39729252457618713, 0.3869434893131256, 0.3869549036026001, 0.38186177611351013, 0.3692651391029358, 0.36346086859703064, 0.3634459972381592, 0.3600703179836273, 0.3489670753479004, 0.3429599404335022, 0.34309908747673035, 0.3401198089122772, 0.3303268253803253, 0.3301240801811218, 0.3276282846927643, 0.3180643618106842, 0.3136589229106903, 0.3090694546699524, 0.3071834146976471, 0.3011736273765564, 0.30332496762275696, 0.29351481795310974, 0.2937680780887604], "accuracy": [0.26680755615234375, 0.49451854825019836, 0.5679566860198975, 0.6209219098091125, 0.6646413803100586, 0.7078325152397156, 0.7234182953834534, 0.7387399077415466, 0.7541936039924622, 0.7672698497772217, 0.7677981853485107, 0.7820631265640259, 0.7897239327430725, 0.7977809906005859, 0.798309326171875, 0.8082155585289001, 0.8138951063156128, 0.8094043135643005, 0.822348415851593, 0.8269713521003723, 0.8208954930305481, 0.8310658931732178, 0.8350284099578857, 0.8367455005645752, 0.8368775844573975, 0.8444063067436218, 0.843481719493866, 0.850350022315979, 0.8502179384231567, 0.8570862412452698, 0.857218325138092, 0.8574824929237366, 0.8610487580299377, 0.8610487580299377, 0.8607845902442932, 0.8658037185668945, 0.8701624870300293, 0.8689737319946289, 0.8708229064941406, 0.8792761564254761, 0.8798044919967651, 0.8765024542808533, 0.8765024542808533, 0.8824461698532104, 0.880729079246521, 0.8844274282455444, 0.8838990926742554, 0.8887861371040344, 0.8878615498542786, 0.8903711438179016, 0.8924844861030579, 0.8912957310676575, 0.8976356983184814, 0.8960506916046143], "val_loss": [2.040694236755371, 1.5166728496551514, 1.045767068862915, 0.8421168327331543, 0.7569165229797363, 0.7011509537696838, 0.6573318839073181, 0.6179470419883728, 0.5908101201057434, 0.5737177133560181, 0.5541383624076843, 0.5365487933158875, 0.518412172794342, 0.5104728937149048, 0.49868762493133545, 0.485697478055954, 0.48461878299713135, 0.46694132685661316, 0.459992378950119, 0.44818419218063354, 0.45110249519348145, 0.4507465958595276, 0.4339507520198822, 0.4287099242210388, 0.42590731382369995, 0.4119842052459717, 0.4104468524456024, 0.4069807529449463, 0.40372517704963684, 0.3985708951950073, 0.3967111110687256, 0.39305025339126587, 0.39346253871917725, 0.3906964063644409, 0.3815464675426483, 0.3792845904827118, 0.37928369641304016, 0.3762374818325043, 0.37582898139953613, 0.37387406826019287, 0.3717586398124695, 0.36671704053878784, 0.363382488489151, 0.36401286721229553, 0.3619881868362427, 0.35666540265083313, 0.3588123917579651, 0.3541429042816162, 0.35232576727867126, 0.35342442989349365, 0.3524846136569977, 0.34847813844680786, 0.34814298152923584, 0.35015836358070374], "val_accuracy": [0.5323333144187927, 0.6446666717529297, 0.6756666898727417, 0.7043333053588867, 0.7239999771118164, 0.7493333220481873, 0.753000020980835, 0.7706666588783264, 0.7820000052452087, 0.7873333096504211, 0.7956666946411133, 0.800000011920929, 0.8136666417121887, 0.812666654586792, 0.8199999928474426, 0.824999988079071, 0.8246666789054871, 0.8326666951179504, 0.8303333520889282, 0.8376666903495789, 0.8333333134651184, 0.8343333601951599, 0.8446666598320007, 0.843666672706604, 0.846666693687439, 0.8513333201408386, 0.8546666502952576, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8529999852180481, 0.859333336353302, 0.8546666502952576, 0.8569999933242798, 0.8606666922569275, 0.8633333444595337, 0.8643333315849304, 0.8629999756813049, 0.8576666712760925, 0.8703333139419556, 0.8640000224113464, 0.8643333315849304, 0.8676666617393494, 0.8663333058357239, 0.8713333606719971, 0.871999979019165, 0.8693333268165588, 0.8693333268165588, 0.878000020980835, 0.8756666779518127, 0.8706666827201843, 0.8756666779518127, 0.8769999742507935, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8662857413291931, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2232911586761475, 1.8634240627288818, 1.3935959339141846, 1.086677074432373, 0.9217742681503296, 0.8341136574745178, 0.7660320997238159, 0.7098278403282166, 0.6757085919380188, 0.645262598991394, 0.6213794350624084, 0.6003267168998718, 0.5743717551231384, 0.5698539614677429, 0.5471469759941101, 0.5296701192855835, 0.5164195895195007, 0.505333423614502, 0.4962960481643677, 0.4819343090057373, 0.47546300292015076, 0.46816352009773254, 0.45536550879478455, 0.4453293979167938, 0.4397260844707489, 0.43227043747901917, 0.42949697375297546, 0.4142167568206787, 0.4153745472431183, 0.3977338671684265, 0.3945615589618683, 0.38614779710769653, 0.38565850257873535, 0.3697683811187744, 0.38147827982902527, 0.36513105034828186, 0.36079469323158264, 0.36162424087524414], "accuracy": [0.2736758589744568, 0.49029189348220825, 0.5645225048065186, 0.6264694333076477, 0.6709813475608826, 0.6964733600616455, 0.7236824631690979, 0.7424382567405701, 0.7535332441329956, 0.7666094303131104, 0.7754589915275574, 0.7798177003860474, 0.7882710099220276, 0.7942147850990295, 0.8020076751708984, 0.8087438941001892, 0.8140271902084351, 0.8215559124946594, 0.8240655064582825, 0.8322546482086182, 0.8304054737091064, 0.8362171649932861, 0.8339717388153076, 0.8437458872795105, 0.8448025584220886, 0.8487650156021118, 0.8490291833877563, 0.8548408150672913, 0.8515387773513794, 0.86118084192276, 0.86118084192276, 0.8631620407104492, 0.8648791313171387, 0.8697662353515625, 0.8671245574951172, 0.8710870146751404, 0.8735966086387634, 0.8714832663536072], "val_loss": [2.04038667678833, 1.5249755382537842, 1.0629581212997437, 0.8551918864250183, 0.7609944939613342, 0.7034228444099426, 0.6590638160705566, 0.6271690130233765, 0.5939952731132507, 0.5698024034500122, 0.5545066595077515, 0.5388435125350952, 0.5254930853843689, 0.5196771621704102, 0.5033885836601257, 0.4923267364501953, 0.4843740165233612, 0.47527822852134705, 0.46558207273483276, 0.459361732006073, 0.45531243085861206, 0.4492093622684479, 0.4514669179916382, 0.43756046891212463, 0.43350857496261597, 0.4392758309841156, 0.42637109756469727, 0.41904664039611816, 0.4158051013946533, 0.41517341136932373, 0.40923595428466797, 0.4074012339115143, 0.40175122022628784, 0.4020004868507385, 0.40628084540367126, 0.39707180857658386, 0.3954088091850281, 0.3902204632759094], "val_accuracy": [0.5173333287239075, 0.6380000114440918, 0.6736666560173035, 0.7036666870117188, 0.731333315372467, 0.7403333187103271, 0.7639999985694885, 0.7673333287239075, 0.7786666750907898, 0.7893333435058594, 0.7993333339691162, 0.8006666898727417, 0.8073333501815796, 0.8096666932106018, 0.8159999847412109, 0.8199999928474426, 0.8259999752044678, 0.8263333439826965, 0.8320000171661377, 0.8389999866485596, 0.8336666822433472, 0.840666651725769, 0.8366666436195374, 0.8446666598320007, 0.843999981880188, 0.8399999737739563, 0.8496666550636292, 0.8536666631698608, 0.8489999771118164, 0.8546666502952576, 0.8523333072662354, 0.8533333539962769, 0.8573333621025085, 0.8553333282470703, 0.8556666374206543, 0.8536666631698608, 0.8536666631698608, 0.8573333621025085]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0], [0, 1, 9], [0], [0, 21], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.849142849445343, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2925326824188232, 2.1890718936920166, 1.758164405822754, 1.3229652643203735, 1.081353783607483, 0.9250994920730591, 0.8413541316986084, 0.8180388808250427, 0.7855579257011414, 0.7495782971382141, 0.6947854161262512, 0.6723942756652832, 0.6478667855262756, 0.6214383840560913, 0.6019509434700012, 0.6016668677330017, 0.5841441750526428, 0.5713465809822083, 0.5504787564277649, 0.5555961728096008, 0.5412677526473999, 0.5193860530853271, 0.5107927918434143, 0.507884681224823, 0.4883936047554016, 0.47739455103874207, 0.4710908532142639, 0.4583461880683899, 0.4550953805446625, 0.44372111558914185, 0.4332481920719147, 0.42622002959251404, 0.4216921329498291, 0.420441210269928, 0.4139197766780853, 0.38838618993759155, 0.39666199684143066, 0.3816814720630646, 0.3762332499027252, 0.37935590744018555, 0.3697969317436218, 0.3740178048610687], "accuracy": [0.12640337646007538, 0.3276977837085724, 0.4543653428554535, 0.5522388219833374, 0.6396777033805847, 0.6682076454162598, 0.6951525807380676, 0.7066437602043152, 0.7054550051689148, 0.7213049530982971, 0.7404569983482361, 0.7534011602401733, 0.7540615797042847, 0.7683265209197998, 0.7755910754203796, 0.7753269076347351, 0.7836481332778931, 0.785629391670227, 0.7907806038856506, 0.798309326171875, 0.7991018295288086, 0.804649293422699, 0.8099326491355896, 0.8162726163864136, 0.8166688680648804, 0.822348415851593, 0.819970965385437, 0.8298771381378174, 0.8238013386726379, 0.829216718673706, 0.8384625315666199, 0.8401796221733093, 0.8380662798881531, 0.841500461101532, 0.8441421389579773, 0.8537842035293579, 0.8482366800308228, 0.8541803956031799, 0.8597279191017151, 0.8605204224586487, 0.8540483713150024, 0.8545766472816467], "val_loss": [2.2478790283203125, 2.020559787750244, 1.1531277894973755, 0.9058123230934143, 0.7770595550537109, 0.7447004914283752, 0.6952201128005981, 0.6896311044692993, 0.6595343947410583, 0.6328817009925842, 0.5978749394416809, 0.57891845703125, 0.5594772100448608, 0.5365018844604492, 0.5465043187141418, 0.5317451357841492, 0.5217165350914001, 0.5002456307411194, 0.5071779489517212, 0.49580514430999756, 0.4788013994693756, 0.4842665493488312, 0.4797237813472748, 0.4893394410610199, 0.46872127056121826, 0.46954232454299927, 0.4691286087036133, 0.4590197205543518, 0.4529697299003601, 0.444537878036499, 0.4419841766357422, 0.4336327612400055, 0.4332035183906555, 0.44463762640953064, 0.44228148460388184, 0.41553422808647156, 0.41080477833747864, 0.4384252429008484, 0.44170987606048584, 0.42653506994247437, 0.4322046637535095, 0.4349648058414459], "val_accuracy": [0.4153333306312561, 0.476666659116745, 0.6296666860580444, 0.6896666884422302, 0.7203333377838135, 0.7286666631698608, 0.734666645526886, 0.746999979019165, 0.7590000033378601, 0.7649999856948853, 0.7710000276565552, 0.7789999842643738, 0.7873333096504211, 0.7929999828338623, 0.7913333177566528, 0.7923333048820496, 0.7943333387374878, 0.7990000247955322, 0.8023333549499512, 0.8066666722297668, 0.8096666932106018, 0.8106666803359985, 0.8130000233650208, 0.8063333630561829, 0.8193333148956299, 0.8256666660308838, 0.8259999752044678, 0.8226666450500488, 0.8273333311080933, 0.8330000042915344, 0.8360000252723694, 0.8370000123977661, 0.8343333601951599, 0.8349999785423279, 0.8413333296775818, 0.8483333587646484, 0.8526666760444641, 0.8486666679382324, 0.8519999980926514, 0.8493333458900452, 0.8463333249092102, 0.8510000109672546]}, "mapping_values": [1, 10, 5, 5, 3, 4, 3, 1, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.831428587436676, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.506486415863037, 0.7676240801811218, 0.6316640377044678, 0.5744122266769409, 0.5510787963867188, 0.5476611256599426, 0.5226032137870789, 0.4807477593421936, 0.5270719528198242, 0.4930546283721924, 0.48656365275382996, 0.4609568417072296, 0.45385631918907166, 0.4449075758457184, 0.4580926299095154, 0.503664493560791, 0.45139366388320923, 0.44776907563209534, 0.5059067010879517], "accuracy": [0.4788006842136383, 0.7304186820983887, 0.7716285586357117, 0.789459764957428, 0.8054417967796326, 0.8010830879211426, 0.8123101592063904, 0.8363492488861084, 0.8080834746360779, 0.8297450542449951, 0.8286884427070618, 0.8322546482086182, 0.8454629778862, 0.8408400416374207, 0.8421608805656433, 0.8338396549224854, 0.8448025584220886, 0.8473120927810669, 0.843481719493866], "val_loss": [0.7699232697486877, 0.5867434740066528, 0.5058396458625793, 0.50551837682724, 0.49458804726600647, 0.4984460473060608, 0.4865601062774658, 0.4780963063240051, 0.5194140672683716, 0.4944467842578888, 0.49099260568618774, 0.5162003040313721, 0.5137304067611694, 0.5483086705207825, 0.6039503216743469, 0.6001149415969849, 0.5898011326789856, 0.581686794757843, 0.6559880971908569], "val_accuracy": [0.7166666388511658, 0.7990000247955322, 0.8183333277702332, 0.8180000185966492, 0.8256666660308838, 0.8303333520889282, 0.8396666646003723, 0.8296666741371155, 0.8326666951179504, 0.840666651725769, 0.8353333473205566, 0.8506666421890259, 0.8473333120346069, 0.8513333201408386, 0.8493333458900452, 0.8420000076293945, 0.840666651725769, 0.8423333168029785, 0.8496666550636292]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 4, 3], [0, 1, 0, 1], [20, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [1, 1], [2], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 8, 3, 3, 3, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 1, 1, 0, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.441321849822998, 4.964520454406738, 10.503809928894043, 15.603924751281738, 15.015493392944336, 4.576773166656494, 5.3231306076049805, 4.785447120666504, 5.819156646728516, 25.722145080566406, 63.89060592651367], "accuracy": [0.10381719470024109, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09879804402589798, 0.10408136248588562, 0.09708096832036972, 0.09470347315073013, 0.09879804402589798, 0.10117553919553757], "val_loss": [3.2507922649383545, 8.040637016296387, 13.92436695098877, 16.868099212646484, 9.013246536254883, 4.665429592132568, 5.393900394439697, 2.999080181121826, 12.41306209564209, 53.93888473510742, 66.81378173828125], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.0976666659116745, 0.10233332961797714, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 2, 3, 4, 3, 9], [0, 2, 0, 2], [39, 90, 81], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 3, 3, 5], [0, 2, 0, 3, 5], [16, 30], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 6, 2, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 47, 81, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha))), beta)))", "other_info": {"loss": [51466567942144.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2223520768.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}, "mapping_values": [1, 10, 6, 4, 3, 10, 5, 5, 2, 2, 1, 1, 1, 17, 8, 9, 5], "tree_depth": 16}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [2, 2, 3, 1, 2, 5, 7, 7, 3, 4, 5, 6, 1, 5, 9, 4, 4, 3, 4, 1, 6, 6, 6, 6, 4, 7, 3, 1, 4, 4, 0, 7, 4, 1, 1], [0, 2, 0, 3, 0, 4, 2, 3, 5, 1, 1, 1, 3, 4, 0, 3, 5, 1, 2, 2, 1, 4, 0, 0, 3, 1, 1, 3, 3, 4], [16, 16, 96, 74, 22, 4, 18], [0, 1], [0], [4], [85], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 6, 3, 6, 8, 1, 4, 1, 4, 0, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 65, 35, 30, 7, 2, 1, 1, 0, 20, 11, 9, 5], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.add(tf.math.add(tf.math.multiply(tf.math.pow(tf.math.square(tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), tf.math.pow(beta, tf.math.pow(grad, grad))), tf.math.multiply(alpha, tf.math.pow(alpha, tf.math.subtract(tf.math.divide_no_nan(alpha, grad), grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(alpha, beta))))), tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.pow(alpha, tf.math.pow(tf.math.negative(grad), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.add(tf.math.pow(alpha, tf.math.subtract(alpha, tf.math.subtract(grad, grad))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.negative(tf.math.sqrt(beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 1, 5], [0, 1, 0, 2, 3], [0, 39, 39], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 6, 3, 0, 3, 5], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [99], [1], [0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0]], "fitness": -0.09028571099042892, "mapping_values": [1, 10, 5, 5, 2, 1, 0, 1, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3109633922576904, 2.31034255027771, 2.3112807273864746, 2.310086250305176, 2.3099632263183594, 2.3095993995666504], "accuracy": [0.09100515395402908, 0.09192973375320435, 0.09232597798109055, 0.09232597798109055, 0.09325055778026581, 0.09325055778026581], "val_loss": [2.3093454837799072, 2.3093454837799072, 2.3093454837799072, 2.3093454837799072, 2.3093454837799072, 2.3093454837799072], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]