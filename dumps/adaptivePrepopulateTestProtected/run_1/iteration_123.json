[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8682857155799866, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2233502864837646, 1.8746368885040283, 1.4048484563827515, 1.0937107801437378, 0.9436272978782654, 0.8370436429977417, 0.7662860155105591, 0.7213658690452576, 0.6937068700790405, 0.6655095219612122, 0.6289924383163452, 0.6168789863586426, 0.5928426384925842, 0.5798734426498413, 0.5627108812332153, 0.5455021858215332, 0.5299210548400879, 0.5239149332046509, 0.5110622048377991, 0.4978439211845398, 0.4936319589614868, 0.48382091522216797, 0.47466784715652466, 0.4636528491973877, 0.450334757566452, 0.4438912272453308, 0.43610844016075134, 0.4332258999347687, 0.4200729727745056, 0.42441681027412415, 0.41041138768196106, 0.40831130743026733, 0.39282941818237305, 0.3877715766429901, 0.3818870484828949, 0.3788098990917206, 0.37681445479393005, 0.37246182560920715, 0.3601449131965637, 0.3567526340484619, 0.35623669624328613, 0.3521915376186371, 0.34514039754867554, 0.3345457911491394, 0.34346747398376465, 0.3339744210243225, 0.32915619015693665, 0.3212588131427765, 0.31833431124687195, 0.31362971663475037, 0.3099450469017029, 0.3085635304450989, 0.30169379711151123, 0.29900923371315, 0.29596421122550964, 0.28805166482925415, 0.28647175431251526, 0.2722650170326233, 0.2715457081794739, 0.273092657327652, 0.2772938907146454, 0.26759767532348633, 0.25754818320274353, 0.2610537111759186], "accuracy": [0.27222296595573425, 0.4843481779098511, 0.5596354603767395, 0.6116761565208435, 0.6612072587013245, 0.6936996579170227, 0.717870831489563, 0.7293620109558105, 0.748249888420105, 0.754589855670929, 0.7687227725982666, 0.7733456492424011, 0.783119797706604, 0.7852331399917603, 0.7950072884559631, 0.800290584564209, 0.8096684813499451, 0.8117818236351013, 0.8142913579940796, 0.8191784620285034, 0.8220842480659485, 0.8255184292793274, 0.8300092220306396, 0.8325188159942627, 0.8413683772087097, 0.8400475382804871, 0.8446704745292664, 0.8430854678153992, 0.848368763923645, 0.8536521196365356, 0.8580108284950256, 0.8521991968154907, 0.8619733452796936, 0.8625016212463379, 0.8661999702453613, 0.8638224601745605, 0.8664641380310059, 0.8709549307823181, 0.873860776424408, 0.8755778670310974, 0.8767666220664978, 0.8737286925315857, 0.8786157965660095, 0.8804649114608765, 0.8746532797813416, 0.8823140859603882, 0.8849557638168335, 0.8865407705307007, 0.8860124349594116, 0.8881257176399231, 0.8882578015327454, 0.8883898854255676, 0.8923524022102356, 0.8949940800666809, 0.8938053250312805, 0.8969752788543701, 0.8981640338897705, 0.9014661312103271, 0.9021265506744385, 0.9031832218170166, 0.8988244533538818, 0.9079381823539734, 0.9051644206047058, 0.9049002528190613], "val_loss": [2.0396249294281006, 1.5203447341918945, 1.0451570749282837, 0.8352910280227661, 0.7488234043121338, 0.6964031457901001, 0.654612123966217, 0.62211012840271, 0.5969891548156738, 0.5740790367126465, 0.5530183911323547, 0.5424494743347168, 0.5296161770820618, 0.5125743746757507, 0.5043661594390869, 0.48918887972831726, 0.48676782846450806, 0.47260165214538574, 0.4630451798439026, 0.457871675491333, 0.454091876745224, 0.4443425238132477, 0.44088640809059143, 0.4335366189479828, 0.4263451397418976, 0.42351406812667847, 0.41655290126800537, 0.41335538029670715, 0.4076438844203949, 0.409304678440094, 0.40571457147598267, 0.39909058809280396, 0.3940378427505493, 0.39453768730163574, 0.3897958993911743, 0.3836636543273926, 0.3822152614593506, 0.38121166825294495, 0.38373151421546936, 0.3767857253551483, 0.372946560382843, 0.3703298270702362, 0.37029126286506653, 0.36684513092041016, 0.3684845268726349, 0.3660663962364197, 0.3612041771411896, 0.36030980944633484, 0.3565306067466736, 0.3597830832004547, 0.3650836646556854, 0.3550478518009186, 0.3553715944290161, 0.3517098128795624, 0.35211169719696045, 0.35103124380111694, 0.35165295004844666, 0.34961938858032227, 0.3465457856655121, 0.347395658493042, 0.3470185101032257, 0.34641051292419434, 0.34796756505966187, 0.3454953134059906], "val_accuracy": [0.5329999923706055, 0.6543333530426025, 0.6759999990463257, 0.7113333344459534, 0.7293333411216736, 0.7483333349227905, 0.7606666684150696, 0.762666642665863, 0.7803333401679993, 0.7846666574478149, 0.7903333306312561, 0.8026666641235352, 0.8043333292007446, 0.8113333582878113, 0.8163333535194397, 0.8246666789054871, 0.8230000138282776, 0.8339999914169312, 0.8326666951179504, 0.8330000042915344, 0.8363333344459534, 0.8426666855812073, 0.8483333587646484, 0.8506666421890259, 0.8479999899864197, 0.8493333458900452, 0.8543333411216736, 0.8543333411216736, 0.8606666922569275, 0.8560000061988831, 0.8560000061988831, 0.8606666922569275, 0.8610000014305115, 0.8633333444595337, 0.8619999885559082, 0.8656666874885559, 0.8640000224113464, 0.8650000095367432, 0.8636666536331177, 0.8663333058357239, 0.871666669845581, 0.8696666955947876, 0.8700000047683716, 0.8726666569709778, 0.8733333349227905, 0.8693333268165588, 0.8743333220481873, 0.874666690826416, 0.8773333430290222, 0.8743333220481873, 0.871999979019165, 0.8773333430290222, 0.871999979019165, 0.8786666393280029, 0.8766666650772095, 0.8790000081062317, 0.8806666731834412, 0.8773333430290222, 0.8833333253860474, 0.8796666860580444, 0.8823333382606506, 0.8809999823570251, 0.8820000290870667, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8468571305274963, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2935216426849365, 2.1885571479797363, 1.7645350694656372, 1.3645894527435303, 1.0815571546554565, 0.9152559638023376, 0.8460220098495483, 0.811419665813446, 0.7693623900413513, 0.7408026456832886, 0.6883840560913086, 0.6714270114898682, 0.6577767729759216, 0.6187219619750977, 0.6146872639656067, 0.5908601880073547, 0.5754661560058594, 0.5644564032554626, 0.566415011882782, 0.5515599846839905, 0.544219970703125, 0.5224706530570984, 0.5156875848770142, 0.5082761645317078, 0.4928271472454071, 0.4810389280319214, 0.4711257517337799, 0.46494409441947937, 0.46749600768089294, 0.4435301721096039, 0.437671422958374, 0.43366843461990356, 0.42417415976524353, 0.4310736358165741, 0.3925366699695587, 0.38687294721603394, 0.42193078994750977, 0.39507755637168884, 0.39110058546066284], "accuracy": [0.12310130894184113, 0.3299432098865509, 0.4476291239261627, 0.5423325896263123, 0.6297714710235596, 0.6637167930603027, 0.687491774559021, 0.7021529674530029, 0.7046625018119812, 0.7164179086685181, 0.7372870445251465, 0.7445515990257263, 0.7508915662765503, 0.7614582180976868, 0.7656848430633545, 0.7744023203849792, 0.7824593782424927, 0.7800818681716919, 0.7798177003860474, 0.7881389260292053, 0.7931581139564514, 0.8016114234924316, 0.8057059645652771, 0.8059701323509216, 0.8092722296714783, 0.8112534880638123, 0.8178576231002808, 0.8202351331710815, 0.8189142942428589, 0.8284242749214172, 0.8323867321014404, 0.8257825970649719, 0.8391229510307312, 0.8337075710296631, 0.8514066934585571, 0.848368763923645, 0.8448025584220886, 0.8510104417800903, 0.8453308939933777], "val_loss": [2.2457282543182373, 2.018958330154419, 1.1373358964920044, 0.8590515851974487, 0.7618656158447266, 0.6976186633110046, 0.6562269926071167, 0.6337515711784363, 0.6162842512130737, 0.6020331382751465, 0.5563028454780579, 0.5380758047103882, 0.5274600386619568, 0.5232025384902954, 0.5114392638206482, 0.4995640516281128, 0.4906838834285736, 0.4851136803627014, 0.4888860583305359, 0.47345083951950073, 0.4646460711956024, 0.4538126587867737, 0.4510641396045685, 0.4553966522216797, 0.44958651065826416, 0.44715723395347595, 0.4278910458087921, 0.4285094439983368, 0.40774959325790405, 0.41698697209358215, 0.409736692905426, 0.3931525945663452, 0.3965795040130615, 0.3828588128089905, 0.387736052274704, 0.41052258014678955, 0.3990117311477661, 0.3871283233165741, 0.3869095742702484], "val_accuracy": [0.406333327293396, 0.4300000071525574, 0.6399999856948853, 0.6913333535194397, 0.7210000157356262, 0.734333336353302, 0.7403333187103271, 0.7643333077430725, 0.7546666860580444, 0.7703333497047424, 0.784333348274231, 0.7973333597183228, 0.7979999780654907, 0.7976666688919067, 0.8056666851043701, 0.8050000071525574, 0.8109999895095825, 0.8116666674613953, 0.8036666512489319, 0.8243333101272583, 0.8203333616256714, 0.8220000267028809, 0.8246666789054871, 0.8230000138282776, 0.8333333134651184, 0.8263333439826965, 0.840666651725769, 0.8339999914169312, 0.846666693687439, 0.8486666679382324, 0.8496666550636292, 0.8586666584014893, 0.859000027179718, 0.8613333106040955, 0.8606666922569275, 0.8583333492279053, 0.859000027179718, 0.8573333621025085, 0.8539999723434448]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8345714211463928, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5564547777175903, 0.824146568775177, 0.6465749740600586, 0.6000773906707764, 0.593101978302002, 0.5530387163162231, 0.5103529095649719, 0.49478834867477417, 0.4960216283798218, 0.4827863276004791, 0.4686848223209381, 0.45694559812545776, 0.4578193724155426, 0.4802345335483551, 0.4521666169166565, 0.4534875750541687, 0.5030074119567871, 0.4898970127105713, 0.536173403263092, 0.5442494750022888], "accuracy": [0.4803856909275055, 0.709021270275116, 0.7627789974212646, 0.7783648371696472, 0.7832518815994263, 0.8009510040283203, 0.8162726163864136, 0.8186501264572144, 0.822348415851593, 0.8260467648506165, 0.8308017253875732, 0.845859169960022, 0.8297450542449951, 0.8389908671379089, 0.837537944316864, 0.8467837572097778, 0.8396512866020203, 0.8309338092803955, 0.8247259259223938, 0.830669641494751], "val_loss": [0.8390361070632935, 0.6269684433937073, 0.5357611775398254, 0.5235028266906738, 0.5253073573112488, 0.5051968693733215, 0.47860461473464966, 0.5055568218231201, 0.5003752708435059, 0.47765782475471497, 0.5119896531105042, 0.5357303619384766, 0.5394781827926636, 0.5375096797943115, 0.5728117823600769, 0.5580093860626221, 0.6151413321495056, 0.5679715871810913, 0.6029787063598633, 0.6044601798057556], "val_accuracy": [0.721666693687439, 0.7766666412353516, 0.7913333177566528, 0.7993333339691162, 0.8053333163261414, 0.8203333616256714, 0.8289999961853027, 0.8303333520889282, 0.8353333473205566, 0.8299999833106995, 0.843999981880188, 0.8333333134651184, 0.8403333425521851, 0.8363333344459534, 0.8456666469573975, 0.8343333601951599, 0.8403333425521851, 0.8270000219345093, 0.8370000123977661, 0.8416666388511658]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 1, 3, 1, 3, 0, 0, 6, 7, 5, 2, 0, 3, 3, 6, 6, 0, 5, 3, 5], [0, 0, 1, 0, 2, 0, 0, 0, 3, 3, 1, 2, 2], [83, 99, 27, 59, 51, 39], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 3, 0, 3, 4, 1, 4, 9, 6, 1, 2], [0, 2, 1, 2, 0, 1, 4, 4, 3], [0, 60, 10], [0, 1], [0], [0], [16], [0, 1], [0], [1], [0]], "fitness": -0.7914285659790039, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(grad), tf.math.add(tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), grad)), tf.math.square(tf.math.multiply(tf.math.square(alpha), grad)))), grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(beta, tf.math.pow(alpha, beta)), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), alpha)), tf.math.subtract(grad, tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1.9783077239990234, 1.7847390174865723, 1.1030091047286987, 0.8924822807312012, 0.8322292566299438, 0.8431918025016785, 0.8206539750099182, 0.8012060523033142, 0.7964267730712891, 0.808856189250946, 0.8312549591064453, 0.8063881397247314, 0.8477404117584229, 1.34537935256958, 1.3631806373596191], "accuracy": [0.339321106672287, 0.49412229657173157, 0.6165632009506226, 0.6729626059532166, 0.6852463483810425, 0.7043983340263367, 0.6976621150970459, 0.707040011882782, 0.7041342258453369, 0.7317395210266113, 0.7038700580596924, 0.7091533541679382, 0.707040011882782, 0.6225069165229797, 0.6048077940940857], "val_loss": [2.3399198055267334, 1.1674509048461914, 0.77012038230896, 0.6814924478530884, 0.8017457723617554, 0.6766390204429626, 0.5947111248970032, 0.6366506218910217, 0.6244381666183472, 0.6483568549156189, 0.6522180438041687, 0.6358557939529419, 0.6856119632720947, 0.8567518591880798, 0.9546880125999451], "val_accuracy": [0.4333333373069763, 0.6483333110809326, 0.6996666789054871, 0.7353333234786987, 0.7323333621025085, 0.7333333492279053, 0.7736666798591614, 0.7753333449363708, 0.7663333415985107, 0.7833333611488342, 0.7516666650772095, 0.7723333239555359, 0.7490000128746033, 0.7383333444595337, 0.6913333535194397]}, "mapping_values": [1, 33, 20, 13, 6, 21, 12, 9, 3, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 32}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 2, 5, 0, 8], [0, 1, 0, 2], [39, 46], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 9, 4, 5], [0, 2, 0, 2], [16, 16], [0, 1], [0], [4], [63], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 9, 2, 9, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 0, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 2, 6, 4, 2, 2, 2, 1, 1, 0, 5, 4, 1, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), tf.math.sqrt(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3032784461975098, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 74], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [8], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 5, 8, 9], [0, 0, 3, 3, 0, 0, 4, 1, 2, 0], [16, 4, 96, 99, 61, 4]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.pow(sigma, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)))), tf.math.square(tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 20, 12, 8, 5], "tree_depth": 17}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 62], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [9, 3, 3, 6, 2, 1, 4, 1, 4, 2, 8], [0, 4, 1, 3, 0, 0, 0, 1, 2, 3], [16, 99, 96, 49, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 0, 1, 1, 0, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3033945560455322, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}]