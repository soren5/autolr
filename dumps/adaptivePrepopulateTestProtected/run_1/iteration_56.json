[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8791428804397583, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224691152572632, 1.8683772087097168, 1.4013793468475342, 1.0939387083053589, 0.9551045894622803, 0.8530007004737854, 0.779485821723938, 0.7457146048545837, 0.7030880451202393, 0.6819782257080078, 0.646918535232544, 0.6262496709823608, 0.5985910296440125, 0.5927533507347107, 0.5734840035438538, 0.5512962341308594, 0.5397131443023682, 0.5306671261787415, 0.5227266550064087, 0.5091748833656311, 0.493897944688797, 0.4855693578720093, 0.4755500555038452, 0.46436217427253723, 0.4576524496078491, 0.4496408700942993, 0.4397708475589752, 0.4444425106048584, 0.4241836667060852, 0.43109697103500366, 0.4217256009578705, 0.40949341654777527, 0.40209436416625977, 0.40443363785743713, 0.39794257283210754, 0.3834945559501648, 0.3769911527633667, 0.3764527142047882, 0.3669157326221466, 0.37186846137046814, 0.36375153064727783, 0.35602423548698425, 0.3509747087955475, 0.3444776237010956, 0.3358671963214874, 0.32751885056495667, 0.33768701553344727, 0.3213590085506439, 0.3252784311771393, 0.32559001445770264, 0.3185674250125885, 0.3153201639652252, 0.30147793889045715, 0.30520761013031006, 0.2942403256893158, 0.29585933685302734, 0.29156526923179626, 0.28494489192962646, 0.2864094078540802, 0.2840997576713562, 0.28428274393081665, 0.27462372183799744, 0.2701452672481537, 0.26235172152519226, 0.26258987188339233, 0.25485068559646606, 0.25275006890296936, 0.2532438039779663, 0.25031259655952454, 0.24532482028007507, 0.2331540286540985, 0.2390974760055542, 0.23482851684093475, 0.23101423680782318, 0.22753727436065674, 0.22632567584514618], "accuracy": [0.25941091775894165, 0.4893673360347748, 0.55791836977005, 0.6210539937019348, 0.6567164063453674, 0.6983225345611572, 0.7206445932388306, 0.7283053994178772, 0.7486461400985718, 0.7526086568832397, 0.7619865536689758, 0.7676661014556885, 0.7792893648147583, 0.7816668748855591, 0.7922335267066956, 0.7997622489929199, 0.8053097128868103, 0.8055738806724548, 0.8107251524925232, 0.8133667707443237, 0.8222163319587708, 0.8226125836372375, 0.8300092220306396, 0.8327829837799072, 0.8310658931732178, 0.844010055065155, 0.8417646288871765, 0.8400475382804871, 0.846387505531311, 0.845859169960022, 0.8498216867446899, 0.8511425256729126, 0.8581429123878479, 0.8519350290298462, 0.8560295701026917, 0.8639545440673828, 0.8640866279602051, 0.8636903762817383, 0.8676528930664062, 0.8632941246032715, 0.86553955078125, 0.8687095642089844, 0.8733324408531189, 0.8751816153526306, 0.8776912093162537, 0.8792761564254761, 0.8746532797813416, 0.8809932470321655, 0.8815215826034546, 0.8833707571029663, 0.8837670087814331, 0.8850878477096558, 0.8930128216743469, 0.8902390599250793, 0.8947299122810364, 0.8943336606025696, 0.891559898853302, 0.8963148593902588, 0.89552241563797, 0.8947299122810364, 0.895918607711792, 0.8989565372467041, 0.9046360850334167, 0.9054285883903503, 0.9002773761749268, 0.9064852595329285, 0.9074098467826843, 0.9099194407463074, 0.9104477763175964, 0.915070652961731, 0.9157310724258423, 0.9129573106765747, 0.9148064851760864, 0.9124290347099304, 0.9171839952468872, 0.9171839952468872], "val_loss": [2.038526773452759, 1.510238766670227, 1.0447747707366943, 0.8352280259132385, 0.7531793713569641, 0.6963355541229248, 0.6498194932937622, 0.6246073842048645, 0.5953369736671448, 0.5716328024864197, 0.5562007427215576, 0.5438976287841797, 0.5279420018196106, 0.51389080286026, 0.5057971477508545, 0.49414271116256714, 0.482173353433609, 0.47447696328163147, 0.46831631660461426, 0.4581488370895386, 0.4518188536167145, 0.4512670934200287, 0.4456486403942108, 0.43329060077667236, 0.43261417746543884, 0.4205039143562317, 0.4206644594669342, 0.413736492395401, 0.4104427099227905, 0.40436092019081116, 0.4019021689891815, 0.401526540517807, 0.3927256762981415, 0.39569756388664246, 0.388218492269516, 0.39298149943351746, 0.3826553523540497, 0.3818466365337372, 0.3840924799442291, 0.3762838542461395, 0.3779735565185547, 0.3782140612602234, 0.3694102466106415, 0.3699958026409149, 0.36511310935020447, 0.366933137178421, 0.36473965644836426, 0.3623674213886261, 0.35939449071884155, 0.35847315192222595, 0.3595349192619324, 0.35298311710357666, 0.3535289168357849, 0.35462313890457153, 0.35054683685302734, 0.34882593154907227, 0.3493621349334717, 0.3531535565853119, 0.34503549337387085, 0.34384992718696594, 0.3448854088783264, 0.34570378065109253, 0.34537023305892944, 0.34840068221092224, 0.34696924686431885, 0.3487513065338135, 0.33932241797447205, 0.3398410975933075, 0.33569568395614624, 0.33905473351478577, 0.34274718165397644, 0.34127065539360046, 0.33783894777297974, 0.34692227840423584, 0.35144636034965515, 0.33920830488204956], "val_accuracy": [0.5683333277702332, 0.6576666831970215, 0.6836666464805603, 0.7106666564941406, 0.7303333282470703, 0.746666669845581, 0.7596666812896729, 0.7696666717529297, 0.7720000147819519, 0.7870000004768372, 0.7943333387374878, 0.800000011920929, 0.8013333082199097, 0.8119999766349792, 0.8103333115577698, 0.8133333325386047, 0.8209999799728394, 0.8266666531562805, 0.8293333053588867, 0.8296666741371155, 0.831333339214325, 0.8373333215713501, 0.8320000171661377, 0.8396666646003723, 0.8389999866485596, 0.8483333587646484, 0.8433333039283752, 0.8503333330154419, 0.8510000109672546, 0.8523333072662354, 0.8506666421890259, 0.8529999852180481, 0.8543333411216736, 0.8569999933242798, 0.8603333234786987, 0.8576666712760925, 0.859333336353302, 0.8576666712760925, 0.8550000190734863, 0.8643333315849304, 0.859666645526886, 0.8619999885559082, 0.8683333396911621, 0.8663333058357239, 0.8686666488647461, 0.8650000095367432, 0.8663333058357239, 0.8693333268165588, 0.8700000047683716, 0.8709999918937683, 0.8723333477973938, 0.8730000257492065, 0.875, 0.871999979019165, 0.8726666569709778, 0.875, 0.8759999871253967, 0.8723333477973938, 0.8763333559036255, 0.8743333220481873, 0.875, 0.8776666522026062, 0.875, 0.8756666779518127, 0.8759999871253967, 0.8763333559036255, 0.8796666860580444, 0.8806666731834412, 0.8769999742507935, 0.8790000081062317, 0.8840000033378601, 0.8790000081062317, 0.8796666860580444, 0.878333330154419, 0.878000020980835, 0.8816666603088379]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1], [0, 5], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8568571209907532, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292612075805664, 2.1887729167938232, 1.7659093141555786, 1.3455350399017334, 1.069739580154419, 0.9156016111373901, 0.8646209836006165, 0.82823246717453, 0.770125150680542, 0.7552251815795898, 0.704795241355896, 0.6857239007949829, 0.6722692847251892, 0.6365417838096619, 0.6073619723320007, 0.5969300270080566, 0.5836662650108337, 0.5568041205406189, 0.5578860640525818, 0.5352916121482849, 0.5459150671958923, 0.534421980381012, 0.5143516659736633, 0.5035693645477295, 0.48973849415779114, 0.500497043132782, 0.4735252559185028, 0.46348366141319275, 0.45618054270744324, 0.4495805501937866, 0.42777472734451294, 0.435141384601593, 0.42100638151168823, 0.4206239879131317, 0.40631893277168274, 0.4066441059112549, 0.38667169213294983, 0.3919222056865692, 0.37893959879875183], "accuracy": [0.12970545887947083, 0.32479196786880493, 0.43825122714042664, 0.5419363379478455, 0.6300356388092041, 0.6623960137367249, 0.6778497099876404, 0.6886804699897766, 0.7037379741668701, 0.7129837274551392, 0.7309470176696777, 0.7308149337768555, 0.7467969655990601, 0.7586844563484192, 0.7614582180976868, 0.769911527633667, 0.778761088848114, 0.7889314293861389, 0.7889314293861389, 0.7994980812072754, 0.7901201844215393, 0.7922335267066956, 0.804649293422699, 0.8072909712791443, 0.8119139075279236, 0.811649739742279, 0.821820080280304, 0.8251221776008606, 0.8228767514228821, 0.8280280232429504, 0.8330471515655518, 0.8343679904937744, 0.8356888294219971, 0.8334434032440186, 0.8399154543876648, 0.8459912538528442, 0.8411042094230652, 0.8411042094230652, 0.8536521196365356], "val_loss": [2.2464475631713867, 2.017289161682129, 1.1320563554763794, 0.8656707406044006, 0.765856921672821, 0.7267699241638184, 0.6886587142944336, 0.6658737063407898, 0.6688552498817444, 0.6252265572547913, 0.5762649178504944, 0.5681856870651245, 0.5673239827156067, 0.5452744960784912, 0.5397328734397888, 0.5289198160171509, 0.5182183384895325, 0.522891104221344, 0.5102180242538452, 0.4979015588760376, 0.487434446811676, 0.5064414739608765, 0.4897615909576416, 0.4958018660545349, 0.4799107611179352, 0.4717028737068176, 0.46696969866752625, 0.4527841806411743, 0.45939433574676514, 0.4401737153530121, 0.44090908765792847, 0.45973631739616394, 0.43087854981422424, 0.42941153049468994, 0.4478774964809418, 0.4350616931915283, 0.43739014863967896, 0.4411422610282898, 0.4588867723941803], "val_accuracy": [0.42800000309944153, 0.4480000138282776, 0.6546666622161865, 0.6903333067893982, 0.7089999914169312, 0.7170000076293945, 0.7256666421890259, 0.7413333058357239, 0.7426666617393494, 0.7586666941642761, 0.778333306312561, 0.7866666913032532, 0.7770000100135803, 0.7910000085830688, 0.7960000038146973, 0.7913333177566528, 0.8016666769981384, 0.8073333501815796, 0.8056666851043701, 0.8109999895095825, 0.8199999928474426, 0.8196666836738586, 0.8169999718666077, 0.8209999799728394, 0.8263333439826965, 0.8309999704360962, 0.8320000171661377, 0.8399999737739563, 0.8456666469573975, 0.846666693687439, 0.8450000286102295, 0.8460000157356262, 0.8533333539962769, 0.8539999723434448, 0.8496666550636292, 0.8529999852180481, 0.8413333296775818, 0.8456666469573975, 0.8483333587646484]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8494285941123962, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224299430847168, 1.8740020990371704, 1.4059690237045288, 1.1066511869430542, 0.9478707909584045, 0.8393573760986328, 0.7834427952766418, 0.7385615110397339, 0.6893147230148315, 0.6562720537185669, 0.6337517499923706, 0.6125028729438782, 0.5888217687606812, 0.5785833597183228, 0.5571578145027161, 0.5377823710441589, 0.5210213661193848, 0.5181006789207458, 0.5006604790687561, 0.4978633522987366, 0.47941645979881287, 0.46981897950172424, 0.4607609510421753, 0.4561876952648163, 0.45737773180007935, 0.43623462319374084, 0.42721936106681824, 0.42234405875205994, 0.41960975527763367, 0.4106537401676178, 0.40584638714790344, 0.4008750021457672, 0.39148956537246704, 0.38419005274772644, 0.38104087114334106, 0.37416157126426697, 0.36884328722953796, 0.3590853214263916, 0.35781002044677734, 0.3424922227859497, 0.3392666280269623, 0.34704768657684326, 0.3320270776748657, 0.33133548498153687, 0.32428497076034546, 0.3223698139190674, 0.31303438544273376, 0.3110072910785675, 0.3143376111984253, 0.3123021125793457, 0.2978903353214264, 0.29492536187171936, 0.29604530334472656, 0.29021573066711426, 0.292201966047287], "accuracy": [0.2814687490463257, 0.4799894392490387, 0.5597675442695618, 0.6110157370567322, 0.6598864197731018, 0.7041342258453369, 0.7209087014198303, 0.7346453666687012, 0.7536653280258179, 0.7586844563484192, 0.7693831920623779, 0.7835160493850708, 0.7881389260292053, 0.7882710099220276, 0.8016114234924316, 0.8084797263145447, 0.8153480291366577, 0.8144234418869019, 0.8257825970649719, 0.8248580098152161, 0.8338396549224854, 0.8359529972076416, 0.839519202709198, 0.8368775844573975, 0.8400475382804871, 0.8474441766738892, 0.8502179384231567, 0.8529917001724243, 0.8541803956031799, 0.8556333184242249, 0.8553691506385803, 0.859199583530426, 0.8614450097084045, 0.8656716346740723, 0.8672566413879395, 0.8663320541381836, 0.8712190985679626, 0.8751816153526306, 0.8747853636741638, 0.8809932470321655, 0.8799365758895874, 0.8820499181747437, 0.8833707571029663, 0.8823140859603882, 0.8821820020675659, 0.8813894987106323, 0.8861445188522339, 0.8906353116035461, 0.8882578015327454, 0.8906353116035461, 0.8981640338897705, 0.8944657444953918, 0.8968431949615479, 0.8969752788543701, 0.8963148593902588], "val_loss": [2.0420634746551514, 1.5175859928131104, 1.0430082082748413, 0.8336009383201599, 0.7423586249351501, 0.6821975708007812, 0.6346601843833923, 0.6013312339782715, 0.5701952576637268, 0.5488306283950806, 0.528120756149292, 0.5130235552787781, 0.4945436716079712, 0.48334571719169617, 0.47007569670677185, 0.46408185362815857, 0.457628458738327, 0.44064250588417053, 0.4331314265727997, 0.42450210452079773, 0.41720157861709595, 0.41590577363967896, 0.40886351466178894, 0.40324169397354126, 0.3993368446826935, 0.3942714333534241, 0.39414533972740173, 0.394364595413208, 0.38199207186698914, 0.3766269385814667, 0.38111937046051025, 0.36750683188438416, 0.3682035803794861, 0.36646586656570435, 0.36030009388923645, 0.3590572774410248, 0.358356773853302, 0.35545235872268677, 0.3536135256290436, 0.35003024339675903, 0.3485146760940552, 0.34451034665107727, 0.34398341178894043, 0.3443955183029175, 0.3423721492290497, 0.343654990196228, 0.3414955735206604, 0.33818358182907104, 0.3389096260070801, 0.339089572429657, 0.33358627557754517, 0.33494627475738525, 0.3355589509010315, 0.3381843566894531, 0.32982486486434937], "val_accuracy": [0.5440000295639038, 0.6596666574478149, 0.6856666803359985, 0.7099999785423279, 0.734333336353302, 0.7563333511352539, 0.7739999890327454, 0.7873333096504211, 0.79666668176651, 0.8080000281333923, 0.812666654586792, 0.8180000185966492, 0.8206666707992554, 0.8309999704360962, 0.8306666612625122, 0.8386666774749756, 0.8309999704360962, 0.840666651725769, 0.8479999899864197, 0.8503333330154419, 0.8516666889190674, 0.8483333587646484, 0.8519999980926514, 0.8573333621025085, 0.8629999756813049, 0.8603333234786987, 0.8616666793823242, 0.856333315372467, 0.8643333315849304, 0.8653333187103271, 0.8656666874885559, 0.8709999918937683, 0.8726666569709778, 0.8723333477973938, 0.8743333220481873, 0.875, 0.8756666779518127, 0.8766666650772095, 0.8773333430290222, 0.8759999871253967, 0.878000020980835, 0.8806666731834412, 0.8803333044052124, 0.8806666731834412, 0.8806666731834412, 0.8806666731834412, 0.8840000033378601, 0.8809999823570251, 0.8809999823570251, 0.887333333492279, 0.8849999904632568, 0.8859999775886536, 0.8859999775886536, 0.8809999823570251, 0.8870000243186951]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8220000267028809, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.569998860359192, 0.8290603160858154, 0.6815147399902344, 0.6055712699890137, 0.5798814296722412, 0.5569766163825989, 0.5180201530456543, 0.521818220615387, 0.538918673992157, 0.5423599481582642, 0.544681191444397, 0.579526960849762, 0.5526972413063049, 0.5751863718032837, 0.5712456107139587, 0.6116883754730225, 0.6106060743331909], "accuracy": [0.4757627844810486, 0.7094175219535828, 0.7450799345970154, 0.7681944370269775, 0.7799497842788696, 0.7907806038856506, 0.8070268034934998, 0.8121780753135681, 0.8047813773155212, 0.8045172095298767, 0.8129705190658569, 0.8067626357078552, 0.7957997918128967, 0.7992339134216309, 0.8101968169212341, 0.7960638999938965, 0.8054417967796326], "val_loss": [0.9047449827194214, 0.6250380873680115, 0.6095107793807983, 0.5254942178726196, 0.5045116543769836, 0.5305187702178955, 0.5035422444343567, 0.5290625095367432, 0.5264806151390076, 0.5695479512214661, 0.5642905235290527, 0.5799463987350464, 0.5618468523025513, 0.6710202693939209, 0.7364065051078796, 0.633039653301239, 0.6501625776290894], "val_accuracy": [0.7106666564941406, 0.778333306312561, 0.778333306312561, 0.8026666641235352, 0.8199999928474426, 0.8103333115577698, 0.8233333230018616, 0.8193333148956299, 0.8193333148956299, 0.8186666369438171, 0.8243333101272583, 0.8263333439826965, 0.8053333163261414, 0.8223333358764648, 0.8149999976158142, 0.8213333487510681, 0.8149999976158142]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [4, 2, 3, 0, 3, 2, 6, 4, 4, 1, 2, 8, 4, 3, 1, 1, 3, 9, 1, 7, 6, 2, 5, 1, 6, 3, 8, 9, 8, 5, 3, 6, 2, 2, 0, 0, 7, 7, 3, 6, 1, 7, 0, 7, 1, 0, 7, 4, 8, 3, 0, 1, 9, 9], [0, 2, 0, 2, 3, 0, 3, 3, 3, 3, 2, 1, 0, 3, 0, 1, 3, 2, 0, 1, 0, 3, 2, 0, 2, 1, 1, 3, 1, 2, 0, 1, 1, 0, 0], [39, 39, 91, 48, 35, 11, 17, 91, 53, 95, 56, 68, 69, 74, 58], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 8, 1, 4, 2, 8, 5], [0, 0, 0, 3, 0, 0, 3, 0, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.11428571492433548, "mapping_values": [1, 89, 54, 35, 15, 9, 5, 4, 2, 2, 1, 1, 1, 21, 12, 9, 6], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(grad, tf.math.divide_no_nan(tf.math.pow(tf.math.pow(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, grad)), tf.math.add(grad, grad)), grad), tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), grad))), tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.square(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.divide_no_nan(alpha, grad), tf.math.add(grad, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad)), tf.math.add(tf.math.add(tf.math.multiply(grad, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), grad), alpha))), tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.add(tf.math.negative(grad), alpha), tf.math.add(tf.math.subtract(tf.math.negative(grad), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.multiply(tf.math.negative(alpha), alpha)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))))), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), sigma))), tf.math.sqrt(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), grad)", "other_info": {"loss": [3.016747232998195e+16, 8.612194548501709e+16, 1.4817710842877108e+22, 9.306506234176221e+21, 1.3599462373875438e+22, 1.3972293994927211e+22, 1.423550687514888e+22], "accuracy": [0.09628847241401672, 0.10302469879388809, 0.11411966383457184, 0.11940298229455948, 0.10619468986988068, 0.10434553027153015, 0.1010434553027153], "val_loss": [4.409404552118272e+16, 1.4507039029782209e+22, 1.4507040155682115e+22, 1.450704240748193e+22, 1.450710658377662e+22, 1.450710658377662e+22, 1.4902112803493658e+22], "val_accuracy": [0.08666666597127914, 0.11266666650772095, 0.10966666787862778, 0.0949999988079071, 0.09966666996479034, 0.08666666597127914, 0.08733333647251129]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0], [6, 2, 3, 3, 3, 5, 9], [0, 3, 0, 3, 4], [16, 16, 65], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 8, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [72, 99, 16, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 12, 7, 5, 3, 2, 1, 1, 0, 17, 9, 8, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.math.multiply(grad, tf.math.square(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 5, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 2, 3, 0, 3, 5, 5, 9], [0, 2, 0, 3], [16, 16, 17], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [6, 3, 2, 6, 8, 3, 4, 1, 2, 2, 2], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [95, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3028998374938965, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 6, 4, 2, 1, 11, 8, 3, 3, 2, 1, 1, 1, 7, 3, 4, 3], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 1, 3, 1, 3], [0, 1, 0, 2, 2], [39, 80], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 7, 4, 8, 5, 3, 1, 8, 5, 5, 7], [0, 2, 1, 3, 2, 2, 3], [16, 16], [0, 1], [5], [2], [0], [0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [88, 2, 24]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 8, 5, 3, 1, 2, 1, 1, 0, 5, 2, 3, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303480863571167, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]