[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8717142939567566, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2237305641174316, 1.8657994270324707, 1.395745873451233, 1.1006120443344116, 0.952838122844696, 0.8537101149559021, 0.7835741639137268, 0.7294349670410156, 0.7033154368400574, 0.6639076471328735, 0.6467055678367615, 0.6235336661338806, 0.594573974609375, 0.5782187581062317, 0.5650668740272522, 0.5483664870262146, 0.5409673452377319, 0.5202600359916687, 0.5072178244590759, 0.4993606507778168, 0.49945515394210815, 0.48484092950820923, 0.477752685546875, 0.45881813764572144, 0.45925500988960266, 0.44305312633514404, 0.44805583357810974, 0.43299081921577454, 0.4267251789569855, 0.4176245331764221, 0.40947332978248596, 0.4034256339073181, 0.40105384588241577, 0.38962817192077637, 0.3828781843185425, 0.3877425491809845, 0.3817921280860901, 0.37361347675323486, 0.36841243505477905, 0.3590083718299866, 0.3568994402885437, 0.3488657772541046, 0.34280329942703247, 0.33297601342201233, 0.3373257517814636, 0.3314324915409088, 0.3298717737197876, 0.3173031508922577, 0.3184572160243988, 0.3065968453884125, 0.3049912452697754, 0.29885542392730713, 0.29431942105293274], "accuracy": [0.26958128809928894, 0.4830273389816284, 0.5624092221260071, 0.6152423620223999, 0.6631884574890137, 0.6863030195236206, 0.7153612375259399, 0.7376832365989685, 0.7457403540611267, 0.7598732113838196, 0.7631752490997314, 0.7740060687065125, 0.785101056098938, 0.7927618622779846, 0.7965922355651855, 0.8012151718139648, 0.8070268034934998, 0.8108572363853455, 0.8224804997444153, 0.8190463781356812, 0.8226125836372375, 0.824329674243927, 0.8329150676727295, 0.8417646288871765, 0.8383304476737976, 0.8418967127799988, 0.8438779711723328, 0.8477083444595337, 0.8461233377456665, 0.8541803956031799, 0.8552370667457581, 0.8565579056739807, 0.8597279191017151, 0.8597279191017151, 0.8631620407104492, 0.8632941246032715, 0.8651432991027832, 0.867520809173584, 0.869502067565918, 0.8716153502464294, 0.8706908226013184, 0.8776912093162537, 0.8767666220664978, 0.8805969953536987, 0.8803328275680542, 0.8817857503890991, 0.8813894987106323, 0.889578640460968, 0.882710337638855, 0.8906353116035461, 0.8889182209968567, 0.8931449055671692, 0.8980319499969482], "val_loss": [2.0395121574401855, 1.5192410945892334, 1.049967885017395, 0.8495703935623169, 0.7657831311225891, 0.7068269848823547, 0.6597808599472046, 0.6240336894989014, 0.6050156950950623, 0.5801927447319031, 0.5592573881149292, 0.5466686487197876, 0.5314476490020752, 0.51921546459198, 0.5071645379066467, 0.4982452392578125, 0.48728662729263306, 0.48579949140548706, 0.4750958979129791, 0.46894368529319763, 0.4645836055278778, 0.45554494857788086, 0.448336660861969, 0.44695377349853516, 0.43771252036094666, 0.436885267496109, 0.42978695034980774, 0.4273555874824524, 0.4215249717235565, 0.4158704876899719, 0.41336897015571594, 0.41008317470550537, 0.4088658094406128, 0.40518903732299805, 0.39918798208236694, 0.40271395444869995, 0.39228564500808716, 0.39445358514785767, 0.38928571343421936, 0.38680732250213623, 0.386118084192276, 0.3826386630535126, 0.38813158869743347, 0.38014084100723267, 0.3820304274559021, 0.37480810284614563, 0.3786781132221222, 0.37567147612571716, 0.37566304206848145, 0.3734193444252014, 0.3743036985397339, 0.3741740584373474, 0.3680371046066284], "val_accuracy": [0.5093333125114441, 0.6423333287239075, 0.6819999814033508, 0.7066666483879089, 0.7269999980926514, 0.7453333139419556, 0.7573333382606506, 0.7670000195503235, 0.7816666960716248, 0.7893333435058594, 0.7950000166893005, 0.8050000071525574, 0.8100000023841858, 0.8130000233650208, 0.8176666498184204, 0.8176666498184204, 0.8220000267028809, 0.8199999928474426, 0.824999988079071, 0.8230000138282776, 0.8306666612625122, 0.8343333601951599, 0.8356666564941406, 0.8360000252723694, 0.8353333473205566, 0.8420000076293945, 0.8410000205039978, 0.846666693687439, 0.8429999947547913, 0.8496666550636292, 0.8489999771118164, 0.8516666889190674, 0.8543333411216736, 0.8516666889190674, 0.8543333411216736, 0.8510000109672546, 0.8523333072662354, 0.8566666841506958, 0.8573333621025085, 0.8610000014305115, 0.8603333234786987, 0.8586666584014893, 0.8569999933242798, 0.8629999756813049, 0.8613333106040955, 0.8629999756813049, 0.8640000224113464, 0.8669999837875366, 0.8629999756813049, 0.8643333315849304, 0.8633333444595337, 0.8643333315849304, 0.8656666874885559]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 0, 1], [0, 8, 0, 8], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.852571427822113, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293397903442383, 2.1902313232421875, 1.7736656665802002, 1.3701173067092896, 1.0609889030456543, 0.9230331182479858, 0.8436095714569092, 0.828933835029602, 0.7802429795265198, 0.7632192969322205, 0.7140717506408691, 0.6943387389183044, 0.6736006140708923, 0.6442908644676208, 0.6340920329093933, 0.6114306449890137, 0.6070058941841125, 0.5990674495697021, 0.5711573958396912, 0.5728740692138672, 0.5439481735229492, 0.5343772172927856, 0.5219289064407349, 0.5209401845932007, 0.5062333345413208, 0.49501484632492065, 0.47792848944664, 0.4703701138496399, 0.4800012409687042, 0.45686638355255127, 0.45422738790512085, 0.43091797828674316, 0.4376058876514435, 0.42449772357940674, 0.42461052536964417, 0.4210874140262604, 0.40827518701553345, 0.3988814651966095, 0.39261239767074585, 0.38261184096336365, 0.384927898645401, 0.37934374809265137, 0.36384251713752747, 0.36414197087287903, 0.35350683331489563, 0.3470086455345154, 0.348651260137558, 0.34448546171188354, 0.34990912675857544, 0.3379516899585724, 0.3383985161781311, 0.33315491676330566, 0.3168623447418213, 0.320905476808548, 0.31532546877861023, 0.3149277865886688, 0.3144594132900238, 0.30991554260253906], "accuracy": [0.12495046854019165, 0.3292827904224396, 0.43323206901550293, 0.5381059050559998, 0.6330735683441162, 0.670320987701416, 0.687491774559021, 0.6922467350959778, 0.6971337795257568, 0.7054550051689148, 0.7298903465270996, 0.7391361594200134, 0.744419515132904, 0.7584202885627747, 0.7619865536689758, 0.7717606425285339, 0.7755910754203796, 0.7802139520645142, 0.7836481332778931, 0.7944789528846741, 0.8031964302062988, 0.7964601516723633, 0.8050455451011658, 0.8049134612083435, 0.8125742673873901, 0.8173292875289917, 0.8193105459213257, 0.822348415851593, 0.8234050869941711, 0.8267071843147278, 0.8274996876716614, 0.8354246616363525, 0.8338396549224854, 0.843481719493866, 0.8392550349235535, 0.8441421389579773, 0.8417646288871765, 0.8448025584220886, 0.8477083444595337, 0.8502179384231567, 0.8598600029945374, 0.8578787446022034, 0.8643507957458496, 0.8654074668884277, 0.8642187118530273, 0.8668603897094727, 0.8665962219238281, 0.8698983192443848, 0.8646149635314941, 0.868049144744873, 0.8659358024597168, 0.8687095642089844, 0.8784837126731873, 0.8817857503890991, 0.8833707571029663, 0.8732003569602966, 0.8784837126731873, 0.8742570281028748], "val_loss": [2.2472386360168457, 2.0230770111083984, 1.1724963188171387, 0.9124109745025635, 0.7961245179176331, 0.7159491181373596, 0.7041507959365845, 0.6898184418678284, 0.6687086820602417, 0.6235426664352417, 0.6002417802810669, 0.5719519257545471, 0.5587084293365479, 0.5520042181015015, 0.5358718633651733, 0.5201947093009949, 0.516653835773468, 0.504731297492981, 0.5011721849441528, 0.5034615993499756, 0.49179625511169434, 0.4828808605670929, 0.4790913164615631, 0.4754965007305145, 0.4579106569290161, 0.4496561586856842, 0.45067015290260315, 0.4356602430343628, 0.43115314841270447, 0.43712344765663147, 0.4380893409252167, 0.4300302267074585, 0.4299027621746063, 0.43779706954956055, 0.4135884642601013, 0.41661158204078674, 0.4325466454029083, 0.41830676794052124, 0.4309099018573761, 0.4223930537700653, 0.40839314460754395, 0.40496426820755005, 0.4031718671321869, 0.41231071949005127, 0.4186124801635742, 0.41987818479537964, 0.38675495982170105, 0.3831230103969574, 0.38814693689346313, 0.3879680931568146, 0.407113641500473, 0.4113732576370239, 0.43573620915412903, 0.45534569025039673, 0.4248502552509308, 0.41125887632369995, 0.4310002326965332, 0.45636555552482605], "val_accuracy": [0.4126666784286499, 0.4313333332538605, 0.6330000162124634, 0.6846666932106018, 0.7096666693687439, 0.7393333315849304, 0.7379999756813049, 0.7400000095367432, 0.7419999837875366, 0.7556666731834412, 0.7603333592414856, 0.777999997138977, 0.7873333096504211, 0.7836666703224182, 0.7923333048820496, 0.8013333082199097, 0.8056666851043701, 0.8100000023841858, 0.8119999766349792, 0.8106666803359985, 0.8069999814033508, 0.8153333067893982, 0.8199999928474426, 0.8293333053588867, 0.8366666436195374, 0.8386666774749756, 0.8339999914169312, 0.8489999771118164, 0.8519999980926514, 0.8456666469573975, 0.8433333039283752, 0.8476666808128357, 0.8529999852180481, 0.8529999852180481, 0.8573333621025085, 0.8539999723434448, 0.8510000109672546, 0.8550000190734863, 0.8513333201408386, 0.859000027179718, 0.8579999804496765, 0.859666645526886, 0.8603333234786987, 0.8603333234786987, 0.8636666536331177, 0.8640000224113464, 0.8690000176429749, 0.8703333139419556, 0.8706666827201843, 0.871666669845581, 0.8676666617393494, 0.8723333477973938, 0.8736666440963745, 0.8709999918937683, 0.871999979019165, 0.8723333477973938, 0.8666666746139526, 0.8613333106040955]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 5, 4, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8274285793304443, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.547780156135559, 0.782315194606781, 0.6477823853492737, 0.5783690214157104, 0.5557754635810852, 0.5594066381454468, 0.558617115020752, 0.5327453017234802, 0.5323305726051331, 0.4714442789554596, 0.5014379620552063, 0.5193634629249573, 0.4958960711956024, 0.5123628973960876, 0.5120621919631958, 0.4602185785770416, 0.5033570528030396, 0.5071614384651184, 0.5193951725959778, 0.4966728687286377, 0.47815418243408203, 0.4806513488292694, 0.507215142250061, 0.4703149199485779, 0.4664076864719391, 0.4841049611568451, 0.4563581645488739, 0.4748496115207672], "accuracy": [0.4714040458202362, 0.7195879220962524, 0.7658169269561768, 0.7841764688491821, 0.7909126877784729, 0.7973847389221191, 0.8053097128868103, 0.8127063512802124, 0.8103289008140564, 0.8265751004219055, 0.8245938420295715, 0.8203672170639038, 0.8171972036361694, 0.821820080280304, 0.826310932636261, 0.8327829837799072, 0.8338396549224854, 0.8193105459213257, 0.8325188159942627, 0.8257825970649719, 0.8319904804229736, 0.8285563588142395, 0.830669641494751, 0.8469158411026001, 0.8378021121025085, 0.8347642421722412, 0.8418967127799988, 0.8399154543876648], "val_loss": [0.7767094969749451, 0.5749980807304382, 0.48019272089004517, 0.4962718188762665, 0.4865761697292328, 0.5048115253448486, 0.4994092583656311, 0.4942661225795746, 0.46238887310028076, 0.5045632123947144, 0.5005515813827515, 0.531997561454773, 0.5128938555717468, 0.4868836998939514, 0.4968174993991852, 0.543190062046051, 0.4837028682231903, 0.544583797454834, 0.5817568898200989, 0.5211604237556458, 0.5360651612281799, 0.5193060040473938, 0.5535012483596802, 0.48694536089897156, 0.5434771180152893, 0.5542871952056885, 0.5596473217010498, 0.5582693815231323], "val_accuracy": [0.7229999899864197, 0.7896666526794434, 0.8216666579246521, 0.8059999942779541, 0.8263333439826965, 0.8286666870117188, 0.8320000171661377, 0.8349999785423279, 0.8410000205039978, 0.8420000076293945, 0.8343333601951599, 0.8410000205039978, 0.8220000267028809, 0.8450000286102295, 0.8303333520889282, 0.8363333344459534, 0.8489999771118164, 0.8456666469573975, 0.8446666598320007, 0.8500000238418579, 0.8543333411216736, 0.8460000157356262, 0.859666645526886, 0.8550000190734863, 0.8546666502952576, 0.8576666712760925, 0.8473333120346069, 0.8560000061988831]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 2, 3, 9, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 1], [16, 16], [1, 1], [2], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 6, 6, 3, 1, 4, 1, 2, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 7], [16, 99, 96, 99, 78, 1]], "fitness": -0.17800000309944153, "mapping_values": [1, 6, 4, 2, 2, 6, 3, 3, 2, 1, 0, 1, 1, 22, 11, 11, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)", "other_info": {"loss": [4.164587121278976e+16, 4.873946496866714e+16, 4.839747390275584e+16, 4.883422912708608e+16, 6.575567442385306e+16, 2.5183764078395392e+17, 3.5887538801901725e+20, 1.4311447697965508e+22, 5.3616665012057245e+23, 1.1270644267375672e+26, 4.749283971822002e+28, 1.1413355507524998e+32, 8.943052929115612e+32, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.08968432247638702, 0.08981640636920929, 0.09166556596755981, 0.09219389408826828, 0.10487385839223862, 0.09259014576673508, 0.07911768555641174, 0.07211729139089584, 0.08902391046285629, 0.10460969805717468, 0.11940298229455948, 0.09285431355237961, 0.0866464152932167, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.716146821431296e+16, 4.717321494986752e+16, 4.71736659214336e+16, 4.722192417397146e+16, 7.528350961421517e+16, 7.299683123011256e+17, 6.753132863805781e+20, 6.889451786124203e+22, 2.176734679787365e+24, 9.879834104596589e+26, 1.1335135936710466e+29, 2.5223283625572726e+32, 2.8904018248453916e+34, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.0963333323597908, 0.1106666699051857, 0.0949999988079071, 0.046666666865348816, 0.09433333575725555, 0.08299999684095383, 0.16833333671092987, 0.11366666853427887, 0.06700000166893005, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 3, 3, 5], [0, 1, 1, 2, 1], [98, 39], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 1], [38, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 1, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 0, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 1, 0, 1, 1, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(alpha, grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [1, 4, 3, 0, 3, 9], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], [6, 2, 6, 0, 3, 5, 2, 8, 5], [0, 2, 1, 3, 4, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [9, 3, 3, 6, 8, 1, 4, 1, 4, 2, 2], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 64, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 15, 9, 6, 1, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.pow(tf.math.multiply(tf.math.negative(tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(alpha, tf.math.square(grad))), tf.math.add(tf.math.sqrt(grad), tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3033716678619385, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [17, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5], [0, 2, 0, 3, 3], [16, 16], [0, 1], [0], [0], [88], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 9, 6, 8, 1, 6, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 29, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 11, 6, 5, 2, 2, 1, 1, 1, 16, 9, 7, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))))", "other_info": {"loss": [4.250410556793213, 5.5693135261535645, 3.1603028774261475, 2.6090056896209717, 2.458726167678833, 2.4020493030548096], "accuracy": [0.10117553919553757, 0.09972262382507324, 0.09589222073554993, 0.09906221181154251, 0.09800554811954498, 0.09642054885625839], "val_loss": [4.623162269592285, 2.672564744949341, 2.3947551250457764, 2.3431222438812256, 2.3250348567962646, 2.3168039321899414], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.09266666322946548, 0.08699999749660492, 0.08633333444595337, 0.08666666597127914]}}]