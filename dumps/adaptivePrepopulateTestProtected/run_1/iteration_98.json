[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8562856912612915, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220797300338745, 1.8595433235168457, 1.395904541015625, 1.0908664464950562, 0.9332759380340576, 0.8291707038879395, 0.774558424949646, 0.7289557456970215, 0.6885672807693481, 0.6661781072616577, 0.6314769387245178, 0.6134825944900513, 0.6026482582092285, 0.5741823315620422, 0.5596636533737183, 0.5506191253662109, 0.5389970541000366, 0.5258118510246277, 0.5160273313522339, 0.4949303865432739, 0.49998876452445984, 0.48484110832214355, 0.47374147176742554, 0.4712746739387512, 0.456535279750824, 0.45118698477745056, 0.45423072576522827, 0.440022349357605, 0.4215855598449707, 0.4158591628074646, 0.4202048182487488, 0.4092450439929962, 0.4119771122932434, 0.40382492542266846, 0.39252933859825134, 0.38457635045051575, 0.37729084491729736, 0.37232983112335205, 0.3795475661754608, 0.37059342861175537, 0.3642883002758026, 0.3583415746688843, 0.34760960936546326, 0.3500957787036896, 0.3381081521511078, 0.33189937472343445, 0.34045153856277466, 0.33105963468551636, 0.3259979486465454, 0.3162911832332611, 0.3207838237285614, 0.3090522289276123, 0.30542153120040894, 0.30212831497192383, 0.31069207191467285, 0.2945011854171753, 0.2988484501838684, 0.2910650372505188, 0.29203614592552185, 0.2775893211364746, 0.2746720016002655, 0.27571889758110046, 0.2721215486526489, 0.270402193069458], "accuracy": [0.28120461106300354, 0.48566898703575134, 0.5601637959480286, 0.6215823292732239, 0.6695284843444824, 0.7024171352386475, 0.7210407853126526, 0.739400327205658, 0.7524765729904175, 0.7561748623847961, 0.7713643908500671, 0.7804781198501587, 0.7868181467056274, 0.7907806038856506, 0.800818920135498, 0.8029322624206543, 0.8064984679222107, 0.81548011302948, 0.8129705190658569, 0.8210275769233704, 0.8247259259223938, 0.83119797706604, 0.8313300609588623, 0.8280280232429504, 0.8335754871368408, 0.8425571322441101, 0.8335754871368408, 0.8446704745292664, 0.8499537706375122, 0.8504821062088013, 0.8520671129226685, 0.8564258217811584, 0.852859616279602, 0.8548408150672913, 0.8609166741371155, 0.8581429123878479, 0.8647470474243164, 0.8679170608520508, 0.8654074668884277, 0.8647470474243164, 0.8683133125305176, 0.8708229064941406, 0.8770307898521423, 0.8739928603172302, 0.8791441321372986, 0.8795403242111206, 0.8798044919967651, 0.878879964351654, 0.883238673210144, 0.887201189994812, 0.8841632604598999, 0.8873332738876343, 0.8891823887825012, 0.8883898854255676, 0.8914278149604797, 0.8948619961738586, 0.8930128216743469, 0.8975036144256592, 0.8910315632820129, 0.8980319499969482, 0.9002773761749268, 0.9010698795318604, 0.8977677822113037, 0.9000132083892822], "val_loss": [2.034851551055908, 1.506833553314209, 1.0398368835449219, 0.8287916779518127, 0.7346926927566528, 0.6783370971679688, 0.6338021755218506, 0.6031993627548218, 0.5738392472267151, 0.5564728379249573, 0.5363606214523315, 0.5225340723991394, 0.5095186233520508, 0.4989370107650757, 0.4851647913455963, 0.4769458770751953, 0.47183549404144287, 0.45897847414016724, 0.4567265212535858, 0.4484105706214905, 0.4444153308868408, 0.43332767486572266, 0.43029648065567017, 0.42322298884391785, 0.4168151915073395, 0.4173397719860077, 0.4159773290157318, 0.4057677090167999, 0.3990888297557831, 0.40246111154556274, 0.39743930101394653, 0.39560383558273315, 0.38907739520072937, 0.3858042061328888, 0.3813539743423462, 0.3807432949542999, 0.3812490701675415, 0.37810131907463074, 0.37526726722717285, 0.37260863184928894, 0.37078481912612915, 0.36783725023269653, 0.36537325382232666, 0.3634340763092041, 0.3675616979598999, 0.359712153673172, 0.35529857873916626, 0.3610441982746124, 0.3553520441055298, 0.3521267771720886, 0.35383501648902893, 0.350062757730484, 0.35070207715034485, 0.3547023832798004, 0.35077932476997375, 0.3563694655895233, 0.35212576389312744, 0.3409487009048462, 0.34341663122177124, 0.3390881419181824, 0.34094205498695374, 0.3465854823589325, 0.34086546301841736, 0.33892449736595154], "val_accuracy": [0.5379999876022339, 0.6399999856948853, 0.6823333501815796, 0.7166666388511658, 0.7409999966621399, 0.7580000162124634, 0.768666684627533, 0.7829999923706055, 0.7913333177566528, 0.7986666560173035, 0.8059999942779541, 0.8159999847412109, 0.8176666498184204, 0.8190000057220459, 0.82833331823349, 0.8296666741371155, 0.8316666483879089, 0.8349999785423279, 0.8339999914169312, 0.8389999866485596, 0.8389999866485596, 0.843666672706604, 0.8416666388511658, 0.8483333587646484, 0.8510000109672546, 0.8489999771118164, 0.8450000286102295, 0.8529999852180481, 0.8546666502952576, 0.8500000238418579, 0.8579999804496765, 0.8556666374206543, 0.8613333106040955, 0.862333357334137, 0.8640000224113464, 0.8613333106040955, 0.8646666407585144, 0.862666666507721, 0.8629999756813049, 0.8663333058357239, 0.8679999709129333, 0.8669999837875366, 0.8686666488647461, 0.8686666488647461, 0.8676666617393494, 0.8713333606719971, 0.8700000047683716, 0.8693333268165588, 0.871666669845581, 0.8713333606719971, 0.8703333139419556, 0.8706666827201843, 0.8736666440963745, 0.8723333477973938, 0.871666669845581, 0.871666669845581, 0.8730000257492065, 0.8740000128746033, 0.8790000081062317, 0.8769999742507935, 0.8740000128746033, 0.8730000257492065, 0.8766666650772095, 0.875333309173584]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.826285719871521, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5383005142211914, 0.9498438239097595, 0.7502390742301941, 0.6841121912002563, 0.6124262809753418, 0.5603313446044922, 0.5466932058334351, 0.5217995047569275, 0.5100114941596985, 0.505775511264801, 0.5164738297462463, 0.4859375059604645, 0.48047205805778503, 0.4935641288757324, 0.5465520024299622, 0.5055416822433472, 0.4874698519706726, 0.5154678821563721, 0.4976065456867218, 0.4855719804763794, 0.49308568239212036, 0.5534952282905579, 0.6210192441940308, 0.6358785629272461], "accuracy": [0.47391360998153687, 0.6756042838096619, 0.7276449799537659, 0.7519482374191284, 0.7640998363494873, 0.7968564033508301, 0.7980451583862305, 0.813498854637146, 0.8138951063156128, 0.8212917447090149, 0.8222163319587708, 0.8193105459213257, 0.830669641494751, 0.8249900937080383, 0.8162726163864136, 0.8131026029586792, 0.8226125836372375, 0.8338396549224854, 0.8348963260650635, 0.8296129703521729, 0.8396512866020203, 0.8348963260650635, 0.8149517774581909, 0.8072909712791443], "val_loss": [1.0151828527450562, 0.6648603677749634, 0.5851789116859436, 0.5354524254798889, 0.49676984548568726, 0.4852270781993866, 0.5016469955444336, 0.4881308674812317, 0.4820030629634857, 0.512594997882843, 0.5096290707588196, 0.47169262170791626, 0.49298664927482605, 0.5185096263885498, 0.5180285573005676, 0.5167303085327148, 0.5563452839851379, 0.5438891053199768, 0.5114548206329346, 0.5160467624664307, 0.5255891680717468, 0.676145613193512, 0.6169917583465576, 0.5795542001724243], "val_accuracy": [0.6473333239555359, 0.7603333592414856, 0.7856666445732117, 0.8033333420753479, 0.8306666612625122, 0.8296666741371155, 0.8399999737739563, 0.8376666903495789, 0.8370000123977661, 0.8503333330154419, 0.8489999771118164, 0.8399999737739563, 0.8519999980926514, 0.8510000109672546, 0.846666693687439, 0.8349999785423279, 0.8523333072662354, 0.847000002861023, 0.8526666760444641, 0.8503333330154419, 0.8506666421890259, 0.8349999785423279, 0.8270000219345093, 0.8296666741371155]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 1, 4, 1, 3, 5, 1, 6, 9, 2, 1, 3, 1, 9, 0], [0, 6, 6, 5, 0, 5, 7, 4, 3], [0, 82, 9, 31], [0, 1], [0], [1], [0]], "fitness": -0.8019999861717224, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), tf.math.multiply(tf.math.square(grad), tf.math.subtract(tf.math.divide_no_nan(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(grad, tf.math.subtract(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.negative(grad))), grad))), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2935597896575928, 2.1898281574249268, 1.764032006263733, 1.3486303091049194, 1.1075336933135986, 0.9469553232192993, 0.8449921607971191, 0.8488180637359619, 0.775480329990387, 0.7604635953903198, 0.7046846747398376, 0.6931579113006592, 0.6488461494445801, 0.6271415948867798, 0.5970955491065979, 0.6134594082832336, 0.5774168372154236, 0.5884471535682678, 0.5648959279060364, 0.5562812685966492, 0.5397762656211853, 0.5307243466377258, 0.5283060073852539, 0.5087282657623291, 0.5049518942832947, 0.48944830894470215, 0.4750378727912903, 0.4612647294998169, 0.4681434631347656, 0.4625043272972107, 0.4507262706756592, 0.44243595004081726, 0.42327380180358887, 0.4262411594390869, 0.41333720088005066, 0.41330546140670776, 0.3956308364868164, 0.3952941596508026, 0.38813337683677673], "accuracy": [0.13036586344242096, 0.3214899003505707, 0.4476291239261627, 0.5448421835899353, 0.6275261044502258, 0.6586976647377014, 0.6885483860969543, 0.6925109028816223, 0.7025492191314697, 0.7230220437049866, 0.7306828498840332, 0.7467969655990601, 0.7548540234565735, 0.7582882046699524, 0.7713643908500671, 0.7746664881706238, 0.7781006693840027, 0.7730814814567566, 0.7887993454933167, 0.7853652238845825, 0.7976489067077637, 0.7976489067077637, 0.7961959838867188, 0.8078193068504333, 0.8061022162437439, 0.8115176558494568, 0.8128384351730347, 0.8238013386726379, 0.8248580098152161, 0.8236692547798157, 0.821820080280304, 0.8305375576019287, 0.8378021121025085, 0.8403117060661316, 0.8396512866020203, 0.8454629778862, 0.8486329317092896, 0.8512746095657349, 0.8499537706375122], "val_loss": [2.246372699737549, 2.0213987827301025, 1.1489982604980469, 0.9166534543037415, 0.7801205515861511, 0.7453441023826599, 0.7142051458358765, 0.6711869835853577, 0.6742444038391113, 0.6465179324150085, 0.5863019824028015, 0.5872842669487, 0.5605012774467468, 0.5594339966773987, 0.5366395115852356, 0.5341750383377075, 0.5427387952804565, 0.5304682850837708, 0.515508770942688, 0.517377495765686, 0.5079393982887268, 0.5087652206420898, 0.49295902252197266, 0.4865919053554535, 0.4793148934841156, 0.47175341844558716, 0.46433955430984497, 0.4710765779018402, 0.47165849804878235, 0.45739445090293884, 0.45445483922958374, 0.45030903816223145, 0.44774240255355835, 0.4448084235191345, 0.4413650333881378, 0.4369977116584778, 0.44586169719696045, 0.4346897006034851, 0.4296102225780487], "val_accuracy": [0.4243333339691162, 0.4763333201408386, 0.6393333077430725, 0.6793333292007446, 0.7149999737739563, 0.7333333492279053, 0.7390000224113464, 0.7293333411216736, 0.7526666522026062, 0.7506666779518127, 0.7683333158493042, 0.7760000228881836, 0.7876666784286499, 0.7879999876022339, 0.7893333435058594, 0.7896666526794434, 0.7926666736602783, 0.7910000085830688, 0.8033333420753479, 0.8086666464805603, 0.8119999766349792, 0.8173333406448364, 0.8233333230018616, 0.8226666450500488, 0.8259999752044678, 0.8263333439826965, 0.8326666951179504, 0.8366666436195374, 0.8373333215713501, 0.8356666564941406, 0.8393333554267883, 0.8486666679382324, 0.8496666550636292, 0.8583333492279053, 0.8533333539962769, 0.8463333249092102, 0.8523333072662354, 0.8473333120346069, 0.8526666760444641]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 24, 15, 9, 4, 2, 1, 1, 0], "tree_depth": 23}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 1, 3, 1, 3, 5, 7, 0], [0, 1, 0, 2, 1, 0, 3], [39, 39, 92], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 4, 8, 7, 4, 5, 2, 2, 6, 4, 0], [0, 2, 0, 0, 3, 0, 3, 3], [0, 4, 72, 72], [0, 0, 1, 0, 1, 1], [0, 2, 2], [0, 1, 5, 7], [0], [0, 1], [0], [2, 0, 0, 3, 0, 0, 3, 1, 2, 0], [49]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 3, 19, 11, 8, 4, 6, 3, 3, 1, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), alpha), tf.math.add(tf.math.negative(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.sqrt(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), tf.math.pow(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad))), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [47498723328.0, 6870933700608.0, 119830191538176.0, 847387987804160.0, 3705489745510400.0, 1.2185645778731008e+16], "accuracy": [0.10117553919553757, 0.10038304328918457, 0.10130762308835983, 0.09906221181154251, 0.10117553919553757, 0.09721305221319199], "val_loss": [481312768000.0, 25943607345152.0, 278445246382080.0, 1517993645309952.0, 5686179680747520.0, 1.6778548513603584e+16], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 1, 4, 0], [2, 1, 0, 2, 0, 3], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 36], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 3, 6, 8, 1, 9, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 24, 99, 51, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.math.multiply(tf.math.subtract(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30366587638855, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}, "mapping_values": [1, 14, 8, 6, 2, 2, 1, 1, 1, 2, 1, 1, 1, 12, 7, 5, 5], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 0, 2, 2, 2, 0, 1], [0, 0, 1, 0, 2, 0, 1], [39, 99, 20, 43], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 2, 6, 5, 5, 9, 7, 5], [0, 3, 0, 3], [0, 39], [1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 3, 6, 5, 1], [0, 1, 6, 7], [68], [0, 1], [0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 16, 9, 7, 4, 10, 6, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(tf.math.subtract(grad, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3107049465179443, 2.310229778289795, 2.3102474212646484, 2.308828353881836, 2.3093292713165283, 2.3097786903381348], "accuracy": [0.09377889335155487, 0.09694888442754745, 0.08677849918603897, 0.09325055778026581, 0.09615638852119446, 0.09391097724437714], "val_loss": [2.3085243701934814, 2.3085243701934814, 2.3085243701934814, 2.3085243701934814, 2.3085243701934814, 2.3085243701934814], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 5, 3, 5, 3, 5, 9], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [6, 3, 3, 6, 6, 1, 4, 1, 4, 6, 8, 2], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 7, 5], [16, 99, 96, 99, 61, 1]], "fitness": -0.0908571407198906, "mapping_values": [1, 7, 4, 3, 2, 9, 7, 2, 2, 2, 1, 1, 1, 24, 12, 12, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.divide_no_nan(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(grad, grad))", "other_info": {"loss": [2.309793472290039, 2.3088488578796387, 2.3097076416015625, 2.309704303741455, 2.3087916374206543, 2.3094749450683594], "accuracy": [0.09008057415485382, 0.0952318087220192, 0.09496764093637466, 0.09100515395402908, 0.09126931428909302, 0.09470347315073013], "val_loss": [2.309478282928467, 2.309478282928467, 2.309478282928467, 2.309478282928467, 2.309478282928467, 2.309478282928467], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]