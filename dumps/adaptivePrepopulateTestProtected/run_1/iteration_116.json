[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8645714521408081, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2228634357452393, 1.8629817962646484, 1.387163519859314, 1.0893757343292236, 0.9386212229728699, 0.8438647389411926, 0.777125895023346, 0.7235258221626282, 0.6914145946502686, 0.6576005220413208, 0.6382309794425964, 0.610675036907196, 0.5944272875785828, 0.5804407596588135, 0.5654545426368713, 0.5576170086860657, 0.5398645401000977, 0.5226581692695618, 0.5133692622184753, 0.4985368549823761, 0.489061564207077, 0.48008859157562256, 0.4722599387168884, 0.46432092785835266, 0.4496818780899048, 0.44062042236328125, 0.44801414012908936, 0.43533003330230713, 0.43062958121299744, 0.42097654938697815, 0.4112381041049957, 0.40025803446769714, 0.4003587067127228, 0.39296379685401917, 0.38959363102912903, 0.38794705271720886, 0.37754368782043457, 0.3680819571018219, 0.3652295172214508, 0.362198144197464, 0.36206382513046265, 0.35768210887908936, 0.3498307764530182, 0.3458772301673889, 0.3310950696468353, 0.3267768323421478, 0.32658877968788147, 0.32035231590270996], "accuracy": [0.2673358917236328, 0.5021793842315674, 0.573107898235321, 0.6211860775947571, 0.6659622192382812, 0.6903975605964661, 0.7104741930961609, 0.735569953918457, 0.7489103078842163, 0.7618544697761536, 0.7707040309906006, 0.7733456492424011, 0.7820631265640259, 0.7819310426712036, 0.7938185334205627, 0.7996301651000977, 0.8057059645652771, 0.8101968169212341, 0.8158763647079468, 0.8187822103500366, 0.8212917447090149, 0.8289526104927063, 0.8301413059234619, 0.83119797706604, 0.8381983637809753, 0.8391229510307312, 0.8385946154594421, 0.8405758738517761, 0.8450667262077332, 0.8450667262077332, 0.8516708612442017, 0.8558974862098694, 0.8568220734596252, 0.8561616539955139, 0.8588033318519592, 0.8595958352088928, 0.8668603897094727, 0.8677849769592285, 0.8688416481018066, 0.868049144744873, 0.8691058158874512, 0.8683133125305176, 0.8780874609947205, 0.8722757697105408, 0.8835028409957886, 0.8800686597824097, 0.8813894987106323, 0.887597382068634], "val_loss": [2.0396780967712402, 1.5096416473388672, 1.0434632301330566, 0.8480017781257629, 0.7659148573875427, 0.7131403684616089, 0.6732116937637329, 0.6347641348838806, 0.6102142930030823, 0.5919292569160461, 0.575869083404541, 0.5607928037643433, 0.5442318320274353, 0.5343610048294067, 0.5246521234512329, 0.5250502228736877, 0.4991641342639923, 0.48802366852760315, 0.4823717474937439, 0.4791038930416107, 0.46536532044410706, 0.46294766664505005, 0.4577482044696808, 0.4494223892688751, 0.4497379958629608, 0.44132497906684875, 0.435669869184494, 0.4321895241737366, 0.4260237514972687, 0.42540642619132996, 0.41913720965385437, 0.41458794474601746, 0.41480517387390137, 0.4087648093700409, 0.4102734923362732, 0.4042340815067291, 0.39977946877479553, 0.4010464549064636, 0.39496102929115295, 0.3978933095932007, 0.39538484811782837, 0.38712069392204285, 0.38667717576026917, 0.38680213689804077, 0.3803342580795288, 0.38233843445777893, 0.3794094920158386, 0.37863627076148987], "val_accuracy": [0.5333333611488342, 0.653333306312561, 0.6723333597183228, 0.699999988079071, 0.721666693687439, 0.7429999709129333, 0.750333309173584, 0.7633333206176758, 0.7673333287239075, 0.778333306312561, 0.778333306312561, 0.7870000004768372, 0.7943333387374878, 0.7983333468437195, 0.8003333210945129, 0.8076666593551636, 0.8180000185966492, 0.8256666660308838, 0.8236666917800903, 0.8253333568572998, 0.8306666612625122, 0.831333339214325, 0.8333333134651184, 0.8356666564941406, 0.8373333215713501, 0.8360000252723694, 0.8506666421890259, 0.8429999947547913, 0.843999981880188, 0.8443333506584167, 0.8473333120346069, 0.8546666502952576, 0.846666693687439, 0.8523333072662354, 0.8506666421890259, 0.8553333282470703, 0.8546666502952576, 0.8576666712760925, 0.8543333411216736, 0.8550000190734863, 0.8576666712760925, 0.859666645526886, 0.8653333187103271, 0.859666645526886, 0.8640000224113464, 0.859333336353302, 0.8636666536331177, 0.8640000224113464]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8425714373588562, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2962851524353027, 2.195347785949707, 1.78999924659729, 1.3465696573257446, 1.0795832872390747, 0.9156028032302856, 0.8563862442970276, 0.8305346965789795, 0.786364734172821, 0.7576854825019836, 0.7140384316444397, 0.6886799931526184, 0.6747697591781616, 0.62436842918396, 0.6082348823547363, 0.5829467177391052, 0.5629235506057739, 0.5622769594192505, 0.5478112697601318, 0.5389992594718933, 0.5257751941680908, 0.5150747299194336, 0.5002068281173706, 0.48908939957618713, 0.4969549775123596, 0.4631636142730713, 0.47434040904045105, 0.46613165736198425, 0.45403188467025757, 0.45366984605789185, 0.44518038630485535, 0.42793217301368713, 0.41847100853919983, 0.40688058733940125, 0.4012187123298645, 0.39981746673583984, 0.3925376236438751, 0.386582612991333, 0.3729318082332611, 0.36610591411590576, 0.3799375891685486, 0.35880550742149353, 0.3563421964645386, 0.35428133606910706, 0.3531257212162018, 0.3402112126350403, 0.3468780517578125, 0.33316871523857117, 0.33036932349205017, 0.330579549074173, 0.3095592260360718, 0.316586971282959, 0.31680306792259216, 0.3192041516304016, 0.3019079864025116], "accuracy": [0.11953506618738174, 0.32201823592185974, 0.44023245573043823, 0.54655921459198, 0.637828528881073, 0.6691322326660156, 0.6897371411323547, 0.7016246318817139, 0.707040011882782, 0.7157574892044067, 0.7238145470619202, 0.7327961921691895, 0.7528728246688843, 0.7633073329925537, 0.7700436115264893, 0.7779685854911804, 0.7858935594558716, 0.7885351777076721, 0.7897239327430725, 0.7935543656349182, 0.8017435073852539, 0.8031964302062988, 0.8075551390647888, 0.8161405324935913, 0.8095363974571228, 0.8178576231002808, 0.8158763647079468, 0.8215559124946594, 0.8325188159942627, 0.832650899887085, 0.8238013386726379, 0.839519202709198, 0.8397833704948425, 0.8412362933158875, 0.847840428352356, 0.8514066934585571, 0.8533879518508911, 0.8515387773513794, 0.8568220734596252, 0.8589354157447815, 0.8595958352088928, 0.8613129258155823, 0.8588033318519592, 0.863558292388916, 0.8673887252807617, 0.8668603897094727, 0.8702945709228516, 0.8737286925315857, 0.874389111995697, 0.8767666220664978, 0.8779553771018982, 0.8791441321372986, 0.8753136992454529, 0.8739928603172302, 0.8802007436752319], "val_loss": [2.2468109130859375, 2.0328617095947266, 1.1628913879394531, 0.8884927034378052, 0.7429521679878235, 0.7137042880058289, 0.681652843952179, 0.6684412956237793, 0.6400985717773438, 0.6350328326225281, 0.5795698761940002, 0.5716476440429688, 0.5416259169578552, 0.538072943687439, 0.5210710763931274, 0.5206061005592346, 0.5147917866706848, 0.49849405884742737, 0.49194255471229553, 0.5051834583282471, 0.4882066249847412, 0.4761670231819153, 0.47011035680770874, 0.4630139172077179, 0.45555904507637024, 0.46380993723869324, 0.44750550389289856, 0.4416574239730835, 0.4400123655796051, 0.42831218242645264, 0.4193069636821747, 0.43260514736175537, 0.4248884320259094, 0.4147416651248932, 0.42492175102233887, 0.421995609998703, 0.401410311460495, 0.40054574608802795, 0.3915494680404663, 0.4070829749107361, 0.38562843203544617, 0.38733983039855957, 0.39627620577812195, 0.39774754643440247, 0.39284321665763855, 0.3964303731918335, 0.41954901814460754, 0.3892917335033417, 0.3846927881240845, 0.38276273012161255, 0.40298160910606384, 0.4320140779018402, 0.4220304489135742, 0.40370598435401917, 0.41885173320770264], "val_accuracy": [0.3973333239555359, 0.45399999618530273, 0.6486666798591614, 0.6963333487510681, 0.7366666793823242, 0.7353333234786987, 0.7350000143051147, 0.7436666488647461, 0.7490000128746033, 0.7606666684150696, 0.768666684627533, 0.781333327293396, 0.781000018119812, 0.7910000085830688, 0.7929999828338623, 0.7983333468437195, 0.7990000247955322, 0.8109999895095825, 0.8119999766349792, 0.8066666722297668, 0.8193333148956299, 0.8230000138282776, 0.8193333148956299, 0.8143333196640015, 0.8230000138282776, 0.8243333101272583, 0.8346666693687439, 0.8423333168029785, 0.8433333039283752, 0.8403333425521851, 0.847000002861023, 0.8496666550636292, 0.8473333120346069, 0.846666693687439, 0.8496666550636292, 0.8566666841506958, 0.8556666374206543, 0.8583333492279053, 0.8629999756813049, 0.8650000095367432, 0.8696666955947876, 0.8646666407585144, 0.8659999966621399, 0.8666666746139526, 0.8700000047683716, 0.8673333525657654, 0.862333357334137, 0.871666669845581, 0.8726666569709778, 0.8769999742507935, 0.8696666955947876, 0.8676666617393494, 0.8696666955947876, 0.8679999709129333, 0.8679999709129333]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 2, 6, 4, 4, 4, 7, 9], [0, 7, 7, 1, 2, 1], [0, 15], [1], [0], [2], [0]], "fitness": -0.8311428427696228, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(grad, grad), alpha)), tf.math.pow(beta, tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5959309339523315, 0.8336384296417236, 0.6621717810630798, 0.5944742560386658, 0.5493791699409485, 0.5521923303604126, 0.5415974855422974, 0.5436086058616638, 0.5152525901794434, 0.47520148754119873, 0.4509928524494171, 0.46322837471961975, 0.49787023663520813, 0.5342671871185303, 0.5524698495864868, 0.524888277053833], "accuracy": [0.474970281124115, 0.7069079279899597, 0.7635715007781982, 0.7769119143486023, 0.8005547523498535, 0.8001585006713867, 0.8146876096725464, 0.8070268034934998, 0.8260467648506165, 0.821820080280304, 0.8325188159942627, 0.8354246616363525, 0.8393871188163757, 0.824329674243927, 0.8050455451011658, 0.8210275769233704], "val_loss": [0.7977796196937561, 0.6054845452308655, 0.5348698496818542, 0.495544970035553, 0.5096821188926697, 0.533781111240387, 0.5183088183403015, 0.5251690149307251, 0.4934108853340149, 0.5143372416496277, 0.44846805930137634, 0.5304492712020874, 0.5320222973823547, 0.49403223395347595, 0.47459524869918823, 0.5654332637786865], "val_accuracy": [0.7206666469573975, 0.7770000100135803, 0.7940000295639038, 0.8090000152587891, 0.8230000138282776, 0.8113333582878113, 0.8159999847412109, 0.8306666612625122, 0.8293333053588867, 0.8266666531562805, 0.8389999866485596, 0.8363333344459534, 0.8383333086967468, 0.8309999704360962, 0.831333339214325, 0.8389999866485596]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 14, 8, 6, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 0, 2], [83, 92, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 32], [0, 1], [0], [0], [95], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 93, 33, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 9, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [36], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 9, 4, 2, 8], [0, 4, 2, 3, 4, 0, 3, 1, 2, 0], [16, 99, 99, 1, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 14, 8, 6, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(beta, sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), grad), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [1, 2, 7, 0, 3, 5, 6, 4, 3, 4, 8, 6, 8], [0, 2, 1, 1, 2, 2, 2, 0, 2, 3], [39, 39, 20], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 2, 0, 3, 3, 2, 3], [16, 16], [0, 1], [0], [2], [51], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 3, 4, 3, 0, 5, 8, 7, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 35, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 13, 10, 2, 2, 1, 1, 1, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(grad), alpha)), tf.math.divide_no_nan(tf.math.pow(alpha, tf.math.multiply(grad, grad)), tf.math.pow(tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303469181060791, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [9, 1, 3, 1, 3], [2, 0, 1, 0, 2], [83, 99, 27], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 8, 3, 0, 3, 5], [3, 2, 0, 3], [0, 97], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [6, 3, 3, 6, 6, 1, 4, 1, 4, 2, 8, 6, 8, 0, 3], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0, 3, 1, 7], [16, 51, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 2, 1, 1, 0, 2, 1, 1, 1, 28, 15, 13, 5], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.divide_no_nan(sigma, tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(tf.math.multiply(sigma, alpha))), beta)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), sigma), alpha)), grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]