[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8731428384780884, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2252981662750244, 1.873585820198059, 1.4070161581039429, 1.1065714359283447, 0.9528757929801941, 0.8513102531433105, 0.7822924256324768, 0.737029492855072, 0.6955397725105286, 0.668301522731781, 0.641123354434967, 0.6188269257545471, 0.5950899720191956, 0.5793667435646057, 0.5679749250411987, 0.5454838275909424, 0.5364053845405579, 0.5310418009757996, 0.513072669506073, 0.5063387751579285, 0.497083455324173, 0.4845834970474243, 0.4747185707092285, 0.4659489393234253, 0.4559924304485321, 0.4531609117984772, 0.4395630955696106, 0.4272501468658447, 0.42265695333480835, 0.41651442646980286, 0.40615957975387573, 0.40180903673171997, 0.40508612990379333, 0.3951359987258911, 0.3935704231262207, 0.3883858323097229, 0.38555625081062317, 0.3713589608669281, 0.36508867144584656, 0.3597962260246277, 0.35915565490722656, 0.35211846232414246, 0.34683743119239807, 0.3435494303703308, 0.3373126983642578, 0.33813807368278503, 0.3274953365325928, 0.31703895330429077, 0.319635272026062, 0.317412793636322, 0.3197822868824005, 0.3041783571243286, 0.3030990958213806, 0.30067476630210876, 0.294068843126297, 0.2886531352996826, 0.28759342432022095, 0.2835548222064972, 0.28243350982666016, 0.2694711685180664, 0.2695348858833313, 0.26196086406707764, 0.2628301680088043, 0.2572108805179596, 0.25831669569015503, 0.250888854265213, 0.24116972088813782, 0.24375490844249725, 0.2379743456840515, 0.24339182674884796], "accuracy": [0.2641659080982208, 0.4859331548213959, 0.55791836977005, 0.6090344786643982, 0.6576409935951233, 0.6948884129524231, 0.7099458575248718, 0.7284374833106995, 0.7486461400985718, 0.7536653280258179, 0.7638356685638428, 0.7755910754203796, 0.7828556299209595, 0.7880068421363831, 0.7944789528846741, 0.8001585006713867, 0.8075551390647888, 0.8092722296714783, 0.8152159452438354, 0.8166688680648804, 0.8173292875289917, 0.83119797706604, 0.8321225643157959, 0.8327829837799072, 0.8381983637809753, 0.8384625315666199, 0.8426892161369324, 0.8454629778862, 0.8504821062088013, 0.8499537706375122, 0.8555012345314026, 0.8562937378883362, 0.8589354157447815, 0.8594637513160706, 0.8627657890319824, 0.8631620407104492, 0.8626337051391602, 0.8687095642089844, 0.8712190985679626, 0.8747853636741638, 0.8681812286376953, 0.8780874609947205, 0.8753136992454529, 0.8754457831382751, 0.8808611631393433, 0.8762382864952087, 0.8849557638168335, 0.8874653577804565, 0.8878615498542786, 0.8861445188522339, 0.8842953443527222, 0.8887861371040344, 0.8891823887825012, 0.8939374089241028, 0.8960506916046143, 0.8928807377815247, 0.8960506916046143, 0.898428201675415, 0.8989565372467041, 0.9019944667816162, 0.9035794734954834, 0.9054285883903503, 0.9034473896026611, 0.9064852595329285, 0.9068815112113953, 0.908730685710907, 0.913617730140686, 0.9132214784622192, 0.9141460657119751, 0.9142781496047974], "val_loss": [2.0408287048339844, 1.5180315971374512, 1.0400652885437012, 0.829929769039154, 0.738387942314148, 0.6795169115066528, 0.6343071460723877, 0.596426784992218, 0.5715663433074951, 0.551760196685791, 0.5335947275161743, 0.5173448324203491, 0.5007214546203613, 0.4935409426689148, 0.48001644015312195, 0.4684426784515381, 0.46520060300827026, 0.4495084583759308, 0.43935108184814453, 0.4317381978034973, 0.43411076068878174, 0.4189104437828064, 0.421207994222641, 0.41355717182159424, 0.4018879532814026, 0.4045601785182953, 0.393708735704422, 0.38962462544441223, 0.3867417871952057, 0.37926310300827026, 0.3773450553417206, 0.37304410338401794, 0.3734133243560791, 0.37203043699264526, 0.36658161878585815, 0.364104300737381, 0.3637799918651581, 0.35630667209625244, 0.3592729866504669, 0.3561299741268158, 0.34685343503952026, 0.3503268361091614, 0.3464776277542114, 0.3465816378593445, 0.34926506876945496, 0.34020328521728516, 0.33635982871055603, 0.33972716331481934, 0.3407634198665619, 0.3340844213962555, 0.3354943096637726, 0.33412089943885803, 0.32870447635650635, 0.3277425467967987, 0.3295486569404602, 0.32595938444137573, 0.32449954748153687, 0.3304685950279236, 0.32852229475975037, 0.3223864734172821, 0.32226455211639404, 0.3193298280239105, 0.3195599317550659, 0.3257496654987335, 0.31632229685783386, 0.31698310375213623, 0.317045122385025, 0.3191654086112976, 0.3216957747936249, 0.31695881485939026], "val_accuracy": [0.5149999856948853, 0.6520000100135803, 0.6893333196640015, 0.7110000252723694, 0.7326666712760925, 0.7516666650772095, 0.7643333077430725, 0.778333306312561, 0.7883333563804626, 0.793666660785675, 0.793666660785675, 0.8086666464805603, 0.8090000152587891, 0.8153333067893982, 0.8183333277702332, 0.8299999833106995, 0.8296666741371155, 0.8360000252723694, 0.8399999737739563, 0.8463333249092102, 0.8396666646003723, 0.8479999899864197, 0.8420000076293945, 0.8486666679382324, 0.8529999852180481, 0.8516666889190674, 0.8583333492279053, 0.856333315372467, 0.8603333234786987, 0.8633333444595337, 0.8646666407585144, 0.8650000095367432, 0.8653333187103271, 0.8656666874885559, 0.8673333525657654, 0.8650000095367432, 0.8706666827201843, 0.8659999966621399, 0.8653333187103271, 0.8730000257492065, 0.8700000047683716, 0.871999979019165, 0.8766666650772095, 0.8709999918937683, 0.8743333220481873, 0.875, 0.8776666522026062, 0.875333309173584, 0.8769999742507935, 0.8790000081062317, 0.8766666650772095, 0.878333330154419, 0.8793333172798157, 0.8813333511352539, 0.8786666393280029, 0.8830000162124634, 0.8793333172798157, 0.8776666522026062, 0.8820000290870667, 0.8820000290870667, 0.8833333253860474, 0.8866666555404663, 0.8833333253860474, 0.8833333253860474, 0.8870000243186951, 0.8853333592414856, 0.8853333592414856, 0.8806666731834412, 0.8830000162124634, 0.8843333125114441]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 3, 1, 1], [0, 3, 2, 4, 2], [0], [0, 1], [0], [1], [0]], "fitness": -0.8591428399085999, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, beta)), tf.math.subtract(grad, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293365001678467, 2.1908557415008545, 1.7745494842529297, 1.341298222541809, 1.0718220472335815, 0.9180642366409302, 0.851469874382019, 0.8103653788566589, 0.7669978141784668, 0.7384803891181946, 0.6916335821151733, 0.6828937530517578, 0.6487119197845459, 0.6271957755088806, 0.6114963293075562, 0.5983195304870605, 0.5801001191139221, 0.5716814398765564, 0.5613580346107483, 0.5574641227722168, 0.5296902060508728, 0.5252367258071899, 0.5154176950454712, 0.5117461085319519, 0.4949352443218231, 0.48863905668258667, 0.4845775067806244, 0.4718047082424164, 0.4694112241268158, 0.4549090266227722, 0.44461098313331604, 0.4251234829425812, 0.42548394203186035, 0.41501379013061523, 0.4085080325603485, 0.41614583134651184, 0.39563894271850586, 0.3888208270072937, 0.37749043107032776, 0.36579081416130066, 0.3680582046508789, 0.3541931211948395, 0.3654037117958069, 0.35603177547454834, 0.3395983576774597, 0.33691227436065674, 0.3388058543205261, 0.33538639545440674], "accuracy": [0.1258750557899475, 0.3283582031726837, 0.4485536813735962, 0.549068808555603, 0.6420552134513855, 0.6602826714515686, 0.6919825673103333, 0.7073041796684265, 0.7092854380607605, 0.7181349992752075, 0.7384757399559021, 0.7413815855979919, 0.7582882046699524, 0.7572315335273743, 0.763967752456665, 0.7724210619926453, 0.7750627398490906, 0.7866860628128052, 0.7848368883132935, 0.7878747582435608, 0.7926297783851624, 0.800818920135498, 0.8072909712791443, 0.8055738806724548, 0.8107251524925232, 0.816008448600769, 0.8136309385299683, 0.8215559124946594, 0.8211596608161926, 0.8267071843147278, 0.8294808864593506, 0.8424250483512878, 0.8405758738517761, 0.842028796672821, 0.8430854678153992, 0.8404437899589539, 0.8529917001724243, 0.8544445633888245, 0.8552370667457581, 0.863558292388916, 0.860652506351471, 0.8614450097084045, 0.8599920868873596, 0.8594637513160706, 0.8625016212463379, 0.8639545440673828, 0.8677849769592285, 0.8685774803161621], "val_loss": [2.24687123298645, 2.0261802673339844, 1.1694337129592896, 0.9349676370620728, 0.7939348816871643, 0.7420465350151062, 0.7065815329551697, 0.6799307465553284, 0.6622463464736938, 0.6241135001182556, 0.5992961525917053, 0.5759240388870239, 0.5640366673469543, 0.5593792200088501, 0.5346807241439819, 0.52170729637146, 0.525592029094696, 0.5069305300712585, 0.5017237663269043, 0.49118998646736145, 0.4916080832481384, 0.48286160826683044, 0.45853060483932495, 0.4562413692474365, 0.46178707480430603, 0.446376234292984, 0.43499699234962463, 0.4452451467514038, 0.42539700865745544, 0.4224153757095337, 0.43459200859069824, 0.41046902537345886, 0.3996852934360504, 0.40507274866104126, 0.40432724356651306, 0.3984801173210144, 0.39322957396507263, 0.3827364146709442, 0.3956660032272339, 0.4018581211566925, 0.39611077308654785, 0.3928694725036621, 0.3986845016479492, 0.4006268382072449, 0.39572492241859436, 0.3809278607368469, 0.38914671540260315, 0.3925746977329254], "val_accuracy": [0.4189999997615814, 0.4819999933242798, 0.6323333382606506, 0.6813333630561829, 0.7120000123977661, 0.7110000252723694, 0.7126666903495789, 0.7323333621025085, 0.734666645526886, 0.7519999742507935, 0.765333354473114, 0.7823333144187927, 0.7733333110809326, 0.7860000133514404, 0.7896666526794434, 0.8003333210945129, 0.7976666688919067, 0.8016666769981384, 0.8026666641235352, 0.8109999895095825, 0.8143333196640015, 0.8203333616256714, 0.828000009059906, 0.8253333568572998, 0.828000009059906, 0.8353333473205566, 0.8376666903495789, 0.8306666612625122, 0.8420000076293945, 0.8420000076293945, 0.8460000157356262, 0.8533333539962769, 0.8579999804496765, 0.8569999933242798, 0.8569999933242798, 0.8560000061988831, 0.8616666793823242, 0.8550000190734863, 0.8533333539962769, 0.8583333492279053, 0.8636666536331177, 0.8606666922569275, 0.8673333525657654, 0.8656666874885559, 0.8576666712760925, 0.8600000143051147, 0.8586666584014893, 0.8629999756813049]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 10, 5, 5, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 8, 8, 6, 0], [0, 0, 7], [0, 35], [1], [0], [2], [0]], "fitness": -0.8259999752044678, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.divide_no_nan(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5292879343032837, 0.8137683272361755, 0.6782079339027405, 0.6192623376846313, 0.5822520852088928, 0.5632613301277161, 0.5535039305686951, 0.5482401251792908, 0.4992660582065582, 0.49976468086242676, 0.48686468601226807, 0.48536941409111023, 0.4971019923686981, 0.5297390818595886], "accuracy": [0.47906485199928284, 0.713379979133606, 0.7555144429206848, 0.774270236492157, 0.7940827012062073, 0.7943468689918518, 0.8024039268493652, 0.8086118102073669, 0.821820080280304, 0.8208954930305481, 0.8230088353157043, 0.8276317715644836, 0.8265751004219055, 0.8294808864593506], "val_loss": [0.8557915687561035, 0.6574805378913879, 0.566811740398407, 0.5192407369613647, 0.5205572247505188, 0.4893301725387573, 0.5131270289421082, 0.4862435758113861, 0.4723609983921051, 0.4650328755378723, 0.4640135169029236, 0.5068160891532898, 0.500737726688385, 0.5467857122421265], "val_accuracy": [0.7139999866485596, 0.7536666393280029, 0.8040000200271606, 0.8166666626930237, 0.8146666884422302, 0.8193333148956299, 0.8336666822433472, 0.8389999866485596, 0.8493333458900452, 0.8386666774749756, 0.8473333120346069, 0.8453333377838135, 0.8460000157356262, 0.8346666693687439]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [1, 1, 2, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [71, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 3, 0, 3, 0, 0, 3, 1, 2, 0], [16, 54, 31, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 0, 2, 1, 1, 1, 2, 1, 1, 1, 5, 2, 3, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3036630153656006, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 8, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 0], [16, 16], [0, 0, 1, 0, 0, 1, 0, 1], [0, 7, 1, 3, 9], [4, 3, 2], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 2, 5, 8, 1, 4, 1, 4, 2, 6], [0, 3, 0, 3, 0, 2, 3, 1, 2, 0], [72, 99, 96, 68, 52, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 1, 6, 3, 3, 2, 8, 5, 3, 1, 11, 6, 5, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(grad, tf.math.subtract(tf.math.multiply(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, tf.math.add(tf.math.square(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [6, 2, 3, 0, 3, 1, 6, 7, 3, 1, 6, 0, 9], [0, 1, 2, 2, 2, 0, 2, 0, 0, 0], [39, 39, 48, 53, 12, 90], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [2, 3, 3, 6, 3, 1, 4, 1, 4, 2, 8, 8, 0, 3, 1], [3, 0, 0, 3, 0, 4, 3, 1, 2, 0, 0, 5, 4], [16, 99, 96, 99, 61, 84]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 13, 10, 6, 2, 1, 1, 1, 2, 1, 1, 0, 28, 15, 13, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha)), tf.math.multiply(grad, grad)), tf.math.subtract(tf.math.divide_no_nan(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.math.divide_no_nan(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.math.pow(sigma, tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(tf.math.sqrt(tf.math.negative(sigma)))), alpha), tf.math.multiply(beta, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 1, 3], [16, 16], [0, 1], [0], [0], [58], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [9, 3, 3, 6, 8, 1, 4, 1, 4, 8, 8], [0, 4, 0, 3, 0, 0, 4, 1, 2, 0], [44, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 1, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303487777709961, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}]