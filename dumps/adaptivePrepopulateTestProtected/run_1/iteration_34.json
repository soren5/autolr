[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223330497741699, 1.8670156002044678, 1.3935511112213135, 1.1012579202651978, 0.9477801322937012, 0.8379126191139221, 0.7764281630516052, 0.7235901951789856, 0.6839449405670166, 0.6511124968528748, 0.6340097188949585, 0.6069210171699524, 0.5817078948020935, 0.5635776519775391, 0.5524153113365173, 0.5367791652679443, 0.5212588906288147, 0.5178380608558655, 0.5019086003303528, 0.4879888892173767, 0.4858485460281372, 0.4747111201286316, 0.45951735973358154, 0.4532293975353241, 0.4492609202861786, 0.4330301284790039, 0.4310648441314697, 0.42051371932029724, 0.41327017545700073, 0.4060419201850891, 0.3997148871421814, 0.39729252457618713, 0.3869434893131256, 0.3869549036026001, 0.38186177611351013, 0.3692651391029358, 0.36346086859703064, 0.3634459972381592, 0.3600703179836273, 0.3489670753479004, 0.3429599404335022, 0.34309908747673035, 0.3401198089122772, 0.3303268253803253, 0.3301240801811218, 0.3276282846927643, 0.3180643618106842, 0.3136589229106903, 0.3090694546699524, 0.3071834146976471, 0.3011736273765564, 0.30332496762275696, 0.29351481795310974, 0.2937680780887604], "accuracy": [0.26680755615234375, 0.49451854825019836, 0.5679566860198975, 0.6209219098091125, 0.6646413803100586, 0.7078325152397156, 0.7234182953834534, 0.7387399077415466, 0.7541936039924622, 0.7672698497772217, 0.7677981853485107, 0.7820631265640259, 0.7897239327430725, 0.7977809906005859, 0.798309326171875, 0.8082155585289001, 0.8138951063156128, 0.8094043135643005, 0.822348415851593, 0.8269713521003723, 0.8208954930305481, 0.8310658931732178, 0.8350284099578857, 0.8367455005645752, 0.8368775844573975, 0.8444063067436218, 0.843481719493866, 0.850350022315979, 0.8502179384231567, 0.8570862412452698, 0.857218325138092, 0.8574824929237366, 0.8610487580299377, 0.8610487580299377, 0.8607845902442932, 0.8658037185668945, 0.8701624870300293, 0.8689737319946289, 0.8708229064941406, 0.8792761564254761, 0.8798044919967651, 0.8765024542808533, 0.8765024542808533, 0.8824461698532104, 0.880729079246521, 0.8844274282455444, 0.8838990926742554, 0.8887861371040344, 0.8878615498542786, 0.8903711438179016, 0.8924844861030579, 0.8912957310676575, 0.8976356983184814, 0.8960506916046143], "val_loss": [2.040694236755371, 1.5166728496551514, 1.045767068862915, 0.8421168327331543, 0.7569165229797363, 0.7011509537696838, 0.6573318839073181, 0.6179470419883728, 0.5908101201057434, 0.5737177133560181, 0.5541383624076843, 0.5365487933158875, 0.518412172794342, 0.5104728937149048, 0.49868762493133545, 0.485697478055954, 0.48461878299713135, 0.46694132685661316, 0.459992378950119, 0.44818419218063354, 0.45110249519348145, 0.4507465958595276, 0.4339507520198822, 0.4287099242210388, 0.42590731382369995, 0.4119842052459717, 0.4104468524456024, 0.4069807529449463, 0.40372517704963684, 0.3985708951950073, 0.3967111110687256, 0.39305025339126587, 0.39346253871917725, 0.3906964063644409, 0.3815464675426483, 0.3792845904827118, 0.37928369641304016, 0.3762374818325043, 0.37582898139953613, 0.37387406826019287, 0.3717586398124695, 0.36671704053878784, 0.363382488489151, 0.36401286721229553, 0.3619881868362427, 0.35666540265083313, 0.3588123917579651, 0.3541429042816162, 0.35232576727867126, 0.35342442989349365, 0.3524846136569977, 0.34847813844680786, 0.34814298152923584, 0.35015836358070374], "val_accuracy": [0.5323333144187927, 0.6446666717529297, 0.6756666898727417, 0.7043333053588867, 0.7239999771118164, 0.7493333220481873, 0.753000020980835, 0.7706666588783264, 0.7820000052452087, 0.7873333096504211, 0.7956666946411133, 0.800000011920929, 0.8136666417121887, 0.812666654586792, 0.8199999928474426, 0.824999988079071, 0.8246666789054871, 0.8326666951179504, 0.8303333520889282, 0.8376666903495789, 0.8333333134651184, 0.8343333601951599, 0.8446666598320007, 0.843666672706604, 0.846666693687439, 0.8513333201408386, 0.8546666502952576, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8529999852180481, 0.859333336353302, 0.8546666502952576, 0.8569999933242798, 0.8606666922569275, 0.8633333444595337, 0.8643333315849304, 0.8629999756813049, 0.8576666712760925, 0.8703333139419556, 0.8640000224113464, 0.8643333315849304, 0.8676666617393494, 0.8663333058357239, 0.8713333606719971, 0.871999979019165, 0.8693333268165588, 0.8693333268165588, 0.878000020980835, 0.8756666779518127, 0.8706666827201843, 0.8756666779518127, 0.8769999742507935, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8665714263916016, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2232465744018555, 1.8716474771499634, 1.389573097229004, 1.101958990097046, 0.9509079456329346, 0.83454829454422, 0.778311014175415, 0.7338711619377136, 0.6939002275466919, 0.6625620126724243, 0.6374855637550354, 0.6172903180122375, 0.6003330945968628, 0.5871303081512451, 0.5633205771446228, 0.550822377204895, 0.5394617915153503, 0.5197688937187195, 0.5160797238349915, 0.49991998076438904, 0.496713787317276, 0.48439469933509827, 0.47922882437705994, 0.4683000147342682, 0.45971810817718506, 0.4434130787849426, 0.441524863243103, 0.4358985126018524, 0.42555174231529236, 0.41872668266296387, 0.41131946444511414, 0.40214821696281433, 0.40182432532310486, 0.3937997817993164, 0.3924500048160553, 0.3910621404647827, 0.3785889744758606, 0.3801637589931488, 0.3733467161655426, 0.3638404607772827, 0.36116838455200195, 0.34963685274124146, 0.3553481996059418, 0.3434878885746002, 0.3423520028591156, 0.3389880359172821, 0.32703354954719543, 0.32332468032836914, 0.3228044807910919, 0.32154443860054016], "accuracy": [0.2763175368309021, 0.4842160940170288, 0.5686171054840088, 0.6141856908798218, 0.6598864197731018, 0.7024171352386475, 0.7199841737747192, 0.733060359954834, 0.7498348951339722, 0.7567031979560852, 0.76542067527771, 0.7721568942070007, 0.7861577272415161, 0.7898560166358948, 0.7973847389221191, 0.7989697456359863, 0.8059701323509216, 0.8098005652427673, 0.816008448600769, 0.824329674243927, 0.829216718673706, 0.8281601071357727, 0.8294808864593506, 0.8309338092803955, 0.8389908671379089, 0.8408400416374207, 0.8383304476737976, 0.846387505531311, 0.8432175517082214, 0.8470479249954224, 0.8512746095657349, 0.8516708612442017, 0.8581429123878479, 0.8558974862098694, 0.8561616539955139, 0.8533879518508911, 0.8609166741371155, 0.8597279191017151, 0.8642187118530273, 0.8669924736022949, 0.8669924736022949, 0.8775591254234314, 0.8733324408531189, 0.8746532797813416, 0.8741249442100525, 0.8795403242111206, 0.8812574148178101, 0.8836349248886108, 0.8835028409957886, 0.8848236799240112], "val_loss": [2.040522575378418, 1.5116649866104126, 1.036069393157959, 0.8280390501022339, 0.7416526079177856, 0.6848915815353394, 0.6474294662475586, 0.6171780824661255, 0.5898858904838562, 0.5655069351196289, 0.5480653643608093, 0.5319828391075134, 0.5194697976112366, 0.5061582922935486, 0.49649879336357117, 0.4910735785961151, 0.4752618074417114, 0.4676872491836548, 0.4595945179462433, 0.4551127254962921, 0.4493693709373474, 0.4478965699672699, 0.4370829164981842, 0.4342379570007324, 0.42607226967811584, 0.42637836933135986, 0.41573575139045715, 0.41881224513053894, 0.41263094544410706, 0.4065974950790405, 0.4042237401008606, 0.4010755717754364, 0.3975185453891754, 0.3979727029800415, 0.3964206576347351, 0.3935717046260834, 0.3879370093345642, 0.3875294625759125, 0.3923076093196869, 0.3814128339290619, 0.3798275291919708, 0.3807217478752136, 0.3810358941555023, 0.37668904662132263, 0.37476643919944763, 0.36966657638549805, 0.37556779384613037, 0.37281543016433716, 0.3701077103614807, 0.373313844203949], "val_accuracy": [0.534333348274231, 0.6613333225250244, 0.6933333277702332, 0.7179999947547913, 0.7446666955947876, 0.7570000290870667, 0.768666684627533, 0.7749999761581421, 0.7886666655540466, 0.800000011920929, 0.8056666851043701, 0.8113333582878113, 0.8199999928474426, 0.8216666579246521, 0.8196666836738586, 0.824999988079071, 0.8293333053588867, 0.8343333601951599, 0.8386666774749756, 0.8379999995231628, 0.8396666646003723, 0.843999981880188, 0.846666693687439, 0.8460000157356262, 0.8519999980926514, 0.8496666550636292, 0.8546666502952576, 0.8506666421890259, 0.8553333282470703, 0.8600000143051147, 0.8556666374206543, 0.862333357334137, 0.8619999885559082, 0.8610000014305115, 0.8603333234786987, 0.8636666536331177, 0.8653333187103271, 0.8606666922569275, 0.8619999885559082, 0.8676666617393494, 0.8683333396911621, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8686666488647461, 0.8683333396911621, 0.8666666746139526, 0.8673333525657654, 0.8666666746139526, 0.8629999756813049]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 4], [0, 1], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8302857279777527, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2936620712280273, 2.1890101432800293, 1.769336223602295, 1.3275971412658691, 1.079062581062317, 0.8939648866653442, 0.8451352119445801, 0.8120356202125549, 0.7626038193702698, 0.7427956461906433, 0.7022136449813843, 0.6742997169494629, 0.6509871482849121, 0.6147139668464661, 0.6047914624214172, 0.5836071968078613, 0.5825865268707275, 0.5624622702598572, 0.5510421991348267, 0.5312017798423767, 0.5252181887626648, 0.5240041613578796, 0.5042544007301331, 0.4892995059490204, 0.499868243932724, 0.4839129149913788, 0.46431612968444824, 0.4527435302734375, 0.4428594410419464, 0.43391844630241394, 0.42627421021461487, 0.4078277349472046, 0.4137093722820282, 0.40845540165901184, 0.4013684093952179, 0.385989785194397, 0.39132604002952576, 0.37194374203681946, 0.37379977107048035, 0.36492010951042175, 0.3683013916015625, 0.3570432960987091, 0.3430043160915375, 0.33721989393234253, 0.3319118618965149, 0.3378308117389679, 0.3289848864078522, 0.33220821619033813, 0.32317107915878296, 0.31912803649902344, 0.30386480689048767, 0.2986472249031067, 0.3100946843624115, 0.29621171951293945, 0.3020099103450775, 0.2982426881790161, 0.2901928126811981, 0.2956651747226715, 0.27516135573387146, 0.2788378596305847, 0.2784636914730072, 0.28219303488731384], "accuracy": [0.12719587981700897, 0.32703739404678345, 0.44010037183761597, 0.5443138480186462, 0.6384889483451843, 0.6758684515953064, 0.6831330060958862, 0.7036058902740479, 0.7059833407402039, 0.7141724824905396, 0.7272487282752991, 0.7374191284179688, 0.7530049085617065, 0.7650244235992432, 0.7635715007781982, 0.7804781198501587, 0.7817989587783813, 0.7808743715286255, 0.791441023349762, 0.8012151718139648, 0.7980451583862305, 0.7977809906005859, 0.8133667707443237, 0.8149517774581909, 0.8137630224227905, 0.8201030492782593, 0.8247259259223938, 0.826310932636261, 0.8348963260650635, 0.8384625315666199, 0.8388587832450867, 0.8453308939933777, 0.8411042094230652, 0.8488970994949341, 0.8494254350662231, 0.8545766472816467, 0.8533879518508911, 0.857218325138092, 0.8561616539955139, 0.8621054291725159, 0.8626337051391602, 0.8696341514587402, 0.8693699836730957, 0.874389111995697, 0.8757099509239197, 0.8710870146751404, 0.8734645247459412, 0.8759741187095642, 0.880729079246521, 0.8784837126731873, 0.8820499181747437, 0.8809932470321655, 0.8845595121383667, 0.8831065893173218, 0.8865407705307007, 0.8808611631393433, 0.8873332738876343, 0.8854840993881226, 0.8969752788543701, 0.8911636471748352, 0.8907673954963684, 0.8889182209968567], "val_loss": [2.246765375137329, 2.0211353302001953, 1.1410740613937378, 0.9188024997711182, 0.7824033498764038, 0.7110891938209534, 0.6854928135871887, 0.6515660285949707, 0.6564978957176208, 0.6202585697174072, 0.5779961347579956, 0.5562987923622131, 0.539459228515625, 0.5364412069320679, 0.5304105877876282, 0.5290260314941406, 0.5147400498390198, 0.4999852180480957, 0.5018975138664246, 0.48851078748703003, 0.4792952835559845, 0.46958521008491516, 0.46162092685699463, 0.46492162346839905, 0.4578720033168793, 0.44634562730789185, 0.43447375297546387, 0.4315378963947296, 0.4331124722957611, 0.4156823754310608, 0.414035439491272, 0.4129776954650879, 0.4069061577320099, 0.40129369497299194, 0.4018022418022156, 0.4055922329425812, 0.3946053385734558, 0.38666072487831116, 0.3905509114265442, 0.4152784049510956, 0.41320663690567017, 0.3919256925582886, 0.3975710868835449, 0.385426789522171, 0.3772101104259491, 0.3802448809146881, 0.39165669679641724, 0.3978689908981323, 0.39056363701820374, 0.38423365354537964, 0.3792145550251007, 0.3809211552143097, 0.3982183039188385, 0.40409034490585327, 0.40329447388648987, 0.4021775424480438, 0.41575658321380615, 0.4143872857093811, 0.41313737630844116, 0.4143645465373993, 0.42827746272087097, 0.4212092161178589], "val_accuracy": [0.41100001335144043, 0.4726666808128357, 0.6416666507720947, 0.6853333115577698, 0.7213333249092102, 0.7263333201408386, 0.7393333315849304, 0.746999979019165, 0.7429999709129333, 0.7649999856948853, 0.7733333110809326, 0.7906666398048401, 0.7863333225250244, 0.7896666526794434, 0.7950000166893005, 0.7903333306312561, 0.8036666512489319, 0.8136666417121887, 0.8066666722297668, 0.8143333196640015, 0.8163333535194397, 0.8246666789054871, 0.8339999914169312, 0.8393333554267883, 0.8356666564941406, 0.8376666903495789, 0.8376666903495789, 0.8460000157356262, 0.8416666388511658, 0.8500000238418579, 0.8479999899864197, 0.8506666421890259, 0.8523333072662354, 0.8560000061988831, 0.8533333539962769, 0.8560000061988831, 0.8569999933242798, 0.8603333234786987, 0.862333357334137, 0.8586666584014893, 0.8606666922569275, 0.8669999837875366, 0.8646666407585144, 0.8643333315849304, 0.8673333525657654, 0.8663333058357239, 0.8600000143051147, 0.8636666536331177, 0.8663333058357239, 0.8683333396911621, 0.8686666488647461, 0.8679999709129333, 0.8700000047683716, 0.8726666569709778, 0.8709999918937683, 0.8733333349227905, 0.8756666779518127, 0.8696666955947876, 0.8740000128746033, 0.8679999709129333, 0.8656666874885559, 0.8640000224113464]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8234285712242126, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5784404277801514, 0.8018664121627808, 0.6651974320411682, 0.5892059206962585, 0.5544424057006836, 0.5501942038536072, 0.5085073709487915, 0.49480709433555603, 0.486809104681015, 0.4807024896144867, 0.4751122295856476, 0.4814828336238861, 0.46964430809020996, 0.47240737080574036, 0.48128005862236023, 0.5015065670013428, 0.5498820543289185, 0.5447930693626404, 0.5105770826339722, 0.5469960570335388, 0.5338805913925171, 0.5402736663818359], "accuracy": [0.46849822998046875, 0.7305507659912109, 0.750231146812439, 0.7796856164932251, 0.7948752045631409, 0.8075551390647888, 0.8145555257797241, 0.819970965385437, 0.8207634687423706, 0.8281601071357727, 0.8341038227081299, 0.8280280232429504, 0.826310932636261, 0.837141752243042, 0.8408400416374207, 0.8269713521003723, 0.8238013386726379, 0.8294808864593506, 0.8269713521003723, 0.8173292875289917, 0.8198388814926147, 0.8273676037788391], "val_loss": [0.8548715114593506, 0.6530300974845886, 0.5482425093650818, 0.5161972045898438, 0.5114123225212097, 0.508775532245636, 0.4670987129211426, 0.459159255027771, 0.48746076226234436, 0.47237059473991394, 0.5035145878791809, 0.5049177408218384, 0.4753741919994354, 0.5528907775878906, 0.5475552678108215, 0.5895330309867859, 0.5741357207298279, 0.6344720125198364, 0.5804502367973328, 0.5914885401725769, 0.5027867555618286, 0.6555627584457397], "val_accuracy": [0.7243333458900452, 0.7456666827201843, 0.7986666560173035, 0.8196666836738586, 0.8169999718666077, 0.82833331823349, 0.8339999914169312, 0.8349999785423279, 0.8399999737739563, 0.8363333344459534, 0.8349999785423279, 0.846666693687439, 0.8320000171661377, 0.8393333554267883, 0.840666651725769, 0.846666693687439, 0.8536666631698608, 0.8363333344459534, 0.8429999947547913, 0.8373333215713501, 0.8303333520889282, 0.8393333554267883]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 1], [0, 2], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 4, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [46650732544.0, 6901064531968.0, 119247753707520.0, 821018230784000.0, 3674509877968896.0, 1.1972220263858176e+16], "accuracy": [0.10210011899471283, 0.10077928751707077, 0.10130762308835983, 0.09959053993225098, 0.09391097724437714, 0.09708096832036972], "val_loss": [473411878912.0, 25523250003968.0, 273955009069056.0, 1493489648926720.0, 5595296025280512.0, 1.6505776214376448e+16], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 9, 8, 8, 3], [0, 1, 0, 2], [39, 78], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [0, 2, 4, 0, 3, 5, 7, 8, 9], [0, 2, 2, 3], [16, 16], [0, 1], [8], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 5, 6], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4, 1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 13, 9, 4, 2, 2, 1, 1, 1, 24, 13, 11, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(beta, tf.math.square(tf.math.add(tf.math.sqrt(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), sigma)))), tf.math.sqrt(tf.math.square(alpha)))), beta), tf.math.divide_no_nan(grad, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [4, 2, 3, 0, 3, 5, 1, 8, 6, 6, 2, 6, 8, 7, 2, 8, 6, 9, 0, 1, 7, 4, 8, 9, 9, 2, 9, 0, 3, 6, 3, 2, 8, 6, 0, 7, 2, 4, 7], [5, 2, 0, 3, 0, 1, 5, 2, 3, 5, 2, 3, 1, 0, 2, 4, 2, 5, 3, 0, 4, 3], [16, 16, 86, 17, 13, 7, 82, 63], [0, 1], [0], [0], [0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 7, 2, 8, 4, 2, 1, 1, 6], [6, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0, 30, 22, 97, 8]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 61, 39, 22, 8, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 36, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.math.square(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(grad))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(tf.math.pow(tf.math.sqrt(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), alpha), grad), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.negative(grad)), grad), tf.math.multiply(beta, grad))))), tf.math.divide_no_nan(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(beta, grad)), beta), tf.math.negative(tf.math.add(tf.math.add(grad, tf.math.pow(grad, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.add(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 2, 2, 2, 3, 2], [0, 1, 0, 2, 0, 3], [39, 39, 3], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 4, 3, 0, 3, 5, 8, 0], [0, 2, 3, 3], [16, 16], [0, 1, 0, 1], [3, 8], [0, 2], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 3, 5, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 76, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 3, 12, 8, 4, 1, 4, 2, 2, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.square(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.negative(beta))), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), sigma)))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]