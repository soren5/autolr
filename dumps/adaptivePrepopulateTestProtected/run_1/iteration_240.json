[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8591428399085999, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2215969562530518, 1.8563848733901978, 1.3869831562042236, 1.089928388595581, 0.933936595916748, 0.8393893241882324, 0.7649956345558167, 0.7154407501220703, 0.6869444251060486, 0.6555259823799133, 0.6254046559333801, 0.6102758049964905, 0.5942502021789551, 0.5726538896560669, 0.5483283400535583, 0.551946759223938, 0.5189136266708374, 0.5101491808891296, 0.5001238584518433, 0.48617562651634216, 0.4707678258419037, 0.47414663434028625, 0.4625428020954132, 0.4483363628387451, 0.4346788823604584, 0.435007244348526, 0.4245676100254059, 0.4173406660556793, 0.4055664837360382, 0.40637317299842834, 0.39622762799263, 0.38827642798423767, 0.38411566615104675, 0.3807314336299896, 0.37096378207206726, 0.3662455677986145, 0.37152040004730225, 0.35553237795829773, 0.35570499300956726, 0.34621426463127136, 0.3530708849430084, 0.3432539701461792, 0.33532553911209106, 0.3265984356403351], "accuracy": [0.2740721106529236, 0.4885748326778412, 0.564258337020874, 0.6248844265937805, 0.6699247360229492, 0.7000396251678467, 0.7273808121681213, 0.7396644949913025, 0.7498348951339722, 0.7640998363494873, 0.7771760821342468, 0.7812706232070923, 0.7828556299209595, 0.7968564033508301, 0.8038568496704102, 0.8072909712791443, 0.8175934553146362, 0.8150838613510132, 0.8235371708869934, 0.826310932636261, 0.8356888294219971, 0.8330471515655518, 0.8348963260650635, 0.8428213000297546, 0.8488970994949341, 0.8473120927810669, 0.8510104417800903, 0.8531237840652466, 0.8558974862098694, 0.8576145768165588, 0.8607845902442932, 0.8621054291725159, 0.8665962219238281, 0.8671245574951172, 0.8709549307823181, 0.8693699836730957, 0.8684453964233398, 0.8765024542808533, 0.8746532797813416, 0.8757099509239197, 0.8737286925315857, 0.8741249442100525, 0.8782195448875427, 0.887597382068634], "val_loss": [2.038595676422119, 1.5130597352981567, 1.0509251356124878, 0.8405126929283142, 0.7475546598434448, 0.6947909593582153, 0.6466097235679626, 0.6160846948623657, 0.5897127389907837, 0.5706894397735596, 0.5523231029510498, 0.5379617214202881, 0.521495521068573, 0.5108417272567749, 0.5010179281234741, 0.4855125844478607, 0.4738236367702484, 0.46923941373825073, 0.4583744704723358, 0.45079267024993896, 0.44871824979782104, 0.4420287609100342, 0.432041734457016, 0.4306776821613312, 0.4225260317325592, 0.4176948368549347, 0.4109853208065033, 0.408482164144516, 0.40677303075790405, 0.4020707309246063, 0.39639291167259216, 0.3989236652851105, 0.3889407515525818, 0.3880807161331177, 0.38522204756736755, 0.38194921612739563, 0.3778439462184906, 0.3733513057231903, 0.3719532787799835, 0.3773155212402344, 0.3707623779773712, 0.3702138662338257, 0.36012259125709534, 0.3626254200935364], "val_accuracy": [0.5196666717529297, 0.6446666717529297, 0.6816666722297668, 0.7166666388511658, 0.7386666536331177, 0.7536666393280029, 0.7609999775886536, 0.7716666460037231, 0.7770000100135803, 0.7883333563804626, 0.7933333516120911, 0.7979999780654907, 0.8046666383743286, 0.8063333630561829, 0.8130000233650208, 0.8216666579246521, 0.8240000009536743, 0.8259999752044678, 0.8333333134651184, 0.8393333554267883, 0.8410000205039978, 0.8410000205039978, 0.8473333120346069, 0.8443333506584167, 0.8500000238418579, 0.8473333120346069, 0.8513333201408386, 0.8516666889190674, 0.8566666841506958, 0.859666645526886, 0.8583333492279053, 0.8569999933242798, 0.8629999756813049, 0.8573333621025085, 0.862666666507721, 0.8640000224113464, 0.8656666874885559, 0.8659999966621399, 0.8683333396911621, 0.8583333492279053, 0.8640000224113464, 0.8679999709129333, 0.8673333525657654, 0.8636666536331177]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8462857007980347, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2936973571777344, 2.191606283187866, 1.7728924751281738, 1.363820195198059, 1.089233636856079, 0.9305893182754517, 0.8307220339775085, 0.817661702632904, 0.7679521441459656, 0.7595149278640747, 0.7134450674057007, 0.6867740750312805, 0.6494657397270203, 0.6243226528167725, 0.6137330532073975, 0.6027384400367737, 0.5953724384307861, 0.5806704163551331, 0.5744483470916748, 0.5547731518745422, 0.5461723208427429, 0.5432990193367004, 0.5225615501403809, 0.5250898003578186, 0.5132364630699158, 0.5020747184753418, 0.4870608448982239, 0.4724697768688202, 0.4601760506629944, 0.45381051301956177, 0.4546332359313965, 0.44654878973960876, 0.43706488609313965, 0.4242917001247406, 0.4101223945617676, 0.41657203435897827, 0.407138854265213, 0.38453710079193115, 0.3780800402164459, 0.3714842200279236, 0.36802080273628235, 0.36952072381973267, 0.3501185178756714, 0.36820703744888306, 0.35746482014656067, 0.338600218296051, 0.33490458130836487], "accuracy": [0.1262712925672531, 0.32505613565444946, 0.44247788190841675, 0.5432571768760681, 0.6313564777374268, 0.6609430909156799, 0.6939638257026672, 0.6931713223457336, 0.7028133869171143, 0.713379979133606, 0.7250033020973206, 0.7432307600975037, 0.7503632307052612, 0.7581561207771301, 0.7644960880279541, 0.7707040309906006, 0.7688548564910889, 0.7799497842788696, 0.7843085527420044, 0.7821952104568481, 0.7897239327430725, 0.7952714562416077, 0.8009510040283203, 0.8010830879211426, 0.8024039268493652, 0.807158887386322, 0.8128384351730347, 0.819442629814148, 0.8210275769233704, 0.8239334225654602, 0.822348415851593, 0.828292191028595, 0.8305375576019287, 0.8363492488861084, 0.8409721255302429, 0.8408400416374207, 0.8433496356010437, 0.8502179384231567, 0.8531237840652466, 0.8520671129226685, 0.8593316674232483, 0.8576145768165588, 0.8642187118530273, 0.8580108284950256, 0.8634262084960938, 0.8652753829956055, 0.872407853603363], "val_loss": [2.2467401027679443, 2.0270440578460693, 1.1733577251434326, 0.9626045823097229, 0.785618007183075, 0.7294631600379944, 0.7083035707473755, 0.6795619130134583, 0.6557540893554688, 0.6363234519958496, 0.5878320932388306, 0.5682334899902344, 0.5547847747802734, 0.5539768934249878, 0.544674813747406, 0.528535008430481, 0.5213121771812439, 0.5184124112129211, 0.5129674673080444, 0.5140917301177979, 0.5024142861366272, 0.49354419112205505, 0.5011498928070068, 0.4831951856613159, 0.48137059807777405, 0.4804479479789734, 0.4613770842552185, 0.44840648770332336, 0.4531806707382202, 0.4508441686630249, 0.4412168860435486, 0.43807151913642883, 0.4285660684108734, 0.4303172528743744, 0.42775505781173706, 0.41651156544685364, 0.418346643447876, 0.4231284260749817, 0.42298200726509094, 0.4236087501049042, 0.4222751557826996, 0.42442044615745544, 0.4450134336948395, 0.42515385150909424, 0.430054247379303, 0.44639965891838074, 0.42229214310646057], "val_accuracy": [0.4230000078678131, 0.45266667008399963, 0.6356666684150696, 0.6896666884422302, 0.7070000171661377, 0.7183333039283752, 0.737666666507721, 0.7310000061988831, 0.7480000257492065, 0.7616666555404663, 0.7670000195503235, 0.7803333401679993, 0.7833333611488342, 0.7860000133514404, 0.7886666655540466, 0.7956666946411133, 0.8040000200271606, 0.8026666641235352, 0.8086666464805603, 0.8086666464805603, 0.8113333582878113, 0.8163333535194397, 0.8149999976158142, 0.8186666369438171, 0.8220000267028809, 0.8240000009536743, 0.8309999704360962, 0.8416666388511658, 0.8396666646003723, 0.8399999737739563, 0.8413333296775818, 0.8460000157356262, 0.847000002861023, 0.8496666550636292, 0.8526666760444641, 0.8576666712760925, 0.8586666584014893, 0.8556666374206543, 0.8566666841506958, 0.8543333411216736, 0.8529999852180481, 0.8656666874885559, 0.8616666793823242, 0.8583333492279053, 0.8616666793823242, 0.862666666507721, 0.8569999933242798]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 1, 1, 1], [0, 3, 7, 8], [0, 3, 6], [0], [1], [0], [2], [0]], "fitness": -0.831428587436676, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), sigma), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6225769519805908, 0.9229065179824829, 0.7124332189559937, 0.6582589745521545, 0.6055400371551514, 0.5636728405952454, 0.5527781844139099, 0.5279253721237183, 0.5376096367835999, 0.5394306182861328, 0.5451863408088684, 0.5353561043739319, 0.5258721709251404, 0.5073501467704773], "accuracy": [0.4488178491592407, 0.6942279934883118, 0.7428345084190369, 0.7685906887054443, 0.7792893648147583, 0.7885351777076721, 0.8001585006713867, 0.805177628993988, 0.8020076751708984, 0.8178576231002808, 0.8072909712791443, 0.8113855719566345, 0.8100647330284119, 0.8096684813499451], "val_loss": [0.834848940372467, 0.6612566709518433, 0.6100398302078247, 0.5629361867904663, 0.5440223813056946, 0.5397907495498657, 0.556547224521637, 0.5439221858978271, 0.552523136138916, 0.5508031845092773, 0.6045579314231873, 0.621805727481842, 0.5526755452156067, 0.593833863735199], "val_accuracy": [0.7110000252723694, 0.7689999938011169, 0.7850000262260437, 0.8053333163261414, 0.812333345413208, 0.8270000219345093, 0.8213333487510681, 0.8240000009536743, 0.8346666693687439, 0.8236666917800903, 0.8306666612625122, 0.8233333230018616, 0.8293333053588867, 0.8246666789054871]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 8, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [61, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [6, 3, 4, 3, 8, 0, 4, 1, 2, 2, 8, 3, 3], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0, 4], [16, 99, 62, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 9, 5, 4, 2, 2, 1, 1, 1, 24, 13, 11, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.add(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), grad), tf.math.sqrt(tf.math.multiply(alpha, beta)))), tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [6, 2, 3, 0, 3, 1, 2, 0, 2, 0, 7, 2, 8], [0, 1, 0, 2, 0, 1, 3, 3, 3, 1], [39, 39, 58], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 0, 8], [0, 3, 1, 3], [16, 16], [0, 1], [5], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 2, 1, 4, 1, 4, 2, 8], [0, 0, 3, 3, 0, 0, 3, 1, 2, 0, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 13, 10, 3, 11, 7, 4, 1, 2, 1, 1, 1, 22, 11, 11, 6], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad))))), tf.math.add(tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(grad, grad)), tf.math.sqrt(alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(grad))), tf.math.sqrt(alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(sigma, sigma)), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 4, 8, 8], [0, 1, 0, 2, 1], [39, 57], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 2, 8, 1, 4, 1, 4, 9, 8], [0, 0, 4, 3, 0, 0, 0, 1, 2, 3], [61, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 2, 10, 6, 4, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.sqrt(grad)))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.sqrt(grad), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10302469879388809, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 2, 3], [0, 1, 0, 2, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 2, 0, 3, 5, 3], [0, 2, 0, 3, 1], [63, 97], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 8, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(grad, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma))), tf.math.sqrt(tf.math.square(alpha)))), beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 10, 5, 5, 2, 12, 7, 5, 2, 2, 1, 1, 1, 22, 12, 10, 6], "tree_depth": 24}]