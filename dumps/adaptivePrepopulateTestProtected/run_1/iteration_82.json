[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8619999885559082, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221963882446289, 1.8648204803466797, 1.3944038152694702, 1.0865275859832764, 0.9460248351097107, 0.8383449912071228, 0.7566128969192505, 0.714857816696167, 0.6943054795265198, 0.6464058756828308, 0.628366231918335, 0.601309597492218, 0.5838659405708313, 0.5703074336051941, 0.5435993075370789, 0.5321993231773376, 0.523681104183197, 0.5074115991592407, 0.5040233135223389, 0.49295055866241455, 0.4780806303024292, 0.4729745388031006, 0.45536351203918457, 0.45846620202064514, 0.4432831108570099, 0.4398575723171234, 0.43517911434173584, 0.4219226539134979, 0.4067666530609131, 0.4114627540111542, 0.4046706557273865, 0.40316906571388245, 0.3965134620666504, 0.3889254629611969, 0.3839194178581238, 0.3757295608520508, 0.36567234992980957, 0.3587123453617096, 0.3605990707874298, 0.3536872863769531, 0.350815087556839, 0.35042354464530945, 0.34732067584991455, 0.3315112292766571, 0.3290683627128601, 0.32320860028266907, 0.3286910951137543, 0.32023462653160095, 0.3137530982494354, 0.30344119668006897, 0.30534735321998596, 0.3045053780078888, 0.2955589294433594, 0.29209208488464355, 0.29360559582710266, 0.2907252609729767, 0.2812282145023346, 0.26876121759414673, 0.2643688917160034, 0.2689194679260254, 0.26472675800323486, 0.2607065737247467, 0.2567240297794342, 0.2527022063732147, 0.2537801265716553, 0.24812312424182892, 0.23986679315567017, 0.2377845197916031, 0.23431316018104553, 0.23397929966449738, 0.2314082235097885, 0.23094919323921204, 0.22873471677303314, 0.2200201153755188, 0.2196885645389557, 0.22036157548427582, 0.21268802881240845, 0.20460499823093414, 0.20546992123126984], "accuracy": [0.2763175368309021, 0.4892352521419525, 0.566239595413208, 0.6219785809516907, 0.659490168094635, 0.6996433734893799, 0.724739134311676, 0.7409853339195251, 0.7425703406333923, 0.7647602558135986, 0.7763835787773132, 0.7858935594558716, 0.7868181467056274, 0.7938185334205627, 0.8033285140991211, 0.8082155585289001, 0.8099326491355896, 0.817989706993103, 0.8187822103500366, 0.8208954930305481, 0.8261788487434387, 0.8284242749214172, 0.8339717388153076, 0.8337075710296631, 0.8416325449943542, 0.8404437899589539, 0.8500858545303345, 0.8491612672805786, 0.8555012345314026, 0.8485008478164673, 0.8549728989601135, 0.8544445633888245, 0.8594637513160706, 0.8573504090309143, 0.8642187118530273, 0.8648791313171387, 0.8697662353515625, 0.8735966086387634, 0.8714832663536072, 0.8725399374961853, 0.8739928603172302, 0.8765024542808533, 0.8739928603172302, 0.8794082403182983, 0.8850878477096558, 0.8840311765670776, 0.8813894987106323, 0.8861445188522339, 0.8836349248886108, 0.8908994793891907, 0.8931449055671692, 0.8905032277107239, 0.8930128216743469, 0.8945978283882141, 0.8953903317451477, 0.8972394466400146, 0.9008057117462158, 0.9031832218170166, 0.9056927561759949, 0.9033153057098389, 0.9066173434257507, 0.9097873568534851, 0.9079381823539734, 0.9105798602104187, 0.9099194407463074, 0.9078060984611511, 0.9149385690689087, 0.915070652961731, 0.9174481630325317, 0.915070652961731, 0.91559898853302, 0.9162594079971313, 0.9149385690689087, 0.920089840888977, 0.919561505317688, 0.920089840888977, 0.9245806336402893, 0.9233918786048889, 0.9251089692115784], "val_loss": [2.04140567779541, 1.5290871858596802, 1.0677686929702759, 0.860117495059967, 0.7718791365623474, 0.7202537655830383, 0.6750935316085815, 0.6404495239257812, 0.6229217052459717, 0.601101815700531, 0.5782784819602966, 0.5649182796478271, 0.5546713471412659, 0.54543536901474, 0.5327491164207458, 0.5244882702827454, 0.5112632513046265, 0.5049855709075928, 0.49960270524024963, 0.488200306892395, 0.48261332511901855, 0.47651636600494385, 0.4711776673793793, 0.46554645895957947, 0.4649035930633545, 0.45431238412857056, 0.45151180028915405, 0.44933179020881653, 0.4482886493206024, 0.4466979205608368, 0.4346286952495575, 0.4329703748226166, 0.43554842472076416, 0.4259319603443146, 0.4237135946750641, 0.42035093903541565, 0.4175168573856354, 0.41454005241394043, 0.4133496880531311, 0.41636767983436584, 0.4096452593803406, 0.41324758529663086, 0.4067087471485138, 0.4018084406852722, 0.40166357159614563, 0.40854883193969727, 0.3987271189689636, 0.39895474910736084, 0.39907345175743103, 0.4021447002887726, 0.3948042094707489, 0.3997631371021271, 0.39566537737846375, 0.39864492416381836, 0.3976137340068817, 0.3903163969516754, 0.39152660965919495, 0.3899213969707489, 0.39413750171661377, 0.3863145411014557, 0.38935717940330505, 0.38469547033309937, 0.3895990252494812, 0.3860411047935486, 0.3883359730243683, 0.3863375782966614, 0.3899093568325043, 0.3849950432777405, 0.38946276903152466, 0.38702303171157837, 0.390604704618454, 0.38982295989990234, 0.38417235016822815, 0.3853153586387634, 0.38496094942092896, 0.39295727014541626, 0.3877900242805481, 0.38694828748703003, 0.3912259042263031], "val_accuracy": [0.5336666703224182, 0.6443333625793457, 0.6740000247955322, 0.703000009059906, 0.7236666679382324, 0.7443333268165588, 0.7513333559036255, 0.7649999856948853, 0.7739999890327454, 0.7770000100135803, 0.7950000166893005, 0.7963333129882812, 0.7979999780654907, 0.7993333339691162, 0.8056666851043701, 0.812666654586792, 0.8180000185966492, 0.8180000185966492, 0.8186666369438171, 0.8273333311080933, 0.8320000171661377, 0.8323333263397217, 0.8306666612625122, 0.8379999995231628, 0.8396666646003723, 0.8396666646003723, 0.8443333506584167, 0.843999981880188, 0.846666693687439, 0.843666672706604, 0.8496666550636292, 0.8513333201408386, 0.8486666679382324, 0.8560000061988831, 0.8536666631698608, 0.8556666374206543, 0.856333315372467, 0.8539999723434448, 0.8586666584014893, 0.8603333234786987, 0.8579999804496765, 0.8536666631698608, 0.8619999885559082, 0.8606666922569275, 0.8610000014305115, 0.8579999804496765, 0.8603333234786987, 0.8633333444595337, 0.8636666536331177, 0.8633333444595337, 0.8643333315849304, 0.8579999804496765, 0.8659999966621399, 0.8640000224113464, 0.8669999837875366, 0.8653333187103271, 0.8659999966621399, 0.8683333396911621, 0.8663333058357239, 0.8673333525657654, 0.8686666488647461, 0.8676666617393494, 0.8686666488647461, 0.8686666488647461, 0.8679999709129333, 0.871666669845581, 0.8683333396911621, 0.8706666827201843, 0.8690000176429749, 0.8723333477973938, 0.8703333139419556, 0.871666669845581, 0.871999979019165, 0.875, 0.8726666569709778, 0.8733333349227905, 0.871666669845581, 0.8733333349227905, 0.8726666569709778]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8445714116096497, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2929089069366455, 2.1846253871917725, 1.751489520072937, 1.3472901582717896, 1.0812846422195435, 0.9420996308326721, 0.8508275747299194, 0.8105757832527161, 0.760823667049408, 0.7369952201843262, 0.7160851955413818, 0.7064451575279236, 0.6755233407020569, 0.6405935287475586, 0.6306883096694946, 0.6113282442092896, 0.5854724645614624, 0.5837472677230835, 0.5593664646148682, 0.5611790418624878, 0.5428047180175781, 0.5404241681098938, 0.521220862865448, 0.5029440522193909, 0.5051177740097046, 0.4961380660533905, 0.49122026562690735, 0.4722854495048523, 0.4674461781978607, 0.4617653787136078, 0.4457632005214691, 0.4493092894554138, 0.43459317088127136, 0.42480477690696716, 0.43201252818107605, 0.4063895344734192, 0.4049963057041168, 0.40145164728164673, 0.3904207944869995, 0.3830620050430298, 0.3741982877254486, 0.37588027119636536, 0.3674323856830597, 0.36395955085754395, 0.356067031621933, 0.3484118580818176, 0.34240469336509705, 0.34862977266311646, 0.3389146029949188, 0.33015793561935425, 0.33328691124916077, 0.3196815848350525, 0.32215163111686707, 0.3172323405742645, 0.3069349229335785, 0.3121739327907562, 0.3118543028831482, 0.3039186894893646, 0.3105740249156952, 0.2989204227924347, 0.3013190031051636, 0.30411097407341003, 0.29785192012786865], "accuracy": [0.12442214041948318, 0.3323206901550293, 0.4465724527835846, 0.5486725568771362, 0.6390172839164734, 0.6641130447387695, 0.6984546184539795, 0.7043983340263367, 0.711530864238739, 0.722229540348053, 0.7395324110984802, 0.7234182953834534, 0.7489103078842163, 0.7646281719207764, 0.755118191242218, 0.769911527633667, 0.7820631265640259, 0.7798177003860474, 0.7887993454933167, 0.7857614755630493, 0.791969358921051, 0.7930260300636292, 0.8014793395996094, 0.8037247657775879, 0.8058380484580994, 0.8104609847068787, 0.8145555257797241, 0.8177255392074585, 0.8212917447090149, 0.8182538747787476, 0.8241975903511047, 0.8271034359931946, 0.8289526104927063, 0.8387266993522644, 0.8391229510307312, 0.841500461101532, 0.843481719493866, 0.848368763923645, 0.8508783578872681, 0.854708731174469, 0.8581429123878479, 0.8584070801734924, 0.8581429123878479, 0.8584070801734924, 0.8643507957458496, 0.8590674996376038, 0.8654074668884277, 0.8605204224586487, 0.8650112152099609, 0.8672566413879395, 0.8648791313171387, 0.8751816153526306, 0.8691058158874512, 0.8698983192443848, 0.8757099509239197, 0.8726720213890076, 0.8771628737449646, 0.8762382864952087, 0.8778232932090759, 0.8809932470321655, 0.8787478804588318, 0.8762382864952087, 0.8820499181747437], "val_loss": [2.2448275089263916, 2.0105044841766357, 1.1294138431549072, 0.8942739367485046, 0.7890810370445251, 0.7289789319038391, 0.6981828808784485, 0.6849766969680786, 0.6641860604286194, 0.6458917260169983, 0.588016152381897, 0.5808683037757874, 0.5814967155456543, 0.5598951578140259, 0.5483666062355042, 0.5465568900108337, 0.5379704833030701, 0.5169162750244141, 0.49921858310699463, 0.48862093687057495, 0.4889996647834778, 0.4726024568080902, 0.4685983955860138, 0.4608914852142334, 0.45852383971214294, 0.45449090003967285, 0.44862133264541626, 0.44753238558769226, 0.43776237964630127, 0.42708393931388855, 0.42843881249427795, 0.43124404549598694, 0.4184098243713379, 0.43383485078811646, 0.4245162308216095, 0.4192736744880676, 0.4152219295501709, 0.4088687300682068, 0.3973258435726166, 0.40125948190689087, 0.39691361784935, 0.39259058237075806, 0.3950563967227936, 0.39406511187553406, 0.4026629328727722, 0.39464032649993896, 0.3954046368598938, 0.3881855905056, 0.3948797583580017, 0.40770450234413147, 0.39564403891563416, 0.39781588315963745, 0.4099932014942169, 0.4084519147872925, 0.4346020519733429, 0.43279263377189636, 0.3966449499130249, 0.4070500135421753, 0.44021865725517273, 0.40991446375846863, 0.39992550015449524, 0.41691648960113525, 0.4413551092147827], "val_accuracy": [0.4013333320617676, 0.4623333215713501, 0.6343333125114441, 0.6790000200271606, 0.7086666822433472, 0.7210000157356262, 0.721666693687439, 0.7323333621025085, 0.734000027179718, 0.7583333253860474, 0.7716666460037231, 0.7699999809265137, 0.7743333578109741, 0.7963333129882812, 0.7913333177566528, 0.7873333096504211, 0.7953333258628845, 0.8019999861717224, 0.8029999732971191, 0.8193333148956299, 0.8080000281333923, 0.8233333230018616, 0.8223333358764648, 0.8270000219345093, 0.8320000171661377, 0.8360000252723694, 0.8316666483879089, 0.8349999785423279, 0.8356666564941406, 0.8450000286102295, 0.8529999852180481, 0.8429999947547913, 0.8539999723434448, 0.8483333587646484, 0.8536666631698608, 0.8516666889190674, 0.8583333492279053, 0.8569999933242798, 0.8586666584014893, 0.859666645526886, 0.8576666712760925, 0.859333336353302, 0.8610000014305115, 0.8569999933242798, 0.8560000061988831, 0.8576666712760925, 0.859000027179718, 0.8636666536331177, 0.862666666507721, 0.859000027179718, 0.8650000095367432, 0.8610000014305115, 0.8610000014305115, 0.8616666793823242, 0.8579999804496765, 0.8656666874885559, 0.8690000176429749, 0.8700000047683716, 0.8666666746139526, 0.862666666507721, 0.8650000095367432, 0.8610000014305115, 0.8613333106040955]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 3, 9, 5, 4, 7, 3, 5, 0, 4, 7, 5], [0, 1, 5, 1, 5, 0], [0, 30, 77], [1], [0], [2], [0]], "fitness": -0.8248571157455444, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(alpha, grad))), alpha), tf.math.add(tf.math.square(grad), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.564103126525879, 0.8475714921951294, 0.679707407951355, 0.6270542740821838, 0.6538708209991455, 0.5824542045593262, 0.5802380442619324, 0.5655714869499207, 0.5597946643829346, 0.5554900765419006, 0.5585494637489319, 0.5568877458572388, 0.5694822669029236, 0.5720643997192383, 0.5494222640991211, 0.5280982255935669, 0.5224766135215759, 0.5038048624992371, 0.5126140117645264, 0.5344252586364746, 0.5467069149017334, 0.5598711371421814, 0.5249165296554565, 0.4970674514770508], "accuracy": [0.4768194556236267, 0.7206445932388306, 0.7536653280258179, 0.7700436115264893, 0.7672698497772217, 0.7849689722061157, 0.7924976944923401, 0.7964601516723633, 0.8099326491355896, 0.8020076751708984, 0.7969884872436523, 0.8107251524925232, 0.798309326171875, 0.8103289008140564, 0.8158763647079468, 0.8105930685997009, 0.8168009519577026, 0.8232730031013489, 0.8345000743865967, 0.8289526104927063, 0.8173292875289917, 0.8207634687423706, 0.8142913579940796, 0.8335754871368408], "val_loss": [0.8792098760604858, 0.6164886355400085, 0.5689165592193604, 0.6659976243972778, 0.5244192481040955, 0.5400222539901733, 0.5395944714546204, 0.5437451601028442, 0.6009932160377502, 0.5739614963531494, 0.5891135334968567, 0.5760257840156555, 0.6284427046775818, 0.649042546749115, 0.5336283445358276, 0.5281875729560852, 0.520246148109436, 0.569330632686615, 0.61602783203125, 0.615155816078186, 0.6068487167358398, 0.569486677646637, 0.5453281998634338, 0.5735386610031128], "val_accuracy": [0.7226666808128357, 0.7836666703224182, 0.7990000247955322, 0.7876666784286499, 0.8133333325386047, 0.8190000057220459, 0.8136666417121887, 0.8186666369438171, 0.8040000200271606, 0.8133333325386047, 0.824999988079071, 0.8173333406448364, 0.8199999928474426, 0.8176666498184204, 0.8353333473205566, 0.8306666612625122, 0.8336666822433472, 0.8360000252723694, 0.843999981880188, 0.8343333601951599, 0.831333339214325, 0.8299999833106995, 0.8379999995231628, 0.8353333473205566]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 18, 12, 6, 3, 1, 0, 1, 0], "tree_depth": 19}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 2, 3, 2, 0, 8], [0, 1, 0, 2, 0, 2], [39, 39, 92], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 2, 5], [3, 2, 0, 3], [16, 21], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 6, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 59, 99, 90, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 3, 9, 5, 4, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.math.negative(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), grad), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 24], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 9, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 9, 8, 1, 4, 1, 4, 2, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 1, 0, 1, 1, 2, 1, 1, 1, 16, 9, 7, 6], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 9, 2, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 4, 0], [0, 0, 0, 3, 0, 0, 3, 0, 2, 0], [16, 99, 96, 99, 61, 1, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 9, 5, 4, 2, 2, 1, 1, 1, 20, 10, 10, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.pow(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 6, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 0, 0, 3, 5], [0, 2, 0, 3], [29, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 3, 3, 1, 4, 0], [16, 99, 29, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.pow(sigma, sigma)))), alpha), tf.math.add(tf.math.sqrt(grad), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]