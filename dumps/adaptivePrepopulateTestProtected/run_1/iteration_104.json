[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8648571372032166, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2928078174591064, 2.189657688140869, 1.76884126663208, 1.3645063638687134, 1.0808244943618774, 0.9272909164428711, 0.8434523344039917, 0.8107970952987671, 0.7643325328826904, 0.7512409687042236, 0.6954412460327148, 0.6690065264701843, 0.6494786739349365, 0.62333744764328, 0.5988723039627075, 0.5793203115463257, 0.5759233236312866, 0.5692387819290161, 0.5568011403083801, 0.5192962288856506, 0.5096902251243591, 0.5063089728355408, 0.4978909194469452, 0.4843464493751526, 0.4632103443145752, 0.45938780903816223, 0.45090174674987793, 0.44998905062675476, 0.42065557837486267, 0.4326464533805847, 0.42177554965019226, 0.40886780619621277, 0.40434813499450684, 0.40733471512794495, 0.3979133069515228, 0.3789920210838318, 0.36834517121315, 0.36242935061454773, 0.36028000712394714, 0.35105106234550476, 0.34310320019721985, 0.3385322391986847, 0.33099767565727234, 0.32477501034736633, 0.32874175906181335, 0.3244923949241638, 0.3191696107387543, 0.3175404369831085, 0.29240188002586365, 0.2892953157424927, 0.2876351773738861, 0.28030315041542053], "accuracy": [0.12798838317394257, 0.3315281867980957, 0.43851539492607117, 0.5443138480186462, 0.63096022605896, 0.6679434776306152, 0.6935675740242004, 0.7042662501335144, 0.7020208835601807, 0.7107383608818054, 0.7349095344543457, 0.7371549606323242, 0.7469290494918823, 0.7685906887054443, 0.7740060687065125, 0.780610203742981, 0.7858935594558716, 0.7833839654922485, 0.7874785661697388, 0.802271842956543, 0.8043851256370544, 0.8061022162437439, 0.8070268034934998, 0.8124422430992126, 0.8202351331710815, 0.8310658931732178, 0.8267071843147278, 0.8240655064582825, 0.8383304476737976, 0.8405758738517761, 0.8401796221733093, 0.8428213000297546, 0.8433496356010437, 0.8408400416374207, 0.8451988101005554, 0.852331280708313, 0.8588033318519592, 0.8574824929237366, 0.8615770936012268, 0.8667283058166504, 0.8660678863525391, 0.8733324408531189, 0.8722757697105408, 0.8729361891746521, 0.8702945709228516, 0.8697662353515625, 0.8761062026023865, 0.871879518032074, 0.8842953443527222, 0.8828424215316772, 0.8858803510665894, 0.8869370222091675], "val_loss": [2.2465670108795166, 2.0183122158050537, 1.132068157196045, 0.9018047451972961, 0.7624956965446472, 0.6935989856719971, 0.6564775109291077, 0.6340720057487488, 0.6418788433074951, 0.6072247624397278, 0.5833419561386108, 0.5611602663993835, 0.5304571390151978, 0.5236657857894897, 0.5199995636940002, 0.5072045922279358, 0.5068159699440002, 0.5002750158309937, 0.4803427457809448, 0.4758804440498352, 0.4645880460739136, 0.46001139283180237, 0.458303302526474, 0.4505574405193329, 0.4388689398765564, 0.43780261278152466, 0.42452067136764526, 0.42212605476379395, 0.4319629669189453, 0.4228146970272064, 0.41736751794815063, 0.42017918825149536, 0.42316383123397827, 0.41178953647613525, 0.41346126794815063, 0.41284847259521484, 0.42212092876434326, 0.4102315306663513, 0.40186092257499695, 0.3946866989135742, 0.39285391569137573, 0.3874656856060028, 0.40048080682754517, 0.3896748721599579, 0.38967961072921753, 0.3939678966999054, 0.39492088556289673, 0.389884352684021, 0.3891986608505249, 0.3929906487464905, 0.40343138575553894, 0.4051724374294281], "val_accuracy": [0.414000004529953, 0.4546666741371155, 0.6513333320617676, 0.6819999814033508, 0.7193333506584167, 0.7383333444595337, 0.7483333349227905, 0.7570000290870667, 0.7486666440963745, 0.7676666378974915, 0.7643333077430725, 0.7886666655540466, 0.7950000166893005, 0.8046666383743286, 0.8083333373069763, 0.8063333630561829, 0.8050000071525574, 0.8143333196640015, 0.8159999847412109, 0.8213333487510681, 0.8379999995231628, 0.840666651725769, 0.8333333134651184, 0.8423333168029785, 0.8483333587646484, 0.8460000157356262, 0.8529999852180481, 0.8506666421890259, 0.8493333458900452, 0.8533333539962769, 0.8576666712760925, 0.8566666841506958, 0.8560000061988831, 0.8579999804496765, 0.8553333282470703, 0.859333336353302, 0.8560000061988831, 0.8636666536331177, 0.8636666536331177, 0.8619999885559082, 0.8679999709129333, 0.8726666569709778, 0.8690000176429749, 0.875333309173584, 0.8726666569709778, 0.8736666440963745, 0.878333330154419, 0.8766666650772095, 0.8766666650772095, 0.875, 0.8736666440963745, 0.8759999871253967]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8591428399085999, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2214200496673584, 1.8602849245071411, 1.3894439935684204, 1.0881308317184448, 0.9351317286491394, 0.8336306214332581, 0.7704687714576721, 0.7232329249382019, 0.6862072348594666, 0.6562620997428894, 0.6386635303497314, 0.6023793816566467, 0.5854885578155518, 0.5621164441108704, 0.5503260493278503, 0.5404629707336426, 0.5291327834129333, 0.5108067393302917, 0.5069797039031982, 0.49291470646858215, 0.48512041568756104, 0.471933513879776, 0.4644095003604889, 0.4540596604347229, 0.4436812996864319, 0.43903848528862, 0.4270492196083069, 0.41912639141082764, 0.4101424515247345, 0.3971087634563446, 0.40575239062309265, 0.3912791609764099, 0.39000773429870605, 0.38605496287345886, 0.37470096349716187, 0.37603825330734253, 0.36716917157173157, 0.36718130111694336, 0.3542272448539734, 0.348792165517807, 0.3493388295173645, 0.3437573313713074, 0.33624038100242615, 0.3342258930206299, 0.3281470537185669, 0.32336241006851196, 0.32105422019958496, 0.3146315813064575, 0.3164016008377075, 0.29854831099510193, 0.30386295914649963, 0.29546064138412476, 0.29289549589157104, 0.28778210282325745, 0.28361189365386963, 0.2758544087409973, 0.2823248505592346], "accuracy": [0.27327960729599, 0.49887728691101074, 0.5585787892341614, 0.615770697593689, 0.6676793098449707, 0.6954167485237122, 0.7214370369911194, 0.7386078238487244, 0.7453441023826599, 0.7604015469551086, 0.7705719470977783, 0.7807422876358032, 0.7864218950271606, 0.7969884872436523, 0.7976489067077637, 0.8041210174560547, 0.8105930685997009, 0.81548011302948, 0.813498854637146, 0.8239334225654602, 0.8325188159942627, 0.8317263126373291, 0.8314621448516846, 0.8407079577445984, 0.8462554216384888, 0.8457271456718445, 0.8481045961380005, 0.852331280708313, 0.854708731174469, 0.8581429123878479, 0.8577466607093811, 0.8578787446022034, 0.8640866279602051, 0.8617091774940491, 0.8663320541381836, 0.8696341514587402, 0.8722757697105408, 0.8705587387084961, 0.8737286925315857, 0.8775591254234314, 0.8739928603172302, 0.876370370388031, 0.8809932470321655, 0.8798044919967651, 0.8809932470321655, 0.8840311765670776, 0.8819178342819214, 0.889050304889679, 0.8883898854255676, 0.8947299122810364, 0.8943336606025696, 0.8928807377815247, 0.8931449055671692, 0.8963148593902588, 0.8957865834236145, 0.9022586345672607, 0.8988244533538818], "val_loss": [2.035041570663452, 1.5041331052780151, 1.0380548238754272, 0.8353784084320068, 0.7424177527427673, 0.6888565421104431, 0.6390417814254761, 0.6091005802154541, 0.5810686349868774, 0.5596169829368591, 0.5401114225387573, 0.5227149128913879, 0.5072686076164246, 0.5002644658088684, 0.4867015480995178, 0.4816063642501831, 0.47892528772354126, 0.4730713665485382, 0.4577769637107849, 0.4471745491027832, 0.4423547387123108, 0.439523309469223, 0.4294402003288269, 0.4262927174568176, 0.4180043935775757, 0.4156472086906433, 0.4096298813819885, 0.4064409136772156, 0.4019145369529724, 0.3976929783821106, 0.39208880066871643, 0.3916173577308655, 0.386860191822052, 0.38562020659446716, 0.38230395317077637, 0.3796168565750122, 0.37639400362968445, 0.3800162672996521, 0.3751750588417053, 0.37285277247428894, 0.3684029281139374, 0.3616606891155243, 0.36704641580581665, 0.36217284202575684, 0.3569703698158264, 0.36377599835395813, 0.36060401797294617, 0.3564195930957794, 0.3532664477825165, 0.35456711053848267, 0.3555811047554016, 0.34448421001434326, 0.3497477173805237, 0.3524751663208008, 0.3489707112312317, 0.35081982612609863, 0.3477986752986908], "val_accuracy": [0.5566666722297668, 0.6673333048820496, 0.6883333325386047, 0.7066666483879089, 0.7406666874885559, 0.7540000081062317, 0.7689999938011169, 0.7766666412353516, 0.7879999876022339, 0.7943333387374878, 0.8019999861717224, 0.8086666464805603, 0.8173333406448364, 0.8193333148956299, 0.8213333487510681, 0.8246666789054871, 0.8289999961853027, 0.8253333568572998, 0.8343333601951599, 0.8413333296775818, 0.8399999737739563, 0.8453333377838135, 0.8489999771118164, 0.8479999899864197, 0.8510000109672546, 0.8500000238418579, 0.859333336353302, 0.859000027179718, 0.8629999756813049, 0.8573333621025085, 0.8613333106040955, 0.8636666536331177, 0.8640000224113464, 0.8600000143051147, 0.8700000047683716, 0.8650000095367432, 0.8663333058357239, 0.8569999933242798, 0.8709999918937683, 0.8676666617393494, 0.8703333139419556, 0.8690000176429749, 0.8733333349227905, 0.8756666779518127, 0.874666690826416, 0.8679999709129333, 0.871999979019165, 0.8769999742507935, 0.8766666650772095, 0.8763333559036255, 0.878333330154419, 0.8816666603088379, 0.8796666860580444, 0.8766666650772095, 0.8799999952316284, 0.8790000081062317, 0.8769999742507935]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 0], [0], [0], [1], [0], [2], [0]], "fitness": -0.831428587436676, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5448988676071167, 0.8078675866127014, 0.7132856249809265, 0.6352913975715637, 0.5735010504722595, 0.5484340786933899, 0.5245362520217896, 0.5037176012992859, 0.49080297350883484, 0.46251392364501953, 0.461875319480896, 0.454243004322052, 0.44413304328918457, 0.4370441734790802, 0.4847453236579895, 0.4557740092277527, 0.4523126184940338, 0.4549727737903595, 0.4441485106945038, 0.4818493127822876], "accuracy": [0.4830273389816284, 0.7224937081336975, 0.7351737022399902, 0.7685906887054443, 0.7858935594558716, 0.7960638999938965, 0.8079513907432556, 0.8166688680648804, 0.8193105459213257, 0.8269713521003723, 0.8387266993522644, 0.8366134166717529, 0.8325188159942627, 0.8413683772087097, 0.8383304476737976, 0.8378021121025085, 0.844010055065155, 0.8430854678153992, 0.8459912538528442, 0.848368763923645], "val_loss": [0.7792777419090271, 0.6060276627540588, 0.5676941871643066, 0.5193763971328735, 0.47556063532829285, 0.479002982378006, 0.48834848403930664, 0.48305371403694153, 0.4826488494873047, 0.5154767632484436, 0.5115419030189514, 0.5001177191734314, 0.5100589394569397, 0.5147496461868286, 0.5916667580604553, 0.5072965621948242, 0.5285435318946838, 0.49315327405929565, 0.5863712430000305, 0.5929262638092041], "val_accuracy": [0.7366666793823242, 0.7576666474342346, 0.7933333516120911, 0.8166666626930237, 0.8246666789054871, 0.8276666402816772, 0.8266666531562805, 0.8263333439826965, 0.8330000042915344, 0.831333339214325, 0.8429999947547913, 0.840666651725769, 0.8423333168029785, 0.8370000123977661, 0.8500000238418579, 0.8396666646003723, 0.8383333086967468, 0.8420000076293945, 0.8473333120346069, 0.8353333473205566]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [85, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [3, 7, 3, 1, 5, 2, 1, 5], [0, 6, 5, 2, 6, 3, 2], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 8, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 2, 0, 3, 1, 2, 0], [16, 15, 96, 35, 61, 36]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 2, 15, 8, 7, 1, 1, 0, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.multiply(tf.math.subtract(grad, tf.math.square(tf.math.add(tf.math.subtract(tf.math.square(beta), grad), sigma))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3040592670440674, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 0, 1, 0, 2], [68, 99, 27], [0, 1, 1], [2], [0, 5], [16, 16], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 4, 7, 0, 2, 2, 3, 0], [0, 3, 5, 3, 4, 5], [32, 49], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 2, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 4], [0, 74, 76, 19, 91, 19]], "fitness": -0.09028571099042892, "mapping_values": [1, 1, 0, 1, 0, 3, 1, 2, 1, 14, 8, 6, 1, 16, 8, 8, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), sigma), tf.math.negative(tf.math.add(grad, tf.math.add(sigma, tf.math.multiply(tf.math.negative(grad), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha)))", "other_info": {"loss": [2.3094613552093506, 2.3110575675964355, 2.310250759124756, 2.3094611167907715, 2.311209201812744, 2.310652732849121], "accuracy": [0.09245806187391281, 0.09259014576673508, 0.0936468094587326, 0.0940430611371994, 0.09126931428909302, 0.0882314071059227], "val_loss": [2.3094658851623535, 2.3094658851623535, 2.3094658851623535, 2.3094658851623535, 2.3094658851623535, 2.3094658851623535], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 2, 0, 3, 5], [0, 2, 2, 3], [16, 16], [0, 1], [8], [0], [0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 4], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0, 4], [16, 99, 96, 99, 61, 63]], "fitness": -0.08942857384681702, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 1, 2, 1, 1, 1, 23, 12, 11, 5], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(grad, tf.math.pow(sigma, tf.math.add(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma))), tf.math.pow(alpha, beta))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), grad)", "other_info": {"loss": [2.309572696685791, 2.310188055038452, 2.310472011566162, 2.310328960418701, 2.3098206520080566, 2.3090991973876953], "accuracy": [0.09140139818191528, 0.08981640636920929, 0.08902391046285629, 0.09509972482919693, 0.09008057415485382, 0.09470347315073013], "val_loss": [2.3092761039733887, 2.3092761039733887, 2.3092761039733887, 2.3092761039733887, 2.3092761039733887, 2.3092761039733887], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 3, 1, 9, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.08514285832643509, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 11, 5, 6, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), tf.math.multiply(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [3.6294153842406195e+17, 4.112203724452004e+17, 4.15329968952705e+17, 4.108239297839104e+17, 4.115333209422561e+17, 4.135805772334367e+17], "accuracy": [0.09800554811954498, 0.08968432247638702, 0.09642054885625839, 0.09628847241401672, 0.09166556596755981, 0.09787346422672272], "val_loss": [3.683313444234199e+17, 3.683313444234199e+17, 3.683313444234199e+17, 3.683313444234199e+17, 3.683313444234199e+17, 3.683313444234199e+17], "val_accuracy": [0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492]}}]