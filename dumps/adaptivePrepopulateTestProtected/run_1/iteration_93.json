[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1], [0, 4, 5], [0, 5], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8611428737640381, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2941713333129883, 2.1925008296966553, 1.7827719449996948, 1.353124976158142, 1.0793719291687012, 0.9168225526809692, 0.8304638862609863, 0.8018489480018616, 0.7689201235771179, 0.7411774396896362, 0.703361988067627, 0.6638555526733398, 0.650017261505127, 0.6245752573013306, 0.6146736741065979, 0.6017284393310547, 0.5867467522621155, 0.5709040760993958, 0.5663771033287048, 0.5564780831336975, 0.5263698697090149, 0.5247060060501099, 0.5047082901000977, 0.5088227391242981, 0.5004432201385498, 0.5033438801765442, 0.4872472584247589, 0.46847760677337646, 0.47223058342933655, 0.45413732528686523, 0.44641241431236267, 0.43226516246795654, 0.4199683368206024, 0.4200464189052582, 0.3963995575904846, 0.39409497380256653, 0.3943747282028198, 0.38647711277008057, 0.37569373846054077, 0.3729212284088135, 0.36596933007240295, 0.3550846576690674, 0.3507107198238373, 0.35093027353286743, 0.33496004343032837, 0.3293522894382477, 0.33390218019485474, 0.32969236373901367, 0.3240983188152313, 0.3207867741584778, 0.31168630719184875, 0.3116525411605835, 0.3081305921077728, 0.3054962158203125, 0.3057875335216522, 0.30460497736930847, 0.2902768552303314, 0.30090808868408203], "accuracy": [0.12376172095537186, 0.33086779713630676, 0.4379870593547821, 0.5375775694847107, 0.6259410977363586, 0.6602826714515686, 0.7005679607391357, 0.7036058902740479, 0.7071720957756042, 0.7113987803459167, 0.7297582626342773, 0.7441553473472595, 0.7432307600975037, 0.7544577717781067, 0.7553823590278625, 0.76542067527771, 0.7751948237419128, 0.7841764688491821, 0.785101056098938, 0.7833839654922485, 0.791441023349762, 0.7981772422790527, 0.8010830879211426, 0.7973847389221191, 0.8016114234924316, 0.802800178527832, 0.8107251524925232, 0.8164047002792358, 0.8198388814926147, 0.8247259259223938, 0.8285563588142395, 0.8350284099578857, 0.8348963260650635, 0.8352925777435303, 0.8449346423149109, 0.8461233377456665, 0.8510104417800903, 0.8555012345314026, 0.8516708612442017, 0.852859616279602, 0.859199583530426, 0.8602562546730042, 0.8636903762817383, 0.8667283058166504, 0.8644828796386719, 0.8664641380310059, 0.869502067565918, 0.8684453964233398, 0.8714832663536072, 0.8751816153526306, 0.8784837126731873, 0.8771628737449646, 0.878351628780365, 0.8820499181747437, 0.8782195448875427, 0.8824461698532104, 0.8803328275680542, 0.8820499181747437], "val_loss": [2.245922803878784, 2.022167205810547, 1.1466760635375977, 0.8856560587882996, 0.7624975442886353, 0.7195354700088501, 0.6893900036811829, 0.6837712526321411, 0.6365334391593933, 0.6180505156517029, 0.6009416580200195, 0.593618631362915, 0.574267566204071, 0.5685246586799622, 0.5650002956390381, 0.5448533296585083, 0.538676917552948, 0.5384659767150879, 0.539456844329834, 0.5218061804771423, 0.5121314525604248, 0.5143122673034668, 0.505169689655304, 0.49290043115615845, 0.4922885000705719, 0.49303174018859863, 0.4760672152042389, 0.468421071767807, 0.4733767807483673, 0.45778799057006836, 0.4494228661060333, 0.45013627409935, 0.45874008536338806, 0.4613741338253021, 0.4512336552143097, 0.4514119327068329, 0.4498739540576935, 0.44628483057022095, 0.4523963928222656, 0.4448588192462921, 0.4420901834964752, 0.4396926164627075, 0.44453004002571106, 0.4425972104072571, 0.42601528763771057, 0.4234777092933655, 0.4276064932346344, 0.43248188495635986, 0.43495890498161316, 0.43886783719062805, 0.42718562483787537, 0.43373119831085205, 0.4436455965042114, 0.4591890573501587, 0.4540506899356842, 0.47363629937171936, 0.4614214599132538, 0.46360325813293457], "val_accuracy": [0.42399999499320984, 0.46033334732055664, 0.6489999890327454, 0.6743333339691162, 0.721666693687439, 0.7329999804496765, 0.7383333444595337, 0.7509999871253967, 0.7523333430290222, 0.7676666378974915, 0.7616666555404663, 0.7680000066757202, 0.7770000100135803, 0.7846666574478149, 0.7870000004768372, 0.7950000166893005, 0.7933333516120911, 0.7916666865348816, 0.796999990940094, 0.8059999942779541, 0.8040000200271606, 0.8090000152587891, 0.8183333277702332, 0.82833331823349, 0.8266666531562805, 0.828000009059906, 0.8360000252723694, 0.8370000123977661, 0.8333333134651184, 0.8420000076293945, 0.843999981880188, 0.8443333506584167, 0.8433333039283752, 0.843666672706604, 0.8526666760444641, 0.8523333072662354, 0.856333315372467, 0.8533333539962769, 0.8479999899864197, 0.8553333282470703, 0.8629999756813049, 0.8600000143051147, 0.8573333621025085, 0.8606666922569275, 0.8673333525657654, 0.8666666746139526, 0.8650000095367432, 0.8606666922569275, 0.8643333315849304, 0.8696666955947876, 0.8656666874885559, 0.8733333349227905, 0.8736666440963745, 0.871666669845581, 0.8726666569709778, 0.8666666746139526, 0.8726666569709778, 0.8693333268165588]}, "mapping_values": [1, 10, 5, 5, 3, 5, 3, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.847428560256958, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2226402759552, 1.8665786981582642, 1.3969017267227173, 1.0890909433364868, 0.9359079599380493, 0.836917519569397, 0.7711364030838013, 0.7252049446105957, 0.6970136761665344, 0.6527664065361023, 0.6309720277786255, 0.6217290163040161, 0.5975534915924072, 0.577302098274231, 0.5605468153953552, 0.5467804074287415, 0.5332096219062805, 0.5162910223007202, 0.5091018080711365, 0.49996745586395264, 0.4799678921699524, 0.46659916639328003, 0.46994104981422424, 0.4664750397205353, 0.4493035674095154, 0.442020446062088, 0.42974764108657837, 0.41781771183013916, 0.42426130175590515, 0.413210928440094, 0.39170998334884644, 0.3932589888572693, 0.3867127597332001, 0.3867303729057312, 0.37601393461227417, 0.3689386248588562, 0.3682490587234497, 0.3670976459980011, 0.36183857917785645, 0.35081711411476135, 0.3493196368217468, 0.3389967083930969, 0.33960723876953125, 0.33565691113471985, 0.3283396065235138, 0.3213043808937073, 0.32500359416007996, 0.31049442291259766, 0.30713632702827454, 0.30526280403137207, 0.30006489157676697, 0.29944896697998047, 0.2944124937057495, 0.29000091552734375, 0.29320114850997925, 0.28350430727005005, 0.27850380539894104, 0.2742297351360321, 0.2660779356956482, 0.2653158903121948, 0.26426607370376587, 0.2611120641231537, 0.2628513276576996, 0.25144097208976746, 0.25204944610595703, 0.24548371136188507, 0.23719286918640137, 0.24297158420085907, 0.23681825399398804, 0.23347413539886475, 0.22378641366958618, 0.21591709554195404, 0.2202681452035904, 0.2195238471031189, 0.21301132440567017, 0.21158243715763092, 0.2097233384847641, 0.20163416862487793, 0.20727412402629852, 0.2033882737159729, 0.20447982847690582], "accuracy": [0.26997753977775574, 0.48368775844573975, 0.5659754276275635, 0.6172236204147339, 0.6662263870239258, 0.700171709060669, 0.7219653725624084, 0.7351737022399902, 0.7453441023826599, 0.7602694630622864, 0.7740060687065125, 0.7771760821342468, 0.7829877138137817, 0.7930260300636292, 0.7994980812072754, 0.807158887386322, 0.8141592741012573, 0.8162726163864136, 0.8204993009567261, 0.8183859586715698, 0.8334434032440186, 0.8370096683502197, 0.8322546482086182, 0.8352925777435303, 0.8442742228507996, 0.8465195894241333, 0.846387505531311, 0.8521991968154907, 0.8524633646011353, 0.8553691506385803, 0.8605204224586487, 0.8636903762817383, 0.86553955078125, 0.8623695969581604, 0.8720116019248962, 0.869502067565918, 0.8698983192443848, 0.8728041052818298, 0.8733324408531189, 0.8762382864952087, 0.8813894987106323, 0.8803328275680542, 0.8812574148178101, 0.8817857503890991, 0.8837670087814331, 0.8882578015327454, 0.8845595121383667, 0.8897107243537903, 0.8908994793891907, 0.8910315632820129, 0.8914278149604797, 0.8930128216743469, 0.8932769894599915, 0.8961827754974365, 0.89552241563797, 0.8989565372467041, 0.900409460067749, 0.9002773761749268, 0.9059569239616394, 0.9060890078544617, 0.9058248400688171, 0.9030511379241943, 0.9046360850334167, 0.9111081957817078, 0.908730685710907, 0.9120327830314636, 0.9177123308181763, 0.9126931428909302, 0.91559898853302, 0.9152027368545532, 0.9232597947120667, 0.9223352074623108, 0.9181085824966431, 0.9245806336402893, 0.9223352074623108, 0.9249768853187561, 0.9232597947120667, 0.925901472568512, 0.926429808139801, 0.927882730960846, 0.9237881302833557], "val_loss": [2.040631055831909, 1.5213828086853027, 1.0567882061004639, 0.8493657112121582, 0.7570695281028748, 0.7043748497962952, 0.6594803929328918, 0.6235846877098083, 0.5980414152145386, 0.5753539204597473, 0.5565434694290161, 0.5449912548065186, 0.5318767428398132, 0.5155746340751648, 0.5022256970405579, 0.4957021474838257, 0.4834575057029724, 0.4747864902019501, 0.4683161675930023, 0.4601725935935974, 0.45281076431274414, 0.44938182830810547, 0.4582013487815857, 0.4415345788002014, 0.4327230751514435, 0.4274662733078003, 0.42201870679855347, 0.4204314649105072, 0.41312533617019653, 0.41092729568481445, 0.4122998118400574, 0.4051455855369568, 0.3983195722103119, 0.40091565251350403, 0.39182743430137634, 0.3979863226413727, 0.4012884199619293, 0.39230746030807495, 0.3916548788547516, 0.38769182562828064, 0.3841916620731354, 0.3892153799533844, 0.38443779945373535, 0.3772686719894409, 0.37372758984565735, 0.376880943775177, 0.37054768204689026, 0.37140023708343506, 0.3670308291912079, 0.36988916993141174, 0.37269726395606995, 0.3680844008922577, 0.3708901107311249, 0.36453694105148315, 0.36537936329841614, 0.3612019717693329, 0.3617994785308838, 0.36296066641807556, 0.3647921681404114, 0.3575742244720459, 0.36036863923072815, 0.3668482303619385, 0.3571711480617523, 0.36061564087867737, 0.35760319232940674, 0.3544960618019104, 0.35720500349998474, 0.3528660535812378, 0.3543279767036438, 0.35315829515457153, 0.35714173316955566, 0.3518526554107666, 0.3483346700668335, 0.3493933379650116, 0.35291552543640137, 0.3510100841522217, 0.3608720302581787, 0.3527921438217163, 0.35702747106552124, 0.3497766852378845, 0.35576456785202026], "val_accuracy": [0.5096666812896729, 0.6230000257492065, 0.6623333096504211, 0.6996666789054871, 0.7213333249092102, 0.737333357334137, 0.7546666860580444, 0.7663333415985107, 0.7763333320617676, 0.7870000004768372, 0.793666660785675, 0.7973333597183228, 0.8026666641235352, 0.8086666464805603, 0.8226666450500488, 0.8193333148956299, 0.8223333358764648, 0.8289999961853027, 0.8296666741371155, 0.8316666483879089, 0.8363333344459534, 0.8403333425521851, 0.8296666741371155, 0.8423333168029785, 0.8360000252723694, 0.8393333554267883, 0.8456666469573975, 0.8460000157356262, 0.8500000238418579, 0.8483333587646484, 0.8483333587646484, 0.8503333330154419, 0.8539999723434448, 0.8519999980926514, 0.8550000190734863, 0.8519999980926514, 0.8503333330154419, 0.8546666502952576, 0.8543333411216736, 0.8569999933242798, 0.8583333492279053, 0.8560000061988831, 0.856333315372467, 0.8643333315849304, 0.8613333106040955, 0.859333336353302, 0.8650000095367432, 0.8663333058357239, 0.8640000224113464, 0.8669999837875366, 0.8629999756813049, 0.8629999756813049, 0.8656666874885559, 0.8666666746139526, 0.8676666617393494, 0.8653333187103271, 0.8690000176429749, 0.8686666488647461, 0.8683333396911621, 0.8703333139419556, 0.8663333058357239, 0.8683333396911621, 0.8679999709129333, 0.8713333606719971, 0.8703333139419556, 0.871999979019165, 0.8740000128746033, 0.8743333220481873, 0.875, 0.8696666955947876, 0.8696666955947876, 0.8726666569709778, 0.8766666650772095, 0.8773333430290222, 0.8756666779518127, 0.8799999952316284, 0.8756666779518127, 0.8740000128746033, 0.8773333430290222, 0.878000020980835, 0.8736666440963745]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 1, 1], [0, 2, 5, 0], [0, 7], [0], [1], [0], [2], [0]], "fitness": -0.8208571672439575, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5468077659606934, 0.8159122467041016, 0.6994718909263611, 0.6250976920127869, 0.5705742239952087, 0.5314847230911255, 0.5114653706550598, 0.5158725380897522, 0.5095098614692688, 0.5212938785552979, 0.518146276473999, 0.5130966901779175], "accuracy": [0.47549861669540405, 0.713908314704895, 0.7485140562057495, 0.7741381525993347, 0.7872143983840942, 0.7994980812072754, 0.8186501264572144, 0.8150838613510132, 0.8202351331710815, 0.8129705190658569, 0.8178576231002808, 0.8289526104927063], "val_loss": [0.7578548192977905, 0.6244312524795532, 0.572644054889679, 0.5129785537719727, 0.4764941930770874, 0.4737139940261841, 0.45071402192115784, 0.46984729170799255, 0.4751834571361542, 0.5004997849464417, 0.5013811588287354, 0.5364544987678528], "val_accuracy": [0.7279999852180481, 0.7720000147819519, 0.793666660785675, 0.8193333148956299, 0.8243333101272583, 0.831333339214325, 0.8506666421890259, 0.8399999737739563, 0.8360000252723694, 0.8379999995231628, 0.843999981880188, 0.8416666388511658]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 5, 3, 0, 3, 5], [0, 2, 0, 3], [66, 25], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [3, 2, 9, 2, 6, 7, 6, 3, 9, 5, 2, 7, 8, 0], [0, 5, 4, 0, 4, 0, 2, 0], [99, 82, 82, 2, 99, 44], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 3, 8, 2, 9, 6, 5, 0], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0, 6], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 6, 4, 2, 1, 22, 14, 8, 6, 27, 16, 11, 6], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.add(grad, grad), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(grad, tf.constant(1.0, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha)), tf.math.divide_no_nan(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.negative(grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [8, 2, 3, 0, 2], [0, 1, 0, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 2, 3, 0, 3, 3, 9], [0, 2, 0, 3], [0, 16, 17], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 4, 8, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 11, 7, 4, 3, 2, 1, 1, 1, 25, 14, 11, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma))), tf.math.sqrt(tf.math.pow(alpha, beta)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.sqrt(grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [35, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 8, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 15, 8, 7, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma))", "other_info": {"loss": [2.3038482666015625, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 2, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 0, 3, 3], [0, 2, 0, 3], [16, 16], [0, 1, 1], [2], [0, 3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 8, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [72, 99, 41, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 6, 4, 2, 1, 3, 1, 2, 1, 13, 7, 6, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), grad))), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}]