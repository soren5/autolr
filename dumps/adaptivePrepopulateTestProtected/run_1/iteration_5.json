[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223226308822632, 1.867703914642334, 1.3979169130325317, 1.097693920135498, 0.9506016969680786, 0.8473412394523621, 0.7836220264434814, 0.7285664677619934, 0.7020352482795715, 0.673151969909668, 0.6537116169929504, 0.6336221098899841, 0.6079898476600647, 0.586005449295044, 0.5808212757110596, 0.5590496063232422, 0.545581579208374, 0.5441274642944336, 0.5286175608634949, 0.514104962348938, 0.5098453760147095, 0.4917857050895691, 0.4832933843135834, 0.4737478792667389, 0.46668264269828796, 0.46034833788871765, 0.4488719701766968, 0.44729670882225037, 0.44234931468963623, 0.42786091566085815, 0.4196518659591675, 0.42388588190078735, 0.41697168350219727, 0.4111258089542389, 0.39976048469543457, 0.3984396457672119, 0.38981741666793823, 0.38605833053588867, 0.38480374217033386, 0.3792741298675537, 0.36549943685531616, 0.3641602396965027, 0.35379284620285034, 0.36207249760627747, 0.3516697883605957, 0.35176679491996765, 0.3357080817222595, 0.32903626561164856, 0.34157875180244446, 0.3262804448604584, 0.325957328081131, 0.32457977533340454, 0.31486135721206665, 0.31250545382499695, 0.30591800808906555, 0.3063277006149292, 0.294706791639328, 0.2881503701210022, 0.2895837128162384, 0.2945956289768219, 0.28820323944091797, 0.28607866168022156, 0.27611443400382996], "accuracy": [0.26601505279541016, 0.4900277256965637, 0.5630695819854736, 0.615770697593689, 0.6573768258094788, 0.6993792057037354, 0.7191916704177856, 0.7313432693481445, 0.7493065595626831, 0.7560427784919739, 0.761590301990509, 0.769911527633667, 0.7754589915275574, 0.7853652238845825, 0.7861577272415161, 0.7998943328857422, 0.802800178527832, 0.804649293422699, 0.8062343001365662, 0.816008448600769, 0.8197067975997925, 0.8239334225654602, 0.8238013386726379, 0.8285563588142395, 0.8329150676727295, 0.8308017253875732, 0.8416325449943542, 0.8404437899589539, 0.8384625315666199, 0.846387505531311, 0.8496896028518677, 0.8473120927810669, 0.8524633646011353, 0.8555012345314026, 0.8560295701026917, 0.8548408150672913, 0.8585391640663147, 0.8622375130653381, 0.8598600029945374, 0.8660678863525391, 0.8688416481018066, 0.8685774803161621, 0.8709549307823181, 0.8716153502464294, 0.8746532797813416, 0.8691058158874512, 0.8755778670310974, 0.8868049383163452, 0.8735966086387634, 0.8800686597824097, 0.8850878477096558, 0.8838990926742554, 0.8857482671737671, 0.887597382068634, 0.8907673954963684, 0.8902390599250793, 0.8919561505317688, 0.896446943283081, 0.8968431949615479, 0.8948619961738586, 0.8926165699958801, 0.8965790271759033, 0.9012019634246826], "val_loss": [2.0399909019470215, 1.5251555442810059, 1.0676544904708862, 0.8588533401489258, 0.7755922079086304, 0.7116458415985107, 0.663692057132721, 0.629660427570343, 0.6024261116981506, 0.5841566324234009, 0.5626380443572998, 0.552465558052063, 0.528258204460144, 0.5171092748641968, 0.5087933540344238, 0.49298208951950073, 0.49300920963287354, 0.47799813747406006, 0.4737568795681, 0.466105192899704, 0.45478856563568115, 0.44371655583381653, 0.44045916199684143, 0.43891358375549316, 0.42701074481010437, 0.425264447927475, 0.4219880700111389, 0.4132193922996521, 0.4107579290866852, 0.40802812576293945, 0.4028666317462921, 0.3983374834060669, 0.4013787806034088, 0.39674508571624756, 0.39126038551330566, 0.38767358660697937, 0.3865254819393158, 0.38263949751853943, 0.37926700711250305, 0.3773876130580902, 0.37374967336654663, 0.36995479464530945, 0.36887121200561523, 0.3753794729709625, 0.3666309416294098, 0.363404780626297, 0.36402180790901184, 0.3644130527973175, 0.35975968837738037, 0.35836148262023926, 0.3537342846393585, 0.3564697206020355, 0.3501151502132416, 0.3494795262813568, 0.34949150681495667, 0.34929975867271423, 0.34752413630485535, 0.3428165018558502, 0.34924837946891785, 0.34377238154411316, 0.34630832076072693, 0.34133535623550415, 0.3400469422340393], "val_accuracy": [0.5149999856948853, 0.643666684627533, 0.6713333129882812, 0.6930000185966492, 0.7126666903495789, 0.7390000224113464, 0.7566666603088379, 0.765999972820282, 0.7733333110809326, 0.7879999876022339, 0.7893333435058594, 0.7933333516120911, 0.8066666722297668, 0.8149999976158142, 0.8186666369438171, 0.8163333535194397, 0.8173333406448364, 0.8246666789054871, 0.8299999833106995, 0.8299999833106995, 0.8356666564941406, 0.843999981880188, 0.843666672706604, 0.8429999947547913, 0.8463333249092102, 0.847000002861023, 0.8500000238418579, 0.8523333072662354, 0.8510000109672546, 0.8513333201408386, 0.8543333411216736, 0.8560000061988831, 0.8566666841506958, 0.8543333411216736, 0.859666645526886, 0.8610000014305115, 0.859000027179718, 0.859333336353302, 0.8606666922569275, 0.8603333234786987, 0.862666666507721, 0.8633333444595337, 0.8653333187103271, 0.859666645526886, 0.8669999837875366, 0.8696666955947876, 0.8669999837875366, 0.8683333396911621, 0.8709999918937683, 0.8679999709129333, 0.8740000128746033, 0.8700000047683716, 0.8763333559036255, 0.8733333349227905, 0.8756666779518127, 0.8723333477973938, 0.8776666522026062, 0.878333330154419, 0.8726666569709778, 0.8769999742507935, 0.8709999918937683, 0.8776666522026062, 0.8769999742507935]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8539999723434448, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2220160961151123, 1.8651384115219116, 1.398171305656433, 1.0976858139038086, 0.9421147704124451, 0.8370504379272461, 0.7802435159683228, 0.7405952215194702, 0.6930714249610901, 0.6652449369430542, 0.6481040716171265, 0.6202755570411682, 0.5989755392074585, 0.5791196227073669, 0.5620177984237671, 0.548961341381073, 0.5358643531799316, 0.5304253101348877, 0.5175041556358337, 0.5041349530220032, 0.4981590211391449, 0.4799153804779053, 0.4706088602542877, 0.46089744567871094, 0.4497224688529968, 0.4488013982772827, 0.44383254647254944, 0.4278899133205414, 0.4325915575027466, 0.424930602312088, 0.4165721535682678, 0.41795963048934937, 0.4018566906452179, 0.4051364064216614, 0.3926110863685608, 0.39219003915786743, 0.38134804368019104, 0.37169456481933594, 0.3710874319076538, 0.3631051480770111, 0.36881425976753235, 0.356253057718277, 0.34810036420822144, 0.34793201088905334, 0.34139955043792725, 0.330170214176178, 0.3353828191757202, 0.31862929463386536, 0.31747913360595703], "accuracy": [0.2775062620639801, 0.4810461103916168, 0.55791836977005, 0.6147140264511108, 0.6660943031311035, 0.6970016956329346, 0.7187954187393188, 0.7300224304199219, 0.748249888420105, 0.7609298825263977, 0.7644960880279541, 0.7777044177055359, 0.7860256433486938, 0.7932901978492737, 0.800818920135498, 0.7997622489929199, 0.809140145778656, 0.8094043135643005, 0.8187822103500366, 0.8222163319587708, 0.8260467648506165, 0.8264430165290833, 0.8342359066009521, 0.8384625315666199, 0.8433496356010437, 0.8451988101005554, 0.8446704745292664, 0.8471800088882446, 0.8488970994949341, 0.8511425256729126, 0.8527275323867798, 0.850350022315979, 0.8577466607093811, 0.8610487580299377, 0.8601241707801819, 0.8636903762817383, 0.8650112152099609, 0.8669924736022949, 0.8685774803161621, 0.8714832663536072, 0.872407853603363, 0.8754457831382751, 0.8747853636741638, 0.878879964351654, 0.8753136992454529, 0.8813894987106323, 0.8798044919967651, 0.8869370222091675, 0.8842953443527222], "val_loss": [2.039424419403076, 1.5113416910171509, 1.0475727319717407, 0.8416131734848022, 0.744091808795929, 0.6850183010101318, 0.6395218372344971, 0.6121019124984741, 0.5836186408996582, 0.5589824318885803, 0.5443630814552307, 0.5252320766448975, 0.5123792886734009, 0.50142502784729, 0.49007755517959595, 0.4801594614982605, 0.4685521721839905, 0.45934587717056274, 0.45205599069595337, 0.4479202330112457, 0.4444584548473358, 0.4362865388393402, 0.43003523349761963, 0.4276202321052551, 0.4269554316997528, 0.4149724245071411, 0.41380220651626587, 0.4044569432735443, 0.4049016833305359, 0.40532422065734863, 0.40082475543022156, 0.3982800841331482, 0.39201289415359497, 0.3902652859687805, 0.38758280873298645, 0.38936930894851685, 0.38152432441711426, 0.3819085955619812, 0.37842777371406555, 0.3736758232116699, 0.3738006055355072, 0.36974942684173584, 0.3676183819770813, 0.3633289933204651, 0.3736252784729004, 0.3619564473628998, 0.35980257391929626, 0.3618508279323578, 0.3599187135696411], "val_accuracy": [0.5370000004768372, 0.6536666750907898, 0.6883333325386047, 0.7099999785423279, 0.7400000095367432, 0.7563333511352539, 0.7670000195503235, 0.7789999842643738, 0.793666660785675, 0.8076666593551636, 0.8026666641235352, 0.8143333196640015, 0.8183333277702332, 0.8216666579246521, 0.8306666612625122, 0.8366666436195374, 0.8366666436195374, 0.8410000205039978, 0.8399999737739563, 0.843666672706604, 0.843999981880188, 0.8503333330154419, 0.8493333458900452, 0.8556666374206543, 0.8496666550636292, 0.8576666712760925, 0.8553333282470703, 0.8586666584014893, 0.859333336353302, 0.8586666584014893, 0.8619999885559082, 0.8610000014305115, 0.8653333187103271, 0.8636666536331177, 0.8646666407585144, 0.862666666507721, 0.8676666617393494, 0.8643333315849304, 0.8706666827201843, 0.8669999837875366, 0.8679999709129333, 0.8693333268165588, 0.8703333139419556, 0.8740000128746033, 0.8663333058357239, 0.8703333139419556, 0.8713333606719971, 0.8713333606719971, 0.8723333477973938]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8374285697937012, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5166802406311035, 0.8185634613037109, 0.6705678701400757, 0.5958696007728577, 0.5743308663368225, 0.5426351428031921, 0.5418133735656738, 0.5438852906227112, 0.5499323606491089, 0.5603029131889343, 0.5288119912147522, 0.537024199962616, 0.543652355670929, 0.5326681733131409, 0.5331593155860901], "accuracy": [0.468630313873291, 0.7141724824905396, 0.7441553473472595, 0.7774402499198914, 0.7873464822769165, 0.8092722296714783, 0.796328067779541, 0.8084797263145447, 0.7964601516723633, 0.8084797263145447, 0.8191784620285034, 0.8226125836372375, 0.8113855719566345, 0.8141592741012573, 0.817989706993103], "val_loss": [0.7523993849754333, 0.6534328460693359, 0.519328773021698, 0.4944932162761688, 0.4961126446723938, 0.4880078434944153, 0.5145230293273926, 0.4644837975502014, 0.5077388286590576, 0.5110429525375366, 0.509684145450592, 0.5000016093254089, 0.492697536945343, 0.549758791923523, 0.5627151727676392], "val_accuracy": [0.721666693687439, 0.7706666588783264, 0.8040000200271606, 0.8056666851043701, 0.8153333067893982, 0.8246666789054871, 0.8236666917800903, 0.82833331823349, 0.8370000123977661, 0.8476666808128357, 0.8343333601951599, 0.8230000138282776, 0.8360000252723694, 0.8270000219345093, 0.8396666646003723]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8100000023841858, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2926387786865234, 2.187814235687256, 1.7760268449783325, 1.3406699895858765, 1.0856176614761353, 0.9237781167030334, 0.846142590045929, 0.8147884011268616, 0.7730622291564941, 0.7587971687316895, 0.7086418271064758, 0.7016941905021667, 0.6702130436897278, 0.6481316089630127, 0.6234363913536072, 0.588190495967865, 0.5899173617362976, 0.5848522782325745, 0.5733474493026733, 0.563485860824585, 0.5419475436210632, 0.5251134037971497, 0.509404182434082, 0.5049763917922974, 0.5060949921607971, 0.4838365316390991, 0.4732764959335327, 0.4841333329677582, 0.46729692816734314, 0.4546067416667938, 0.4582502245903015, 0.44170093536376953, 0.4348578453063965, 0.42513272166252136, 0.4159933030605316, 0.4033084511756897, 0.4044506847858429, 0.39983680844306946, 0.3913053572177887, 0.38109391927719116, 0.3875293731689453, 0.36823296546936035, 0.370281845331192, 0.3576194941997528, 0.36094439029693604, 0.3451477587223053], "accuracy": [0.13168670237064362, 0.33060362935066223, 0.43164706230163574, 0.5448421835899353, 0.6292431354522705, 0.6609430909156799, 0.6902654767036438, 0.6991150379180908, 0.6984546184539795, 0.7067758440971375, 0.7346453666687012, 0.7327961921691895, 0.7425703406333923, 0.7552502751350403, 0.763967752456665, 0.7761194109916687, 0.774798572063446, 0.7709681391716003, 0.7750627398490906, 0.7844406366348267, 0.7910447716712952, 0.7895918488502502, 0.7973847389221191, 0.8062343001365662, 0.8088759779930115, 0.8140271902084351, 0.8197067975997925, 0.8112534880638123, 0.8224804997444153, 0.8206313848495483, 0.8259146809577942, 0.8319904804229736, 0.8259146809577942, 0.8408400416374207, 0.842028796672821, 0.8401796221733093, 0.842028796672821, 0.8454629778862, 0.8474441766738892, 0.8510104417800903, 0.8491612672805786, 0.8581429123878479, 0.8568220734596252, 0.8574824929237366, 0.8607845902442932, 0.8659358024597168], "val_loss": [2.2463769912719727, 2.0216519832611084, 1.1562986373901367, 0.8671950697898865, 0.7640953660011292, 0.7047854661941528, 0.6800989508628845, 0.6476380228996277, 0.6477963328361511, 0.6171400547027588, 0.5874108672142029, 0.5599245429039001, 0.5683647990226746, 0.5346085429191589, 0.5178133249282837, 0.5140487551689148, 0.503879725933075, 0.5022209286689758, 0.4879285395145416, 0.4872846007347107, 0.48344185948371887, 0.4773929715156555, 0.4837104082107544, 0.46843209862709045, 0.4579482972621918, 0.44751980900764465, 0.44029679894447327, 0.4406220316886902, 0.4381885230541229, 0.42425715923309326, 0.42087557911872864, 0.41912952065467834, 0.41282209753990173, 0.4117000997066498, 0.40972068905830383, 0.40230777859687805, 0.3953600525856018, 0.40288597345352173, 0.39674142003059387, 0.3993629515171051, 0.38809049129486084, 0.38891589641571045, 0.3890148103237152, 0.3920297920703888, 0.39248189330101013, 0.38898029923439026], "val_accuracy": [0.41100001335144043, 0.45233333110809326, 0.637333333492279, 0.6903333067893982, 0.7210000157356262, 0.7429999709129333, 0.7476666569709778, 0.7490000128746033, 0.7586666941642761, 0.7743333578109741, 0.7676666378974915, 0.7806666493415833, 0.7826666831970215, 0.800000011920929, 0.8056666851043701, 0.8003333210945129, 0.8073333501815796, 0.8100000023841858, 0.8109999895095825, 0.809333324432373, 0.8163333535194397, 0.8196666836738586, 0.8216666579246521, 0.8266666531562805, 0.831333339214325, 0.8360000252723694, 0.8346666693687439, 0.8376666903495789, 0.8389999866485596, 0.8396666646003723, 0.8423333168029785, 0.846666693687439, 0.8493333458900452, 0.8489999771118164, 0.8560000061988831, 0.8566666841506958, 0.8569999933242798, 0.8586666584014893, 0.856333315372467, 0.8556666374206543, 0.8613333106040955, 0.8573333621025085, 0.8529999852180481, 0.8613333106040955, 0.8603333234786987, 0.859666645526886]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 3, 3, 2, 3], [2, 1, 0, 0], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 2, 2, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 9, 2, 9], [0, 0, 0, 3, 0, 0, 2, 1, 2, 0], [16, 99, 82, 99, 61, 1, 39]], "fitness": -0.7971428632736206, "mapping_values": [1, 4, 2, 2, 0, 8, 4, 4, 2, 2, 1, 1, 1, 18, 11, 7, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(grad, alpha)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), beta), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3046436309814453, 2.288414239883423, 2.265275239944458, 2.2276861667633057, 2.1602730751037598, 2.0247714519500732, 1.7710331678390503, 1.4561553001403809, 1.2272642850875854, 1.1066993474960327, 1.012223482131958, 0.9459428191184998, 0.9018229246139526, 0.8753839135169983, 0.8229808211326599, 0.7996048331260681, 0.7850574254989624, 0.7708540558815002, 0.7588468194007874, 0.7388935089111328, 0.7205995917320251, 0.7131672501564026, 0.7106440663337708, 0.7037628293037415, 0.6837888360023499, 0.6830033659934998, 0.6762535572052002, 0.6501907110214233, 0.6533145904541016, 0.655619740486145, 0.6358535289764404, 0.6361587643623352, 0.6145429611206055, 0.641303539276123, 0.6114442348480225, 0.6066374778747559, 0.613368570804596, 0.6115632057189941, 0.5882819890975952, 0.5885922908782959], "accuracy": [0.09879804402589798, 0.13221503794193268, 0.19719983637332916, 0.2775062620639801, 0.35081231594085693, 0.4089288115501404, 0.45951658487319946, 0.529388427734375, 0.5766741633415222, 0.6131290197372437, 0.6420552134513855, 0.6625280380249023, 0.68101966381073, 0.684982180595398, 0.7054550051689148, 0.703209638595581, 0.7180029153823853, 0.7170783281326294, 0.7213049530982971, 0.7264562249183655, 0.7294940948486328, 0.7354378700256348, 0.7367587089538574, 0.7346453666687012, 0.748249888420105, 0.7405890822410583, 0.7461365461349487, 0.7578919529914856, 0.7560427784919739, 0.7577598690986633, 0.7614582180976868, 0.7604015469551086, 0.7774402499198914, 0.7637035846710205, 0.7726852297782898, 0.7755910754203796, 0.7707040309906006, 0.7730814814567566, 0.7824593782424927, 0.783119797706604], "val_loss": [2.294342041015625, 2.271244525909424, 2.2390103340148926, 2.184131383895874, 2.0762081146240234, 1.8515053987503052, 1.4801667928695679, 1.1470370292663574, 0.9651048183441162, 0.8697670102119446, 0.8097182512283325, 0.7630507946014404, 0.7336483597755432, 0.7226513624191284, 0.6836584210395813, 0.6705397367477417, 0.6583670377731323, 0.6727688312530518, 0.636448085308075, 0.6435261368751526, 0.6097647547721863, 0.6024468541145325, 0.6064704656600952, 0.5841511487960815, 0.5857078433036804, 0.5716716051101685, 0.5716362595558167, 0.5785675644874573, 0.5589075684547424, 0.5610930919647217, 0.5482603311538696, 0.5594764947891235, 0.5519942045211792, 0.5433416366577148, 0.5254972577095032, 0.5392643809318542, 0.5273885726928711, 0.5273320078849792, 0.5419149994850159, 0.5183568596839905], "val_accuracy": [0.11666666716337204, 0.23633334040641785, 0.41999998688697815, 0.47200000286102295, 0.5066666603088379, 0.5673333406448364, 0.640999972820282, 0.6643333435058594, 0.687666654586792, 0.7056666612625122, 0.7126666903495789, 0.7396666407585144, 0.7206666469573975, 0.737666666507721, 0.753000020980835, 0.7603333592414856, 0.765999972820282, 0.7363333106040955, 0.7683333158493042, 0.7636666893959045, 0.7756666541099548, 0.7803333401679993, 0.7743333578109741, 0.7916666865348816, 0.7826666831970215, 0.793666660785675, 0.7883333563804626, 0.7926666736602783, 0.7923333048820496, 0.7943333387374878, 0.7986666560173035, 0.7973333597183228, 0.7910000085830688, 0.8026666641235352, 0.8103333115577698, 0.8046666383743286, 0.8083333373069763, 0.8086666464805603, 0.7919999957084656, 0.8090000152587891]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 0], [0, 1, 0, 2], [39, 39], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [6, 2, 3, 6, 8, 1, 4, 1, 4, 2, 8, 3, 4], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 2, 4], [16, 99, 96, 99, 61, 56]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 2, 2, 1, 1, 1, 1, 0, 1, 1, 25, 13, 12, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma))), tf.math.sqrt(tf.math.multiply(alpha, beta)))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.pow(beta, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [2, 2, 0, 0, 8, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 3, 3, 1, 2, 0], [16, 99, 96, 99, 78, 17]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 8, 5, 3, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta), tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(sigma, sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 5, 9], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 6, 0, 3, 5], [3, 2, 0, 3], [16, 36], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 7, 2], [0, 0, 0, 3, 0, 1, 3, 1, 4, 0, 3, 0], [16, 49, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)))), tf.math.add(tf.math.add(sigma, alpha), grad)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), sigma), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}, "mapping_values": [1, 1, 0, 1, 0, 10, 6, 4, 1, 2, 1, 1, 1, 25, 13, 12, 6], "tree_depth": 25}]