[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8722857236862183, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223294258117676, 1.8596264123916626, 1.4028648138046265, 1.105737566947937, 0.9476597905158997, 0.8463731408119202, 0.7734156847000122, 0.7336324453353882, 0.698596715927124, 0.6652659773826599, 0.6384822130203247, 0.6170576214790344, 0.5947942733764648, 0.5844280123710632, 0.566771388053894, 0.5427321195602417, 0.5393358469009399, 0.528756856918335, 0.5161035060882568, 0.5061827301979065, 0.4955976605415344, 0.4861389398574829, 0.4735768735408783, 0.4749969244003296, 0.4687979221343994, 0.45249927043914795, 0.4469131529331207, 0.435939759016037, 0.42597272992134094, 0.424214631319046, 0.41573384404182434, 0.41695159673690796, 0.40607261657714844, 0.3951795697212219, 0.39581483602523804, 0.3935876190662384, 0.38449767231941223, 0.3824653923511505, 0.3820204436779022, 0.366974800825119, 0.3565192222595215, 0.3673005998134613, 0.3525107502937317, 0.35475867986679077, 0.34725421667099, 0.33793383836746216, 0.33295169472694397, 0.32906001806259155, 0.32865792512893677, 0.32324114441871643, 0.32121187448501587, 0.3104771375656128], "accuracy": [0.2735437750816345, 0.5062739253044128, 0.5581825375556946, 0.6141856908798218, 0.6598864197731018, 0.7024171352386475, 0.7174745798110962, 0.7325320243835449, 0.7499669790267944, 0.7567031979560852, 0.7713643908500671, 0.7741381525993347, 0.7815347909927368, 0.7881389260292053, 0.7955356240272522, 0.8045172095298767, 0.8127063512802124, 0.8094043135643005, 0.8128384351730347, 0.8190463781356812, 0.8235371708869934, 0.8274996876716614, 0.8284242749214172, 0.8327829837799072, 0.828820526599884, 0.8364813327789307, 0.8421608805656433, 0.8453308939933777, 0.8508783578872681, 0.8502179384231567, 0.8532558679580688, 0.848368763923645, 0.8539162874221802, 0.858671247959137, 0.8537842035293579, 0.8585391640663147, 0.8644828796386719, 0.8628978729248047, 0.8623695969581604, 0.8684453964233398, 0.8713511824607849, 0.8660678863525391, 0.874389111995697, 0.8730682730674744, 0.8754457831382751, 0.8798044919967651, 0.8802007436752319, 0.882710337638855, 0.8770307898521423, 0.8819178342819214, 0.8850878477096558, 0.8891823887825012], "val_loss": [2.039970636367798, 1.5180035829544067, 1.051999568939209, 0.8462827205657959, 0.7570217847824097, 0.6975083947181702, 0.6526835560798645, 0.6195716857910156, 0.5939494371414185, 0.568105161190033, 0.5539032220840454, 0.5358092188835144, 0.5186258554458618, 0.5102351307868958, 0.49666711688041687, 0.48378467559814453, 0.4749283790588379, 0.47062361240386963, 0.46158456802368164, 0.4594821631908417, 0.44424140453338623, 0.4400312006473541, 0.4378739297389984, 0.4313439130783081, 0.42357560992240906, 0.4190484881401062, 0.4111902713775635, 0.40710026025772095, 0.4035095274448395, 0.3990616500377655, 0.3943043351173401, 0.3971529006958008, 0.3903631567955017, 0.39180904626846313, 0.3858872950077057, 0.3847810924053192, 0.37793824076652527, 0.37845075130462646, 0.37452149391174316, 0.37339672446250916, 0.37042221426963806, 0.3706854581832886, 0.36537623405456543, 0.3615007698535919, 0.35990792512893677, 0.35650914907455444, 0.3565494120121002, 0.35348576307296753, 0.3562285602092743, 0.3507799208164215, 0.34787821769714355, 0.35219019651412964], "val_accuracy": [0.5426666736602783, 0.6449999809265137, 0.6830000281333923, 0.7076666951179504, 0.7353333234786987, 0.7476666569709778, 0.7630000114440918, 0.7723333239555359, 0.7853333353996277, 0.7889999747276306, 0.8006666898727417, 0.8080000281333923, 0.8190000057220459, 0.8166666626930237, 0.8216666579246521, 0.8320000171661377, 0.831333339214325, 0.8336666822433472, 0.8366666436195374, 0.840666651725769, 0.846666693687439, 0.8443333506584167, 0.8446666598320007, 0.8523333072662354, 0.8526666760444641, 0.8553333282470703, 0.8640000224113464, 0.859333336353302, 0.8583333492279053, 0.8633333444595337, 0.8646666407585144, 0.862333357334137, 0.8683333396911621, 0.8683333396911621, 0.8616666793823242, 0.8636666536331177, 0.8709999918937683, 0.8683333396911621, 0.8706666827201843, 0.8673333525657654, 0.8730000257492065, 0.8690000176429749, 0.8730000257492065, 0.875333309173584, 0.8740000128746033, 0.8776666522026062, 0.878000020980835, 0.8773333430290222, 0.8730000257492065, 0.8763333559036255, 0.8776666522026062, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 1, 0, 1], [0, 7, 0, 0], [0, 1], [0], [0, 1], [0], [1], [0]], "fitness": -0.8585714101791382, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2934062480926514, 2.1883702278137207, 1.7680540084838867, 1.3583779335021973, 1.08087158203125, 0.9163267612457275, 0.8279127478599548, 0.8059135675430298, 0.7460638880729675, 0.729411244392395, 0.6934718489646912, 0.6586500406265259, 0.6446360349655151, 0.6144801378250122, 0.608887791633606, 0.586251974105835, 0.5774106979370117, 0.5603830814361572, 0.5488884449005127, 0.5351845026016235, 0.5277870893478394, 0.5008977055549622, 0.49788230657577515, 0.49561214447021484, 0.47787797451019287, 0.47561660408973694, 0.46978822350502014, 0.4678351879119873, 0.4502180516719818, 0.4436946511268616, 0.43812283873558044, 0.4260982573032379, 0.42094314098358154, 0.4132462441921234, 0.4032318890094757, 0.40942421555519104, 0.40203845500946045, 0.38725200295448303, 0.3833446502685547, 0.37610501050949097, 0.3657458424568176, 0.35601717233657837, 0.36094003915786743, 0.3407629430294037, 0.35029348731040955], "accuracy": [0.1282525360584259, 0.33483028411865234, 0.43851539492607117, 0.5481442213058472, 0.64231938123703, 0.665830135345459, 0.693831741809845, 0.7065116763114929, 0.7170783281326294, 0.7255316376686096, 0.7405890822410583, 0.744419515132904, 0.7512878179550171, 0.765949010848999, 0.7680623531341553, 0.7757231593132019, 0.7819310426712036, 0.7853652238845825, 0.7893276810646057, 0.791441023349762, 0.7957997918128967, 0.8076872229576111, 0.8121780753135681, 0.806630551815033, 0.8171972036361694, 0.8083476424217224, 0.8149517774581909, 0.8197067975997925, 0.8169330358505249, 0.821820080280304, 0.8310658931732178, 0.8285563588142395, 0.8339717388153076, 0.8389908671379089, 0.8466516733169556, 0.8408400416374207, 0.8451988101005554, 0.848368763923645, 0.852859616279602, 0.8551049828529358, 0.8533879518508911, 0.8626337051391602, 0.8555012345314026, 0.8632941246032715, 0.8621054291725159], "val_loss": [2.2466301918029785, 2.0163135528564453, 1.1339526176452637, 0.9136064648628235, 0.7659330368041992, 0.7142975926399231, 0.6819907426834106, 0.6647441387176514, 0.6447032690048218, 0.6052286624908447, 0.574857234954834, 0.5589742064476013, 0.5409450531005859, 0.5334859490394592, 0.5294610857963562, 0.5360955595970154, 0.5076766610145569, 0.5046972632408142, 0.5031435489654541, 0.4863763749599457, 0.48159319162368774, 0.4910554885864258, 0.4746975600719452, 0.45315754413604736, 0.46386510133743286, 0.4645233452320099, 0.4627395570278168, 0.4545830190181732, 0.44688013195991516, 0.428087443113327, 0.42434510588645935, 0.4261987805366516, 0.4161299765110016, 0.4220060110092163, 0.42131176590919495, 0.41109463572502136, 0.40692898631095886, 0.40604540705680847, 0.40161368250846863, 0.4068008363246918, 0.39904195070266724, 0.41430237889289856, 0.41839852929115295, 0.4055521786212921, 0.40647920966148376], "val_accuracy": [0.437333345413208, 0.4936666786670685, 0.6496666669845581, 0.6880000233650208, 0.7203333377838135, 0.7269999980926514, 0.7400000095367432, 0.7400000095367432, 0.7706666588783264, 0.7670000195503235, 0.7803333401679993, 0.7796666622161865, 0.7906666398048401, 0.7879999876022339, 0.8003333210945129, 0.7950000166893005, 0.7993333339691162, 0.812333345413208, 0.8066666722297668, 0.8056666851043701, 0.8243333101272583, 0.8186666369438171, 0.8199999928474426, 0.8273333311080933, 0.8293333053588867, 0.8379999995231628, 0.8183333277702332, 0.8246666789054871, 0.8353333473205566, 0.8503333330154419, 0.8446666598320007, 0.8456666469573975, 0.8506666421890259, 0.8526666760444641, 0.859000027179718, 0.8556666374206543, 0.8553333282470703, 0.8600000143051147, 0.8673333525657654, 0.8683333396911621, 0.8673333525657654, 0.859000027179718, 0.8616666793823242, 0.8640000224113464, 0.8616666793823242]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 6, 4, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 0, 1, 1], [0, 3, 4], [0, 2, 4], [0], [1], [0], [2], [0]], "fitness": -0.8205714225769043, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(beta, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5035748481750488, 0.7829285860061646, 0.6470013856887817, 0.6098839044570923, 0.5619304776191711, 0.5209715366363525, 0.4986255168914795, 0.4725698232650757, 0.4826183319091797, 0.494759738445282, 0.4583824574947357, 0.47105857729911804, 0.4813752770423889, 0.48259031772613525, 0.46776413917541504, 0.48840925097465515, 0.521245002746582, 0.48520174622535706, 0.47803694009780884, 0.520038902759552, 0.5923361778259277, 0.5427716374397278, 0.5427815318107605, 0.5189606547355652], "accuracy": [0.4934619069099426, 0.7248712182044983, 0.7625148296356201, 0.7817989587783813, 0.7964601516723633, 0.8094043135643005, 0.8153480291366577, 0.8232730031013489, 0.8289526104927063, 0.8195747137069702, 0.8348963260650635, 0.8356888294219971, 0.8384625315666199, 0.8308017253875732, 0.8356888294219971, 0.8409721255302429, 0.8235371708869934, 0.8384625315666199, 0.8445383906364441, 0.8202351331710815, 0.8235371708869934, 0.8201030492782593, 0.8345000743865967, 0.8442742228507996], "val_loss": [0.8239889144897461, 0.5878044962882996, 0.5523331761360168, 0.5354430079460144, 0.5017097592353821, 0.4772884249687195, 0.5079662203788757, 0.48126569390296936, 0.49364858865737915, 0.4815846383571625, 0.5106759667396545, 0.5071054100990295, 0.5407747626304626, 0.5137442946434021, 0.5046985745429993, 0.5162439942359924, 0.5960115790367126, 0.5282813906669617, 0.5545152425765991, 0.5907191038131714, 0.5757741332054138, 0.5635149478912354, 0.5791485905647278, 0.6114100813865662], "val_accuracy": [0.7126666903495789, 0.7879999876022339, 0.8043333292007446, 0.8066666722297668, 0.8273333311080933, 0.824999988079071, 0.8180000185966492, 0.8263333439826965, 0.82833331823349, 0.8323333263397217, 0.8396666646003723, 0.8326666951179504, 0.8276666402816772, 0.8399999737739563, 0.8389999866485596, 0.8246666789054871, 0.8429999947547913, 0.8446666598320007, 0.8533333539962769, 0.8360000252723694, 0.8259999752044678, 0.8320000171661377, 0.8420000076293945, 0.8339999914169312]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 16], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 2, 3, 0, 3, 5, 3, 7, 5, 1, 8, 9, 7, 9], [0, 2, 0, 3, 0, 0], [16, 16, 14, 97, 19, 22], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 2, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 20, 14, 6, 6, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.math.add(tf.math.square(tf.math.subtract(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, beta))))", "other_info": {"loss": [2.3038384914398193, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09391097724437714, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 2, 3, 2, 3, 1, 2, 7, 4, 6, 4, 8, 7, 2, 8, 1, 4, 9, 9, 0, 5, 7, 8, 7, 0], [0, 1, 0, 2, 2, 1, 1, 2, 1, 3, 3, 1, 2, 0, 0], [39, 36, 62, 36, 15, 98], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 8, 4, 5, 5, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 0], [80, 5, 96, 99, 61, 1, 87]], "fitness": -0.10000000149011612, "mapping_values": [1, 40, 25, 15, 6, 10, 6, 4, 2, 2, 1, 1, 0, 27, 16, 11, 7], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(tf.math.add(grad, tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, alpha))), grad), tf.math.sqrt(grad)), tf.math.subtract(tf.math.pow(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.square(tf.math.add(tf.math.sqrt(tf.math.add(tf.math.negative(grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.sqrt(alpha)))))), beta), tf.math.pow(tf.math.square(tf.math.square(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 6, 3, 0, 2], [0, 1, 0, 2], [72, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [9], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 9, 5, 4, 2, 1, 1, 0, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 2, 3, 3], [2, 1, 0, 2, 1, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 3], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [36, 99, 96, 71, 61, 1]], "fitness": -0.09371428936719894, "mapping_values": [1, 12, 6, 6, 1, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), grad), tf.math.subtract(sigma, alpha))", "other_info": {"loss": [2.310776710510254, 2.3093254566192627, 2.3089308738708496, 2.3093156814575195, 2.309196710586548, 2.308267116546631, 2.3089163303375244, 2.3086905479431152, 2.3076679706573486, 2.3073487281799316, 2.3072822093963623], "accuracy": [0.09206181764602661, 0.09245806187391281, 0.09866596013307571, 0.0874389111995697, 0.09536388516426086, 0.09259014576673508, 0.09417514503002167, 0.0948355570435524, 0.09496764093637466, 0.09496764093637466, 0.09470347315073013], "val_loss": [2.30829119682312, 2.3080294132232666, 2.3078300952911377, 2.3076632022857666, 2.307513952255249, 2.307380199432373, 2.3072566986083984, 2.3071420192718506, 2.3070359230041504, 2.306934356689453, 2.306837320327759], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09066666662693024, 0.09033333510160446, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09033333510160446]}}]