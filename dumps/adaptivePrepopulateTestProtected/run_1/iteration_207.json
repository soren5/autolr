[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8531428575515747, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2229673862457275, 1.8703858852386475, 1.4060722589492798, 1.097254753112793, 0.9424561262130737, 0.8480581045150757, 0.7760665416717529, 0.7514512538909912, 0.7006378769874573, 0.665202796459198, 0.64359050989151, 0.617910623550415, 0.5954763293266296, 0.5846296548843384, 0.5606301426887512, 0.5577707886695862, 0.5309535264968872, 0.5190771818161011, 0.5119268298149109, 0.5027276873588562, 0.4943499267101288, 0.47532597184181213, 0.46890655159950256, 0.4602487087249756, 0.45236629247665405, 0.444379985332489, 0.4385526180267334, 0.4278375506401062, 0.4202737808227539, 0.4133675694465637, 0.4038620889186859, 0.3993954658508301, 0.39524349570274353, 0.39006245136260986, 0.38596269488334656, 0.37577322125434875, 0.3741835355758667, 0.3724493086338043, 0.3599112033843994, 0.35558387637138367, 0.3484654426574707, 0.3523310124874115, 0.34572333097457886, 0.3393814265727997, 0.3288872539997101, 0.3293863534927368, 0.32037293910980225, 0.3241368532180786, 0.31273701786994934, 0.3154178261756897, 0.31194278597831726, 0.30336588621139526, 0.3034447729587555, 0.29639723896980286, 0.2818974256515503, 0.2849690020084381, 0.27672627568244934, 0.27617117762565613, 0.27374279499053955, 0.2653803527355194, 0.25814276933670044, 0.26205939054489136], "accuracy": [0.27961960434913635, 0.4839519262313843, 0.5571258664131165, 0.6240919232368469, 0.6651697158813477, 0.6886804699897766, 0.7187954187393188, 0.7251353859901428, 0.7460044622421265, 0.7555144429206848, 0.7658169269561768, 0.7744023203849792, 0.7824593782424927, 0.7874785661697388, 0.793950617313385, 0.7979130744934082, 0.8041210174560547, 0.8096684813499451, 0.8121780753135681, 0.8195747137069702, 0.8234050869941711, 0.8323867321014404, 0.83119797706604, 0.8368775844573975, 0.8370096683502197, 0.8408400416374207, 0.8428213000297546, 0.8457271456718445, 0.8516708612442017, 0.8531237840652466, 0.8549728989601135, 0.8588033318519592, 0.8582749962806702, 0.8618412613868713, 0.8631620407104492, 0.8647470474243164, 0.8646149635314941, 0.8626337051391602, 0.870030403137207, 0.8782195448875427, 0.8708229064941406, 0.8732003569602966, 0.8766345381736755, 0.8798044919967651, 0.8821820020675659, 0.8805969953536987, 0.8856161832809448, 0.8837670087814331, 0.8898428082466125, 0.8873332738876343, 0.886672854423523, 0.889578640460968, 0.8926165699958801, 0.891559898853302, 0.897899866104126, 0.8990886211395264, 0.900409460067749, 0.8982961177825928, 0.9000132083892822, 0.9035794734954834, 0.9104477763175964, 0.9049002528190613], "val_loss": [2.0389130115509033, 1.521614909172058, 1.0479071140289307, 0.8328800201416016, 0.7434054613113403, 0.6883981823921204, 0.6527090072631836, 0.616833508014679, 0.5869486331939697, 0.5647472739219666, 0.549677848815918, 0.5294614434242249, 0.5160934329032898, 0.5072402358055115, 0.4962290823459625, 0.484932005405426, 0.4726578891277313, 0.4693019688129425, 0.4622868597507477, 0.45578527450561523, 0.446583092212677, 0.44187450408935547, 0.4351218640804291, 0.433013916015625, 0.4284677803516388, 0.42112842202186584, 0.4191717505455017, 0.4149925410747528, 0.4090057909488678, 0.41309237480163574, 0.40198177099227905, 0.3969326615333557, 0.3943215310573578, 0.39824625849723816, 0.3939545154571533, 0.39511212706565857, 0.3892709016799927, 0.3859112858772278, 0.381923109292984, 0.37806007266044617, 0.3759015202522278, 0.3760860562324524, 0.3784654438495636, 0.37219101190567017, 0.3714524805545807, 0.37012171745300293, 0.3649018406867981, 0.36855024099349976, 0.3667190670967102, 0.36185896396636963, 0.36269310116767883, 0.3622020184993744, 0.364806592464447, 0.35611552000045776, 0.3540603518486023, 0.3579847514629364, 0.35543230175971985, 0.3576623499393463, 0.35322681069374084, 0.3546083867549896, 0.35343876481056213, 0.3454722464084625], "val_accuracy": [0.5090000033378601, 0.6549999713897705, 0.687666654586792, 0.7113333344459534, 0.7403333187103271, 0.7549999952316284, 0.7620000243186951, 0.7683333158493042, 0.7796666622161865, 0.7889999747276306, 0.7950000166893005, 0.7996666431427002, 0.812333345413208, 0.8096666932106018, 0.8159999847412109, 0.8209999799728394, 0.8246666789054871, 0.8263333439826965, 0.8266666531562805, 0.8289999961853027, 0.8323333263397217, 0.8379999995231628, 0.8383333086967468, 0.8423333168029785, 0.8420000076293945, 0.847000002861023, 0.8463333249092102, 0.8479999899864197, 0.846666693687439, 0.8453333377838135, 0.8539999723434448, 0.8533333539962769, 0.8573333621025085, 0.8586666584014893, 0.859000027179718, 0.856333315372467, 0.8566666841506958, 0.859666645526886, 0.8629999756813049, 0.862666666507721, 0.8650000095367432, 0.8643333315849304, 0.8619999885559082, 0.8646666407585144, 0.8666666746139526, 0.871666669845581, 0.8693333268165588, 0.8666666746139526, 0.8693333268165588, 0.8706666827201843, 0.8723333477973938, 0.8700000047683716, 0.874666690826416, 0.8723333477973938, 0.875, 0.871666669845581, 0.8766666650772095, 0.8759999871253967, 0.8726666569709778, 0.874666690826416, 0.875333309173584, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8519999980926514, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2922134399414062, 2.1878435611724854, 1.7593650817871094, 1.3479914665222168, 1.0933219194412231, 0.9295061826705933, 0.8479406833648682, 0.8189632892608643, 0.7611927390098572, 0.7313166260719299, 0.7220093011856079, 0.6825399994850159, 0.6541790962219238, 0.6322541236877441, 0.6176121234893799, 0.5995854735374451, 0.584008514881134, 0.5757859349250793, 0.5727277994155884, 0.5424479842185974, 0.5434832572937012, 0.5326605439186096, 0.5209338665008545, 0.5114063024520874, 0.5064401030540466, 0.5012935400009155, 0.4807535409927368, 0.48172855377197266, 0.46196305751800537, 0.45135414600372314, 0.4518251121044159, 0.4370902180671692, 0.4315085709095001, 0.42390674352645874, 0.4061696529388428, 0.40982288122177124, 0.3944777250289917, 0.40223902463912964, 0.39591825008392334], "accuracy": [0.13076211512088776, 0.3214899003505707, 0.4447232782840729, 0.5386342406272888, 0.6284506916999817, 0.6690001487731934, 0.6861709356307983, 0.6927750706672668, 0.703209638595581, 0.7273808121681213, 0.7343811988830566, 0.7460044622421265, 0.7481178045272827, 0.7567031979560852, 0.7711002230644226, 0.7737419009208679, 0.7825914621353149, 0.7824593782424927, 0.785629391670227, 0.7938185334205627, 0.7902522683143616, 0.7969884872436523, 0.8078193068504333, 0.8067626357078552, 0.8026680946350098, 0.8119139075279236, 0.8171972036361694, 0.8189142942428589, 0.8264430165290833, 0.8286884427070618, 0.8321225643157959, 0.8329150676727295, 0.8383304476737976, 0.8401796221733093, 0.852859616279602, 0.8471800088882446, 0.8506141901016235, 0.8470479249954224, 0.8500858545303345], "val_loss": [2.245424270629883, 2.014791488647461, 1.1409589052200317, 0.8819175362586975, 0.7871006727218628, 0.7079928517341614, 0.6938027143478394, 0.6664689779281616, 0.6546589732170105, 0.6329561471939087, 0.6003355979919434, 0.5916361808776855, 0.5771291255950928, 0.5540224313735962, 0.5387327671051025, 0.5274356007575989, 0.5202533602714539, 0.5079619884490967, 0.5085222721099854, 0.505799412727356, 0.5070887207984924, 0.5033746361732483, 0.49892300367355347, 0.48375993967056274, 0.485605388879776, 0.47466593980789185, 0.481204628944397, 0.47798803448677063, 0.4653630256652832, 0.45554423332214355, 0.4512539505958557, 0.4524155259132385, 0.45324012637138367, 0.4344255328178406, 0.42762491106987, 0.42736780643463135, 0.4399643838405609, 0.44509539008140564, 0.4230952858924866], "val_accuracy": [0.42800000309944153, 0.45399999618530273, 0.6309999823570251, 0.687333345413208, 0.718999981880188, 0.7406666874885559, 0.7226666808128357, 0.746666669845581, 0.753333330154419, 0.7680000066757202, 0.7689999938011169, 0.7766666412353516, 0.7856666445732117, 0.796999990940094, 0.7973333597183228, 0.8040000200271606, 0.8016666769981384, 0.8063333630561829, 0.8100000023841858, 0.8136666417121887, 0.8240000009536743, 0.8256666660308838, 0.831333339214325, 0.8346666693687439, 0.8306666612625122, 0.8343333601951599, 0.8320000171661377, 0.8360000252723694, 0.8376666903495789, 0.8423333168029785, 0.8473333120346069, 0.8493333458900452, 0.8486666679382324, 0.8529999852180481, 0.8526666760444641, 0.8516666889190674, 0.8496666550636292, 0.8476666808128357, 0.8513333201408386]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 5], [0], [0], [1], [0], [2], [0]], "fitness": -0.8271428346633911, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.552022933959961, 0.8205193877220154, 0.6761177778244019, 0.5922371745109558, 0.5531346797943115, 0.5445618629455566, 0.5322659611701965, 0.5109496116638184, 0.48648345470428467, 0.4816875755786896, 0.4724442660808563, 0.5037127733230591, 0.4878494143486023, 0.46317607164382935, 0.4556576609611511, 0.4432126581668854, 0.45977693796157837, 0.4451301097869873, 0.458616703748703, 0.46520373225212097, 0.4921717047691345, 0.4477088451385498, 0.49518951773643494, 0.44059398770332336, 0.510417640209198], "accuracy": [0.47549861669540405, 0.7061154246330261, 0.7477215528488159, 0.7866860628128052, 0.7998943328857422, 0.807158887386322, 0.804649293422699, 0.8124422430992126, 0.8261788487434387, 0.8355567455291748, 0.8278959393501282, 0.8240655064582825, 0.830669641494751, 0.830669641494751, 0.8441421389579773, 0.837537944316864, 0.8474441766738892, 0.8401796221733093, 0.8426892161369324, 0.8479725122451782, 0.8376700282096863, 0.8397833704948425, 0.8450667262077332, 0.8421608805656433, 0.8426892161369324], "val_loss": [0.8205996751785278, 0.6313601136207581, 0.561017632484436, 0.5218228101730347, 0.4866143465042114, 0.48479849100112915, 0.48263850808143616, 0.5008854269981384, 0.5277066826820374, 0.47474202513694763, 0.5246590375900269, 0.5215814709663391, 0.5417003035545349, 0.4765961170196533, 0.5051831007003784, 0.5049214959144592, 0.5007084012031555, 0.5134742259979248, 0.5278785824775696, 0.5624164938926697, 0.5191545486450195, 0.5600757598876953, 0.6013916730880737, 0.6200461387634277, 0.5897560119628906], "val_accuracy": [0.7149999737739563, 0.765333354473114, 0.8019999861717224, 0.8063333630561829, 0.8176666498184204, 0.8263333439826965, 0.8303333520889282, 0.8183333277702332, 0.8286666870117188, 0.8416666388511658, 0.8349999785423279, 0.8366666436195374, 0.8259999752044678, 0.8363333344459534, 0.8426666855812073, 0.8479999899864197, 0.8453333377838135, 0.8403333425521851, 0.8420000076293945, 0.8503333330154419, 0.8289999961853027, 0.8393333554267883, 0.8236666917800903, 0.8373333215713501, 0.8463333249092102]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 2, 3, 0, 3], [0, 1, 0, 2], [91, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [53, 99, 43, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.3068647384643555, 20.743160247802734, 6119.5, 303065.5625, 19141664.0, 9768887296.0, 74913759100928.0, 2.1892293557275853e+17], "accuracy": [0.10130762308835983, 0.09602430462837219, 0.10210011899471283, 0.10157178342342377, 0.10421344637870789, 0.1018359512090683, 0.09866596013307571, 0.10698718577623367], "val_loss": [2.320211887359619, 426.2973327636719, 12389.2724609375, 1540479.5, 168833728.0, 163002155008.0, 2878396082159616.0, 2.7609594592525025e+18], "val_accuracy": [0.0989999994635582, 0.0963333323597908, 0.10100000351667404, 0.0989999994635582, 0.0989999994635582, 0.10000000149011612, 0.0963333323597908, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 0], [9, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 0, 8, 5, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0], [6, 3, 3, 6, 8, 0, 4, 2, 4, 2, 8, 7, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 10, 7, 3, 2, 2, 1, 1, 1, 22, 13, 9, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.sqrt(tf.math.square(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma))), tf.math.sqrt(tf.math.add(alpha, beta))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 0, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 8, 3, 1, 8, 2, 2, 1, 4, 2, 8], [4, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 4, 2, 2, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(grad), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3, 7, 8, 2, 6], [0, 1, 0, 2, 2, 3, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 0, 0, 3], [16, 16, 94], [0, 1, 0, 0, 1, 1, 0, 1, 1], [2, 2, 7, 4], [0, 6, 3, 4, 6], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 9, 4, 2, 8, 6], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 37, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 2, 10, 6, 4, 3, 9, 4, 5, 1, 21, 12, 9, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.add(grad, grad)), tf.math.divide_no_nan(grad, alpha))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(grad, sigma), tf.math.pow(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.divide_no_nan(alpha, beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1026284471154213, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]