[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8517143130302429, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2231884002685547, 1.8643361330032349, 1.3884156942367554, 1.090597152709961, 0.9456563591957092, 0.8406423330307007, 0.7788093686103821, 0.7282004356384277, 0.68904709815979, 0.6635300517082214, 0.6309735774993896, 0.6094805002212524, 0.5932757258415222, 0.5788427591323853, 0.5642632842063904, 0.5496237874031067, 0.5295682549476624, 0.5162773132324219, 0.507341206073761, 0.489420622587204, 0.47937318682670593, 0.4811500012874603, 0.4728376567363739, 0.4584571123123169, 0.446977436542511, 0.4464741051197052, 0.44081196188926697, 0.42768609523773193, 0.4198531210422516, 0.4076061248779297, 0.40737685561180115, 0.39593371748924255, 0.3993036448955536, 0.38705718517303467, 0.3773685693740845, 0.3833279311656952, 0.3723680078983307, 0.3592432141304016, 0.3587399423122406, 0.3561384975910187, 0.3498117923736572, 0.3517473340034485, 0.3366829752922058, 0.33957967162132263], "accuracy": [0.27037379145622253, 0.48606523871421814, 0.5606921315193176, 0.6176198720932007, 0.661471426486969, 0.6985867023468018, 0.7153612375259399, 0.7367587089538574, 0.7440232634544373, 0.7544577717781067, 0.7700436115264893, 0.7781006693840027, 0.7798177003860474, 0.7910447716712952, 0.7915731072425842, 0.8018755912780762, 0.8041210174560547, 0.8112534880638123, 0.817989706993103, 0.8257825970649719, 0.8276317715644836, 0.8228767514228821, 0.8301413059234619, 0.8321225643157959, 0.8388587832450867, 0.8441421389579773, 0.8387266993522644, 0.8466516733169556, 0.8500858545303345, 0.8494254350662231, 0.8582749962806702, 0.858671247959137, 0.8533879518508911, 0.8632941246032715, 0.867520809173584, 0.8562937378883362, 0.8683133125305176, 0.8704266548156738, 0.8705587387084961, 0.873860776424408, 0.8767666220664978, 0.8771628737449646, 0.8767666220664978, 0.8792761564254761], "val_loss": [2.0373685359954834, 1.5124788284301758, 1.0478594303131104, 0.8470668792724609, 0.756210207939148, 0.6992858648300171, 0.6519470810890198, 0.617296576499939, 0.5944023728370667, 0.569783627986908, 0.5494692921638489, 0.5323601365089417, 0.519225001335144, 0.5037800073623657, 0.4942915439605713, 0.48542603850364685, 0.4777471423149109, 0.46794962882995605, 0.46127334237098694, 0.449778288602829, 0.44915616512298584, 0.4418943226337433, 0.43934857845306396, 0.43487051129341125, 0.4301728904247284, 0.425789475440979, 0.4171951413154602, 0.41400977969169617, 0.4102383553981781, 0.4170589745044708, 0.4121643602848053, 0.40334805846214294, 0.39479362964630127, 0.3934608995914459, 0.39286673069000244, 0.39314591884613037, 0.38401931524276733, 0.3891502618789673, 0.38540953397750854, 0.3821309804916382, 0.3855171799659729, 0.3856460750102997, 0.38530126214027405, 0.3795556128025055], "val_accuracy": [0.5419999957084656, 0.653333306312561, 0.6793333292007446, 0.7003333568572998, 0.731333315372467, 0.7456666827201843, 0.762333333492279, 0.7730000019073486, 0.777999997138977, 0.7906666398048401, 0.7986666560173035, 0.800000011920929, 0.8096666932106018, 0.8226666450500488, 0.8253333568572998, 0.8259999752044678, 0.8266666531562805, 0.8286666870117188, 0.8353333473205566, 0.8393333554267883, 0.8339999914169312, 0.843666672706604, 0.8460000157356262, 0.843666672706604, 0.843666672706604, 0.8476666808128357, 0.8506666421890259, 0.8526666760444641, 0.8519999980926514, 0.8500000238418579, 0.8526666760444641, 0.8573333621025085, 0.8579999804496765, 0.859333336353302, 0.8606666922569275, 0.8579999804496765, 0.8619999885559082, 0.859666645526886, 0.8653333187103271, 0.8616666793823242, 0.8603333234786987, 0.8603333234786987, 0.8600000143051147, 0.8643333315849304]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 1, 1], [0, 3, 4], [0, 1, 1], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8462857007980347, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2941107749938965, 2.1934869289398193, 1.7789160013198853, 1.363996982574463, 1.0923585891723633, 0.9578086733818054, 0.8651060461997986, 0.8445830345153809, 0.7801787853240967, 0.7596778273582458, 0.7168701887130737, 0.6724241375923157, 0.6498222351074219, 0.6283152103424072, 0.6074694991111755, 0.5910165309906006, 0.5882177352905273, 0.5739105343818665, 0.5733662843704224, 0.5522803664207458, 0.5412421226501465, 0.5192768573760986, 0.526435911655426, 0.5042544603347778, 0.4819823205471039, 0.4671960771083832, 0.46128764748573303, 0.4606269299983978, 0.44983378052711487, 0.43721386790275574, 0.4380929172039032, 0.419943630695343, 0.41443300247192383, 0.41448527574539185], "accuracy": [0.13076211512088776, 0.3183199167251587, 0.44049662351608276, 0.5386342406272888, 0.635451078414917, 0.659490168094635, 0.6902654767036438, 0.6995112895965576, 0.705058753490448, 0.7087571024894714, 0.7305507659912109, 0.7486461400985718, 0.757099449634552, 0.7677981853485107, 0.7695152759552002, 0.7738739848136902, 0.7832518815994263, 0.7784969210624695, 0.7817989587783813, 0.7942147850990295, 0.7960638999938965, 0.8000264167785645, 0.800818920135498, 0.8042530417442322, 0.81548011302948, 0.8210275769233704, 0.8276317715644836, 0.8236692547798157, 0.8309338092803955, 0.8380662798881531, 0.8313300609588623, 0.8441421389579773, 0.8479725122451782, 0.8441421389579773], "val_loss": [2.2469916343688965, 2.0262880325317383, 1.1429787874221802, 0.884920060634613, 0.7702236175537109, 0.7210025787353516, 0.6911962628364563, 0.6389386057853699, 0.6276967525482178, 0.6096657514572144, 0.5644286274909973, 0.5356332063674927, 0.528688907623291, 0.5095890760421753, 0.50850909948349, 0.48772183060646057, 0.48530590534210205, 0.4797833561897278, 0.4775227904319763, 0.4680626690387726, 0.4623505175113678, 0.4565432071685791, 0.44977355003356934, 0.4425957500934601, 0.433879554271698, 0.4286383390426636, 0.42287391424179077, 0.421357125043869, 0.4208689033985138, 0.4185507893562317, 0.41795897483825684, 0.41602712869644165, 0.41292211413383484, 0.40002161264419556], "val_accuracy": [0.42266666889190674, 0.4753333330154419, 0.6613333225250244, 0.7003333568572998, 0.718999981880188, 0.7393333315849304, 0.7446666955947876, 0.7646666765213013, 0.7749999761581421, 0.7720000147819519, 0.7739999890327454, 0.7916666865348816, 0.7950000166893005, 0.8009999990463257, 0.8009999990463257, 0.8113333582878113, 0.8143333196640015, 0.8276666402816772, 0.824999988079071, 0.8266666531562805, 0.8366666436195374, 0.8330000042915344, 0.8343333601951599, 0.8413333296775818, 0.843999981880188, 0.8446666598320007, 0.8526666760444641, 0.8539999723434448, 0.8560000061988831, 0.8523333072662354, 0.8506666421890259, 0.8513333201408386, 0.8560000061988831, 0.8550000190734863]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0, 1, 1, 1], [0, 2, 5, 7, 5], [0, 7, 3], [0], [1], [0], [2], [0]], "fitness": -0.8311428427696228, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5461188554763794, 0.8401820659637451, 0.6956393718719482, 0.647584855556488, 0.5727702379226685, 0.5516021847724915, 0.5096340775489807, 0.4794153869152069, 0.46702250838279724, 0.48878028988838196, 0.44952958822250366, 0.45553797483444214, 0.46772873401641846, 0.45429685711860657, 0.4423280358314514, 0.4771077334880829, 0.5054463148117065, 0.5063230991363525, 0.546550989151001, 0.5888617038726807], "accuracy": [0.4881785809993744, 0.7153612375259399, 0.7429665923118591, 0.7650244235992432, 0.7821952104568481, 0.800290584564209, 0.8121780753135681, 0.8232730031013489, 0.817989706993103, 0.828292191028595, 0.8403117060661316, 0.8354246616363525, 0.8389908671379089, 0.8408400416374207, 0.8376700282096863, 0.8345000743865967, 0.8257825970649719, 0.8370096683502197, 0.8146876096725464, 0.8310658931732178], "val_loss": [0.8828140497207642, 0.6111937761306763, 0.544173002243042, 0.5183725357055664, 0.5349401235580444, 0.4822326600551605, 0.4826057255268097, 0.48952847719192505, 0.5247508883476257, 0.5263450145721436, 0.5101253986358643, 0.5103525519371033, 0.5191811919212341, 0.5255842804908752, 0.5284642577171326, 0.5126761198043823, 0.611556887626648, 0.5071701407432556, 0.5943705439567566, 0.66991126537323], "val_accuracy": [0.7213333249092102, 0.7753333449363708, 0.8023333549499512, 0.8153333067893982, 0.8090000152587891, 0.8299999833106995, 0.8360000252723694, 0.8399999737739563, 0.8266666531562805, 0.8393333554267883, 0.8386666774749756, 0.843666672706604, 0.8346666693687439, 0.8303333520889282, 0.847000002861023, 0.8339999914169312, 0.843666672706604, 0.8323333263397217, 0.8456666469573975, 0.8299999833106995]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 2], [82, 39], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 2], [0, 2, 0, 3], [16, 16], [0, 1], [0], [1], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 2], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 4, 2, 2, 1, 2, 1, 1, 0, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [7.54166841506958, 58.66550827026367, 200.7222900390625, 494.9989318847656, 995.0098266601562, 1772.1641845703125], "accuracy": [0.0952318087220192, 0.09840179979801178, 0.1014397069811821, 0.10011887550354004, 0.09919429570436478, 0.09985470771789551], "val_loss": [20.461681365966797, 95.31756591796875, 263.4075012207031, 572.9696044921875, 1072.02734375, 1809.0701904296875], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 38], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [93, 16], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 7, 4, 7, 6, 0, 0, 1, 4, 5, 5, 7, 4], [0, 7, 4, 6, 5, 4, 4, 5, 3], [99], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 1], [0, 0, 2, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 2, 22, 13, 9, 1, 10, 5, 5, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.divide_no_nan(tf.math.negative(tf.math.negative(grad)), grad))), tf.math.subtract(tf.math.pow(grad, tf.math.square(grad)), tf.math.square(tf.math.add(tf.math.pow(grad, grad), sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(beta), sigma), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 20], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [2, 0, 3, 6, 8, 1, 2, 1, 3, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 54, 18, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [335127.1875, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [87, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 2, 3, 4, 3, 2, 7, 1, 9], [3, 2, 0, 3, 4, 3, 4, 4], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 0, 9, 2, 8], [0, 3, 0, 3, 0, 0, 3, 4, 4, 0], [16, 99, 16, 18, 32, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 17, 9, 8, 2, 2, 1, 1, 1, 15, 9, 6, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.pow(grad, beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), tf.math.add(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(sigma, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [631583.5, 51952828.0, 516557312.0, 2446593280.0, 7834117120.0, 19380164608.0], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.1018359512090683, 0.1022322028875351, 0.1022322028875351, 0.1022322028875351], "val_loss": [5639845.0, 152427344.0, 998644288.0, 3743172352.0, 10379413504.0, 23822491648.0], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]