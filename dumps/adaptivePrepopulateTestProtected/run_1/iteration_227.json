[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8625714182853699, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222493886947632, 1.8653538227081299, 1.3893357515335083, 1.092241644859314, 0.933987021446228, 0.8366780281066895, 0.7733109593391418, 0.7267064452171326, 0.6839326024055481, 0.6539025902748108, 0.6383981108665466, 0.6074762344360352, 0.5975770950317383, 0.5780118703842163, 0.5646637678146362, 0.5553334951400757, 0.5377463102340698, 0.5158056616783142, 0.5108226537704468, 0.4962751567363739, 0.49588415026664734, 0.47708138823509216, 0.4796501398086548, 0.46309733390808105, 0.4616727828979492, 0.44804686307907104, 0.4407101571559906, 0.4364352524280548, 0.43064162135124207, 0.4135654866695404, 0.4130668342113495, 0.4105845093727112, 0.39749443531036377, 0.39633822441101074, 0.39251160621643066, 0.3797672986984253, 0.3785766661167145, 0.36998099088668823, 0.37087902426719666, 0.35550618171691895, 0.3673064410686493, 0.35976552963256836, 0.35450273752212524, 0.3438977897167206, 0.3409471809864044, 0.33961784839630127, 0.33383050560951233, 0.3219660520553589, 0.32424381375312805, 0.3199715316295624, 0.31531810760498047, 0.30919739603996277, 0.2997361719608307, 0.29697108268737793, 0.2976562976837158, 0.2951386570930481, 0.2870696783065796], "accuracy": [0.27341169118881226, 0.48091402649879456, 0.5724474787712097, 0.6173557043075562, 0.6666226387023926, 0.6999075412750244, 0.7160216569900513, 0.737947404384613, 0.7563069462776184, 0.7631752490997314, 0.7709681391716003, 0.7799497842788696, 0.7844406366348267, 0.7915731072425842, 0.8010830879211426, 0.7994980812072754, 0.81112140417099, 0.8161405324935913, 0.8190463781356812, 0.8294808864593506, 0.8220842480659485, 0.8294808864593506, 0.8304054737091064, 0.8348963260650635, 0.8355567455291748, 0.842028796672821, 0.8412362933158875, 0.8417646288871765, 0.847840428352356, 0.8520671129226685, 0.8510104417800903, 0.857218325138092, 0.8607845902442932, 0.8595958352088928, 0.8648791313171387, 0.8648791313171387, 0.8672566413879395, 0.8698983192443848, 0.8696341514587402, 0.872407853603363, 0.8701624870300293, 0.8734645247459412, 0.8749174475669861, 0.8802007436752319, 0.8778232932090759, 0.8778232932090759, 0.8770307898521423, 0.8853520154953003, 0.8850878477096558, 0.8820499181747437, 0.8902390599250793, 0.8908994793891907, 0.8942015767097473, 0.898428201675415, 0.8942015767097473, 0.8947299122810364, 0.8982961177825928], "val_loss": [2.0430941581726074, 1.5279942750930786, 1.0591567754745483, 0.8551201820373535, 0.7656043171882629, 0.7074384689331055, 0.6632696986198425, 0.6259524822235107, 0.6012815237045288, 0.5781747102737427, 0.5620520710945129, 0.5425226092338562, 0.5289806127548218, 0.5157585740089417, 0.5054236054420471, 0.49889203906059265, 0.4823743402957916, 0.46947047114372253, 0.4654565453529358, 0.4583863914012909, 0.45316973328590393, 0.44139039516448975, 0.43807095289230347, 0.4298050105571747, 0.4241245985031128, 0.41951847076416016, 0.4144439995288849, 0.4150373637676239, 0.4080715775489807, 0.40026187896728516, 0.4017263650894165, 0.3961341977119446, 0.39500692486763, 0.3861677348613739, 0.38186514377593994, 0.38571062684059143, 0.37977999448776245, 0.37731072306632996, 0.3693833351135254, 0.3716883957386017, 0.37279948592185974, 0.3765588104724884, 0.36409488320350647, 0.3615071177482605, 0.3639267683029175, 0.3580080568790436, 0.35745978355407715, 0.36003026366233826, 0.35486695170402527, 0.35585668683052063, 0.3481033146381378, 0.3433692753314972, 0.3534584939479828, 0.34393230080604553, 0.3424735367298126, 0.34250888228416443, 0.34935665130615234], "val_accuracy": [0.531000018119812, 0.6336666941642761, 0.6636666655540466, 0.6919999718666077, 0.7246666550636292, 0.7400000095367432, 0.7566666603088379, 0.7680000066757202, 0.7793333530426025, 0.7776666879653931, 0.7950000166893005, 0.8003333210945129, 0.8050000071525574, 0.8119999766349792, 0.8180000185966492, 0.8216666579246521, 0.8293333053588867, 0.831333339214325, 0.8309999704360962, 0.8410000205039978, 0.8426666855812073, 0.843666672706604, 0.8456666469573975, 0.8526666760444641, 0.8506666421890259, 0.8500000238418579, 0.8529999852180481, 0.8513333201408386, 0.8536666631698608, 0.859333336353302, 0.8603333234786987, 0.8640000224113464, 0.8573333621025085, 0.8683333396911621, 0.8666666746139526, 0.8629999756813049, 0.8629999756813049, 0.8686666488647461, 0.8690000176429749, 0.8713333606719971, 0.8679999709129333, 0.8679999709129333, 0.8723333477973938, 0.871666669845581, 0.8726666569709778, 0.8759999871253967, 0.8723333477973938, 0.8713333606719971, 0.8706666827201843, 0.8736666440963745, 0.8763333559036255, 0.8790000081062317, 0.871999979019165, 0.8766666650772095, 0.8763333559036255, 0.8769999742507935, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 5], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.833142876625061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2930824756622314, 2.1882619857788086, 1.7721527814865112, 1.3531919717788696, 1.092157006263733, 0.9374063611030579, 0.8662973046302795, 0.837623119354248, 0.7952314615249634, 0.7512800097465515, 0.7196245193481445, 0.7106279134750366, 0.6706128716468811, 0.6429265141487122, 0.6229638457298279, 0.6095041632652283, 0.5872688293457031, 0.5778176784515381, 0.5772112607955933, 0.5563112497329712, 0.5523853898048401, 0.5297579765319824, 0.5158600807189941, 0.5098652839660645, 0.5076441168785095, 0.49717485904693604, 0.476919025182724, 0.4751681089401245, 0.46737077832221985], "accuracy": [0.12812046706676483, 0.3276977837085724, 0.4345529079437256, 0.5337471961975098, 0.6244881749153137, 0.6516972780227661, 0.6787742972373962, 0.6963412761688232, 0.6925109028816223, 0.7136441469192505, 0.7297582626342773, 0.7297582626342773, 0.7461365461349487, 0.7569673657417297, 0.759080708026886, 0.763439416885376, 0.7737419009208679, 0.7844406366348267, 0.7796856164932251, 0.789459764957428, 0.7905164361000061, 0.7895918488502502, 0.8112534880638123, 0.8076872229576111, 0.8058380484580994, 0.8101968169212341, 0.8175934553146362, 0.8227446675300598, 0.8239334225654602], "val_loss": [2.2461509704589844, 2.014129400253296, 1.1467230319976807, 0.8771854043006897, 0.7610921859741211, 0.7088211178779602, 0.689625084400177, 0.6667664647102356, 0.6605644822120667, 0.6140161752700806, 0.5907261371612549, 0.5575830340385437, 0.5485608577728271, 0.5414139628410339, 0.5260593891143799, 0.5064619779586792, 0.4990786910057068, 0.5000132918357849, 0.49813756346702576, 0.4829862117767334, 0.4789760708808899, 0.4838396906852722, 0.46454569697380066, 0.4444849491119385, 0.4597559869289398, 0.4441866874694824, 0.4464544653892517, 0.44149884581565857, 0.44258907437324524], "val_accuracy": [0.4206666648387909, 0.46533334255218506, 0.6470000147819519, 0.7013333439826965, 0.7200000286102295, 0.7406666874885559, 0.737666666507721, 0.7486666440963745, 0.7429999709129333, 0.7720000147819519, 0.7673333287239075, 0.7886666655540466, 0.7986666560173035, 0.79666668176651, 0.8053333163261414, 0.8086666464805603, 0.8119999766349792, 0.809333324432373, 0.8109999895095825, 0.8169999718666077, 0.8276666402816772, 0.8226666450500488, 0.8383333086967468, 0.8450000286102295, 0.8296666741371155, 0.8403333425521851, 0.8360000252723694, 0.8420000076293945, 0.8373333215713501]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 8], [0], [0], [1], [0], [2], [0]], "fitness": -0.8325714468955994, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.711909532546997, 0.9729623198509216, 0.7283014059066772, 0.6626081466674805, 0.6189545392990112, 0.5933986902236938, 0.5613077878952026, 0.5562820434570312, 0.5473913550376892, 0.5275730490684509, 0.5411015152931213, 0.5267706513404846, 0.5433633923530579, 0.5344986319541931, 0.520211935043335, 0.5223870277404785, 0.5567238926887512, 0.553377628326416, 0.5625399947166443], "accuracy": [0.4655923843383789, 0.6701889038085938, 0.7316074371337891, 0.7464007139205933, 0.7671377658843994, 0.7812706232070923, 0.791969358921051, 0.8037247657775879, 0.7959318161010742, 0.8195747137069702, 0.7993659973144531, 0.8181217908859253, 0.8235371708869934, 0.8115176558494568, 0.81548011302948, 0.8253863453865051, 0.8248580098152161, 0.819442629814148, 0.8168009519577026], "val_loss": [0.9885655045509338, 0.5768259167671204, 0.5716833472251892, 0.5237885117530823, 0.500135600566864, 0.506452202796936, 0.5127212405204773, 0.5000289082527161, 0.488614022731781, 0.5097566843032837, 0.5065831542015076, 0.5323165059089661, 0.49783027172088623, 0.47883251309394836, 0.5107372403144836, 0.5365899801254272, 0.5775070786476135, 0.5743982791900635, 0.5653916597366333], "val_accuracy": [0.643666684627533, 0.7886666655540466, 0.777999997138977, 0.7976666688919067, 0.8106666803359985, 0.8180000185966492, 0.8073333501815796, 0.8206666707992554, 0.8309999704360962, 0.8176666498184204, 0.82833331823349, 0.8306666612625122, 0.831333339214325, 0.8420000076293945, 0.8379999995231628, 0.8373333215713501, 0.8296666741371155, 0.8256666660308838, 0.8389999866485596]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 8, 0, 0, 2], [0, 0, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 1, 0, 3, 5], [0, 3, 0, 0], [58, 16, 39], [0, 1], [0], [4], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 5, 1, 4, 1, 4, 0, 8, 0, 0], [0, 4, 0, 3, 4, 0, 3, 0, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 4, 1, 1, 10, 6, 4, 3, 2, 1, 1, 0, 22, 13, 9, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.negative(grad)))), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.negative(sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [5, 2, 3, 0, 3], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 62], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 1, 3, 6, 8, 1, 4, 1, 4, 2, 0], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 7, 4, 3, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303682804107666, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 0, 0, 3], [0, 1, 0, 2], [5, 20], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 6, 2, 5, 2, 8, 1], [0, 2, 3, 3, 2, 5, 3], [15, 65], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 2, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 16, 9, 7, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), beta), tf.math.add(tf.math.square(tf.math.add(grad, grad)), beta)), tf.math.sqrt(tf.math.subtract(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3], [2, 0, 1, 0, 2], [39, 39, 97], [0, 1], [0, 2, 3, 0, 3, 5], [3], [0], [1, 1], [0], [4], [99], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 0, 8, 5, 4, 1, 4, 2, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 66, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3029909133911133, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]