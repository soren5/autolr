[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8637142777442932, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222334146499634, 1.8602325916290283, 1.3904852867126465, 1.0850727558135986, 0.920748770236969, 0.8367488980293274, 0.7719094157218933, 0.7190527319908142, 0.6724769473075867, 0.6494174003601074, 0.6156752705574036, 0.5993779897689819, 0.57790607213974, 0.5622612833976746, 0.5466562509536743, 0.5385096073150635, 0.5167747735977173, 0.5045276880264282, 0.496341735124588, 0.48705247044563293, 0.47581911087036133, 0.46297162771224976, 0.4602164924144745, 0.44323548674583435, 0.4435758590698242, 0.43949058651924133, 0.43570587038993835, 0.419271856546402, 0.4147767424583435, 0.4086337387561798, 0.39436423778533936, 0.3990095853805542, 0.397579163312912, 0.38573557138442993, 0.3855186402797699, 0.37300875782966614, 0.37459710240364075, 0.36338555812835693, 0.3542570471763611, 0.35220474004745483, 0.3431346118450165, 0.3424442410469055, 0.33229300379753113, 0.3283137381076813, 0.3309651017189026, 0.32898640632629395, 0.31823813915252686, 0.3188507556915283, 0.3167901933193207], "accuracy": [0.27024170756340027, 0.48329150676727295, 0.566239595413208, 0.6234315037727356, 0.674679696559906, 0.7077004313468933, 0.722229540348053, 0.739928662776947, 0.7588165402412415, 0.7622507214546204, 0.778232753276825, 0.7828556299209595, 0.7923656105995178, 0.8030643463134766, 0.8005547523498535, 0.8033285140991211, 0.8171972036361694, 0.8203672170639038, 0.8244617581367493, 0.8257825970649719, 0.8321225643157959, 0.8350284099578857, 0.8334434032440186, 0.8399154543876648, 0.837141752243042, 0.844010055065155, 0.847840428352356, 0.8498216867446899, 0.8500858545303345, 0.8536521196365356, 0.860652506351471, 0.857218325138092, 0.8594637513160706, 0.8602562546730042, 0.8622375130653381, 0.8669924736022949, 0.8689737319946289, 0.8717474341392517, 0.874389111995697, 0.8735966086387634, 0.8774270415306091, 0.8790120482444763, 0.8794082403182983, 0.8803328275680542, 0.8811253309249878, 0.8817857503890991, 0.885219931602478, 0.8815215826034546, 0.8868049383163452], "val_loss": [2.0363125801086426, 1.5096070766448975, 1.0424631834030151, 0.8399295806884766, 0.7497482299804688, 0.6998834609985352, 0.6533379554748535, 0.6196092367172241, 0.5992040634155273, 0.5733457207679749, 0.5581380724906921, 0.5401087999343872, 0.52923184633255, 0.5151441097259521, 0.507859468460083, 0.5005102753639221, 0.48314058780670166, 0.4803957939147949, 0.4748005270957947, 0.46342334151268005, 0.4627916216850281, 0.450446218252182, 0.457482248544693, 0.4422277808189392, 0.4331342279911041, 0.4331062138080597, 0.4282010793685913, 0.4286511540412903, 0.4274710416793823, 0.4206579923629761, 0.41730189323425293, 0.41300225257873535, 0.41269025206565857, 0.4142400324344635, 0.40263631939888, 0.4055178165435791, 0.40225234627723694, 0.4003368616104126, 0.3935154676437378, 0.3934920132160187, 0.39298194646835327, 0.38946542143821716, 0.3853182792663574, 0.3889535665512085, 0.38963717222213745, 0.38507434725761414, 0.3856094181537628, 0.38207894563674927, 0.3758968114852905], "val_accuracy": [0.5360000133514404, 0.6516666412353516, 0.690666675567627, 0.7103333473205566, 0.7283333539962769, 0.7436666488647461, 0.7573333382606506, 0.7689999938011169, 0.7749999761581421, 0.7870000004768372, 0.7929999828338623, 0.7996666431427002, 0.8076666593551636, 0.8143333196640015, 0.8106666803359985, 0.8180000185966492, 0.8233333230018616, 0.8233333230018616, 0.8263333439826965, 0.8299999833106995, 0.8299999833106995, 0.8333333134651184, 0.8296666741371155, 0.8363333344459534, 0.8389999866485596, 0.8353333473205566, 0.8433333039283752, 0.8450000286102295, 0.8443333506584167, 0.8443333506584167, 0.8463333249092102, 0.846666693687439, 0.8443333506584167, 0.8479999899864197, 0.8493333458900452, 0.8486666679382324, 0.8516666889190674, 0.8510000109672546, 0.8533333539962769, 0.856333315372467, 0.8569999933242798, 0.8550000190734863, 0.856333315372467, 0.8613333106040955, 0.8510000109672546, 0.8543333411216736, 0.8606666922569275, 0.8560000061988831, 0.8603333234786987]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 3, 7, 0, 8], [0, 5, 5, 4], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8588571548461914, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), grad), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292362689971924, 2.1905605792999268, 1.7688956260681152, 1.3510814905166626, 1.068962574005127, 0.9041905403137207, 0.8312016129493713, 0.8118282556533813, 0.7539535164833069, 0.7157647609710693, 0.6895300149917603, 0.6732577085494995, 0.6307244896888733, 0.6146942973136902, 0.5908516645431519, 0.5915699601173401, 0.5631563067436218, 0.563732922077179, 0.5361663103103638, 0.5216422080993652, 0.5209223628044128, 0.5081576704978943, 0.48926597833633423, 0.48672276735305786, 0.47821366786956787, 0.47896939516067505, 0.4681362807750702, 0.4528455436229706, 0.43545258045196533, 0.42755207419395447, 0.43889614939689636, 0.4104614853858948, 0.4144483506679535, 0.4074080288410187, 0.40007302165031433, 0.38633784651756287, 0.38091662526130676, 0.3643304109573364, 0.37022700905799866, 0.3596799373626709, 0.35670775175094604, 0.3448382019996643], "accuracy": [0.12389380484819412, 0.3160744905471802, 0.43547746539115906, 0.5521067380905151, 0.6487914323806763, 0.67666095495224, 0.6991150379180908, 0.7078325152397156, 0.7117950320243835, 0.735041618347168, 0.7442874312400818, 0.7454761862754822, 0.7676661014556885, 0.7732135653495789, 0.7796856164932251, 0.7857614755630493, 0.7927618622779846, 0.7942147850990295, 0.8010830879211426, 0.8038568496704102, 0.8062343001365662, 0.8090080618858337, 0.8162726163864136, 0.8228767514228821, 0.8226125836372375, 0.8173292875289917, 0.8206313848495483, 0.8322546482086182, 0.8366134166717529, 0.8334434032440186, 0.8401796221733093, 0.8507462739944458, 0.8470479249954224, 0.8495575189590454, 0.8496896028518677, 0.8578787446022034, 0.8590674996376038, 0.8577466607093811, 0.863558292388916, 0.8658037185668945, 0.8685774803161621, 0.869502067565918], "val_loss": [2.246019124984741, 2.0203170776367188, 1.1534700393676758, 0.9013435244560242, 0.776738703250885, 0.6974139213562012, 0.6868252158164978, 0.6561397910118103, 0.6258505582809448, 0.6013675332069397, 0.5713674426078796, 0.5593648552894592, 0.5570952892303467, 0.538375735282898, 0.5464478731155396, 0.5228999257087708, 0.5098010301589966, 0.4949151873588562, 0.49622270464897156, 0.48654279112815857, 0.47823476791381836, 0.4744925796985626, 0.4758721590042114, 0.47722890973091125, 0.4644834101200104, 0.45846080780029297, 0.4497746229171753, 0.44739362597465515, 0.4487707018852234, 0.44715213775634766, 0.4299883246421814, 0.4253380596637726, 0.4217250943183899, 0.4157460033893585, 0.4160422086715698, 0.4110408425331116, 0.4095931351184845, 0.4125792980194092, 0.4167653024196625, 0.4151065945625305, 0.41151881217956543, 0.41013696789741516], "val_accuracy": [0.3946666717529297, 0.4936666786670685, 0.6426666378974915, 0.6930000185966492, 0.722000002861023, 0.7366666793823242, 0.7416666746139526, 0.749666690826416, 0.7670000195503235, 0.7680000066757202, 0.7846666574478149, 0.7820000052452087, 0.7863333225250244, 0.7943333387374878, 0.7993333339691162, 0.8053333163261414, 0.8106666803359985, 0.8116666674613953, 0.8103333115577698, 0.815666675567627, 0.8226666450500488, 0.815666675567627, 0.8286666870117188, 0.8296666741371155, 0.8339999914169312, 0.8366666436195374, 0.8426666855812073, 0.8483333587646484, 0.8426666855812073, 0.8489999771118164, 0.8500000238418579, 0.8486666679382324, 0.8473333120346069, 0.843666672706604, 0.8473333120346069, 0.8553333282470703, 0.8579999804496765, 0.8556666374206543, 0.856333315372467, 0.8550000190734863, 0.8556666374206543, 0.8529999852180481]}, "mapping_values": [1, 10, 5, 5, 3, 10, 6, 4, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8391428589820862, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5687147378921509, 0.9749521017074585, 0.7338662147521973, 0.6653540730476379, 0.617294430732727, 0.5855548977851868, 0.5731300115585327, 0.5480840802192688, 0.5471802949905396, 0.5070288777351379, 0.49158647656440735, 0.509994626045227, 0.4824816882610321, 0.49476656317710876, 0.4959560036659241, 0.5170118808746338, 0.513881266117096, 0.5360574722290039, 0.5369518995285034, 0.5503894686698914], "accuracy": [0.45727115869522095, 0.6882842183113098, 0.7351737022399902, 0.750759482383728, 0.7736098170280457, 0.7872143983840942, 0.7935543656349182, 0.8017435073852539, 0.8020076751708984, 0.8198388814926147, 0.8201030492782593, 0.828820526599884, 0.8234050869941711, 0.8257825970649719, 0.833179235458374, 0.8277638554573059, 0.8142913579940796, 0.8366134166717529, 0.8284242749214172, 0.809140145778656], "val_loss": [0.8013257384300232, 0.6380113363265991, 0.5574608445167542, 0.5292796492576599, 0.482688307762146, 0.49905192852020264, 0.4810176193714142, 0.4655115604400635, 0.47149336338043213, 0.4669487178325653, 0.46599695086479187, 0.4566141664981842, 0.5145542621612549, 0.46162745356559753, 0.4912759065628052, 0.47704941034317017, 0.5058680772781372, 0.5651533007621765, 0.5277869701385498, 0.5839420557022095], "val_accuracy": [0.7253333330154419, 0.7789999842643738, 0.7876666784286499, 0.8019999861717224, 0.8273333311080933, 0.8223333358764648, 0.8240000009536743, 0.8309999704360962, 0.8316666483879089, 0.8286666870117188, 0.8336666822433472, 0.8476666808128357, 0.8353333473205566, 0.8360000252723694, 0.8506666421890259, 0.8330000042915344, 0.8383333086967468, 0.8276666402816772, 0.8379999995231628, 0.8323333263397217]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 9, 3, 6], [0, 1, 0, 2], [39, 39, 23], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 6, 5, 1, 6, 5, 6, 8], [0, 2, 0, 3, 0, 0, 3], [16, 16, 87, 45], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 3, 2, 8, 2, 4, 1, 4, 2, 8], [0, 2, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 26, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 18, 11, 7, 4, 2, 1, 1, 0, 21, 11, 10, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(beta), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.math.divide_no_nan(grad, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 0, 1, 6], [2, 1, 0, 2, 3], [39, 52], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 0, 0, 3], [16, 16, 54], [0, 0, 1, 0, 1], [0, 4, 5], [0, 7], [99], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 4, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 77, 96, 42, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 10, 6, 4, 3, 5, 3, 2, 1, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.subtract(grad, tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303746461868286, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [1, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 1, 2, 6, 8, 1, 4, 4, 4, 2, 8], [0, 3, 0, 3, 0, 0, 0, 1, 2, 0], [16, 99, 96, 99, 61, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 0, 10, 6, 4, 2, 2, 1, 1, 1, 18, 9, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(sigma, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), alpha), beta)", "other_info": {"loss": [192818.453125, 456084.46875, 606290.9375, NaN, NaN, NaN], "accuracy": [0.10302469879388809, 0.09998679161071777, 0.09998679161071777, 0.09708096832036972, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, 549401.625, 671898.875, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 3, 0, 3], [0, 1, 0, 2], [39, 51], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [2, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 2, 1, 4, 1, 4, 2, 8, 2, 4, 0], [0, 0, 0, 3, 0, 0, 1, 1, 2, 0, 7, 0, 2], [16, 99, 7, 99, 61, 81, 89]], "fitness": -0.08828571438789368, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 1, 2, 1, 1, 1, 27, 14, 13, 7], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.pow(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), grad))), tf.math.negative(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [2.3106184005737305, 2.309753894805908, 2.3079583644866943, 2.3093981742858887, 2.310410976409912, 2.3087170124053955], "accuracy": [0.09576013684272766, 0.08928807079792023, 0.1006472036242485, 0.09113723784685135, 0.08942015469074249, 0.09272222965955734], "val_loss": [2.309462308883667, 2.309462308883667, 2.309462308883667, 2.309462308883667, 2.309462308883667, 2.309462308883667], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]