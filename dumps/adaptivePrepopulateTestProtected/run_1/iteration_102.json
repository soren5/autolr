[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], [0, 7, 4, 7, 2, 5, 8], [0, 3, 7, 4, 0], [0, 78], [0, 1], [0], [1], [0]], "fitness": -0.845714271068573, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma), tf.math.add(tf.math.add(grad, tf.math.square(grad)), tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292853832244873, 2.1877474784851074, 1.7677521705627441, 1.3411879539489746, 1.078607201576233, 0.9383919835090637, 0.8271086812019348, 0.8169422745704651, 0.7567345499992371, 0.7407239675521851, 0.6817858815193176, 0.6712914705276489, 0.644962728023529, 0.6275396943092346, 0.6162883043289185, 0.6085805892944336, 0.5796949863433838, 0.5688715577125549, 0.5608860850334167, 0.5496844053268433, 0.5285969376564026, 0.525262176990509, 0.5035942196846008, 0.5044456124305725, 0.49007561802864075, 0.4695507884025574, 0.46928465366363525, 0.4608191251754761, 0.4630562961101532, 0.442557692527771, 0.43499520421028137, 0.424822062253952, 0.42051252722740173, 0.41265010833740234, 0.399993896484375, 0.40914013981819153, 0.39135903120040894, 0.3915760815143585, 0.38964465260505676, 0.3755049407482147, 0.36350008845329285, 0.35943856835365295, 0.357820600271225, 0.34821581840515137, 0.34429052472114563, 0.33447015285491943, 0.32727205753326416, 0.3372724950313568, 0.32220131158828735, 0.32011136412620544, 0.31849926710128784, 0.3107067048549652, 0.3048139214515686, 0.29936206340789795, 0.3014014661312103, 0.2991691529750824, 0.29170191287994385, 0.28680798411369324, 0.2821885943412781, 0.27001115679740906, 0.27684688568115234], "accuracy": [0.13076211512088776, 0.3205653131008148, 0.4299300014972687, 0.5420684218406677, 0.640338122844696, 0.6530181169509888, 0.7041342258453369, 0.7053229212760925, 0.7091533541679382, 0.7172104120254517, 0.7433628439903259, 0.7430986762046814, 0.755118191242218, 0.7614582180976868, 0.7651565074920654, 0.7685906887054443, 0.7759873270988464, 0.7853652238845825, 0.7819310426712036, 0.7872143983840942, 0.7976489067077637, 0.8009510040283203, 0.8084797263145447, 0.8090080618858337, 0.8166688680648804, 0.8208954930305481, 0.8210275769233704, 0.8245938420295715, 0.8253863453865051, 0.8345000743865967, 0.8364813327789307, 0.8388587832450867, 0.845859169960022, 0.8475762605667114, 0.8474441766738892, 0.8417646288871765, 0.8510104417800903, 0.8535200357437134, 0.857218325138092, 0.8578787446022034, 0.8607845902442932, 0.8621054291725159, 0.8692378997802734, 0.8685774803161621, 0.8698983192443848, 0.8729361891746521, 0.8729361891746521, 0.8660678863525391, 0.8749174475669861, 0.8778232932090759, 0.8771628737449646, 0.8784837126731873, 0.8828424215316772, 0.8883898854255676, 0.8836349248886108, 0.8828424215316772, 0.8869370222091675, 0.8849557638168335, 0.8842953443527222, 0.8932769894599915, 0.886672854423523], "val_loss": [2.2464160919189453, 2.0184519290924072, 1.1397626399993896, 0.8584029674530029, 0.7730287909507751, 0.7030062079429626, 0.653526782989502, 0.6437402963638306, 0.6367371678352356, 0.6077542304992676, 0.5753926038742065, 0.5514099597930908, 0.5401914715766907, 0.536564826965332, 0.5386204719543457, 0.5284489989280701, 0.5155352354049683, 0.5068551301956177, 0.49360281229019165, 0.4942781627178192, 0.4868464469909668, 0.481766939163208, 0.47301530838012695, 0.46714168787002563, 0.46302899718284607, 0.4542880952358246, 0.4501880705356598, 0.4500507712364197, 0.4408241808414459, 0.42538899183273315, 0.431904673576355, 0.4297633469104767, 0.4274502694606781, 0.41969558596611023, 0.42223456501960754, 0.41363823413848877, 0.41657400131225586, 0.4218524694442749, 0.4219713509082794, 0.400957316160202, 0.40989404916763306, 0.41293153166770935, 0.42043986916542053, 0.40743348002433777, 0.4194484353065491, 0.4119328260421753, 0.4108063280582428, 0.4105428159236908, 0.40767723321914673, 0.40209561586380005, 0.4073832631111145, 0.4326871335506439, 0.42449238896369934, 0.4380434453487396, 0.43672415614128113, 0.4224874675273895, 0.42291414737701416, 0.4374372661113739, 0.4344293177127838, 0.4296377897262573, 0.44805192947387695], "val_accuracy": [0.40299999713897705, 0.4426666796207428, 0.6463333368301392, 0.6976666450500488, 0.7129999995231628, 0.7473333477973938, 0.7536666393280029, 0.7450000047683716, 0.7749999761581421, 0.7676666378974915, 0.7766666412353516, 0.7816666960716248, 0.7950000166893005, 0.7996666431427002, 0.7973333597183228, 0.7979999780654907, 0.8040000200271606, 0.8009999990463257, 0.8136666417121887, 0.8096666932106018, 0.8159999847412109, 0.8176666498184204, 0.8240000009536743, 0.8306666612625122, 0.8366666436195374, 0.8339999914169312, 0.8416666388511658, 0.8413333296775818, 0.8426666855812073, 0.847000002861023, 0.8450000286102295, 0.8463333249092102, 0.8533333539962769, 0.8543333411216736, 0.8510000109672546, 0.8560000061988831, 0.8606666922569275, 0.859666645526886, 0.8583333492279053, 0.8616666793823242, 0.8536666631698608, 0.8633333444595337, 0.862666666507721, 0.8633333444595337, 0.859000027179718, 0.8616666793823242, 0.8656666874885559, 0.8693333268165588, 0.8700000047683716, 0.8650000095367432, 0.8693333268165588, 0.8656666874885559, 0.8736666440963745, 0.8726666569709778, 0.871666669845581, 0.878333330154419, 0.875333309173584, 0.8696666955947876, 0.871999979019165, 0.875, 0.8740000128746033]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 12, 7, 5, 2, 2, 1, 1, 0], "tree_depth": 13}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8431428670883179, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.225503444671631, 1.8749874830245972, 1.4022661447525024, 1.1096526384353638, 0.9465966820716858, 0.8505678176879883, 0.7703142166137695, 0.7325285077095032, 0.684851884841919, 0.6718023419380188, 0.6360905766487122, 0.6170891523361206, 0.5966988801956177, 0.5772508382797241, 0.5595153570175171, 0.5485184192657471, 0.5380731225013733, 0.5223003029823303, 0.49155300855636597, 0.5019114017486572, 0.4833511412143707, 0.47071462869644165, 0.46379274129867554, 0.4524386525154114, 0.44978639483451843, 0.4397810399532318, 0.4297786056995392, 0.4261651337146759, 0.4156387448310852, 0.40957075357437134, 0.4070386290550232, 0.4044683575630188, 0.3931832015514374, 0.3829898238182068, 0.3790101706981659, 0.370258092880249, 0.3688019812107086, 0.35474953055381775, 0.35410556197166443, 0.3563152551651001, 0.34579959511756897, 0.34341612458229065, 0.33290132880210876, 0.3268163204193115, 0.32571911811828613, 0.32186776399612427, 0.3169669210910797, 0.3096625804901123, 0.3081592321395874, 0.30599847435951233, 0.2995845675468445, 0.302914559841156, 0.29276615381240845], "accuracy": [0.2779025137424469, 0.4916127324104309, 0.5766741633415222, 0.6124686598777771, 0.6633205413818359, 0.6952846646308899, 0.7244749665260315, 0.7354378700256348, 0.7547219395637512, 0.7489103078842163, 0.7709681391716003, 0.7744023203849792, 0.7819310426712036, 0.7884030938148499, 0.7969884872436523, 0.8039889335632324, 0.8072909712791443, 0.8158763647079468, 0.8227446675300598, 0.8212917447090149, 0.8278959393501282, 0.83119797706604, 0.8387266993522644, 0.8385946154594421, 0.8425571322441101, 0.8442742228507996, 0.8428213000297546, 0.8462554216384888, 0.8504821062088013, 0.8584070801734924, 0.8599920868873596, 0.8529917001724243, 0.856689989566803, 0.8660678863525391, 0.8671245574951172, 0.8697662353515625, 0.8705587387084961, 0.8751816153526306, 0.869502067565918, 0.8721436858177185, 0.8794082403182983, 0.8768987059593201, 0.8809932470321655, 0.8838990926742554, 0.8879936337471008, 0.8857482671737671, 0.8877294659614563, 0.8881257176399231, 0.8889182209968567, 0.8916919827461243, 0.8951261639595032, 0.8923524022102356, 0.8928807377815247], "val_loss": [2.0413403511047363, 1.5225932598114014, 1.0316189527511597, 0.8153474926948547, 0.7215349078178406, 0.6659113764762878, 0.6167937517166138, 0.5827053785324097, 0.5593282580375671, 0.541022777557373, 0.5200538039207458, 0.5038349032402039, 0.4912843704223633, 0.4791831076145172, 0.4673057496547699, 0.46327731013298035, 0.45192936062812805, 0.4445077180862427, 0.43409374356269836, 0.430416464805603, 0.4260002374649048, 0.4145347476005554, 0.4132404029369354, 0.4045346677303314, 0.40605923533439636, 0.3967048227787018, 0.39358988404273987, 0.38951921463012695, 0.3831363022327423, 0.38143375515937805, 0.379667192697525, 0.37708625197410583, 0.3729994297027588, 0.37032756209373474, 0.36312898993492126, 0.36420702934265137, 0.35695767402648926, 0.35892629623413086, 0.3556194603443146, 0.35068458318710327, 0.35077840089797974, 0.3478517234325409, 0.34555524587631226, 0.35158541798591614, 0.3385656774044037, 0.3394530415534973, 0.33792737126350403, 0.3348415195941925, 0.3379358649253845, 0.33307957649230957, 0.33630847930908203, 0.33643198013305664, 0.3337523341178894], "val_accuracy": [0.5720000267028809, 0.6679999828338623, 0.6923333406448364, 0.715666651725769, 0.7383333444595337, 0.7593333125114441, 0.7733333110809326, 0.7883333563804626, 0.7960000038146973, 0.8029999732971191, 0.8076666593551636, 0.8109999895095825, 0.8233333230018616, 0.8220000267028809, 0.8289999961853027, 0.8306666612625122, 0.8366666436195374, 0.8336666822433472, 0.8399999737739563, 0.8433333039283752, 0.8450000286102295, 0.8456666469573975, 0.8489999771118164, 0.8533333539962769, 0.8489999771118164, 0.8543333411216736, 0.856333315372467, 0.8556666374206543, 0.8573333621025085, 0.859666645526886, 0.8603333234786987, 0.859000027179718, 0.859000027179718, 0.859000027179718, 0.8646666407585144, 0.862666666507721, 0.8633333444595337, 0.8653333187103271, 0.8650000095367432, 0.8646666407585144, 0.8659999966621399, 0.8679999709129333, 0.8683333396911621, 0.8650000095367432, 0.8713333606719971, 0.8703333139419556, 0.8706666827201843, 0.8743333220481873, 0.8736666440963745, 0.871999979019165, 0.8733333349227905, 0.8733333349227905, 0.8743333220481873]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 1, 1, 1], [0, 3, 3, 8], [0, 4, 2], [0], [1], [0], [2], [0]], "fitness": -0.8337143063545227, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4992324113845825, 0.8079456686973572, 0.6603078246116638, 0.5870823264122009, 0.5328910946846008, 0.5098859667778015, 0.5049827694892883, 0.4653284251689911, 0.46683192253112793, 0.4459179937839508, 0.44118133187294006, 0.4346292316913605, 0.42520225048065186, 0.46052154898643494, 0.4597436785697937, 0.4588657319545746, 0.46354568004608154, 0.4520232677459717, 0.4965033531188965, 0.5311498045921326, 0.5251347422599792, 0.5415864586830139], "accuracy": [0.4876502454280853, 0.7199841737747192, 0.7593448758125305, 0.7808743715286255, 0.8078193068504333, 0.8109893202781677, 0.8286884427070618, 0.8343679904937744, 0.8327829837799072, 0.8368775844573975, 0.8397833704948425, 0.8499537706375122, 0.8494254350662231, 0.8432175517082214, 0.8429533839225769, 0.8430854678153992, 0.8448025584220886, 0.8475762605667114, 0.8498216867446899, 0.8112534880638123, 0.8418967127799988, 0.8245938420295715], "val_loss": [0.8430740833282471, 0.6271932721138, 0.5401039719581604, 0.5018731951713562, 0.4921268820762634, 0.4890475273132324, 0.46271073818206787, 0.4691861569881439, 0.463219553232193, 0.45564255118370056, 0.4716070294380188, 0.4744311571121216, 0.5372136831283569, 0.514655351638794, 0.5021092891693115, 0.4848986864089966, 0.5649137496948242, 0.5562567710876465, 0.5872282981872559, 0.630771815776825, 0.5536431670188904, 0.578832745552063], "val_accuracy": [0.7233333587646484, 0.7699999809265137, 0.800000011920929, 0.831333339214325, 0.8289999961853027, 0.8346666693687439, 0.8453333377838135, 0.8456666469573975, 0.8510000109672546, 0.8496666550636292, 0.8533333539962769, 0.8533333539962769, 0.8479999899864197, 0.8560000061988831, 0.8586666584014893, 0.8583333492279053, 0.8669999837875366, 0.8576666712760925, 0.8543333411216736, 0.8539999723434448, 0.8479999899864197, 0.8446666598320007]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [4, 2, 8, 0, 3], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 36], [0, 1], [0], [0], [31], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 1], [16, 99, 77, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [93, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 1, 0, 3, 0], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 6, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 1, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 1, 0, 1, 1, 16, 8, 8, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, alpha))))", "other_info": {"loss": [183.62330627441406, 16221.5576171875, 236332.5, 1556394.5, 6606885.0, 21051772.0], "accuracy": [0.10817593336105347, 0.10434553027153015, 0.10130762308835983, 0.10342095047235489, 0.09985470771789551, 0.09972262382507324], "val_loss": [1408.81494140625, 54377.97265625, 522174.8125, 2688854.25, 9726872.0, 28024706.0], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 4, 0, 3], [0, 2, 0, 2], [39, 39], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 2, 3, 4, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 2, 1, 4, 2, 4, 7, 1, 8, 5, 3], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0, 4, 6, 1, 0], [16, 99, 96, 99, 61, 1, 47]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 30, 16, 14, 7], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.pow(tf.math.add(grad, beta), tf.math.subtract(tf.math.sqrt(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad))))))), tf.math.multiply(grad, alpha)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [3, 2, 3, 0, 3, 5, 5, 4], [0, 2, 0, 3, 0, 5], [16, 16, 18], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [3, 3, 3, 6, 8, 1, 4, 0, 4, 2, 8, 5, 2, 8, 3, 8, 7, 2, 9, 8, 4, 5], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0, 1, 1, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 14, 8, 6, 3, 2, 1, 1, 1, 35, 22, 13, 6], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.square(tf.math.pow(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.negative(tf.math.pow(tf.math.add(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma)))), tf.math.sqrt(tf.math.square(tf.math.add(tf.math.sqrt(alpha), tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.pow(alpha, alpha))))))), tf.math.square(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]