[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8611428737640381, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2234456539154053, 1.8630719184875488, 1.3868706226348877, 1.0940766334533691, 0.9442631602287292, 0.8339270949363708, 0.7732729911804199, 0.7226561307907104, 0.6950937509536743, 0.6629634499549866, 0.628442108631134, 0.6166698932647705, 0.5868313908576965, 0.5751572251319885, 0.562530517578125, 0.5615023970603943, 0.542169451713562, 0.5288244485855103, 0.515798032283783, 0.5074942708015442, 0.4977230429649353, 0.48946788907051086, 0.4803439974784851, 0.4712909460067749, 0.4665541648864746, 0.4482281506061554, 0.44536736607551575, 0.43494611978530884, 0.42790713906288147, 0.4250233471393585, 0.42280715703964233, 0.41241952776908875, 0.40575042366981506, 0.3987484574317932, 0.39345782995224, 0.3812476396560669, 0.38397592306137085, 0.3728266656398773], "accuracy": [0.27605336904525757, 0.4905560612678528, 0.5674283504486084, 0.6161669492721558, 0.6571126580238342, 0.69673752784729, 0.720380425453186, 0.7371549606323242, 0.7424382567405701, 0.7535332441329956, 0.7707040309906006, 0.7741381525993347, 0.7877426743507385, 0.7832518815994263, 0.7940827012062073, 0.7927618622779846, 0.800818920135498, 0.8109893202781677, 0.8125742673873901, 0.8193105459213257, 0.8216879963874817, 0.8276317715644836, 0.8314621448516846, 0.8345000743865967, 0.8362171649932861, 0.8380662798881531, 0.8413683772087097, 0.8444063067436218, 0.8448025584220886, 0.8473120927810669, 0.8479725122451782, 0.8544445633888245, 0.8561616539955139, 0.8564258217811584, 0.8581429123878479, 0.86553955078125, 0.86118084192276, 0.8667283058166504], "val_loss": [2.0412251949310303, 1.5178240537643433, 1.0595141649246216, 0.8604879379272461, 0.7701613903045654, 0.7177843451499939, 0.6668055653572083, 0.6341336965560913, 0.6070659160614014, 0.5856403112411499, 0.5679992437362671, 0.5495038628578186, 0.537363588809967, 0.5275498032569885, 0.5267013907432556, 0.5024773478507996, 0.49810755252838135, 0.49028119444847107, 0.47903475165367126, 0.4720184803009033, 0.46237483620643616, 0.4619682729244232, 0.45239993929862976, 0.44571980834007263, 0.4398227632045746, 0.4363512098789215, 0.4278815984725952, 0.4268435835838318, 0.4224016070365906, 0.42242810130119324, 0.41106051206588745, 0.40926146507263184, 0.4060635566711426, 0.40523725748062134, 0.40352222323417664, 0.397648423910141, 0.39462679624557495, 0.39757034182548523], "val_accuracy": [0.5263333320617676, 0.628000020980835, 0.6543333530426025, 0.6919999718666077, 0.7206666469573975, 0.734000027179718, 0.7523333430290222, 0.7580000162124634, 0.7726666927337646, 0.7806666493415833, 0.7839999794960022, 0.79666668176651, 0.8033333420753479, 0.8016666769981384, 0.7990000247955322, 0.8180000185966492, 0.8146666884422302, 0.8190000057220459, 0.8253333568572998, 0.8253333568572998, 0.8356666564941406, 0.8333333134651184, 0.8366666436195374, 0.8373333215713501, 0.8426666855812073, 0.8450000286102295, 0.8453333377838135, 0.8433333039283752, 0.8456666469573975, 0.843666672706604, 0.8506666421890259, 0.8510000109672546, 0.8576666712760925, 0.8546666502952576, 0.8546666502952576, 0.8513333201408386, 0.8523333072662354, 0.8556666374206543]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 8], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.847428560256958, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2928030490875244, 2.183933734893799, 1.747140645980835, 1.3357832431793213, 1.028463363647461, 0.8967296481132507, 0.8336567878723145, 0.7908574938774109, 0.7470510005950928, 0.727324366569519, 0.6945920586585999, 0.6571708917617798, 0.6458152532577515, 0.6253138780593872, 0.6180500984191895, 0.5801297426223755, 0.5629621148109436, 0.5511932373046875, 0.5437011122703552, 0.5352625846862793, 0.5331920981407166, 0.5140405893325806, 0.5025942325592041, 0.4804418385028839, 0.48468515276908875, 0.47039854526519775, 0.46202367544174194, 0.44971299171447754, 0.43449667096138, 0.4334225058555603, 0.43384528160095215, 0.4091736972332001, 0.40645700693130493, 0.4063797891139984, 0.3918907642364502, 0.39514824748039246, 0.38306137919425964, 0.3774091303348541, 0.37840956449508667, 0.35815951228141785, 0.3544445335865021, 0.34526848793029785], "accuracy": [0.13181878626346588, 0.33562275767326355, 0.4340245723724365, 0.5429930090904236, 0.64231938123703, 0.6633205413818359, 0.6896050572395325, 0.7073041796684265, 0.7132478952407837, 0.7144366502761841, 0.7334566116333008, 0.7456082701683044, 0.754589855670929, 0.7643640041351318, 0.7553823590278625, 0.7770439982414246, 0.7816668748855591, 0.7848368883132935, 0.7924976944923401, 0.7972526550292969, 0.7984414100646973, 0.7959318161010742, 0.8061022162437439, 0.8117818236351013, 0.8099326491355896, 0.8212917447090149, 0.8240655064582825, 0.8300092220306396, 0.8342359066009521, 0.8367455005645752, 0.8308017253875732, 0.841500461101532, 0.8467837572097778, 0.8408400416374207, 0.8449346423149109, 0.8490291833877563, 0.852331280708313, 0.8548408150672913, 0.8565579056739807, 0.8634262084960938, 0.8642187118530273, 0.8664641380310059], "val_loss": [2.246181011199951, 2.014296770095825, 1.149732232093811, 0.9369322657585144, 0.7778570055961609, 0.7422352433204651, 0.7062926292419434, 0.682691216468811, 0.6623892188072205, 0.6281323432922363, 0.6027688980102539, 0.5923765897750854, 0.5728557109832764, 0.5506788492202759, 0.5443294048309326, 0.5345528721809387, 0.5244120955467224, 0.5116512179374695, 0.506033718585968, 0.49923384189605713, 0.49445581436157227, 0.4982069432735443, 0.4827363193035126, 0.4845733642578125, 0.47230270504951477, 0.46118712425231934, 0.46194443106651306, 0.4585227072238922, 0.4671190679073334, 0.44475603103637695, 0.445818692445755, 0.45165303349494934, 0.4397810101509094, 0.45763328671455383, 0.447670578956604, 0.4371010661125183, 0.4311888515949249, 0.4474563002586365, 0.44405046105384827, 0.44041863083839417, 0.45184317231178284, 0.46598607301712036], "val_accuracy": [0.42399999499320984, 0.42266666889190674, 0.6346666812896729, 0.6826666593551636, 0.7123333215713501, 0.706333339214325, 0.7390000224113464, 0.737666666507721, 0.7429999709129333, 0.762666642665863, 0.7670000195503235, 0.7666666507720947, 0.781333327293396, 0.7916666865348816, 0.7916666865348816, 0.7923333048820496, 0.7979999780654907, 0.8066666722297668, 0.8086666464805603, 0.8163333535194397, 0.8186666369438171, 0.8159999847412109, 0.8223333358764648, 0.8180000185966492, 0.8240000009536743, 0.828000009059906, 0.82833331823349, 0.8376666903495789, 0.8343333601951599, 0.8363333344459534, 0.8413333296775818, 0.8383333086967468, 0.8429999947547913, 0.8416666388511658, 0.8389999866485596, 0.8416666388511658, 0.8479999899864197, 0.8450000286102295, 0.8413333296775818, 0.8420000076293945, 0.8443333506584167, 0.847000002861023]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8240000009536743, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4760321378707886, 0.7932619452476501, 0.7064895033836365, 0.6177584528923035, 0.5646347999572754, 0.5608726143836975, 0.5383184552192688, 0.5295447707176208, 0.5166839361190796, 0.5264231562614441, 0.5092246532440186, 0.49204021692276, 0.5259228944778442, 0.5548843145370483, 0.5601401925086975, 0.6131362915039062, 0.6561585068702698, 0.679498016834259], "accuracy": [0.4859331548213959, 0.7276449799537659, 0.7458723783493042, 0.7672698497772217, 0.7848368883132935, 0.7926297783851624, 0.8088759779930115, 0.8061022162437439, 0.8257825970649719, 0.8173292875289917, 0.8101968169212341, 0.8198388814926147, 0.8265751004219055, 0.822348415851593, 0.7935543656349182, 0.7942147850990295, 0.8024039268493652, 0.7911768555641174], "val_loss": [0.7620951533317566, 0.7147969007492065, 0.5794622302055359, 0.5440468192100525, 0.5388723015785217, 0.5201919674873352, 0.5455785989761353, 0.5059975385665894, 0.5342142581939697, 0.5410155653953552, 0.49378708004951477, 0.5011892318725586, 0.5380866527557373, 0.5107799768447876, 0.5419352054595947, 0.6656036972999573, 0.6409440636634827, 0.5901293158531189], "val_accuracy": [0.7273333072662354, 0.75, 0.781000018119812, 0.8029999732971191, 0.8133333325386047, 0.8213333487510681, 0.8259999752044678, 0.8303333520889282, 0.8209999799728394, 0.8226666450500488, 0.8346666693687439, 0.82833331823349, 0.8349999785423279, 0.8203333616256714, 0.8119999766349792, 0.8216666579246521, 0.8223333358764648, 0.8133333325386047]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 2, 3, 0, 4], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 0], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [14], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 0, 3, 8, 1, 4, 1, 4, 2, 5], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 77, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 2, 2, 1, 1, 1, 20, 11, 9, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.add(grad, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), sigma), alpha))), tf.math.square(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 4, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [66, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 6, 6, 8, 1, 4, 1, 4, 2, 8], [4, 4, 0, 4, 0, 0, 3, 0, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2343.004638671875, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1974640041589737, 0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [377093088.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 0], [0, 2, 0, 3], [16, 16], [0, 0, 1], [0, 8], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [8, 3, 3, 3, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 4, 1, 4, 0], [16, 4, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 3, 2, 1, 0, 17, 9, 8, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), grad)), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [3, 2, 3, 0, 3, 5], [0, 1, 0, 2, 3], [0, 39, 39], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [7, 2, 3, 0, 3, 5], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [9], [0], [0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 8, 4, 4, 2, 1, 0, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3102757930755615, 2.3096120357513428, 2.3103833198547363, 2.309887170791626, 2.311209201812744, 2.3106863498687744], "accuracy": [0.09126931428909302, 0.09219389408826828, 0.09245806187391281, 0.09391097724437714, 0.08770307898521423, 0.0948355570435524], "val_loss": [2.3077101707458496, 2.3077101707458496, 2.3077101707458496, 2.3077101707458496, 2.3077101707458496, 2.3077101707458496], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]