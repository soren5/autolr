[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8731428384780884, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223750114440918, 1.8723186254501343, 1.413629412651062, 1.0980195999145508, 0.9522935748100281, 0.8446905612945557, 0.7865152955055237, 0.7409590482711792, 0.7050103545188904, 0.6729986667633057, 0.6433901190757751, 0.6200805306434631, 0.592208206653595, 0.5829423666000366, 0.5658077001571655, 0.5517820715904236, 0.5466938018798828, 0.5256743431091309, 0.5150400996208191, 0.5131762027740479, 0.49579185247421265, 0.48602962493896484, 0.4690994918346405, 0.4626198709011078, 0.44963306188583374, 0.4497888684272766, 0.44534751772880554, 0.4335591495037079, 0.422636479139328, 0.4130953848361969, 0.4113563597202301, 0.3955903649330139, 0.3976670205593109, 0.3934836685657501, 0.38228121399879456, 0.3711321949958801, 0.3724921941757202, 0.3671741187572479, 0.35632723569869995, 0.3526892364025116, 0.3500225245952606, 0.3436333239078522, 0.3370956778526306, 0.32882726192474365, 0.32707956433296204, 0.31623193621635437, 0.31599998474121094, 0.31385475397109985, 0.31204286217689514, 0.30797991156578064, 0.2960261106491089, 0.28893598914146423, 0.2949454188346863, 0.28567564487457275, 0.2876679003238678, 0.27698779106140137, 0.28032025694847107, 0.27098655700683594, 0.2656939625740051, 0.2683827579021454, 0.2628023326396942, 0.2502111792564392, 0.24898791313171387, 0.25165075063705444, 0.2426125407218933, 0.24390944838523865, 0.23914386332035065, 0.23496922850608826], "accuracy": [0.26482629776000977, 0.483819842338562, 0.5544841885566711, 0.6180161237716675, 0.6571126580238342, 0.6955488324165344, 0.7131158113479614, 0.7382115721702576, 0.7457403540611267, 0.750231146812439, 0.767401933670044, 0.7759873270988464, 0.7852331399917603, 0.7901201844215393, 0.7961959838867188, 0.7973847389221191, 0.7998943328857422, 0.8133667707443237, 0.8144234418869019, 0.8146876096725464, 0.821820080280304, 0.8203672170639038, 0.8289526104927063, 0.8339717388153076, 0.839519202709198, 0.8403117060661316, 0.8418967127799988, 0.8421608805656433, 0.8512746095657349, 0.8524633646011353, 0.850350022315979, 0.8578787446022034, 0.8597279191017151, 0.8590674996376038, 0.8625016212463379, 0.8646149635314941, 0.8654074668884277, 0.8647470474243164, 0.8725399374961853, 0.8714832663536072, 0.8751816153526306, 0.8742570281028748, 0.8784837126731873, 0.8792761564254761, 0.8836349248886108, 0.885219931602478, 0.885219931602478, 0.8886540532112122, 0.8831065893173218, 0.8869370222091675, 0.8907673954963684, 0.8961827754974365, 0.8903711438179016, 0.89552241563797, 0.8942015767097473, 0.898428201675415, 0.8965790271759033, 0.9013340473175049, 0.9012019634246826, 0.9009377956390381, 0.9034473896026611, 0.9096552729606628, 0.9100515246391296, 0.9096552729606628, 0.9109761118888855, 0.9076740145683289, 0.9119006991386414, 0.9119006991386414], "val_loss": [2.0428197383880615, 1.5212857723236084, 1.0414358377456665, 0.8291494250297546, 0.7402510046958923, 0.6783918738365173, 0.6403870582580566, 0.6051308512687683, 0.5764816999435425, 0.5559793710708618, 0.5398773550987244, 0.5204554200172424, 0.5051693320274353, 0.4944477677345276, 0.4870833456516266, 0.4742901623249054, 0.46614474058151245, 0.4587634801864624, 0.4503907859325409, 0.4465354382991791, 0.4393674433231354, 0.42453014850616455, 0.4211699366569519, 0.41702452301979065, 0.4100942015647888, 0.4140397608280182, 0.40291187167167664, 0.3981758654117584, 0.39161303639411926, 0.38898664712905884, 0.39066579937934875, 0.3799363672733307, 0.3796379268169403, 0.3789474368095398, 0.37181681394577026, 0.3688412606716156, 0.3720085918903351, 0.37205708026885986, 0.36463651061058044, 0.35942232608795166, 0.3615415096282959, 0.3591700792312622, 0.361454576253891, 0.352979451417923, 0.3543129563331604, 0.3524283468723297, 0.3547188341617584, 0.3513689339160919, 0.35100001096725464, 0.3447471559047699, 0.3439348042011261, 0.34211066365242004, 0.33926230669021606, 0.3400042653083801, 0.33844178915023804, 0.3398924767971039, 0.34266796708106995, 0.3392224609851837, 0.33609485626220703, 0.33741211891174316, 0.33601483702659607, 0.33487850427627563, 0.3340436518192291, 0.3336043655872345, 0.33206629753112793, 0.3313572108745575, 0.33578160405158997, 0.3396420180797577], "val_accuracy": [0.5270000100135803, 0.6566666960716248, 0.6903333067893982, 0.7146666646003723, 0.7423333525657654, 0.7526666522026062, 0.7630000114440918, 0.7776666879653931, 0.784333348274231, 0.7886666655540466, 0.8016666769981384, 0.8090000152587891, 0.8116666674613953, 0.8199999928474426, 0.831333339214325, 0.8266666531562805, 0.8386666774749756, 0.8353333473205566, 0.8339999914169312, 0.8433333039283752, 0.8453333377838135, 0.8550000190734863, 0.8513333201408386, 0.859333336353302, 0.8583333492279053, 0.8573333621025085, 0.8640000224113464, 0.8640000224113464, 0.8640000224113464, 0.862666666507721, 0.8629999756813049, 0.8679999709129333, 0.8696666955947876, 0.8666666746139526, 0.8690000176429749, 0.8703333139419556, 0.8700000047683716, 0.8686666488647461, 0.8713333606719971, 0.8759999871253967, 0.8733333349227905, 0.8740000128746033, 0.8776666522026062, 0.871666669845581, 0.8786666393280029, 0.8776666522026062, 0.875333309173584, 0.8796666860580444, 0.878333330154419, 0.878000020980835, 0.8813333511352539, 0.8793333172798157, 0.8803333044052124, 0.8833333253860474, 0.8816666603088379, 0.8806666731834412, 0.8830000162124634, 0.8813333511352539, 0.8859999775886536, 0.8840000033378601, 0.8846666812896729, 0.8799999952316284, 0.8880000114440918, 0.8866666555404663, 0.887333333492279, 0.887666642665863, 0.8856666684150696, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1, 1], [0, 2], [0, 3], [0], [0, 1], [0], [1], [0]], "fitness": -0.8502857089042664, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293987512588501, 2.1913938522338867, 1.7763882875442505, 1.3544654846191406, 1.1079202890396118, 0.9447525143623352, 0.8724850416183472, 0.8215128779411316, 0.7807887196540833, 0.7668974995613098, 0.7198155522346497, 0.6986883282661438, 0.6649805903434753, 0.6580942869186401, 0.635525107383728, 0.6019736528396606, 0.5959933400154114, 0.5971469283103943, 0.5776593089103699, 0.5721666216850281, 0.5557641386985779, 0.5336208343505859, 0.5278299450874329, 0.5298915505409241, 0.5213795304298401, 0.5079414248466492, 0.5032374858856201, 0.4921005666255951, 0.4873798191547394, 0.4879167079925537, 0.4718897044658661, 0.46191832423210144, 0.45256859064102173, 0.4397432506084442, 0.4309503138065338, 0.4256369173526764, 0.43133071064949036, 0.4097532331943512, 0.4063950181007385, 0.3913828730583191, 0.38799208402633667, 0.368899941444397, 0.36637964844703674, 0.37743082642555237], "accuracy": [0.12217672914266586, 0.32782986760139465, 0.4282129108905792, 0.5324263572692871, 0.6247523427009583, 0.6499801874160767, 0.6824725866317749, 0.6977941989898682, 0.7000396251678467, 0.7055870890617371, 0.7321357727050781, 0.7364945411682129, 0.7433628439903259, 0.7486461400985718, 0.7576277852058411, 0.7689869403839111, 0.7729493975639343, 0.7729493975639343, 0.7819310426712036, 0.7815347909927368, 0.7799497842788696, 0.791969358921051, 0.7980451583862305, 0.8055738806724548, 0.7959318161010742, 0.8063663840293884, 0.8117818236351013, 0.8117818236351013, 0.8127063512802124, 0.8150838613510132, 0.8177255392074585, 0.8248580098152161, 0.8310658931732178, 0.8301413059234619, 0.8317263126373291, 0.8367455005645752, 0.8338396549224854, 0.842028796672821, 0.8455950617790222, 0.8545766472816467, 0.856689989566803, 0.8597279191017151, 0.86118084192276, 0.8545766472816467], "val_loss": [2.245380163192749, 2.0210676193237305, 1.141446590423584, 0.8417426943778992, 0.7457150816917419, 0.6946259140968323, 0.6261351108551025, 0.6184177398681641, 0.6134842038154602, 0.5780781507492065, 0.5355527400970459, 0.5256259441375732, 0.5275111794471741, 0.5096418261528015, 0.5029083490371704, 0.5009446740150452, 0.4899936020374298, 0.4851146638393402, 0.4899154603481293, 0.4803427755832672, 0.4737526774406433, 0.47702786326408386, 0.46483317017555237, 0.46012556552886963, 0.45745864510536194, 0.458885133266449, 0.4473714530467987, 0.4378703236579895, 0.4366230368614197, 0.4171395003795624, 0.41122958064079285, 0.40988290309906006, 0.4112198054790497, 0.39741724729537964, 0.4011138379573822, 0.3973175585269928, 0.3944593369960785, 0.3878650665283203, 0.391791433095932, 0.3793396055698395, 0.3902336359024048, 0.3932257890701294, 0.39674603939056396, 0.38671207427978516], "val_accuracy": [0.41499999165534973, 0.43433332443237305, 0.6600000262260437, 0.6966666579246521, 0.7363333106040955, 0.749666690826416, 0.7616666555404663, 0.765333354473114, 0.7776666879653931, 0.7836666703224182, 0.7853333353996277, 0.7950000166893005, 0.7950000166893005, 0.7996666431427002, 0.7993333339691162, 0.8040000200271606, 0.815666675567627, 0.8176666498184204, 0.8119999766349792, 0.8236666917800903, 0.8246666789054871, 0.8309999704360962, 0.8396666646003723, 0.8393333554267883, 0.8460000157356262, 0.8360000252723694, 0.8433333039283752, 0.8423333168029785, 0.8416666388511658, 0.8516666889190674, 0.8550000190734863, 0.8573333621025085, 0.8573333621025085, 0.8553333282470703, 0.859000027179718, 0.862666666507721, 0.8646666407585144, 0.8679999709129333, 0.8723333477973938, 0.8679999709129333, 0.8633333444595337, 0.871666669845581, 0.8696666955947876, 0.8723333477973938]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 1], [0, 3], [0], [1], [0], [2], [0]], "fitness": -0.8254285454750061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5085875988006592, 0.8186892867088318, 0.662032425403595, 0.587361216545105, 0.5474917888641357, 0.5040839910507202, 0.48934313654899597, 0.46098434925079346, 0.4430164694786072, 0.41222843527793884, 0.4059540629386902, 0.4298369288444519, 0.4374048709869385, 0.4129236340522766, 0.418048232793808, 0.435413122177124, 0.4412553906440735, 0.4408617913722992, 0.4694470465183258, 0.47123777866363525, 0.509795069694519, 0.4911465644836426], "accuracy": [0.490159809589386, 0.7071720957756042, 0.7524765729904175, 0.7812706232070923, 0.802271842956543, 0.813498854637146, 0.8216879963874817, 0.830669641494751, 0.8384625315666199, 0.8445383906364441, 0.8512746095657349, 0.8495575189590454, 0.8531237840652466, 0.8562937378883362, 0.8524633646011353, 0.8576145768165588, 0.8531237840652466, 0.8617091774940491, 0.846387505531311, 0.8491612672805786, 0.8208954930305481, 0.8354246616363525], "val_loss": [0.8074436783790588, 0.6350148320198059, 0.5625858306884766, 0.5270194411277771, 0.5001487731933594, 0.48638761043548584, 0.500397264957428, 0.5264845490455627, 0.49888139963150024, 0.5190799236297607, 0.5301746129989624, 0.5379300713539124, 0.5158117413520813, 0.5469731688499451, 0.6257033944129944, 0.5284578204154968, 0.6723838448524475, 0.5747551918029785, 0.6047822833061218, 0.627503514289856, 0.6238753199577332, 0.6594964861869812], "val_accuracy": [0.7076666951179504, 0.7666666507720947, 0.7929999828338623, 0.8106666803359985, 0.8186666369438171, 0.8326666951179504, 0.8256666660308838, 0.8316666483879089, 0.8349999785423279, 0.843666672706604, 0.8429999947547913, 0.8376666903495789, 0.8506666421890259, 0.8489999771118164, 0.843666672706604, 0.8489999771118164, 0.8586666584014893, 0.8353333473205566, 0.8433333039283752, 0.8276666402816772, 0.8363333344459534, 0.8506666421890259]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 6, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 0], [16, 16], [1, 0], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [3, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 51, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 1, 0, 1, 1, 18, 9, 9, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [8, 1, 3, 3, 3], [0, 0, 1, 0, 2], [39, 39, 95], [1, 0, 1], [0, 5], [0], [0], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [6, 3, 6, 6, 8, 9, 4, 1, 3, 2, 8], [4, 6, 2, 4, 7, 0, 0, 0, 7, 4], [0, 48, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 1, 0, 1, 1, 2, 1, 1, 1, 14, 8, 6, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), tf.math.pow(beta, grad)), tf.math.subtract(grad, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 5, 3, 0, 3], [0, 1, 0, 1], [94, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [3, 2, 3, 0, 3, 9], [0, 2, 0, 3], [16, 16, 42], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 2, 6, 7], [0, 0, 0, 3, 0, 0, 3, 0, 2, 0, 4, 1, 4], [16, 99, 96, 53, 61, 1, 29]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 3, 2, 1, 1, 1, 26, 13, 13, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.math.pow(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), beta), tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), grad)), alpha), grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 5, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 2, 3, 2, 3, 5, 4, 5, 9], [0, 1, 2, 3, 0], [84, 16, 25], [0, 1, 1], [7], [0, 0], [99, 57], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 14, 9, 5, 3, 3, 1, 2, 2, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(beta, tf.math.square(grad))), tf.math.pow(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303001880645752, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]