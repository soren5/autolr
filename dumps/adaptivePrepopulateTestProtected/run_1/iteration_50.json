[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2238242626190186, 1.8702408075332642, 1.3989253044128418, 1.0938103199005127, 0.9440132975578308, 0.843924880027771, 0.7770308256149292, 0.7348120808601379, 0.6891900300979614, 0.6686111092567444, 0.6465572118759155, 0.6186468601226807, 0.59220290184021, 0.5814334154129028, 0.5669078230857849, 0.5489019155502319, 0.5301827788352966, 0.5177485942840576, 0.5101649165153503, 0.5117051601409912, 0.4893052577972412, 0.48222053050994873, 0.4678787291049957, 0.4636562168598175, 0.45587465167045593, 0.44814491271972656, 0.43622511625289917, 0.4354732930660248, 0.4265357553958893, 0.4142124354839325, 0.40815725922584534, 0.40005847811698914, 0.4003210663795471, 0.39108172059059143, 0.38397613167762756, 0.3733125925064087, 0.3779296278953552, 0.36518383026123047, 0.3614937663078308, 0.35672062635421753, 0.3492109775543213, 0.3464018404483795, 0.339365154504776, 0.3396804630756378, 0.3307111859321594, 0.3236643671989441, 0.31257879734039307, 0.321456640958786, 0.3110101521015167, 0.31273698806762695, 0.3105744421482086, 0.29919567704200745, 0.29805487394332886, 0.2930542230606079, 0.2938970923423767, 0.28714412450790405, 0.27642741799354553, 0.2792717218399048, 0.27095139026641846], "accuracy": [0.2674679756164551, 0.4842160940170288, 0.5562012791633606, 0.6153744459152222, 0.6609430909156799, 0.6980583667755127, 0.7190595865249634, 0.7337207794189453, 0.748778223991394, 0.7569673657417297, 0.7651565074920654, 0.7724210619926453, 0.7843085527420044, 0.7864218950271606, 0.7895918488502502, 0.7981772422790527, 0.8043851256370544, 0.8068947196006775, 0.8137630224227905, 0.8169330358505249, 0.8247259259223938, 0.8222163319587708, 0.8313300609588623, 0.8313300609588623, 0.8359529972076416, 0.8407079577445984, 0.843481719493866, 0.845859169960022, 0.8451988101005554, 0.8507462739944458, 0.8564258217811584, 0.8552370667457581, 0.856689989566803, 0.8610487580299377, 0.8625016212463379, 0.868049144744873, 0.8625016212463379, 0.8684453964233398, 0.8697662353515625, 0.8705587387084961, 0.8745211958885193, 0.8692378997802734, 0.8753136992454529, 0.8790120482444763, 0.8804649114608765, 0.8819178342819214, 0.8879936337471008, 0.8854840993881226, 0.8858803510665894, 0.8870691061019897, 0.884691596031189, 0.8912957310676575, 0.891559898853302, 0.8919561505317688, 0.8942015767097473, 0.8982961177825928, 0.8972394466400146, 0.8985602855682373, 0.9022586345672607], "val_loss": [2.0391974449157715, 1.5139026641845703, 1.0389410257339478, 0.833385169506073, 0.7425699830055237, 0.6892187595367432, 0.6448782086372375, 0.6089656352996826, 0.5808338522911072, 0.5622445344924927, 0.5464872121810913, 0.5286971926689148, 0.5147833824157715, 0.4997008442878723, 0.4904420077800751, 0.4809882342815399, 0.4727213978767395, 0.4639192223548889, 0.45640018582344055, 0.4523184895515442, 0.44721314311027527, 0.4373686611652374, 0.43181267380714417, 0.4304860830307007, 0.4228566884994507, 0.4188160002231598, 0.41898444294929504, 0.4127434194087982, 0.4063724875450134, 0.4022892117500305, 0.4021618664264679, 0.400217741727829, 0.39576902985572815, 0.38946452736854553, 0.38671496510505676, 0.3825148940086365, 0.3844337463378906, 0.38124749064445496, 0.3744789659976959, 0.37623274326324463, 0.37700000405311584, 0.3697681427001953, 0.3748103380203247, 0.36868640780448914, 0.3667578101158142, 0.3650318682193756, 0.3685290217399597, 0.3615975081920624, 0.3626455068588257, 0.3592783510684967, 0.3611542284488678, 0.36187154054641724, 0.35318341851234436, 0.35676851868629456, 0.3524584174156189, 0.35657671093940735, 0.35240715742111206, 0.34654515981674194, 0.3482426404953003], "val_accuracy": [0.5376666784286499, 0.656000018119812, 0.6850000023841858, 0.7146666646003723, 0.7383333444595337, 0.7543333172798157, 0.765999972820282, 0.7773333191871643, 0.7889999747276306, 0.7926666736602783, 0.7963333129882812, 0.8029999732971191, 0.8086666464805603, 0.8209999799728394, 0.824999988079071, 0.82833331823349, 0.8306666612625122, 0.8336666822433472, 0.8379999995231628, 0.8443333506584167, 0.843666672706604, 0.8416666388511658, 0.8476666808128357, 0.8476666808128357, 0.846666693687439, 0.8483333587646484, 0.8503333330154419, 0.856333315372467, 0.8576666712760925, 0.8619999885559082, 0.8586666584014893, 0.8613333106040955, 0.859333336353302, 0.862333357334137, 0.8650000095367432, 0.8650000095367432, 0.8633333444595337, 0.8683333396911621, 0.8663333058357239, 0.8686666488647461, 0.8679999709129333, 0.8696666955947876, 0.8686666488647461, 0.871666669845581, 0.8740000128746033, 0.8726666569709778, 0.8709999918937683, 0.8736666440963745, 0.875333309173584, 0.8740000128746033, 0.8769999742507935, 0.8736666440963745, 0.875, 0.8823333382606506, 0.8769999742507935, 0.8786666393280029, 0.8726666569709778, 0.8786666393280029, 0.8809999823570251]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8548571467399597, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2224173545837402, 1.864456057548523, 1.384917974472046, 1.0984638929367065, 0.9422266483306885, 0.8441890478134155, 0.7705713510513306, 0.730791449546814, 0.7038556337356567, 0.6689783334732056, 0.6479232311248779, 0.6174215078353882, 0.6004410982131958, 0.5814008712768555, 0.5682234168052673, 0.5506693720817566, 0.5389741063117981, 0.528128981590271, 0.5122890472412109, 0.508328914642334, 0.4984755218029022, 0.4802018702030182, 0.48416948318481445, 0.46016213297843933, 0.4617234170436859, 0.4404185116291046, 0.4409485459327698, 0.4309816360473633, 0.41942551732063293, 0.41583555936813354, 0.41416457295417786, 0.4046160578727722, 0.39685359597206116, 0.39734703302383423, 0.38126811385154724, 0.3852757513523102, 0.3757336735725403, 0.36611419916152954, 0.35705065727233887, 0.36563777923583984, 0.359499454498291, 0.346126914024353, 0.3475191593170166, 0.34137603640556335, 0.3410920202732086, 0.336364209651947, 0.32863375544548035, 0.3342258334159851, 0.31789618730545044, 0.310703307390213, 0.31059688329696655, 0.30868688225746155, 0.303035169839859, 0.2929190695285797, 0.2912351191043854, 0.2868213653564453, 0.28673550486564636, 0.2811175286769867, 0.2795071601867676, 0.27652549743652344, 0.2684597671031952, 0.2634198069572449, 0.26400256156921387, 0.2602885067462921, 0.2584724724292755, 0.25928112864494324, 0.2467210292816162, 0.2571040093898773], "accuracy": [0.2763175368309021, 0.4986131191253662, 0.5667679309844971, 0.6168273687362671, 0.6635847091674805, 0.6940959095954895, 0.7191916704177856, 0.7349095344543457, 0.7383436560630798, 0.7601373791694641, 0.7626469135284424, 0.7736098170280457, 0.7788931727409363, 0.7890635132789612, 0.7932901978492737, 0.8001585006713867, 0.8079513907432556, 0.8083476424217224, 0.8191784620285034, 0.8226125836372375, 0.8191784620285034, 0.8240655064582825, 0.8253863453865051, 0.8366134166717529, 0.8339717388153076, 0.8438779711723328, 0.8429533839225769, 0.8504821062088013, 0.8535200357437134, 0.8516708612442017, 0.8558974862098694, 0.8564258217811584, 0.860652506351471, 0.8590674996376038, 0.8643507957458496, 0.8650112152099609, 0.8659358024597168, 0.8710870146751404, 0.8754457831382751, 0.8706908226013184, 0.8751816153526306, 0.8774270415306091, 0.8754457831382751, 0.8755778670310974, 0.8772949576377869, 0.8812574148178101, 0.8799365758895874, 0.8823140859603882, 0.887201189994812, 0.8893144726753235, 0.8856161832809448, 0.8926165699958801, 0.893541157245636, 0.8910315632820129, 0.8965790271759033, 0.8949940800666809, 0.8985602855682373, 0.8986923694610596, 0.8989565372467041, 0.9014661312103271, 0.9046360850334167, 0.9055606722831726, 0.9045040011405945, 0.9078060984611511, 0.9075419306755066, 0.904768168926239, 0.9116365313529968, 0.9079381823539734], "val_loss": [2.0389904975891113, 1.5140366554260254, 1.0398918390274048, 0.8322983384132385, 0.7421830296516418, 0.6922797560691833, 0.6364292502403259, 0.6031903624534607, 0.5780873894691467, 0.5601829886436462, 0.5344471335411072, 0.5163422226905823, 0.5060884952545166, 0.49901455640792847, 0.4799068570137024, 0.47497209906578064, 0.4578896462917328, 0.4536081850528717, 0.43725359439849854, 0.4342281222343445, 0.4310954511165619, 0.42145174741744995, 0.4138645827770233, 0.40670138597488403, 0.4017849266529083, 0.39583560824394226, 0.389952152967453, 0.38489630818367004, 0.3807215988636017, 0.37641486525535583, 0.3768211305141449, 0.37250223755836487, 0.3682728707790375, 0.365927517414093, 0.36062946915626526, 0.35789355635643005, 0.3576986491680145, 0.35321614146232605, 0.3510569632053375, 0.3516806364059448, 0.34606119990348816, 0.34616246819496155, 0.34279027581214905, 0.3415548503398895, 0.34311744570732117, 0.33765023946762085, 0.3394521176815033, 0.3327982723712921, 0.3369828760623932, 0.32999542355537415, 0.3293352425098419, 0.32790306210517883, 0.33061644434928894, 0.3304654657840729, 0.325194776058197, 0.3229040503501892, 0.3200547993183136, 0.3238646388053894, 0.31951823830604553, 0.3196529448032379, 0.3190386891365051, 0.31637731194496155, 0.3194116950035095, 0.3190855383872986, 0.3226143717765808, 0.3112179636955261, 0.31425967812538147, 0.31438910961151123], "val_accuracy": [0.5363333225250244, 0.6636666655540466, 0.6966666579246521, 0.7176666855812073, 0.7456666827201843, 0.7519999742507935, 0.7703333497047424, 0.7773333191871643, 0.7893333435058594, 0.7993333339691162, 0.8016666769981384, 0.8133333325386047, 0.8240000009536743, 0.8173333406448364, 0.8296666741371155, 0.8273333311080933, 0.8426666855812073, 0.8370000123977661, 0.8500000238418579, 0.846666693687439, 0.8450000286102295, 0.8529999852180481, 0.859666645526886, 0.8576666712760925, 0.859000027179718, 0.859666645526886, 0.8643333315849304, 0.8653333187103271, 0.8673333525657654, 0.8653333187103271, 0.8676666617393494, 0.8673333525657654, 0.8696666955947876, 0.8703333139419556, 0.875333309173584, 0.8723333477973938, 0.8713333606719971, 0.875, 0.875333309173584, 0.8799999952316284, 0.8769999742507935, 0.8813333511352539, 0.8759999871253967, 0.8786666393280029, 0.8820000290870667, 0.8799999952316284, 0.874666690826416, 0.8816666603088379, 0.8813333511352539, 0.8830000162124634, 0.8796666860580444, 0.8799999952316284, 0.8813333511352539, 0.8853333592414856, 0.8826666474342346, 0.8816666603088379, 0.8823333382606506, 0.8849999904632568, 0.8859999775886536, 0.8856666684150696, 0.8856666684150696, 0.8870000243186951, 0.890666663646698, 0.8796666860580444, 0.8806666731834412, 0.8893333077430725, 0.8840000033378601, 0.8826666474342346]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1, 1], [0, 6], [0, 7], [0], [0, 1], [0], [1], [0]], "fitness": -0.8511428833007812, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2915689945220947, 2.1869964599609375, 1.7542955875396729, 1.343080759048462, 1.0743812322616577, 0.9207212924957275, 0.8545786142349243, 0.8261896967887878, 0.7547510266304016, 0.7287726402282715, 0.7085712552070618, 0.6859598755836487, 0.6590979099273682, 0.6268618702888489, 0.6259782314300537, 0.6052523255348206, 0.5847194790840149, 0.5739949345588684, 0.569711446762085, 0.5520079731941223, 0.5417286157608032, 0.5393722057342529, 0.5181335210800171, 0.5189189314842224, 0.4959864318370819, 0.49319425225257874, 0.4829384982585907, 0.4672098159790039, 0.47629883885383606, 0.46291887760162354, 0.44789186120033264, 0.43826159834861755, 0.44509491324424744, 0.4364221692085266, 0.4268774390220642, 0.42369529604911804, 0.4080059826374054, 0.40218257904052734, 0.3940524458885193, 0.3856969177722931, 0.37406155467033386], "accuracy": [0.13195087015628815, 0.3217540681362152, 0.44366663694381714, 0.5466912984848022, 0.6338660717010498, 0.6630563735961914, 0.6811517477035522, 0.6889446377754211, 0.7108704447746277, 0.722757875919342, 0.7360982894897461, 0.7380794882774353, 0.7429665923118591, 0.763967752456665, 0.7574957013130188, 0.7676661014556885, 0.774270236492157, 0.7788931727409363, 0.7817989587783813, 0.7881389260292053, 0.7858935594558716, 0.7906485199928284, 0.7987055778503418, 0.8017435073852539, 0.8092722296714783, 0.8086118102073669, 0.8109893202781677, 0.819442629814148, 0.8148196935653687, 0.8212917447090149, 0.8260467648506165, 0.828820526599884, 0.826310932636261, 0.828820526599884, 0.8319904804229736, 0.8329150676727295, 0.8396512866020203, 0.8408400416374207, 0.8467837572097778, 0.8442742228507996, 0.8537842035293579], "val_loss": [2.2449164390563965, 2.0125842094421387, 1.1258479356765747, 0.8944298624992371, 0.765187680721283, 0.717377781867981, 0.6922022104263306, 0.655134916305542, 0.6478708386421204, 0.6535990238189697, 0.6154857873916626, 0.581605076789856, 0.5741722583770752, 0.542223334312439, 0.5339226722717285, 0.5390894412994385, 0.5333102345466614, 0.5124815106391907, 0.5153234004974365, 0.5021108388900757, 0.4845377504825592, 0.4813201129436493, 0.47504761815071106, 0.4724368155002594, 0.46967312693595886, 0.46553128957748413, 0.45901668071746826, 0.48157715797424316, 0.46997690200805664, 0.46427616477012634, 0.4668121635913849, 0.46575918793678284, 0.4663633108139038, 0.44582876563072205, 0.44802120327949524, 0.4271036386489868, 0.4333929717540741, 0.44552791118621826, 0.44485336542129517, 0.4390321969985962, 0.4530787467956543], "val_accuracy": [0.40833333134651184, 0.44699999690055847, 0.6266666650772095, 0.6769999861717224, 0.7126666903495789, 0.7310000061988831, 0.7139999866485596, 0.7509999871253967, 0.753000020980835, 0.7509999871253967, 0.7710000276565552, 0.7673333287239075, 0.781000018119812, 0.7940000295639038, 0.8013333082199097, 0.7950000166893005, 0.7916666865348816, 0.8103333115577698, 0.8050000071525574, 0.8056666851043701, 0.8186666369438171, 0.8223333358764648, 0.8240000009536743, 0.8226666450500488, 0.8323333263397217, 0.8266666531562805, 0.8366666436195374, 0.8203333616256714, 0.8273333311080933, 0.8343333601951599, 0.8396666646003723, 0.8376666903495789, 0.8373333215713501, 0.8379999995231628, 0.8456666469573975, 0.8510000109672546, 0.8476666808128357, 0.8453333377838135, 0.8493333458900452, 0.8486666679382324, 0.8396666646003723]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8328571319580078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6693148612976074, 0.8724964261054993, 0.7233418822288513, 0.6673578023910522, 0.5881621837615967, 0.5629432797431946, 0.5093783140182495, 0.5169675350189209, 0.48636117577552795, 0.4555870294570923, 0.45677778124809265, 0.4484318494796753, 0.4608781337738037, 0.444502592086792, 0.4825294613838196, 0.4874174892902374, 0.4994184672832489, 0.4829968214035034, 0.508937418460846], "accuracy": [0.4443270266056061, 0.6944921612739563, 0.7342491149902344, 0.750231146812439, 0.7757231593132019, 0.7956677079200745, 0.8075551390647888, 0.8117818236351013, 0.8267071843147278, 0.8297450542449951, 0.8323867321014404, 0.8428213000297546, 0.8392550349235535, 0.8401796221733093, 0.8350284099578857, 0.8347642421722412, 0.8227446675300598, 0.8446704745292664, 0.8338396549224854], "val_loss": [0.9084732532501221, 0.6456276774406433, 0.5703606605529785, 0.5286983847618103, 0.5287268757820129, 0.48587334156036377, 0.49140676856040955, 0.47691377997398376, 0.4569449722766876, 0.45571988821029663, 0.44723084568977356, 0.48849084973335266, 0.4866481423377991, 0.48307397961616516, 0.5593533515930176, 0.5667502284049988, 0.5630670785903931, 0.5654639601707458, 0.4978584349155426], "val_accuracy": [0.6783333420753479, 0.753333330154419, 0.7900000214576721, 0.7973333597183228, 0.8046666383743286, 0.8180000185966492, 0.8166666626930237, 0.8293333053588867, 0.8383333086967468, 0.8376666903495789, 0.8503333330154419, 0.8389999866485596, 0.8513333201408386, 0.8603333234786987, 0.847000002861023, 0.8383333086967468, 0.8536666631698608, 0.8553333282470703, 0.8493333458900452]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 1, 5], [0, 2, 0, 0], [16, 16, 14], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 8, 3, 6, 8, 1, 2, 1, 4, 2, 8, 1, 0, 7, 1], [0, 0, 0, 3, 0, 3, 3, 1, 2, 0, 1, 0], [1, 39, 96, 99, 61, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 3, 2, 1, 1, 1, 27, 15, 12, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), sigma)))), tf.math.sqrt(tf.math.subtract(alpha, beta))))), tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 76], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 9, 0, 3, 5], [0, 2, 0, 0], [16, 16], [0, 1, 1], [1], [0, 3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 7, 8, 7, 6], [2, 0, 4, 3, 0, 4, 3, 1, 2, 0, 5, 0, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 5, 4, 1, 2, 3, 1, 2, 1, 28, 15, 13, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), sigma), tf.math.sqrt(tf.math.add(alpha, beta))))), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 0, 5, 5], [0, 2, 0, 3], [16, 16], [0, 0, 1, 1], [0, 6], [0, 5], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 3, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 2, 1, 3, 0, 2], [68, 99, 96, 99, 45, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 4, 2, 2, 1, 22, 11, 11, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), beta))), alpha)), tf.math.add(tf.math.sqrt(sigma), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 3, 2, 0, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [2], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 5, 8, 1], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0, 7], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 3, 2, 1, 1, 2, 1, 1, 0, 25, 14, 11, 6], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), grad)), tf.math.sqrt(tf.math.square(alpha)))), beta), tf.math.sqrt(tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]