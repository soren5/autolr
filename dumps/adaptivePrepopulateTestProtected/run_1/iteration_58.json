[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8791428804397583, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224691152572632, 1.8683772087097168, 1.4013793468475342, 1.0939387083053589, 0.9551045894622803, 0.8530007004737854, 0.779485821723938, 0.7457146048545837, 0.7030880451202393, 0.6819782257080078, 0.646918535232544, 0.6262496709823608, 0.5985910296440125, 0.5927533507347107, 0.5734840035438538, 0.5512962341308594, 0.5397131443023682, 0.5306671261787415, 0.5227266550064087, 0.5091748833656311, 0.493897944688797, 0.4855693578720093, 0.4755500555038452, 0.46436217427253723, 0.4576524496078491, 0.4496408700942993, 0.4397708475589752, 0.4444425106048584, 0.4241836667060852, 0.43109697103500366, 0.4217256009578705, 0.40949341654777527, 0.40209436416625977, 0.40443363785743713, 0.39794257283210754, 0.3834945559501648, 0.3769911527633667, 0.3764527142047882, 0.3669157326221466, 0.37186846137046814, 0.36375153064727783, 0.35602423548698425, 0.3509747087955475, 0.3444776237010956, 0.3358671963214874, 0.32751885056495667, 0.33768701553344727, 0.3213590085506439, 0.3252784311771393, 0.32559001445770264, 0.3185674250125885, 0.3153201639652252, 0.30147793889045715, 0.30520761013031006, 0.2942403256893158, 0.29585933685302734, 0.29156526923179626, 0.28494489192962646, 0.2864094078540802, 0.2840997576713562, 0.28428274393081665, 0.27462372183799744, 0.2701452672481537, 0.26235172152519226, 0.26258987188339233, 0.25485068559646606, 0.25275006890296936, 0.2532438039779663, 0.25031259655952454, 0.24532482028007507, 0.2331540286540985, 0.2390974760055542, 0.23482851684093475, 0.23101423680782318, 0.22753727436065674, 0.22632567584514618], "accuracy": [0.25941091775894165, 0.4893673360347748, 0.55791836977005, 0.6210539937019348, 0.6567164063453674, 0.6983225345611572, 0.7206445932388306, 0.7283053994178772, 0.7486461400985718, 0.7526086568832397, 0.7619865536689758, 0.7676661014556885, 0.7792893648147583, 0.7816668748855591, 0.7922335267066956, 0.7997622489929199, 0.8053097128868103, 0.8055738806724548, 0.8107251524925232, 0.8133667707443237, 0.8222163319587708, 0.8226125836372375, 0.8300092220306396, 0.8327829837799072, 0.8310658931732178, 0.844010055065155, 0.8417646288871765, 0.8400475382804871, 0.846387505531311, 0.845859169960022, 0.8498216867446899, 0.8511425256729126, 0.8581429123878479, 0.8519350290298462, 0.8560295701026917, 0.8639545440673828, 0.8640866279602051, 0.8636903762817383, 0.8676528930664062, 0.8632941246032715, 0.86553955078125, 0.8687095642089844, 0.8733324408531189, 0.8751816153526306, 0.8776912093162537, 0.8792761564254761, 0.8746532797813416, 0.8809932470321655, 0.8815215826034546, 0.8833707571029663, 0.8837670087814331, 0.8850878477096558, 0.8930128216743469, 0.8902390599250793, 0.8947299122810364, 0.8943336606025696, 0.891559898853302, 0.8963148593902588, 0.89552241563797, 0.8947299122810364, 0.895918607711792, 0.8989565372467041, 0.9046360850334167, 0.9054285883903503, 0.9002773761749268, 0.9064852595329285, 0.9074098467826843, 0.9099194407463074, 0.9104477763175964, 0.915070652961731, 0.9157310724258423, 0.9129573106765747, 0.9148064851760864, 0.9124290347099304, 0.9171839952468872, 0.9171839952468872], "val_loss": [2.038526773452759, 1.510238766670227, 1.0447747707366943, 0.8352280259132385, 0.7531793713569641, 0.6963355541229248, 0.6498194932937622, 0.6246073842048645, 0.5953369736671448, 0.5716328024864197, 0.5562007427215576, 0.5438976287841797, 0.5279420018196106, 0.51389080286026, 0.5057971477508545, 0.49414271116256714, 0.482173353433609, 0.47447696328163147, 0.46831631660461426, 0.4581488370895386, 0.4518188536167145, 0.4512670934200287, 0.4456486403942108, 0.43329060077667236, 0.43261417746543884, 0.4205039143562317, 0.4206644594669342, 0.413736492395401, 0.4104427099227905, 0.40436092019081116, 0.4019021689891815, 0.401526540517807, 0.3927256762981415, 0.39569756388664246, 0.388218492269516, 0.39298149943351746, 0.3826553523540497, 0.3818466365337372, 0.3840924799442291, 0.3762838542461395, 0.3779735565185547, 0.3782140612602234, 0.3694102466106415, 0.3699958026409149, 0.36511310935020447, 0.366933137178421, 0.36473965644836426, 0.3623674213886261, 0.35939449071884155, 0.35847315192222595, 0.3595349192619324, 0.35298311710357666, 0.3535289168357849, 0.35462313890457153, 0.35054683685302734, 0.34882593154907227, 0.3493621349334717, 0.3531535565853119, 0.34503549337387085, 0.34384992718696594, 0.3448854088783264, 0.34570378065109253, 0.34537023305892944, 0.34840068221092224, 0.34696924686431885, 0.3487513065338135, 0.33932241797447205, 0.3398410975933075, 0.33569568395614624, 0.33905473351478577, 0.34274718165397644, 0.34127065539360046, 0.33783894777297974, 0.34692227840423584, 0.35144636034965515, 0.33920830488204956], "val_accuracy": [0.5683333277702332, 0.6576666831970215, 0.6836666464805603, 0.7106666564941406, 0.7303333282470703, 0.746666669845581, 0.7596666812896729, 0.7696666717529297, 0.7720000147819519, 0.7870000004768372, 0.7943333387374878, 0.800000011920929, 0.8013333082199097, 0.8119999766349792, 0.8103333115577698, 0.8133333325386047, 0.8209999799728394, 0.8266666531562805, 0.8293333053588867, 0.8296666741371155, 0.831333339214325, 0.8373333215713501, 0.8320000171661377, 0.8396666646003723, 0.8389999866485596, 0.8483333587646484, 0.8433333039283752, 0.8503333330154419, 0.8510000109672546, 0.8523333072662354, 0.8506666421890259, 0.8529999852180481, 0.8543333411216736, 0.8569999933242798, 0.8603333234786987, 0.8576666712760925, 0.859333336353302, 0.8576666712760925, 0.8550000190734863, 0.8643333315849304, 0.859666645526886, 0.8619999885559082, 0.8683333396911621, 0.8663333058357239, 0.8686666488647461, 0.8650000095367432, 0.8663333058357239, 0.8693333268165588, 0.8700000047683716, 0.8709999918937683, 0.8723333477973938, 0.8730000257492065, 0.875, 0.871999979019165, 0.8726666569709778, 0.875, 0.8759999871253967, 0.8723333477973938, 0.8763333559036255, 0.8743333220481873, 0.875, 0.8776666522026062, 0.875, 0.8756666779518127, 0.8759999871253967, 0.8763333559036255, 0.8796666860580444, 0.8806666731834412, 0.8769999742507935, 0.8790000081062317, 0.8840000033378601, 0.8790000081062317, 0.8796666860580444, 0.878333330154419, 0.878000020980835, 0.8816666603088379]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8671428561210632, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.219430446624756, 1.8501403331756592, 1.3712353706359863, 1.0750417709350586, 0.9178353548049927, 0.8168542981147766, 0.7645755410194397, 0.708431601524353, 0.6671412587165833, 0.6381261348724365, 0.6119757890701294, 0.6003173589706421, 0.5825413465499878, 0.5541593432426453, 0.5317866802215576, 0.5269134044647217, 0.5075381398200989, 0.49805018305778503, 0.4853017032146454, 0.4759969115257263, 0.4649119973182678, 0.45549577474594116, 0.44447407126426697, 0.4420510530471802, 0.43165963888168335, 0.4222254455089569, 0.41615432500839233, 0.41009360551834106, 0.4035874009132385, 0.4027528464794159, 0.3971511125564575, 0.3855462670326233, 0.3727799952030182, 0.3656737804412842, 0.3633706271648407, 0.3651006519794464, 0.3585079610347748, 0.3442125916481018, 0.34275344014167786, 0.33663544058799744, 0.33337149024009705, 0.3283326327800751, 0.32364600896835327, 0.31955486536026, 0.31438741087913513, 0.3033871054649353, 0.3028874099254608, 0.2991313338279724, 0.2929253578186035, 0.2892517149448395, 0.29275721311569214, 0.2826593816280365, 0.2860824465751648, 0.27863359451293945, 0.27569127082824707, 0.2620912790298462, 0.2625238597393036, 0.2614322006702423, 0.25599491596221924, 0.23962584137916565, 0.24365940690040588, 0.2440224587917328, 0.23931780457496643, 0.23253199458122253], "accuracy": [0.28001585602760315, 0.49531105160713196, 0.5712587237358093, 0.6242240071296692, 0.6668868064880371, 0.7073041796684265, 0.7256637215614319, 0.7437590956687927, 0.7592127919197083, 0.7631752490997314, 0.7777044177055359, 0.7790252566337585, 0.785629391670227, 0.8035926818847656, 0.8078193068504333, 0.8098005652427673, 0.813498854637146, 0.8204993009567261, 0.8249900937080383, 0.8290846943855286, 0.8298771381378174, 0.8412362933158875, 0.8409721255302429, 0.844010055065155, 0.8466516733169556, 0.8512746095657349, 0.8527275323867798, 0.8533879518508911, 0.8545766472816467, 0.8578787446022034, 0.8585391640663147, 0.8614450097084045, 0.8654074668884277, 0.8706908226013184, 0.8701624870300293, 0.8671245574951172, 0.8753136992454529, 0.878351628780365, 0.8784837126731873, 0.8771628737449646, 0.8816536664962769, 0.8838990926742554, 0.8836349248886108, 0.8858803510665894, 0.8845595121383667, 0.8912957310676575, 0.8878615498542786, 0.8897107243537903, 0.8942015767097473, 0.8963148593902588, 0.89552241563797, 0.8980319499969482, 0.8957865834236145, 0.8993527889251709, 0.8989565372467041, 0.9043719172477722, 0.9051644206047058, 0.9033153057098389, 0.909259021282196, 0.9101836085319519, 0.9080702662467957, 0.9128252267837524, 0.9113723635673523, 0.915070652961731], "val_loss": [2.026041269302368, 1.4814010858535767, 1.0019357204437256, 0.7940698266029358, 0.7031317353248596, 0.6497400403022766, 0.6064051985740662, 0.5725957751274109, 0.545757532119751, 0.5219231843948364, 0.5049374103546143, 0.49122950434684753, 0.4801025092601776, 0.4700974225997925, 0.45458993315696716, 0.44786059856414795, 0.436767578125, 0.43183478713035583, 0.4265340268611908, 0.41481995582580566, 0.4143231511116028, 0.408344030380249, 0.4020141661167145, 0.3947387635707855, 0.38913658261299133, 0.3874594271183014, 0.38932621479034424, 0.38660189509391785, 0.37784281373023987, 0.3769347369670868, 0.3706005811691284, 0.37067630887031555, 0.3690147399902344, 0.3647974133491516, 0.3594696521759033, 0.3624030649662018, 0.35792070627212524, 0.3545278012752533, 0.35629281401634216, 0.35246992111206055, 0.3513665497303009, 0.3451358377933502, 0.34660419821739197, 0.34376072883605957, 0.34498900175094604, 0.3451831042766571, 0.3383508026599884, 0.3406619727611542, 0.3398798704147339, 0.33622077107429504, 0.33833521604537964, 0.3389892280101776, 0.3333839476108551, 0.334648996591568, 0.33358415961265564, 0.3334815204143524, 0.33438730239868164, 0.3323252499103546, 0.32832542061805725, 0.33023515343666077, 0.32809925079345703, 0.32640400528907776, 0.3320784866809845, 0.3280436098575592], "val_accuracy": [0.5553333163261414, 0.6763333082199097, 0.6956666707992554, 0.7250000238418579, 0.75, 0.7613333463668823, 0.7856666445732117, 0.7973333597183228, 0.8073333501815796, 0.815666675567627, 0.8223333358764648, 0.8270000219345093, 0.82833331823349, 0.8320000171661377, 0.8420000076293945, 0.8433333039283752, 0.8513333201408386, 0.8500000238418579, 0.8510000109672546, 0.856333315372467, 0.8560000061988831, 0.856333315372467, 0.8600000143051147, 0.859000027179718, 0.8610000014305115, 0.8650000095367432, 0.8610000014305115, 0.859000027179718, 0.8613333106040955, 0.8650000095367432, 0.8690000176429749, 0.8683333396911621, 0.875, 0.8733333349227905, 0.8743333220481873, 0.8709999918937683, 0.8726666569709778, 0.878000020980835, 0.8740000128746033, 0.8743333220481873, 0.8799999952316284, 0.878333330154419, 0.878000020980835, 0.8809999823570251, 0.8766666650772095, 0.8816666603088379, 0.8836666941642761, 0.8806666731834412, 0.8843333125114441, 0.8883333206176758, 0.8846666812896729, 0.8796666860580444, 0.8863333463668823, 0.8863333463668823, 0.8889999985694885, 0.8883333206176758, 0.8866666555404663, 0.8896666765213013, 0.8943333625793457, 0.8923333287239075, 0.890999972820282, 0.893666684627533, 0.893666684627533, 0.8920000195503235]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8562856912612915, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293576955795288, 2.187699556350708, 1.7590906620025635, 1.364782691001892, 1.0953160524368286, 0.9351856708526611, 0.8579033017158508, 0.8292441368103027, 0.7716580629348755, 0.7519721984863281, 0.7045944333076477, 0.6849423050880432, 0.6576430201530457, 0.6394866108894348, 0.6142957806587219, 0.5981913805007935, 0.6058934926986694, 0.5859509706497192, 0.5617923736572266, 0.5634989142417908, 0.543685793876648, 0.5420864224433899, 0.5184301733970642, 0.5219593048095703, 0.509016752243042, 0.501099169254303, 0.48181697726249695, 0.46544599533081055, 0.4611874520778656, 0.4607085883617401, 0.44424739480018616, 0.43848827481269836, 0.4305165708065033, 0.4329768121242523, 0.4178285300731659, 0.4253079295158386, 0.3956476151943207, 0.39872854948043823, 0.39254575967788696, 0.37875911593437195, 0.3823249936103821, 0.3795628249645233, 0.3724253177642822, 0.3769584000110626, 0.3559750020503998, 0.348327100276947, 0.3582933247089386, 0.35147687792778015, 0.35147425532341003, 0.34322333335876465, 0.341656893491745, 0.339968204498291, 0.3289267122745514, 0.33130282163619995, 0.31207266449928284, 0.31484293937683105, 0.29174262285232544], "accuracy": [0.12402588874101639, 0.33324527740478516, 0.4453836977481842, 0.5456346869468689, 0.631488561630249, 0.6626601219177246, 0.6848500967025757, 0.6942279934883118, 0.69673752784729, 0.7231541275978088, 0.733060359954834, 0.7387399077415466, 0.7500990629196167, 0.7515519857406616, 0.7609298825263977, 0.7765156626701355, 0.7683265209197998, 0.7816668748855591, 0.7829877138137817, 0.7835160493850708, 0.7957997918128967, 0.7994980812072754, 0.8045172095298767, 0.7988376617431641, 0.8075551390647888, 0.8035926818847656, 0.822348415851593, 0.8261788487434387, 0.8259146809577942, 0.8281601071357727, 0.8322546482086182, 0.8323867321014404, 0.835160493850708, 0.832650899887085, 0.8393871188163757, 0.8425571322441101, 0.844010055065155, 0.8421608805656433, 0.8540483713150024, 0.8569541573524475, 0.856689989566803, 0.8508783578872681, 0.8570862412452698, 0.8549728989601135, 0.8578787446022034, 0.8672566413879395, 0.8564258217811584, 0.86118084192276, 0.8651432991027832, 0.8713511824607849, 0.86553955078125, 0.867520809173584, 0.8774270415306091, 0.8713511824607849, 0.8766345381736755, 0.8762382864952087, 0.8854840993881226], "val_loss": [2.246652603149414, 2.015591859817505, 1.1323108673095703, 0.8537608981132507, 0.7676438093185425, 0.7087333798408508, 0.653836190700531, 0.6404351592063904, 0.6617039442062378, 0.6322798728942871, 0.5850921273231506, 0.5743594765663147, 0.548146665096283, 0.5317955017089844, 0.5289363861083984, 0.5065736770629883, 0.5065964460372925, 0.49003222584724426, 0.4982985854148865, 0.47209659218788147, 0.47881877422332764, 0.472316175699234, 0.4666306674480438, 0.4634147882461548, 0.452101469039917, 0.4464573860168457, 0.4469086825847626, 0.43611738085746765, 0.44192302227020264, 0.4226536452770233, 0.41373786330223083, 0.4127514660358429, 0.41191723942756653, 0.4163188338279724, 0.4056033194065094, 0.3959181606769562, 0.40506160259246826, 0.39815664291381836, 0.4061175584793091, 0.40656739473342896, 0.39354997873306274, 0.38347285985946655, 0.38363566994667053, 0.39239737391471863, 0.3844146728515625, 0.38939905166625977, 0.39198046922683716, 0.39299601316452026, 0.4033542573451996, 0.4045795500278473, 0.3984227180480957, 0.40275806188583374, 0.3953663408756256, 0.39352986216545105, 0.4121299684047699, 0.40414348244667053, 0.39608660340309143], "val_accuracy": [0.421999990940094, 0.4390000104904175, 0.6393333077430725, 0.6936666369438171, 0.7210000157356262, 0.7366666793823242, 0.7463333606719971, 0.7516666650772095, 0.7443333268165588, 0.7696666717529297, 0.7723333239555359, 0.768666684627533, 0.7873333096504211, 0.7956666946411133, 0.7910000085830688, 0.7990000247955322, 0.8109999895095825, 0.8153333067893982, 0.8103333115577698, 0.8206666707992554, 0.8196666836738586, 0.8246666789054871, 0.8223333358764648, 0.8240000009536743, 0.8320000171661377, 0.8370000123977661, 0.8410000205039978, 0.8536666631698608, 0.8416666388511658, 0.8486666679382324, 0.8566666841506958, 0.8546666502952576, 0.8523333072662354, 0.8496666550636292, 0.8566666841506958, 0.8663333058357239, 0.8576666712760925, 0.8740000128746033, 0.8709999918937683, 0.8646666407585144, 0.8703333139419556, 0.8769999742507935, 0.874666690826416, 0.8666666746139526, 0.8786666393280029, 0.8713333606719971, 0.8683333396911621, 0.8766666650772095, 0.8790000081062317, 0.8723333477973938, 0.8686666488647461, 0.8799999952316284, 0.8700000047683716, 0.8706666827201843, 0.8709999918937683, 0.8766666650772095, 0.8796666860580444]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8345714211463928, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.591544270515442, 0.858497679233551, 0.685680627822876, 0.6306911706924438, 0.5925326347351074, 0.5726675391197205, 0.5513787865638733, 0.5490342378616333, 0.5248080492019653, 0.502987802028656, 0.5007952451705933, 0.5284886956214905, 0.5338524580001831, 0.5395022630691528, 0.5580010414123535, 0.5548073053359985, 0.5744941830635071, 0.564821720123291, 0.49889710545539856, 0.5593627095222473, 0.537076473236084], "accuracy": [0.4737815260887146, 0.7057191729545593, 0.7421740889549255, 0.7681944370269775, 0.7810064554214478, 0.8016114234924316, 0.793950617313385, 0.7938185334205627, 0.8054417967796326, 0.8195747137069702, 0.8175934553146362, 0.8059701323509216, 0.81548011302948, 0.8129705190658569, 0.8072909712791443, 0.8169330358505249, 0.8070268034934998, 0.8083476424217224, 0.8234050869941711, 0.8244617581367493, 0.8119139075279236], "val_loss": [0.9182438850402832, 0.6247349381446838, 0.5876864194869995, 0.5553619265556335, 0.5547560453414917, 0.5157434344291687, 0.5365678071975708, 0.5365768671035767, 0.5191561579704285, 0.5382171869277954, 0.5193861722946167, 0.5813459753990173, 0.5843812823295593, 0.5419973134994507, 0.5448728203773499, 0.6144776940345764, 0.5795119404792786, 0.6119427680969238, 0.6231849193572998, 0.5871440172195435, 0.6996248960494995], "val_accuracy": [0.6983333230018616, 0.7770000100135803, 0.7806666493415833, 0.812333345413208, 0.8253333568572998, 0.8153333067893982, 0.8113333582878113, 0.8230000138282776, 0.82833331823349, 0.8206666707992554, 0.8136666417121887, 0.7979999780654907, 0.8403333425521851, 0.8276666402816772, 0.8393333554267883, 0.840666651725769, 0.8073333501815796, 0.828000009059906, 0.8349999785423279, 0.8266666531562805, 0.8303333520889282]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 1, 0, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 1], [0, 0, 0], [0], [0], [0, 0, 0, 1, 1, 1], [4, 2, 0], [1, 6, 5], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.math.negative(alpha), grad), grad)", "other_info": {"loss": [2.3047780990600586, 2.303926944732666, 2.3042585849761963, 2.303847074508667, 2.3047919273376465, 2.3046867847442627, 2.304532289505005, 2.3050589561462402, 2.3042306900024414, 2.3046109676361084], "accuracy": [0.09536388516426086, 0.09919429570436478, 0.08836349099874496, 0.09840179979801178, 0.09787346422672272, 0.09245806187391281, 0.09298639744520187, 0.09536388516426086, 0.09932637959718704, 0.09932637959718704], "val_loss": [2.30336594581604, 2.3028571605682373, 2.3040480613708496, 2.3069233894348145, 2.304792642593384, 2.304603099822998, 2.3038742542266846, 2.304385185241699, 2.3064937591552734, 2.305635929107666], "val_accuracy": [0.1003333330154419, 0.10066666454076767, 0.09966666996479034, 0.10066666454076767, 0.10133333504199982, 0.10066666454076767, 0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.10133333504199982]}, "mapping_values": [1, 5, 3, 2, 2, 2, 1, 1, 1, 4, 3, 1, 1, 6, 3, 3, 0], "tree_depth": 10}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1], [0, 2, 3, 0, 3, 6, 0, 8, 0, 3], [0, 1, 0, 2, 2, 1], [39, 41], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 6], [0, 2, 0, 3], [84, 16], [0, 1], [0], [1], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [4, 3, 3, 6, 8, 1, 4, 1, 4, 5, 8], [0, 0, 4, 3, 0, 0, 4, 4, 2, 0], [16, 25, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 10, 6, 2, 7, 4, 3, 2, 2, 1, 1, 0, 20, 11, 9, 4], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.negative(tf.math.sqrt(tf.math.negative(tf.math.multiply(grad, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(grad, tf.math.pow(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32)))), grad)), grad), tf.math.square(tf.math.sqrt(beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [3, 2, 3, 0, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 2, 9, 8], [1, 1, 2, 1, 4, 1, 4, 2, 4, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 3, 2, 1, 1, 1, 2, 1, 1, 1, 19, 11, 8, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(alpha, tf.math.pow(beta, alpha))), tf.math.subtract(grad, tf.math.add(alpha, grad)))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 6, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 69], [0, 1], [0], [0], [61], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [6, 3, 3, 6, 5, 1, 4, 1, 4, 2, 8, 2, 3, 6, 3, 5, 8], [3, 0, 0, 3, 0, 0, 3, 1, 2, 0, 6, 3, 7, 6], [16, 99, 75, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 31, 17, 14, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(tf.math.add(alpha, beta))))), tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(grad), sigma)), grad)), tf.math.sqrt(grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]