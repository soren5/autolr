[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 0, 0, 0, 1], [0, 1, 8, 9, 0, 0], [0], [0, 88], [0, 1], [0], [1], [0]], "fitness": -0.8565714359283447, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.negative(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292686939239502, 2.1871747970581055, 1.7611979246139526, 1.331708312034607, 1.0629651546478271, 0.9035937190055847, 0.8305904865264893, 0.7982960939407349, 0.7484604716300964, 0.7276867032051086, 0.6824180483818054, 0.6616472005844116, 0.6368085741996765, 0.6007471084594727, 0.5821959376335144, 0.5898954272270203, 0.5732647776603699, 0.560944139957428, 0.5495086908340454, 0.5261011123657227, 0.5364334583282471, 0.5175251960754395, 0.5195460915565491, 0.49588364362716675, 0.48753052949905396, 0.45831528306007385, 0.4411960542201996, 0.4426451623439789, 0.4497232735157013, 0.42672187089920044, 0.4231376051902771, 0.40997540950775146, 0.41459691524505615, 0.39659515023231506, 0.3970365822315216, 0.3766214847564697, 0.3786941170692444, 0.3750983476638794, 0.359988808631897, 0.36236467957496643, 0.3568657338619232, 0.3427037000656128, 0.34142765402793884, 0.3454103469848633, 0.34202778339385986, 0.338765412569046, 0.3291519284248352, 0.3235001862049103, 0.3154074251651764, 0.3149625062942505, 0.30984559655189514, 0.30984699726104736, 0.29975345730781555, 0.2982005774974823], "accuracy": [0.12257297337055206, 0.3245278000831604, 0.43930789828300476, 0.5532954931259155, 0.6419231295585632, 0.677189290523529, 0.698718786239624, 0.7077004313468933, 0.7113987803459167, 0.7177387475967407, 0.7382115721702576, 0.7436270117759705, 0.7609298825263977, 0.7703077793121338, 0.7751948237419128, 0.776251494884491, 0.780610203742981, 0.778761088848114, 0.789459764957428, 0.8013472557067871, 0.7957997918128967, 0.8038568496704102, 0.8026680946350098, 0.8120459914207458, 0.8150838613510132, 0.826310932636261, 0.8304054737091064, 0.8298771381378174, 0.8281601071357727, 0.8374059200286865, 0.8437458872795105, 0.8409721255302429, 0.8408400416374207, 0.8482366800308228, 0.8496896028518677, 0.8544445633888245, 0.8532558679580688, 0.8568220734596252, 0.863029956817627, 0.860652506351471, 0.8619733452796936, 0.8634262084960938, 0.8685774803161621, 0.8644828796386719, 0.8704266548156738, 0.8721436858177185, 0.871879518032074, 0.8742570281028748, 0.8729361891746521, 0.8808611631393433, 0.8803328275680542, 0.8745211958885193, 0.8819178342819214, 0.8836349248886108], "val_loss": [2.246281385421753, 2.0124287605285645, 1.1201895475387573, 0.851979672908783, 0.7482239603996277, 0.7012218236923218, 0.6712299585342407, 0.6733885407447815, 0.6341657042503357, 0.6093458533287048, 0.5695215463638306, 0.5591569542884827, 0.5490438342094421, 0.5308725237846375, 0.5281835198402405, 0.5164906978607178, 0.5206243395805359, 0.5177758932113647, 0.518698513507843, 0.5088894367218018, 0.48228105902671814, 0.49718204140663147, 0.4812197983264923, 0.4808521866798401, 0.46690621972084045, 0.4666562080383301, 0.4517078399658203, 0.4594177305698395, 0.46344074606895447, 0.46595895290374756, 0.4639020264148712, 0.4433380663394928, 0.4350193738937378, 0.4508714973926544, 0.4467104375362396, 0.4475178122520447, 0.4493016004562378, 0.44325682520866394, 0.45446428656578064, 0.46220120787620544, 0.4523267447948456, 0.44282397627830505, 0.45368343591690063, 0.46931248903274536, 0.47659075260162354, 0.4595166742801666, 0.4521671235561371, 0.4496193826198578, 0.4562598168849945, 0.4489275813102722, 0.44162046909332275, 0.4445870816707611, 0.4617292881011963, 0.485847532749176], "val_accuracy": [0.40400001406669617, 0.46533334255218506, 0.6610000133514404, 0.6959999799728394, 0.7196666598320007, 0.7350000143051147, 0.7446666955947876, 0.7379999756813049, 0.7559999823570251, 0.753333330154419, 0.7713333368301392, 0.7760000228881836, 0.7886666655540466, 0.8003333210945129, 0.7933333516120911, 0.7950000166893005, 0.7873333096504211, 0.7916666865348816, 0.8013333082199097, 0.8080000281333923, 0.8193333148956299, 0.8143333196640015, 0.8143333196640015, 0.815666675567627, 0.8296666741371155, 0.8276666402816772, 0.8296666741371155, 0.8206666707992554, 0.82833331823349, 0.8336666822433472, 0.8376666903495789, 0.8389999866485596, 0.840666651725769, 0.8389999866485596, 0.8446666598320007, 0.8479999899864197, 0.8443333506584167, 0.8503333330154419, 0.8506666421890259, 0.8553333282470703, 0.8583333492279053, 0.8473333120346069, 0.8450000286102295, 0.8506666421890259, 0.8483333587646484, 0.8586666584014893, 0.8536666631698608, 0.8573333621025085, 0.8603333234786987, 0.8516666889190674, 0.8536666631698608, 0.8546666502952576, 0.859666645526886, 0.8576666712760925]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 7, 6, 1, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8545714020729065, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223576068878174, 1.8717570304870605, 1.3939757347106934, 1.0949069261550903, 0.9445321559906006, 0.8400305509567261, 0.7780317068099976, 0.7341380715370178, 0.6941110491752625, 0.6529077887535095, 0.6349550485610962, 0.6197688579559326, 0.5992393493652344, 0.5754861831665039, 0.5616548657417297, 0.5496214032173157, 0.5312427878379822, 0.5178931951522827, 0.5014336109161377, 0.4998229146003723, 0.49170443415641785, 0.47875750064849854, 0.4676511287689209, 0.4631214439868927, 0.4528394937515259, 0.43982192873954773, 0.435951292514801, 0.43296825885772705, 0.4217287003993988, 0.420114129781723, 0.4099068343639374, 0.3984209895133972, 0.39537304639816284, 0.39322009682655334, 0.3861764371395111, 0.37909820675849915, 0.3728847801685333, 0.37122198939323425, 0.3611125648021698, 0.3629348576068878, 0.35940808057785034, 0.34544339776039124, 0.3471985459327698, 0.3372843265533447, 0.3372994065284729, 0.3361404836177826, 0.32223546504974365, 0.31878161430358887, 0.3152117133140564], "accuracy": [0.2793554365634918, 0.4858010709285736, 0.5678246021270752, 0.627129852771759, 0.6623960137367249, 0.700171709060669, 0.7193237543106079, 0.733060359954834, 0.7464007139205933, 0.7625148296356201, 0.7695152759552002, 0.7775723338127136, 0.7794214487075806, 0.798309326171875, 0.7988376617431641, 0.8004226684570312, 0.8119139075279236, 0.8121780753135681, 0.8216879963874817, 0.8175934553146362, 0.8260467648506165, 0.8330471515655518, 0.8356888294219971, 0.8383304476737976, 0.8400475382804871, 0.8436138033866882, 0.8470479249954224, 0.8453308939933777, 0.8520671129226685, 0.8490291833877563, 0.8574824929237366, 0.856689989566803, 0.8625016212463379, 0.8640866279602051, 0.8621054291725159, 0.8688416481018066, 0.86553955078125, 0.8665962219238281, 0.8745211958885193, 0.871879518032074, 0.8765024542808533, 0.8750495314598083, 0.8749174475669861, 0.8861445188522339, 0.8861445188522339, 0.8821820020675659, 0.885219931602478, 0.8881257176399231, 0.8873332738876343], "val_loss": [2.0424301624298096, 1.5233556032180786, 1.0444459915161133, 0.8304601311683655, 0.7410932779312134, 0.682338535785675, 0.6330329775810242, 0.5921480059623718, 0.5665087699890137, 0.5415768027305603, 0.518939733505249, 0.5046581029891968, 0.4948456883430481, 0.4738292694091797, 0.4627280533313751, 0.45599105954170227, 0.4447815716266632, 0.434103399515152, 0.42876315116882324, 0.4253596067428589, 0.42318254709243774, 0.40990322828292847, 0.40293848514556885, 0.4026949107646942, 0.3920292556285858, 0.3915071189403534, 0.3837381899356842, 0.381928414106369, 0.3780762553215027, 0.3733636736869812, 0.37128230929374695, 0.36751610040664673, 0.36109989881515503, 0.36393317580223083, 0.3620978891849518, 0.3533770442008972, 0.3525625765323639, 0.3538020849227905, 0.3468666672706604, 0.3515576124191284, 0.34409305453300476, 0.3445121943950653, 0.33936771750450134, 0.33882445096969604, 0.34077775478363037, 0.33571648597717285, 0.33365923166275024, 0.3368321657180786, 0.33775630593299866], "val_accuracy": [0.5293333530426025, 0.6506666541099548, 0.6886666417121887, 0.7056666612625122, 0.737333357334137, 0.7513333559036255, 0.7703333497047424, 0.7826666831970215, 0.7950000166893005, 0.8013333082199097, 0.8119999766349792, 0.8199999928474426, 0.8259999752044678, 0.8316666483879089, 0.8376666903495789, 0.8383333086967468, 0.8473333120346069, 0.8503333330154419, 0.8516666889190674, 0.8519999980926514, 0.8566666841506958, 0.8569999933242798, 0.8640000224113464, 0.8616666793823242, 0.8669999837875366, 0.8636666536331177, 0.8656666874885559, 0.8686666488647461, 0.8709999918937683, 0.8723333477973938, 0.8730000257492065, 0.875, 0.8726666569709778, 0.8700000047683716, 0.8759999871253967, 0.878000020980835, 0.8733333349227905, 0.871999979019165, 0.8803333044052124, 0.8766666650772095, 0.8766666650772095, 0.8740000128746033, 0.8763333559036255, 0.8813333511352539, 0.8786666393280029, 0.8786666393280029, 0.878000020980835, 0.8809999823570251, 0.8769999742507935]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0], [0, 9], [0], [0], [1], [0], [2], [0]], "fitness": -0.8265714049339294, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5840362310409546, 0.9102486968040466, 0.7106267809867859, 0.5987136363983154, 0.5438767075538635, 0.5150964260101318, 0.49555471539497375, 0.5029730200767517, 0.4815632700920105, 0.5073816776275635, 0.5170477032661438, 0.5139355659484863, 0.5028517842292786, 0.4773973524570465, 0.4782562851905823, 0.4744966924190521, 0.4723244607448578, 0.4549252688884735], "accuracy": [0.4791969358921051, 0.6844538450241089, 0.7383436560630798, 0.7798177003860474, 0.7977809906005859, 0.81112140417099, 0.8165367841720581, 0.8208954930305481, 0.8226125836372375, 0.8231409192085266, 0.8113855719566345, 0.8079513907432556, 0.8207634687423706, 0.8278959393501282, 0.8304054737091064, 0.8273676037788391, 0.8309338092803955, 0.8404437899589539], "val_loss": [0.9998157620429993, 0.6615660786628723, 0.5614731311798096, 0.4776501953601837, 0.46077635884284973, 0.4639805853366852, 0.45880162715911865, 0.4906215965747833, 0.45784831047058105, 0.46983301639556885, 0.5218935608863831, 0.5173764228820801, 0.48391008377075195, 0.5068875551223755, 0.4897007942199707, 0.5266649723052979, 0.4580931067466736, 0.5297552347183228], "val_accuracy": [0.6463333368301392, 0.7490000128746033, 0.7806666493415833, 0.8220000267028809, 0.8309999704360962, 0.8306666612625122, 0.8346666693687439, 0.8386666774749756, 0.840666651725769, 0.8473333120346069, 0.8276666402816772, 0.8366666436195374, 0.8513333201408386, 0.8323333263397217, 0.8429999947547913, 0.8309999704360962, 0.8389999866485596, 0.8399999737739563]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [99, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 4, 9, 3, 2, 6], [0, 0, 3, 4], [99, 91, 45], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 5, 3, 6, 4, 1, 4, 1, 4, 2, 8], [3, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 85, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 10, 6, 4, 3, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), sigma))), alpha))), tf.math.add(tf.math.sqrt(grad), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 5, 2, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 6], [0, 2, 0, 3, 1], [16, 16], [0, 1], [0], [2], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 6, 8, 1, 0, 1, 9, 0, 8], [0, 0, 0, 3, 0, 0, 3, 1, 4, 4], [16, 24, 96, 99, 61, 18]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 12, 7, 5, 2, 2, 1, 1, 0, 13, 7, 6, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.square(tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 35], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [2, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [58], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [2, 3, 3, 6, 8, 1, 4, 1, 3, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 96, 3, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 8, 4, 4, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.subtract(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [64, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 8, 5, 1, 4, 1, 4, 2, 8], [3, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(sigma, tf.math.sqrt(tf.math.square(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha)", "other_info": {"loss": [2.6590417407442944e+17, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08902391046285629, 0.08532558381557465, 0.09338264167308807, 0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [9.273514027688919e+17, 1.9730047165429378e+26, NaN, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.07199999690055847, 0.0820000022649765, 0.07966666668653488, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]