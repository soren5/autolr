[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8537142872810364, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2218451499938965, 1.8645246028900146, 1.3856594562530518, 1.0909045934677124, 0.950382649898529, 0.8401685357093811, 0.7698441743850708, 0.7277123332023621, 0.6905542016029358, 0.6586261987686157, 0.6353514790534973, 0.6176638007164001, 0.5962851643562317, 0.581272542476654, 0.5599524974822998, 0.5411444306373596, 0.5325935482978821, 0.5267168283462524, 0.5130001902580261, 0.4938066303730011, 0.4857412874698639, 0.4716253876686096, 0.47060567140579224, 0.465259850025177, 0.45542582869529724, 0.4461502134799957, 0.43319588899612427, 0.4302683174610138, 0.4236842691898346, 0.4163713753223419, 0.41208863258361816, 0.4059769809246063, 0.4009867310523987, 0.3966013789176941, 0.3863762617111206, 0.3878859579563141, 0.3751831650733948, 0.3656444847583771, 0.3579896092414856, 0.36057209968566895, 0.3581099808216095, 0.3517606854438782, 0.33730801939964294, 0.34003403782844543, 0.3304295241832733, 0.3313722610473633, 0.3279683589935303, 0.3158950209617615, 0.3174813389778137, 0.30865657329559326, 0.3094949722290039, 0.3030453622341156], "accuracy": [0.28899750113487244, 0.49227315187454224, 0.5625412464141846, 0.6164311170578003, 0.6576409935951233, 0.7034738063812256, 0.7248712182044983, 0.7320036888122559, 0.748249888420105, 0.763439416885376, 0.772288978099823, 0.7745344042778015, 0.7841764688491821, 0.7909126877784729, 0.8006868362426758, 0.7975168228149414, 0.8061022162437439, 0.8075551390647888, 0.8136309385299683, 0.8208954930305481, 0.8257825970649719, 0.8310658931732178, 0.8360850811004639, 0.8315942287445068, 0.8432175517082214, 0.8409721255302429, 0.8442742228507996, 0.8455950617790222, 0.8518029451370239, 0.8519350290298462, 0.8488970994949341, 0.8569541573524475, 0.8561616539955139, 0.8573504090309143, 0.863029956817627, 0.8621054291725159, 0.8652753829956055, 0.8698983192443848, 0.8709549307823181, 0.8687095642089844, 0.8710870146751404, 0.8712190985679626, 0.8837670087814331, 0.8742570281028748, 0.8799365758895874, 0.8835028409957886, 0.8825782537460327, 0.8885219693183899, 0.8835028409957886, 0.8891823887825012, 0.8893144726753235, 0.8924844861030579], "val_loss": [2.034196376800537, 1.4985034465789795, 1.0205938816070557, 0.8118657469749451, 0.7268791794776917, 0.6727982759475708, 0.620599091053009, 0.5888891220092773, 0.5646716356277466, 0.5426409244537354, 0.5292921662330627, 0.5068137049674988, 0.4976350963115692, 0.48228803277015686, 0.47211238741874695, 0.4612070322036743, 0.45789510011672974, 0.4482515752315521, 0.44539639353752136, 0.43381384015083313, 0.4320699870586395, 0.4189542531967163, 0.41367971897125244, 0.4098831117153168, 0.4086296260356903, 0.40040501952171326, 0.3960745334625244, 0.3973426818847656, 0.38992106914520264, 0.3881230354309082, 0.3806738555431366, 0.38836514949798584, 0.37627115845680237, 0.3775414526462555, 0.372611403465271, 0.3711977005004883, 0.36844271421432495, 0.3718748688697815, 0.36953654885292053, 0.35996922850608826, 0.3601233661174774, 0.3580431044101715, 0.35681071877479553, 0.3573355972766876, 0.35977473855018616, 0.3513443171977997, 0.35111433267593384, 0.3466048240661621, 0.34866487979888916, 0.34582027792930603, 0.34431204199790955, 0.34169548749923706], "val_accuracy": [0.5536666512489319, 0.6766666769981384, 0.6963333487510681, 0.7073333263397217, 0.7363333106040955, 0.7609999775886536, 0.7730000019073486, 0.7856666445732117, 0.7986666560173035, 0.8023333549499512, 0.8086666464805603, 0.8140000104904175, 0.8209999799728394, 0.8273333311080933, 0.8286666870117188, 0.8316666483879089, 0.8346666693687439, 0.8413333296775818, 0.8349999785423279, 0.8496666550636292, 0.8483333587646484, 0.8550000190734863, 0.8543333411216736, 0.8569999933242798, 0.8550000190734863, 0.8583333492279053, 0.8616666793823242, 0.8586666584014893, 0.8669999837875366, 0.8656666874885559, 0.8669999837875366, 0.8633333444595337, 0.8696666955947876, 0.8669999837875366, 0.8703333139419556, 0.8700000047683716, 0.8759999871253967, 0.8693333268165588, 0.8683333396911621, 0.875333309173584, 0.8759999871253967, 0.8793333172798157, 0.8759999871253967, 0.875333309173584, 0.8726666569709778, 0.8769999742507935, 0.8799999952316284, 0.8790000081062317, 0.8756666779518127, 0.878000020980835, 0.8790000081062317, 0.8790000081062317]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 3, 7, 1, 4, 3, 4, 8, 9], [0, 2, 3, 3, 3, 2], [0, 34], [0, 0, 1, 0, 1, 0, 0, 1, 0], [0, 7, 6, 8, 3, 9], [0, 2, 1], [0, 41], [0, 1], [0], [1], [0]], "fitness": -0.8408571481704712, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), tf.math.subtract(tf.math.pow(grad, tf.math.multiply(tf.math.pow(grad, grad), beta)), tf.math.sqrt(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(beta, tf.math.sqrt(tf.math.multiply(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293729543685913, 2.1929924488067627, 1.7751704454421997, 1.336798906326294, 1.0803954601287842, 0.930000364780426, 0.8367993831634521, 0.8007771968841553, 0.773958683013916, 0.743097722530365, 0.7168685793876648, 0.6845499277114868, 0.6667579412460327, 0.6362307071685791, 0.6182982325553894, 0.5988192558288574, 0.6048076152801514, 0.5794099569320679, 0.564623236656189, 0.5564461946487427, 0.551328182220459, 0.5500301122665405, 0.5348686575889587, 0.5217332243919373, 0.4951404631137848, 0.5017311573028564, 0.5008276104927063, 0.4759560227394104, 0.4798868000507355, 0.46505796909332275, 0.45511430501937866, 0.4425928592681885, 0.4502286911010742, 0.433542937040329, 0.4240635633468628, 0.4264463782310486, 0.40918466448783875, 0.39959272742271423, 0.39418017864227295, 0.39169687032699585, 0.37543389201164246, 0.3781433403491974, 0.3668600618839264, 0.3550940454006195, 0.3646707236766815, 0.3397383689880371, 0.338966429233551, 0.33875831961631775, 0.33679476380348206, 0.3399655222892761, 0.3196777403354645, 0.3377893269062042, 0.3232872188091278, 0.3148448169231415], "accuracy": [0.12930920720100403, 0.3205653131008148, 0.44947826862335205, 0.5460308790206909, 0.6392814517021179, 0.6667547225952148, 0.6910579800605774, 0.7087571024894714, 0.698718786239624, 0.7154933214187622, 0.7279091477394104, 0.7448157668113708, 0.7429665923118591, 0.7557786107063293, 0.7652885913848877, 0.7707040309906006, 0.7640998363494873, 0.78113853931427, 0.7843085527420044, 0.7901201844215393, 0.7804781198501587, 0.7918372750282288, 0.7932901978492737, 0.7960638999938965, 0.8070268034934998, 0.8164047002792358, 0.8142913579940796, 0.8157442808151245, 0.8131026029586792, 0.8166688680648804, 0.8259146809577942, 0.8318583965301514, 0.8327829837799072, 0.8305375576019287, 0.839519202709198, 0.8376700282096863, 0.8445383906364441, 0.845859169960022, 0.8491612672805786, 0.8531237840652466, 0.8561616539955139, 0.8541803956031799, 0.8582749962806702, 0.8631620407104492, 0.8632941246032715, 0.8697662353515625, 0.8681812286376953, 0.8698983192443848, 0.8704266548156738, 0.8692378997802734, 0.8749174475669861, 0.8716153502464294, 0.876370370388031, 0.8833707571029663], "val_loss": [2.245915412902832, 2.0236785411834717, 1.1442108154296875, 0.8841643929481506, 0.759087085723877, 0.7234843969345093, 0.6905406713485718, 0.6806350946426392, 0.6462953686714172, 0.6278454661369324, 0.583462119102478, 0.5701169967651367, 0.5574098229408264, 0.5312149524688721, 0.521319568157196, 0.5241420865058899, 0.5113546848297119, 0.4936593472957611, 0.49497148394584656, 0.48329517245292664, 0.4753773510456085, 0.4757412075996399, 0.4543702006340027, 0.45659172534942627, 0.445807546377182, 0.4539124071598053, 0.4460044801235199, 0.4407787621021271, 0.4442678987979889, 0.4453013837337494, 0.43757164478302, 0.43316397070884705, 0.42386743426322937, 0.42268359661102295, 0.4252139925956726, 0.4118731617927551, 0.4080139100551605, 0.4110257923603058, 0.4189191162586212, 0.41807496547698975, 0.4046236276626587, 0.39728906750679016, 0.4013689458370209, 0.4051525890827179, 0.4038776159286499, 0.40431803464889526, 0.4022458791732788, 0.3952820599079132, 0.3948945999145508, 0.4074307084083557, 0.4190734922885895, 0.41795289516448975, 0.4233543276786804, 0.4179411232471466], "val_accuracy": [0.43666666746139526, 0.4300000071525574, 0.6483333110809326, 0.6946666836738586, 0.718999981880188, 0.734333336353302, 0.7423333525657654, 0.7483333349227905, 0.7490000128746033, 0.765666663646698, 0.7789999842643738, 0.7736666798591614, 0.7796666622161865, 0.781333327293396, 0.7923333048820496, 0.7889999747276306, 0.8040000200271606, 0.8076666593551636, 0.7983333468437195, 0.8023333549499512, 0.8053333163261414, 0.8136666417121887, 0.8233333230018616, 0.8206666707992554, 0.828000009059906, 0.8289999961853027, 0.8273333311080933, 0.8296666741371155, 0.8240000009536743, 0.8326666951179504, 0.8373333215713501, 0.8396666646003723, 0.846666693687439, 0.8410000205039978, 0.8403333425521851, 0.8493333458900452, 0.8553333282470703, 0.8500000238418579, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8606666922569275, 0.8579999804496765, 0.8583333492279053, 0.8603333234786987, 0.8633333444595337, 0.8579999804496765, 0.8653333187103271, 0.8683333396911621, 0.8633333444595337, 0.8600000143051147, 0.8573333621025085, 0.862666666507721, 0.8669999837875366]}, "mapping_values": [1, 10, 5, 5, 3, 15, 9, 6, 2, 9, 6, 3, 2, 2, 1, 1, 0], "tree_depth": 15}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 1, 1], [0, 6, 7], [0, 6, 6], [0], [1], [0], [2], [0]], "fitness": -0.8151428699493408, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5878355503082275, 0.8976741433143616, 0.6944128274917603, 0.6380099058151245, 0.6031649708747864, 0.5978131890296936, 0.6345371603965759, 0.5653499364852905, 0.5593894720077515, 0.5412594676017761, 0.533511757850647, 0.526977002620697, 0.5081115961074829, 0.48838382959365845, 0.5097830891609192, 0.5241245031356812], "accuracy": [0.4563465714454651, 0.6900013089179993, 0.7445515990257263, 0.7609298825263977, 0.7802139520645142, 0.7880068421363831, 0.7667415142059326, 0.7996301651000977, 0.8006868362426758, 0.8123101592063904, 0.8018755912780762, 0.8222163319587708, 0.8186501264572144, 0.8325188159942627, 0.821820080280304, 0.8193105459213257], "val_loss": [0.8853160738945007, 0.644073486328125, 0.5519289374351501, 0.528788149356842, 0.526414692401886, 0.5807552337646484, 0.5632216334342957, 0.5340100526809692, 0.5883086323738098, 0.5214682221412659, 0.5489078760147095, 0.5462824702262878, 0.5657578110694885, 0.5426770448684692, 0.5801956653594971, 0.6058429479598999], "val_accuracy": [0.6899999976158142, 0.762666642665863, 0.7886666655540466, 0.8003333210945129, 0.8176666498184204, 0.7996666431427002, 0.824999988079071, 0.8240000009536743, 0.8203333616256714, 0.8286666870117188, 0.847000002861023, 0.8273333311080933, 0.8316666483879089, 0.8349999785423279, 0.8263333439826965, 0.8346666693687439]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 0, 3, 5], [0, 2, 3, 3], [53, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 3, 8, 1, 4, 1, 4, 2, 8, 0, 7, 4], [0, 0, 0, 3, 0, 0, 3, 4, 1, 0, 6, 0], [16, 99, 96, 99, 61, 78, 65]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1, 26, 14, 12, 7], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.negative(tf.math.add(sigma, grad)))))), alpha)), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 8, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 3, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 15, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 7, 4, 3, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.multiply(tf.math.sqrt(beta), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [39, 39, 98], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 9, 0, 5, 1, 4, 9], [0, 2, 0, 2], [16, 16, 18], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 6, 6, 5, 6, 0, 6, 4, 9, 0, 2, 4, 3, 2, 1, 0, 3], [0, 0, 6, 6, 2, 4, 3, 2, 3, 1, 4], [0, 83, 45], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 6], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0, 0], [0, 73, 2, 98, 68, 47]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 26, 16, 10, 3, 23, 12, 11, 6], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(grad, tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.subtract(grad, sigma)), tf.math.negative(beta)), sigma)))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.subtract(sigma, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.sqrt(sigma), alpha), beta)), tf.math.divide_no_nan(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 2, 2], [39, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 5, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 51, 99, 61, 1]], "fitness": -0.09971428662538528, "mapping_values": [1, 2, 1, 1, 0, 10, 6, 4, 2, 2, 1, 1, 1, 16, 9, 7, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))))))", "other_info": {"loss": [2.3110294342041016, 2.312331438064575, 2.3117029666900635, 2.3135933876037598, 2.3148560523986816, 2.3145973682403564, 2.315856456756592, 2.3154048919677734], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09879804402589798, 0.1002509593963623, 0.09747721254825592, 0.09628847241401672, 0.09311848133802414, 0.09615638852119446], "val_loss": [2.30924391746521, 2.3093504905700684, 2.3094184398651123, 2.309481382369995, 2.3095498085021973, 2.309622287750244, 2.309696674346924, 2.3097736835479736], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]