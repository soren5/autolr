[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223330497741699, 1.8670156002044678, 1.3935511112213135, 1.1012579202651978, 0.9477801322937012, 0.8379126191139221, 0.7764281630516052, 0.7235901951789856, 0.6839449405670166, 0.6511124968528748, 0.6340097188949585, 0.6069210171699524, 0.5817078948020935, 0.5635776519775391, 0.5524153113365173, 0.5367791652679443, 0.5212588906288147, 0.5178380608558655, 0.5019086003303528, 0.4879888892173767, 0.4858485460281372, 0.4747111201286316, 0.45951735973358154, 0.4532293975353241, 0.4492609202861786, 0.4330301284790039, 0.4310648441314697, 0.42051371932029724, 0.41327017545700073, 0.4060419201850891, 0.3997148871421814, 0.39729252457618713, 0.3869434893131256, 0.3869549036026001, 0.38186177611351013, 0.3692651391029358, 0.36346086859703064, 0.3634459972381592, 0.3600703179836273, 0.3489670753479004, 0.3429599404335022, 0.34309908747673035, 0.3401198089122772, 0.3303268253803253, 0.3301240801811218, 0.3276282846927643, 0.3180643618106842, 0.3136589229106903, 0.3090694546699524, 0.3071834146976471, 0.3011736273765564, 0.30332496762275696, 0.29351481795310974, 0.2937680780887604], "accuracy": [0.26680755615234375, 0.49451854825019836, 0.5679566860198975, 0.6209219098091125, 0.6646413803100586, 0.7078325152397156, 0.7234182953834534, 0.7387399077415466, 0.7541936039924622, 0.7672698497772217, 0.7677981853485107, 0.7820631265640259, 0.7897239327430725, 0.7977809906005859, 0.798309326171875, 0.8082155585289001, 0.8138951063156128, 0.8094043135643005, 0.822348415851593, 0.8269713521003723, 0.8208954930305481, 0.8310658931732178, 0.8350284099578857, 0.8367455005645752, 0.8368775844573975, 0.8444063067436218, 0.843481719493866, 0.850350022315979, 0.8502179384231567, 0.8570862412452698, 0.857218325138092, 0.8574824929237366, 0.8610487580299377, 0.8610487580299377, 0.8607845902442932, 0.8658037185668945, 0.8701624870300293, 0.8689737319946289, 0.8708229064941406, 0.8792761564254761, 0.8798044919967651, 0.8765024542808533, 0.8765024542808533, 0.8824461698532104, 0.880729079246521, 0.8844274282455444, 0.8838990926742554, 0.8887861371040344, 0.8878615498542786, 0.8903711438179016, 0.8924844861030579, 0.8912957310676575, 0.8976356983184814, 0.8960506916046143], "val_loss": [2.040694236755371, 1.5166728496551514, 1.045767068862915, 0.8421168327331543, 0.7569165229797363, 0.7011509537696838, 0.6573318839073181, 0.6179470419883728, 0.5908101201057434, 0.5737177133560181, 0.5541383624076843, 0.5365487933158875, 0.518412172794342, 0.5104728937149048, 0.49868762493133545, 0.485697478055954, 0.48461878299713135, 0.46694132685661316, 0.459992378950119, 0.44818419218063354, 0.45110249519348145, 0.4507465958595276, 0.4339507520198822, 0.4287099242210388, 0.42590731382369995, 0.4119842052459717, 0.4104468524456024, 0.4069807529449463, 0.40372517704963684, 0.3985708951950073, 0.3967111110687256, 0.39305025339126587, 0.39346253871917725, 0.3906964063644409, 0.3815464675426483, 0.3792845904827118, 0.37928369641304016, 0.3762374818325043, 0.37582898139953613, 0.37387406826019287, 0.3717586398124695, 0.36671704053878784, 0.363382488489151, 0.36401286721229553, 0.3619881868362427, 0.35666540265083313, 0.3588123917579651, 0.3541429042816162, 0.35232576727867126, 0.35342442989349365, 0.3524846136569977, 0.34847813844680786, 0.34814298152923584, 0.35015836358070374], "val_accuracy": [0.5323333144187927, 0.6446666717529297, 0.6756666898727417, 0.7043333053588867, 0.7239999771118164, 0.7493333220481873, 0.753000020980835, 0.7706666588783264, 0.7820000052452087, 0.7873333096504211, 0.7956666946411133, 0.800000011920929, 0.8136666417121887, 0.812666654586792, 0.8199999928474426, 0.824999988079071, 0.8246666789054871, 0.8326666951179504, 0.8303333520889282, 0.8376666903495789, 0.8333333134651184, 0.8343333601951599, 0.8446666598320007, 0.843666672706604, 0.846666693687439, 0.8513333201408386, 0.8546666502952576, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8529999852180481, 0.859333336353302, 0.8546666502952576, 0.8569999933242798, 0.8606666922569275, 0.8633333444595337, 0.8643333315849304, 0.8629999756813049, 0.8576666712760925, 0.8703333139419556, 0.8640000224113464, 0.8643333315849304, 0.8676666617393494, 0.8663333058357239, 0.8713333606719971, 0.871999979019165, 0.8693333268165588, 0.8693333268165588, 0.878000020980835, 0.8756666779518127, 0.8706666827201843, 0.8756666779518127, 0.8769999742507935, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8597142696380615, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.225179433822632, 1.8759961128234863, 1.3957844972610474, 1.1001371145248413, 0.9431736469268799, 0.8365930914878845, 0.7766515016555786, 0.7406130433082581, 0.6954724192619324, 0.6646155714988708, 0.6487274765968323, 0.6156390309333801, 0.5997101068496704, 0.5864208340644836, 0.5610564947128296, 0.5484692454338074, 0.5352340340614319, 0.5212206840515137, 0.5167590975761414, 0.5026770830154419, 0.4890923798084259, 0.4789547026157379, 0.46511563658714294, 0.45762717723846436, 0.44143107533454895, 0.443754106760025, 0.4415453374385834, 0.4281487762928009, 0.41630858182907104, 0.4118136167526245, 0.4111987352371216, 0.40914592146873474, 0.39607104659080505, 0.3862207531929016, 0.37986892461776733, 0.3725537955760956, 0.37705135345458984, 0.3684530258178711, 0.36186161637306213, 0.35386717319488525, 0.35130012035369873, 0.33967190980911255, 0.3390630781650543, 0.3342876136302948, 0.3356918692588806, 0.32768896222114563, 0.32187458872795105, 0.32821232080459595, 0.315669983625412, 0.31579408049583435, 0.3013937175273895, 0.30341973900794983, 0.2940806448459625, 0.29786503314971924, 0.291591614484787, 0.28904128074645996, 0.2813880741596222, 0.27721503376960754, 0.2744806110858917, 0.2717997133731842], "accuracy": [0.2735437750816345, 0.4823669195175171, 0.5584467053413391, 0.6144498586654663, 0.6606789231300354, 0.7037379741668701, 0.7207766771316528, 0.7345132827758789, 0.7510236501693726, 0.7552502751350403, 0.7621186375617981, 0.7795535326004028, 0.7878747582435608, 0.7881389260292053, 0.7976489067077637, 0.8012151718139648, 0.809140145778656, 0.81112140417099, 0.8128384351730347, 0.8226125836372375, 0.8249900937080383, 0.8277638554573059, 0.8355567455291748, 0.8411042094230652, 0.8413683772087097, 0.842028796672821, 0.8471800088882446, 0.8494254350662231, 0.8531237840652466, 0.8532558679580688, 0.8555012345314026, 0.8602562546730042, 0.8584070801734924, 0.8626337051391602, 0.8650112152099609, 0.8668603897094727, 0.8625016212463379, 0.8683133125305176, 0.8698983192443848, 0.8776912093162537, 0.878879964351654, 0.8771628737449646, 0.8803328275680542, 0.8829745054244995, 0.8816536664962769, 0.8817857503890991, 0.8865407705307007, 0.8849557638168335, 0.8908994793891907, 0.8882578015327454, 0.8957865834236145, 0.8910315632820129, 0.8930128216743469, 0.8934090733528137, 0.895918607711792, 0.897899866104126, 0.9026548862457275, 0.8988244533538818, 0.9021265506744385, 0.9043719172477722], "val_loss": [2.045229911804199, 1.5237764120101929, 1.0530996322631836, 0.8467233180999756, 0.7624391317367554, 0.7068403959274292, 0.6619373559951782, 0.6320293545722961, 0.5984286069869995, 0.5801905989646912, 0.5645609498023987, 0.5538241267204285, 0.537193775177002, 0.5266122817993164, 0.516399621963501, 0.5007752776145935, 0.49197453260421753, 0.4845166802406311, 0.4765082895755768, 0.4659656882286072, 0.4669097065925598, 0.4588148593902588, 0.4529239237308502, 0.4501035213470459, 0.4384769797325134, 0.4359477460384369, 0.43563711643218994, 0.4308028221130371, 0.4236876666545868, 0.4254966676235199, 0.4206080436706543, 0.41801732778549194, 0.4161187410354614, 0.4120231866836548, 0.4083569347858429, 0.420119047164917, 0.40228360891342163, 0.4051796495914459, 0.4014132618904114, 0.3948608338832855, 0.39432886242866516, 0.3956502377986908, 0.39173513650894165, 0.3944740295410156, 0.39457160234451294, 0.3887924253940582, 0.3852827250957489, 0.38523995876312256, 0.3849655091762543, 0.3860091269016266, 0.3822441101074219, 0.3814985454082489, 0.3825458288192749, 0.3845944404602051, 0.3776639699935913, 0.3785332143306732, 0.3820576071739197, 0.37784749269485474, 0.3809548020362854, 0.37863489985466003], "val_accuracy": [0.5036666393280029, 0.6506666541099548, 0.6743333339691162, 0.7043333053588867, 0.7263333201408386, 0.737666666507721, 0.7509999871253967, 0.7636666893959045, 0.7786666750907898, 0.7903333306312561, 0.7950000166893005, 0.793666660785675, 0.8059999942779541, 0.8100000023841858, 0.8136666417121887, 0.8243333101272583, 0.824999988079071, 0.8246666789054871, 0.8263333439826965, 0.8333333134651184, 0.8346666693687439, 0.8366666436195374, 0.8413333296775818, 0.8386666774749756, 0.8446666598320007, 0.8443333506584167, 0.8456666469573975, 0.846666693687439, 0.846666693687439, 0.8446666598320007, 0.8446666598320007, 0.8473333120346069, 0.8533333539962769, 0.8519999980926514, 0.8519999980926514, 0.8453333377838135, 0.8546666502952576, 0.8510000109672546, 0.8519999980926514, 0.8560000061988831, 0.8566666841506958, 0.8546666502952576, 0.8539999723434448, 0.8556666374206543, 0.8566666841506958, 0.8576666712760925, 0.8556666374206543, 0.8569999933242798, 0.8566666841506958, 0.859666645526886, 0.8636666536331177, 0.862333357334137, 0.8616666793823242, 0.8643333315849304, 0.8663333058357239, 0.859000027179718, 0.8619999885559082, 0.8613333106040955, 0.8633333444595337, 0.8646666407585144]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.854285717010498, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2922821044921875, 2.184858560562134, 1.7640787363052368, 1.347294569015503, 1.0868759155273438, 0.9146378636360168, 0.8622654676437378, 0.8115123510360718, 0.7651228904724121, 0.7398486733436584, 0.7026841640472412, 0.673207700252533, 0.6481760144233704, 0.6295967102050781, 0.6070942282676697, 0.5995291471481323, 0.5776013731956482, 0.5702533721923828, 0.5460951924324036, 0.5386068224906921, 0.5266883969306946, 0.517450213432312, 0.5066196322441101, 0.48775845766067505, 0.48720210790634155, 0.4759180545806885, 0.4635542333126068, 0.4484996795654297, 0.44661492109298706, 0.4303491711616516, 0.4258882701396942, 0.43148738145828247, 0.4240168631076813, 0.39983126521110535, 0.41329917311668396, 0.39047273993492126, 0.37672868371009827, 0.3758617043495178, 0.3741937577724457, 0.36594974994659424, 0.3730751574039459, 0.34791189432144165, 0.35157522559165955, 0.344807893037796, 0.3346612751483917, 0.3376094698905945, 0.3229318857192993, 0.32918456196784973, 0.32304930686950684, 0.3195685148239136, 0.31124386191368103, 0.30930495262145996, 0.3121657967567444, 0.2960714101791382, 0.3003959059715271], "accuracy": [0.13221503794193268, 0.3323206901550293, 0.43111875653266907, 0.5435213446617126, 0.6339981555938721, 0.6774534583091736, 0.6868313550949097, 0.7033417224884033, 0.707040011882782, 0.7223616242408752, 0.7321357727050781, 0.7437590956687927, 0.754589855670929, 0.7648923397064209, 0.7732135653495789, 0.7660810947418213, 0.7798177003860474, 0.7841764688491821, 0.7910447716712952, 0.7960638999938965, 0.8045172095298767, 0.8034605979919434, 0.8049134612083435, 0.81112140417099, 0.8211596608161926, 0.8222163319587708, 0.8208954930305481, 0.8302733898162842, 0.8323867321014404, 0.8347642421722412, 0.8399154543876648, 0.8391229510307312, 0.8379341959953308, 0.8471800088882446, 0.8467837572097778, 0.8515387773513794, 0.8588033318519592, 0.8564258217811584, 0.8605204224586487, 0.8659358024597168, 0.8589354157447815, 0.8664641380310059, 0.8651432991027832, 0.8685774803161621, 0.870030403137207, 0.8762382864952087, 0.8768987059593201, 0.8721436858177185, 0.878351628780365, 0.8794082403182983, 0.8749174475669861, 0.8786157965660095, 0.8775591254234314, 0.8828424215316772, 0.8828424215316772], "val_loss": [2.246352195739746, 2.013247489929199, 1.134523630142212, 0.9092949032783508, 0.7658098936080933, 0.7173911333084106, 0.6835100650787354, 0.6411647200584412, 0.6437435150146484, 0.6125539541244507, 0.572021484375, 0.5515628457069397, 0.540901780128479, 0.5360642075538635, 0.5290138721466064, 0.5140205025672913, 0.5100128054618835, 0.4953728914260864, 0.4918356239795685, 0.4710887372493744, 0.4754626750946045, 0.46249398589134216, 0.46109920740127563, 0.4559548795223236, 0.45452946424484253, 0.4413198232650757, 0.43161746859550476, 0.4274505078792572, 0.42929255962371826, 0.42239388823509216, 0.42228075861930847, 0.4184853136539459, 0.421397864818573, 0.4226659834384918, 0.4151378870010376, 0.41900378465652466, 0.43418169021606445, 0.42026472091674805, 0.4192639887332916, 0.4218793511390686, 0.42580148577690125, 0.41373273730278015, 0.41098088026046753, 0.420625239610672, 0.4345020353794098, 0.4297446012496948, 0.41978752613067627, 0.4217756390571594, 0.4374196231365204, 0.40639254450798035, 0.39540666341781616, 0.4121779799461365, 0.43467989563941956, 0.42221206426620483, 0.4133960008621216], "val_accuracy": [0.42133334279060364, 0.45899999141693115, 0.6486666798591614, 0.6826666593551636, 0.7080000042915344, 0.7213333249092102, 0.7443333268165588, 0.7396666407585144, 0.7526666522026062, 0.7556666731834412, 0.7736666798591614, 0.7803333401679993, 0.7850000262260437, 0.7883333563804626, 0.7919999957084656, 0.8016666769981384, 0.8006666898727417, 0.8083333373069763, 0.8176666498184204, 0.8236666917800903, 0.8190000057220459, 0.8326666951179504, 0.8263333439826965, 0.8339999914169312, 0.8379999995231628, 0.8453333377838135, 0.847000002861023, 0.8453333377838135, 0.847000002861023, 0.8526666760444641, 0.8526666760444641, 0.8569999933242798, 0.8583333492279053, 0.8533333539962769, 0.8566666841506958, 0.8550000190734863, 0.8610000014305115, 0.8583333492279053, 0.8573333621025085, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8613333106040955, 0.8653333187103271, 0.8643333315849304, 0.8653333187103271, 0.8679999709129333, 0.8633333444595337, 0.8709999918937683, 0.8736666440963745, 0.8690000176429749, 0.8733333349227905, 0.871666669845581, 0.8723333477973938, 0.8726666569709778]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 0, 0, 0, 1, 0], [0, 4, 4, 9, 7, 9], [0, 4], [0, 50, 37], [1], [0], [2], [0]], "fitness": -0.8308571577072144, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6506688594818115, 0.906714916229248, 0.739018440246582, 0.6706901788711548, 0.6010700464248657, 0.5642439723014832, 0.5335187315940857, 0.5085189938545227, 0.4961143732070923, 0.4830227494239807, 0.5027379989624023, 0.4561566412448883, 0.47108376026153564, 0.46808379888534546, 0.4467526376247406, 0.4555906653404236, 0.5115371346473694, 0.48437511920928955], "accuracy": [0.448949933052063, 0.6827367544174194, 0.7325320243835449, 0.750231146812439, 0.7795535326004028, 0.7946110367774963, 0.8026680946350098, 0.8162726163864136, 0.8201030492782593, 0.8189142942428589, 0.826310932636261, 0.8251221776008606, 0.8339717388153076, 0.8325188159942627, 0.8446704745292664, 0.8391229510307312, 0.8215559124946594, 0.8330471515655518], "val_loss": [0.9159376621246338, 0.6896714568138123, 0.6025843024253845, 0.555614709854126, 0.5409968495368958, 0.5435510873794556, 0.4845608174800873, 0.4913783371448517, 0.4998818337917328, 0.5348352789878845, 0.5043289661407471, 0.49380233883857727, 0.5090654492378235, 0.500399112701416, 0.5690735578536987, 0.6143208742141724, 0.5389301180839539, 0.5517932176589966], "val_accuracy": [0.6743333339691162, 0.7453333139419556, 0.7746666669845581, 0.7943333387374878, 0.8083333373069763, 0.809333324432373, 0.8286666870117188, 0.8286666870117188, 0.828000009059906, 0.8346666693687439, 0.840666651725769, 0.8320000171661377, 0.8486666679382324, 0.8349999785423279, 0.8483333587646484, 0.8326666951179504, 0.8393333554267883, 0.8366666436195374]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 8, 6, 2, 3, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [4, 1, 3, 1, 3], [0, 0, 0, 2, 2], [83, 37, 27], [1, 0, 1, 1], [0, 2], [0, 2, 0, 3], [0], [0, 0, 0, 1, 0, 0, 1], [0, 1, 8, 4, 9], [0, 7], [0, 14], [1, 0, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 1, 3, 7], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 3, 1, 0, 1, 1, 7, 5, 2, 2, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 2, 3, 2, 3, 5, 0, 9], [0, 0, 1, 1, 2], [48, 39, 20], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 53], [0, 1], [0], [0], [99], [0, 1], [0], [6], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 8, 4, 3, 1, 0, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09470347315073013, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [1, 1, 0, 2], [9, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 4, 3, 1, 3, 5], [0, 2, 0, 3, 2], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 1, 8, 1, 4, 1, 4, 2, 2], [0, 0, 4, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad)", "other_info": {"loss": [6875177811968.0, 7624751841280.0, 7698617729024.0, 7684178837504.0, 7529773400064.0, 7524931076096.0], "accuracy": [0.09008057415485382, 0.09259014576673508, 0.08981640636920929, 0.08809932321310043, 0.09021265059709549, 0.09325055778026581], "val_loss": [7029639348224.0, 7029640396800.0, 7029640396800.0, 7029640396800.0, 7029640396800.0, 7029639348224.0], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}, "mapping_values": [1, 9, 5, 4, 1, 11, 6, 5, 2, 2, 1, 1, 1, 5, 2, 3, 2], "tree_depth": 13}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [4, 1, 3, 1, 3], [0, 0, 1, 2, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 2, 2, 2, 6, 7, 9], [0, 2, 0, 0, 4], [0, 46, 82], [0, 1], [0], [0], [89], [0, 1], [0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 9, 4, 5, 2, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha)), tf.math.subtract(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), tf.math.divide_no_nan(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3110620975494385, 2.31097412109375, 2.3108065128326416, 2.3101882934570312, 2.309690475463867, 2.3097281455993652], "accuracy": [0.09179764986038208, 0.09549596905708313, 0.08796724677085876, 0.09087307006120682, 0.09285431355237961, 0.09153348207473755], "val_loss": [2.308529853820801, 2.308529853820801, 2.308529853820801, 2.308529853820801, 2.308529853820801, 2.308529853820801], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}]