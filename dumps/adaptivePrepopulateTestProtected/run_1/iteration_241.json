[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8625714182853699, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2219247817993164, 1.8661103248596191, 1.393363356590271, 1.0922890901565552, 0.9271172285079956, 0.8337584137916565, 0.767146646976471, 0.7201709747314453, 0.6860029697418213, 0.6554911136627197, 0.6346179842948914, 0.6033398509025574, 0.5896105766296387, 0.5695788264274597, 0.5547991991043091, 0.5406996011734009, 0.5258976221084595, 0.516406238079071, 0.5021156668663025, 0.49674952030181885, 0.48574626445770264, 0.47471854090690613, 0.46269872784614563, 0.46010473370552063, 0.4467296600341797, 0.43914294242858887, 0.43184882402420044, 0.430541455745697, 0.42191535234451294, 0.41326904296875, 0.41213458776474, 0.40177708864212036, 0.3926713466644287, 0.3878413140773773, 0.3802458345890045, 0.3823016583919525, 0.3691284954547882, 0.36769527196884155, 0.36522576212882996, 0.3570917546749115, 0.34597137570381165, 0.3486984372138977, 0.3496150076389313, 0.3385234773159027, 0.33441030979156494, 0.3217815160751343, 0.32048487663269043, 0.314201682806015, 0.32031384110450745, 0.3103567063808441, 0.30816370248794556, 0.2939551770687103, 0.300078809261322, 0.2878035306930542, 0.2865791618824005, 0.28700533509254456, 0.2864739000797272, 0.28658899664878845, 0.2765103280544281, 0.2691259980201721, 0.2660544216632843, 0.2615463137626648, 0.25846248865127563, 0.259427011013031, 0.2572225332260132, 0.24728627502918243, 0.24790389835834503, 0.24454449117183685], "accuracy": [0.2879408299922943, 0.4846123456954956, 0.570202112197876, 0.6155065298080444, 0.6741513609886169, 0.6968696117401123, 0.7235503792762756, 0.7417778372764587, 0.7512878179550171, 0.7602694630622864, 0.7633073329925537, 0.7819310426712036, 0.7864218950271606, 0.7913089394569397, 0.7935543656349182, 0.802271842956543, 0.8068947196006775, 0.8099326491355896, 0.8162726163864136, 0.8198388814926147, 0.8231409192085266, 0.8294808864593506, 0.8317263126373291, 0.835160493850708, 0.8409721255302429, 0.8372738361358643, 0.8466516733169556, 0.8459912538528442, 0.8481045961380005, 0.8519350290298462, 0.8507462739944458, 0.8518029451370239, 0.8594637513160706, 0.8599920868873596, 0.8648791313171387, 0.8625016212463379, 0.867520809173584, 0.8665962219238281, 0.8687095642089844, 0.8729361891746521, 0.8717474341392517, 0.8759741187095642, 0.8761062026023865, 0.8761062026023865, 0.8813894987106323, 0.8815215826034546, 0.8887861371040344, 0.8874653577804565, 0.8837670087814331, 0.8919561505317688, 0.8883898854255676, 0.8918240666389465, 0.889578640460968, 0.8976356983184814, 0.8972394466400146, 0.9009377956390381, 0.8947299122810364, 0.8980319499969482, 0.8948619961738586, 0.9030511379241943, 0.9039757251739502, 0.9078060984611511, 0.9063531756401062, 0.904768168926239, 0.9095231890678406, 0.9142781496047974, 0.9089948534965515, 0.9078060984611511], "val_loss": [2.037008762359619, 1.5086281299591064, 1.0389918088912964, 0.838614284992218, 0.7468627095222473, 0.6920707821846008, 0.6465571522712708, 0.6141173243522644, 0.5888726711273193, 0.5644562244415283, 0.5532558560371399, 0.5301862359046936, 0.5197479128837585, 0.5191627740859985, 0.495146244764328, 0.4871446192264557, 0.4810947775840759, 0.4680109918117523, 0.4591773748397827, 0.4557306170463562, 0.45038673281669617, 0.4471513628959656, 0.4342639446258545, 0.43107014894485474, 0.4254471957683563, 0.4225948750972748, 0.4188433885574341, 0.4145854413509369, 0.41345155239105225, 0.4062584936618805, 0.4036819636821747, 0.3994522988796234, 0.3971458673477173, 0.39908063411712646, 0.3920741677284241, 0.38842105865478516, 0.3894403874874115, 0.38171911239624023, 0.38144612312316895, 0.3811227083206177, 0.37558692693710327, 0.3776778280735016, 0.37586942315101624, 0.37003132700920105, 0.3766933083534241, 0.3687019944190979, 0.3698105812072754, 0.36701419949531555, 0.3638324439525604, 0.3652248680591583, 0.3617747724056244, 0.36055949330329895, 0.3629503846168518, 0.3572864234447479, 0.35610252618789673, 0.35668355226516724, 0.35107702016830444, 0.35314416885375977, 0.3533792197704315, 0.35088175535202026, 0.3500984311103821, 0.34827765822410583, 0.3484824597835541, 0.34851887822151184, 0.3533056676387787, 0.3489196300506592, 0.34633854031562805, 0.34846052527427673], "val_accuracy": [0.5616666674613953, 0.6579999923706055, 0.6806666851043701, 0.7126666903495789, 0.7360000014305115, 0.746999979019165, 0.7663333415985107, 0.7756666541099548, 0.7870000004768372, 0.7983333468437195, 0.8033333420753479, 0.8136666417121887, 0.8140000104904175, 0.8059999942779541, 0.8266666531562805, 0.8276666402816772, 0.8299999833106995, 0.8370000123977661, 0.8376666903495789, 0.8373333215713501, 0.8416666388511658, 0.8416666388511658, 0.846666693687439, 0.8483333587646484, 0.8526666760444641, 0.8536666631698608, 0.8536666631698608, 0.856333315372467, 0.8566666841506958, 0.8583333492279053, 0.8603333234786987, 0.8613333106040955, 0.8633333444595337, 0.8613333106040955, 0.8673333525657654, 0.8696666955947876, 0.8659999966621399, 0.8650000095367432, 0.8653333187103271, 0.8700000047683716, 0.8696666955947876, 0.8686666488647461, 0.871666669845581, 0.8733333349227905, 0.8643333315849304, 0.8723333477973938, 0.8776666522026062, 0.8736666440963745, 0.8776666522026062, 0.8813333511352539, 0.878333330154419, 0.8776666522026062, 0.8813333511352539, 0.8809999823570251, 0.8820000290870667, 0.8806666731834412, 0.8840000033378601, 0.8866666555404663, 0.8833333253860474, 0.8886666893959045, 0.8859999775886536, 0.8893333077430725, 0.890333354473114, 0.8830000162124634, 0.8830000162124634, 0.8886666893959045, 0.8883333206176758, 0.8883333206176758]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 1, 1, 1], [0, 4, 5, 3], [0, 7, 5], [0], [1], [0], [2], [0]], "fitness": -0.8500000238418579, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4809831380844116, 0.7779467701911926, 0.6620380282402039, 0.5985414981842041, 0.5604912042617798, 0.5278866291046143, 0.49207672476768494, 0.44970834255218506, 0.42455118894577026, 0.432285338640213, 0.4231460392475128, 0.4198625683784485, 0.432512104511261, 0.45282813906669617, 0.4528248608112335, 0.49887606501579285, 0.49607932567596436], "accuracy": [0.4827631711959839, 0.7181349992752075, 0.7526086568832397, 0.7783648371696472, 0.7964601516723633, 0.8098005652427673, 0.8099326491355896, 0.830669641494751, 0.8450667262077332, 0.8364813327789307, 0.8470479249954224, 0.8455950617790222, 0.847840428352356, 0.8441421389579773, 0.8259146809577942, 0.8368775844573975, 0.8329150676727295], "val_loss": [0.7303968667984009, 0.6204059720039368, 0.49921178817749023, 0.48325544595718384, 0.4769018590450287, 0.46095624566078186, 0.43310457468032837, 0.46177637577056885, 0.45050206780433655, 0.4589992165565491, 0.45814868807792664, 0.48458024859428406, 0.5339179039001465, 0.4795560836791992, 0.5766302347183228, 0.5194787383079529, 0.5037638545036316], "val_accuracy": [0.7426666617393494, 0.7633333206176758, 0.8193333148956299, 0.8296666741371155, 0.82833331823349, 0.8496666550636292, 0.8486666679382324, 0.8503333330154419, 0.8546666502952576, 0.8486666679382324, 0.8586666584014893, 0.859333336353302, 0.8569999933242798, 0.8486666679382324, 0.846666693687439, 0.8546666502952576, 0.847000002861023]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.845714271068573, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293818712234497, 2.1902520656585693, 1.779493808746338, 1.3438185453414917, 1.0934172868728638, 0.922156035900116, 0.8486858010292053, 0.8214847445487976, 0.7851631045341492, 0.7512569427490234, 0.713419497013092, 0.6919426918029785, 0.6661429405212402, 0.637658417224884, 0.6215528249740601, 0.6165521740913391, 0.5835831165313721, 0.5859500169754028, 0.5667256116867065, 0.549364447593689, 0.5357636213302612, 0.5247588157653809, 0.5025873184204102, 0.5127646327018738, 0.48189476132392883, 0.4892962574958801, 0.4702032208442688, 0.452705442905426, 0.4555821418762207, 0.4399609863758087, 0.43420085310935974, 0.4414358139038086, 0.4203476905822754, 0.4081430435180664, 0.4090244174003601, 0.3922189176082611, 0.39530763030052185, 0.3869858384132385, 0.3806411921977997, 0.369279146194458, 0.36394864320755005, 0.36090072989463806, 0.36606210470199585, 0.34914499521255493, 0.34974193572998047, 0.36026543378829956, 0.3413544297218323, 0.33073797821998596], "accuracy": [0.12759213149547577, 0.31924447417259216, 0.4325716495513916, 0.5432571768760681, 0.6280544400215149, 0.6605468392372131, 0.6824725866317749, 0.691850483417511, 0.6927750706672668, 0.709549605846405, 0.7313432693481445, 0.7360982894897461, 0.7473253011703491, 0.7557786107063293, 0.7614582180976868, 0.7677981853485107, 0.7746664881706238, 0.7763835787773132, 0.7890635132789612, 0.785629391670227, 0.7935543656349182, 0.8004226684570312, 0.8042530417442322, 0.8017435073852539, 0.8095363974571228, 0.817989706993103, 0.8207634687423706, 0.8281601071357727, 0.8197067975997925, 0.8317263126373291, 0.8322546482086182, 0.8325188159942627, 0.8318583965301514, 0.8426892161369324, 0.8413683772087097, 0.8459912538528442, 0.8485008478164673, 0.8487650156021118, 0.8515387773513794, 0.8532558679580688, 0.8570862412452698, 0.8585391640663147, 0.8581429123878479, 0.8658037185668945, 0.8638224601745605, 0.8582749962806702, 0.8638224601745605, 0.8689737319946289], "val_loss": [2.246997356414795, 2.027500629425049, 1.1616041660308838, 0.8936951756477356, 0.7647287845611572, 0.7230870723724365, 0.6933088898658752, 0.669618546962738, 0.6454565525054932, 0.6358624696731567, 0.5981325507164001, 0.5723555684089661, 0.5615686178207397, 0.5489905476570129, 0.5506596565246582, 0.530100405216217, 0.526856541633606, 0.5162201523780823, 0.509146511554718, 0.5002195835113525, 0.5007809400558472, 0.48936325311660767, 0.47593843936920166, 0.46956193447113037, 0.473693311214447, 0.46534472703933716, 0.4520053267478943, 0.45498353242874146, 0.44318851828575134, 0.44696810841560364, 0.4467105567455292, 0.4385424852371216, 0.43012678623199463, 0.4235529899597168, 0.4184207618236542, 0.421738862991333, 0.4244157373905182, 0.4232328236103058, 0.4265860319137573, 0.4193810224533081, 0.41039925813674927, 0.4035402834415436, 0.4123714864253998, 0.40986743569374084, 0.41638192534446716, 0.4196779727935791, 0.42839860916137695, 0.4323571026325226], "val_accuracy": [0.40400001406669617, 0.4323333203792572, 0.6470000147819519, 0.6909999847412109, 0.7183333039283752, 0.7286666631698608, 0.7356666922569275, 0.7516666650772095, 0.753333330154419, 0.7673333287239075, 0.7716666460037231, 0.7816666960716248, 0.7879999876022339, 0.7926666736602783, 0.7879999876022339, 0.7983333468437195, 0.7996666431427002, 0.8053333163261414, 0.8033333420753479, 0.8133333325386047, 0.8183333277702332, 0.8263333439826965, 0.831333339214325, 0.8316666483879089, 0.8360000252723694, 0.8393333554267883, 0.8423333168029785, 0.8370000123977661, 0.8416666388511658, 0.8450000286102295, 0.846666693687439, 0.8443333506584167, 0.8483333587646484, 0.8543333411216736, 0.8543333411216736, 0.8560000061988831, 0.8539999723434448, 0.8536666631698608, 0.8533333539962769, 0.8610000014305115, 0.862333357334137, 0.8616666793823242, 0.8669999837875366, 0.8636666536331177, 0.8640000224113464, 0.8633333444595337, 0.8646666407585144, 0.8643333315849304]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 8], [2, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 6, 0, 3, 5], [3, 3, 0, 3], [16, 16], [0, 1], [0], [0], [11], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 3, 1, 8, 7, 5, 4, 8], [1, 7, 3, 4, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 11, 7, 4, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))), tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(grad), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.multiply(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(grad, tf.math.square(sigma))), grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 1, 3, 1, 3, 3, 7, 1, 3, 6, 5, 2, 2, 6, 0, 8, 1, 6, 4, 2, 4, 3, 5, 5, 0, 0, 5, 1, 8, 5, 8, 0, 7, 4, 8, 1], [0, 0, 1, 0, 2, 3, 3, 1, 2, 2, 2, 2, 1, 3, 0, 3, 1, 1, 3, 3, 2, 1, 1], [83, 99, 82, 80], [0, 1], [0], [2], [0], [0, 1], [0], [0], [0], [0, 1], [5], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(tf.math.square(tf.math.add(grad, tf.math.add(tf.math.divide_no_nan(tf.math.negative(grad), grad), tf.math.sqrt(tf.math.subtract(tf.math.divide_no_nan(alpha, tf.math.pow(grad, tf.math.add(grad, tf.math.pow(tf.math.multiply(tf.math.square(grad), tf.math.square(grad)), alpha)))), tf.math.negative(tf.math.negative(tf.math.square(grad)))))))), tf.math.subtract(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.math.square(tf.math.sqrt(alpha))), tf.math.negative(tf.math.add(tf.math.pow(tf.math.sqrt(alpha), tf.math.subtract(grad, grad)), grad))), alpha)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}, "mapping_values": [1, 59, 36, 23, 4, 2, 1, 1, 0, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 41}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [4, 5, 4, 4, 2, 0], [0, 4, 5, 2, 3], [48, 16], [0, 1, 1], [4], [0, 5], [0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 8, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 4, 1, 2, 0], [16, 57, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 11, 6, 5, 1, 3, 1, 2, 1, 17, 9, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.pow(tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(grad, tf.math.negative(beta)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad))))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 39], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [3, 2, 3, 0, 4, 5], [2, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 4, 8, 2, 0], [0, 0, 0, 3, 4, 0, 3, 0, 1, 0, 6, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.09371428936719894, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 0, 2, 1, 1, 1, 27, 15, 12, 6], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), alpha))))))), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.negative(grad), sigma))", "other_info": {"loss": [2.3106751441955566, 2.3095650672912598, 2.310732364654541, 2.3097052574157715, 2.3109116554260254, 2.310107469558716], "accuracy": [0.08928807079792023, 0.09113723784685135, 0.09192973375320435, 0.0940430611371994, 0.08757099509239197, 0.09126931428909302], "val_loss": [2.308152675628662, 2.308154344558716, 2.3081552982330322, 2.3081562519073486, 2.308156967163086, 2.3081576824188232], "val_accuracy": [0.08733333647251129, 0.08733333647251129, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492, 0.08699999749660492]}}]