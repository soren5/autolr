[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8577142953872681, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224039077758789, 1.8637133836746216, 1.3891873359680176, 1.089574933052063, 0.9303100109100342, 0.8272783756256104, 0.7760105133056641, 0.7168371081352234, 0.6862456798553467, 0.6561814546585083, 0.6327308416366577, 0.6126651167869568, 0.5909878611564636, 0.5742032527923584, 0.557884693145752, 0.5429813861846924, 0.5227494239807129, 0.5207197070121765, 0.5044571161270142, 0.49488887190818787, 0.48002496361732483, 0.4767829179763794, 0.4653472602367401, 0.4583744704723358, 0.4548679292201996, 0.44206658005714417, 0.43393176794052124, 0.4332837760448456, 0.42817482352256775, 0.41669875383377075, 0.4029731750488281, 0.4064020812511444, 0.39072445034980774, 0.3901113271713257, 0.38887739181518555, 0.3818286955356598, 0.3841714859008789, 0.37191179394721985, 0.3677370846271515, 0.3608124256134033, 0.35545414686203003, 0.3455515503883362, 0.3393111526966095, 0.3421272337436676, 0.33566269278526306, 0.33043110370635986, 0.32299861311912537, 0.3205419182777405, 0.3170951306819916, 0.31734806299209595], "accuracy": [0.2716946303844452, 0.5004622936248779, 0.5649187564849854, 0.6190727949142456, 0.6627922058105469, 0.700171709060669, 0.7166820764541626, 0.7364945411682129, 0.7515519857406616, 0.7640998363494873, 0.7646281719207764, 0.78113853931427, 0.7819310426712036, 0.7906485199928284, 0.7931581139564514, 0.8024039268493652, 0.8059701323509216, 0.8107251524925232, 0.8131026029586792, 0.8210275769233704, 0.828820526599884, 0.828820526599884, 0.8333113193511963, 0.8368775844573975, 0.8360850811004639, 0.8417646288871765, 0.8469158411026001, 0.837141752243042, 0.8469158411026001, 0.8504821062088013, 0.8578787446022034, 0.8515387773513794, 0.8584070801734924, 0.8619733452796936, 0.8597279191017151, 0.86553955078125, 0.8613129258155823, 0.868049144744873, 0.8638224601745605, 0.8679170608520508, 0.8734645247459412, 0.8795403242111206, 0.8741249442100525, 0.8765024542808533, 0.8758420348167419, 0.8784837126731873, 0.8857482671737671, 0.8835028409957886, 0.883238673210144, 0.8886540532112122], "val_loss": [2.037303924560547, 1.5080426931381226, 1.0352823734283447, 0.8245841264724731, 0.7301333546638489, 0.6686679720878601, 0.6276233792304993, 0.5930513739585876, 0.5619845986366272, 0.5437905788421631, 0.5219172239303589, 0.5069548487663269, 0.4884033203125, 0.4803253710269928, 0.46772095561027527, 0.4529742896556854, 0.44665437936782837, 0.43571561574935913, 0.4247988760471344, 0.42195364832878113, 0.41448795795440674, 0.41448676586151123, 0.40278249979019165, 0.40238863229751587, 0.3987421989440918, 0.39680537581443787, 0.3898220956325531, 0.38430553674697876, 0.38189592957496643, 0.37547481060028076, 0.3766781687736511, 0.3735281229019165, 0.3745492696762085, 0.3634779453277588, 0.3624143898487091, 0.3603622317314148, 0.35987401008605957, 0.35538825392723083, 0.3584100306034088, 0.3505800664424896, 0.35581934452056885, 0.3497196435928345, 0.342082142829895, 0.3514680862426758, 0.3417579233646393, 0.34338900446891785, 0.34097445011138916, 0.3386140465736389, 0.33899831771850586, 0.3374387323856354], "val_accuracy": [0.5546666383743286, 0.6536666750907898, 0.6916666626930237, 0.7099999785423279, 0.7419999837875366, 0.7599999904632568, 0.768666684627533, 0.781000018119812, 0.7919999957084656, 0.8063333630561829, 0.8116666674613953, 0.8159999847412109, 0.8236666917800903, 0.8256666660308838, 0.8296666741371155, 0.8360000252723694, 0.8360000252723694, 0.843666672706604, 0.843666672706604, 0.8426666855812073, 0.8506666421890259, 0.8453333377838135, 0.8493333458900452, 0.8506666421890259, 0.8526666760444641, 0.8519999980926514, 0.8566666841506958, 0.859000027179718, 0.8576666712760925, 0.8583333492279053, 0.859333336353302, 0.859333336353302, 0.859000027179718, 0.862333357334137, 0.8640000224113464, 0.8616666793823242, 0.8629999756813049, 0.8676666617393494, 0.8643333315849304, 0.8690000176429749, 0.8666666746139526, 0.8650000095367432, 0.8683333396911621, 0.8643333315849304, 0.8713333606719971, 0.8706666827201843, 0.8700000047683716, 0.8679999709129333, 0.8700000047683716, 0.8696666955947876]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 4], [0, 5], [0], [0, 0, 0, 0, 1, 1], [0, 6, 8, 0], [0, 2], [0], [0, 1], [0], [1], [0]], "fitness": -0.854285717010498, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294163942337036, 2.1939048767089844, 1.7887150049209595, 1.3577743768692017, 1.0972553491592407, 0.9173208475112915, 0.8460677266120911, 0.7902746796607971, 0.7596055865287781, 0.724583089351654, 0.6937146186828613, 0.6494811773300171, 0.6459831595420837, 0.6288825273513794, 0.5988783836364746, 0.5972225069999695, 0.5790957808494568, 0.5762542486190796, 0.5583316683769226, 0.5476022362709045, 0.5306116938591003, 0.523625373840332, 0.5135462284088135, 0.504741907119751, 0.5077247023582458, 0.4803597331047058, 0.47328269481658936, 0.46895503997802734, 0.44984012842178345, 0.4501659870147705, 0.4393540024757385, 0.4364193379878998, 0.4230334758758545, 0.4103926718235016, 0.4047359824180603, 0.3951931893825531, 0.4045952558517456, 0.3837677240371704, 0.38591325283050537, 0.3694913387298584, 0.37484797835350037, 0.36699768900871277, 0.3746156096458435, 0.37426289916038513, 0.3723953366279602, 0.3712397515773773, 0.3475763201713562, 0.35083580017089844, 0.3428378105163574], "accuracy": [0.12534672021865845, 0.33047154545783997, 0.4341566562652588, 0.5425967574119568, 0.6255448460578918, 0.6649055480957031, 0.6942279934883118, 0.7049266695976257, 0.7055870890617371, 0.7166820764541626, 0.7337207794189453, 0.7506273984909058, 0.7520803213119507, 0.7631752490997314, 0.7703077793121338, 0.7713643908500671, 0.7817989587783813, 0.7815347909927368, 0.7815347909927368, 0.7954035401344299, 0.7968564033508301, 0.7992339134216309, 0.8059701323509216, 0.8087438941001892, 0.8068947196006775, 0.816008448600769, 0.8190463781356812, 0.8206313848495483, 0.8300092220306396, 0.8285563588142395, 0.8296129703521729, 0.832650899887085, 0.8343679904937744, 0.8442742228507996, 0.8436138033866882, 0.8510104417800903, 0.8462554216384888, 0.8510104417800903, 0.852331280708313, 0.8614450097084045, 0.8540483713150024, 0.8593316674232483, 0.8557654023170471, 0.8576145768165588, 0.8565579056739807, 0.8564258217811584, 0.8627657890319824, 0.8679170608520508, 0.8712190985679626], "val_loss": [2.248522996902466, 2.0345466136932373, 1.1894363164901733, 0.9021430611610413, 0.7613233327865601, 0.6963922381401062, 0.6611567139625549, 0.63413006067276, 0.6397090554237366, 0.5991316437721252, 0.5619580745697021, 0.5528580546379089, 0.5370036363601685, 0.5314809679985046, 0.519831120967865, 0.5104203224182129, 0.5011627674102783, 0.5051437020301819, 0.4974001348018646, 0.4841473698616028, 0.480174720287323, 0.4667298495769501, 0.45926931500434875, 0.4597333073616028, 0.4424671530723572, 0.4313841164112091, 0.4229845404624939, 0.41732701659202576, 0.42319726943969727, 0.424110472202301, 0.4164612591266632, 0.404575914144516, 0.3947030007839203, 0.3896332085132599, 0.3948444128036499, 0.39092886447906494, 0.3884308338165283, 0.38313642144203186, 0.38060396909713745, 0.3807486593723297, 0.3811424970626831, 0.37888243794441223, 0.39209526777267456, 0.3697386085987091, 0.369174063205719, 0.38307225704193115, 0.381110280752182, 0.40533122420310974, 0.3774173855781555], "val_accuracy": [0.4113333225250244, 0.4623333215713501, 0.6340000033378601, 0.6800000071525574, 0.7143333554267883, 0.7336666584014893, 0.7426666617393494, 0.765333354473114, 0.7573333382606506, 0.768666684627533, 0.7713333368301392, 0.7799999713897705, 0.7903333306312561, 0.784333348274231, 0.7960000038146973, 0.7940000295639038, 0.7943333387374878, 0.7983333468437195, 0.8050000071525574, 0.8080000281333923, 0.8130000233650208, 0.8146666884422302, 0.831333339214325, 0.8276666402816772, 0.8363333344459534, 0.8373333215713501, 0.8426666855812073, 0.8479999899864197, 0.8450000286102295, 0.8386666774749756, 0.8403333425521851, 0.8516666889190674, 0.8553333282470703, 0.859000027179718, 0.8613333106040955, 0.8579999804496765, 0.8579999804496765, 0.8600000143051147, 0.8643333315849304, 0.8643333315849304, 0.8679999709129333, 0.8683333396911621, 0.8629999756813049, 0.8706666827201843, 0.8640000224113464, 0.8633333444595337, 0.8629999756813049, 0.862333357334137, 0.8673333525657654]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 6, 4, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8202857375144958, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5202393531799316, 0.8476247787475586, 0.7237948179244995, 0.6650246977806091, 0.5871095061302185, 0.5817227959632874, 0.60490483045578, 0.5872622728347778, 0.555287778377533, 0.5659729838371277, 0.6273319721221924, 0.644974410533905, 0.6031264662742615, 0.6184142231941223, 0.6359406113624573, 0.6033856868743896, 0.6009925007820129, 0.6285991668701172, 0.6185512542724609, 0.6427313685417175, 0.6956702470779419, 0.6900339722633362, 0.6798871755599976, 0.6218118667602539], "accuracy": [0.4753665328025818, 0.7240787148475647, 0.7417778372764587, 0.7633073329925537, 0.7844406366348267, 0.7928939461708069, 0.7911768555641174, 0.7853652238845825, 0.806630551815033, 0.8039889335632324, 0.7976489067077637, 0.7840443849563599, 0.7960638999938965, 0.7889314293861389, 0.8068947196006775, 0.7975168228149414, 0.8024039268493652, 0.7927618622779846, 0.7873464822769165, 0.7921014428138733, 0.7907806038856506, 0.7984414100646973, 0.7754589915275574, 0.791969358921051], "val_loss": [0.8614323139190674, 0.6510323882102966, 0.614654541015625, 0.5787025690078735, 0.5137259364128113, 0.5536360144615173, 0.5421525835990906, 0.5117961764335632, 0.4908166527748108, 0.5507488250732422, 0.5979721546173096, 0.5764880180358887, 0.577165961265564, 0.5993874073028564, 0.5627492070198059, 0.6484808921813965, 0.5719670653343201, 0.5757715702056885, 0.6092686653137207, 0.5777968168258667, 0.6338403224945068, 0.6406223177909851, 0.6488879323005676, 0.5736802816390991], "val_accuracy": [0.7086666822433472, 0.7703333497047424, 0.7706666588783264, 0.7853333353996277, 0.8003333210945129, 0.8180000185966492, 0.8040000200271606, 0.8136666417121887, 0.8240000009536743, 0.8206666707992554, 0.8109999895095825, 0.8100000023841858, 0.8173333406448364, 0.8296666741371155, 0.8136666417121887, 0.8276666402816772, 0.8243333101272583, 0.8199999928474426, 0.8303333520889282, 0.8206666707992554, 0.8183333277702332, 0.800000011920929, 0.8169999718666077, 0.8266666531562805]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [5, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [13], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 3, 4, 1, 6, 3, 8, 4, 0, 6, 8, 8, 6], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0, 3, 6, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 30, 17, 13, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(grad, tf.math.divide_no_nan(sigma, tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma))), tf.math.sqrt(tf.math.pow(alpha, beta)))), tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(sigma, grad))), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0], [0, 1, 3, 1, 3, 7, 0, 9], [0, 0, 2, 0, 2], [83, 99, 27, 63], [0, 0, 0, 1, 1, 1], [0, 4, 1], [0, 5, 4], [0], [0, 0, 1], [0, 5], [0], [0], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(grad), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [10.555708885192871, 1520920.0, 14039913.0, 2.3128020763397217, 2.321721076965332, 2.330653667449951, 2.338438034057617, 2.342994451522827], "accuracy": [0.10170386731624603, 0.09853387624025345, 0.11094967275857925, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [25.103443145751953, 49374332.0, 2.3102452754974365, 2.3188650608062744, 2.3284430503845215, 2.337132692337036, 2.343510150909424, 2.34635329246521], "val_accuracy": [0.10066666454076767, 0.09666666388511658, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}, "mapping_values": [1, 13, 8, 5, 4, 6, 3, 3, 1, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 13}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 2, 2, 2, 1, 4, 0, 0, 1], [0, 1, 0, 2, 1, 0, 3], [39, 39, 60], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 4, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 1, 9, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [18, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 3, 10, 6, 4, 1, 2, 1, 1, 1, 16, 9, 7, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(tf.math.negative(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(alpha)), tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.pow(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), grad)), sigma), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.3047168254852295, 2.3025991916656494, 2.3026013374328613, 2.3026111125946045, 2.3026123046875, 2.3026058673858643, 2.302618980407715], "accuracy": [0.09826971590518951, 0.09100515395402908, 0.09576013684272766, 0.09496764093637466, 0.09760929644107819, 0.09589222073554993, 0.09589222073554993], "val_loss": [2.3025856018066406, 2.3025870323181152, 2.3025896549224854, 2.3025879859924316, 2.302584409713745, 2.3025848865509033, 2.3025870323181152], "val_accuracy": [0.09966666996479034, 0.10000000149011612, 0.09700000286102295, 0.09666666388511658, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3], [0, 1, 0, 0], [83, 99, 27], [0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5], [0, 3, 2, 3], [0, 44], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [6, 5, 4, 0, 4, 8], [0, 2, 7, 7], [0], [0, 1], [5], [1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 9, 5, 4, 1, 10, 6, 4, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.multiply(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.negative(tf.math.pow(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), beta)), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3032922744750977, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]