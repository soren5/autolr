[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223330497741699, 1.8670156002044678, 1.3935511112213135, 1.1012579202651978, 0.9477801322937012, 0.8379126191139221, 0.7764281630516052, 0.7235901951789856, 0.6839449405670166, 0.6511124968528748, 0.6340097188949585, 0.6069210171699524, 0.5817078948020935, 0.5635776519775391, 0.5524153113365173, 0.5367791652679443, 0.5212588906288147, 0.5178380608558655, 0.5019086003303528, 0.4879888892173767, 0.4858485460281372, 0.4747111201286316, 0.45951735973358154, 0.4532293975353241, 0.4492609202861786, 0.4330301284790039, 0.4310648441314697, 0.42051371932029724, 0.41327017545700073, 0.4060419201850891, 0.3997148871421814, 0.39729252457618713, 0.3869434893131256, 0.3869549036026001, 0.38186177611351013, 0.3692651391029358, 0.36346086859703064, 0.3634459972381592, 0.3600703179836273, 0.3489670753479004, 0.3429599404335022, 0.34309908747673035, 0.3401198089122772, 0.3303268253803253, 0.3301240801811218, 0.3276282846927643, 0.3180643618106842, 0.3136589229106903, 0.3090694546699524, 0.3071834146976471, 0.3011736273765564, 0.30332496762275696, 0.29351481795310974, 0.2937680780887604], "accuracy": [0.26680755615234375, 0.49451854825019836, 0.5679566860198975, 0.6209219098091125, 0.6646413803100586, 0.7078325152397156, 0.7234182953834534, 0.7387399077415466, 0.7541936039924622, 0.7672698497772217, 0.7677981853485107, 0.7820631265640259, 0.7897239327430725, 0.7977809906005859, 0.798309326171875, 0.8082155585289001, 0.8138951063156128, 0.8094043135643005, 0.822348415851593, 0.8269713521003723, 0.8208954930305481, 0.8310658931732178, 0.8350284099578857, 0.8367455005645752, 0.8368775844573975, 0.8444063067436218, 0.843481719493866, 0.850350022315979, 0.8502179384231567, 0.8570862412452698, 0.857218325138092, 0.8574824929237366, 0.8610487580299377, 0.8610487580299377, 0.8607845902442932, 0.8658037185668945, 0.8701624870300293, 0.8689737319946289, 0.8708229064941406, 0.8792761564254761, 0.8798044919967651, 0.8765024542808533, 0.8765024542808533, 0.8824461698532104, 0.880729079246521, 0.8844274282455444, 0.8838990926742554, 0.8887861371040344, 0.8878615498542786, 0.8903711438179016, 0.8924844861030579, 0.8912957310676575, 0.8976356983184814, 0.8960506916046143], "val_loss": [2.040694236755371, 1.5166728496551514, 1.045767068862915, 0.8421168327331543, 0.7569165229797363, 0.7011509537696838, 0.6573318839073181, 0.6179470419883728, 0.5908101201057434, 0.5737177133560181, 0.5541383624076843, 0.5365487933158875, 0.518412172794342, 0.5104728937149048, 0.49868762493133545, 0.485697478055954, 0.48461878299713135, 0.46694132685661316, 0.459992378950119, 0.44818419218063354, 0.45110249519348145, 0.4507465958595276, 0.4339507520198822, 0.4287099242210388, 0.42590731382369995, 0.4119842052459717, 0.4104468524456024, 0.4069807529449463, 0.40372517704963684, 0.3985708951950073, 0.3967111110687256, 0.39305025339126587, 0.39346253871917725, 0.3906964063644409, 0.3815464675426483, 0.3792845904827118, 0.37928369641304016, 0.3762374818325043, 0.37582898139953613, 0.37387406826019287, 0.3717586398124695, 0.36671704053878784, 0.363382488489151, 0.36401286721229553, 0.3619881868362427, 0.35666540265083313, 0.3588123917579651, 0.3541429042816162, 0.35232576727867126, 0.35342442989349365, 0.3524846136569977, 0.34847813844680786, 0.34814298152923584, 0.35015836358070374], "val_accuracy": [0.5323333144187927, 0.6446666717529297, 0.6756666898727417, 0.7043333053588867, 0.7239999771118164, 0.7493333220481873, 0.753000020980835, 0.7706666588783264, 0.7820000052452087, 0.7873333096504211, 0.7956666946411133, 0.800000011920929, 0.8136666417121887, 0.812666654586792, 0.8199999928474426, 0.824999988079071, 0.8246666789054871, 0.8326666951179504, 0.8303333520889282, 0.8376666903495789, 0.8333333134651184, 0.8343333601951599, 0.8446666598320007, 0.843666672706604, 0.846666693687439, 0.8513333201408386, 0.8546666502952576, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8529999852180481, 0.859333336353302, 0.8546666502952576, 0.8569999933242798, 0.8606666922569275, 0.8633333444595337, 0.8643333315849304, 0.8629999756813049, 0.8576666712760925, 0.8703333139419556, 0.8640000224113464, 0.8643333315849304, 0.8676666617393494, 0.8663333058357239, 0.8713333606719971, 0.871999979019165, 0.8693333268165588, 0.8693333268165588, 0.878000020980835, 0.8756666779518127, 0.8706666827201843, 0.8756666779518127, 0.8769999742507935, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 1], [0, 2], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8631428480148315, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2941629886627197, 2.190188407897949, 1.7740792036056519, 1.3587054014205933, 1.0794044733047485, 0.9372586011886597, 0.8706274628639221, 0.8288729786872864, 0.7704030871391296, 0.7522533535957336, 0.7095057964324951, 0.6850335001945496, 0.6444350481033325, 0.6149653196334839, 0.6129516959190369, 0.6004751324653625, 0.588333010673523, 0.5637917518615723, 0.5595723390579224, 0.5455674529075623, 0.53749680519104, 0.5247467756271362, 0.517754077911377, 0.5126906633377075, 0.49943631887435913, 0.4883289933204651, 0.4778670072555542, 0.469224214553833, 0.46919745206832886, 0.4569868743419647, 0.43385398387908936, 0.4339730441570282, 0.4250170886516571, 0.408512145280838, 0.4132574796676636, 0.40225887298583984, 0.40184056758880615, 0.4047265946865082, 0.3878006339073181, 0.3874073028564453, 0.37221774458885193, 0.3726078271865845, 0.3541816174983978, 0.3508833646774292, 0.35019463300704956, 0.3480580449104309], "accuracy": [0.12415797263383865, 0.32584863901138306, 0.4365341365337372, 0.5390304923057556, 0.6288469433784485, 0.6590939164161682, 0.6827367544174194, 0.6989829540252686, 0.7046625018119812, 0.7073041796684265, 0.7264562249183655, 0.7409853339195251, 0.7519482374191284, 0.7677981853485107, 0.7667415142059326, 0.7718927264213562, 0.7781006693840027, 0.7847048044204712, 0.7877426743507385, 0.7901201844215393, 0.7975168228149414, 0.7965922355651855, 0.8037247657775879, 0.8035926818847656, 0.8054417967796326, 0.8157442808151245, 0.8238013386726379, 0.8158763647079468, 0.821820080280304, 0.8276317715644836, 0.8350284099578857, 0.8302733898162842, 0.8359529972076416, 0.8466516733169556, 0.8401796221733093, 0.8405758738517761, 0.8469158411026001, 0.8482366800308228, 0.8510104417800903, 0.8498216867446899, 0.8525954484939575, 0.8627657890319824, 0.8647470474243164, 0.8639545440673828, 0.8668603897094727, 0.8704266548156738], "val_loss": [2.2464637756347656, 2.0196692943573, 1.130311369895935, 0.8479822874069214, 0.7567651271820068, 0.6973077058792114, 0.6588135361671448, 0.6312034130096436, 0.6246449947357178, 0.6047412753105164, 0.5770229697227478, 0.5523663759231567, 0.5462116599082947, 0.5381428599357605, 0.5244625806808472, 0.5211242437362671, 0.5131732821464539, 0.5136938691139221, 0.516900897026062, 0.5048015713691711, 0.49901115894317627, 0.48973649740219116, 0.4933519661426544, 0.4786631762981415, 0.4699825942516327, 0.4812801778316498, 0.4653855264186859, 0.45389866828918457, 0.456641286611557, 0.44246843457221985, 0.4417087137699127, 0.43669742345809937, 0.431334525346756, 0.4349968135356903, 0.4393485486507416, 0.42224830389022827, 0.42053458094596863, 0.4164533317089081, 0.4135936200618744, 0.41310152411460876, 0.3993746340274811, 0.3993161618709564, 0.4029238224029541, 0.4045981466770172, 0.4002673327922821, 0.40497225522994995], "val_accuracy": [0.4033333361148834, 0.4896666705608368, 0.6573333144187927, 0.7070000171661377, 0.7123333215713501, 0.7493333220481873, 0.7429999709129333, 0.7509999871253967, 0.7749999761581421, 0.7673333287239075, 0.7853333353996277, 0.7919999957084656, 0.7946666479110718, 0.7996666431427002, 0.8050000071525574, 0.815666675567627, 0.8146666884422302, 0.8166666626930237, 0.8133333325386047, 0.8253333568572998, 0.8209999799728394, 0.8303333520889282, 0.8246666789054871, 0.8266666531562805, 0.8320000171661377, 0.8360000252723694, 0.8386666774749756, 0.8443333506584167, 0.8399999737739563, 0.8510000109672546, 0.8446666598320007, 0.8443333506584167, 0.8536666631698608, 0.8606666922569275, 0.8536666631698608, 0.8503333330154419, 0.8553333282470703, 0.862666666507721, 0.8656666874885559, 0.8603333234786987, 0.8690000176429749, 0.8669999837875366, 0.8666666746139526, 0.8656666874885559, 0.8676666617393494, 0.8640000224113464]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8565714359283447, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2213027477264404, 1.8556870222091675, 1.3856102228164673, 1.0797929763793945, 0.9383080005645752, 0.8306551575660706, 0.768498957157135, 0.7212291955947876, 0.6891824007034302, 0.6597826480865479, 0.6267241835594177, 0.6173073649406433, 0.5900537371635437, 0.5668531656265259, 0.5497148036956787, 0.5373721122741699, 0.5253157019615173, 0.504946231842041, 0.5056432485580444, 0.49161574244499207, 0.4766640365123749, 0.4687574505805969, 0.46071693301200867, 0.4460810124874115, 0.4438543915748596, 0.42694953083992004, 0.4202917516231537, 0.4208853542804718, 0.4138214588165283, 0.410617470741272, 0.3940170109272003, 0.39114028215408325, 0.3929700255393982, 0.38133808970451355, 0.36855077743530273, 0.37262630462646484, 0.3622044026851654, 0.3529820442199707, 0.34869831800460815, 0.3452228605747223, 0.3389313519001007, 0.3390488624572754, 0.33100420236587524, 0.3343988060951233, 0.324720561504364, 0.31668415665626526, 0.3130621016025543, 0.30755943059921265, 0.30335843563079834, 0.3006730377674103, 0.29104968905448914, 0.28905707597732544, 0.2914591431617737, 0.28111618757247925, 0.28374457359313965, 0.263842910528183, 0.27425315976142883, 0.2723766565322876, 0.2686108946800232, 0.26038604974746704, 0.25510063767433167], "accuracy": [0.26720380783081055, 0.5087835192680359, 0.5690133571624756, 0.625148594379425, 0.6605468392372131, 0.7037379741668701, 0.7235503792762756, 0.7351737022399902, 0.7483819723129272, 0.7518161535263062, 0.7714964747428894, 0.7717606425285339, 0.7841764688491821, 0.7918372750282288, 0.8004226684570312, 0.8055738806724548, 0.8078193068504333, 0.8227446675300598, 0.8152159452438354, 0.8206313848495483, 0.8273676037788391, 0.8305375576019287, 0.8374059200286865, 0.8412362933158875, 0.8444063067436218, 0.8441421389579773, 0.8498216867446899, 0.8495575189590454, 0.8524633646011353, 0.8557654023170471, 0.8576145768165588, 0.8614450097084045, 0.8621054291725159, 0.8671245574951172, 0.8676528930664062, 0.86553955078125, 0.8685774803161621, 0.8750495314598083, 0.8747853636741638, 0.8776912093162537, 0.8762382864952087, 0.8802007436752319, 0.8802007436752319, 0.8796724081039429, 0.8865407705307007, 0.8870691061019897, 0.889578640460968, 0.8906353116035461, 0.8912957310676575, 0.8924844861030579, 0.8942015767097473, 0.8975036144256592, 0.8939374089241028, 0.9013340473175049, 0.9002773761749268, 0.9076740145683289, 0.9001452922821045, 0.9052965044975281, 0.90423983335495, 0.9058248400688171, 0.9089948534965515], "val_loss": [2.0317931175231934, 1.4979954957962036, 1.0247491598129272, 0.820078432559967, 0.7390548586845398, 0.6784752011299133, 0.6411993503570557, 0.6034624576568604, 0.5761821866035461, 0.5579642057418823, 0.5432789921760559, 0.5234851241111755, 0.5088602900505066, 0.5005439519882202, 0.4887648820877075, 0.4778496026992798, 0.4700838327407837, 0.4598889648914337, 0.45403170585632324, 0.44575902819633484, 0.44313275814056396, 0.433451771736145, 0.4301515221595764, 0.42500364780426025, 0.41888558864593506, 0.4139542579650879, 0.4128316342830658, 0.41029292345046997, 0.4102421998977661, 0.3994729816913605, 0.3969210684299469, 0.39414578676223755, 0.387763112783432, 0.3942835330963135, 0.38974931836128235, 0.3848630487918854, 0.38025468587875366, 0.37902528047561646, 0.37861230969429016, 0.3785543739795685, 0.375428706407547, 0.37083014845848083, 0.37225252389907837, 0.3717709183692932, 0.3698597550392151, 0.36976298689842224, 0.36299511790275574, 0.3677259087562561, 0.36131417751312256, 0.3647635877132416, 0.36187273263931274, 0.3620045483112335, 0.3598732054233551, 0.3576597571372986, 0.35691291093826294, 0.35633525252342224, 0.3525634706020355, 0.3596266210079193, 0.354155033826828, 0.3551747500896454, 0.35494962334632874], "val_accuracy": [0.5443333387374878, 0.6729999780654907, 0.6880000233650208, 0.7166666388511658, 0.7383333444595337, 0.750333309173584, 0.7699999809265137, 0.7796666622161865, 0.7956666946411133, 0.8019999861717224, 0.8116666674613953, 0.8149999976158142, 0.8213333487510681, 0.8270000219345093, 0.8259999752044678, 0.8299999833106995, 0.8396666646003723, 0.8383333086967468, 0.840666651725769, 0.8500000238418579, 0.8446666598320007, 0.8486666679382324, 0.8510000109672546, 0.8496666550636292, 0.8523333072662354, 0.8566666841506958, 0.8503333330154419, 0.8529999852180481, 0.8546666502952576, 0.859000027179718, 0.8600000143051147, 0.8643333315849304, 0.8643333315849304, 0.8600000143051147, 0.8656666874885559, 0.8619999885559082, 0.862666666507721, 0.8650000095367432, 0.8666666746139526, 0.8650000095367432, 0.8703333139419556, 0.8713333606719971, 0.8673333525657654, 0.8666666746139526, 0.8683333396911621, 0.8723333477973938, 0.8730000257492065, 0.8706666827201843, 0.8730000257492065, 0.874666690826416, 0.871666669845581, 0.874666690826416, 0.875, 0.8756666779518127, 0.874666690826416, 0.8766666650772095, 0.875333309173584, 0.871999979019165, 0.875333309173584, 0.8726666569709778, 0.875]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0], [0, 5, 9], [0], [0], [1], [0], [2], [0]], "fitness": -0.8382856845855713, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5529811382293701, 0.8790820240974426, 0.6938641667366028, 0.6319833993911743, 0.5944090485572815, 0.5528966784477234, 0.5203309059143066, 0.4731101095676422, 0.4600369334220886, 0.4491423964500427, 0.4245450496673584, 0.40625882148742676, 0.40578362345695496, 0.3896094262599945, 0.4062912166118622], "accuracy": [0.46427157521247864, 0.6973979473114014, 0.7477215528488159, 0.7662131786346436, 0.7829877138137817, 0.7976489067077637, 0.8072909712791443, 0.8251221776008606, 0.8342359066009521, 0.8317263126373291, 0.8422929644584656, 0.8520671129226685, 0.8442742228507996, 0.8605204224586487, 0.8614450097084045], "val_loss": [0.7984867095947266, 0.6182336211204529, 0.5708373785018921, 0.5265095829963684, 0.4844692051410675, 0.4847327470779419, 0.4536624848842621, 0.4406871199607849, 0.45232996344566345, 0.4472733438014984, 0.48477286100387573, 0.4485906660556793, 0.45685553550720215, 0.4927090108394623, 0.5022953152656555], "val_accuracy": [0.7003333568572998, 0.7803333401679993, 0.7929999828338623, 0.8143333196640015, 0.8186666369438171, 0.8253333568572998, 0.8403333425521851, 0.8463333249092102, 0.8523333072662354, 0.859333336353302, 0.8479999899864197, 0.8483333587646484, 0.8543333411216736, 0.8513333201408386, 0.8553333282470703]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 3, 0, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 2, 3, 0, 3, 2, 6, 9], [0, 1, 0, 2, 3, 1], [39, 42, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [3, 6, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [8], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [4, 3, 3, 0, 8, 1, 4, 1, 4, 2, 8, 5, 7, 8], [0, 0, 0, 3, 0, 0, 3, 0, 2, 0], [16, 99, 96, 99, 61, 1, 88]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 3, 8, 4, 4, 2, 2, 1, 1, 1, 24, 14, 10, 7], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), grad), alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.sqrt(sigma), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(sigma, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))))), tf.math.sqrt(beta)), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 9, 3, 0, 3], [2, 2, 0, 2], [56, 39], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [2, 2, 3, 0, 3, 5, 0, 8, 0], [0, 2, 0, 3, 2], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [3, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 14, 9, 5, 2, 2, 1, 1, 0, 14, 7, 7, 5], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.multiply(tf.math.square(grad), tf.math.negative(tf.math.sqrt(tf.math.negative(beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [4.9329071044921875, 5.361616611480713, 3.3341755867004395, 3.0080738067626953, 2.9863083362579346, 2.7966017723083496, 3.2034575939178467], "accuracy": [0.10315678268671036, 0.09919429570436478, 0.10196803510189056, 0.09893012791872025, 0.10315678268671036, 0.107647605240345, 0.09893012791872025], "val_loss": [3.0508153438568115, 2.8902008533477783, 2.409794569015503, 2.7405943870544434, 2.4726579189300537, 2.5564918518066406, 2.6285505294799805], "val_accuracy": [0.09933333098888397, 0.10133333504199982, 0.0963333323597908, 0.0963333323597908, 0.09933333098888397, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 5, 3, 3], [0, 0, 1, 2, 2], [83, 99, 27], [0, 0, 1, 1], [0, 2, 3, 0, 3, 5], [0, 4], [0], [1, 1], [0, 9], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 8, 6, 6, 1, 8, 8, 5, 1, 1, 6, 1, 0], [1, 1, 5, 1, 6, 3, 0, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 2, 4, 2, 2, 1, 1, 0, 1, 1, 21, 13, 8, 1], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.math.sqrt(tf.math.sqrt(alpha)), tf.math.square(tf.math.subtract(alpha, tf.math.subtract(grad, tf.math.divide_no_nan(alpha, grad))))), sigma), tf.math.subtract(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 4], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5, 0, 2, 3, 8], [0, 2, 0, 3, 3, 4], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [6, 3, 3, 6, 3, 1, 9, 1, 4, 2, 8, 6, 6, 8, 9, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 88, 61, 1, 4, 21]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 2, 2, 1, 16, 10, 6, 2, 2, 1, 1, 1, 26, 16, 10, 8], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), tf.math.multiply(tf.math.sqrt(grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), sigma)), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), beta)))), tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]