[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8617143034934998, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2932355403900146, 2.189987897872925, 1.7648241519927979, 1.3506121635437012, 1.0752415657043457, 0.9072723388671875, 0.8267953395843506, 0.7909759879112244, 0.7599325180053711, 0.7196541428565979, 0.713009238243103, 0.6703449487686157, 0.6464946866035461, 0.6229987144470215, 0.602080225944519, 0.5914624929428101, 0.583695113658905, 0.5658379197120667, 0.5661253333091736, 0.5447837710380554, 0.5251433849334717, 0.5164421796798706, 0.5116531848907471, 0.49465909600257874, 0.489328533411026, 0.48289206624031067, 0.4675733149051666, 0.440097838640213, 0.4498593211174011, 0.4341367185115814, 0.43171438574790955, 0.4261758625507355, 0.4183519184589386, 0.41635799407958984, 0.40837112069129944, 0.3863084018230438, 0.3922819197177887, 0.3942226469516754, 0.38469165563583374, 0.37323513627052307, 0.36750611662864685, 0.3720574975013733, 0.36711469292640686, 0.36436060070991516, 0.3551126718521118, 0.34337007999420166, 0.34511131048202515, 0.3275326192378998, 0.34352022409439087, 0.3285074532032013, 0.314022958278656, 0.3302016258239746, 0.32268330454826355, 0.3121069669723511, 0.3102341890335083, 0.30391010642051697, 0.3000398576259613, 0.29738280177116394, 0.2879416048526764, 0.28742024302482605, 0.2806587219238281, 0.28991183638572693, 0.276084303855896, 0.27045103907585144, 0.27281856536865234, 0.2603570818901062, 0.2505612075328827], "accuracy": [0.13340377807617188, 0.3241315484046936, 0.445779949426651, 0.5489367246627808, 0.6373002529144287, 0.6687359809875488, 0.6931713223457336, 0.7057191729545593, 0.7040021419525146, 0.7195879220962524, 0.7226257920265198, 0.7429665923118591, 0.7461365461349487, 0.76106196641922, 0.7647602558135986, 0.767930269241333, 0.7802139520645142, 0.7893276810646057, 0.783119797706604, 0.7864218950271606, 0.7948752045631409, 0.7952714562416077, 0.7994980812072754, 0.8050455451011658, 0.8125742673873901, 0.8141592741012573, 0.826310932636261, 0.8290846943855286, 0.8247259259223938, 0.8309338092803955, 0.8304054737091064, 0.835160493850708, 0.8363492488861084, 0.8385946154594421, 0.8417646288871765, 0.8490291833877563, 0.8488970994949341, 0.8475762605667114, 0.8525954484939575, 0.8507462739944458, 0.8590674996376038, 0.8557654023170471, 0.852859616279602, 0.8557654023170471, 0.8647470474243164, 0.8671245574951172, 0.8650112152099609, 0.8691058158874512, 0.8650112152099609, 0.8691058158874512, 0.8716153502464294, 0.8720116019248962, 0.872407853603363, 0.8758420348167419, 0.8754457831382751, 0.8792761564254761, 0.8803328275680542, 0.8820499181747437, 0.8831065893173218, 0.8809932470321655, 0.8903711438179016, 0.8877294659614563, 0.8891823887825012, 0.8922203183174133, 0.8916919827461243, 0.8943336606025696, 0.9014661312103271], "val_loss": [2.2460074424743652, 2.0181093215942383, 1.1427034139633179, 0.8768512606620789, 0.7542232871055603, 0.7014994025230408, 0.6589694619178772, 0.6441271305084229, 0.6375056505203247, 0.6189611554145813, 0.5836709141731262, 0.5719016790390015, 0.5549405813217163, 0.5486330389976501, 0.5391672253608704, 0.5259710550308228, 0.5286324620246887, 0.523149311542511, 0.5088543891906738, 0.49515682458877563, 0.4938107132911682, 0.4969511330127716, 0.49182406067848206, 0.49277806282043457, 0.4927860498428345, 0.477916419506073, 0.46863850951194763, 0.4628930687904358, 0.46348872780799866, 0.4484753906726837, 0.44797074794769287, 0.44684091210365295, 0.43551701307296753, 0.43894845247268677, 0.45129647850990295, 0.44839155673980713, 0.44621017575263977, 0.443168044090271, 0.4271906316280365, 0.43726423382759094, 0.45500609278678894, 0.4434487223625183, 0.4306744337081909, 0.4407289922237396, 0.44009578227996826, 0.4415361285209656, 0.435517281293869, 0.45568233728408813, 0.46994954347610474, 0.4384914040565491, 0.441516637802124, 0.45627155900001526, 0.46242818236351013, 0.4693656265735626, 0.48002108931541443, 0.47573497891426086, 0.4672917425632477, 0.461905837059021, 0.4746159315109253, 0.49735262989997864, 0.4962899684906006, 0.4787176251411438, 0.4656030237674713, 0.46807295083999634, 0.46080687642097473, 0.4881344139575958, 0.5117527842521667], "val_accuracy": [0.4059999883174896, 0.46799999475479126, 0.6380000114440918, 0.6949999928474426, 0.7133333086967468, 0.7336666584014893, 0.7386666536331177, 0.7486666440963745, 0.7526666522026062, 0.7576666474342346, 0.7636666893959045, 0.7739999890327454, 0.7846666574478149, 0.781000018119812, 0.7910000085830688, 0.8019999861717224, 0.8009999990463257, 0.7986666560173035, 0.8026666641235352, 0.8040000200271606, 0.8109999895095825, 0.8086666464805603, 0.8223333358764648, 0.8143333196640015, 0.8169999718666077, 0.8256666660308838, 0.8326666951179504, 0.8323333263397217, 0.8360000252723694, 0.8393333554267883, 0.8416666388511658, 0.8423333168029785, 0.8416666388511658, 0.8460000157356262, 0.8503333330154419, 0.8529999852180481, 0.8463333249092102, 0.8513333201408386, 0.8536666631698608, 0.8500000238418579, 0.8533333539962769, 0.8533333539962769, 0.8543333411216736, 0.8536666631698608, 0.8529999852180481, 0.8523333072662354, 0.8569999933242798, 0.856333315372467, 0.8586666584014893, 0.8579999804496765, 0.8516666889190674, 0.8553333282470703, 0.8616666793823242, 0.8573333621025085, 0.8560000061988831, 0.8583333492279053, 0.8650000095367432, 0.8663333058357239, 0.8679999709129333, 0.8656666874885559, 0.8686666488647461, 0.8723333477973938, 0.8713333606719971, 0.8646666407585144, 0.8709999918937683, 0.8683333396911621, 0.8693333268165588]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8505714535713196, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2212367057800293, 1.8683642148971558, 1.3821680545806885, 1.0847125053405762, 0.9305180907249451, 0.838918149471283, 0.7770547270774841, 0.7219595909118652, 0.6860285401344299, 0.6655541062355042, 0.6375501751899719, 0.6126272678375244, 0.5966466665267944, 0.5768675804138184, 0.5684410333633423, 0.5440185070037842, 0.5181765556335449, 0.5114933848381042, 0.5025677680969238, 0.4929196536540985, 0.48238441348075867, 0.47119754552841187, 0.4737003445625305, 0.4621574878692627, 0.45039764046669006, 0.4325944483280182, 0.4319343566894531, 0.4278689920902252, 0.40808212757110596, 0.39620646834373474, 0.40450677275657654, 0.3904327154159546, 0.39244765043258667, 0.38372090458869934], "accuracy": [0.2810725271701813, 0.4772156774997711, 0.5737683176994324, 0.6280544400215149, 0.6762647032737732, 0.6995112895965576, 0.7218332886695862, 0.7386078238487244, 0.752212405204773, 0.7532690763473511, 0.7652885913848877, 0.7775723338127136, 0.7827235460281372, 0.7923656105995178, 0.7938185334205627, 0.8031964302062988, 0.8165367841720581, 0.8165367841720581, 0.8230088353157043, 0.8248580098152161, 0.8235371708869934, 0.830669641494751, 0.8293488025665283, 0.8345000743865967, 0.8411042094230652, 0.845859169960022, 0.8471800088882446, 0.8462554216384888, 0.8562937378883362, 0.8576145768165588, 0.8574824929237366, 0.86118084192276, 0.8660678863525391, 0.8617091774940491], "val_loss": [2.0377795696258545, 1.5019886493682861, 1.022745132446289, 0.8070541024208069, 0.7206725478172302, 0.6695035696029663, 0.6280513405799866, 0.5863036513328552, 0.5662838816642761, 0.5450921654701233, 0.5255608558654785, 0.5102638602256775, 0.5006909370422363, 0.48379653692245483, 0.47706079483032227, 0.46657344698905945, 0.4551941454410553, 0.4497521221637726, 0.4519491493701935, 0.44493407011032104, 0.4293094873428345, 0.4339602589607239, 0.41962602734565735, 0.4195057451725006, 0.41354501247406006, 0.41080406308174133, 0.3988330364227295, 0.40146541595458984, 0.39799121022224426, 0.3992740213871002, 0.3868934214115143, 0.39114636182785034, 0.38583242893218994, 0.3796120285987854], "val_accuracy": [0.5076666474342346, 0.6683333516120911, 0.6856666803359985, 0.7183333039283752, 0.7366666793823242, 0.7556666731834412, 0.7716666460037231, 0.7863333225250244, 0.7863333225250244, 0.8036666512489319, 0.8103333115577698, 0.8169999718666077, 0.8236666917800903, 0.8306666612625122, 0.8356666564941406, 0.8366666436195374, 0.8413333296775818, 0.8453333377838135, 0.8399999737739563, 0.8399999737739563, 0.8556666374206543, 0.8513333201408386, 0.8569999933242798, 0.8566666841506958, 0.8539999723434448, 0.8550000190734863, 0.8629999756813049, 0.8543333411216736, 0.8643333315849304, 0.8576666712760925, 0.8640000224113464, 0.8586666584014893, 0.8629999756813049, 0.862666666507721]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 1, 0], [0, 4, 6, 9], [0, 6], [0, 98], [1], [0], [2], [0]], "fitness": -0.8254285454750061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.688647747039795, 0.8920883536338806, 0.7012763619422913, 0.6444581151008606, 0.5858558416366577, 0.539965808391571, 0.490933358669281, 0.4671194851398468, 0.44383352994918823, 0.46322718262672424, 0.45941078662872314, 0.4381099343299866, 0.4281710982322693, 0.4173460602760315, 0.4273079037666321, 0.44450339674949646, 0.42525047063827515, 0.4542175829410553], "accuracy": [0.45528993010520935, 0.6819442510604858, 0.7457403540611267, 0.7730814814567566, 0.7917051911354065, 0.7976489067077637, 0.8170651197433472, 0.8308017253875732, 0.8343679904937744, 0.8317263126373291, 0.8359529972076416, 0.8396512866020203, 0.8446704745292664, 0.8494254350662231, 0.8397833704948425, 0.8539162874221802, 0.8580108284950256, 0.8560295701026917], "val_loss": [0.9361706376075745, 0.6730764508247375, 0.6170666217803955, 0.5759767293930054, 0.528033435344696, 0.48631182312965393, 0.48127588629722595, 0.47022321820259094, 0.47441938519477844, 0.5249265432357788, 0.5017141103744507, 0.5031348466873169, 0.5099271535873413, 0.4989800751209259, 0.6135616302490234, 0.5968008637428284, 0.6552024483680725, 0.6139787435531616], "val_accuracy": [0.6423333287239075, 0.7573333382606506, 0.7896666526794434, 0.7993333339691162, 0.8106666803359985, 0.8316666483879089, 0.840666651725769, 0.8493333458900452, 0.8403333425521851, 0.8420000076293945, 0.8339999914169312, 0.8503333330154419, 0.8529999852180481, 0.846666693687439, 0.8523333072662354, 0.8506666421890259, 0.8460000157356262, 0.8433333039283752]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 6, 4, 2, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 2, 3, 0, 2, 5, 7, 9], [3, 1, 0, 3], [16, 16], [0, 1, 0, 0, 1], [2, 0, 8], [0, 7], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 0, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 12, 8, 4, 2, 5, 3, 2, 1, 14, 7, 7, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1], [4, 2, 3, 0, 3], [0, 3, 0, 2], [39, 39], [1, 0], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 1], [0, 9], [0], [99], [0, 1, 1], [2], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0, 40]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 2, 1, 0, 1, 1, 2, 2, 0, 1, 3, 1, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3035852909088135, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 2, 3, 0, 3, 0, 2, 0, 5, 2, 4, 0, 3, 4, 0, 4, 4, 5, 6, 2, 2, 2, 8, 2, 2, 9, 9, 5], [0, 0, 1, 0, 2, 1, 3, 3, 2, 0, 0, 0, 0, 0, 0], [39, 39, 50, 35, 73, 44, 4, 1, 36, 45, 55], [0, 1], [0, 2, 3, 0, 3, 5], [0], [0], [0, 0, 1], [0, 5], [0], [99], [0, 1], [0], [1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 43, 28, 15, 11, 2, 1, 1, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.square(tf.math.add(grad, tf.math.pow(tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.negative(alpha), grad), grad)), tf.math.pow(tf.math.pow(tf.math.square(grad), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.sqrt(tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 5, 9], [0, 3, 0, 3], [16, 12, 77], [0, 1], [0], [0], [18], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 1, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.square(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}, "mapping_values": [1, 9, 5, 4, 2, 10, 7, 3, 3, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}]