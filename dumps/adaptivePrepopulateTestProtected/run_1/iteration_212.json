[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8585714101791382, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.291904926300049, 2.185335636138916, 1.7495474815368652, 1.3374383449554443, 1.0537285804748535, 0.9079095125198364, 0.8444864153862, 0.816076934337616, 0.7699854373931885, 0.7280044555664062, 0.6956436634063721, 0.6712775230407715, 0.6453644633293152, 0.6381971836090088, 0.6202440857887268, 0.5958027243614197, 0.6020258069038391, 0.57915198802948, 0.5547196269035339, 0.5500287413597107, 0.5360769629478455, 0.5308610796928406, 0.5127694010734558, 0.5077815055847168, 0.4955650568008423, 0.4861816465854645, 0.47840216755867004, 0.46669334173202515, 0.46579837799072266, 0.46312040090560913, 0.44393566250801086, 0.43256697058677673, 0.4147375524044037, 0.4271288812160492, 0.41223210096359253, 0.41712191700935364, 0.4171574115753174, 0.39979222416877747, 0.3940500020980835, 0.40471717715263367, 0.39100927114486694, 0.3922645151615143, 0.39282330870628357], "accuracy": [0.12495046854019165, 0.3237352967262268, 0.4414212107658386, 0.5480121374130249, 0.6468101739883423, 0.6707172393798828, 0.6966054439544678, 0.6977941989898682, 0.7103421092033386, 0.7240787148475647, 0.7358341217041016, 0.7405890822410583, 0.7576277852058411, 0.7532690763473511, 0.7650244235992432, 0.7666094303131104, 0.7720248103141785, 0.7847048044204712, 0.7840443849563599, 0.7890635132789612, 0.7917051911354065, 0.8041210174560547, 0.8094043135643005, 0.8050455451011658, 0.8079513907432556, 0.8145555257797241, 0.8145555257797241, 0.8185180425643921, 0.8204993009567261, 0.8182538747787476, 0.8334434032440186, 0.8356888294219971, 0.8444063067436218, 0.8429533839225769, 0.8429533839225769, 0.8363492488861084, 0.839519202709198, 0.8421608805656433, 0.8462554216384888, 0.8429533839225769, 0.8492933511734009, 0.8500858545303345, 0.8519350290298462], "val_loss": [2.2447102069854736, 2.009371519088745, 1.1208878755569458, 0.9448701739311218, 0.7601503729820251, 0.7064462900161743, 0.6575833559036255, 0.6504802107810974, 0.6560935974121094, 0.604777991771698, 0.5778937339782715, 0.5533812046051025, 0.5442230105400085, 0.5380484461784363, 0.5198689699172974, 0.5180225372314453, 0.5023927688598633, 0.49991899728775024, 0.4828692078590393, 0.4741131067276001, 0.47474828362464905, 0.4686810374259949, 0.45445555448532104, 0.44843512773513794, 0.43917322158813477, 0.4351469874382019, 0.4319400191307068, 0.430329293012619, 0.4280953109264374, 0.42450273036956787, 0.42812398076057434, 0.4172477722167969, 0.4140235185623169, 0.40986377000808716, 0.40769898891448975, 0.404695600271225, 0.4103833734989166, 0.40333935618400574, 0.41068407893180847, 0.406392902135849, 0.41749873757362366, 0.40729573369026184, 0.4065017104148865], "val_accuracy": [0.4116666615009308, 0.47066667675971985, 0.6463333368301392, 0.6729999780654907, 0.7226666808128357, 0.7353333234786987, 0.7456666827201843, 0.746999979019165, 0.746666669845581, 0.7606666684150696, 0.7670000195503235, 0.7753333449363708, 0.7863333225250244, 0.7749999761581421, 0.8026666641235352, 0.7923333048820496, 0.8050000071525574, 0.8066666722297668, 0.8116666674613953, 0.8106666803359985, 0.8096666932106018, 0.8130000233650208, 0.8183333277702332, 0.831333339214325, 0.8303333520889282, 0.8326666951179504, 0.8353333473205566, 0.8330000042915344, 0.8343333601951599, 0.8386666774749756, 0.8446666598320007, 0.8460000157356262, 0.8446666598320007, 0.8476666808128357, 0.847000002861023, 0.8510000109672546, 0.8473333120346069, 0.8566666841506958, 0.8556666374206543, 0.8519999980926514, 0.8500000238418579, 0.8539999723434448, 0.8519999980926514]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8571428656578064, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2236669063568115, 1.8735690116882324, 1.401210069656372, 1.0995632410049438, 0.9516605138778687, 0.8528556227684021, 0.7810455560684204, 0.7353827953338623, 0.7043368220329285, 0.6725738644599915, 0.6462368369102478, 0.614953875541687, 0.5974224209785461, 0.5800983309745789, 0.5728999972343445, 0.5434855818748474, 0.5336354970932007, 0.5208048820495605, 0.5078229904174805, 0.5047534108161926, 0.49196937680244446, 0.4873298406600952, 0.4686707556247711, 0.4572499096393585, 0.45108622312545776, 0.4370672404766083, 0.4394514858722687, 0.43125757575035095, 0.4209522604942322, 0.40763184428215027, 0.4000602066516876, 0.39944949746131897, 0.3944902718067169, 0.3860739767551422, 0.3802688419818878, 0.38282427191734314, 0.36456769704818726, 0.37323883175849915, 0.3636900782585144, 0.36050498485565186, 0.35454946756362915, 0.3461082875728607, 0.34712275862693787, 0.3468925952911377, 0.336701899766922, 0.32737046480178833, 0.32220080494880676, 0.325194388628006, 0.31667500734329224, 0.3090006709098816, 0.3060472905635834, 0.3022739291191101, 0.29572921991348267, 0.29587143659591675, 0.2924882173538208], "accuracy": [0.2712983787059784, 0.48646149039268494, 0.563730001449585, 0.6207898855209351, 0.6559239029884338, 0.6992471218109131, 0.71100252866745, 0.7329282760620117, 0.7416457533836365, 0.754589855670929, 0.763967752456665, 0.7738739848136902, 0.7788931727409363, 0.7819310426712036, 0.7909126877784729, 0.8063663840293884, 0.8070268034934998, 0.8101968169212341, 0.8170651197433472, 0.8166688680648804, 0.8231409192085266, 0.8276317715644836, 0.830669641494751, 0.8350284099578857, 0.8364813327789307, 0.842028796672821, 0.8445383906364441, 0.8492933511734009, 0.8494254350662231, 0.8498216867446899, 0.8557654023170471, 0.8577466607093811, 0.8590674996376038, 0.8615770936012268, 0.8627657890319824, 0.8605204224586487, 0.8714832663536072, 0.8646149635314941, 0.8704266548156738, 0.8665962219238281, 0.8734645247459412, 0.874389111995697, 0.873860776424408, 0.8772949576377869, 0.8809932470321655, 0.8791441321372986, 0.8824461698532104, 0.8837670087814331, 0.887201189994812, 0.8882578015327454, 0.889050304889679, 0.8902390599250793, 0.8919561505317688, 0.8945978283882141, 0.8938053250312805], "val_loss": [2.0429940223693848, 1.5249329805374146, 1.048276662826538, 0.8379678726196289, 0.7485712766647339, 0.6914561986923218, 0.6431693434715271, 0.6100804805755615, 0.5849244594573975, 0.5597242116928101, 0.5391178131103516, 0.5246288776397705, 0.5120927095413208, 0.4984453022480011, 0.4871962070465088, 0.47922825813293457, 0.4673832058906555, 0.4582587480545044, 0.4477747082710266, 0.44216471910476685, 0.4340461492538452, 0.43974870443344116, 0.42721566557884216, 0.4191206097602844, 0.4123843312263489, 0.4097025990486145, 0.40856117010116577, 0.3993474841117859, 0.3959589898586273, 0.39114558696746826, 0.3871957063674927, 0.3852214217185974, 0.3815080523490906, 0.37957504391670227, 0.3781501352787018, 0.3737246096134186, 0.374863862991333, 0.37554362416267395, 0.36708423495292664, 0.3641975522041321, 0.3670358955860138, 0.36090320348739624, 0.3631315529346466, 0.3575513958930969, 0.3559477627277374, 0.35128548741340637, 0.35081949830055237, 0.346600741147995, 0.34645912051200867, 0.3444359600543976, 0.3497045040130615, 0.3418053686618805, 0.3460310995578766, 0.3390994369983673, 0.33684229850769043], "val_accuracy": [0.5216666460037231, 0.6579999923706055, 0.6776666641235352, 0.706333339214325, 0.7266666889190674, 0.746999979019165, 0.7683333158493042, 0.7693333625793457, 0.7863333225250244, 0.7933333516120911, 0.8046666383743286, 0.8083333373069763, 0.8169999718666077, 0.8153333067893982, 0.8173333406448364, 0.8276666402816772, 0.824999988079071, 0.8293333053588867, 0.8379999995231628, 0.8423333168029785, 0.8403333425521851, 0.8363333344459534, 0.8420000076293945, 0.8483333587646484, 0.8503333330154419, 0.8500000238418579, 0.8503333330154419, 0.8536666631698608, 0.8553333282470703, 0.8550000190734863, 0.8579999804496765, 0.8600000143051147, 0.8643333315849304, 0.8619999885559082, 0.8603333234786987, 0.8676666617393494, 0.8610000014305115, 0.8629999756813049, 0.8686666488647461, 0.8693333268165588, 0.8619999885559082, 0.8700000047683716, 0.8669999837875366, 0.8736666440963745, 0.8686666488647461, 0.8743333220481873, 0.8683333396911621, 0.8759999871253967, 0.875, 0.8769999742507935, 0.8730000257492065, 0.875, 0.8726666569709778, 0.874666690826416, 0.8769999742507935]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 0, 0, 0, 1, 1], [0, 7, 5, 8, 1], [0, 2, 6], [0], [1], [0], [2], [0]], "fitness": -0.8320000171661377, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(tf.math.subtract(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5330851078033447, 0.8264532089233398, 0.6919394731521606, 0.6125690937042236, 0.5896373987197876, 0.5458900928497314, 0.5092257857322693, 0.4893925189971924, 0.4707278311252594, 0.46847063302993774, 0.47559335827827454, 0.4583759009838104, 0.4509623348712921, 0.4641766846179962, 0.48706862330436707, 0.5269908905029297, 0.5363914966583252, 0.5148465037345886], "accuracy": [0.48831066489219666, 0.7077004313468933, 0.7432307600975037, 0.778761088848114, 0.7783648371696472, 0.793950617313385, 0.8132346868515015, 0.8170651197433472, 0.8235371708869934, 0.8265751004219055, 0.8313300609588623, 0.8294808864593506, 0.8401796221733093, 0.8379341959953308, 0.8368775844573975, 0.822348415851593, 0.8235371708869934, 0.8204993009567261], "val_loss": [0.8840997815132141, 0.5835965871810913, 0.5279350280761719, 0.5200092196464539, 0.5018956065177917, 0.5036734342575073, 0.5061904191970825, 0.5065770745277405, 0.4888186752796173, 0.48636317253112793, 0.5344738960266113, 0.5088091492652893, 0.5379807353019714, 0.5516997575759888, 0.5823172926902771, 0.5801565647125244, 0.6105153560638428, 0.6232722997665405], "val_accuracy": [0.6883333325386047, 0.7863333225250244, 0.7946666479110718, 0.8023333549499512, 0.8169999718666077, 0.8209999799728394, 0.8233333230018616, 0.8286666870117188, 0.8376666903495789, 0.8273333311080933, 0.8450000286102295, 0.843666672706604, 0.8476666808128357, 0.8396666646003723, 0.8396666646003723, 0.8216666579246521, 0.8343333601951599, 0.8370000123977661]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 4, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 0, 3, 5], [0, 1, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 9, 1, 1, 4, 2, 8], [0, 0, 0, 1, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 4, 2, 1, 2, 1, 1, 1, 16, 9, 7, 6], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha)), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 7, 5], [0, 4, 0, 3, 0, 0, 3, 1, 4, 0, 4], [49, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 24, 13, 11, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(tf.math.add(alpha, grad)))))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 6, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], [8, 3, 3, 6, 8, 1, 4, 2, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 4, 2, 0], [16, 24, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.304030418395996, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 9, 3, 0, 0], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [1, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [2, 3, 3, 4, 8, 6, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 6, 3, 3, 0, 2, 1, 1, 1, 12, 6, 6, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(alpha, tf.math.multiply(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3034451007843018, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}]