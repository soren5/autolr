[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223330497741699, 1.8670156002044678, 1.3935511112213135, 1.1012579202651978, 0.9477801322937012, 0.8379126191139221, 0.7764281630516052, 0.7235901951789856, 0.6839449405670166, 0.6511124968528748, 0.6340097188949585, 0.6069210171699524, 0.5817078948020935, 0.5635776519775391, 0.5524153113365173, 0.5367791652679443, 0.5212588906288147, 0.5178380608558655, 0.5019086003303528, 0.4879888892173767, 0.4858485460281372, 0.4747111201286316, 0.45951735973358154, 0.4532293975353241, 0.4492609202861786, 0.4330301284790039, 0.4310648441314697, 0.42051371932029724, 0.41327017545700073, 0.4060419201850891, 0.3997148871421814, 0.39729252457618713, 0.3869434893131256, 0.3869549036026001, 0.38186177611351013, 0.3692651391029358, 0.36346086859703064, 0.3634459972381592, 0.3600703179836273, 0.3489670753479004, 0.3429599404335022, 0.34309908747673035, 0.3401198089122772, 0.3303268253803253, 0.3301240801811218, 0.3276282846927643, 0.3180643618106842, 0.3136589229106903, 0.3090694546699524, 0.3071834146976471, 0.3011736273765564, 0.30332496762275696, 0.29351481795310974, 0.2937680780887604], "accuracy": [0.26680755615234375, 0.49451854825019836, 0.5679566860198975, 0.6209219098091125, 0.6646413803100586, 0.7078325152397156, 0.7234182953834534, 0.7387399077415466, 0.7541936039924622, 0.7672698497772217, 0.7677981853485107, 0.7820631265640259, 0.7897239327430725, 0.7977809906005859, 0.798309326171875, 0.8082155585289001, 0.8138951063156128, 0.8094043135643005, 0.822348415851593, 0.8269713521003723, 0.8208954930305481, 0.8310658931732178, 0.8350284099578857, 0.8367455005645752, 0.8368775844573975, 0.8444063067436218, 0.843481719493866, 0.850350022315979, 0.8502179384231567, 0.8570862412452698, 0.857218325138092, 0.8574824929237366, 0.8610487580299377, 0.8610487580299377, 0.8607845902442932, 0.8658037185668945, 0.8701624870300293, 0.8689737319946289, 0.8708229064941406, 0.8792761564254761, 0.8798044919967651, 0.8765024542808533, 0.8765024542808533, 0.8824461698532104, 0.880729079246521, 0.8844274282455444, 0.8838990926742554, 0.8887861371040344, 0.8878615498542786, 0.8903711438179016, 0.8924844861030579, 0.8912957310676575, 0.8976356983184814, 0.8960506916046143], "val_loss": [2.040694236755371, 1.5166728496551514, 1.045767068862915, 0.8421168327331543, 0.7569165229797363, 0.7011509537696838, 0.6573318839073181, 0.6179470419883728, 0.5908101201057434, 0.5737177133560181, 0.5541383624076843, 0.5365487933158875, 0.518412172794342, 0.5104728937149048, 0.49868762493133545, 0.485697478055954, 0.48461878299713135, 0.46694132685661316, 0.459992378950119, 0.44818419218063354, 0.45110249519348145, 0.4507465958595276, 0.4339507520198822, 0.4287099242210388, 0.42590731382369995, 0.4119842052459717, 0.4104468524456024, 0.4069807529449463, 0.40372517704963684, 0.3985708951950073, 0.3967111110687256, 0.39305025339126587, 0.39346253871917725, 0.3906964063644409, 0.3815464675426483, 0.3792845904827118, 0.37928369641304016, 0.3762374818325043, 0.37582898139953613, 0.37387406826019287, 0.3717586398124695, 0.36671704053878784, 0.363382488489151, 0.36401286721229553, 0.3619881868362427, 0.35666540265083313, 0.3588123917579651, 0.3541429042816162, 0.35232576727867126, 0.35342442989349365, 0.3524846136569977, 0.34847813844680786, 0.34814298152923584, 0.35015836358070374], "val_accuracy": [0.5323333144187927, 0.6446666717529297, 0.6756666898727417, 0.7043333053588867, 0.7239999771118164, 0.7493333220481873, 0.753000020980835, 0.7706666588783264, 0.7820000052452087, 0.7873333096504211, 0.7956666946411133, 0.800000011920929, 0.8136666417121887, 0.812666654586792, 0.8199999928474426, 0.824999988079071, 0.8246666789054871, 0.8326666951179504, 0.8303333520889282, 0.8376666903495789, 0.8333333134651184, 0.8343333601951599, 0.8446666598320007, 0.843666672706604, 0.846666693687439, 0.8513333201408386, 0.8546666502952576, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8529999852180481, 0.859333336353302, 0.8546666502952576, 0.8569999933242798, 0.8606666922569275, 0.8633333444595337, 0.8643333315849304, 0.8629999756813049, 0.8576666712760925, 0.8703333139419556, 0.8640000224113464, 0.8643333315849304, 0.8676666617393494, 0.8663333058357239, 0.8713333606719971, 0.871999979019165, 0.8693333268165588, 0.8693333268165588, 0.878000020980835, 0.8756666779518127, 0.8706666827201843, 0.8756666779518127, 0.8769999742507935, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8665714263916016, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2225184440612793, 1.8615318536758423, 1.3788104057312012, 1.0927633047103882, 0.9238193035125732, 0.8324421644210815, 0.7741703391075134, 0.7204383015632629, 0.7005961537361145, 0.6648251414299011, 0.637958288192749, 0.6165608167648315, 0.6059179306030273, 0.590798020362854, 0.5661599636077881, 0.5541956424713135, 0.5389979481697083, 0.5216872096061707, 0.5135294795036316, 0.5060043931007385, 0.4962257146835327, 0.4831373691558838, 0.4762139320373535, 0.4658898115158081, 0.4623998701572418, 0.43892475962638855, 0.441998690366745, 0.4264897108078003, 0.42497649788856506, 0.41996145248413086, 0.4144880175590515, 0.4014902710914612, 0.3997457027435303, 0.39332783222198486, 0.38983193039894104, 0.3873010575771332, 0.37624576687812805, 0.37777644395828247, 0.36734825372695923, 0.3646804690361023, 0.36316195130348206, 0.3558619022369385, 0.3515251874923706, 0.3425288796424866, 0.3424757719039917, 0.3378959894180298, 0.3342950940132141], "accuracy": [0.27420419454574585, 0.4947827160358429, 0.5705983638763428, 0.6199973821640015, 0.6701889038085938, 0.7104741930961609, 0.7182670831680298, 0.7412495017051697, 0.7479857206344604, 0.7617223858833313, 0.7658169269561768, 0.7792893648147583, 0.785629391670227, 0.783119797706604, 0.7954035401344299, 0.8006868362426758, 0.8026680946350098, 0.8148196935653687, 0.8170651197433472, 0.8153480291366577, 0.8204993009567261, 0.8281601071357727, 0.8297450542449951, 0.8387266993522644, 0.8372738361358643, 0.8441421389579773, 0.8429533839225769, 0.850350022315979, 0.8504821062088013, 0.8500858545303345, 0.8561616539955139, 0.8581429123878479, 0.8569541573524475, 0.8590674996376038, 0.863558292388916, 0.8601241707801819, 0.8640866279602051, 0.8634262084960938, 0.8681812286376953, 0.8661999702453613, 0.8681812286376953, 0.8758420348167419, 0.8758420348167419, 0.8762382864952087, 0.8802007436752319, 0.8790120482444763, 0.8809932470321655], "val_loss": [2.0334553718566895, 1.4998092651367188, 1.0263423919677734, 0.8174658417701721, 0.7332284450531006, 0.6709503531455994, 0.639519989490509, 0.5997321605682373, 0.571361243724823, 0.5450903177261353, 0.5385122299194336, 0.5092995762825012, 0.49944746494293213, 0.4881235659122467, 0.47385725378990173, 0.46174830198287964, 0.4480944871902466, 0.4475230574607849, 0.4348481297492981, 0.4363718330860138, 0.42703649401664734, 0.41836199164390564, 0.40860167145729065, 0.4067939519882202, 0.40224581956863403, 0.3926948308944702, 0.39007657766342163, 0.3838059604167938, 0.3849673569202423, 0.37671318650245667, 0.371394544839859, 0.3695598840713501, 0.36484792828559875, 0.36434489488601685, 0.361008882522583, 0.35533037781715393, 0.35602208971977234, 0.3506462275981903, 0.3462771773338318, 0.3454661965370178, 0.3443085551261902, 0.33982136845588684, 0.3411639630794525, 0.33552151918411255, 0.33739957213401794, 0.33712470531463623, 0.33563995361328125], "val_accuracy": [0.5220000147819519, 0.6650000214576721, 0.6830000281333923, 0.7133333086967468, 0.7403333187103271, 0.7540000081062317, 0.7616666555404663, 0.7839999794960022, 0.7883333563804626, 0.8059999942779541, 0.7953333258628845, 0.8163333535194397, 0.8243333101272583, 0.8256666660308838, 0.8306666612625122, 0.8339999914169312, 0.8453333377838135, 0.8389999866485596, 0.8416666388511658, 0.8500000238418579, 0.8483333587646484, 0.8560000061988831, 0.8569999933242798, 0.8569999933242798, 0.859000027179718, 0.8636666536331177, 0.8646666407585144, 0.8669999837875366, 0.8646666407585144, 0.8690000176429749, 0.8683333396911621, 0.8740000128746033, 0.8709999918937683, 0.8696666955947876, 0.8713333606719971, 0.875333309173584, 0.8759999871253967, 0.8769999742507935, 0.8803333044052124, 0.8763333559036255, 0.8790000081062317, 0.8823333382606506, 0.8803333044052124, 0.8820000290870667, 0.8806666731834412, 0.8790000081062317, 0.878000020980835]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0], [0, 9], [0], [0], [1], [0], [2], [0]], "fitness": -0.8414285778999329, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.611021876335144, 0.8622087836265564, 0.6947681307792664, 0.613723874092102, 0.5685131549835205, 0.5318211317062378, 0.5188199281692505, 0.4914887547492981, 0.4769761264324188, 0.48098233342170715, 0.58807373046875, 0.5436949133872986, 0.5243420600891113, 0.5429292917251587, 0.5206555724143982, 0.5060319900512695, 0.5287752747535706, 0.549854040145874, 0.5487194061279297], "accuracy": [0.469819039106369, 0.7079645991325378, 0.7506273984909058, 0.7741381525993347, 0.7906485199928284, 0.8064984679222107, 0.8158763647079468, 0.8261788487434387, 0.8247259259223938, 0.833179235458374, 0.8057059645652771, 0.8042530417442322, 0.8173292875289917, 0.8230088353157043, 0.8238013386726379, 0.8272355198860168, 0.8261788487434387, 0.817461371421814, 0.8090080618858337], "val_loss": [0.9460298418998718, 0.6393218636512756, 0.562220573425293, 0.5231292843818665, 0.5258199572563171, 0.5134171843528748, 0.5048280954360962, 0.502595841884613, 0.5260251760482788, 0.5900788307189941, 0.5681983828544617, 0.5373841524124146, 0.5237775444984436, 0.5887833833694458, 0.5757400989532471, 0.5318892598152161, 0.5584679245948792, 0.5711987614631653, 0.608458399772644], "val_accuracy": [0.6679999828338623, 0.7689999938011169, 0.7879999876022339, 0.8043333292007446, 0.809333324432373, 0.8240000009536743, 0.8223333358764648, 0.8286666870117188, 0.8320000171661377, 0.8216666579246521, 0.8256666660308838, 0.8143333196640015, 0.8270000219345093, 0.8339999914169312, 0.8206666707992554, 0.8256666660308838, 0.8306666612625122, 0.8240000009536743, 0.8256666660308838]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 7, 3, 4], [0, 4, 0, 1], [0, 96], [0, 0, 0, 1, 0, 1], [0, 8, 4, 5], [0, 6], [0], [0, 1], [0], [1], [0]], "fitness": -0.8225714564323425, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2930023670196533, 2.1913294792175293, 1.7720680236816406, 1.327843189239502, 1.0914695262908936, 0.9146175980567932, 0.8584529757499695, 0.8308004140853882, 0.7672191262245178, 0.7519316077232361, 0.7157847285270691, 0.6937195062637329, 0.6565272808074951, 0.6253576874732971, 0.60733962059021, 0.5959328413009644, 0.5727860927581787, 0.5687971115112305, 0.5599223971366882, 0.5316892266273499, 0.5220866799354553, 0.520248532295227, 0.5101382732391357, 0.5033178329467773, 0.48996293544769287, 0.47374168038368225, 0.46262919902801514, 0.44782230257987976, 0.44095712900161743, 0.4273037910461426, 0.42588067054748535, 0.41714468598365784, 0.4129212200641632, 0.39667263627052307, 0.4079703390598297, 0.3857346177101135, 0.3854086995124817, 0.37769371271133423, 0.37156176567077637, 0.36980709433555603, 0.36411145329475403, 0.36210882663726807, 0.3632150888442993, 0.3453895151615143, 0.3491016924381256], "accuracy": [0.12257297337055206, 0.33047154545783997, 0.43930789828300476, 0.544181764125824, 0.6300356388092041, 0.6642451286315918, 0.6775855422019958, 0.6983225345611572, 0.6988508701324463, 0.7160216569900513, 0.7283053994178772, 0.7396644949913025, 0.7519482374191284, 0.7607977986335754, 0.7726852297782898, 0.769911527633667, 0.7807422876358032, 0.7872143983840942, 0.7910447716712952, 0.7940827012062073, 0.8014793395996094, 0.7988376617431641, 0.8087438941001892, 0.8108572363853455, 0.8124422430992126, 0.8170651197433472, 0.826310932636261, 0.8300092220306396, 0.8249900937080383, 0.8317263126373291, 0.8354246616363525, 0.8461233377456665, 0.8392550349235535, 0.8495575189590454, 0.8454629778862, 0.8525954484939575, 0.8552370667457581, 0.8543124794960022, 0.858671247959137, 0.8568220734596252, 0.8605204224586487, 0.8638224601745605, 0.8648791313171387, 0.8685774803161621, 0.8663320541381836], "val_loss": [2.247629165649414, 2.024078130722046, 1.1463512182235718, 0.8994519114494324, 0.7725491523742676, 0.7235163450241089, 0.7162999510765076, 0.6922213435173035, 0.6567649245262146, 0.6354882121086121, 0.5926914215087891, 0.5667455792427063, 0.5489605665206909, 0.5440925359725952, 0.5288472175598145, 0.5168171525001526, 0.5022322535514832, 0.4996083974838257, 0.49404749274253845, 0.49467703700065613, 0.4873570203781128, 0.48439985513687134, 0.4900859296321869, 0.4726739823818207, 0.4720701575279236, 0.45987069606781006, 0.4631494879722595, 0.44317135214805603, 0.4314412474632263, 0.4405002295970917, 0.42056983709335327, 0.42138218879699707, 0.419617235660553, 0.4175395369529724, 0.4243357479572296, 0.40587317943573, 0.4100601375102997, 0.39780697226524353, 0.4026221036911011, 0.39489635825157166, 0.39793577790260315, 0.40422502160072327, 0.38638386130332947, 0.418242484331131, 0.39988794922828674], "val_accuracy": [0.40966665744781494, 0.43166667222976685, 0.6383333206176758, 0.6710000038146973, 0.7136666774749756, 0.7286666631698608, 0.7326666712760925, 0.7366666793823242, 0.765666663646698, 0.765333354473114, 0.7866666913032532, 0.781000018119812, 0.7976666688919067, 0.8029999732971191, 0.79666668176651, 0.8073333501815796, 0.8173333406448364, 0.8203333616256714, 0.8190000057220459, 0.8190000057220459, 0.831333339214325, 0.8366666436195374, 0.828000009059906, 0.8416666388511658, 0.8353333473205566, 0.8373333215713501, 0.8383333086967468, 0.8463333249092102, 0.8550000190734863, 0.8543333411216736, 0.8613333106040955, 0.8556666374206543, 0.8613333106040955, 0.8619999885559082, 0.8619999885559082, 0.8643333315849304, 0.8669999837875366, 0.8686666488647461, 0.8703333139419556, 0.8730000257492065, 0.8686666488647461, 0.871999979019165, 0.8723333477973938, 0.8700000047683716, 0.8676666617393494]}, "mapping_values": [1, 10, 5, 5, 3, 9, 5, 4, 2, 6, 4, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [2, 2, 3, 0, 3, 0, 7, 7, 0, 4, 3, 3, 0], [0, 1, 0, 2, 3, 1, 0, 0, 2, 2], [39, 39, 19, 96], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 0, 6, 2, 8, 2], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 13, 10, 4, 9, 5, 4, 1, 2, 1, 1, 1, 22, 12, 10, 6], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.negative(tf.math.add(tf.math.add(grad, tf.math.negative(alpha)), tf.math.pow(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), grad), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))), sigma)), tf.math.sqrt(tf.math.add(alpha, beta))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 3], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 9, 0, 1, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 3, 8, 1, 4, 1, 4, 5, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 42, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 4, 3, 1, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.303338050842285, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [8, 2, 3, 0, 4], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 2, 1, 0, 3, 6, 5, 5], [0, 2, 3, 3, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [6, 3, 8, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 97, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 13, 8, 5, 1, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.divide_no_nan(tf.math.square(grad), grad), tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha)", "other_info": {"loss": [29.315170288085938, 81.29094696044922, 117.3502197265625, 147.5251922607422, 171.68289184570312, 200.34983825683594], "accuracy": [0.10236428678035736, 0.09734513610601425, 0.09747721254825592, 0.09589222073554993, 0.1026284471154213, 0.09840179979801178], "val_loss": [49.855228424072266, 79.3208236694336, 102.4412841796875, 123.25737762451172, 143.1082763671875, 162.56300354003906], "val_accuracy": [0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 82], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 3, 0, 1, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 3, 0, 0, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09514285624027252, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(sigma), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, grad), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3098363876342773, 2.308875560760498, 2.311802625656128, 2.310637950897217, 2.3095664978027344, 2.310605764389038, 2.309911012649536, 2.3100414276123047, 2.3102054595947266, 2.3110244274139404, 2.3112637996673584, 2.3119325637817383, 2.3103840351104736, 2.310361385345459], "accuracy": [0.0940430611371994, 0.09642054885625839, 0.08625016361474991, 0.09179764986038208, 0.0944393053650856, 0.08928807079792023, 0.09391097724437714, 0.09153348207473755, 0.09457138925790787, 0.08902391046285629, 0.09074098616838455, 0.09179764986038208, 0.09325055778026581, 0.08968432247638702], "val_loss": [2.3080368041992188, 2.3080482482910156, 2.3080615997314453, 2.3080763816833496, 2.3080894947052, 2.3081018924713135, 2.3081119060516357, 2.3081247806549072, 2.3081374168395996, 2.3081562519073486, 2.308177947998047, 2.3082005977630615, 2.308216094970703, 2.308225631713867], "val_accuracy": [0.09600000083446503, 0.09666666388511658, 0.09733333438634872, 0.09799999743700027, 0.0976666659116745, 0.09833333641290665, 0.09866666793823242, 0.09866666793823242, 0.09933333098888397, 0.09933333098888397, 0.09866666793823242, 0.0989999994635582, 0.09933333098888397, 0.09933333098888397]}, "mapping_values": [1, 7, 4, 3, 2, 6, 4, 2, 1, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 13}]