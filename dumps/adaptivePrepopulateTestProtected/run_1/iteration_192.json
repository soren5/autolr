[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8617143034934998, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2930634021759033, 2.188244104385376, 1.768293857574463, 1.3645092248916626, 1.064042091369629, 0.9178801774978638, 0.8391104936599731, 0.801801323890686, 0.7498461604118347, 0.7463554739952087, 0.6967335343360901, 0.6742570996284485, 0.6556721329689026, 0.6142887473106384, 0.6062561273574829, 0.5910817980766296, 0.5695681571960449, 0.5651215314865112, 0.5541194677352905, 0.5442984104156494, 0.5216071009635925, 0.5211435556411743, 0.5002523064613342, 0.49438032507896423, 0.47355353832244873, 0.46320003271102905, 0.4500172734260559, 0.44059616327285767, 0.43468838930130005, 0.4324445426464081, 0.4239097237586975, 0.42040717601776123, 0.4068948030471802, 0.39653801918029785, 0.39211195707321167, 0.3913121521472931, 0.37274667620658875, 0.3713345229625702, 0.36401769518852234, 0.3787924647331238, 0.3586917817592621, 0.3520382344722748, 0.3340890109539032, 0.34061184525489807, 0.32452377676963806, 0.3282763361930847], "accuracy": [0.12600713968276978, 0.32584863901138306, 0.4431383013725281, 0.5391625761985779, 0.6322810649871826, 0.6585655808448792, 0.6844538450241089, 0.7047945857048035, 0.7096816897392273, 0.7079645991325378, 0.7339849472045898, 0.7454761862754822, 0.7471932172775269, 0.76542067527771, 0.7671377658843994, 0.7777044177055359, 0.7836481332778931, 0.776251494884491, 0.7837802171707153, 0.7880068421363831, 0.7906485199928284, 0.7976489067077637, 0.8112534880638123, 0.8083476424217224, 0.8193105459213257, 0.8214238286018372, 0.8265751004219055, 0.8277638554573059, 0.8334434032440186, 0.8308017253875732, 0.8366134166717529, 0.8301413059234619, 0.8397833704948425, 0.8488970994949341, 0.8494254350662231, 0.8494254350662231, 0.8557654023170471, 0.8582749962806702, 0.8597279191017151, 0.8504821062088013, 0.8589354157447815, 0.8642187118530273, 0.8642187118530273, 0.8636903762817383, 0.8665962219238281, 0.8691058158874512], "val_loss": [2.246788740158081, 2.0178823471069336, 1.1399234533309937, 0.8695359826087952, 0.7529293894767761, 0.6926255822181702, 0.6592618227005005, 0.6417985558509827, 0.6218295693397522, 0.5980126261711121, 0.5733538269996643, 0.5498254299163818, 0.533003568649292, 0.5063111186027527, 0.4913784861564636, 0.48862719535827637, 0.48818260431289673, 0.471226304769516, 0.48197293281555176, 0.4668256938457489, 0.4623381495475769, 0.46165576577186584, 0.4538683593273163, 0.4503430128097534, 0.4407171308994293, 0.44227075576782227, 0.43645402789115906, 0.4423692524433136, 0.44488751888275146, 0.4321725368499756, 0.4217517375946045, 0.42768505215644836, 0.4178285598754883, 0.4184669256210327, 0.427621990442276, 0.417186439037323, 0.4146575629711151, 0.4190433621406555, 0.41312769055366516, 0.4085533320903778, 0.41036275029182434, 0.42178475856781006, 0.4126324951648712, 0.4240371584892273, 0.43063053488731384, 0.4392262399196625], "val_accuracy": [0.4189999997615814, 0.46000000834465027, 0.6503333449363708, 0.6953333616256714, 0.7099999785423279, 0.7300000190734863, 0.7366666793823242, 0.7396666407585144, 0.7566666603088379, 0.7753333449363708, 0.7723333239555359, 0.7893333435058594, 0.793666660785675, 0.8029999732971191, 0.8066666722297668, 0.8016666769981384, 0.8166666626930237, 0.8159999847412109, 0.8090000152587891, 0.8240000009536743, 0.8286666870117188, 0.8270000219345093, 0.8349999785423279, 0.8323333263397217, 0.8396666646003723, 0.8393333554267883, 0.8446666598320007, 0.843999981880188, 0.8426666855812073, 0.8479999899864197, 0.8450000286102295, 0.8473333120346069, 0.8516666889190674, 0.8553333282470703, 0.8539999723434448, 0.8553333282470703, 0.8586666584014893, 0.8583333492279053, 0.8583333492279053, 0.8566666841506958, 0.8666666746139526, 0.8650000095367432, 0.859666645526886, 0.8646666407585144, 0.8610000014305115, 0.856333315372467]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8502857089042664, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2236428260803223, 1.872480869293213, 1.40232515335083, 1.090774655342102, 0.9428302645683289, 0.8475493788719177, 0.7694558501243591, 0.7244157195091248, 0.6847839951515198, 0.6587146520614624, 0.6267308592796326, 0.6120218634605408, 0.5870313048362732, 0.5720087885856628, 0.5625134110450745, 0.5410250425338745, 0.535362720489502, 0.519925594329834, 0.49884214997291565, 0.4988069236278534, 0.48719966411590576, 0.4772050380706787, 0.4670742154121399, 0.45707425475120544, 0.4446772038936615, 0.44726160168647766, 0.4293874502182007, 0.42759042978286743, 0.4262966215610504, 0.4107304811477661, 0.41193822026252747, 0.3965001106262207, 0.3883238434791565, 0.3845025300979614, 0.3856925070285797, 0.3806644082069397, 0.36864617466926575, 0.36391681432724, 0.36098143458366394, 0.3545789420604706, 0.3457236886024475, 0.35392794013023376, 0.3460312485694885, 0.33969590067863464, 0.32462403178215027, 0.3320336639881134], "accuracy": [0.275260865688324, 0.4970281422138214, 0.5591071248054504, 0.6244881749153137, 0.6548672318458557, 0.6951525807380676, 0.7230220437049866, 0.7347774505615234, 0.7498348951339722, 0.7601373791694641, 0.7703077793121338, 0.7741381525993347, 0.791969358921051, 0.796328067779541, 0.7938185334205627, 0.8042530417442322, 0.8079513907432556, 0.8108572363853455, 0.8220842480659485, 0.8201030492782593, 0.8238013386726379, 0.8286884427070618, 0.8350284099578857, 0.8334434032440186, 0.8374059200286865, 0.837537944316864, 0.8471800088882446, 0.8491612672805786, 0.8495575189590454, 0.8518029451370239, 0.8492933511734009, 0.8576145768165588, 0.8644828796386719, 0.8627657890319824, 0.8570862412452698, 0.8617091774940491, 0.8684453964233398, 0.8687095642089844, 0.869502067565918, 0.8704266548156738, 0.8758420348167419, 0.8710870146751404, 0.8729361891746521, 0.878351628780365, 0.8805969953536987, 0.8809932470321655], "val_loss": [2.0415236949920654, 1.5183788537979126, 1.0474213361740112, 0.8384033441543579, 0.7532727718353271, 0.6946006417274475, 0.6475530862808228, 0.616465151309967, 0.5882710218429565, 0.5685279965400696, 0.5504239797592163, 0.5324842929840088, 0.5181977152824402, 0.5044310092926025, 0.501310408115387, 0.48774945735931396, 0.4754946231842041, 0.4727843105792999, 0.4636264741420746, 0.45739641785621643, 0.44792965054512024, 0.4444087743759155, 0.4437845051288605, 0.4390876889228821, 0.42433080077171326, 0.4268096387386322, 0.4186494052410126, 0.4171806573867798, 0.40903913974761963, 0.4106394946575165, 0.4044221043586731, 0.400068998336792, 0.3964199721813202, 0.39296501874923706, 0.3925741910934448, 0.39077669382095337, 0.38935214281082153, 0.38615694642066956, 0.3829309046268463, 0.37961849570274353, 0.3738919198513031, 0.37663203477859497, 0.3775612711906433, 0.3746146261692047, 0.37303343415260315, 0.3717302680015564], "val_accuracy": [0.5669999718666077, 0.6700000166893005, 0.6926666498184204, 0.7173333168029785, 0.7316666841506958, 0.7480000257492065, 0.7590000033378601, 0.7699999809265137, 0.7736666798591614, 0.7900000214576721, 0.7889999747276306, 0.7976666688919067, 0.8033333420753479, 0.8109999895095825, 0.8136666417121887, 0.8153333067893982, 0.8240000009536743, 0.8246666789054871, 0.8183333277702332, 0.8299999833106995, 0.8320000171661377, 0.8356666564941406, 0.8346666693687439, 0.8346666693687439, 0.8429999947547913, 0.8393333554267883, 0.8423333168029785, 0.8456666469573975, 0.8460000157356262, 0.8456666469573975, 0.8483333587646484, 0.8519999980926514, 0.8523333072662354, 0.8539999723434448, 0.8519999980926514, 0.8519999980926514, 0.8553333282470703, 0.8576666712760925, 0.8556666374206543, 0.8600000143051147, 0.8636666536331177, 0.859666645526886, 0.8573333621025085, 0.862666666507721, 0.8606666922569275, 0.856333315372467]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8240000009536743, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5229233503341675, 0.8281919360160828, 0.6616618037223816, 0.6017714738845825, 0.5674613118171692, 0.5610421895980835, 0.5260739922523499, 0.5008089542388916, 0.5123913288116455, 0.4915454089641571, 0.46847569942474365, 0.46973565220832825, 0.4936898648738861], "accuracy": [0.4982168674468994, 0.7162858247756958, 0.7619865536689758, 0.7835160493850708, 0.7882710099220276, 0.798309326171875, 0.8121780753135681, 0.8190463781356812, 0.828292191028595, 0.8259146809577942, 0.832650899887085, 0.8389908671379089, 0.8247259259223938], "val_loss": [0.9800851941108704, 0.6058388948440552, 0.5413264036178589, 0.5174802541732788, 0.5079290270805359, 0.4851447641849518, 0.4921938478946686, 0.5134763717651367, 0.5118688344955444, 0.4854585826396942, 0.5205804705619812, 0.527121365070343, 0.525931715965271], "val_accuracy": [0.6516666412353516, 0.7733333110809326, 0.7993333339691162, 0.8080000281333923, 0.8183333277702332, 0.8220000267028809, 0.8330000042915344, 0.8386666774749756, 0.824999988079071, 0.8259999752044678, 0.8349999785423279, 0.8296666741371155, 0.8233333230018616]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 8, 3, 5, 6, 1, 6, 5, 8, 5, 2, 1], [0, 1, 0, 3, 4, 4, 3, 3, 4], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 32, 96, 99, 44, 16]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 23, 14, 9, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.square(tf.math.sqrt(tf.math.square(grad)))), tf.math.add(tf.math.subtract(grad, grad), grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [1, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [82, 16], [0, 1], [0], [3], [99], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0], [6, 3, 3, 1, 8, 1, 4, 1, 2, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [88, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 10, 6, 4, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3036344051361084, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 7, 6, 5], [0, 7, 5, 3], [78], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 0, 8, 1, 4, 1, 4, 2, 8], [0, 0, 3, 2, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 6, 3, 3, 2, 9, 5, 4, 1, 17, 9, 8, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), grad), grad), tf.math.square(sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(sigma, beta))))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 9, 3, 4, 3], [0, 1, 1, 2], [39, 7], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 8, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 4, 8, 6, 4, 3, 5, 7, 5, 8], [1, 0, 0, 3, 0, 0, 3, 1, 2, 0, 4, 7, 5, 1, 6], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 8, 5, 3, 2, 2, 1, 1, 1, 35, 20, 15, 5], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.pow(tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.math.pow(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(grad, grad))))))), tf.math.square(grad)), tf.math.add(tf.math.square(tf.math.sqrt(alpha)), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]