[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8628571629524231, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.225490093231201, 1.8724744319915771, 1.397426962852478, 1.0926988124847412, 0.9364943504333496, 0.8277405500411987, 0.7612382173538208, 0.7222661972045898, 0.6694281101226807, 0.6340366005897522, 0.6169217228889465, 0.6017257571220398, 0.5822647213935852, 0.5671393871307373, 0.5483019948005676, 0.5338005423545837, 0.5171096324920654, 0.5028443336486816, 0.4975241422653198, 0.4879348576068878, 0.4816085696220398, 0.47216349840164185, 0.462414413690567, 0.4575386643409729, 0.44497382640838623, 0.43556803464889526, 0.4326649308204651, 0.42295727133750916, 0.4174976050853729, 0.4066179394721985, 0.4020938277244568, 0.39339479804039, 0.38881510496139526, 0.3881570100784302, 0.37594345211982727, 0.3671903610229492, 0.3722250461578369, 0.36136120557785034, 0.35928770899772644, 0.3450556695461273], "accuracy": [0.2810725271701813, 0.4873860776424408, 0.568220853805542, 0.6169594526290894, 0.6705851554870605, 0.7034738063812256, 0.7235503792762756, 0.737022876739502, 0.76106196641922, 0.769911527633667, 0.7757231593132019, 0.7835160493850708, 0.7915731072425842, 0.7954035401344299, 0.8005547523498535, 0.8079513907432556, 0.8183859586715698, 0.8224804997444153, 0.8241975903511047, 0.8259146809577942, 0.8317263126373291, 0.8335754871368408, 0.8358209133148193, 0.8404437899589539, 0.8459912538528442, 0.8475762605667114, 0.8492933511734009, 0.8558974862098694, 0.8514066934585571, 0.8562937378883362, 0.8573504090309143, 0.8565579056739807, 0.86553955078125, 0.8638224601745605, 0.8671245574951172, 0.8716153502464294, 0.8671245574951172, 0.8713511824607849, 0.8745211958885193, 0.8796724081039429], "val_loss": [2.043928623199463, 1.5223708152770996, 1.0526586771011353, 0.8451414108276367, 0.7519435286521912, 0.6946263313293457, 0.6561166048049927, 0.623457670211792, 0.5926483273506165, 0.5710593461990356, 0.5521835684776306, 0.5397360920906067, 0.5233015418052673, 0.5096946358680725, 0.5078635811805725, 0.4980789124965668, 0.4784669578075409, 0.47338956594467163, 0.460135281085968, 0.4631514847278595, 0.4532502293586731, 0.4511964023113251, 0.44728270173072815, 0.44016504287719727, 0.4271897077560425, 0.42630159854888916, 0.41625070571899414, 0.41724833846092224, 0.41559919714927673, 0.40980756282806396, 0.4047715663909912, 0.40281373262405396, 0.3994620442390442, 0.39774051308631897, 0.3946276307106018, 0.3904019296169281, 0.38956958055496216, 0.39107784628868103, 0.3811744749546051, 0.37980473041534424], "val_accuracy": [0.5523333549499512, 0.6613333225250244, 0.6790000200271606, 0.7080000042915344, 0.734333336353302, 0.7486666440963745, 0.7649999856948853, 0.7693333625793457, 0.7863333225250244, 0.7870000004768372, 0.8006666898727417, 0.8056666851043701, 0.8130000233650208, 0.8196666836738586, 0.8190000057220459, 0.8276666402816772, 0.8336666822433472, 0.8320000171661377, 0.843999981880188, 0.8410000205039978, 0.8453333377838135, 0.8429999947547913, 0.843666672706604, 0.8456666469573975, 0.8533333539962769, 0.8516666889190674, 0.8579999804496765, 0.859000027179718, 0.856333315372467, 0.859333336353302, 0.8643333315849304, 0.8646666407585144, 0.8636666536331177, 0.8676666617393494, 0.8693333268165588, 0.8679999709129333, 0.8663333058357239, 0.8636666536331177, 0.8683333396911621, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8625714182853699, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292985200881958, 2.1893422603607178, 1.77583909034729, 1.3467758893966675, 1.0735435485839844, 0.9079946279525757, 0.8351041078567505, 0.8136110901832581, 0.7676265239715576, 0.7314633131027222, 0.6857613921165466, 0.6644396781921387, 0.6457147598266602, 0.6183416247367859, 0.5956839919090271, 0.6015645861625671, 0.5804309248924255, 0.5540220141410828, 0.5585930347442627, 0.5575048923492432, 0.5452473759651184, 0.5313971638679504, 0.5133823752403259, 0.5116971731185913, 0.5090214610099792, 0.49426060914993286, 0.4804328382015228, 0.4687750041484833, 0.46213120222091675, 0.45566198229789734, 0.45529070496559143, 0.45232972502708435, 0.43736451864242554, 0.43740251660346985, 0.43043723702430725, 0.41956934332847595, 0.4119732677936554, 0.41259732842445374, 0.4016852080821991, 0.39386025071144104, 0.3902919590473175, 0.3817402422428131, 0.3751879334449768, 0.37269583344459534, 0.36678996682167053, 0.34872525930404663, 0.34783777594566345, 0.35843899846076965, 0.33650481700897217], "accuracy": [0.12798838317394257, 0.3255844712257385, 0.44327038526535034, 0.5453705191612244, 0.6254127621650696, 0.6651697158813477, 0.6947563290596008, 0.6915863156318665, 0.7004358768463135, 0.713908314704895, 0.7341170310974121, 0.7416457533836365, 0.7537974119186401, 0.7584202885627747, 0.767930269241333, 0.772288978099823, 0.7721568942070007, 0.7884030938148499, 0.7844406366348267, 0.7845727205276489, 0.7882710099220276, 0.7967243194580078, 0.8013472557067871, 0.8035926818847656, 0.8054417967796326, 0.8096684813499451, 0.8161405324935913, 0.8173292875289917, 0.8210275769233704, 0.8273676037788391, 0.8256505131721497, 0.8241975903511047, 0.8334434032440186, 0.8364813327789307, 0.8359529972076416, 0.8302733898162842, 0.8438779711723328, 0.8444063067436218, 0.841500461101532, 0.8422929644584656, 0.8453308939933777, 0.8512746095657349, 0.8518029451370239, 0.857218325138092, 0.8521991968154907, 0.8643507957458496, 0.860652506351471, 0.86553955078125, 0.86118084192276], "val_loss": [2.2449159622192383, 2.014207601547241, 1.128782868385315, 0.8686671257019043, 0.7521039247512817, 0.705612063407898, 0.678605854511261, 0.6445980668067932, 0.6230088472366333, 0.6057249903678894, 0.5772068500518799, 0.5796341300010681, 0.5597937703132629, 0.5526929497718811, 0.554774820804596, 0.5319507718086243, 0.5190966129302979, 0.5347452163696289, 0.5213435292243958, 0.5078887343406677, 0.5071725249290466, 0.5012808442115784, 0.4851049780845642, 0.488616943359375, 0.48023632168769836, 0.4743994474411011, 0.4680299162864685, 0.4709668755531311, 0.45138517022132874, 0.4708925783634186, 0.4628089964389801, 0.4358963072299957, 0.4445340931415558, 0.44067227840423584, 0.42622828483581543, 0.42784374952316284, 0.4430457055568695, 0.46909675002098083, 0.4254183769226074, 0.4490453004837036, 0.4447260797023773, 0.44470685720443726, 0.43672701716423035, 0.431906521320343, 0.4397658705711365, 0.4360009431838989, 0.4460218548774719, 0.44094711542129517, 0.4357374310493469], "val_accuracy": [0.4203333258628845, 0.4793333411216736, 0.6536666750907898, 0.6853333115577698, 0.7353333234786987, 0.7303333282470703, 0.746666669845581, 0.7580000162124634, 0.7680000066757202, 0.7749999761581421, 0.7789999842643738, 0.7889999747276306, 0.7879999876022339, 0.7953333258628845, 0.7963333129882812, 0.8016666769981384, 0.8043333292007446, 0.8053333163261414, 0.8119999766349792, 0.8130000233650208, 0.8113333582878113, 0.8213333487510681, 0.8306666612625122, 0.8253333568572998, 0.8349999785423279, 0.8353333473205566, 0.8423333168029785, 0.843666672706604, 0.8456666469573975, 0.843666672706604, 0.8460000157356262, 0.8510000109672546, 0.8463333249092102, 0.8450000286102295, 0.8526666760444641, 0.8539999723434448, 0.859333336353302, 0.8576666712760925, 0.8600000143051147, 0.8446666598320007, 0.8503333330154419, 0.8576666712760925, 0.8603333234786987, 0.8646666407585144, 0.862666666507721, 0.8646666407585144, 0.862666666507721, 0.862666666507721, 0.8636666536331177]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8311428427696228, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.536564826965332, 0.8421720266342163, 0.7086361050605774, 0.6365941762924194, 0.5480530858039856, 0.5623860955238342, 0.5123758912086487, 0.5181882381439209, 0.5103647708892822, 0.501194417476654, 0.4867444932460785, 0.47948357462882996, 0.4692254662513733, 0.48916295170783997], "accuracy": [0.46770572662353516, 0.7113987803459167, 0.7530049085617065, 0.7695152759552002, 0.7988376617431641, 0.7895918488502502, 0.8068947196006775, 0.8227446675300598, 0.8186501264572144, 0.819442629814148, 0.8280280232429504, 0.8314621448516846, 0.828292191028595, 0.8401796221733093], "val_loss": [0.8715883493423462, 0.661098062992096, 0.6149352788925171, 0.5097913146018982, 0.5083534717559814, 0.5015687346458435, 0.5287644863128662, 0.521214485168457, 0.5516638159751892, 0.5636066794395447, 0.5769956707954407, 0.5939619541168213, 0.5446938276290894, 0.6571217179298401], "val_accuracy": [0.706333339214325, 0.765999972820282, 0.7829999923706055, 0.8050000071525574, 0.8183333277702332, 0.8119999766349792, 0.8116666674613953, 0.82833331823349, 0.8349999785423279, 0.8176666498184204, 0.8199999928474426, 0.8320000171661377, 0.8320000171661377, 0.8230000138282776]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [0, 1, 2, 2], [18, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 2, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [4, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 2, 4, 3, 6, 4, 4, 7, 1, 3, 3, 7, 7, 4, 5, 0, 8, 8, 8, 6, 2, 8, 0, 9, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 1, 7, 5, 3, 4, 2, 6, 7, 0, 0, 7, 4, 5], [16, 99, 96, 99, 61, 1, 13, 54, 38, 0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 8, 4, 4, 1, 2, 1, 1, 1, 58, 35, 23, 10], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.math.sqrt(sigma), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.pow(sigma, alpha), tf.math.multiply(tf.math.divide_no_nan(beta, tf.math.pow(tf.math.pow(tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha), tf.math.add(tf.math.add(grad, tf.math.pow(tf.math.square(tf.math.negative(grad)), sigma)), grad)), beta), tf.math.sqrt(grad)), grad), tf.math.sqrt(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), grad)))))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [8, 2, 3, 0, 3, 5], [3, 3, 0, 3], [16, 16], [1, 1], [2], [0], [99], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 4], [0, 0, 0, 3, 0, 4, 4, 1, 2, 0], [16, 99, 62, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 1, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(grad, grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303326368331909, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 2, 7, 4, 3, 1, 4, 6], [0, 1, 0, 2, 2, 3, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [4, 1, 3, 0, 3, 5], [0, 1, 2, 4, 0], [0, 33], [0, 1], [0], [0], [0], [1, 1], [0], [1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 8, 8, 3, 11, 6, 5, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.pow(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), grad), tf.math.pow(grad, tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(beta, tf.math.square(grad))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09391097724437714, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 8, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 1, 3], [26, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [5, 3, 6, 6, 2, 1, 4, 1, 4, 2, 8, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [90, 99, 96, 36, 61, 1]], "fitness": -0.0908571407198906, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 2, 1, 1, 1, 22, 12, 10, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(tf.math.negative(alpha)))), beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3087031841278076, 2.3096606731414795, 2.310622215270996, 2.311006784439087, 2.309569835662842, 2.3112828731536865], "accuracy": [0.09774138033390045, 0.09655263274908066, 0.08955223858356476, 0.09259014576673508, 0.09232597798109055, 0.09074098616838455], "val_loss": [2.30867862701416, 2.30867862701416, 2.30867862701416, 2.30867862701416, 2.30867862701416, 2.30867862701416], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]