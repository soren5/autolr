[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8654285669326782, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2257890701293945, 1.8788800239562988, 1.4177428483963013, 1.1120669841766357, 0.9515489339828491, 0.8585100173950195, 0.7875949740409851, 0.7335389256477356, 0.6937069296836853, 0.6586236953735352, 0.64061039686203, 0.6182577013969421, 0.5918325781822205, 0.5774681568145752, 0.5607559680938721, 0.5527429580688477, 0.5315852761268616, 0.516830563545227, 0.5000707507133484, 0.49735623598098755, 0.48393863439559937, 0.48074817657470703, 0.47443750500679016, 0.46758490800857544, 0.45273616909980774, 0.4509980380535126, 0.43275028467178345, 0.434029221534729, 0.416893869638443, 0.41429629921913147, 0.40657639503479004, 0.40451446175575256, 0.396206259727478, 0.39140617847442627, 0.3867516815662384, 0.3834100365638733, 0.3770342767238617, 0.37110230326652527, 0.3618658185005188, 0.35938987135887146], "accuracy": [0.2674679756164551, 0.48646149039268494, 0.5571258664131165, 0.6069211363792419, 0.6641130447387695, 0.6852463483810425, 0.7107383608818054, 0.7338528633117676, 0.7429665923118591, 0.7611940503120422, 0.7671377658843994, 0.7753269076347351, 0.7872143983840942, 0.7873464822769165, 0.7955356240272522, 0.7981772422790527, 0.8082155585289001, 0.8103289008140564, 0.8230088353157043, 0.8201030492782593, 0.8310658931732178, 0.8286884427070618, 0.8305375576019287, 0.8337075710296631, 0.837141752243042, 0.8401796221733093, 0.845859169960022, 0.8408400416374207, 0.8553691506385803, 0.8488970994949341, 0.8533879518508911, 0.856689989566803, 0.8553691506385803, 0.8582749962806702, 0.8610487580299377, 0.8632941246032715, 0.8654074668884277, 0.8664641380310059, 0.8681812286376953, 0.872407853603363], "val_loss": [2.0450103282928467, 1.528131365776062, 1.0572195053100586, 0.8424878120422363, 0.7517797946929932, 0.6964800357818604, 0.6459255218505859, 0.6085203886032104, 0.5840029120445251, 0.5531399846076965, 0.5375080704689026, 0.5206184983253479, 0.502072811126709, 0.492909699678421, 0.4787619709968567, 0.47456094622612, 0.4599674940109253, 0.4497532546520233, 0.44150373339653015, 0.43973079323768616, 0.4270026981830597, 0.4251233637332916, 0.4178939163684845, 0.4074994623661041, 0.40274927020072937, 0.40019139647483826, 0.4003554582595825, 0.39028194546699524, 0.3885555863380432, 0.38784658908843994, 0.37693050503730774, 0.37782740592956543, 0.3744042217731476, 0.3680785298347473, 0.3629317283630371, 0.3726784586906433, 0.3621138632297516, 0.35666894912719727, 0.3564167618751526, 0.35774779319763184], "val_accuracy": [0.5400000214576721, 0.6556666493415833, 0.6803333163261414, 0.7053333520889282, 0.7283333539962769, 0.7433333396911621, 0.7620000243186951, 0.7706666588783264, 0.7749999761581421, 0.7956666946411133, 0.8019999861717224, 0.8069999814033508, 0.8230000138282776, 0.82833331823349, 0.8253333568572998, 0.8233333230018616, 0.8383333086967468, 0.8429999947547913, 0.8399999737739563, 0.8410000205039978, 0.8506666421890259, 0.8510000109672546, 0.8543333411216736, 0.8539999723434448, 0.8553333282470703, 0.8586666584014893, 0.8560000061988831, 0.859666645526886, 0.8603333234786987, 0.8606666922569275, 0.8673333525657654, 0.8600000143051147, 0.8676666617393494, 0.8656666874885559, 0.8733333349227905, 0.8646666407585144, 0.8696666955947876, 0.8703333139419556, 0.8703333139419556, 0.8709999918937683]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1], [0, 1, 9, 0], [0], [0, 69], [0, 0, 0, 0, 0, 0, 1], [0, 7, 9, 8, 4, 9], [0], [0, 25, 32], [0, 1], [0], [1], [0]], "fitness": -0.8534285426139832, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.pow(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2922115325927734, 2.1861209869384766, 1.7427948713302612, 1.3190001249313354, 1.0746289491653442, 0.9131873250007629, 0.8521245121955872, 0.8194893002510071, 0.7669892311096191, 0.770470380783081, 0.7015368938446045, 0.6857361793518066, 0.6483343243598938, 0.6354019045829773, 0.61478590965271, 0.6036667823791504, 0.5920679569244385, 0.5904752612113953, 0.5696573853492737, 0.5607946515083313, 0.5586206912994385, 0.5486941933631897, 0.5325719118118286, 0.5272469520568848, 0.509223222732544, 0.5017796158790588, 0.4956434965133667, 0.48211029171943665, 0.48400962352752686, 0.4688466787338257, 0.46968692541122437, 0.45234233140945435, 0.4450520873069763, 0.4258626699447632, 0.42385685443878174, 0.4082799255847931, 0.40734225511550903, 0.3948610723018646, 0.39614591002464294, 0.3936498165130615, 0.3866192698478699, 0.36945998668670654, 0.36535051465034485, 0.36798879504203796, 0.3630395829677582, 0.3578604459762573, 0.3564271330833435, 0.3557119369506836, 0.35428884625434875], "accuracy": [0.1286487877368927, 0.3361510932445526, 0.44366663694381714, 0.55791836977005, 0.635451078414917, 0.6684718132019043, 0.6934354901313782, 0.694360077381134, 0.6991150379180908, 0.7062475085258484, 0.7331924438476562, 0.7359662055969238, 0.7539294958114624, 0.754589855670929, 0.7622507214546204, 0.7728173136711121, 0.7713643908500671, 0.7771760821342468, 0.7833839654922485, 0.7819310426712036, 0.7814027070999146, 0.7861577272415161, 0.7957997918128967, 0.798309326171875, 0.8054417967796326, 0.8113855719566345, 0.8072909712791443, 0.8162726163864136, 0.81112140417099, 0.822348415851593, 0.8168009519577026, 0.82683926820755, 0.828292191028595, 0.832650899887085, 0.8342359066009521, 0.8413683772087097, 0.8399154543876648, 0.8485008478164673, 0.8467837572097778, 0.8432175517082214, 0.8496896028518677, 0.8558974862098694, 0.8578787446022034, 0.8555012345314026, 0.8556333184242249, 0.8610487580299377, 0.8580108284950256, 0.8578787446022034, 0.8613129258155823], "val_loss": [2.2449886798858643, 2.009397506713867, 1.1092740297317505, 0.8585239052772522, 0.7744697332382202, 0.7112544178962708, 0.6958508491516113, 0.6492772102355957, 0.6432790756225586, 0.6407080292701721, 0.6072170734405518, 0.583075225353241, 0.5741598010063171, 0.5589295029640198, 0.5487976670265198, 0.5291903614997864, 0.5231290459632874, 0.5036357641220093, 0.5137611627578735, 0.49410107731819153, 0.49686935544013977, 0.4891098737716675, 0.48490583896636963, 0.47369930148124695, 0.4663655459880829, 0.47278842329978943, 0.46866071224212646, 0.45462411642074585, 0.4549046754837036, 0.4491158425807953, 0.4378001391887665, 0.4378495216369629, 0.42979833483695984, 0.43397387862205505, 0.4362355172634125, 0.4217405617237091, 0.4233761429786682, 0.4321196377277374, 0.41901201009750366, 0.39999088644981384, 0.3984432518482208, 0.39954784512519836, 0.4103662371635437, 0.4122937321662903, 0.4088825583457947, 0.4165711998939514, 0.39016368985176086, 0.3940998911857605, 0.4177633821964264], "val_accuracy": [0.4336666762828827, 0.4793333411216736, 0.6449999809265137, 0.6959999799728394, 0.7166666388511658, 0.7210000157356262, 0.7323333621025085, 0.7480000257492065, 0.75, 0.7459999918937683, 0.7573333382606506, 0.7583333253860474, 0.777999997138977, 0.7799999713897705, 0.777999997138977, 0.7946666479110718, 0.7996666431427002, 0.7993333339691162, 0.8063333630561829, 0.8130000233650208, 0.8056666851043701, 0.8103333115577698, 0.8146666884422302, 0.8169999718666077, 0.8196666836738586, 0.8286666870117188, 0.8303333520889282, 0.8339999914169312, 0.8309999704360962, 0.8349999785423279, 0.840666651725769, 0.8399999737739563, 0.8389999866485596, 0.8383333086967468, 0.8389999866485596, 0.843999981880188, 0.8463333249092102, 0.8479999899864197, 0.847000002861023, 0.859666645526886, 0.8600000143051147, 0.8603333234786987, 0.8600000143051147, 0.8610000014305115, 0.8606666922569275, 0.8560000061988831, 0.8603333234786987, 0.8600000143051147, 0.8579999804496765]}, "mapping_values": [1, 10, 5, 5, 3, 5, 4, 1, 2, 7, 6, 1, 3, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 5], [0], [0], [1], [0], [2], [0]], "fitness": -0.8322857022285461, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.623194694519043, 0.8808539509773254, 0.7456426620483398, 0.6571611762046814, 0.5930020213127136, 0.5752891302108765, 0.5564846396446228, 0.5326894521713257, 0.4837760031223297, 0.4874635636806488, 0.5038056969642639, 0.5051194429397583, 0.4638858139514923, 0.48930835723876953, 0.5182254910469055, 0.51631760597229, 0.5120971202850342, 0.5206388831138611, 0.5426812767982483, 0.5316770672798157, 0.5620676279067993, 0.5494263768196106], "accuracy": [0.4617619812488556, 0.6925109028816223, 0.7382115721702576, 0.7556465268135071, 0.780610203742981, 0.7880068421363831, 0.7996301651000977, 0.8070268034934998, 0.821820080280304, 0.8197067975997925, 0.8158763647079468, 0.8165367841720581, 0.82683926820755, 0.8277638554573059, 0.832650899887085, 0.8253863453865051, 0.8384625315666199, 0.816008448600769, 0.8182538747787476, 0.8231409192085266, 0.8198388814926147, 0.8169330358505249], "val_loss": [0.944534182548523, 0.6751548051834106, 0.6256190538406372, 0.5591243505477905, 0.5491980910301208, 0.5840964913368225, 0.5999711155891418, 0.5235832333564758, 0.5449123382568359, 0.549803614616394, 0.5777025818824768, 0.5608701109886169, 0.5369091629981995, 0.573619544506073, 0.6237470507621765, 0.6588335037231445, 0.6577504873275757, 0.6259717345237732, 0.6649612784385681, 0.6291706562042236, 0.6782414317131042, 0.6740080118179321], "val_accuracy": [0.6813333630561829, 0.7583333253860474, 0.765999972820282, 0.79666668176651, 0.8096666932106018, 0.8019999861717224, 0.8209999799728394, 0.8190000057220459, 0.8199999928474426, 0.8213333487510681, 0.8163333535194397, 0.8316666483879089, 0.8216666579246521, 0.8286666870117188, 0.8316666483879089, 0.8289999961853027, 0.8323333263397217, 0.8183333277702332, 0.8226666450500488, 0.8303333520889282, 0.8243333101272583, 0.8196666836738586]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0], [0, 2, 2, 3, 3, 9, 3, 3, 7, 9], [0, 1, 0, 2, 1, 1], [83, 41, 27, 48], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 2], [0, 0, 5, 1], [16, 52], [0, 1], [0], [4], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], [3, 3, 3, 6, 8, 1, 4, 1, 4, 2, 1, 3, 7, 8, 5, 2, 3, 0, 2, 9], [1, 3, 6, 4, 3, 4, 5, 0, 5, 1, 1, 1, 4, 4, 3], [0, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 10, 6, 4, 6, 3, 3, 2, 2, 1, 1, 0, 35, 20, 15, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(alpha, tf.math.subtract(sigma, grad)), tf.math.pow(grad, tf.math.add(sigma, grad)))), grad), tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.sqrt(tf.math.square(tf.math.add(alpha, alpha))), alpha))), tf.math.multiply(tf.math.negative(tf.math.add(grad, grad)), sigma)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 8, 0, 3], [0, 0, 1, 0, 2], [39, 2], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 9, 6, 1, 5, 9], [0, 0, 5], [5, 60, 6], [0, 0], [8, 9], [0], [99], [1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 5], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 2, 2, 0, 1, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 6], [0, 1, 0, 2], [39, 34], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 4, 3, 0, 3, 5], [0, 2, 0, 3, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 8, 8, 1, 4, 1, 4, 2, 8], [0, 2, 1, 4, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 11, 6, 5, 2, 2, 1, 1, 1, 11, 6, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(tf.math.subtract(beta, alpha)))), grad), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 3, 0, 3, 0], [0, 1, 0, 2], [37, 83], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3, 2, 5, 0, 7, 4, 2, 1, 2, 2, 4, 0, 0, 2, 8, 1, 7], [0, 2, 0, 3, 2, 5, 0, 0, 2, 0, 1, 1, 4, 3, 4], [16, 16, 88, 15, 42], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 4, 5, 4, 6, 7, 8, 5, 5, 8, 2, 7, 7, 2, 8, 6, 2, 3, 4, 9, 3, 6, 3], [0, 2, 2, 4, 1, 1, 2, 3, 6, 0, 6, 5, 5, 1, 6], [99, 57, 93], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [6, 3, 3, 6, 0, 3, 4, 1, 4, 2, 8, 0, 1, 5, 1], [4, 0, 0, 3, 0, 0, 2, 1, 2, 0, 1, 4], [53, 76, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 36, 21, 15, 5, 38, 23, 15, 3, 27, 15, 12, 5], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(alpha), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(tf.math.subtract(tf.math.add(grad, tf.math.add(tf.math.pow(beta, tf.math.negative(tf.math.negative(tf.math.add(grad, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), alpha))), alpha), grad), grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.sqrt(tf.math.add(tf.math.add(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(beta, tf.math.add(tf.math.multiply(tf.math.pow(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), grad), alpha))), alpha), beta), sigma), grad)))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.divide_no_nan(grad, tf.math.multiply(grad, alpha))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), beta))), tf.math.sqrt(tf.math.negative(alpha)))), beta), tf.math.subtract(tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]