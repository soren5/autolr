[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8645714521408081, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222564935684204, 1.8711330890655518, 1.3961900472640991, 1.1029366254806519, 0.9514097571372986, 0.8518056869506836, 0.7817301154136658, 0.7336848974227905, 0.6975057721138, 0.6676801443099976, 0.6372084617614746, 0.6198493838310242, 0.5988267064094543, 0.5834860801696777, 0.5608518123626709, 0.5486090779304504, 0.5326030850410461, 0.5244035720825195, 0.5114845037460327, 0.49392783641815186, 0.4880377948284149, 0.48368358612060547, 0.4671538174152374, 0.453957200050354, 0.4483211636543274, 0.4422975480556488, 0.4294009506702423, 0.42433255910873413, 0.41728127002716064, 0.4125729501247406, 0.40664464235305786, 0.39648351073265076, 0.38427332043647766, 0.38407763838768005, 0.38342541456222534, 0.3757481276988983, 0.3622828423976898, 0.3597114384174347, 0.3601226508617401, 0.3511078655719757, 0.34301140904426575, 0.34239649772644043, 0.33815380930900574, 0.32912713289260864, 0.32945600152015686, 0.32439619302749634, 0.31645724177360535, 0.3087533116340637, 0.3039384186267853], "accuracy": [0.2712983787059784, 0.4955752193927765, 0.5674283504486084, 0.6123365759849548, 0.6598864197731018, 0.6966054439544678, 0.7256637215614319, 0.7317395210266113, 0.7473253011703491, 0.7544577717781067, 0.7660810947418213, 0.774270236492157, 0.7828556299209595, 0.7885351777076721, 0.8024039268493652, 0.802271842956543, 0.81112140417099, 0.8171972036361694, 0.8232730031013489, 0.8204993009567261, 0.8267071843147278, 0.8277638554573059, 0.8367455005645752, 0.837537944316864, 0.8405758738517761, 0.8446704745292664, 0.8470479249954224, 0.850350022315979, 0.8506141901016235, 0.8520671129226685, 0.8551049828529358, 0.8578787446022034, 0.8677849769592285, 0.8634262084960938, 0.8688416481018066, 0.8605204224586487, 0.8742570281028748, 0.8692378997802734, 0.8704266548156738, 0.8735966086387634, 0.8791441321372986, 0.8808611631393433, 0.8786157965660095, 0.8824461698532104, 0.8809932470321655, 0.8833707571029663, 0.8873332738876343, 0.8889182209968567, 0.8932769894599915], "val_loss": [2.038374423980713, 1.5123447179794312, 1.0363212823867798, 0.8350226283073425, 0.7507511377334595, 0.6977806687355042, 0.6559572219848633, 0.6230291128158569, 0.5948615074157715, 0.5807794332504272, 0.5586126446723938, 0.5457442402839661, 0.5288320779800415, 0.5118143558502197, 0.499960333108902, 0.4940347373485565, 0.48371434211730957, 0.477098673582077, 0.4754191040992737, 0.4606300890445709, 0.4488992989063263, 0.4462515115737915, 0.4339522421360016, 0.43947136402130127, 0.43110954761505127, 0.431356281042099, 0.4174668490886688, 0.41081973910331726, 0.41366320848464966, 0.40993285179138184, 0.4074282944202423, 0.39669740200042725, 0.39956173300743103, 0.391844242811203, 0.38520434498786926, 0.39154720306396484, 0.3836234509944916, 0.3860452175140381, 0.38164427876472473, 0.37808462977409363, 0.37605029344558716, 0.37428441643714905, 0.37257620692253113, 0.368498295545578, 0.3661816716194153, 0.3635951280593872, 0.3614374101161957, 0.36089038848876953, 0.36014464497566223], "val_accuracy": [0.5106666684150696, 0.6526666879653931, 0.6806666851043701, 0.7009999752044678, 0.7353333234786987, 0.750333309173584, 0.7540000081062317, 0.7663333415985107, 0.778333306312561, 0.7816666960716248, 0.7973333597183228, 0.8013333082199097, 0.8033333420753479, 0.8116666674613953, 0.8163333535194397, 0.815666675567627, 0.8209999799728394, 0.8270000219345093, 0.8263333439826965, 0.8333333134651184, 0.8360000252723694, 0.8373333215713501, 0.8410000205039978, 0.843666672706604, 0.8433333039283752, 0.8413333296775818, 0.8493333458900452, 0.8550000190734863, 0.8489999771118164, 0.8496666550636292, 0.8550000190734863, 0.8603333234786987, 0.856333315372467, 0.8600000143051147, 0.862333357334137, 0.8560000061988831, 0.8643333315849304, 0.859000027179718, 0.8556666374206543, 0.8610000014305115, 0.8650000095367432, 0.8656666874885559, 0.862666666507721, 0.8686666488647461, 0.8673333525657654, 0.8656666874885559, 0.8679999709129333, 0.8686666488647461, 0.8666666746139526]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 4, 2, 2, 7, 6, 4, 0, 2, 3, 9, 8, 9, 2, 0, 8], [0, 1, 3, 2, 0, 4, 4, 3, 1], [0, 37, 27, 2], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8488571643829346, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.pow(alpha, tf.math.negative(grad)), beta), tf.math.add(tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.negative(grad), grad)), grad), tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2927067279815674, 2.1898696422576904, 1.773806095123291, 1.3288241624832153, 1.0766410827636719, 0.9116759896278381, 0.8278499841690063, 0.8240206241607666, 0.7548630833625793, 0.7346523404121399, 0.7134560346603394, 0.6623517870903015, 0.6436483860015869, 0.6297591328620911, 0.5983739495277405, 0.5937533378601074, 0.5790498852729797, 0.5615500807762146, 0.5572566390037537, 0.5547016263008118, 0.5291587710380554, 0.5188154578208923, 0.4982326924800873, 0.5075317621231079, 0.5074065923690796, 0.490363210439682, 0.4818339943885803, 0.48326775431632996, 0.45961642265319824, 0.4566690921783447, 0.44485530257225037, 0.4324169456958771, 0.4386679232120514, 0.41788432002067566, 0.41826099157333374, 0.40079742670059204, 0.3978847861289978, 0.39152097702026367, 0.37839192152023315, 0.3680175840854645, 0.3759354054927826], "accuracy": [0.13181878626346588, 0.3197728097438812, 0.4391758143901825, 0.5495971441268921, 0.6284506916999817, 0.6699247360229492, 0.6973979473114014, 0.6980583667755127, 0.7092854380607605, 0.7147008180618286, 0.7279091477394104, 0.7470611333847046, 0.7531369924545288, 0.7563069462776184, 0.7700436115264893, 0.7667415142059326, 0.7758552432060242, 0.783119797706604, 0.7783648371696472, 0.7841764688491821, 0.798309326171875, 0.7975168228149414, 0.8076872229576111, 0.8053097128868103, 0.8063663840293884, 0.8092722296714783, 0.8078193068504333, 0.8125742673873901, 0.8173292875289917, 0.8191784620285034, 0.8248580098152161, 0.8321225643157959, 0.8310658931732178, 0.8355567455291748, 0.835160493850708, 0.8433496356010437, 0.8508783578872681, 0.846387505531311, 0.8496896028518677, 0.8560295701026917, 0.8590674996376038], "val_loss": [2.246180295944214, 2.018292188644409, 1.129876971244812, 0.8926509618759155, 0.7863428592681885, 0.7352073788642883, 0.7314945459365845, 0.7001723051071167, 0.6605036854743958, 0.6295701265335083, 0.6045916080474854, 0.5993921160697937, 0.5642926096916199, 0.5466697812080383, 0.5417205691337585, 0.5382071137428284, 0.5320220589637756, 0.5132162570953369, 0.5116953253746033, 0.4970826506614685, 0.4972003102302551, 0.48904120922088623, 0.49468010663986206, 0.49844831228256226, 0.4870893955230713, 0.49317145347595215, 0.4691488444805145, 0.47887271642684937, 0.47562021017074585, 0.45518946647644043, 0.4576481878757477, 0.44863900542259216, 0.45927318930625916, 0.43247753381729126, 0.4479656219482422, 0.4423845112323761, 0.43280029296875, 0.4326305687427521, 0.4351581335067749, 0.4447924792766571, 0.4490664005279541], "val_accuracy": [0.4440000057220459, 0.46966665983200073, 0.6570000052452087, 0.6856666803359985, 0.7196666598320007, 0.7276666760444641, 0.7323333621025085, 0.7429999709129333, 0.7553333044052124, 0.765666663646698, 0.7680000066757202, 0.7763333320617676, 0.7929999828338623, 0.7876666784286499, 0.7946666479110718, 0.7993333339691162, 0.7993333339691162, 0.8086666464805603, 0.8043333292007446, 0.8113333582878113, 0.8159999847412109, 0.8213333487510681, 0.8253333568572998, 0.8176666498184204, 0.8236666917800903, 0.8146666884422302, 0.8270000219345093, 0.8326666951179504, 0.8366666436195374, 0.8336666822433472, 0.8296666741371155, 0.8413333296775818, 0.8410000205039978, 0.8526666760444641, 0.8489999771118164, 0.8560000061988831, 0.8526666760444641, 0.8519999980926514, 0.8536666631698608, 0.8546666502952576, 0.8550000190734863]}, "mapping_values": [1, 10, 5, 5, 3, 26, 17, 9, 4, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 21}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8254285454750061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6445283889770508, 0.8799532651901245, 0.7135826349258423, 0.636404275894165, 0.5822421312332153, 0.5596175193786621, 0.5547670125961304, 0.5144167542457581, 0.5157224535942078, 0.4969058632850647, 0.5258638858795166, 0.5142729878425598, 0.526827871799469, 0.5121320486068726, 0.5531298518180847, 0.5585022568702698, 0.5623337626457214, 0.5371627807617188], "accuracy": [0.46123364567756653, 0.6921146512031555, 0.7534011602401733, 0.7651565074920654, 0.7924976944923401, 0.7948752045631409, 0.7902522683143616, 0.8084797263145447, 0.817461371421814, 0.8161405324935913, 0.8124422430992126, 0.8224804997444153, 0.8120459914207458, 0.8173292875289917, 0.8101968169212341, 0.8119139075279236, 0.8082155585289001, 0.8234050869941711], "val_loss": [0.864654541015625, 0.6703132390975952, 0.5803915858268738, 0.5287808179855347, 0.5238059759140015, 0.5106199383735657, 0.5055795311927795, 0.5169337391853333, 0.5587605237960815, 0.539169430732727, 0.6139951944351196, 0.5932068824768066, 0.5965030789375305, 0.5616449117660522, 0.6646490097045898, 0.6532038450241089, 0.6328120827674866, 0.6452415585517883], "val_accuracy": [0.6956666707992554, 0.7643333077430725, 0.7889999747276306, 0.8100000023841858, 0.8273333311080933, 0.8259999752044678, 0.8169999718666077, 0.8336666822433472, 0.8306666612625122, 0.8233333230018616, 0.8309999704360962, 0.8190000057220459, 0.8399999737739563, 0.8246666789054871, 0.8146666884422302, 0.8253333568572998, 0.8356666564941406, 0.8209999799728394]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 3, 0, 3], [0, 1, 0, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 1, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 9, 61, 1]], "fitness": -0.12485714256763458, "mapping_values": [1, 10, 5, 5, 2, 7, 4, 3, 2, 2, 1, 1, 1, 10, 5, 5, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), sigma), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [8.68812871130153e+16, 1.0034876695497933e+17, 9.692879616632422e+16, 1.0171698891666227e+17, 9.627511073380762e+16, 1.0026754912341197e+17], "accuracy": [0.12429005652666092, 0.12217672914266586, 0.1298375427722931, 0.1262712925672531, 0.12362963706254959, 0.12495046854019165], "val_loss": [9.212612937619866e+16, 9.212612937619866e+16, 9.212612937619866e+16, 9.212612937619866e+16, 9.212612937619866e+16, 9.212612937619866e+16], "val_accuracy": [0.13199999928474426, 0.13199999928474426, 0.13199999928474426, 0.13199999928474426, 0.13199999928474426, 0.13199999928474426]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 6, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [67], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 6, 8, 1, 4, 1, 4, 2, 8], [0, 1, 0, 3, 2, 0, 3, 1, 4, 1], [16, 99, 10, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma)), beta), tf.math.pow(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 3, 0, 3], [0, 1, 0, 2], [39, 92], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [8, 2, 3, 6, 2, 5], [3, 2, 0, 3, 0], [16, 16], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], [3, 2, 4, 1, 9, 2, 3, 1, 7, 0, 1, 7, 3, 1, 9, 9], [0, 5, 6, 3, 7, 2, 7, 2, 1, 5], [99, 37, 48, 72], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.0925714299082756, "mapping_values": [1, 6, 4, 2, 1, 11, 6, 5, 2, 26, 16, 10, 4, 12, 6, 6, 4], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(grad, beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(grad, tf.math.subtract(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.math.add(sigma, grad)), tf.math.negative(beta)), tf.math.subtract(tf.math.add(grad, tf.math.multiply(beta, tf.math.subtract(alpha, grad))), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, grad)), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30953049659729, 2.3104817867279053, 2.3092856407165527, 2.3089675903320312, 2.3094961643218994, 2.310148239135742], "accuracy": [0.09747721254825592, 0.09430722147226334, 0.09800554811954498, 0.09245806187391281, 0.08968432247638702, 0.09417514503002167], "val_loss": [2.3087191581726074, 2.3087191581726074, 2.3087191581726074, 2.3087191581726074, 2.3087191581726074, 2.3087191581726074], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [3, 2, 3, 0, 3], [0, 2, 2, 2, 1], [15, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 3, 0, 3, 5], [0, 2, 0, 3], [12, 16], [0, 1], [0], [0], [66], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [5, 2, 3, 6, 2, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.0917142853140831, "mapping_values": [1, 10, 5, 5, 1, 6, 4, 2, 1, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(grad, grad)), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.310089111328125, 2.3109891414642334, 2.3108468055725098, 2.3100459575653076, 2.3096370697021484, 2.311025381088257], "accuracy": [0.09126931428909302, 0.09153348207473755, 0.09879804402589798, 0.09298639744520187, 0.08928807079792023, 0.09285431355237961], "val_loss": [2.30908465385437, 2.30908465385437, 2.309084415435791, 2.309083938598633, 2.309083938598633, 2.3090837001800537], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]