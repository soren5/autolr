[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8614285588264465, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2205166816711426, 1.8647724390029907, 1.3886696100234985, 1.085877537727356, 0.9431416392326355, 0.8326709270477295, 0.7567346096038818, 0.7192553281784058, 0.6762501001358032, 0.6498126983642578, 0.6274845600128174, 0.5958740711212158, 0.5831617712974548, 0.5686421394348145, 0.5529234409332275, 0.5370903015136719, 0.5279772877693176, 0.5120912194252014, 0.49541425704956055, 0.4871944487094879, 0.48596855998039246, 0.46455714106559753, 0.45877280831336975, 0.45083698630332947, 0.44608446955680847, 0.43071433901786804, 0.4266324043273926, 0.41883131861686707, 0.4093643128871918, 0.4108085334300995, 0.40433117747306824, 0.38980743288993835, 0.39483925700187683, 0.3782309591770172, 0.38461044430732727, 0.37105894088745117, 0.35944968461990356, 0.3608768582344055, 0.3506963551044464, 0.3513050675392151, 0.33919352293014526, 0.3355918824672699, 0.33041560649871826, 0.3264101445674896, 0.31211015582084656, 0.3158009350299835, 0.3154681622982025, 0.3138996660709381, 0.3135741651058197, 0.29994314908981323, 0.3032829463481903, 0.2896265387535095, 0.29037150740623474], "accuracy": [0.2767137885093689, 0.48144233226776123, 0.568220853805542, 0.6273940205574036, 0.6592260003089905, 0.7022850513458252, 0.7304186820983887, 0.7362303733825684, 0.752212405204773, 0.7588165402412415, 0.7750627398490906, 0.7860256433486938, 0.7905164361000061, 0.7902522683143616, 0.7980451583862305, 0.8062343001365662, 0.8088759779930115, 0.8164047002792358, 0.8276317715644836, 0.8293488025665283, 0.8267071843147278, 0.8290846943855286, 0.837141752243042, 0.8429533839225769, 0.837141752243042, 0.8494254350662231, 0.8525954484939575, 0.8552370667457581, 0.852331280708313, 0.857218325138092, 0.8558974862098694, 0.8589354157447815, 0.8569541573524475, 0.8654074668884277, 0.8607845902442932, 0.8714832663536072, 0.8734645247459412, 0.8704266548156738, 0.8739928603172302, 0.8795403242111206, 0.8787478804588318, 0.8792761564254761, 0.8817857503890991, 0.8816536664962769, 0.887201189994812, 0.8883898854255676, 0.8869370222091675, 0.8841632604598999, 0.8811253309249878, 0.8882578015327454, 0.887597382068634, 0.8951261639595032, 0.8914278149604797], "val_loss": [2.031275987625122, 1.50432550907135, 1.031334400177002, 0.828001856803894, 0.7446752786636353, 0.6888504028320312, 0.6369501352310181, 0.6073067784309387, 0.5725376009941101, 0.5520119667053223, 0.5344136953353882, 0.5177257657051086, 0.5034810900688171, 0.49351221323013306, 0.48363155126571655, 0.47710055112838745, 0.472115695476532, 0.4554418921470642, 0.44569259881973267, 0.44239941239356995, 0.43607813119888306, 0.4315858483314514, 0.42146310210227966, 0.41706582903862, 0.4104105532169342, 0.4100809693336487, 0.40417376160621643, 0.4023399353027344, 0.3989706337451935, 0.3945431709289551, 0.389118492603302, 0.38879749178886414, 0.38045263290405273, 0.39188268780708313, 0.3758770227432251, 0.3717104196548462, 0.37414538860321045, 0.3683869242668152, 0.36558663845062256, 0.366700679063797, 0.35931363701820374, 0.36208996176719666, 0.35789474844932556, 0.35607612133026123, 0.3507213592529297, 0.35112085938453674, 0.3513741195201874, 0.3441241979598999, 0.3496403098106384, 0.3500743806362152, 0.3513999283313751, 0.34535202383995056, 0.33778995275497437], "val_accuracy": [0.5276666879653931, 0.6606666445732117, 0.6890000104904175, 0.7103333473205566, 0.7333333492279053, 0.749666690826416, 0.765333354473114, 0.7713333368301392, 0.7916666865348816, 0.8006666898727417, 0.8073333501815796, 0.8173333406448364, 0.824999988079071, 0.8233333230018616, 0.8309999704360962, 0.8306666612625122, 0.8353333473205566, 0.8403333425521851, 0.8399999737739563, 0.8443333506584167, 0.843666672706604, 0.8423333168029785, 0.8496666550636292, 0.8533333539962769, 0.8553333282470703, 0.8539999723434448, 0.8583333492279053, 0.8543333411216736, 0.8556666374206543, 0.859000027179718, 0.8629999756813049, 0.8556666374206543, 0.8643333315849304, 0.8576666712760925, 0.8690000176429749, 0.8690000176429749, 0.8633333444595337, 0.8653333187103271, 0.8646666407585144, 0.8706666827201843, 0.8726666569709778, 0.8723333477973938, 0.874666690826416, 0.8683333396911621, 0.871666669845581, 0.8769999742507935, 0.8756666779518127, 0.8790000081062317, 0.8769999742507935, 0.874666690826416, 0.8743333220481873, 0.8733333349227905, 0.8786666393280029]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0], [0, 9], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8537142872810364, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2935690879821777, 2.1907553672790527, 1.7733210325241089, 1.327991247177124, 1.0947836637496948, 0.9233537316322327, 0.8509041666984558, 0.8184230923652649, 0.7582259178161621, 0.7379043102264404, 0.6927446126937866, 0.6841943264007568, 0.6534242630004883, 0.6179535388946533, 0.6069831252098083, 0.5761359930038452, 0.567780613899231, 0.5588582158088684, 0.5474705696105957, 0.5413058400154114, 0.5379511117935181, 0.523284375667572, 0.5031101703643799, 0.5086125731468201, 0.5015219449996948, 0.48954156041145325, 0.47722312808036804, 0.46689853072166443, 0.4602601230144501, 0.4637792408466339, 0.4576225280761719, 0.4361271560192108, 0.43311065435409546, 0.43323326110839844, 0.4239044487476349, 0.40728089213371277, 0.41137760877609253, 0.4068458378314972, 0.39991241693496704, 0.39955660700798035, 0.38315045833587646, 0.39083537459373474, 0.3826023042201996, 0.38013818860054016, 0.3658844828605652, 0.3761669993400574, 0.3541184663772583, 0.35897746682167053, 0.35265132784843445, 0.3444937765598297, 0.34008029103279114, 0.3334850072860718, 0.3339696526527405, 0.33261430263519287, 0.3310856819152832, 0.33419114351272583, 0.31732016801834106, 0.32565879821777344, 0.32097911834716797], "accuracy": [0.1290450394153595, 0.3327169418334961, 0.4435345530509949, 0.5494650602340698, 0.6365077495574951, 0.6643772125244141, 0.6903975605964661, 0.695813000202179, 0.7079645991325378, 0.7181349992752075, 0.7408532500267029, 0.7395324110984802, 0.7489103078842163, 0.7672698497772217, 0.76542067527771, 0.7843085527420044, 0.7837802171707153, 0.7898560166358948, 0.791441023349762, 0.7938185334205627, 0.7957997918128967, 0.7971205711364746, 0.8086118102073669, 0.8061022162437439, 0.8004226684570312, 0.8129705190658569, 0.8156121969223022, 0.8186501264572144, 0.82683926820755, 0.8248580098152161, 0.8241975903511047, 0.8293488025665283, 0.8339717388153076, 0.8343679904937744, 0.8401796221733093, 0.8510104417800903, 0.8422929644584656, 0.8433496356010437, 0.8477083444595337, 0.845859169960022, 0.856689989566803, 0.8525954484939575, 0.8553691506385803, 0.8576145768165588, 0.8595958352088928, 0.860652506351471, 0.8636903762817383, 0.8628978729248047, 0.869502067565918, 0.8712190985679626, 0.8656716346740723, 0.8745211958885193, 0.8713511824607849, 0.8714832663536072, 0.8717474341392517, 0.8683133125305176, 0.8757099509239197, 0.8708229064941406, 0.8755778670310974], "val_loss": [2.24582576751709, 2.0210378170013428, 1.139955997467041, 0.8743720054626465, 0.7714001536369324, 0.724668025970459, 0.7002823352813721, 0.6397294402122498, 0.6437880396842957, 0.6065542697906494, 0.5808758735656738, 0.5472091436386108, 0.5512655377388, 0.5408202409744263, 0.5298914909362793, 0.5173576474189758, 0.5037961602210999, 0.5020614266395569, 0.5070676207542419, 0.503879964351654, 0.4897448718547821, 0.4930547773838043, 0.4885828495025635, 0.4783046841621399, 0.48195934295654297, 0.4743073582649231, 0.46123769879341125, 0.4626609683036804, 0.46055126190185547, 0.44803255796432495, 0.44489040970802307, 0.4566638469696045, 0.4421168267726898, 0.4368706941604614, 0.4396471679210663, 0.44330689311027527, 0.45058688521385193, 0.4453534483909607, 0.44489648938179016, 0.4351063668727875, 0.42051562666893005, 0.41133442521095276, 0.40844327211380005, 0.4040643572807312, 0.430813193321228, 0.42562755942344666, 0.4137420952320099, 0.42082446813583374, 0.4497881531715393, 0.442646861076355, 0.4385170042514801, 0.43068212270736694, 0.4314310848712921, 0.4433092474937439, 0.4347638487815857, 0.444762647151947, 0.46663567423820496, 0.44803646206855774, 0.45449838042259216], "val_accuracy": [0.3996666669845581, 0.4490000009536743, 0.6480000019073486, 0.6916666626930237, 0.7153333425521851, 0.7286666631698608, 0.731333315372467, 0.7473333477973938, 0.7639999985694885, 0.7633333206176758, 0.7713333368301392, 0.7916666865348816, 0.7856666445732117, 0.7956666946411133, 0.8023333549499512, 0.8050000071525574, 0.8109999895095825, 0.8166666626930237, 0.809333324432373, 0.809333324432373, 0.8220000267028809, 0.8213333487510681, 0.8253333568572998, 0.8273333311080933, 0.8223333358764648, 0.8333333134651184, 0.8303333520889282, 0.8370000123977661, 0.824999988079071, 0.8343333601951599, 0.8413333296775818, 0.840666651725769, 0.8403333425521851, 0.8416666388511658, 0.8450000286102295, 0.8476666808128357, 0.8496666550636292, 0.843999981880188, 0.8493333458900452, 0.8496666550636292, 0.8556666374206543, 0.8566666841506958, 0.8579999804496765, 0.862666666507721, 0.8586666584014893, 0.8586666584014893, 0.8629999756813049, 0.8643333315849304, 0.8656666874885559, 0.8603333234786987, 0.8606666922569275, 0.8613333106040955, 0.8616666793823242, 0.8683333396911621, 0.8669999837875366, 0.8653333187103271, 0.8659999966621399, 0.8613333106040955, 0.856333315372467]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 2, 0, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0], [0, 9], [0], [0], [1], [0], [2], [0]], "fitness": -0.8322857022285461, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5193240642547607, 0.8189948201179504, 0.6678690314292908, 0.6133874654769897, 0.5907559394836426, 0.5660436749458313, 0.5465260744094849, 0.5453419089317322, 0.5586351156234741, 0.5645642280578613, 0.5307033061981201, 0.5336286425590515, 0.563690185546875, 0.5459843873977661, 0.5398765802383423, 0.546751081943512, 0.5549301505088806, 0.5938097238540649, 0.6265883445739746, 0.5719169974327087, 0.597028911113739], "accuracy": [0.4823669195175171, 0.7162858247756958, 0.7593448758125305, 0.7771760821342468, 0.789459764957428, 0.7938185334205627, 0.807158887386322, 0.8059701323509216, 0.8104609847068787, 0.8039889335632324, 0.8120459914207458, 0.8101968169212341, 0.8131026029586792, 0.8096684813499451, 0.8101968169212341, 0.8214238286018372, 0.8236692547798157, 0.804649293422699, 0.8170651197433472, 0.8193105459213257, 0.7964601516723633], "val_loss": [0.824865460395813, 0.6422832012176514, 0.5487098097801208, 0.5281332731246948, 0.5294245481491089, 0.5101417899131775, 0.5240004658699036, 0.5425751209259033, 0.5680399537086487, 0.5420425534248352, 0.5212859511375427, 0.5474973917007446, 0.5370645523071289, 0.5227006673812866, 0.5181236267089844, 0.608803927898407, 0.5023843050003052, 0.6145887970924377, 0.6068482995033264, 0.5317060351371765, 0.598212480545044], "val_accuracy": [0.7023333311080933, 0.7703333497047424, 0.7906666398048401, 0.8086666464805603, 0.8116666674613953, 0.8090000152587891, 0.8086666464805603, 0.8203333616256714, 0.812333345413208, 0.8146666884422302, 0.831333339214325, 0.8153333067893982, 0.8230000138282776, 0.8233333230018616, 0.8159999847412109, 0.8373333215713501, 0.8130000233650208, 0.8346666693687439, 0.8349999785423279, 0.8273333311080933, 0.8206666707992554]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [3, 2, 3, 0, 3, 7, 6, 2, 7, 1, 0, 8, 8, 1, 1], [0, 1, 1, 2, 0, 2, 3, 3, 3, 2, 2, 0], [39, 59, 75], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 3, 3, 4, 4, 3, 3, 5, 4, 3, 1, 3, 8], [0, 2, 0, 3, 4, 1, 2, 1, 0, 1, 5, 3, 5], [16, 16, 99], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [9, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 27, 15, 12, 3, 28, 15, 13, 3, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(grad, tf.math.subtract(tf.math.negative(grad), tf.math.sqrt(grad))), tf.math.sqrt(tf.math.subtract(tf.math.subtract(grad, grad), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(grad, tf.math.multiply(tf.math.multiply(grad, tf.math.square(alpha)), tf.math.pow(beta, tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))))), tf.math.multiply(grad, grad)))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303804397583008, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 9], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 6, 3, 5], [0, 0, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 9, 6, 8, 1, 4, 1, 4, 2, 1, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 5, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 21, 12, 9, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), sigma))), tf.math.subtract(tf.math.negative(alpha), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [4, 2, 3, 6, 3], [0, 1, 0, 2], [39, 39], [0, 1], [0], [0, 2, 0, 3], [30], [0, 1], [5], [0], [99], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 5, 4, 2, 8, 1, 0, 4, 5, 1, 6, 9], [4, 2, 0, 0, 0, 0, 4, 6, 2, 1, 4, 6, 0, 4, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 20, 11, 9, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), tf.math.add(grad, tf.math.sqrt(beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 1, 9, 1, 3], [2, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [7], [0], [0, 0, 1, 0, 1], [0, 3, 8], [1, 2], [0]], "fitness": -0.09428571164608002, "mapping_values": [1, 4, 3, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.sqrt(beta)))", "other_info": {"loss": [2.309140682220459, 2.3103229999542236, 2.3108580112457275, 2.3094263076782227, 2.3095905780792236, 2.3101673126220703], "accuracy": [0.08849557489156723, 0.08836349099874496, 0.08730682730674744, 0.0886276587843895, 0.09206181764602661, 0.0882314071059227], "val_loss": [2.308365821838379, 2.308365821838379, 2.308365821838379, 2.308365821838379, 2.308365821838379, 2.308365821838379], "val_accuracy": [0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076]}}]