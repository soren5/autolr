[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8717142939567566, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2226104736328125, 1.8693480491638184, 1.3934431076049805, 1.0810303688049316, 0.9177419543266296, 0.81703120470047, 0.7550258040428162, 0.7050990462303162, 0.6728530526161194, 0.6453794240951538, 0.6229716539382935, 0.5989422798156738, 0.5689826011657715, 0.5539023280143738, 0.5407872796058655, 0.5301430821418762, 0.5069788694381714, 0.5018606185913086, 0.49028512835502625, 0.48927268385887146, 0.4721981883049011, 0.4601239860057831, 0.45172932744026184, 0.4466886520385742, 0.43626073002815247, 0.4294282793998718, 0.4215950667858124, 0.4233454465866089, 0.4118274450302124, 0.40587037801742554, 0.4003658890724182, 0.39274346828460693, 0.39326590299606323, 0.378536194562912, 0.37126624584198, 0.3744286596775055, 0.3617577850818634, 0.3533365726470947, 0.34920257329940796, 0.34316298365592957, 0.34194159507751465, 0.3366714119911194, 0.3336752951145172, 0.3259165585041046, 0.3251231014728546, 0.3184371888637543, 0.3191428482532501, 0.3093816041946411], "accuracy": [0.2864879071712494, 0.4815744161605835, 0.5699379444122314, 0.6232994198799133, 0.6793025732040405, 0.7078325152397156, 0.7313432693481445, 0.7445515990257263, 0.757099449634552, 0.7666094303131104, 0.7716285586357117, 0.7774402499198914, 0.7924976944923401, 0.7973847389221191, 0.7993659973144531, 0.8141592741012573, 0.8168009519577026, 0.8146876096725464, 0.821820080280304, 0.8178576231002808, 0.8297450542449951, 0.829216718673706, 0.8330471515655518, 0.837537944316864, 0.8412362933158875, 0.8488970994949341, 0.8504821062088013, 0.8438779711723328, 0.8477083444595337, 0.8508783578872681, 0.8561616539955139, 0.8529917001724243, 0.8578787446022034, 0.8607845902442932, 0.8643507957458496, 0.8626337051391602, 0.8656716346740723, 0.8732003569602966, 0.869502067565918, 0.8761062026023865, 0.873860776424408, 0.8766345381736755, 0.8795403242111206, 0.8812574148178101, 0.8808611631393433, 0.8870691061019897, 0.8861445188522339, 0.8835028409957886], "val_loss": [2.0405123233795166, 1.520390510559082, 1.0432871580123901, 0.8296663165092468, 0.7427662014961243, 0.687635064125061, 0.6382513642311096, 0.6070676445960999, 0.5810785293579102, 0.5617059469223022, 0.5404207110404968, 0.5250743627548218, 0.5119513273239136, 0.5032958388328552, 0.48675402998924255, 0.4748915135860443, 0.4690053164958954, 0.46304184198379517, 0.4560840129852295, 0.44951242208480835, 0.4397454559803009, 0.43251729011535645, 0.426312655210495, 0.42342546582221985, 0.4181079864501953, 0.40775179862976074, 0.41189706325531006, 0.40398672223091125, 0.40155160427093506, 0.3986818790435791, 0.39876261353492737, 0.3967059850692749, 0.39134135842323303, 0.39099180698394775, 0.386126309633255, 0.3825865387916565, 0.37825459241867065, 0.37765729427337646, 0.37656232714653015, 0.37396344542503357, 0.37080463767051697, 0.3711455166339874, 0.3677067160606384, 0.36844491958618164, 0.371254563331604, 0.36857160925865173, 0.3616359829902649, 0.3645669221878052], "val_accuracy": [0.5529999732971191, 0.6616666913032532, 0.6856666803359985, 0.7129999995231628, 0.7296666502952576, 0.753000020980835, 0.762333333492279, 0.7706666588783264, 0.781000018119812, 0.7900000214576721, 0.8003333210945129, 0.8080000281333923, 0.8080000281333923, 0.8133333325386047, 0.8196666836738586, 0.8259999752044678, 0.8299999833106995, 0.8259999752044678, 0.831333339214325, 0.8323333263397217, 0.8373333215713501, 0.8433333039283752, 0.8450000286102295, 0.8429999947547913, 0.8493333458900452, 0.8503333330154419, 0.8510000109672546, 0.8553333282470703, 0.8566666841506958, 0.8546666502952576, 0.8553333282470703, 0.8533333539962769, 0.8610000014305115, 0.8633333444595337, 0.859333336353302, 0.8643333315849304, 0.8690000176429749, 0.8676666617393494, 0.8669999837875366, 0.8709999918937683, 0.8726666569709778, 0.871999979019165, 0.8736666440963745, 0.871999979019165, 0.8686666488647461, 0.8713333606719971, 0.8736666440963745, 0.8726666569709778]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1], [0, 5], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8591428399085999, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293433666229248, 2.192448377609253, 1.7890838384628296, 1.3485996723175049, 1.076552152633667, 0.9185510873794556, 0.8479693531990051, 0.8238165974617004, 0.7668849229812622, 0.7514663934707642, 0.701782763004303, 0.6873893737792969, 0.6569386124610901, 0.6332889199256897, 0.6135801076889038, 0.5925201773643494, 0.5951046943664551, 0.5750272870063782, 0.5661594271659851, 0.553891122341156, 0.5473083853721619, 0.5423397421836853, 0.512026309967041, 0.5214068293571472, 0.49425724148750305, 0.4920719265937805, 0.49293071031570435, 0.46952396631240845, 0.4407918155193329, 0.4533648192882538, 0.44807562232017517, 0.42576318979263306, 0.43581733107566833, 0.4098716080188751, 0.4031304717063904, 0.40753114223480225, 0.3895055949687958, 0.3932601809501648, 0.39569440484046936, 0.37684184312820435, 0.36596399545669556, 0.3613974153995514, 0.3552171587944031, 0.3491875231266022, 0.36131468415260315, 0.3409615457057953, 0.33727845549583435, 0.34204861521720886, 0.3353453576564789, 0.35477787256240845, 0.3299425542354584, 0.3276296854019165, 0.3246293365955353, 0.31286361813545227, 0.3191175162792206], "accuracy": [0.1302337795495987, 0.3287544548511505, 0.4278166592121124, 0.5412759184837341, 0.6383568644523621, 0.6671509742736816, 0.6866992712020874, 0.6979262828826904, 0.7108704447746277, 0.7088891863822937, 0.7326641082763672, 0.7331924438476562, 0.750759482383728, 0.7600052952766418, 0.7643640041351318, 0.7717606425285339, 0.772288978099823, 0.77677983045578, 0.7843085527420044, 0.7885351777076721, 0.7878747582435608, 0.7922335267066956, 0.806630551815033, 0.8021397590637207, 0.807158887386322, 0.8094043135643005, 0.8125742673873901, 0.8166688680648804, 0.8257825970649719, 0.8244617581367493, 0.828292191028595, 0.8358209133148193, 0.8338396549224854, 0.8416325449943542, 0.8441421389579773, 0.8407079577445984, 0.8450667262077332, 0.8461233377456665, 0.8465195894241333, 0.8555012345314026, 0.8577466607093811, 0.8603883385658264, 0.8638224601745605, 0.8614450097084045, 0.8613129258155823, 0.8651432991027832, 0.8671245574951172, 0.860652506351471, 0.8722757697105408, 0.8697662353515625, 0.8745211958885193, 0.8697662353515625, 0.870030403137207, 0.8791441321372986, 0.8739928603172302], "val_loss": [2.2456765174865723, 2.0229904651641846, 1.1387966871261597, 0.859811007976532, 0.7609589695930481, 0.7262780666351318, 0.6704729795455933, 0.6545068621635437, 0.6412108540534973, 0.5982543230056763, 0.5776112675666809, 0.5394513607025146, 0.5326299667358398, 0.5101068019866943, 0.49403584003448486, 0.490245521068573, 0.48039570450782776, 0.4715733230113983, 0.4642398953437805, 0.4669247567653656, 0.46304476261138916, 0.4468417465686798, 0.43888232111930847, 0.44058093428611755, 0.4405312240123749, 0.4340795874595642, 0.4275207221508026, 0.4152204692363739, 0.41141194105148315, 0.40282437205314636, 0.40279603004455566, 0.40452471375465393, 0.3937988579273224, 0.39795881509780884, 0.3937165141105652, 0.39371833205223083, 0.39338091015815735, 0.39115002751350403, 0.39270728826522827, 0.38481053709983826, 0.3999473452568054, 0.39943253993988037, 0.390947550535202, 0.38887202739715576, 0.39029595255851746, 0.3763708174228668, 0.3759489059448242, 0.37430524826049805, 0.4033626616001129, 0.40748026967048645, 0.4029519855976105, 0.40070784091949463, 0.4054272174835205, 0.4252206087112427, 0.4129842221736908], "val_accuracy": [0.42266666889190674, 0.4410000145435333, 0.656333327293396, 0.6990000009536743, 0.7129999995231628, 0.7226666808128357, 0.7239999771118164, 0.7519999742507935, 0.7553333044052124, 0.7683333158493042, 0.768666684627533, 0.7863333225250244, 0.7889999747276306, 0.7956666946411133, 0.8106666803359985, 0.8033333420753479, 0.809333324432373, 0.8149999976158142, 0.8136666417121887, 0.8083333373069763, 0.8206666707992554, 0.8286666870117188, 0.8236666917800903, 0.8330000042915344, 0.828000009059906, 0.8426666855812073, 0.843666672706604, 0.8429999947547913, 0.8483333587646484, 0.8529999852180481, 0.847000002861023, 0.8503333330154419, 0.8533333539962769, 0.8513333201408386, 0.8543333411216736, 0.8576666712760925, 0.8543333411216736, 0.8533333539962769, 0.8606666922569275, 0.8610000014305115, 0.859000027179718, 0.8606666922569275, 0.8656666874885559, 0.8700000047683716, 0.8679999709129333, 0.8659999966621399, 0.8676666617393494, 0.8676666617393494, 0.871666669845581, 0.875, 0.8646666407585144, 0.8613333106040955, 0.8690000176429749, 0.8690000176429749, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 4], [0, 0], [0, 56], [1], [0], [2], [0]], "fitness": -0.8311428427696228, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5531541109085083, 0.8225429058074951, 0.7006937265396118, 0.6331459879875183, 0.6028417944908142, 0.5816821455955505, 0.5512417554855347, 0.5318548083305359, 0.5134901404380798, 0.499955952167511, 0.4683471620082855, 0.4673610031604767, 0.4754340350627899, 0.4807548522949219, 0.4651384949684143, 0.4781527817249298, 0.5074478983879089, 0.47396764159202576], "accuracy": [0.4663848876953125, 0.7073041796684265, 0.7485140562057495, 0.7732135653495789, 0.7824593782424927, 0.793950617313385, 0.798309326171875, 0.8067626357078552, 0.8191784620285034, 0.8083476424217224, 0.8300092220306396, 0.8248580098152161, 0.8345000743865967, 0.8248580098152161, 0.8322546482086182, 0.8352925777435303, 0.8313300609588623, 0.834632158279419], "val_loss": [0.7991121411323547, 0.6128940582275391, 0.5413700938224792, 0.5438395738601685, 0.5197650790214539, 0.5030178427696228, 0.5030314922332764, 0.493703156709671, 0.48947232961654663, 0.4898918569087982, 0.47827059030532837, 0.46669772267341614, 0.5153264999389648, 0.46438875794410706, 0.5443337559700012, 0.579802393913269, 0.5151898860931396, 0.5247204303741455], "val_accuracy": [0.7193333506584167, 0.7733333110809326, 0.7983333468437195, 0.8033333420753479, 0.8066666722297668, 0.8166666626930237, 0.8370000123977661, 0.8286666870117188, 0.828000009059906, 0.8326666951179504, 0.8389999866485596, 0.840666651725769, 0.8486666679382324, 0.8479999899864197, 0.843666672706604, 0.8443333506584167, 0.843666672706604, 0.8473333120346069]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [59, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 5, 6, 0, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 9, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 56, 96, 99, 61, 91]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30474591255188, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}, "mapping_values": [1, 6, 3, 3, 2, 8, 5, 3, 2, 2, 1, 1, 1, 14, 8, 6, 6], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 9, 0], [0, 1, 0, 2], [83, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5, 6, 5, 2, 9, 3, 1, 9, 8, 7], [2, 2, 2, 3, 0, 2, 5], [16, 16, 14], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 7, 3, 8, 8], [0, 0, 0, 3, 0, 0, 3, 2, 4, 0, 3, 7], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(beta), tf.math.multiply(tf.math.square(beta), tf.math.divide_no_nan(tf.math.square(beta), tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(tf.math.add(beta, grad))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.multiply(sigma, tf.math.sqrt(tf.math.sqrt(grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 8, 6, 2, 2, 22, 15, 7, 3, 2, 1, 1, 1, 27, 15, 12, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 32], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 5, 6, 8, 1, 4, 1, 4, 0, 8, 5], [4, 0, 3, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 16, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 1, 2, 1, 1, 1, 20, 12, 8, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(grad), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(sigma, sigma))), tf.math.subtract(tf.math.pow(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), sigma))), tf.math.sqrt(tf.math.square(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 3], [0, 1, 0, 2, 1], [34, 39], [0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5], [1, 5, 2], [0], [1, 0, 1], [0, 8], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 6, 6, 7, 1, 8, 6, 3, 2], [0, 0, 0, 3, 0, 0, 3, 3, 2, 0], [0, 28, 81, 25, 31]], "fitness": -0.0925714299082756, "mapping_values": [1, 4, 2, 2, 1, 6, 3, 3, 0, 1, 0, 1, 1, 4, 2, 2, 2], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(alpha, tf.math.multiply(grad, beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.311353921890259, 2.311002731323242, 2.3097009658813477, 2.309575080871582, 2.309746026992798, 2.3092427253723145], "accuracy": [0.08915598690509796, 0.09338264167308807, 0.09536388516426086, 0.0948355570435524, 0.09285431355237961, 0.09179764986038208], "val_loss": [2.3091723918914795, 2.3091723918914795, 2.3091723918914795, 2.3091723918914795, 2.3091723918914795, 2.3091723918914795], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]