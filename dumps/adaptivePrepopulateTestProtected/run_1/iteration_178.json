[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1], [0, 6, 0, 8], [0, 0], [0, 51], [0, 0, 1, 0, 1, 0, 1], [0, 4, 3, 5], [0, 7, 4], [0], [0, 1], [0], [1], [0]], "fitness": -0.8648571372032166, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294093608856201, 2.1946287155151367, 1.793810486793518, 1.3798956871032715, 1.0792826414108276, 0.9152485728263855, 0.849170446395874, 0.8087573647499084, 0.7692657709121704, 0.7355904579162598, 0.7002444863319397, 0.6843482851982117, 0.6613292694091797, 0.6345062851905823, 0.6137093305587769, 0.6041885614395142, 0.586310625076294, 0.5681813955307007, 0.5514998435974121, 0.5459225177764893, 0.5326331257820129, 0.5195435881614685, 0.5121558904647827, 0.5108054280281067, 0.49771639704704285, 0.48887649178504944, 0.4721178710460663, 0.46765440702438354, 0.46528518199920654, 0.45052507519721985, 0.4343051612377167, 0.44208359718322754, 0.4281519949436188, 0.42427459359169006, 0.4201318621635437, 0.4087272882461548, 0.40477779507637024, 0.38372695446014404, 0.3835081160068512, 0.3763080835342407, 0.36496037244796753, 0.35487592220306396, 0.349356085062027, 0.35018712282180786, 0.3469293713569641, 0.33523765206336975, 0.3447909653186798, 0.3312343657016754, 0.3269575834274292, 0.3308967053890228, 0.32471269369125366, 0.32026413083076477, 0.320691853761673, 0.30724450945854187, 0.31813597679138184, 0.30898717045783997, 0.3082773685455322], "accuracy": [0.11755382269620895, 0.32439571619033813, 0.4375908076763153, 0.5341434478759766, 0.6330735683441162, 0.6686038970947266, 0.6761326193809509, 0.7046625018119812, 0.6959450244903564, 0.7113987803459167, 0.7342491149902344, 0.7441553473472595, 0.752212405204773, 0.7584202885627747, 0.7643640041351318, 0.7746664881706238, 0.774270236492157, 0.7848368883132935, 0.7903843522071838, 0.7907806038856506, 0.7911768555641174, 0.8039889335632324, 0.806630551815033, 0.8014793395996094, 0.8133667707443237, 0.8161405324935913, 0.8171972036361694, 0.8293488025665283, 0.8222163319587708, 0.8219521641731262, 0.8319904804229736, 0.832650899887085, 0.8339717388153076, 0.8352925777435303, 0.8345000743865967, 0.8455950617790222, 0.8461233377456665, 0.8515387773513794, 0.8555012345314026, 0.8549728989601135, 0.8532558679580688, 0.8588033318519592, 0.8632941246032715, 0.8636903762817383, 0.8617091774940491, 0.8725399374961853, 0.8676528930664062, 0.8689737319946289, 0.874389111995697, 0.8710870146751404, 0.8751816153526306, 0.8728041052818298, 0.868049144744873, 0.8786157965660095, 0.8730682730674744, 0.8821820020675659, 0.8791441321372986], "val_loss": [2.247105836868286, 2.0274338722229004, 1.1453218460083008, 0.8405705690383911, 0.7323724627494812, 0.6821761727333069, 0.6361474394798279, 0.6192312240600586, 0.6148394346237183, 0.5911441445350647, 0.5524722337722778, 0.5266069173812866, 0.5125908255577087, 0.5165374875068665, 0.5002971887588501, 0.48267045617103577, 0.4909127652645111, 0.48151522874832153, 0.46899259090423584, 0.4702014625072479, 0.46335092186927795, 0.4698672294616699, 0.46164995431900024, 0.45152562856674194, 0.4403904974460602, 0.437516450881958, 0.4452895522117615, 0.43278011679649353, 0.42550137639045715, 0.4150839149951935, 0.4227089583873749, 0.41766855120658875, 0.4109033942222595, 0.39047372341156006, 0.39033108949661255, 0.3988558053970337, 0.3945569694042206, 0.4016163647174835, 0.4008937478065491, 0.3950495719909668, 0.38672590255737305, 0.38907694816589355, 0.4037382900714874, 0.38707682490348816, 0.3819282650947571, 0.3925971984863281, 0.37944701313972473, 0.37696415185928345, 0.37772488594055176, 0.39084288477897644, 0.38667628169059753, 0.3879081606864929, 0.40113377571105957, 0.41207873821258545, 0.4135935604572296, 0.41217729449272156, 0.43000733852386475], "val_accuracy": [0.42399999499320984, 0.4856666624546051, 0.656333327293396, 0.6973333358764648, 0.7379999756813049, 0.7463333606719971, 0.7490000128746033, 0.7580000162124634, 0.7570000290870667, 0.7776666879653931, 0.7803333401679993, 0.7870000004768372, 0.7933333516120911, 0.8050000071525574, 0.8016666769981384, 0.8086666464805603, 0.8143333196640015, 0.8029999732971191, 0.8140000104904175, 0.8230000138282776, 0.8253333568572998, 0.8206666707992554, 0.8379999995231628, 0.8410000205039978, 0.8336666822433472, 0.8346666693687439, 0.8446666598320007, 0.8446666598320007, 0.8443333506584167, 0.846666693687439, 0.8496666550636292, 0.8526666760444641, 0.8523333072662354, 0.8553333282470703, 0.8600000143051147, 0.8603333234786987, 0.8636666536331177, 0.859000027179718, 0.8646666407585144, 0.8643333315849304, 0.8610000014305115, 0.8640000224113464, 0.8693333268165588, 0.8690000176429749, 0.8723333477973938, 0.8690000176429749, 0.8709999918937683, 0.8706666827201843, 0.875333309173584, 0.8726666569709778, 0.8700000047683716, 0.8759999871253967, 0.8736666440963745, 0.8743333220481873, 0.875, 0.8740000128746033, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 6, 4, 2, 2, 7, 4, 3, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.847428560256958, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222557783126831, 1.8636043071746826, 1.3986611366271973, 1.0937139987945557, 0.9411119818687439, 0.8409020304679871, 0.780705451965332, 0.7349851131439209, 0.690427303314209, 0.6643131375312805, 0.6369532346725464, 0.607089102268219, 0.5911450982093811, 0.5817933082580566, 0.556182324886322, 0.5516049861907959, 0.5352653861045837, 0.5204150676727295, 0.5158054232597351, 0.49535536766052246, 0.48733261227607727, 0.4746223986148834, 0.4681284427642822, 0.45819857716560364, 0.4561876058578491, 0.4508863091468811, 0.4368801414966583, 0.4399690628051758, 0.42728734016418457, 0.42006510496139526, 0.4095211625099182, 0.41081804037094116, 0.40283551812171936, 0.38742920756340027, 0.3914552927017212, 0.3771745562553406, 0.37696853280067444, 0.3730548322200775, 0.36530306935310364, 0.36362960934638977, 0.34914496541023254, 0.34933099150657654, 0.34719032049179077, 0.34927311539649963, 0.33239442110061646, 0.33362114429473877, 0.3249775171279907, 0.31976085901260376, 0.30941304564476013, 0.314028263092041, 0.31253618001937866, 0.3024142384529114, 0.29431143403053284, 0.29968947172164917, 0.29686427116394043, 0.2893863618373871, 0.28368231654167175, 0.28394022583961487, 0.27602189779281616, 0.2692359685897827, 0.27015092968940735, 0.26488304138183594, 0.2621300220489502, 0.25271615386009216], "accuracy": [0.25941091775894165, 0.48249900341033936, 0.5669000148773193, 0.6240919232368469, 0.6686038970947266, 0.7025492191314697, 0.7207766771316528, 0.7321357727050781, 0.7483819723129272, 0.7601373791694641, 0.7720248103141785, 0.778232753276825, 0.7880068421363831, 0.7917051911354065, 0.8000264167785645, 0.7961959838867188, 0.8098005652427673, 0.8113855719566345, 0.8181217908859253, 0.8231409192085266, 0.8305375576019287, 0.83119797706604, 0.8314621448516846, 0.8400475382804871, 0.8372738361358643, 0.8399154543876648, 0.8465195894241333, 0.8438779711723328, 0.8500858545303345, 0.8533879518508911, 0.8535200357437134, 0.8558974862098694, 0.8597279191017151, 0.8632941246032715, 0.8614450097084045, 0.8679170608520508, 0.8689737319946289, 0.8663320541381836, 0.8661999702453613, 0.8704266548156738, 0.8728041052818298, 0.8742570281028748, 0.8739928603172302, 0.8746532797813416, 0.8825782537460327, 0.8802007436752319, 0.8842953443527222, 0.8836349248886108, 0.8864086866378784, 0.8854840993881226, 0.8848236799240112, 0.8939374089241028, 0.8916919827461243, 0.8914278149604797, 0.8934090733528137, 0.8969752788543701, 0.8997490406036377, 0.8977677822113037, 0.9001452922821045, 0.9035794734954834, 0.902390718460083, 0.9052965044975281, 0.9039757251739502, 0.909259021282196], "val_loss": [2.034914970397949, 1.5144259929656982, 1.0447698831558228, 0.8374963998794556, 0.7545092701911926, 0.6997854709625244, 0.6573565006256104, 0.6265527606010437, 0.6000358462333679, 0.5889412760734558, 0.5620214939117432, 0.545006275177002, 0.5309011340141296, 0.5213665962219238, 0.5092021226882935, 0.4988311231136322, 0.4905257523059845, 0.4840768277645111, 0.47236692905426025, 0.4668181836605072, 0.45544537901878357, 0.45214250683784485, 0.449287474155426, 0.4395488202571869, 0.4381350874900818, 0.4331493377685547, 0.42736414074897766, 0.4238666892051697, 0.4203159511089325, 0.41677823662757874, 0.4140501022338867, 0.40748098492622375, 0.40782755613327026, 0.40196892619132996, 0.3985822796821594, 0.3952943980693817, 0.40114763379096985, 0.395405113697052, 0.39210399985313416, 0.38657552003860474, 0.3847884237766266, 0.3831043839454651, 0.3814453184604645, 0.38124072551727295, 0.3735957145690918, 0.37427017092704773, 0.37519848346710205, 0.37328270077705383, 0.37049999833106995, 0.3680928647518158, 0.3712857961654663, 0.36959436535835266, 0.36463111639022827, 0.35976675152778625, 0.3610934913158417, 0.36586230993270874, 0.37024182081222534, 0.36017513275146484, 0.3552802801132202, 0.35472995042800903, 0.3521190881729126, 0.3552404046058655, 0.3550097942352295, 0.3514103889465332], "val_accuracy": [0.5486666560173035, 0.6589999794960022, 0.6890000104904175, 0.7089999914169312, 0.7279999852180481, 0.7506666779518127, 0.7639999985694885, 0.7693333625793457, 0.7850000262260437, 0.7826666831970215, 0.7960000038146973, 0.8086666464805603, 0.8149999976158142, 0.8149999976158142, 0.8206666707992554, 0.8236666917800903, 0.8246666789054871, 0.8296666741371155, 0.8370000123977661, 0.8356666564941406, 0.8399999737739563, 0.840666651725769, 0.8423333168029785, 0.8413333296775818, 0.843666672706604, 0.846666693687439, 0.8503333330154419, 0.8513333201408386, 0.8550000190734863, 0.8500000238418579, 0.8493333458900452, 0.8496666550636292, 0.8539999723434448, 0.8583333492279053, 0.8556666374206543, 0.8616666793823242, 0.8613333106040955, 0.862333357334137, 0.8656666874885559, 0.8646666407585144, 0.8650000095367432, 0.8683333396911621, 0.8690000176429749, 0.8669999837875366, 0.8666666746139526, 0.8659999966621399, 0.8666666746139526, 0.8703333139419556, 0.8686666488647461, 0.871666669845581, 0.8713333606719971, 0.875, 0.8740000128746033, 0.875333309173584, 0.8769999742507935, 0.871666669845581, 0.8730000257492065, 0.8766666650772095, 0.8796666860580444, 0.8769999742507935, 0.8776666522026062, 0.8776666522026062, 0.8763333559036255, 0.8769999742507935]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 2, 2, 8, 6, 6, 6, 5], [0, 7, 4, 4, 7, 4], [0], [1], [0], [2], [0]], "fitness": -0.8257142901420593, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.square(grad)), grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5196940898895264, 0.8149682879447937, 0.6746759414672852, 0.6262565851211548, 0.5747953057289124, 0.5449533462524414, 0.5277084708213806, 0.5040828585624695, 0.46949321031570435, 0.4999294877052307, 0.4638614356517792, 0.48941898345947266, 0.48554784059524536, 0.48328256607055664], "accuracy": [0.4791969358921051, 0.7147008180618286, 0.754589855670929, 0.7606657147407532, 0.7889314293861389, 0.8030643463134766, 0.8057059645652771, 0.8095363974571228, 0.8239334225654602, 0.8239334225654602, 0.828292191028595, 0.8255184292793274, 0.8187822103500366, 0.8224804997444153], "val_loss": [0.8232784271240234, 0.616580605506897, 0.5600209832191467, 0.517013669013977, 0.49306535720825195, 0.46280142664909363, 0.46359410881996155, 0.45815640687942505, 0.47109895944595337, 0.4691336750984192, 0.4894125461578369, 0.5092648863792419, 0.4823313057422638, 0.5699813365936279], "val_accuracy": [0.7196666598320007, 0.7776666879653931, 0.7953333258628845, 0.8016666769981384, 0.8259999752044678, 0.8286666870117188, 0.831333339214325, 0.8366666436195374, 0.8510000109672546, 0.8386666774749756, 0.8396666646003723, 0.8433333039283752, 0.8383333086967468, 0.8403333425521851]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 14, 8, 6, 1, 1, 0, 1, 0], "tree_depth": 15}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 7], [0, 2, 0, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 4, 3, 0, 3, 5, 3, 0, 8], [0, 2, 0, 2, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [6, 6, 6, 6, 8, 1, 4, 1, 4, 2, 8, 5, 2, 1, 3], [0, 0, 0, 3, 4, 0, 3, 2, 3, 0, 3, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(beta))), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.add(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(tf.math.square(tf.math.add(beta, sigma))))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.math.multiply(beta, grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}, "mapping_values": [1, 11, 6, 5, 2, 14, 9, 5, 2, 2, 1, 1, 1, 28, 15, 13, 5], "tree_depth": 17}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 7, 3, 9], [0, 2, 0, 3], [16, 41], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 0, 6, 2, 1, 5, 2, 3, 3, 9, 9, 1, 5, 7, 4, 0, 3, 2, 1, 4], [0, 2, 3, 6, 7, 5, 1, 3, 6, 6, 4, 6, 0], [99, 88, 31], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0, 69]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 7, 5, 2, 2, 26, 17, 9, 3, 4, 3, 1, 2], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), beta), tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), sigma), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.square(tf.math.add(tf.math.pow(grad, grad), tf.math.negative(alpha)))))), tf.math.multiply(sigma, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3032114505767822, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 0, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 5, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 0, 3, 6, 8, 1, 4, 3, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 8, 5, 3, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3037710189819336, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 4, 2, 2, 1, 8, 6, 5, 5, 9, 0, 6, 1, 5, 2, 9], [1, 0, 2, 1, 4, 1, 4], [0, 96, 53, 38], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 6, 4, 1, 4, 2, 0], [0, 4, 0, 3, 4, 0, 3, 1, 2, 0], [0, 45, 22, 73, 64, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 23, 16, 7, 3, 16, 8, 8, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.add(tf.math.add(tf.math.subtract(tf.math.sqrt(alpha), tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.divide_no_nan(beta, alpha)))), tf.math.subtract(tf.math.square(tf.math.add(grad, alpha)), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(sigma, grad))), tf.math.pow(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}]