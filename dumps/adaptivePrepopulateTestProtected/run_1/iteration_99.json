[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8562856912612915, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293254852294922, 2.18778920173645, 1.7705035209655762, 1.3317264318466187, 1.0489250421524048, 0.9148579835891724, 0.828276515007019, 0.8004345297813416, 0.759121298789978, 0.719434916973114, 0.6810619235038757, 0.6491813063621521, 0.6435171961784363, 0.617408275604248, 0.599298357963562, 0.5848450064659119, 0.5791146159172058, 0.5672415494918823, 0.561060905456543, 0.531203031539917, 0.5403741002082825, 0.5157923102378845, 0.5061790943145752, 0.4968287944793701, 0.4927123785018921, 0.4760783314704895, 0.4780358672142029, 0.4667055606842041, 0.4599080979824066, 0.4420911371707916, 0.44256791472435, 0.42328333854675293, 0.43205371499061584, 0.4113611876964569, 0.414422869682312, 0.4002276062965393, 0.39657095074653625, 0.4032357633113861, 0.3868902325630188, 0.3949083685874939, 0.380801260471344, 0.3778558075428009, 0.37563851475715637, 0.3602311313152313, 0.3555596172809601, 0.3542885184288025, 0.3406555950641632, 0.34191977977752686, 0.330104798078537, 0.3410400450229645, 0.32528626918792725, 0.3255216181278229, 0.327854186296463, 0.316472589969635, 0.3179785907268524, 0.30450204014778137, 0.3102984130382538, 0.3098340332508087, 0.30169230699539185, 0.3042314648628235, 0.30832943320274353], "accuracy": [0.1294412910938263, 0.3345661163330078, 0.431779146194458, 0.5477479696273804, 0.6365077495574951, 0.6646413803100586, 0.6931713223457336, 0.7049266695976257, 0.7092854380607605, 0.7207766771316528, 0.7448157668113708, 0.7494386434555054, 0.7617223858833313, 0.7697794437408447, 0.7705719470977783, 0.778232753276825, 0.77677983045578, 0.7891955971717834, 0.7889314293861389, 0.7951393723487854, 0.7923656105995178, 0.802271842956543, 0.8064984679222107, 0.8087438941001892, 0.8170651197433472, 0.822348415851593, 0.8150838613510132, 0.8185180425643921, 0.8216879963874817, 0.8294808864593506, 0.8284242749214172, 0.8335754871368408, 0.833179235458374, 0.8417646288871765, 0.8399154543876648, 0.8479725122451782, 0.8466516733169556, 0.842028796672821, 0.8521991968154907, 0.8531237840652466, 0.8482366800308228, 0.8557654023170471, 0.8519350290298462, 0.86118084192276, 0.8605204224586487, 0.8597279191017151, 0.867520809173584, 0.8721436858177185, 0.8712190985679626, 0.8714832663536072, 0.871879518032074, 0.8732003569602966, 0.8745211958885193, 0.8803328275680542, 0.8749174475669861, 0.8823140859603882, 0.8784837126731873, 0.8753136992454529, 0.8811253309249878, 0.8804649114608765, 0.8792761564254761], "val_loss": [2.2464981079101562, 2.019801378250122, 1.1517075300216675, 0.8952363133430481, 0.765784502029419, 0.7095935940742493, 0.6818742156028748, 0.6555783152580261, 0.6447471380233765, 0.6037163138389587, 0.5797941088676453, 0.5784065127372742, 0.5500980019569397, 0.5335356593132019, 0.5291445255279541, 0.5227247476577759, 0.5148569345474243, 0.5101556181907654, 0.5044214129447937, 0.5029190182685852, 0.4941151440143585, 0.49766069650650024, 0.4862549602985382, 0.4835376739501953, 0.48498010635375977, 0.47752881050109863, 0.47222819924354553, 0.4694567024707794, 0.4696788787841797, 0.4642355442047119, 0.45841965079307556, 0.46858781576156616, 0.45465177297592163, 0.44553449749946594, 0.4443344175815582, 0.4556608200073242, 0.44356998801231384, 0.44788581132888794, 0.46738606691360474, 0.4565325379371643, 0.4467877149581909, 0.45265257358551025, 0.4527398645877838, 0.44775164127349854, 0.4479127526283264, 0.4436265826225281, 0.4509619176387787, 0.44800397753715515, 0.4500875771045685, 0.45928511023521423, 0.45434489846229553, 0.4655170142650604, 0.46146512031555176, 0.4471258819103241, 0.459148645401001, 0.4825146198272705, 0.46760255098342896, 0.4651927947998047, 0.507868230342865, 0.5122582912445068, 0.49619346857070923], "val_accuracy": [0.41066667437553406, 0.4546666741371155, 0.6470000147819519, 0.6779999732971191, 0.7099999785423279, 0.7386666536331177, 0.7483333349227905, 0.7519999742507935, 0.7566666603088379, 0.7683333158493042, 0.7743333578109741, 0.7789999842643738, 0.7929999828338623, 0.7946666479110718, 0.7976666688919067, 0.7963333129882812, 0.7943333387374878, 0.7979999780654907, 0.8050000071525574, 0.8019999861717224, 0.8043333292007446, 0.8096666932106018, 0.8213333487510681, 0.8213333487510681, 0.8203333616256714, 0.8246666789054871, 0.831333339214325, 0.8330000042915344, 0.8309999704360962, 0.8349999785423279, 0.8393333554267883, 0.8396666646003723, 0.8383333086967468, 0.8429999947547913, 0.8416666388511658, 0.8453333377838135, 0.8446666598320007, 0.8489999771118164, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8420000076293945, 0.8493333458900452, 0.8489999771118164, 0.8500000238418579, 0.8543333411216736, 0.8560000061988831, 0.8526666760444641, 0.8556666374206543, 0.8553333282470703, 0.8606666922569275, 0.8483333587646484, 0.859333336353302, 0.859000027179718, 0.8556666374206543, 0.8636666536331177, 0.859333336353302, 0.8569999933242798, 0.8616666793823242, 0.8603333234786987, 0.8616666793823242]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8425714373588562, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2230072021484375, 1.8715927600860596, 1.3926482200622559, 1.0851945877075195, 0.9373073577880859, 0.839216947555542, 0.7788795828819275, 0.7322385907173157, 0.6883530616760254, 0.6637906432151794, 0.6375603079795837, 0.6078944206237793, 0.5864013433456421, 0.5816026926040649, 0.5589199662208557, 0.5458548665046692, 0.530482292175293, 0.5132338404655457, 0.49870747327804565, 0.4915603995323181, 0.4848830997943878, 0.47278520464897156, 0.4662839472293854, 0.45606696605682373, 0.4469689726829529, 0.44166359305381775, 0.4306361675262451, 0.4248129427433014, 0.4237130582332611, 0.4182814061641693, 0.40812623500823975, 0.38774824142456055, 0.39286643266677856, 0.3816163241863251, 0.37989577651023865, 0.37097999453544617, 0.3686729371547699, 0.36473485827445984, 0.3609057664871216, 0.3523099422454834, 0.3501986563205719, 0.3456082344055176, 0.34005656838417053, 0.3388136029243469], "accuracy": [0.27724209427833557, 0.4819706678390503, 0.5688812732696533, 0.6272619366645813, 0.6664905548095703, 0.7004358768463135, 0.7156254053115845, 0.735569953918457, 0.7510236501693726, 0.7520803213119507, 0.7687227725982666, 0.7817989587783813, 0.7897239327430725, 0.7907806038856506, 0.7984414100646973, 0.8098005652427673, 0.8109893202781677, 0.8168009519577026, 0.8197067975997925, 0.8228767514228821, 0.8253863453865051, 0.8313300609588623, 0.8352925777435303, 0.8403117060661316, 0.8392550349235535, 0.8433496356010437, 0.847840428352356, 0.8466516733169556, 0.8481045961380005, 0.8548408150672913, 0.8529917001724243, 0.8644828796386719, 0.86118084192276, 0.8691058158874512, 0.8667283058166504, 0.8729361891746521, 0.868049144744873, 0.8713511824607849, 0.8693699836730957, 0.8732003569602966, 0.8732003569602966, 0.8722757697105408, 0.8772949576377869, 0.8774270415306091], "val_loss": [2.043982744216919, 1.5212883949279785, 1.0440866947174072, 0.8377165794372559, 0.7496621012687683, 0.6943011283874512, 0.6631664633750916, 0.619450032711029, 0.5899120569229126, 0.5693767666816711, 0.5482980608940125, 0.533616304397583, 0.5219570398330688, 0.5053919553756714, 0.49540209770202637, 0.4871155321598053, 0.4722079336643219, 0.4678502082824707, 0.4584226608276367, 0.45644158124923706, 0.446150541305542, 0.4411173462867737, 0.43145787715911865, 0.4287983477115631, 0.4247463345527649, 0.4200047254562378, 0.42164236307144165, 0.4091229736804962, 0.4252154231071472, 0.4047966003417969, 0.4045567214488983, 0.3951801061630249, 0.39206913113594055, 0.3891938030719757, 0.38778913021087646, 0.3830415904521942, 0.38423559069633484, 0.38183820247650146, 0.37722697854042053, 0.3793952763080597, 0.37221869826316833, 0.3803383708000183, 0.3704453110694885, 0.36822396516799927], "val_accuracy": [0.5496666431427002, 0.6460000276565552, 0.6763333082199097, 0.6976666450500488, 0.7200000286102295, 0.7353333234786987, 0.7506666779518127, 0.7680000066757202, 0.7773333191871643, 0.7889999747276306, 0.7979999780654907, 0.8053333163261414, 0.8130000233650208, 0.8180000185966492, 0.8213333487510681, 0.828000009059906, 0.8333333134651184, 0.8333333134651184, 0.8370000123977661, 0.8339999914169312, 0.840666651725769, 0.8403333425521851, 0.8479999899864197, 0.8456666469573975, 0.8479999899864197, 0.8503333330154419, 0.8483333587646484, 0.8550000190734863, 0.843999981880188, 0.8539999723434448, 0.8519999980926514, 0.862333357334137, 0.856333315372467, 0.862666666507721, 0.862333357334137, 0.8629999756813049, 0.8636666536331177, 0.8603333234786987, 0.8683333396911621, 0.8643333315849304, 0.8643333315849304, 0.8640000224113464, 0.8666666746139526, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8374285697937012, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5304714441299438, 0.8230538368225098, 0.7078276872634888, 0.6599571108818054, 0.6424054503440857, 0.584431529045105, 0.577243447303772, 0.5352339148521423, 0.5304271578788757, 0.5184811353683472, 0.5038671493530273, 0.5349951386451721, 0.5537078976631165, 0.5281715989112854], "accuracy": [0.48051777482032776, 0.707568347454071, 0.7481178045272827, 0.7594769597053528, 0.7717606425285339, 0.7798177003860474, 0.7969884872436523, 0.8043851256370544, 0.8078193068504333, 0.8133667707443237, 0.8241975903511047, 0.8164047002792358, 0.8127063512802124, 0.8120459914207458], "val_loss": [0.838922917842865, 0.6745317578315735, 0.6098854541778564, 0.5866156816482544, 0.5643730163574219, 0.5454675555229187, 0.5344996452331543, 0.5229360461235046, 0.5723795294761658, 0.5727137327194214, 0.5408788919448853, 0.570508599281311, 0.6069543361663818, 0.6010273694992065], "val_accuracy": [0.7093333601951599, 0.746666669845581, 0.7720000147819519, 0.7826666831970215, 0.7943333387374878, 0.8083333373069763, 0.8086666464805603, 0.8106666803359985, 0.8233333230018616, 0.8193333148956299, 0.8149999976158142, 0.8190000057220459, 0.812666654586792, 0.8133333325386047]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3], [0, 3, 1, 0, 2], [20, 39], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [8, 6, 3, 5, 3, 5, 3, 8, 7, 8], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [1, 1], [0], [0], [0], [1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [6], [0]], "fitness": -0.2702857255935669, "mapping_values": [1, 7, 4, 3, 1, 16, 10, 6, 3, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta))), tf.math.add(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.31982421875, 3.249302864074707, 2.3078441619873047, 2.3015708923339844, 2.3434603214263916, 2.3062665462493896], "accuracy": [0.19918107986450195, 0.160084530711174, 0.10117553919553757, 0.10949676483869553, 0.1394795924425125, 0.10130762308835983], "val_loss": [2.2095866203308105, 2.31183123588562, 2.3041281700134277, 2.2881929874420166, 2.3086111545562744, 2.3032708168029785], "val_accuracy": [0.27166667580604553, 0.09933333098888397, 0.1003333330154419, 0.19699999690055847, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [92, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 6, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 8, 6, 8, 1, 4, 1, 4, 2, 8], [0, 2, 0, 3, 0, 4, 0, 3, 2, 0], [16, 99, 96, 99, 26, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(beta, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 13, 7, 6, 3], "tree_depth": 16}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 2, 8], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 6], [0, 1, 0, 3, 1], [16, 16], [0, 1, 1], [6], [1, 3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 1, 3], [0, 2, 2, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 25]], "fitness": -0.0917142853140831, "mapping_values": [1, 9, 5, 4, 2, 11, 6, 5, 2, 3, 1, 2, 0, 20, 10, 10, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(beta, tf.math.pow(beta, sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.subtract(beta, tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3096840381622314, 2.3110105991363525, 2.3101444244384766, 2.3089208602905273, 2.31103253364563, 2.309314489364624], "accuracy": [0.09100515395402908, 0.08902391046285629, 0.0882314071059227, 0.09536388516426086, 0.0878351628780365, 0.09417514503002167], "val_loss": [2.3092288970947266, 2.3092288970947266, 2.3092288970947266, 2.3092288970947266, 2.3092288970947266, 2.3092288970947266], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [3, 2, 5, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 4, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 64, 99, 61, 1]], "fitness": -0.08142857253551483, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 5, 2, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3399262404608.0, 4135557005312.0, 4169831284736.0, 4169329278976.0, 4109003653120.0, 4119873978368.0], "accuracy": [0.09932637959718704, 0.10698718577623367, 0.09932637959718704, 0.09681680053472519, 0.10196803510189056, 0.10315678268671036], "val_loss": [2855812202496.0, 2855812202496.0, 2855812202496.0, 2855812202496.0, 2855812464640.0, 2855812464640.0], "val_accuracy": [0.07500000298023224, 0.07500000298023224, 0.07500000298023224, 0.07500000298023224, 0.07500000298023224, 0.07500000298023224]}}]