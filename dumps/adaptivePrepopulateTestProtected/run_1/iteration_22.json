[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223330497741699, 1.8670156002044678, 1.3935511112213135, 1.1012579202651978, 0.9477801322937012, 0.8379126191139221, 0.7764281630516052, 0.7235901951789856, 0.6839449405670166, 0.6511124968528748, 0.6340097188949585, 0.6069210171699524, 0.5817078948020935, 0.5635776519775391, 0.5524153113365173, 0.5367791652679443, 0.5212588906288147, 0.5178380608558655, 0.5019086003303528, 0.4879888892173767, 0.4858485460281372, 0.4747111201286316, 0.45951735973358154, 0.4532293975353241, 0.4492609202861786, 0.4330301284790039, 0.4310648441314697, 0.42051371932029724, 0.41327017545700073, 0.4060419201850891, 0.3997148871421814, 0.39729252457618713, 0.3869434893131256, 0.3869549036026001, 0.38186177611351013, 0.3692651391029358, 0.36346086859703064, 0.3634459972381592, 0.3600703179836273, 0.3489670753479004, 0.3429599404335022, 0.34309908747673035, 0.3401198089122772, 0.3303268253803253, 0.3301240801811218, 0.3276282846927643, 0.3180643618106842, 0.3136589229106903, 0.3090694546699524, 0.3071834146976471, 0.3011736273765564, 0.30332496762275696, 0.29351481795310974, 0.2937680780887604], "accuracy": [0.26680755615234375, 0.49451854825019836, 0.5679566860198975, 0.6209219098091125, 0.6646413803100586, 0.7078325152397156, 0.7234182953834534, 0.7387399077415466, 0.7541936039924622, 0.7672698497772217, 0.7677981853485107, 0.7820631265640259, 0.7897239327430725, 0.7977809906005859, 0.798309326171875, 0.8082155585289001, 0.8138951063156128, 0.8094043135643005, 0.822348415851593, 0.8269713521003723, 0.8208954930305481, 0.8310658931732178, 0.8350284099578857, 0.8367455005645752, 0.8368775844573975, 0.8444063067436218, 0.843481719493866, 0.850350022315979, 0.8502179384231567, 0.8570862412452698, 0.857218325138092, 0.8574824929237366, 0.8610487580299377, 0.8610487580299377, 0.8607845902442932, 0.8658037185668945, 0.8701624870300293, 0.8689737319946289, 0.8708229064941406, 0.8792761564254761, 0.8798044919967651, 0.8765024542808533, 0.8765024542808533, 0.8824461698532104, 0.880729079246521, 0.8844274282455444, 0.8838990926742554, 0.8887861371040344, 0.8878615498542786, 0.8903711438179016, 0.8924844861030579, 0.8912957310676575, 0.8976356983184814, 0.8960506916046143], "val_loss": [2.040694236755371, 1.5166728496551514, 1.045767068862915, 0.8421168327331543, 0.7569165229797363, 0.7011509537696838, 0.6573318839073181, 0.6179470419883728, 0.5908101201057434, 0.5737177133560181, 0.5541383624076843, 0.5365487933158875, 0.518412172794342, 0.5104728937149048, 0.49868762493133545, 0.485697478055954, 0.48461878299713135, 0.46694132685661316, 0.459992378950119, 0.44818419218063354, 0.45110249519348145, 0.4507465958595276, 0.4339507520198822, 0.4287099242210388, 0.42590731382369995, 0.4119842052459717, 0.4104468524456024, 0.4069807529449463, 0.40372517704963684, 0.3985708951950073, 0.3967111110687256, 0.39305025339126587, 0.39346253871917725, 0.3906964063644409, 0.3815464675426483, 0.3792845904827118, 0.37928369641304016, 0.3762374818325043, 0.37582898139953613, 0.37387406826019287, 0.3717586398124695, 0.36671704053878784, 0.363382488489151, 0.36401286721229553, 0.3619881868362427, 0.35666540265083313, 0.3588123917579651, 0.3541429042816162, 0.35232576727867126, 0.35342442989349365, 0.3524846136569977, 0.34847813844680786, 0.34814298152923584, 0.35015836358070374], "val_accuracy": [0.5323333144187927, 0.6446666717529297, 0.6756666898727417, 0.7043333053588867, 0.7239999771118164, 0.7493333220481873, 0.753000020980835, 0.7706666588783264, 0.7820000052452087, 0.7873333096504211, 0.7956666946411133, 0.800000011920929, 0.8136666417121887, 0.812666654586792, 0.8199999928474426, 0.824999988079071, 0.8246666789054871, 0.8326666951179504, 0.8303333520889282, 0.8376666903495789, 0.8333333134651184, 0.8343333601951599, 0.8446666598320007, 0.843666672706604, 0.846666693687439, 0.8513333201408386, 0.8546666502952576, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8529999852180481, 0.859333336353302, 0.8546666502952576, 0.8569999933242798, 0.8606666922569275, 0.8633333444595337, 0.8643333315849304, 0.8629999756813049, 0.8576666712760925, 0.8703333139419556, 0.8640000224113464, 0.8643333315849304, 0.8676666617393494, 0.8663333058357239, 0.8713333606719971, 0.871999979019165, 0.8693333268165588, 0.8693333268165588, 0.878000020980835, 0.8756666779518127, 0.8706666827201843, 0.8756666779518127, 0.8769999742507935, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8628571629524231, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222476005554199, 1.8675577640533447, 1.3980778455734253, 1.0934430360794067, 0.9423525929450989, 0.8432852625846863, 0.7713620066642761, 0.7314704060554504, 0.6956834197044373, 0.6672417521476746, 0.6453335285186768, 0.617773711681366, 0.6037718653678894, 0.5786229372024536, 0.5704588890075684, 0.5590187907218933, 0.5365476608276367, 0.5179027318954468, 0.514510989189148, 0.5103015303611755, 0.49369966983795166, 0.49112415313720703, 0.47751790285110474, 0.46553605794906616, 0.46227097511291504, 0.4478212594985962, 0.43808215856552124, 0.4413891136646271, 0.42797258496284485, 0.42381471395492554, 0.41688764095306396, 0.41012388467788696, 0.4062621593475342, 0.39610686898231506, 0.39711999893188477, 0.38501131534576416, 0.3783744275569916, 0.3724144399166107, 0.3675837516784668, 0.3723432421684265, 0.354579895734787, 0.3540305495262146], "accuracy": [0.2859595715999603, 0.48870691657066345, 0.5587108731269836, 0.617751955986023, 0.6647734642028809, 0.6944921612739563, 0.7165499925613403, 0.7343811988830566, 0.7425703406333923, 0.76106196641922, 0.7701756954193115, 0.774270236492157, 0.7799497842788696, 0.7931581139564514, 0.7938185334205627, 0.8000264167785645, 0.8030643463134766, 0.8161405324935913, 0.8142913579940796, 0.813498854637146, 0.8277638554573059, 0.8220842480659485, 0.832650899887085, 0.8352925777435303, 0.8362171649932861, 0.8430854678153992, 0.8470479249954224, 0.8421608805656433, 0.845859169960022, 0.8516708612442017, 0.8531237840652466, 0.852331280708313, 0.8580108284950256, 0.863558292388916, 0.8613129258155823, 0.8654074668884277, 0.8688416481018066, 0.8730682730674744, 0.8684453964233398, 0.8685774803161621, 0.8732003569602966, 0.872407853603363], "val_loss": [2.0403079986572266, 1.5137581825256348, 1.0507352352142334, 0.8538139462471008, 0.7765083909034729, 0.7184244990348816, 0.6782587766647339, 0.6393045783042908, 0.6109278798103333, 0.5890920162200928, 0.5722413659095764, 0.5522801280021667, 0.5501622557640076, 0.5249976515769958, 0.5138676166534424, 0.5023320913314819, 0.4932345747947693, 0.48924902081489563, 0.4760039448738098, 0.4699435234069824, 0.47213834524154663, 0.45680683851242065, 0.4576663374900818, 0.44275668263435364, 0.4418899714946747, 0.43686094880104065, 0.42997217178344727, 0.42605435848236084, 0.42311862111091614, 0.4206928312778473, 0.4185003638267517, 0.4116115868091583, 0.41277050971984863, 0.4071480333805084, 0.40320026874542236, 0.39932262897491455, 0.39417949318885803, 0.3929758667945862, 0.40223178267478943, 0.4033588469028473, 0.3843488395214081, 0.3884846270084381], "val_accuracy": [0.5476666688919067, 0.6603333353996277, 0.6740000247955322, 0.6993333101272583, 0.7213333249092102, 0.7396666407585144, 0.7573333382606506, 0.7689999938011169, 0.7753333449363708, 0.784333348274231, 0.7926666736602783, 0.800000011920929, 0.8026666641235352, 0.8130000233650208, 0.8203333616256714, 0.8199999928474426, 0.8273333311080933, 0.8266666531562805, 0.8346666693687439, 0.8386666774749756, 0.8299999833106995, 0.8423333168029785, 0.8376666903495789, 0.8446666598320007, 0.8443333506584167, 0.8460000157356262, 0.8500000238418579, 0.8519999980926514, 0.8539999723434448, 0.8566666841506958, 0.8446666598320007, 0.859666645526886, 0.8536666631698608, 0.8503333330154419, 0.856333315372467, 0.859666645526886, 0.8610000014305115, 0.8603333234786987, 0.8550000190734863, 0.8533333539962769, 0.8606666922569275, 0.8586666584014893]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 1, 1], [0, 2, 2], [0, 0, 3], [0, 40], [0, 0, 1, 1], [0, 7], [0, 0], [0, 96], [0, 1], [0], [1], [0]], "fitness": -0.8485714197158813, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294062376022339, 2.1930837631225586, 1.7864913940429688, 1.3460408449172974, 1.0784032344818115, 0.909339964389801, 0.8669348955154419, 0.8018748760223389, 0.7477281093597412, 0.7243147492408752, 0.6935278177261353, 0.6573327779769897, 0.6314659118652344, 0.6183817982673645, 0.6055179238319397, 0.5802337527275085, 0.562134861946106, 0.5468807220458984, 0.5480194687843323, 0.535927414894104, 0.52686607837677, 0.5130200386047363, 0.49165889620780945, 0.4853830337524414, 0.4722757041454315, 0.4535183906555176, 0.46613648533821106, 0.45183685421943665, 0.4410240352153778, 0.4398743212223053], "accuracy": [0.12389380484819412, 0.32320696115493774, 0.4349491596221924, 0.5424646735191345, 0.6342623233795166, 0.663848876953125, 0.6890767216682434, 0.6930392384529114, 0.711530864238739, 0.7152291536331177, 0.7338528633117676, 0.7378153204917908, 0.7578919529914856, 0.7637035846710205, 0.7635715007781982, 0.7738739848136902, 0.7848368883132935, 0.7857614755630493, 0.7881389260292053, 0.7975168228149414, 0.7957997918128967, 0.8050455451011658, 0.817461371421814, 0.8119139075279236, 0.8201030492782593, 0.826310932636261, 0.8230088353157043, 0.8290846943855286, 0.8269713521003723, 0.8296129703521729], "val_loss": [2.246518135070801, 2.0260818004608154, 1.1556384563446045, 0.893238365650177, 0.7559634447097778, 0.7139760851860046, 0.6727049350738525, 0.657158374786377, 0.6370962858200073, 0.5995873808860779, 0.5732125043869019, 0.5547512769699097, 0.5356218814849854, 0.5155029892921448, 0.5100377798080444, 0.5019408464431763, 0.49494481086730957, 0.48365306854248047, 0.48084452748298645, 0.4756990671157837, 0.46723639965057373, 0.45699793100357056, 0.44588038325309753, 0.4376002252101898, 0.44020897150039673, 0.4399656653404236, 0.43506449460983276, 0.43640023469924927, 0.43148770928382874, 0.42458757758140564], "val_accuracy": [0.4216666519641876, 0.47566667199134827, 0.6473333239555359, 0.6886666417121887, 0.7149999737739563, 0.7306666374206543, 0.7356666922569275, 0.7453333139419556, 0.7446666955947876, 0.7630000114440918, 0.7763333320617676, 0.7670000195503235, 0.7866666913032532, 0.7933333516120911, 0.8143333196640015, 0.8050000071525574, 0.8113333582878113, 0.8173333406448364, 0.815666675567627, 0.8193333148956299, 0.8259999752044678, 0.8289999961853027, 0.8349999785423279, 0.8410000205039978, 0.8453333377838135, 0.8346666693687439, 0.8363333344459534, 0.8393333554267883, 0.8426666855812073, 0.8379999995231628]}, "mapping_values": [1, 10, 5, 5, 3, 6, 3, 3, 2, 4, 2, 2, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0], [0, 9], [0], [0], [1], [0], [2], [0]], "fitness": -0.8088571429252625, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.469717264175415, 0.7776277661323547, 0.6437880992889404, 0.5842677354812622, 0.5832498669624329, 0.524099588394165, 0.48039510846138, 0.4639962315559387, 0.4706372916698456, 0.4770165681838989, 0.4484370946884155, 0.4520259201526642, 0.47026243805885315, 0.5377885699272156, 0.5475441217422485, 0.5802807807922363, 0.6178510189056396], "accuracy": [0.4905560612678528, 0.7276449799537659, 0.7676661014556885, 0.7873464822769165, 0.7907806038856506, 0.8094043135643005, 0.8267071843147278, 0.8337075710296631, 0.8345000743865967, 0.8335754871368408, 0.8372738361358643, 0.8363492488861084, 0.8380662798881531, 0.8261788487434387, 0.8391229510307312, 0.8173292875289917, 0.8086118102073669], "val_loss": [0.8123828768730164, 0.6248149871826172, 0.5330142974853516, 0.5276984572410583, 0.4776226282119751, 0.4818287789821625, 0.4884887635707855, 0.48447108268737793, 0.49019286036491394, 0.46822306513786316, 0.5283037424087524, 0.5381028652191162, 0.5306717157363892, 0.5598288774490356, 0.6349303126335144, 0.6590074300765991, 0.6716688871383667], "val_accuracy": [0.7273333072662354, 0.765333354473114, 0.800000011920929, 0.812666654586792, 0.8353333473205566, 0.8326666951179504, 0.8320000171661377, 0.843666672706604, 0.840666651725769, 0.8450000286102295, 0.8386666774749756, 0.8500000238418579, 0.8476666808128357, 0.8399999737739563, 0.8373333215713501, 0.8226666450500488, 0.8140000104904175]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [4, 2, 9, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 5, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 9, 2, 1, 5, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 30, 71, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 8, 5, 3, 2, 2, 1, 1, 1, 15, 9, 6, 6], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3031599521636963, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 8], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 5, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [86], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, grad)), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha)))))", "other_info": {"loss": [2.3033032417297363, 2.302584648132324, 2.302584171295166, 2.302584409713745, 2.302584648132324, 2.302584648132324, 2.302584409713745, 2.302584409713745, 2.302584648132324, 2.302584409713745, 2.302584409713745], "accuracy": [0.10777968913316727, 0.1072513535618782, 0.11081759631633759, 0.10738343745470047, 0.10553427785634995, 0.10236428678035736, 0.10447761416435242, 0.1088363528251648, 0.09998679161071777, 0.11359133571386337, 0.10434553027153015], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025848865509033, 2.3025853633880615, 2.3025853633880615, 2.3025848865509033, 2.3025853633880615, 2.3025848865509033, 2.3025853633880615, 2.3025851249694824], "val_accuracy": [0.0989999994635582, 0.09933333098888397, 0.0989999994635582, 0.10133333504199982, 0.1003333330154419, 0.10199999809265137, 0.0989999994635582, 0.0989999994635582, 0.10133333504199982, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [54, 51], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 6, 3, 5], [0, 3, 3, 3, 4], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [8, 3, 3, 1, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 8]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 11, 6, 5, 1, 2, 1, 1, 1, 4, 2, 2, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.multiply(grad, tf.math.square(grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3036935329437256, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 8, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 3, 3, 5], [0, 2, 0, 1], [16, 71], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 9, 1, 4, 2, 8, 7], [0, 0, 0, 3, 0, 3, 1, 3, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09057142585515976, "mapping_values": [1, 6, 4, 2, 1, 6, 3, 3, 2, 2, 1, 1, 1, 21, 12, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(sigma, tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.sqrt(tf.math.add(sigma, beta)))", "other_info": {"loss": [2.3101468086242676, 2.310863971710205, 2.310710906982422, 2.3100178241729736, 2.3086154460906982, 2.309596300125122], "accuracy": [0.0878351628780365, 0.08770307898521423, 0.09192973375320435, 0.09047681838274002, 0.09113723784685135, 0.09074098616838455], "val_loss": [2.3099608421325684, 2.3099608421325684, 2.3099608421325684, 2.3099608421325684, 2.3099608421325684, 2.3099608421325684], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]