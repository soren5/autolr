[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2238242626190186, 1.8702408075332642, 1.3989253044128418, 1.0938103199005127, 0.9440132975578308, 0.843924880027771, 0.7770308256149292, 0.7348120808601379, 0.6891900300979614, 0.6686111092567444, 0.6465572118759155, 0.6186468601226807, 0.59220290184021, 0.5814334154129028, 0.5669078230857849, 0.5489019155502319, 0.5301827788352966, 0.5177485942840576, 0.5101649165153503, 0.5117051601409912, 0.4893052577972412, 0.48222053050994873, 0.4678787291049957, 0.4636562168598175, 0.45587465167045593, 0.44814491271972656, 0.43622511625289917, 0.4354732930660248, 0.4265357553958893, 0.4142124354839325, 0.40815725922584534, 0.40005847811698914, 0.4003210663795471, 0.39108172059059143, 0.38397613167762756, 0.3733125925064087, 0.3779296278953552, 0.36518383026123047, 0.3614937663078308, 0.35672062635421753, 0.3492109775543213, 0.3464018404483795, 0.339365154504776, 0.3396804630756378, 0.3307111859321594, 0.3236643671989441, 0.31257879734039307, 0.321456640958786, 0.3110101521015167, 0.31273698806762695, 0.3105744421482086, 0.29919567704200745, 0.29805487394332886, 0.2930542230606079, 0.2938970923423767, 0.28714412450790405, 0.27642741799354553, 0.2792717218399048, 0.27095139026641846], "accuracy": [0.2674679756164551, 0.4842160940170288, 0.5562012791633606, 0.6153744459152222, 0.6609430909156799, 0.6980583667755127, 0.7190595865249634, 0.7337207794189453, 0.748778223991394, 0.7569673657417297, 0.7651565074920654, 0.7724210619926453, 0.7843085527420044, 0.7864218950271606, 0.7895918488502502, 0.7981772422790527, 0.8043851256370544, 0.8068947196006775, 0.8137630224227905, 0.8169330358505249, 0.8247259259223938, 0.8222163319587708, 0.8313300609588623, 0.8313300609588623, 0.8359529972076416, 0.8407079577445984, 0.843481719493866, 0.845859169960022, 0.8451988101005554, 0.8507462739944458, 0.8564258217811584, 0.8552370667457581, 0.856689989566803, 0.8610487580299377, 0.8625016212463379, 0.868049144744873, 0.8625016212463379, 0.8684453964233398, 0.8697662353515625, 0.8705587387084961, 0.8745211958885193, 0.8692378997802734, 0.8753136992454529, 0.8790120482444763, 0.8804649114608765, 0.8819178342819214, 0.8879936337471008, 0.8854840993881226, 0.8858803510665894, 0.8870691061019897, 0.884691596031189, 0.8912957310676575, 0.891559898853302, 0.8919561505317688, 0.8942015767097473, 0.8982961177825928, 0.8972394466400146, 0.8985602855682373, 0.9022586345672607], "val_loss": [2.0391974449157715, 1.5139026641845703, 1.0389410257339478, 0.833385169506073, 0.7425699830055237, 0.6892187595367432, 0.6448782086372375, 0.6089656352996826, 0.5808338522911072, 0.5622445344924927, 0.5464872121810913, 0.5286971926689148, 0.5147833824157715, 0.4997008442878723, 0.4904420077800751, 0.4809882342815399, 0.4727213978767395, 0.4639192223548889, 0.45640018582344055, 0.4523184895515442, 0.44721314311027527, 0.4373686611652374, 0.43181267380714417, 0.4304860830307007, 0.4228566884994507, 0.4188160002231598, 0.41898444294929504, 0.4127434194087982, 0.4063724875450134, 0.4022892117500305, 0.4021618664264679, 0.400217741727829, 0.39576902985572815, 0.38946452736854553, 0.38671496510505676, 0.3825148940086365, 0.3844337463378906, 0.38124749064445496, 0.3744789659976959, 0.37623274326324463, 0.37700000405311584, 0.3697681427001953, 0.3748103380203247, 0.36868640780448914, 0.3667578101158142, 0.3650318682193756, 0.3685290217399597, 0.3615975081920624, 0.3626455068588257, 0.3592783510684967, 0.3611542284488678, 0.36187154054641724, 0.35318341851234436, 0.35676851868629456, 0.3524584174156189, 0.35657671093940735, 0.35240715742111206, 0.34654515981674194, 0.3482426404953003], "val_accuracy": [0.5376666784286499, 0.656000018119812, 0.6850000023841858, 0.7146666646003723, 0.7383333444595337, 0.7543333172798157, 0.765999972820282, 0.7773333191871643, 0.7889999747276306, 0.7926666736602783, 0.7963333129882812, 0.8029999732971191, 0.8086666464805603, 0.8209999799728394, 0.824999988079071, 0.82833331823349, 0.8306666612625122, 0.8336666822433472, 0.8379999995231628, 0.8443333506584167, 0.843666672706604, 0.8416666388511658, 0.8476666808128357, 0.8476666808128357, 0.846666693687439, 0.8483333587646484, 0.8503333330154419, 0.856333315372467, 0.8576666712760925, 0.8619999885559082, 0.8586666584014893, 0.8613333106040955, 0.859333336353302, 0.862333357334137, 0.8650000095367432, 0.8650000095367432, 0.8633333444595337, 0.8683333396911621, 0.8663333058357239, 0.8686666488647461, 0.8679999709129333, 0.8696666955947876, 0.8686666488647461, 0.871666669845581, 0.8740000128746033, 0.8726666569709778, 0.8709999918937683, 0.8736666440963745, 0.875333309173584, 0.8740000128746033, 0.8769999742507935, 0.8736666440963745, 0.875, 0.8823333382606506, 0.8769999742507935, 0.8786666393280029, 0.8726666569709778, 0.8786666393280029, 0.8809999823570251]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8625714182853699, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220231533050537, 1.8629111051559448, 1.3864696025848389, 1.0993908643722534, 0.934485673904419, 0.8451372981071472, 0.7831291556358337, 0.7320266366004944, 0.7034378051757812, 0.662696123123169, 0.6460015773773193, 0.6229645609855652, 0.6043168306350708, 0.5837880969047546, 0.572793185710907, 0.5565598011016846, 0.5407483577728271, 0.5279334187507629, 0.5207136273384094, 0.525547206401825, 0.4932038486003876, 0.4909701645374298, 0.4742320775985718, 0.4573616683483124, 0.45913299918174744, 0.45592716336250305, 0.4470084011554718, 0.4395030438899994, 0.427336186170578, 0.4267619252204895, 0.41642799973487854, 0.4053475260734558, 0.40022706985473633, 0.3936576247215271, 0.39152342081069946, 0.3780088722705841, 0.3821145296096802, 0.37669041752815247, 0.3665851950645447, 0.3619843125343323, 0.35230857133865356, 0.35118943452835083, 0.35266032814979553, 0.34423092007637024, 0.33392706513404846, 0.33391597867012024], "accuracy": [0.2802800238132477, 0.4885748326778412, 0.5695416927337646, 0.6104874014854431, 0.6670188903808594, 0.6915863156318665, 0.7157574892044067, 0.7322678565979004, 0.7390040755271912, 0.7561748623847961, 0.763439416885376, 0.7709681391716003, 0.7800818681716919, 0.7915731072425842, 0.793422281742096, 0.7976489067077637, 0.8014793395996094, 0.8082155585289001, 0.813498854637146, 0.8127063512802124, 0.8236692547798157, 0.8216879963874817, 0.8308017253875732, 0.8355567455291748, 0.834632158279419, 0.8355567455291748, 0.8401796221733093, 0.8425571322441101, 0.8462554216384888, 0.8491612672805786, 0.848368763923645, 0.8543124794960022, 0.8508783578872681, 0.8577466607093811, 0.8568220734596252, 0.8647470474243164, 0.8621054291725159, 0.8673887252807617, 0.8665962219238281, 0.8651432991027832, 0.8749174475669861, 0.8713511824607849, 0.8754457831382751, 0.8750495314598083, 0.8796724081039429, 0.8766345381736755], "val_loss": [2.0348715782165527, 1.5050045251846313, 1.0381584167480469, 0.831161618232727, 0.7326236963272095, 0.6762973070144653, 0.6316404342651367, 0.5941107869148254, 0.567969560623169, 0.5520706176757812, 0.5259370803833008, 0.5114110708236694, 0.4969750642776489, 0.4870087802410126, 0.47614598274230957, 0.46091753244400024, 0.45293980836868286, 0.4495910704135895, 0.4392288029193878, 0.43410050868988037, 0.4249194264411926, 0.4202488958835602, 0.41422122716903687, 0.40324804186820984, 0.40047430992126465, 0.39871594309806824, 0.3984980583190918, 0.39097726345062256, 0.38563257455825806, 0.3781413435935974, 0.37476423382759094, 0.37167713046073914, 0.3699485957622528, 0.3688018321990967, 0.36694395542144775, 0.3591867685317993, 0.36104491353034973, 0.3559388816356659, 0.3562203645706177, 0.3539615571498871, 0.35125067830085754, 0.3497489094734192, 0.3482423424720764, 0.34390562772750854, 0.3465251326560974, 0.34393632411956787], "val_accuracy": [0.5603333115577698, 0.6433333158493042, 0.6786666512489319, 0.7120000123977661, 0.7383333444595337, 0.753000020980835, 0.7710000276565552, 0.7786666750907898, 0.7883333563804626, 0.7860000133514404, 0.7979999780654907, 0.8053333163261414, 0.8069999814033508, 0.8146666884422302, 0.82833331823349, 0.828000009059906, 0.8366666436195374, 0.82833331823349, 0.8416666388511658, 0.8433333039283752, 0.8496666550636292, 0.8529999852180481, 0.8476666808128357, 0.8550000190734863, 0.8553333282470703, 0.8576666712760925, 0.8569999933242798, 0.8629999756813049, 0.8643333315849304, 0.8646666407585144, 0.8653333187103271, 0.8653333187103271, 0.8686666488647461, 0.8706666827201843, 0.8693333268165588, 0.8743333220481873, 0.8706666827201843, 0.8733333349227905, 0.8683333396911621, 0.8773333430290222, 0.878000020980835, 0.8713333606719971, 0.878000020980835, 0.878000020980835, 0.8733333349227905, 0.8759999871253967]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 2], [0, 0], [0, 74], [0, 0, 1, 0, 1, 0, 1], [0, 1, 3, 0], [0, 6, 6], [0], [0, 1], [0], [1], [0]], "fitness": -0.8445714116096497, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2927072048187256, 2.188276529312134, 1.7645989656448364, 1.352154016494751, 1.0693403482437134, 0.9134605526924133, 0.8598891496658325, 0.808010995388031, 0.7583147883415222, 0.7336471676826477, 0.6948094367980957, 0.6771175861358643, 0.6405556201934814, 0.6075211763381958, 0.601493775844574, 0.5837686657905579, 0.5741370916366577, 0.5519683361053467, 0.5465489029884338, 0.5407549142837524, 0.5280022025108337, 0.5126278400421143, 0.5079121589660645, 0.49628010392189026, 0.4770877957344055, 0.4812256097793579, 0.46139317750930786, 0.45547130703926086, 0.45492130517959595, 0.4368695020675659, 0.42763593792915344, 0.418038010597229, 0.41553711891174316, 0.39967724680900574, 0.4063795804977417, 0.38429906964302063, 0.381460964679718, 0.38913074135780334, 0.36467981338500977, 0.3750918507575989, 0.35693469643592834, 0.35594257712364197, 0.35519149899482727, 0.34430867433547974], "accuracy": [0.13234710693359375, 0.31805574893951416, 0.43626996874809265, 0.5468233823776245, 0.635451078414917, 0.6613393425941467, 0.6843217611312866, 0.696209192276001, 0.700171709060669, 0.7091533541679382, 0.7304186820983887, 0.743891179561615, 0.7535332441329956, 0.7696473598480225, 0.7693831920623779, 0.7745344042778015, 0.785629391670227, 0.7898560166358948, 0.793422281742096, 0.7915731072425842, 0.7971205711364746, 0.8043851256370544, 0.8101968169212341, 0.8129705190658569, 0.8191784620285034, 0.8177255392074585, 0.8304054737091064, 0.8319904804229736, 0.8247259259223938, 0.8335754871368408, 0.8397833704948425, 0.8442742228507996, 0.8433496356010437, 0.8466516733169556, 0.8444063067436218, 0.8500858545303345, 0.8552370667457581, 0.8541803956031799, 0.8625016212463379, 0.857218325138092, 0.8638224601745605, 0.863029956817627, 0.8648791313171387, 0.8716153502464294], "val_loss": [2.2445883750915527, 2.011530876159668, 1.123721957206726, 0.8905932903289795, 0.7810491323471069, 0.7248269319534302, 0.7093820571899414, 0.6725536584854126, 0.6557531952857971, 0.6205901503562927, 0.5972423553466797, 0.5706914067268372, 0.5459908843040466, 0.5376235842704773, 0.5368083119392395, 0.5090122222900391, 0.501753568649292, 0.4882504343986511, 0.49472934007644653, 0.47388455271720886, 0.47277799248695374, 0.47625264525413513, 0.4726022481918335, 0.45760005712509155, 0.44284695386886597, 0.4427681863307953, 0.44620072841644287, 0.4370826780796051, 0.4303341507911682, 0.4264821708202362, 0.42531511187553406, 0.420665442943573, 0.4154045283794403, 0.42739254236221313, 0.4164195954799652, 0.41659489274024963, 0.42654305696487427, 0.42273539304733276, 0.41077837347984314, 0.40492862462997437, 0.41419413685798645, 0.4161493182182312, 0.4070400297641754, 0.4035266041755676], "val_accuracy": [0.41999998688697815, 0.453000009059906, 0.6553333401679993, 0.6766666769981384, 0.715666651725769, 0.7206666469573975, 0.7326666712760925, 0.7536666393280029, 0.7546666860580444, 0.7553333044052124, 0.7633333206176758, 0.7733333110809326, 0.7893333435058594, 0.7919999957084656, 0.7973333597183228, 0.8016666769981384, 0.8036666512489319, 0.8169999718666077, 0.8233333230018616, 0.8266666531562805, 0.8213333487510681, 0.824999988079071, 0.8303333520889282, 0.8303333520889282, 0.8423333168029785, 0.8443333506584167, 0.8460000157356262, 0.8500000238418579, 0.8479999899864197, 0.8489999771118164, 0.8506666421890259, 0.8516666889190674, 0.8523333072662354, 0.8533333539962769, 0.8560000061988831, 0.856333315372467, 0.8526666760444641, 0.8556666374206543, 0.8683333396911621, 0.8640000224113464, 0.8583333492279053, 0.8643333315849304, 0.8606666922569275, 0.8676666617393494]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 2, 7, 4, 3, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 5], [0], [0], [1], [0], [2], [0]], "fitness": -0.8254285454750061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5152729749679565, 0.8649807572364807, 0.7030746340751648, 0.6511172652244568, 0.6234241724014282, 0.567829966545105, 0.5478178858757019, 0.5207634568214417, 0.5155245661735535, 0.5242825150489807, 0.5170671939849854, 0.5150479078292847, 0.4845203161239624, 0.47582271695137024, 0.4583281874656677, 0.45653456449508667, 0.4989749491214752, 0.5270158052444458, 0.49901729822158813, 0.5558689832687378, 0.5199553966522217], "accuracy": [0.468630313873291, 0.6972658634185791, 0.7461365461349487, 0.7473253011703491, 0.7701756954193115, 0.7897239327430725, 0.7852331399917603, 0.807158887386322, 0.8115176558494568, 0.8055738806724548, 0.8175934553146362, 0.821820080280304, 0.8257825970649719, 0.8247259259223938, 0.8380662798881531, 0.8368775844573975, 0.8352925777435303, 0.8280280232429504, 0.8231409192085266, 0.8140271902084351, 0.81548011302948], "val_loss": [0.8515707850456238, 0.6295861601829529, 0.588220477104187, 0.5437393188476562, 0.5571001172065735, 0.5197489857673645, 0.5411738157272339, 0.540951669216156, 0.5157490372657776, 0.5298873782157898, 0.5556110739707947, 0.5320771336555481, 0.5438624620437622, 0.5138919353485107, 0.5167961120605469, 0.5591304302215576, 0.5564966201782227, 0.5562756061553955, 0.5894924402236938, 0.5716326832771301, 0.6212430596351624], "val_accuracy": [0.6983333230018616, 0.7643333077430725, 0.7749999761581421, 0.7940000295639038, 0.793666660785675, 0.8190000057220459, 0.8133333325386047, 0.8193333148956299, 0.8176666498184204, 0.8216666579246521, 0.831333339214325, 0.8360000252723694, 0.8289999961853027, 0.8399999737739563, 0.8423333168029785, 0.843999981880188, 0.8399999737739563, 0.8299999833106995, 0.8220000267028809, 0.8233333230018616, 0.8403333425521851]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 2, 3, 0, 3], [0, 1, 0, 0], [39, 5], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [1], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 9, 4, 1, 4, 2, 8, 9], [2, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 10, 6, 4, 2, 2, 1, 1, 0, 19, 12, 7, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.pow(beta, tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(grad, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], [2, 2, 3, 0, 3, 5, 0], [0, 1, 0, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 1, 5], [0, 2, 3, 3], [16, 20], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 3, 6, 8, 1, 4, 2, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 50, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 2, 10, 6, 4, 1, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.square(tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.subtract(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), sigma), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), sigma))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 5, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 9, 0, 3, 5], [0, 3, 0, 3], [76, 16], [1, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 9, 3, 8, 1, 4, 3, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 2], [16, 99, 5, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 5, 4, 1, 2, 1, 0, 1, 1, 5, 3, 2, 3], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303727388381958, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 1, 1, 4, 0], [16, 60, 96, 99, 61, 1]], "fitness": -0.09000000357627869, "mapping_values": [1, 6, 3, 3, 1, 2, 1, 1, 1, 2, 1, 1, 1, 10, 5, 5, 4], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1087184467656704.0, 1303069589504000.0, 1344617760948224.0, 1322082335981568.0, 1330260222148608.0, 1309138244075520.0], "accuracy": [0.11055342853069305, 0.1026284471154213, 0.10936468094587326, 0.10460969805717468, 0.10606260597705841, 0.10500594228506088], "val_loss": [975851600478208.0, 975851600478208.0, 975851600478208.0, 975851600478208.0, 975851600478208.0, 975851600478208.0], "val_accuracy": [0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707, 0.08766666799783707]}}]