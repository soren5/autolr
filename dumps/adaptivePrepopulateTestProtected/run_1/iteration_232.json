[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8551428318023682, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2219905853271484, 1.8584566116333008, 1.3779388666152954, 1.0893685817718506, 0.9307122230529785, 0.8399679064750671, 0.7725819945335388, 0.7278887629508972, 0.6941317915916443, 0.6622820496559143, 0.6460663080215454, 0.6130903959274292, 0.5963478088378906, 0.5796017646789551, 0.5655109286308289, 0.5383079051971436, 0.5407153964042664, 0.5348498225212097, 0.5114928483963013, 0.506709098815918, 0.4956401586532593, 0.48585599660873413, 0.47292184829711914, 0.46695536375045776, 0.4675723612308502, 0.44700807332992554, 0.44970640540122986, 0.4334491491317749, 0.43113744258880615, 0.42520269751548767, 0.41153278946876526, 0.41239118576049805, 0.40179240703582764, 0.3970639705657959, 0.38991251587867737, 0.3831431567668915, 0.38355904817581177, 0.37420499324798584, 0.38026055693626404, 0.369501531124115, 0.3508586883544922], "accuracy": [0.2782987654209137, 0.5003302097320557, 0.5713908076286316, 0.6205257177352905, 0.6716417670249939, 0.6980583667755127, 0.7176066637039185, 0.7313432693481445, 0.7469290494918823, 0.7567031979560852, 0.7637035846710205, 0.774798572063446, 0.7839123010635376, 0.7885351777076721, 0.7926297783851624, 0.807158887386322, 0.8039889335632324, 0.8092722296714783, 0.8132346868515015, 0.819442629814148, 0.8240655064582825, 0.8230088353157043, 0.8338396549224854, 0.8310658931732178, 0.8356888294219971, 0.8442742228507996, 0.8426892161369324, 0.8462554216384888, 0.847840428352356, 0.8474441766738892, 0.8515387773513794, 0.8524633646011353, 0.857218325138092, 0.8574824929237366, 0.8626337051391602, 0.8618412613868713, 0.8615770936012268, 0.8661999702453613, 0.8647470474243164, 0.868049144744873, 0.8737286925315857], "val_loss": [2.033590078353882, 1.4924424886703491, 1.0175377130508423, 0.8109942078590393, 0.728951096534729, 0.6678459644317627, 0.6202359199523926, 0.5866765379905701, 0.5648109316825867, 0.5374470353126526, 0.5166739821434021, 0.4970952570438385, 0.48091351985931396, 0.4671018421649933, 0.45773282647132874, 0.44411295652389526, 0.4369127154350281, 0.43120795488357544, 0.41831833124160767, 0.41160115599632263, 0.4027077555656433, 0.39519137144088745, 0.38933420181274414, 0.38900521397590637, 0.3817603886127472, 0.37324464321136475, 0.36782756447792053, 0.3627963066101074, 0.3615201413631439, 0.3532364070415497, 0.3493562340736389, 0.3469376564025879, 0.34547513723373413, 0.3399967849254608, 0.3366073668003082, 0.3384764790534973, 0.33614709973335266, 0.33255040645599365, 0.3302573263645172, 0.327811062335968, 0.3243676722049713], "val_accuracy": [0.5456666946411133, 0.67166668176651, 0.687333345413208, 0.7113333344459534, 0.7416666746139526, 0.7580000162124634, 0.7720000147819519, 0.7803333401679993, 0.7960000038146973, 0.8029999732971191, 0.8113333582878113, 0.824999988079071, 0.8243333101272583, 0.8363333344459534, 0.8399999737739563, 0.843999981880188, 0.8473333120346069, 0.8500000238418579, 0.8523333072662354, 0.8560000061988831, 0.859666645526886, 0.8619999885559082, 0.862666666507721, 0.8643333315849304, 0.8636666536331177, 0.8690000176429749, 0.871666669845581, 0.8713333606719971, 0.8693333268165588, 0.871666669845581, 0.8743333220481873, 0.878333330154419, 0.875, 0.8756666779518127, 0.8813333511352539, 0.8846666812896729, 0.8766666650772095, 0.8813333511352539, 0.8836666941642761, 0.878000020980835, 0.8820000290870667]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 1, 5, 1, 3], [0, 0, 1, 2, 0], [0, 51, 55], [0, 0, 1, 1], [0, 1], [0, 2], [0], [0, 1], [0], [1], [0]], "fitness": -0.8548571467399597, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.square(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), alpha), tf.math.multiply(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2926228046417236, 2.188185930252075, 1.7592166662216187, 1.3532620668411255, 1.0694833993911743, 0.9109301567077637, 0.8330655694007874, 0.8125580549240112, 0.762195885181427, 0.7188082933425903, 0.6942273378372192, 0.6717605590820312, 0.645473301410675, 0.6206575632095337, 0.6031589508056641, 0.5938199162483215, 0.5678961277008057, 0.5651270151138306, 0.5537173748016357, 0.5526174306869507, 0.5323415398597717, 0.5268170833587646, 0.5084494352340698, 0.5008552074432373, 0.4853041470050812, 0.4822534918785095, 0.47458797693252563, 0.4700572192668915, 0.44981223344802856, 0.4471687972545624, 0.4387090802192688, 0.4244118630886078, 0.42062875628471375, 0.43049585819244385, 0.4133512079715729, 0.3976078927516937, 0.39135295152664185, 0.3885628879070282, 0.392911434173584, 0.36637386679649353, 0.3700736463069916, 0.352506548166275, 0.3495461344718933, 0.3597331941127777, 0.34694260358810425, 0.3418145775794983, 0.33265987038612366, 0.3328207731246948, 0.32648780941963196, 0.3215159475803375, 0.3229614198207855, 0.3120686113834381, 0.30207014083862305, 0.2968776524066925, 0.30353784561157227, 0.29134923219680786, 0.2961536645889282, 0.2845902740955353, 0.2867039442062378, 0.2800401449203491, 0.2756817936897278], "accuracy": [0.1328754425048828, 0.3299432098865509, 0.4473649561405182, 0.5461629629135132, 0.6373002529144287, 0.6715096831321716, 0.6915863156318665, 0.6966054439544678, 0.7124554514884949, 0.7157574892044067, 0.7390040755271912, 0.743891179561615, 0.7588165402412415, 0.7667415142059326, 0.7692511081695557, 0.7757231593132019, 0.7839123010635376, 0.7812706232070923, 0.7893276810646057, 0.7977809906005859, 0.7924976944923401, 0.7989697456359863, 0.8037247657775879, 0.8082155585289001, 0.8216879963874817, 0.8168009519577026, 0.8210275769233704, 0.822348415851593, 0.828292191028595, 0.8337075710296631, 0.837141752243042, 0.8393871188163757, 0.8445383906364441, 0.8347642421722412, 0.8430854678153992, 0.8511425256729126, 0.8532558679580688, 0.8617091774940491, 0.8585391640663147, 0.8632941246032715, 0.8595958352088928, 0.8618412613868713, 0.8646149635314941, 0.868049144744873, 0.8728041052818298, 0.8709549307823181, 0.8737286925315857, 0.8735966086387634, 0.8770307898521423, 0.8800686597824097, 0.8809932470321655, 0.8849557638168335, 0.8861445188522339, 0.8812574148178101, 0.8878615498542786, 0.8889182209968567, 0.8850878477096558, 0.8886540532112122, 0.8894465565681458, 0.8910315632820129, 0.8938053250312805], "val_loss": [2.247140884399414, 2.0172650814056396, 1.1456959247589111, 0.8864543437957764, 0.7805830240249634, 0.720931887626648, 0.6783691644668579, 0.659516453742981, 0.6400061249732971, 0.6091474890708923, 0.576283872127533, 0.567997932434082, 0.5520308017730713, 0.5351591110229492, 0.5234194993972778, 0.5201083421707153, 0.5186854600906372, 0.5058965086936951, 0.49898460507392883, 0.4956784248352051, 0.4895600974559784, 0.4891755282878876, 0.48634758591651917, 0.4729997515678406, 0.4635009765625, 0.45251351594924927, 0.44844603538513184, 0.4452812373638153, 0.4502924084663391, 0.45083674788475037, 0.44661304354667664, 0.4398348927497864, 0.4384012520313263, 0.4310128092765808, 0.4172994792461395, 0.4213356077671051, 0.43192821741104126, 0.4371686577796936, 0.41982805728912354, 0.41472506523132324, 0.41193637251853943, 0.41391104459762573, 0.4210747182369232, 0.4356362223625183, 0.4209790825843811, 0.42245882749557495, 0.422372967004776, 0.41685667634010315, 0.4140297770500183, 0.42968517541885376, 0.44809114933013916, 0.4239368140697479, 0.4269685447216034, 0.4391128420829773, 0.4357982575893402, 0.44374361634254456, 0.44868725538253784, 0.43969589471817017, 0.45103350281715393, 0.46407538652420044, 0.48712024092674255], "val_accuracy": [0.414000004529953, 0.46433332562446594, 0.6380000114440918, 0.6850000023841858, 0.7176666855812073, 0.7246666550636292, 0.7519999742507935, 0.7570000290870667, 0.7643333077430725, 0.7680000066757202, 0.7716666460037231, 0.7806666493415833, 0.7910000085830688, 0.800000011920929, 0.8096666932106018, 0.8023333549499512, 0.8033333420753479, 0.8223333358764648, 0.8153333067893982, 0.8193333148956299, 0.8230000138282776, 0.8183333277702332, 0.8153333067893982, 0.8259999752044678, 0.8366666436195374, 0.8383333086967468, 0.8433333039283752, 0.8393333554267883, 0.8413333296775818, 0.8453333377838135, 0.8403333425521851, 0.8460000157356262, 0.8536666631698608, 0.8569999933242798, 0.8556666374206543, 0.8526666760444641, 0.8566666841506958, 0.8603333234786987, 0.859666645526886, 0.8616666793823242, 0.8579999804496765, 0.862666666507721, 0.8610000014305115, 0.8610000014305115, 0.8633333444595337, 0.8640000224113464, 0.8679999709129333, 0.8646666407585144, 0.8669999837875366, 0.8696666955947876, 0.8733333349227905, 0.875333309173584, 0.8693333268165588, 0.8726666569709778, 0.8730000257492065, 0.8759999871253967, 0.8740000128746033, 0.8759999871253967, 0.8733333349227905, 0.8700000047683716, 0.8706666827201843]}, "mapping_values": [1, 10, 5, 5, 3, 11, 6, 5, 3, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 5], [0], [0], [1], [0], [2], [0]], "fitness": -0.826285719871521, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.502548098564148, 0.7793102264404297, 0.6357784271240234, 0.6033605337142944, 0.5762234330177307, 0.533235490322113, 0.4994587004184723, 0.4974825382232666, 0.49926409125328064, 0.4671994745731354, 0.4716250002384186, 0.46522992849349976, 0.45961514115333557, 0.4627920687198639], "accuracy": [0.48685774207115173, 0.7277770638465881, 0.7631752490997314, 0.7749306559562683, 0.7928939461708069, 0.8037247657775879, 0.8104609847068787, 0.8161405324935913, 0.8239334225654602, 0.8294808864593506, 0.8338396549224854, 0.828820526599884, 0.8342359066009521, 0.8360850811004639], "val_loss": [0.7778462171554565, 0.6044338941574097, 0.566482424736023, 0.527826189994812, 0.5198971033096313, 0.509265661239624, 0.5033019781112671, 0.5170032382011414, 0.48431330919265747, 0.5721275210380554, 0.5255773067474365, 0.5116665959358215, 0.5460973381996155, 0.579476535320282], "val_accuracy": [0.7323333621025085, 0.7893333435058594, 0.7983333468437195, 0.8116666674613953, 0.8203333616256714, 0.8316666483879089, 0.8346666693687439, 0.8330000042915344, 0.8446666598320007, 0.8320000171661377, 0.82833331823349, 0.8346666693687439, 0.8426666855812073, 0.8410000205039978]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 20], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 8], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 0, 1, 4, 2, 8], [0, 0, 0, 2, 4, 4, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.1331428587436676, "mapping_values": [1, 7, 4, 3, 2, 2, 1, 1, 0, 2, 1, 1, 1, 13, 7, 6, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(beta, grad)), tf.math.negative(grad)))", "other_info": {"loss": [7.122353220799548e+30, 7.097471472257986e+31, 3.4685389338910206e+32, 1.0355278677969358e+33, NaN, NaN], "accuracy": [0.09879804402589798, 0.0944393053650856, 0.09589222073554993, 0.08545766770839691, 0.08809932321310043, 0.09998679161071777], "val_loss": [3.373591399086504e+31, 2.174347479504906e+32, 8.636283650255449e+32, 1.0325026518259321e+33, NaN, NaN], "val_accuracy": [0.1393333375453949, 0.0976666659116745, 0.09833333641290665, 0.10000000149011612, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [6, 9, 3, 0, 3], [0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [16, 16], [0, 1], [5], [0], [0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 3, 6, 8, 1, 6, 6, 4, 2, 8], [1, 1, 3, 0, 6, 1, 3, 2, 3, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 2, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 21, 11, 10, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(alpha, tf.math.divide_no_nan(sigma, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(grad, tf.math.pow(alpha, sigma)))), beta), tf.math.add(tf.math.sqrt(sigma), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 3, 1, 3, 6, 8, 0], [0, 0, 3, 2, 3, 1], [83, 99, 27], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 0, 1, 2, 5], [0, 2, 1, 5], [0], [0, 1], [9], [0], [66], [0, 1], [0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 2, 1, 0, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.sqrt(grad)), grad)), tf.math.negative(alpha))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [7.511435508728027, 58.9836311340332, 205.1629180908203, 504.02105712890625, 1005.0585327148438, 1810.3370361328125], "accuracy": [0.10038304328918457, 0.09628847241401672, 0.09879804402589798, 0.09760929644107819, 0.09893012791872025, 0.09853387624025345], "val_loss": [20.521251678466797, 95.7640380859375, 264.8990478515625, 576.5271606445312, 1078.99755859375, 1821.0989990234375], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 2, 3, 0, 3], [0, 1, 1, 2, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5, 2], [3, 2, 0, 3, 4], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 6, 4, 5], [0, 0, 4, 1, 0, 0, 3, 1, 2, 0, 3, 6], [16, 61, 96, 99, 61, 37]], "fitness": -0.09228571504354477, "mapping_values": [1, 10, 5, 5, 1, 12, 7, 5, 1, 2, 1, 1, 1, 25, 13, 12, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad)), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad), tf.math.pow(alpha, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma)), tf.math.divide_no_nan(tf.math.pow(alpha, beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma), tf.math.square(grad))", "other_info": {"loss": [2.3094656467437744, 2.309462547302246, 2.309826374053955, 2.3107142448425293, 2.310661792755127, 2.310220241546631], "accuracy": [0.09113723784685135, 0.09192973375320435, 0.09470347315073013, 0.0882314071059227, 0.09047681838274002, 0.09549596905708313], "val_loss": [2.308440685272217, 2.308440685272217, 2.308440685272217, 2.308440685272217, 2.308440685272217, 2.308440685272217], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}]