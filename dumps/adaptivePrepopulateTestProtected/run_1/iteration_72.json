[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8774285912513733, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2233810424804688, 1.867270827293396, 1.4073084592819214, 1.1165847778320312, 0.9611589908599854, 0.8573485016822815, 0.7922490835189819, 0.7503364086151123, 0.7075324654579163, 0.6754960417747498, 0.6570535898208618, 0.6359094381332397, 0.6208555698394775, 0.59914630651474, 0.5773832201957703, 0.568868100643158, 0.5526901483535767, 0.542547881603241, 0.5340388417243958, 0.522384524345398, 0.5031992793083191, 0.49882426857948303, 0.4874158501625061, 0.47805604338645935, 0.4686584174633026, 0.4616335928440094, 0.45514392852783203, 0.4370371699333191, 0.4370851218700409, 0.4299207329750061, 0.43213599920272827, 0.41726377606391907, 0.40900126099586487, 0.4110123813152313, 0.3986872136592865, 0.3989512622356415, 0.39026543498039246, 0.3730465769767761, 0.37716373801231384, 0.36639603972435, 0.3712923526763916, 0.3622356653213501, 0.36701685190200806, 0.35350513458251953], "accuracy": [0.26760005950927734, 0.4876502454280853, 0.5492008924484253, 0.6056002974510193, 0.6530181169509888, 0.687491774559021, 0.7162858247756958, 0.7269845604896545, 0.741909921169281, 0.7493065595626831, 0.7618544697761536, 0.7681944370269775, 0.7708360552787781, 0.7828556299209595, 0.7930260300636292, 0.7902522683143616, 0.7959318161010742, 0.8064984679222107, 0.8079513907432556, 0.8165367841720581, 0.822348415851593, 0.8239334225654602, 0.8294808864593506, 0.828820526599884, 0.8383304476737976, 0.8360850811004639, 0.8429533839225769, 0.8428213000297546, 0.8405758738517761, 0.8488970994949341, 0.8441421389579773, 0.8537842035293579, 0.8527275323867798, 0.8562937378883362, 0.8589354157447815, 0.8565579056739807, 0.86118084192276, 0.8673887252807617, 0.8692378997802734, 0.8722757697105408, 0.8673887252807617, 0.8685774803161621, 0.8688416481018066, 0.8720116019248962], "val_loss": [2.0419199466705322, 1.5214416980743408, 1.0601558685302734, 0.8472148180007935, 0.7570773959159851, 0.6970471739768982, 0.6516485810279846, 0.6129463911056519, 0.5846371054649353, 0.5603710412979126, 0.5472071766853333, 0.5287470817565918, 0.5173587203025818, 0.502288818359375, 0.4884359538555145, 0.47895947098731995, 0.4733867049217224, 0.4639354646205902, 0.4590749442577362, 0.4453447163105011, 0.43573763966560364, 0.4346004128456116, 0.4275684356689453, 0.42227765917778015, 0.418744295835495, 0.4139540493488312, 0.4061797559261322, 0.40296876430511475, 0.3974069356918335, 0.39604198932647705, 0.3943626284599304, 0.3948620557785034, 0.3860742449760437, 0.38333505392074585, 0.3803909420967102, 0.38024768233299255, 0.37919896841049194, 0.3721426725387573, 0.37046024203300476, 0.37048575282096863, 0.37374746799468994, 0.36960095167160034, 0.3676033914089203, 0.36690980195999146], "val_accuracy": [0.5396666526794434, 0.6466666460037231, 0.671999990940094, 0.7039999961853027, 0.7250000238418579, 0.746666669845581, 0.7583333253860474, 0.7680000066757202, 0.7799999713897705, 0.7943333387374878, 0.7943333387374878, 0.8013333082199097, 0.812666654586792, 0.8169999718666077, 0.8199999928474426, 0.8186666369438171, 0.8273333311080933, 0.8326666951179504, 0.8303333520889282, 0.8393333554267883, 0.8443333506584167, 0.8413333296775818, 0.8489999771118164, 0.8493333458900452, 0.8476666808128357, 0.8519999980926514, 0.8569999933242798, 0.8566666841506958, 0.8546666502952576, 0.859000027179718, 0.8619999885559082, 0.8610000014305115, 0.862333357334137, 0.8653333187103271, 0.8646666407585144, 0.8646666407585144, 0.8673333525657654, 0.8669999837875366, 0.8696666955947876, 0.8676666617393494, 0.8646666407585144, 0.8679999709129333, 0.8656666874885559, 0.8663333058357239]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 1, 1, 1, 2, 2, 3, 7, 8, 0, 8, 5, 0], [0, 4, 1, 7, 7, 7, 3, 4], [0], [0, 1], [0], [1], [0]], "fitness": -0.8534285426139832, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.sqrt(tf.math.square(grad)))), alpha), tf.math.negative(grad))), grad), grad), sigma), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2932701110839844, 2.1897799968719482, 1.7674988508224487, 1.3591892719268799, 1.1009031534194946, 0.9325858950614929, 0.8425378799438477, 0.8180769085884094, 0.7542770504951477, 0.7384108304977417, 0.714123547077179, 0.6853747963905334, 0.6325773000717163, 0.6223872303962708, 0.6069350838661194, 0.5867396593093872, 0.5730771422386169, 0.5668965578079224, 0.546699583530426, 0.5439373850822449, 0.529154896736145, 0.5215568542480469, 0.5181478261947632, 0.4981941282749176, 0.495780348777771, 0.47349947690963745, 0.4713006913661957, 0.4692549407482147, 0.4553389549255371, 0.43992459774017334, 0.4412742555141449, 0.4313703775405884, 0.42114734649658203, 0.40951821208000183, 0.40596410632133484, 0.4035342335700989, 0.40166759490966797, 0.37989526987075806, 0.3699575960636139, 0.36651480197906494, 0.36125484108924866, 0.35813432931900024, 0.35928210616111755, 0.34940028190612793, 0.3423895835876465, 0.3424062132835388, 0.3337467908859253, 0.3286714255809784, 0.3209421932697296, 0.33193936944007874, 0.31434693932533264], "accuracy": [0.12851670384407043, 0.33641526103019714, 0.44591203331947327, 0.542728841304779, 0.6326773166656494, 0.6617355942726135, 0.6947563290596008, 0.6935675740242004, 0.7096816897392273, 0.7152291536331177, 0.7244749665260315, 0.7401928305625916, 0.7582882046699524, 0.7652885913848877, 0.7711002230644226, 0.7766477465629578, 0.7877426743507385, 0.7848368883132935, 0.7964601516723633, 0.7915731072425842, 0.7981772422790527, 0.7979130744934082, 0.8067626357078552, 0.8112534880638123, 0.8145555257797241, 0.822348415851593, 0.8186501264572144, 0.819970965385437, 0.8342359066009521, 0.8313300609588623, 0.8321225643157959, 0.8378021121025085, 0.8432175517082214, 0.8438779711723328, 0.8426892161369324, 0.8454629778862, 0.848368763923645, 0.854708731174469, 0.8598600029945374, 0.8615770936012268, 0.8621054291725159, 0.8622375130653381, 0.8618412613868713, 0.8669924736022949, 0.8710870146751404, 0.8669924736022949, 0.8702945709228516, 0.870030403137207, 0.876370370388031, 0.8716153502464294, 0.8766345381736755], "val_loss": [2.2469990253448486, 2.0204527378082275, 1.1510281562805176, 0.9111653566360474, 0.7905903458595276, 0.7353716492652893, 0.6977628469467163, 0.6599170565605164, 0.6630303859710693, 0.6282566785812378, 0.589924693107605, 0.5934712886810303, 0.5788556933403015, 0.5545586347579956, 0.5400922298431396, 0.5306293368339539, 0.533466637134552, 0.5294137001037598, 0.5222905874252319, 0.5158007144927979, 0.5130104422569275, 0.5028918385505676, 0.4963303208351135, 0.4924060106277466, 0.48105281591415405, 0.47524920105934143, 0.472323477268219, 0.4659787118434906, 0.46166446805000305, 0.4567602276802063, 0.4495106339454651, 0.4510221481323242, 0.4419032037258148, 0.44212445616722107, 0.43811893463134766, 0.4413474500179291, 0.4278736114501953, 0.42658108472824097, 0.4286537170410156, 0.43104708194732666, 0.4336385130882263, 0.4407943785190582, 0.4472886621952057, 0.4498211145401001, 0.4276120960712433, 0.4217751920223236, 0.43604540824890137, 0.44716161489486694, 0.46305200457572937, 0.46722981333732605, 0.47619524598121643], "val_accuracy": [0.4410000145435333, 0.48500001430511475, 0.643666684627533, 0.6800000071525574, 0.7043333053588867, 0.718999981880188, 0.7269999980926514, 0.7493333220481873, 0.7483333349227905, 0.7620000243186951, 0.7776666879653931, 0.7599999904632568, 0.7836666703224182, 0.7833333611488342, 0.7946666479110718, 0.8029999732971191, 0.8073333501815796, 0.8146666884422302, 0.8100000023841858, 0.8103333115577698, 0.8119999766349792, 0.8226666450500488, 0.8209999799728394, 0.8253333568572998, 0.8326666951179504, 0.8383333086967468, 0.8349999785423279, 0.8433333039283752, 0.8473333120346069, 0.8383333086967468, 0.8463333249092102, 0.8486666679382324, 0.8533333539962769, 0.8463333249092102, 0.8539999723434448, 0.8513333201408386, 0.8606666922569275, 0.8579999804496765, 0.8583333492279053, 0.8600000143051147, 0.859666645526886, 0.862666666507721, 0.8636666536331177, 0.8696666955947876, 0.8676666617393494, 0.8706666827201843, 0.8656666874885559, 0.8706666827201843, 0.8686666488647461, 0.8640000224113464, 0.8643333315849304]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 21, 13, 8, 1, 2, 1, 1, 0], "tree_depth": 27}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8299999833106995, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5389902591705322, 0.8318158984184265, 0.6567613482475281, 0.6130600571632385, 0.5748541355133057, 0.5361871719360352, 0.5174816250801086, 0.5045252442359924, 0.5068585276603699, 0.48260265588760376, 0.4835280478000641, 0.4802907705307007, 0.4770624041557312, 0.45630285143852234, 0.44837698340415955, 0.4581512212753296, 0.4792832136154175], "accuracy": [0.46149781346321106, 0.7209087014198303, 0.7567031979560852, 0.7786290049552917, 0.7907806038856506, 0.8094043135643005, 0.8171972036361694, 0.8185180425643921, 0.817461371421814, 0.8298771381378174, 0.8335754871368408, 0.8343679904937744, 0.837141752243042, 0.8355567455291748, 0.8359529972076416, 0.8387266993522644, 0.8417646288871765], "val_loss": [0.8536700010299683, 0.5976977348327637, 0.5366107821464539, 0.5534023642539978, 0.5168929100036621, 0.502028226852417, 0.4979299008846283, 0.5134052634239197, 0.5013933777809143, 0.5132259130477905, 0.5395716428756714, 0.5706811547279358, 0.5468084216117859, 0.5350597500801086, 0.5834011435508728, 0.5647988319396973, 0.654775083065033], "val_accuracy": [0.6970000267028809, 0.7816666960716248, 0.8019999861717224, 0.8003333210945129, 0.8140000104904175, 0.8203333616256714, 0.8230000138282776, 0.815666675567627, 0.8243333101272583, 0.8366666436195374, 0.812333345413208, 0.8399999737739563, 0.82833331823349, 0.8299999833106995, 0.8276666402816772, 0.8333333134651184, 0.8356666564941406]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 8, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 7, 7, 1, 5, 8, 0, 3, 6, 6, 4, 7, 2, 1], [0, 4, 3, 2, 2, 0, 4, 6, 2, 3, 1], [0, 9], [1], [0], [2], [0]], "fitness": -0.7942857146263123, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(grad), tf.math.sqrt(tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(sigma, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), grad), tf.math.subtract(grad, beta))), sigma))))), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.306272506713867, 2.2950422763824463, 2.2771382331848145, 2.255964994430542, 2.231813907623291, 2.197255849838257, 2.1523807048797607, 2.089902639389038, 1.994085431098938, 1.8595463037490845, 1.6978543996810913, 1.5087658166885376, 1.3674508333206177, 1.2859396934509277, 1.2565345764160156, 1.2139880657196045, 1.1667202711105347, 1.0741333961486816, 0.9843587875366211, 0.9205271601676941, 0.8914194703102112, 0.8818359971046448, 0.8691564202308655, 0.836595356464386, 0.8117339611053467, 0.8099663257598877, 0.7771273255348206, 0.766819953918457, 0.7543035745620728, 0.7340188026428223, 0.7255744338035583, 0.7015482783317566, 0.7026381492614746, 0.6890935301780701, 0.6835863590240479, 0.6760854721069336, 0.6698814630508423, 0.665271520614624, 0.660976231098175, 0.6477009654045105, 0.640613853931427, 0.6310715675354004, 0.6222506165504456, 0.6309780478477478, 0.6062707901000977, 0.612286388874054, 0.6017692685127258, 0.6035543084144592, 0.5944464206695557], "accuracy": [0.1002509593963623, 0.12151630967855453, 0.16338661313056946, 0.23405098915100098, 0.2880729138851166, 0.33284902572631836, 0.3679831027984619, 0.38687095046043396, 0.40641921758651733, 0.4259675145149231, 0.4550257623195648, 0.4803856909275055, 0.5124818682670593, 0.5373134613037109, 0.5521067380905151, 0.5820895433425903, 0.5952978730201721, 0.615770697593689, 0.6472064256668091, 0.6612072587013245, 0.6783780455589294, 0.6808875799179077, 0.6843217611312866, 0.6968696117401123, 0.698190450668335, 0.6983225345611572, 0.7069079279899597, 0.7166820764541626, 0.7250033020973206, 0.7248712182044983, 0.7265883088111877, 0.7366266250610352, 0.7449478507041931, 0.7450799345970154, 0.7475894689559937, 0.7445515990257263, 0.7510236501693726, 0.7490423917770386, 0.755118191242218, 0.7506273984909058, 0.7574957013130188, 0.7622507214546204, 0.7652885913848877, 0.7582882046699524, 0.774798572063446, 0.7745344042778015, 0.7771760821342468, 0.7751948237419128, 0.774270236492157], "val_loss": [2.300140380859375, 2.282975196838379, 2.262009859085083, 2.237687110900879, 2.207484006881714, 2.1668949127197266, 2.1084048748016357, 2.021655797958374, 1.8937854766845703, 1.7146812677383423, 1.4932233095169067, 1.2656935453414917, 1.0868242979049683, 0.9821034073829651, 0.9166979193687439, 0.8656811714172363, 0.8223953247070312, 0.7839850187301636, 0.7550281286239624, 0.7478463649749756, 0.7507997155189514, 0.7490528225898743, 0.723527193069458, 0.6913370490074158, 0.6681086421012878, 0.6496219635009766, 0.6389557719230652, 0.6292247176170349, 0.6255263686180115, 0.6219368577003479, 0.6163299083709717, 0.6128618121147156, 0.6065897345542908, 0.599588930606842, 0.5919609069824219, 0.5829066038131714, 0.5744262933731079, 0.5681372284889221, 0.5628308057785034, 0.5588485598564148, 0.5546395182609558, 0.5508599281311035, 0.5488123297691345, 0.5472946166992188, 0.5449022650718689, 0.5418680310249329, 0.5381820201873779, 0.5339498519897461, 0.5296370983123779], "val_accuracy": [0.10499999672174454, 0.17133332788944244, 0.3153333365917206, 0.42800000309944153, 0.437333345413208, 0.43833333253860474, 0.43933331966400146, 0.4519999921321869, 0.47999998927116394, 0.5276666879653931, 0.5956666469573975, 0.6386666893959045, 0.6516666412353516, 0.6586666703224182, 0.6700000166893005, 0.6816666722297668, 0.7009999752044678, 0.7126666903495789, 0.7200000286102295, 0.7256666421890259, 0.7386666536331177, 0.7319999933242798, 0.7409999966621399, 0.7436666488647461, 0.7409999966621399, 0.7493333220481873, 0.7603333592414856, 0.7573333382606506, 0.7549999952316284, 0.7620000243186951, 0.7663333415985107, 0.7676666378974915, 0.7680000066757202, 0.7680000066757202, 0.7716666460037231, 0.7786666750907898, 0.7860000133514404, 0.7883333563804626, 0.784333348274231, 0.7829999923706055, 0.7873333096504211, 0.7933333516120911, 0.7953333258628845, 0.7960000038146973, 0.7946666479110718, 0.7940000295639038, 0.7929999828338623, 0.793666660785675, 0.7946666479110718]}, "mapping_values": [1, 9, 5, 4, 3, 15, 8, 7, 4, 25, 14, 11, 2, 1, 0, 1, 0], "tree_depth": 28}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 0, 4, 2, 7, 4, 1, 3, 3, 7], [0, 1, 2, 2, 2, 3, 2, 2, 1, 2, 0], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [64, 16], [0, 1], [0], [0], [30], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [6, 3, 3, 6, 3, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 2, 0, 3, 1, 2, 0], [16, 99, 96, 69, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 12, 11, 2, 10, 6, 4, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(grad, tf.math.add(grad, tf.math.add(tf.math.pow(tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.math.add(grad, grad), grad), grad), alpha), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303210496902466, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 6], [0, 2, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 3, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 11, 6, 5, 1, 2, 1, 1, 1, 12, 6, 6, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(beta, tf.math.divide_no_nan(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.304799795150757, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [1, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5, 2], [0, 2, 0, 3, 3, 4], [16, 16], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [2, 4, 6, 3, 1, 7, 8, 1, 1, 0, 5], [0, 2, 5, 3, 3, 6, 5, 0, 4], [99, 91], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 4, 4, 1, 4, 2, 8, 6], [0, 0, 0, 3, 0, 4, 3, 2, 2, 0, 5], [16, 99, 0, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 13, 7, 6, 2, 20, 11, 9, 2, 23, 12, 11, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(beta, grad), sigma), tf.math.subtract(tf.math.add(tf.math.sqrt(sigma), grad), tf.math.subtract(tf.math.subtract(grad, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.square(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), sigma))), beta), tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]