[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 1], [0, 4, 5], [0, 2], [0], [0, 0, 0, 1, 0, 1, 1], [0, 8, 6, 2], [0, 6, 6], [0], [0, 1], [0], [1], [0]], "fitness": -0.8582857251167297, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2916414737701416, 2.1853115558624268, 1.759775161743164, 1.3523064851760864, 1.0555639266967773, 0.8977245688438416, 0.8480329513549805, 0.7925026416778564, 0.7538521885871887, 0.7317283749580383, 0.6733335256576538, 0.6792831420898438, 0.6485402584075928, 0.6372637748718262, 0.6163215041160583, 0.5935825705528259, 0.5871005654335022, 0.5759185552597046, 0.555952787399292, 0.5245341658592224, 0.52860426902771, 0.5315239429473877, 0.5127307176589966, 0.4911350607872009, 0.48202723264694214, 0.4787333905696869, 0.4595860242843628, 0.46664440631866455, 0.4374372363090515, 0.4319625794887543, 0.4306703805923462, 0.420421838760376, 0.41541361808776855, 0.4037557542324066, 0.3871259391307831, 0.38078323006629944, 0.37328168749809265, 0.37313082814216614, 0.3723282516002655, 0.3656875789165497, 0.35505908727645874, 0.3606267273426056, 0.33954551815986633, 0.3408302962779999, 0.340410441160202], "accuracy": [0.13393211364746094, 0.3288865387439728, 0.43059042096138, 0.5448421835899353, 0.6338660717010498, 0.6724342703819275, 0.6919825673103333, 0.6934354901313782, 0.7079645991325378, 0.7180029153823853, 0.7449478507041931, 0.7425703406333923, 0.7557786107063293, 0.7564390301704407, 0.7675340175628662, 0.774270236492157, 0.7693831920623779, 0.7876105904579163, 0.7905164361000061, 0.7940827012062073, 0.7954035401344299, 0.7942147850990295, 0.7998943328857422, 0.8128384351730347, 0.8152159452438354, 0.8141592741012573, 0.8247259259223938, 0.8277638554573059, 0.8354246616363525, 0.8376700282096863, 0.8383304476737976, 0.8400475382804871, 0.8428213000297546, 0.8499537706375122, 0.8543124794960022, 0.8560295701026917, 0.8574824929237366, 0.8540483713150024, 0.8518029451370239, 0.8615770936012268, 0.8646149635314941, 0.8625016212463379, 0.8654074668884277, 0.8677849769592285, 0.8663320541381836], "val_loss": [2.2436282634735107, 2.0058634281158447, 1.1070555448532104, 0.8638401627540588, 0.767285168170929, 0.6981101632118225, 0.6606946587562561, 0.6403750777244568, 0.6302124261856079, 0.6008003950119019, 0.5730867981910706, 0.567050039768219, 0.5598111748695374, 0.5556461811065674, 0.5602784752845764, 0.5462846755981445, 0.5329404473304749, 0.5313073992729187, 0.5038047432899475, 0.5080308318138123, 0.5082520246505737, 0.49579882621765137, 0.4926903545856476, 0.4850105941295624, 0.47637248039245605, 0.46366360783576965, 0.46269935369491577, 0.45198094844818115, 0.4418502151966095, 0.4408593773841858, 0.4347527325153351, 0.4303531050682068, 0.43198278546333313, 0.4328996241092682, 0.42716002464294434, 0.4199986159801483, 0.4287239909172058, 0.41733723878860474, 0.42111697793006897, 0.4221566617488861, 0.42482441663742065, 0.41302376985549927, 0.4203101694583893, 0.4280407726764679, 0.429648756980896], "val_accuracy": [0.42633333802223206, 0.47833332419395447, 0.6526666879653931, 0.6899999976158142, 0.7173333168029785, 0.737666666507721, 0.7483333349227905, 0.7506666779518127, 0.7599999904632568, 0.765999972820282, 0.7716666460037231, 0.7806666493415833, 0.7820000052452087, 0.7863333225250244, 0.781000018119812, 0.7826666831970215, 0.7866666913032532, 0.7940000295639038, 0.7960000038146973, 0.8056666851043701, 0.7993333339691162, 0.8153333067893982, 0.8190000057220459, 0.8226666450500488, 0.8259999752044678, 0.8309999704360962, 0.82833331823349, 0.8396666646003723, 0.843999981880188, 0.8389999866485596, 0.846666693687439, 0.8416666388511658, 0.8463333249092102, 0.8483333587646484, 0.8453333377838135, 0.8566666841506958, 0.8576666712760925, 0.8553333282470703, 0.859333336353302, 0.8629999756813049, 0.8569999933242798, 0.8569999933242798, 0.8583333492279053, 0.862666666507721, 0.859666645526886]}, "mapping_values": [1, 10, 5, 5, 3, 5, 3, 2, 1, 7, 4, 3, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8545714020729065, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.225313186645508, 1.8685965538024902, 1.397154688835144, 1.0949795246124268, 0.9372230768203735, 0.8285785913467407, 0.7816137075424194, 0.7178581357002258, 0.6835129261016846, 0.6627658009529114, 0.6310116052627563, 0.6079658269882202, 0.5857105255126953, 0.5745274424552917, 0.5555775761604309, 0.5418890118598938, 0.5287798643112183, 0.5149820446968079, 0.5082451701164246, 0.49987325072288513, 0.4853416085243225, 0.4755435287952423, 0.4639686644077301, 0.4619078040122986, 0.45840030908584595, 0.44513094425201416, 0.43104615807533264, 0.42816227674484253, 0.41800883412361145, 0.4128984212875366, 0.41356247663497925, 0.4031004011631012, 0.3944379985332489, 0.3887183368206024, 0.3835982382297516, 0.37464869022369385, 0.37083572149276733, 0.3627825677394867, 0.36058926582336426, 0.3526889979839325, 0.34794723987579346, 0.34668871760368347, 0.34020450711250305, 0.3420472741127014, 0.33048203587532043, 0.319720059633255, 0.31610435247421265, 0.31015995144844055, 0.3092602789402008, 0.30786001682281494, 0.3088245689868927, 0.30079346895217896, 0.294955849647522, 0.2927534580230713, 0.2918250262737274, 0.2812695801258087], "accuracy": [0.26297715306282043, 0.49108439683914185, 0.564258337020874, 0.6153744459152222, 0.6688680648803711, 0.7108704447746277, 0.7224937081336975, 0.7371549606323242, 0.7537974119186401, 0.7567031979560852, 0.7662131786346436, 0.776251494884491, 0.7886672616004944, 0.7898560166358948, 0.7961959838867188, 0.802800178527832, 0.8100647330284119, 0.8103289008140564, 0.8168009519577026, 0.8204993009567261, 0.8271034359931946, 0.830669641494751, 0.833179235458374, 0.8342359066009521, 0.832650899887085, 0.8413683772087097, 0.8449346423149109, 0.8454629778862, 0.8486329317092896, 0.8531237840652466, 0.848368763923645, 0.8564258217811584, 0.8568220734596252, 0.8581429123878479, 0.8632941246032715, 0.8667283058166504, 0.870030403137207, 0.8684453964233398, 0.8721436858177185, 0.869502067565918, 0.8767666220664978, 0.8730682730674744, 0.8784837126731873, 0.8771628737449646, 0.880729079246521, 0.8856161832809448, 0.8829745054244995, 0.889578640460968, 0.8885219693183899, 0.8883898854255676, 0.8869370222091675, 0.8901069760322571, 0.8923524022102356, 0.8908994793891907, 0.8920882344245911, 0.8968431949615479], "val_loss": [2.039313793182373, 1.5121780633926392, 1.0330994129180908, 0.8209332823753357, 0.72562575340271, 0.6678668856620789, 0.626650333404541, 0.5936160683631897, 0.5646750330924988, 0.545218288898468, 0.5245442986488342, 0.5135014057159424, 0.49611788988113403, 0.48169076442718506, 0.4749947488307953, 0.46051838994026184, 0.4535556733608246, 0.44496965408325195, 0.434627890586853, 0.42664575576782227, 0.42382699251174927, 0.41668859124183655, 0.41265901923179626, 0.4146263897418976, 0.4026485085487366, 0.39372265338897705, 0.3925316631793976, 0.386182576417923, 0.3824458122253418, 0.37605980038642883, 0.37386542558670044, 0.37385794520378113, 0.3703708052635193, 0.36667370796203613, 0.3612973690032959, 0.35958972573280334, 0.3593502640724182, 0.35397541522979736, 0.3486407995223999, 0.34667864441871643, 0.34789273142814636, 0.34337523579597473, 0.34647175669670105, 0.3413356840610504, 0.3418251872062683, 0.33526134490966797, 0.336796373128891, 0.3349437117576599, 0.33376380801200867, 0.3346835970878601, 0.33390143513679504, 0.3312665820121765, 0.33323410153388977, 0.3329845070838928, 0.32651573419570923, 0.32885226607322693], "val_accuracy": [0.512666642665863, 0.6610000133514404, 0.6936666369438171, 0.7200000286102295, 0.7450000047683716, 0.7609999775886536, 0.7723333239555359, 0.7883333563804626, 0.7990000247955322, 0.800000011920929, 0.8133333325386047, 0.8146666884422302, 0.8216666579246521, 0.8326666951179504, 0.8336666822433472, 0.8330000042915344, 0.8383333086967468, 0.8460000157356262, 0.8443333506584167, 0.8500000238418579, 0.8496666550636292, 0.8533333539962769, 0.8573333621025085, 0.8526666760444641, 0.8619999885559082, 0.8619999885559082, 0.856333315372467, 0.862333357334137, 0.8673333525657654, 0.8669999837875366, 0.8619999885559082, 0.8669999837875366, 0.8663333058357239, 0.8679999709129333, 0.8703333139419556, 0.8700000047683716, 0.8733333349227905, 0.8730000257492065, 0.875, 0.8766666650772095, 0.8766666650772095, 0.8790000081062317, 0.875, 0.8816666603088379, 0.878333330154419, 0.8820000290870667, 0.8843333125114441, 0.8803333044052124, 0.8799999952316284, 0.8769999742507935, 0.8863333463668823, 0.8806666731834412, 0.8846666812896729, 0.8806666731834412, 0.8836666941642761, 0.8833333253860474]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 1, 1], [0, 8, 7, 0], [0, 3], [0], [1], [0], [2], [0]], "fitness": -0.822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5056177377700806, 0.8012098670005798, 0.701179563999176, 0.6303964853286743, 0.6233935356140137, 0.5857496857643127, 0.5680362582206726, 0.5435175895690918, 0.5273188352584839, 0.5230567455291748, 0.48013466596603394, 0.4848528802394867, 0.4867706894874573, 0.5016425848007202], "accuracy": [0.4881785809993744, 0.7128516435623169, 0.7461365461349487, 0.7660810947418213, 0.7711002230644226, 0.7828556299209595, 0.7947431206703186, 0.7989697456359863, 0.8177255392074585, 0.8129705190658569, 0.8244617581367493, 0.8265751004219055, 0.8178576231002808, 0.8220842480659485], "val_loss": [0.8048246502876282, 0.6753252744674683, 0.6069009900093079, 0.584608256816864, 0.5848903656005859, 0.5500337481498718, 0.5691893100738525, 0.613213300704956, 0.5838273763656616, 0.5773954391479492, 0.5985382199287415, 0.5821089744567871, 0.5066134929656982, 0.568757176399231], "val_accuracy": [0.699999988079071, 0.7643333077430725, 0.7996666431427002, 0.7876666784286499, 0.7940000295639038, 0.8086666464805603, 0.7929999828338623, 0.8019999861717224, 0.8339999914169312, 0.8153333067893982, 0.831333339214325, 0.8246666789054871, 0.831333339214325, 0.8243333101272583]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [0, 0, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 0, 0, 3], [89, 16, 67], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [5, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 9], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(grad, sigma), tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))), alpha))", "other_info": {"loss": [2.3033287525177, 2.302612781524658, 2.302595376968384, 2.3025999069213867, 2.302593469619751, 2.3025641441345215], "accuracy": [0.09853387624025345, 0.1010434553027153, 0.10038304328918457, 0.1010434553027153, 0.1010434553027153, 0.10117553919553757], "val_loss": [2.3025803565979004, 2.3025803565979004, 2.3025803565979004, 2.3025803565979004, 2.3025803565979004, 2.3025803565979004], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 3, 2, 1, 1, 1, 20, 12, 8, 5], "tree_depth": 18}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 3, 0, 2, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0], [2, 3, 3, 6, 8, 1, 4, 0, 4, 2, 8, 1, 3, 1, 0, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 0], [16, 99, 96, 99, 61, 1, 62, 28]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 27, 16, 11, 8], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.add(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.multiply(sigma, alpha), tf.math.subtract(beta, tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.350279290613924e+17, 3.1611526012420654, 3.3076648712158203, 3.37546968460083, 3.4179584980010986, 3.447535753250122], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.0533552169799805, 3.262083053588867, 3.3475749492645264, 3.3970324993133545, 3.4305176734924316, 3.4553558826446533], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 82], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 6, 3, 6, 2, 6], [3, 0, 2, 0, 3, 1, 0, 2, 3], [16, 16, 23, 19], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 5, 4, 5, 4, 3, 2, 6], [0, 4, 5, 0, 5, 3], [99, 84], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 6, 1, 0, 3, 5, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 18, 9, 9, 3, 14, 8, 6, 2, 1, 0, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(grad, alpha), tf.math.divide_no_nan(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), beta))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(grad, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), grad), sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3037185668945312, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.08857142925262451, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 0, 18, 9, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), beta)", "other_info": {"loss": [2.310978651046753, 2.310122013092041, 2.3098337650299072, 2.3106777667999268, 2.310515880584717, 2.3111507892608643], "accuracy": [0.08928807079792023, 0.09642054885625839, 0.09126931428909302, 0.09113723784685135, 0.09074098616838455, 0.09470347315073013], "val_loss": [2.3087618350982666, 2.3087618350982666, 2.3087618350982666, 2.3087618350982666, 2.3087618350982666, 2.3087618350982666], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]