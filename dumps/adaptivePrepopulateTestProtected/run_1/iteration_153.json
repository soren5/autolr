[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8700000047683716, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220015287399292, 1.8569443225860596, 1.387459397315979, 1.0838243961334229, 0.9268440008163452, 0.8243741989135742, 0.7558333873748779, 0.7153692245483398, 0.683838427066803, 0.6478460431098938, 0.6203241944313049, 0.6048098802566528, 0.5777139067649841, 0.5648661851882935, 0.5464168190956116, 0.5303305983543396, 0.5184749364852905, 0.502688467502594, 0.4922019839286804, 0.4844469726085663, 0.4778689444065094, 0.4742282032966614, 0.46117377281188965, 0.4502977728843689, 0.4425145089626312, 0.43596169352531433, 0.433896005153656, 0.4212101995944977, 0.4102962017059326, 0.4141552746295929, 0.40632525086402893, 0.39573749899864197, 0.38667917251586914, 0.38283318281173706, 0.37789738178253174, 0.3774210810661316, 0.37301668524742126, 0.36328572034835815, 0.3601516783237457, 0.3538717031478882, 0.34949153661727905, 0.347245991230011, 0.34573689103126526, 0.33063554763793945, 0.3283766210079193, 0.32783716917037964, 0.32640188932418823, 0.3176572024822235, 0.3076833486557007, 0.3065984845161438, 0.30101415514945984, 0.29924455285072327, 0.2971116006374359, 0.3042096197605133, 0.28716909885406494], "accuracy": [0.2735437750816345, 0.4896314740180969, 0.5691454410552979, 0.6231673359870911, 0.6728305220603943, 0.7043983340263367, 0.7298903465270996, 0.7429665923118591, 0.7511557340621948, 0.763967752456665, 0.7726852297782898, 0.7796856164932251, 0.7865539789199829, 0.7938185334205627, 0.7997622489929199, 0.8084797263145447, 0.813498854637146, 0.819970965385437, 0.8226125836372375, 0.8313300609588623, 0.8322546482086182, 0.8329150676727295, 0.8381983637809753, 0.8391229510307312, 0.841500461101532, 0.8488970994949341, 0.8451988101005554, 0.8473120927810669, 0.8536521196365356, 0.8507462739944458, 0.859199583530426, 0.8603883385658264, 0.8614450097084045, 0.863558292388916, 0.8658037185668945, 0.8673887252807617, 0.8669924736022949, 0.8742570281028748, 0.8717474341392517, 0.8742570281028748, 0.874389111995697, 0.8761062026023865, 0.8766345381736755, 0.8794082403182983, 0.8835028409957886, 0.8805969953536987, 0.883238673210144, 0.8854840993881226, 0.8902390599250793, 0.8879936337471008, 0.8889182209968567, 0.8932769894599915, 0.8916919827461243, 0.887201189994812, 0.8956544995307922], "val_loss": [2.029162645339966, 1.4890543222427368, 1.020336389541626, 0.8189396262168884, 0.7372151017189026, 0.6846231818199158, 0.6413800716400146, 0.6093184947967529, 0.5879224538803101, 0.5707989931106567, 0.5467527508735657, 0.5375939011573792, 0.5219042897224426, 0.5142889618873596, 0.5062268972396851, 0.4935681223869324, 0.4840494692325592, 0.47782111167907715, 0.4758378863334656, 0.4643791913986206, 0.4596532881259918, 0.45366644859313965, 0.44906651973724365, 0.4419272541999817, 0.43504229187965393, 0.43068644404411316, 0.4272000193595886, 0.421682208776474, 0.4200618863105774, 0.4160800874233246, 0.41432157158851624, 0.40893763303756714, 0.40602564811706543, 0.40397322177886963, 0.39799320697784424, 0.4010080099105835, 0.39262738823890686, 0.4014221727848053, 0.3885860741138458, 0.3869953155517578, 0.38754382729530334, 0.3844296932220459, 0.3817387819290161, 0.3770143687725067, 0.37497958540916443, 0.37712666392326355, 0.3745025098323822, 0.37017500400543213, 0.3678300082683563, 0.3668966591358185, 0.36747729778289795, 0.3668613135814667, 0.37248754501342773, 0.36890462040901184, 0.365532785654068], "val_accuracy": [0.5509999990463257, 0.6656666398048401, 0.6896666884422302, 0.7166666388511658, 0.7286666631698608, 0.7456666827201843, 0.7616666555404663, 0.7713333368301392, 0.7760000228881836, 0.7856666445732117, 0.7960000038146973, 0.800000011920929, 0.8056666851043701, 0.8090000152587891, 0.812333345413208, 0.8220000267028809, 0.8246666789054871, 0.8236666917800903, 0.8263333439826965, 0.8336666822433472, 0.8293333053588867, 0.8333333134651184, 0.8370000123977661, 0.8386666774749756, 0.8446666598320007, 0.8420000076293945, 0.8453333377838135, 0.8473333120346069, 0.8479999899864197, 0.847000002861023, 0.8510000109672546, 0.8516666889190674, 0.8496666550636292, 0.8519999980926514, 0.8569999933242798, 0.8493333458900452, 0.8539999723434448, 0.859000027179718, 0.8583333492279053, 0.8606666922569275, 0.856333315372467, 0.8603333234786987, 0.8586666584014893, 0.8576666712760925, 0.8629999756813049, 0.8613333106040955, 0.8586666584014893, 0.8663333058357239, 0.8646666407585144, 0.8690000176429749, 0.8643333315849304, 0.8673333525657654, 0.8636666536331177, 0.8633333444595337, 0.8669999837875366]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8522857427597046, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.291546583175659, 2.1876156330108643, 1.7571810483932495, 1.3600572347640991, 1.0638689994812012, 0.9244292974472046, 0.8428696393966675, 0.8199180364608765, 0.7639684081077576, 0.7537196278572083, 0.7013358473777771, 0.6802536249160767, 0.6479663848876953, 0.6167930364608765, 0.6027472019195557, 0.5905217528343201, 0.5827549695968628, 0.5702836513519287, 0.5674351453781128, 0.5456775426864624, 0.550940752029419, 0.5282925963401794, 0.5086951851844788, 0.5047788619995117, 0.49130991101264954, 0.4870516061782837, 0.46857476234436035, 0.46961626410484314, 0.44741886854171753, 0.4476871192455292, 0.4417860209941864, 0.41728582978248596, 0.4228631854057312, 0.4135224223136902, 0.3914567530155182, 0.3927914798259735, 0.3889051079750061, 0.3771592974662781, 0.36908450722694397, 0.35173165798187256, 0.3594437837600708, 0.35547006130218506], "accuracy": [0.1258750557899475, 0.33245277404785156, 0.4443270266056061, 0.5444459319114685, 0.6341302394866943, 0.6629242897033691, 0.6983225345611572, 0.7030775547027588, 0.7092854380607605, 0.7063795924186707, 0.7359662055969238, 0.7417778372764587, 0.7601373791694641, 0.7683265209197998, 0.774798572063446, 0.7790252566337585, 0.7815347909927368, 0.7807422876358032, 0.7887993454933167, 0.7947431206703186, 0.7946110367774963, 0.7964601516723633, 0.8013472557067871, 0.8061022162437439, 0.8150838613510132, 0.822348415851593, 0.8289526104927063, 0.8247259259223938, 0.8327829837799072, 0.8244617581367493, 0.835160493850708, 0.8416325449943542, 0.844010055065155, 0.8407079577445984, 0.8519350290298462, 0.8565579056739807, 0.8535200357437134, 0.8577466607093811, 0.8593316674232483, 0.8677849769592285, 0.8661999702453613, 0.8599920868873596], "val_loss": [2.244373083114624, 2.0086870193481445, 1.1180726289749146, 0.8733087778091431, 0.7736716866493225, 0.7049658894538879, 0.6682267189025879, 0.6469683647155762, 0.6430479884147644, 0.5917809009552002, 0.5618731379508972, 0.5345664024353027, 0.5328173041343689, 0.5082573294639587, 0.4936419129371643, 0.4893002510070801, 0.4871077835559845, 0.4793398976325989, 0.45826297998428345, 0.4510546326637268, 0.45279887318611145, 0.44550082087516785, 0.4340120553970337, 0.42516812682151794, 0.42475777864456177, 0.4185391068458557, 0.41786450147628784, 0.4146406352519989, 0.4100872278213501, 0.40904712677001953, 0.39384227991104126, 0.39715099334716797, 0.39353716373443604, 0.38919946551322937, 0.39096492528915405, 0.38034626841545105, 0.36903518438339233, 0.37175244092941284, 0.37986263632774353, 0.3834293484687805, 0.36962902545928955, 0.361243337392807], "val_accuracy": [0.4273333251476288, 0.4830000102519989, 0.6566666960716248, 0.6956666707992554, 0.7193333506584167, 0.7490000128746033, 0.7416666746139526, 0.7596666812896729, 0.7509999871253967, 0.7736666798591614, 0.7853333353996277, 0.7919999957084656, 0.7986666560173035, 0.8013333082199097, 0.8100000023841858, 0.8023333549499512, 0.8069999814033508, 0.8176666498184204, 0.8203333616256714, 0.8273333311080933, 0.8259999752044678, 0.8366666436195374, 0.8363333344459534, 0.8366666436195374, 0.8396666646003723, 0.8423333168029785, 0.8446666598320007, 0.846666693687439, 0.8500000238418579, 0.8463333249092102, 0.8566666841506958, 0.8556666374206543, 0.8553333282470703, 0.8610000014305115, 0.8619999885559082, 0.8633333444595337, 0.8663333058357239, 0.862333357334137, 0.8619999885559082, 0.862666666507721, 0.8640000224113464, 0.8659999966621399]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 3], [0, 3], [0], [1], [0], [2], [0]], "fitness": -0.8274285793304443, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5713846683502197, 0.8493375182151794, 0.6672348976135254, 0.5999723076820374, 0.5859220027923584, 0.5584052801132202, 0.5153319239616394, 0.5095605254173279, 0.48727312684059143, 0.5086206197738647, 0.48201075196266174, 0.4704488515853882, 0.5219110250473022, 0.5371047854423523, 0.5460389256477356, 0.541330099105835, 0.5386297702789307, 0.5326260328292847, 0.5624836087226868, 0.588721752166748, 0.6311314105987549], "accuracy": [0.45304450392723083, 0.6975300312042236, 0.7567031979560852, 0.7758552432060242, 0.783119797706604, 0.787082314491272, 0.8038568496704102, 0.8202351331710815, 0.8185180425643921, 0.813498854637146, 0.8183859586715698, 0.8190463781356812, 0.8298771381378174, 0.796328067779541, 0.804649293422699, 0.8211596608161926, 0.8157442808151245, 0.8325188159942627, 0.8100647330284119, 0.7991018295288086, 0.7960638999938965], "val_loss": [0.8469009399414062, 0.578844428062439, 0.5402880311012268, 0.5095253586769104, 0.503925621509552, 0.47036418318748474, 0.5560367703437805, 0.5046613216400146, 0.5283352732658386, 0.5087944865226746, 0.4817790389060974, 0.5229924321174622, 0.5304063558578491, 0.5267407894134521, 0.552076518535614, 0.5641728639602661, 0.5676390528678894, 0.5861514210700989, 0.5545164942741394, 0.546465277671814, 0.6680991053581238], "val_accuracy": [0.6963333487510681, 0.7736666798591614, 0.7879999876022339, 0.8086666464805603, 0.8136666417121887, 0.8209999799728394, 0.8276666402816772, 0.8323333263397217, 0.8206666707992554, 0.8323333263397217, 0.8323333263397217, 0.8399999737739563, 0.8386666774749756, 0.8180000185966492, 0.8393333554267883, 0.840666651725769, 0.840666651725769, 0.8389999866485596, 0.8190000057220459, 0.8106666803359985, 0.8376666903495789]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 9, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 9, 3, 5], [1, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [3, 3, 3, 6, 2, 1, 3, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0, 5], [16, 99, 96, 99, 61, 1]], "fitness": -0.47428572177886963, "mapping_values": [1, 6, 4, 2, 2, 6, 4, 2, 1, 2, 1, 1, 1, 21, 10, 11, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), sigma), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.math.pow(alpha, tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), grad)", "other_info": {"loss": [2.30450439453125, 2.1668522357940674, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10421344637870789, 0.2879408299922943, 0.3471139967441559, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.2763214111328125, 1.5740275382995605, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.19766665995121002, 0.4699999988079071, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 4, 3, 0, 2], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 9, 5], [0, 2, 0, 3], [16, 72], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 2, 1, 4, 2, 8, 3, 8, 3, 9], [0, 0, 0, 3, 0, 4, 3, 3, 2, 0, 3], [16, 76, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 26, 15, 11, 6], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.sqrt(sigma), sigma)))), tf.math.multiply(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 2, 0, 2, 1], [67, 39], [0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [6], [0, 0, 0, 1, 1], [0, 8, 2], [0, 1], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 3, 2, 7, 4, 7, 1, 1, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0, 87, 64, 79, 70]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 2, 1, 1, 1, 5, 3, 2, 1, 17, 9, 8, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.subtract(tf.math.square(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), sigma), alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 9], [0, 1, 0, 2], [40, 39, 23], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 8, 3, 9, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 3, 8, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 3, 5, 3, 2, 1, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha)", "other_info": {"loss": [2.303192138671875, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]