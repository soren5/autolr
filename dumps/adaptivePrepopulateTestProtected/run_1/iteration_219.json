[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8725714087486267, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2220022678375244, 1.8681812286376953, 1.3922306299209595, 1.1013528108596802, 0.9353682994842529, 0.8389182686805725, 0.7729108929634094, 0.7270004153251648, 0.6903064846992493, 0.6628903150558472, 0.6370488405227661, 0.60967618227005, 0.5903034806251526, 0.5747584104537964, 0.5586434602737427, 0.5399661064147949, 0.5220814347267151, 0.519282341003418, 0.4967079162597656, 0.49667155742645264, 0.48482710123062134, 0.4702436625957489, 0.46489688754081726, 0.4541027247905731, 0.45903295278549194, 0.4438422918319702, 0.4366108179092407, 0.4333662688732147, 0.41274845600128174, 0.4117346405982971, 0.40932077169418335, 0.3976539969444275, 0.39450016617774963, 0.3934924304485321, 0.38649412989616394, 0.3699336051940918, 0.3786638379096985, 0.37053537368774414, 0.353707879781723, 0.3577292561531067, 0.3486544191837311, 0.3439122438430786, 0.33587849140167236, 0.32903867959976196, 0.3285450041294098, 0.32548877596855164, 0.32074394822120667, 0.32183122634887695, 0.3171609044075012], "accuracy": [0.2755250334739685, 0.47787609696388245, 0.5635979175567627, 0.6159027814865112, 0.665830135345459, 0.700171709060669, 0.7194558382034302, 0.7382115721702576, 0.7497028112411499, 0.7569673657417297, 0.767930269241333, 0.7774402499198914, 0.7837802171707153, 0.7854973077774048, 0.7944789528846741, 0.8026680946350098, 0.8153480291366577, 0.8120459914207458, 0.8251221776008606, 0.8183859586715698, 0.8257825970649719, 0.8315942287445068, 0.8296129703521729, 0.8355567455291748, 0.8374059200286865, 0.841500461101532, 0.8433496356010437, 0.8482366800308228, 0.856689989566803, 0.8558974862098694, 0.8543124794960022, 0.8573504090309143, 0.8602562546730042, 0.8601241707801819, 0.8647470474243164, 0.869502067565918, 0.8685774803161621, 0.867520809173584, 0.8774270415306091, 0.8716153502464294, 0.8754457831382751, 0.8791441321372986, 0.8815215826034546, 0.8840311765670776, 0.886672854423523, 0.8811253309249878, 0.8860124349594116, 0.8811253309249878, 0.8844274282455444], "val_loss": [2.0417280197143555, 1.5153883695602417, 1.0395511388778687, 0.8242699503898621, 0.7326756715774536, 0.6724955439567566, 0.6284542083740234, 0.5929762125015259, 0.5652820467948914, 0.5436850786209106, 0.524944007396698, 0.5044529438018799, 0.49275627732276917, 0.48427456617355347, 0.46494612097740173, 0.45623859763145447, 0.4522913098335266, 0.439528226852417, 0.4308541715145111, 0.42543354630470276, 0.4160788655281067, 0.4171033799648285, 0.40380191802978516, 0.40237724781036377, 0.3937320113182068, 0.3964967429637909, 0.3836292326450348, 0.3875284790992737, 0.3765230178833008, 0.3760199248790741, 0.37437736988067627, 0.36993589997291565, 0.36620739102363586, 0.3662099540233612, 0.35841771960258484, 0.35747525095939636, 0.3541841506958008, 0.3533363342285156, 0.35261672735214233, 0.3535012900829315, 0.3497238755226135, 0.34596455097198486, 0.3396790623664856, 0.3413771688938141, 0.34467586874961853, 0.3394527733325958, 0.3335961401462555, 0.33745142817497253, 0.3365956246852875], "val_accuracy": [0.5376666784286499, 0.6610000133514404, 0.6800000071525574, 0.7076666951179504, 0.734333336353302, 0.7519999742507935, 0.7639999985694885, 0.7789999842643738, 0.7886666655540466, 0.8006666898727417, 0.8016666769981384, 0.8143333196640015, 0.8246666789054871, 0.8270000219345093, 0.8303333520889282, 0.8360000252723694, 0.8403333425521851, 0.8433333039283752, 0.8416666388511658, 0.8463333249092102, 0.8503333330154419, 0.8483333587646484, 0.8536666631698608, 0.8546666502952576, 0.8553333282470703, 0.859000027179718, 0.8583333492279053, 0.859333336353302, 0.8669999837875366, 0.8666666746139526, 0.8669999837875366, 0.8686666488647461, 0.8650000095367432, 0.8663333058357239, 0.8730000257492065, 0.8679999709129333, 0.8726666569709778, 0.8713333606719971, 0.8733333349227905, 0.8723333477973938, 0.8736666440963745, 0.8736666440963745, 0.878000020980835, 0.878333330154419, 0.8740000128746033, 0.875, 0.874666690826416, 0.8773333430290222, 0.8730000257492065]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8402857184410095, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2926783561706543, 2.192108392715454, 1.774266004562378, 1.3579974174499512, 1.0762144327163696, 0.9205291271209717, 0.8361752033233643, 0.8162153363227844, 0.7614181041717529, 0.7454325556755066, 0.7013630270957947, 0.6708773970603943, 0.6468198895454407, 0.6179253458976746, 0.6121589541435242, 0.5875709652900696, 0.5812523365020752, 0.5661645531654358, 0.5611734390258789, 0.5408085584640503, 0.527152955532074, 0.5168043375015259, 0.5008256435394287, 0.49208715558052063, 0.4790971577167511, 0.4732740521430969, 0.46940720081329346, 0.45553338527679443, 0.4467098116874695, 0.43937453627586365, 0.43268516659736633, 0.42407798767089844, 0.40285828709602356, 0.40005621314048767, 0.3908523917198181, 0.39185234904289246, 0.38289257884025574, 0.37676218152046204, 0.3806060552597046, 0.36204761266708374, 0.3689909875392914, 0.3539021909236908, 0.3565951883792877, 0.3454756736755371, 0.33978354930877686, 0.3511503338813782, 0.32719072699546814], "accuracy": [0.12613920867443085, 0.31884822249412537, 0.4484215974807739, 0.5410117506980896, 0.6297714710235596, 0.6649055480957031, 0.7025492191314697, 0.6980583667755127, 0.700700044631958, 0.7128516435623169, 0.7318716049194336, 0.7441553473472595, 0.7589486241340637, 0.7652885913848877, 0.7687227725982666, 0.780610203742981, 0.7795535326004028, 0.7824593782424927, 0.7877426743507385, 0.7902522683143616, 0.8014793395996094, 0.8063663840293884, 0.8121780753135681, 0.8149517774581909, 0.817989706993103, 0.8234050869941711, 0.817989706993103, 0.8309338092803955, 0.8310658931732178, 0.8337075710296631, 0.8404437899589539, 0.8409721255302429, 0.8492933511734009, 0.8512746095657349, 0.8556333184242249, 0.8495575189590454, 0.8555012345314026, 0.8574824929237366, 0.8568220734596252, 0.8643507957458496, 0.8646149635314941, 0.872407853603363, 0.8646149635314941, 0.8665962219238281, 0.8701624870300293, 0.86553955078125, 0.8726720213890076], "val_loss": [2.246931314468384, 2.0257294178009033, 1.1472556591033936, 0.8890568017959595, 0.7639420628547668, 0.7198190093040466, 0.6707547903060913, 0.6680493950843811, 0.6638814806938171, 0.6178780794143677, 0.5751485228538513, 0.5634758472442627, 0.5381758809089661, 0.5355754494667053, 0.5420573949813843, 0.533049464225769, 0.5233213901519775, 0.5176377892494202, 0.5104092955589294, 0.5047150254249573, 0.4976519048213959, 0.4908994138240814, 0.4828891456127167, 0.48697689175605774, 0.4791697561740875, 0.46473583579063416, 0.46011561155319214, 0.46767961978912354, 0.4515153765678406, 0.4381342828273773, 0.43902498483657837, 0.4327341318130493, 0.4347662329673767, 0.4418400824069977, 0.4316922128200531, 0.43061551451683044, 0.4411258101463318, 0.4235760569572449, 0.430338978767395, 0.4474213123321533, 0.4305545389652252, 0.41249287128448486, 0.4164919853210449, 0.4325207471847534, 0.44948112964630127, 0.4381837546825409, 0.4505576193332672], "val_accuracy": [0.39766666293144226, 0.4880000054836273, 0.6396666765213013, 0.6823333501815796, 0.7110000252723694, 0.7326666712760925, 0.7486666440963745, 0.7459999918937683, 0.7490000128746033, 0.7726666927337646, 0.7799999713897705, 0.7820000052452087, 0.8023333549499512, 0.8033333420753479, 0.8040000200271606, 0.7946666479110718, 0.8136666417121887, 0.8119999766349792, 0.8213333487510681, 0.8240000009536743, 0.8263333439826965, 0.8330000042915344, 0.8349999785423279, 0.8376666903495789, 0.8373333215713501, 0.8379999995231628, 0.8429999947547913, 0.8420000076293945, 0.8483333587646484, 0.8496666550636292, 0.8463333249092102, 0.8526666760444641, 0.8550000190734863, 0.8606666922569275, 0.859666645526886, 0.8586666584014893, 0.8569999933242798, 0.8543333411216736, 0.8619999885559082, 0.8556666374206543, 0.8576666712760925, 0.8633333444595337, 0.8633333444595337, 0.8606666922569275, 0.8586666584014893, 0.8586666584014893, 0.8569999933242798]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.826285719871521, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6606199741363525, 0.8732814192771912, 0.7424298524856567, 0.6666882038116455, 0.6104804277420044, 0.5830622315406799, 0.5662100315093994, 0.5189052224159241, 0.5020681023597717, 0.5059050917625427, 0.49478307366371155, 0.47910016775131226, 0.46746477484703064, 0.4860505163669586, 0.4574040174484253, 0.4279439151287079, 0.4318411648273468, 0.42193764448165894, 0.4485335648059845, 0.4490218162536621, 0.45345649123191833, 0.4395837187767029, 0.4456328749656677, 0.4733889698982239, 0.4726056158542633, 0.46545276045799255, 0.47708001732826233, 0.46803757548332214, 0.49325087666511536, 0.5339133143424988, 0.5537080764770508], "accuracy": [0.45304450392723083, 0.683529257774353, 0.7354378700256348, 0.7548540234565735, 0.7769119143486023, 0.7932901978492737, 0.7868181467056274, 0.809140145778656, 0.819970965385437, 0.813498854637146, 0.8253863453865051, 0.8315942287445068, 0.8317263126373291, 0.8232730031013489, 0.8401796221733093, 0.8438779711723328, 0.8445383906364441, 0.8533879518508911, 0.8432175517082214, 0.8473120927810669, 0.8498216867446899, 0.8556333184242249, 0.8466516733169556, 0.8409721255302429, 0.8401796221733093, 0.8471800088882446, 0.8424250483512878, 0.8358209133148193, 0.8457271456718445, 0.829216718673706, 0.828820526599884], "val_loss": [0.8246728777885437, 0.6605174541473389, 0.5480726957321167, 0.49390581250190735, 0.5007781386375427, 0.4887160658836365, 0.4994875490665436, 0.4826818108558655, 0.46554017066955566, 0.49819430708885193, 0.4886331260204315, 0.5171337127685547, 0.49518489837646484, 0.4842119812965393, 0.4749801754951477, 0.5193700194358826, 0.4715166687965393, 0.48766788840293884, 0.4954911172389984, 0.4986025393009186, 0.5064959526062012, 0.5030339956283569, 0.4910673499107361, 0.5231298804283142, 0.5337417125701904, 0.5666768550872803, 0.45496007800102234, 0.5889052152633667, 0.5810096859931946, 0.5988832712173462, 0.6233369708061218], "val_accuracy": [0.687333345413208, 0.7566666603088379, 0.7910000085830688, 0.8199999928474426, 0.8299999833106995, 0.8323333263397217, 0.8246666789054871, 0.8356666564941406, 0.8360000252723694, 0.8370000123977661, 0.8393333554267883, 0.8376666903495789, 0.8346666693687439, 0.8446666598320007, 0.8423333168029785, 0.8433333039283752, 0.8486666679382324, 0.8443333506584167, 0.8426666855812073, 0.846666693687439, 0.8516666889190674, 0.8429999947547913, 0.8420000076293945, 0.843666672706604, 0.8363333344459534, 0.8566666841506958, 0.8343333601951599, 0.8413333296775818, 0.8453333377838135, 0.8356666564941406, 0.8463333249092102]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 40], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 1, 0, 1, 1, 9, 4, 9, 7, 6, 0], [0, 4, 0, 1, 0, 0], [0, 24, 13, 49, 2, 56], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 8, 8, 2, 6], [1, 5, 2, 5, 1, 5, 2, 0, 1, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 18, 12, 6, 6, 1, 0, 1, 1, 16, 9, 7, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(beta, grad))), tf.math.sqrt(alpha))), tf.math.sqrt(grad)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [6, 1, 7, 1, 3, 4, 1, 4], [0, 2, 1, 2, 2, 0, 1, 2], [90, 99, 27, 81], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 3, 1, 1, 3, 8, 2], [0, 0, 1, 0, 3, 1, 0], [18, 24, 13, 49, 2, 56], [0, 0, 1, 0, 1, 0], [0, 4, 4, 9], [3, 6], [0], [0, 0, 0, 1], [0, 4, 9], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 7, 8, 2, 6, 3, 3, 2, 6, 4, 2, 1, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.multiply(grad, tf.math.pow(grad, tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha)))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(sigma, tf.math.pow(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09470347315073013, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 5, 9], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [9, 2, 3, 0, 9, 5], [0, 2, 0, 3], [16, 18], [0, 1, 1], [2], [0, 3], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [94, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 5, 2, 2, 1, 1, 0, 1, 3, 1, 2, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.pow(sigma, tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma), alpha)), tf.math.sqrt(beta))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 3, 0, 2], [83, 99, 27], [0, 1, 1, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 0, 2, 5, 0], [0, 65]], "fitness": -0.09314285963773727, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 1, 2, 1, 1, 1, 9, 4, 5, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), tf.math.divide_no_nan(grad, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.310361385345459, 2.3113481998443604, 2.309823989868164, 2.3094353675842285, 2.309220790863037, 2.308924913406372], "accuracy": [0.09179764986038208, 0.08849557489156723, 0.09298639744520187, 0.09655263274908066, 0.0952318087220192, 0.09008057415485382], "val_loss": [2.3090693950653076, 2.3090693950653076, 2.3090693950653076, 2.3090693950653076, 2.3090693950653076, 2.3090693950653076], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}]