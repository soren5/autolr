[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8711428642272949, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223140239715576, 1.8706239461898804, 1.3871276378631592, 1.094182014465332, 0.948694109916687, 0.8402345776557922, 0.7830193042755127, 0.7333546280860901, 0.6943605542182922, 0.6566038727760315, 0.6349133253097534, 0.6106253862380981, 0.5943038463592529, 0.5735341310501099, 0.5696293711662292, 0.546525776386261, 0.533521831035614, 0.5228661298751831, 0.5041579008102417, 0.4962644577026367, 0.4893292784690857, 0.48568522930145264, 0.4704541862010956, 0.4534539580345154, 0.45216742157936096, 0.43978485465049744, 0.43319272994995117, 0.42845121026039124, 0.41978219151496887, 0.41200733184814453, 0.4027843177318573, 0.39346256852149963, 0.38923659920692444, 0.37986814975738525, 0.3779177665710449, 0.3748008906841278, 0.3675157427787781, 0.37132543325424194, 0.35481348633766174, 0.3563345968723297, 0.3439144194126129, 0.3482286334037781, 0.3313450813293457], "accuracy": [0.28556331992149353, 0.49385812878608704, 0.5729758143424988, 0.6222427487373352, 0.6686038970947266, 0.7004358768463135, 0.7228899598121643, 0.7353057861328125, 0.7479857206344604, 0.7605336308479309, 0.7713643908500671, 0.776251494884491, 0.7821952104568481, 0.7885351777076721, 0.7960638999938965, 0.7964601516723633, 0.8072909712791443, 0.8067626357078552, 0.8191784620285034, 0.8231409192085266, 0.8220842480659485, 0.8211596608161926, 0.830669641494751, 0.8408400416374207, 0.832650899887085, 0.8407079577445984, 0.8416325449943542, 0.8441421389579773, 0.847840428352356, 0.8545766472816467, 0.8535200357437134, 0.8585391640663147, 0.857218325138092, 0.863558292388916, 0.86553955078125, 0.867520809173584, 0.8654074668884277, 0.8672566413879395, 0.873860776424408, 0.8702945709228516, 0.8762382864952087, 0.8747853636741638, 0.8775591254234314], "val_loss": [2.047333240509033, 1.5345507860183716, 1.0704644918441772, 0.8619921803474426, 0.7722980380058289, 0.7165825366973877, 0.6705475449562073, 0.6294185519218445, 0.6011303663253784, 0.5720474123954773, 0.5506805181503296, 0.5353317856788635, 0.5212467312812805, 0.511585533618927, 0.5067065358161926, 0.4868396520614624, 0.47773098945617676, 0.46414175629615784, 0.45569902658462524, 0.45369595289230347, 0.44520264863967896, 0.44824397563934326, 0.4319169223308563, 0.4330650269985199, 0.4197324514389038, 0.4227760434150696, 0.4106272757053375, 0.40559932589530945, 0.4034508764743805, 0.3969932794570923, 0.39316678047180176, 0.39142146706581116, 0.3844837248325348, 0.386168509721756, 0.3813443183898926, 0.37400832772254944, 0.37964800000190735, 0.37541863322257996, 0.36836856603622437, 0.3700874447822571, 0.36718758940696716, 0.36584505438804626, 0.3615618348121643], "val_accuracy": [0.5476666688919067, 0.637333333492279, 0.6646666526794434, 0.6943333148956299, 0.7173333168029785, 0.7363333106040955, 0.746666669845581, 0.7563333511352539, 0.765666663646698, 0.7829999923706055, 0.7906666398048401, 0.79666668176651, 0.8069999814033508, 0.8136666417121887, 0.8073333501815796, 0.8199999928474426, 0.82833331823349, 0.8339999914169312, 0.8343333601951599, 0.8326666951179504, 0.8396666646003723, 0.8379999995231628, 0.843999981880188, 0.840666651725769, 0.8526666760444641, 0.8526666760444641, 0.8550000190734863, 0.8566666841506958, 0.8533333539962769, 0.8550000190734863, 0.8569999933242798, 0.8636666536331177, 0.8643333315849304, 0.8629999756813049, 0.8653333187103271, 0.8686666488647461, 0.8659999966621399, 0.8736666440963745, 0.8709999918937683, 0.8686666488647461, 0.871666669845581, 0.8693333268165588, 0.8730000257492065]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1], [0, 5, 4, 8], [0, 5], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8488571643829346, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.pow(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292907238006592, 2.1925692558288574, 1.778723120689392, 1.3452953100204468, 1.0810539722442627, 0.9182252883911133, 0.8434848785400391, 0.8045459389686584, 0.7647294998168945, 0.7393984198570251, 0.7021811604499817, 0.6701364517211914, 0.6492093801498413, 0.6218025088310242, 0.6000316739082336, 0.5890769958496094, 0.567630410194397, 0.5573670268058777, 0.5650669932365417, 0.5519090890884399, 0.5386964082717896, 0.5170802474021912, 0.5158551335334778, 0.5021111369132996, 0.4935604929924011, 0.47810253500938416, 0.46660298109054565, 0.46009132266044617, 0.458746999502182, 0.43653690814971924, 0.4452522099018097, 0.41906023025512695, 0.4189051687717438, 0.4151097238063812, 0.40335220098495483, 0.397467702627182, 0.3827550411224365], "accuracy": [0.1328754425048828, 0.33139610290527344, 0.4387795627117157, 0.5492008924484253, 0.6305639743804932, 0.6671509742736816, 0.700171709060669, 0.6995112895965576, 0.7103421092033386, 0.7202483415603638, 0.7351737022399902, 0.7464007139205933, 0.7495707273483276, 0.7664773464202881, 0.7713643908500671, 0.7761194109916687, 0.7884030938148499, 0.7921014428138733, 0.785101056098938, 0.7918372750282288, 0.7915731072425842, 0.7991018295288086, 0.7981772422790527, 0.807158887386322, 0.8080834746360779, 0.8187822103500366, 0.8244617581367493, 0.8204993009567261, 0.8206313848495483, 0.8281601071357727, 0.832650899887085, 0.8462554216384888, 0.8366134166717529, 0.8408400416374207, 0.8462554216384888, 0.8496896028518677, 0.8537842035293579], "val_loss": [2.246988296508789, 2.025087356567383, 1.1633211374282837, 0.9172922372817993, 0.7654331922531128, 0.7071107029914856, 0.6882241368293762, 0.6652923822402954, 0.6483853459358215, 0.6005213260650635, 0.5850491523742676, 0.5715916156768799, 0.5544160604476929, 0.5486833453178406, 0.5439184308052063, 0.5326780080795288, 0.5152305364608765, 0.5226725339889526, 0.5073395371437073, 0.49637940526008606, 0.4887119233608246, 0.4905203580856323, 0.4832342863082886, 0.4654427170753479, 0.463480681180954, 0.48212528228759766, 0.4746675193309784, 0.45880717039108276, 0.44538190960884094, 0.4526604115962982, 0.4486926198005676, 0.43624168634414673, 0.43065857887268066, 0.43174323439598083, 0.43757569789886475, 0.4258057177066803, 0.43334317207336426], "val_accuracy": [0.42233332991600037, 0.4713333249092102, 0.6363333463668823, 0.6833333373069763, 0.718999981880188, 0.734666645526886, 0.731333315372467, 0.7490000128746033, 0.7526666522026062, 0.7639999985694885, 0.7673333287239075, 0.7796666622161865, 0.7786666750907898, 0.7806666493415833, 0.7896666526794434, 0.7950000166893005, 0.7993333339691162, 0.7983333468437195, 0.8033333420753479, 0.8103333115577698, 0.815666675567627, 0.8133333325386047, 0.8240000009536743, 0.831333339214325, 0.8349999785423279, 0.8343333601951599, 0.8293333053588867, 0.8309999704360962, 0.8429999947547913, 0.8376666903495789, 0.8456666469573975, 0.8576666712760925, 0.8556666374206543, 0.8553333282470703, 0.8523333072662354, 0.8553333282470703, 0.8569999933242798]}, "mapping_values": [1, 10, 5, 5, 3, 6, 4, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1], [0, 0, 0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8337143063545227, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.512203335762024, 0.8675158619880676, 0.6976071000099182, 0.6011404395103455, 0.5453791618347168, 0.4965675175189972, 0.5011727213859558, 0.5053238272666931, 0.44709351658821106, 0.4636378586292267, 0.49852150678634644, 0.49865537881851196, 0.5119396448135376, 0.5381749868392944], "accuracy": [0.4947827160358429, 0.7067758440971375, 0.7429665923118591, 0.7749306559562683, 0.7975168228149414, 0.8157442808151245, 0.8150838613510132, 0.8078193068504333, 0.8314621448516846, 0.8308017253875732, 0.8310658931732178, 0.8391229510307312, 0.8260467648506165, 0.8141592741012573], "val_loss": [0.7521201372146606, 0.6614116430282593, 0.5612556338310242, 0.5042871832847595, 0.4881768524646759, 0.474592000246048, 0.5230488181114197, 0.4832530915737152, 0.5039923787117004, 0.5321660041809082, 0.6240227818489075, 0.6182183623313904, 0.5273580551147461, 0.547804594039917], "val_accuracy": [0.7323333621025085, 0.7746666669845581, 0.8006666898727417, 0.812666654586792, 0.8166666626930237, 0.8273333311080933, 0.8289999961853027, 0.8396666646003723, 0.8486666679382324, 0.8296666741371155, 0.8316666483879089, 0.8383333086967468, 0.8306666612625122, 0.8416666388511658]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 3, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [6, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [36], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 3, 3], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 7, 5], [16, 99, 96, 99, 61, 73]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 25, 13, 12, 6], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.multiply(alpha, beta))))))), tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad)), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 2, 4, 1], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 0, 8, 1, 4, 1, 4, 8, 8], [0, 0, 0, 3, 0, 3, 3, 1, 2, 0], [16, 99, 96, 99, 61, 93]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 1, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(sigma, sigma))), alpha)", "other_info": {"loss": [2.3054146766662598, 2.3025851249694824, 2.3025851249694824, NaN, NaN, NaN], "accuracy": [0.09470347315073013, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 20], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [40], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 4, 6, 8, 1, 4, 1, 4, 2, 2], [0, 0, 4, 3, 0, 0, 3, 1, 2, 4], [81, 99, 40, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 6, 4, 2, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30351185798645, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 1, 0, 2], [83, 99, 64], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 1, 3, 3, 5], [0, 2, 0, 1, 0], [0, 43, 5], [0, 1], [0], [0], [0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 5, 3, 6, 6, 1, 4, 1, 4, 2, 8], [3, 0, 0, 4, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09057142585515976, "mapping_values": [1, 2, 1, 1, 1, 11, 6, 5, 3, 2, 1, 1, 1, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(sigma), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3098363876342773, 2.309748888015747, 2.3093481063842773, 2.309750556945801, 2.30989670753479, 2.308666229248047], "accuracy": [0.09391097724437714, 0.09602430462837219, 0.09008057415485382, 0.09325055778026581, 0.09496764093637466, 0.09391097724437714], "val_loss": [2.3085498809814453, 2.3085498809814453, 2.3085498809814453, 2.3085498809814453, 2.3085498809814453, 2.3085498809814453], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]