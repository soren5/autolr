[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8642857074737549, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220548152923584, 1.861350417137146, 1.3714675903320312, 1.078688621520996, 0.9163540005683899, 0.8252537250518799, 0.7665654420852661, 0.7229006886482239, 0.6844843626022339, 0.644797146320343, 0.6265951991081238, 0.6095386147499084, 0.5879589915275574, 0.5694404244422913, 0.5524539351463318, 0.5346977710723877, 0.5217828154563904, 0.5153523087501526, 0.4946924149990082, 0.48988857865333557, 0.4778507947921753, 0.4677722752094269, 0.46117186546325684, 0.44945135712623596, 0.44001680612564087, 0.4369617998600006, 0.42943641543388367, 0.42077288031578064, 0.4124278426170349, 0.4037988781929016, 0.39840683341026306, 0.3874443471431732, 0.3893986642360687, 0.38147568702697754, 0.37081941962242126, 0.369771271944046, 0.35952335596084595, 0.3644319176673889, 0.36132845282554626, 0.35422730445861816, 0.34013423323631287, 0.3368637263774872, 0.3412727415561676, 0.33007344603538513, 0.32575511932373047, 0.3232877552509308, 0.313624769449234, 0.3093404471874237, 0.308336466550827, 0.29625123739242554, 0.29526785016059875, 0.2987922132015228, 0.291511595249176, 0.28141263127326965, 0.28421634435653687, 0.27423182129859924, 0.27516916394233704, 0.26951315999031067, 0.2695977985858917, 0.26293614506721497, 0.25809019804000854, 0.2535773515701294], "accuracy": [0.2805441915988922, 0.4959714710712433, 0.5733720660209656, 0.6244881749153137, 0.6688680648803711, 0.7047945857048035, 0.7180029153823853, 0.7345132827758789, 0.7445515990257263, 0.7637035846710205, 0.7713643908500671, 0.7737419009208679, 0.7843085527420044, 0.7944789528846741, 0.8014793395996094, 0.8080834746360779, 0.8156121969223022, 0.8128384351730347, 0.8202351331710815, 0.8222163319587708, 0.8245938420295715, 0.8305375576019287, 0.8347642421722412, 0.8350284099578857, 0.8442742228507996, 0.841500461101532, 0.8488970994949341, 0.8488970994949341, 0.8514066934585571, 0.8561616539955139, 0.8543124794960022, 0.8623695969581604, 0.8631620407104492, 0.8627657890319824, 0.8664641380310059, 0.8689737319946289, 0.8677849769592285, 0.8651432991027832, 0.8714832663536072, 0.871879518032074, 0.8778232932090759, 0.8755778670310974, 0.8754457831382751, 0.8795403242111206, 0.8802007436752319, 0.8816536664962769, 0.8854840993881226, 0.8879936337471008, 0.8891823887825012, 0.8939374089241028, 0.8942015767097473, 0.8936732411384583, 0.8932769894599915, 0.8952582478523254, 0.8944657444953918, 0.9000132083892822, 0.8976356983184814, 0.9015982151031494, 0.9034473896026611, 0.9022586345672607, 0.9045040011405945, 0.9079381823539734], "val_loss": [2.03515625, 1.5049412250518799, 1.033531665802002, 0.8225834369659424, 0.7465328574180603, 0.6788725256919861, 0.6398705840110779, 0.6004908680915833, 0.5737733840942383, 0.548234224319458, 0.5346137881278992, 0.5169603824615479, 0.5076025128364563, 0.49240821599960327, 0.47759512066841125, 0.4721860885620117, 0.46064722537994385, 0.4507881700992584, 0.44396090507507324, 0.4443371891975403, 0.4238334596157074, 0.4239182472229004, 0.4230917692184448, 0.41059350967407227, 0.41116470098495483, 0.40229931473731995, 0.4020645320415497, 0.39786335825920105, 0.394491583108902, 0.3878852427005768, 0.3852371275424957, 0.3773656487464905, 0.38117894530296326, 0.3742915987968445, 0.36973896622657776, 0.3699532747268677, 0.36040037870407104, 0.36323410272598267, 0.3636077344417572, 0.36247289180755615, 0.3558897376060486, 0.35275548696517944, 0.354643315076828, 0.351036936044693, 0.35192766785621643, 0.3567678928375244, 0.35059854388237, 0.3470374345779419, 0.3440003991127014, 0.3491714298725128, 0.3441477417945862, 0.34215494990348816, 0.34172672033309937, 0.33984801173210144, 0.3371632397174835, 0.33801335096359253, 0.33947595953941345, 0.3329877257347107, 0.34287700057029724, 0.33531540632247925, 0.33138561248779297, 0.3388022780418396], "val_accuracy": [0.5540000200271606, 0.6643333435058594, 0.6923333406448364, 0.718666672706604, 0.7423333525657654, 0.7566666603088379, 0.7649999856948853, 0.7766666412353516, 0.7846666574478149, 0.7986666560173035, 0.800000011920929, 0.809333324432373, 0.8096666932106018, 0.8199999928474426, 0.8243333101272583, 0.8270000219345093, 0.8326666951179504, 0.8323333263397217, 0.8333333134651184, 0.8393333554267883, 0.8479999899864197, 0.8429999947547913, 0.8463333249092102, 0.843999981880188, 0.843666672706604, 0.8513333201408386, 0.8479999899864197, 0.8513333201408386, 0.8486666679382324, 0.8566666841506958, 0.8569999933242798, 0.8640000224113464, 0.859333336353302, 0.8673333525657654, 0.8636666536331177, 0.8656666874885559, 0.8736666440963745, 0.8683333396911621, 0.8723333477973938, 0.8693333268165588, 0.8709999918937683, 0.875, 0.8730000257492065, 0.8766666650772095, 0.878333330154419, 0.8756666779518127, 0.8733333349227905, 0.8773333430290222, 0.8793333172798157, 0.8769999742507935, 0.8796666860580444, 0.8773333430290222, 0.8793333172798157, 0.8790000081062317, 0.8796666860580444, 0.8803333044052124, 0.8826666474342346, 0.8796666860580444, 0.8743333220481873, 0.878333330154419, 0.8813333511352539, 0.8790000081062317]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.854285717010498, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.291398763656616, 2.188606023788452, 1.7659363746643066, 1.3582416772842407, 1.0763436555862427, 0.9189350605010986, 0.8397268056869507, 0.8356025815010071, 0.7540377378463745, 0.7465758323669434, 0.7020518183708191, 0.6944453120231628, 0.6391485929489136, 0.6331433653831482, 0.6176174283027649, 0.6124469637870789, 0.5850688219070435, 0.5737341642379761, 0.5529878735542297, 0.5551930069923401, 0.5335586071014404, 0.5319207310676575, 0.5228255391120911, 0.5105497241020203, 0.4925357699394226, 0.485614150762558, 0.4681099057197571, 0.4671826660633087, 0.457993745803833, 0.44526419043540955, 0.43321743607521057, 0.42718759179115295, 0.4215685725212097, 0.40603774785995483, 0.39242252707481384, 0.39207223057746887, 0.3968300223350525, 0.3774133324623108, 0.3857213258743286, 0.3666388988494873, 0.3565323054790497, 0.3556821048259735, 0.3513639271259308, 0.34389811754226685, 0.34278014302253723, 0.33814215660095215, 0.3151152729988098, 0.3290157616138458, 0.3188474774360657, 0.3128909170627594, 0.3122808039188385], "accuracy": [0.1340641975402832, 0.32162198424339294, 0.43508124351501465, 0.5383700728416443, 0.6289790272712708, 0.6758684515953064, 0.6979262828826904, 0.7005679607391357, 0.7205125093460083, 0.7160216569900513, 0.7415136694908142, 0.7345132827758789, 0.7577598690986633, 0.7672698497772217, 0.7685906887054443, 0.7676661014556885, 0.7774402499198914, 0.7819310426712036, 0.7890635132789612, 0.7903843522071838, 0.7980451583862305, 0.7967243194580078, 0.7980451583862305, 0.8072909712791443, 0.8117818236351013, 0.813498854637146, 0.8211596608161926, 0.8203672170639038, 0.8278959393501282, 0.8284242749214172, 0.8310658931732178, 0.8323867321014404, 0.8378021121025085, 0.8446704745292664, 0.8521991968154907, 0.8487650156021118, 0.8485008478164673, 0.8536521196365356, 0.8529917001724243, 0.8585391640663147, 0.8665962219238281, 0.8632941246032715, 0.8642187118530273, 0.8688416481018066, 0.8684453964233398, 0.8663320541381836, 0.8771628737449646, 0.8714832663536072, 0.8709549307823181, 0.8816536664962769, 0.8813894987106323], "val_loss": [2.245833158493042, 2.0140693187713623, 1.1418737173080444, 0.9182049036026001, 0.7660735845565796, 0.7159726619720459, 0.6793856620788574, 0.6536526083946228, 0.6520150303840637, 0.6278716921806335, 0.5872129201889038, 0.5662798881530762, 0.5551097393035889, 0.5343970656394958, 0.5398359894752502, 0.5144365429878235, 0.5217007398605347, 0.4946598708629608, 0.4954541325569153, 0.4878103733062744, 0.48379379510879517, 0.4892374277114868, 0.48207685351371765, 0.47384384274482727, 0.4557393491268158, 0.45862653851509094, 0.45505887269973755, 0.4491744041442871, 0.447061151266098, 0.4489502012729645, 0.4368686378002167, 0.4263256788253784, 0.4224803149700165, 0.40889686346054077, 0.413117915391922, 0.42570358514785767, 0.4193050265312195, 0.4130518436431885, 0.4183821678161621, 0.4051513373851776, 0.4086849093437195, 0.4157807230949402, 0.41176480054855347, 0.3904549479484558, 0.3822094798088074, 0.387124240398407, 0.3954634666442871, 0.39693158864974976, 0.40272241830825806, 0.39227092266082764, 0.38812020421028137], "val_accuracy": [0.4230000078678131, 0.4466666579246521, 0.6433333158493042, 0.6646666526794434, 0.7253333330154419, 0.734333336353302, 0.746666669845581, 0.7580000162124634, 0.7429999709129333, 0.7599999904632568, 0.7776666879653931, 0.7826666831970215, 0.7979999780654907, 0.7976666688919067, 0.7896666526794434, 0.8036666512489319, 0.7993333339691162, 0.8180000185966492, 0.8216666579246521, 0.8193333148956299, 0.8159999847412109, 0.8259999752044678, 0.8296666741371155, 0.8276666402816772, 0.8323333263397217, 0.8360000252723694, 0.8366666436195374, 0.8339999914169312, 0.8450000286102295, 0.846666693687439, 0.8463333249092102, 0.8496666550636292, 0.8543333411216736, 0.859666645526886, 0.862333357334137, 0.8573333621025085, 0.8629999756813049, 0.8653333187103271, 0.862333357334137, 0.8633333444595337, 0.8656666874885559, 0.8629999756813049, 0.8643333315849304, 0.8686666488647461, 0.8673333525657654, 0.871666669845581, 0.8666666746139526, 0.871666669845581, 0.8703333139419556, 0.8676666617393494, 0.8666666746139526]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8148571252822876, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4881417751312256, 0.8578941226005554, 0.6813180446624756, 0.6212949156761169, 0.6021906733512878, 0.5731068849563599, 0.5549163222312927, 0.5520214438438416, 0.5472918748855591, 0.5901938676834106, 0.545340895652771, 0.5780013203620911], "accuracy": [0.48949941992759705, 0.7104741930961609, 0.7486461400985718, 0.7745344042778015, 0.7769119143486023, 0.7964601516723633, 0.791441023349762, 0.8013472557067871, 0.8068947196006775, 0.8164047002792358, 0.8094043135643005, 0.8013472557067871], "val_loss": [0.9547078609466553, 0.6464778184890747, 0.588244616985321, 0.5758283734321594, 0.53249591588974, 0.5770934820175171, 0.5341476202011108, 0.5327195525169373, 0.5667558312416077, 0.597464382648468, 0.5747861862182617, 0.5490379929542542], "val_accuracy": [0.6589999794960022, 0.7590000033378601, 0.7853333353996277, 0.7723333239555359, 0.7990000247955322, 0.7889999747276306, 0.8190000057220459, 0.8140000104904175, 0.8090000152587891, 0.8080000281333923, 0.8080000281333923, 0.8046666383743286]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [65, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 1], [16, 16], [0, 1], [0], [0], [81], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 4, 6, 8, 1, 5, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [71, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 13, 7, 6, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.pow(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3039445877075195, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 3, 1, 3, 6, 1, 7, 1, 5, 0], [0, 1, 1, 0, 3, 3, 1, 3], [39, 85, 70], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 1, 2, 1, 3], [0, 2, 0, 3, 4, 4], [0, 51, 55], [0, 0, 1, 1], [0, 1], [0, 2], [0], [0, 0, 0, 1, 0, 1, 1], [0, 4, 5, 4], [1, 6, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 12, 6, 6, 2, 4, 2, 2, 1, 7, 4, 3, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), tf.math.subtract(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(alpha), tf.math.pow(grad, sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 3, 1, 3, 2, 5, 8, 2, 7, 6, 8, 3, 1, 3, 1, 0, 4, 3, 8], [0, 2, 1, 0, 2, 1, 2, 1, 0, 0, 3, 3, 2, 1], [39, 39, 37, 44, 62], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 8, 5], [0, 0, 1, 2, 0], [48, 51, 55], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 4, 0, 1, 2, 1, 5, 7, 8], [1, 7, 0, 3, 7, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 8, 5, 3, 2, 2, 1, 1, 1, 15, 9, 6, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.negative(alpha), tf.math.subtract(tf.math.add(tf.math.subtract(grad, tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), sigma), tf.math.add(grad, tf.math.sqrt(sigma)))))", "other_info": {"loss": [63591416.0, 1.0305465862848512e+16, 1.1402564500688208e+20, 1.374698412587738e+30, 5.222341044318264e+33, NaN], "accuracy": [0.10196803510189056, 0.10566636174917221, 0.11530841141939163, 0.09998679161071777, 0.09708096832036972, 0.09998679161071777], "val_loss": [174042688.0, 2.63461883871232e+17, 2.0692105743128774e+26, 3.2931470571977073e+31, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5, 2, 5, 3, 6, 8], [0, 2, 0, 3, 1, 0, 0], [16, 16, 9, 94], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 3, 2, 2, 7, 2, 9], [0, 0, 0, 1, 0, 0, 3, 1, 2, 0, 7, 4, 7, 3], [16, 99, 96, 99, 61, 1, 64]], "fitness": -0.08914285898208618, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.math.square(beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, alpha)))))), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.multiply(alpha, beta))))))), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), tf.math.add(grad, tf.math.add(grad, tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.308659791946411, 2.309715747833252, 2.308582067489624, 2.310749053955078, 2.309617042541504, 2.3099365234375], "accuracy": [0.08981640636920929, 0.09417514503002167, 0.09074098616838455, 0.09008057415485382, 0.09192973375320435, 0.09272222965955734], "val_loss": [2.3091979026794434, 2.3091964721679688, 2.3091959953308105, 2.3091957569122314, 2.3091955184936523, 2.3091952800750732], "val_accuracy": [0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076]}, "mapping_values": [1, 7, 4, 3, 2, 18, 11, 7, 4, 2, 1, 1, 1, 31, 17, 14, 7], "tree_depth": 21}]