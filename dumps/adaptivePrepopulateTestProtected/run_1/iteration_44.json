[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2238242626190186, 1.8702408075332642, 1.3989253044128418, 1.0938103199005127, 0.9440132975578308, 0.843924880027771, 0.7770308256149292, 0.7348120808601379, 0.6891900300979614, 0.6686111092567444, 0.6465572118759155, 0.6186468601226807, 0.59220290184021, 0.5814334154129028, 0.5669078230857849, 0.5489019155502319, 0.5301827788352966, 0.5177485942840576, 0.5101649165153503, 0.5117051601409912, 0.4893052577972412, 0.48222053050994873, 0.4678787291049957, 0.4636562168598175, 0.45587465167045593, 0.44814491271972656, 0.43622511625289917, 0.4354732930660248, 0.4265357553958893, 0.4142124354839325, 0.40815725922584534, 0.40005847811698914, 0.4003210663795471, 0.39108172059059143, 0.38397613167762756, 0.3733125925064087, 0.3779296278953552, 0.36518383026123047, 0.3614937663078308, 0.35672062635421753, 0.3492109775543213, 0.3464018404483795, 0.339365154504776, 0.3396804630756378, 0.3307111859321594, 0.3236643671989441, 0.31257879734039307, 0.321456640958786, 0.3110101521015167, 0.31273698806762695, 0.3105744421482086, 0.29919567704200745, 0.29805487394332886, 0.2930542230606079, 0.2938970923423767, 0.28714412450790405, 0.27642741799354553, 0.2792717218399048, 0.27095139026641846], "accuracy": [0.2674679756164551, 0.4842160940170288, 0.5562012791633606, 0.6153744459152222, 0.6609430909156799, 0.6980583667755127, 0.7190595865249634, 0.7337207794189453, 0.748778223991394, 0.7569673657417297, 0.7651565074920654, 0.7724210619926453, 0.7843085527420044, 0.7864218950271606, 0.7895918488502502, 0.7981772422790527, 0.8043851256370544, 0.8068947196006775, 0.8137630224227905, 0.8169330358505249, 0.8247259259223938, 0.8222163319587708, 0.8313300609588623, 0.8313300609588623, 0.8359529972076416, 0.8407079577445984, 0.843481719493866, 0.845859169960022, 0.8451988101005554, 0.8507462739944458, 0.8564258217811584, 0.8552370667457581, 0.856689989566803, 0.8610487580299377, 0.8625016212463379, 0.868049144744873, 0.8625016212463379, 0.8684453964233398, 0.8697662353515625, 0.8705587387084961, 0.8745211958885193, 0.8692378997802734, 0.8753136992454529, 0.8790120482444763, 0.8804649114608765, 0.8819178342819214, 0.8879936337471008, 0.8854840993881226, 0.8858803510665894, 0.8870691061019897, 0.884691596031189, 0.8912957310676575, 0.891559898853302, 0.8919561505317688, 0.8942015767097473, 0.8982961177825928, 0.8972394466400146, 0.8985602855682373, 0.9022586345672607], "val_loss": [2.0391974449157715, 1.5139026641845703, 1.0389410257339478, 0.833385169506073, 0.7425699830055237, 0.6892187595367432, 0.6448782086372375, 0.6089656352996826, 0.5808338522911072, 0.5622445344924927, 0.5464872121810913, 0.5286971926689148, 0.5147833824157715, 0.4997008442878723, 0.4904420077800751, 0.4809882342815399, 0.4727213978767395, 0.4639192223548889, 0.45640018582344055, 0.4523184895515442, 0.44721314311027527, 0.4373686611652374, 0.43181267380714417, 0.4304860830307007, 0.4228566884994507, 0.4188160002231598, 0.41898444294929504, 0.4127434194087982, 0.4063724875450134, 0.4022892117500305, 0.4021618664264679, 0.400217741727829, 0.39576902985572815, 0.38946452736854553, 0.38671496510505676, 0.3825148940086365, 0.3844337463378906, 0.38124749064445496, 0.3744789659976959, 0.37623274326324463, 0.37700000405311584, 0.3697681427001953, 0.3748103380203247, 0.36868640780448914, 0.3667578101158142, 0.3650318682193756, 0.3685290217399597, 0.3615975081920624, 0.3626455068588257, 0.3592783510684967, 0.3611542284488678, 0.36187154054641724, 0.35318341851234436, 0.35676851868629456, 0.3524584174156189, 0.35657671093940735, 0.35240715742111206, 0.34654515981674194, 0.3482426404953003], "val_accuracy": [0.5376666784286499, 0.656000018119812, 0.6850000023841858, 0.7146666646003723, 0.7383333444595337, 0.7543333172798157, 0.765999972820282, 0.7773333191871643, 0.7889999747276306, 0.7926666736602783, 0.7963333129882812, 0.8029999732971191, 0.8086666464805603, 0.8209999799728394, 0.824999988079071, 0.82833331823349, 0.8306666612625122, 0.8336666822433472, 0.8379999995231628, 0.8443333506584167, 0.843666672706604, 0.8416666388511658, 0.8476666808128357, 0.8476666808128357, 0.846666693687439, 0.8483333587646484, 0.8503333330154419, 0.856333315372467, 0.8576666712760925, 0.8619999885559082, 0.8586666584014893, 0.8613333106040955, 0.859333336353302, 0.862333357334137, 0.8650000095367432, 0.8650000095367432, 0.8633333444595337, 0.8683333396911621, 0.8663333058357239, 0.8686666488647461, 0.8679999709129333, 0.8696666955947876, 0.8686666488647461, 0.871666669845581, 0.8740000128746033, 0.8726666569709778, 0.8709999918937683, 0.8736666440963745, 0.875333309173584, 0.8740000128746033, 0.8769999742507935, 0.8736666440963745, 0.875, 0.8823333382606506, 0.8769999742507935, 0.8786666393280029, 0.8726666569709778, 0.8786666393280029, 0.8809999823570251]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8651428818702698, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2231719493865967, 1.8680074214935303, 1.399575114250183, 1.1112022399902344, 0.9521215558052063, 0.8473019599914551, 0.8026877641677856, 0.7376050353050232, 0.6934213638305664, 0.6606529951095581, 0.6415258646011353, 0.625691294670105, 0.5965129733085632, 0.5811127424240112, 0.5625537633895874, 0.553861677646637, 0.5418103337287903, 0.5284934043884277, 0.5215548276901245, 0.5060978531837463, 0.4975583255290985, 0.48197293281555176, 0.46968600153923035, 0.4663255214691162, 0.46055513620376587, 0.4470823407173157, 0.44029921293258667, 0.43163353204727173, 0.4263550937175751, 0.4233434498310089, 0.4092159867286682, 0.4133497178554535, 0.4044717848300934, 0.40065997838974, 0.38691091537475586, 0.3827511668205261, 0.37445467710494995, 0.37366893887519836, 0.36307233572006226, 0.35886937379837036, 0.3594556450843811, 0.3484913408756256, 0.3454647660255432, 0.3402644991874695, 0.34084856510162354, 0.33463865518569946, 0.32313379645347595, 0.32462096214294434, 0.322798490524292, 0.31410568952560425, 0.31514471769332886, 0.30395859479904175, 0.2939795255661011, 0.29062768816947937, 0.2924247682094574, 0.2861276865005493, 0.28338754177093506, 0.28080809116363525, 0.2749728858470917, 0.2778874635696411, 0.2767235338687897, 0.265058696269989, 0.26895564794540405, 0.2586970329284668, 0.2547186017036438, 0.25240328907966614, 0.2472444474697113], "accuracy": [0.261260062456131, 0.48368775844573975, 0.5663716793060303, 0.6120724081993103, 0.6568484902381897, 0.6971337795257568, 0.7123233675956726, 0.7358341217041016, 0.7510236501693726, 0.7613261342048645, 0.769911527633667, 0.7745344042778015, 0.78113853931427, 0.789459764957428, 0.7981772422790527, 0.8025360107421875, 0.8078193068504333, 0.8123101592063904, 0.8101968169212341, 0.8206313848495483, 0.8206313848495483, 0.8264430165290833, 0.8341038227081299, 0.8363492488861084, 0.8378021121025085, 0.8411042094230652, 0.8432175517082214, 0.846387505531311, 0.8481045961380005, 0.8488970994949341, 0.8553691506385803, 0.8551049828529358, 0.858671247959137, 0.8585391640663147, 0.8589354157447815, 0.8676528930664062, 0.8669924736022949, 0.8638224601745605, 0.8684453964233398, 0.8722757697105408, 0.8713511824607849, 0.8787478804588318, 0.8762382864952087, 0.8784837126731873, 0.878879964351654, 0.8786157965660095, 0.8868049383163452, 0.8849557638168335, 0.8844274282455444, 0.8878615498542786, 0.887597382068634, 0.8901069760322571, 0.8914278149604797, 0.8926165699958801, 0.8969752788543701, 0.9000132083892822, 0.8951261639595032, 0.900409460067749, 0.900409460067749, 0.8997490406036377, 0.9010698795318604, 0.9055606722831726, 0.9037115573883057, 0.9060890078544617, 0.9076740145683289, 0.9046360850334167, 0.9126931428909302], "val_loss": [2.0389881134033203, 1.5230722427368164, 1.0614382028579712, 0.8599761724472046, 0.7648274898529053, 0.7198072671890259, 0.6635999083518982, 0.6276057362556458, 0.594157874584198, 0.5720584988594055, 0.5601716041564941, 0.5413862466812134, 0.5221092104911804, 0.514360249042511, 0.5018580555915833, 0.48882073163986206, 0.47951728105545044, 0.4756498634815216, 0.4677703082561493, 0.455049067735672, 0.44848567247390747, 0.4437517821788788, 0.4355236887931824, 0.43036845326423645, 0.42368054389953613, 0.42315173149108887, 0.41852810978889465, 0.4123976528644562, 0.4112032353878021, 0.40804773569107056, 0.40477725863456726, 0.40325623750686646, 0.40015047788619995, 0.38812321424484253, 0.38436612486839294, 0.3832222521305084, 0.385618656873703, 0.3760761320590973, 0.37668517231941223, 0.3757120668888092, 0.3668808937072754, 0.3693085014820099, 0.36984342336654663, 0.36218971014022827, 0.36066609621047974, 0.3608669340610504, 0.35703736543655396, 0.35807210206985474, 0.3561001121997833, 0.354302316904068, 0.3538145422935486, 0.35142359137535095, 0.3500744700431824, 0.34621745347976685, 0.3442680537700653, 0.34137263894081116, 0.3443020284175873, 0.34418991208076477, 0.33974704146385193, 0.340351939201355, 0.3469114601612091, 0.3426877558231354, 0.34059613943099976, 0.3383415937423706, 0.3368089497089386, 0.3386404812335968, 0.33637601137161255], "val_accuracy": [0.512333333492279, 0.640333354473114, 0.6743333339691162, 0.6970000267028809, 0.721666693687439, 0.7440000176429749, 0.7526666522026062, 0.765999972820282, 0.7803333401679993, 0.7853333353996277, 0.7976666688919067, 0.79666668176651, 0.8040000200271606, 0.8096666932106018, 0.815666675567627, 0.815666675567627, 0.8223333358764648, 0.8240000009536743, 0.8273333311080933, 0.8323333263397217, 0.8339999914169312, 0.8320000171661377, 0.8443333506584167, 0.8423333168029785, 0.8443333506584167, 0.8443333506584167, 0.847000002861023, 0.846666693687439, 0.8513333201408386, 0.8516666889190674, 0.8560000061988831, 0.8519999980926514, 0.8510000109672546, 0.8636666536331177, 0.8619999885559082, 0.8616666793823242, 0.859666645526886, 0.8650000095367432, 0.862333357334137, 0.8669999837875366, 0.8673333525657654, 0.8673333525657654, 0.8640000224113464, 0.8706666827201843, 0.871999979019165, 0.8696666955947876, 0.8673333525657654, 0.8690000176429749, 0.8736666440963745, 0.8683333396911621, 0.8740000128746033, 0.8740000128746033, 0.8730000257492065, 0.8736666440963745, 0.8703333139419556, 0.875, 0.875, 0.8763333559036255, 0.878333330154419, 0.874666690826416, 0.8766666650772095, 0.8793333172798157, 0.874666690826416, 0.875333309173584, 0.8776666522026062, 0.8790000081062317, 0.8776666522026062]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8317142724990845, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5235869884490967, 0.8200148344039917, 0.6792612671852112, 0.6038442850112915, 0.5652134418487549, 0.534429669380188, 0.502058207988739, 0.4832356572151184, 0.46365222334861755, 0.4657577574253082, 0.436108261346817, 0.4722048044204712, 0.4736133813858032, 0.4511086344718933, 0.49059799313545227, 0.45088645815849304, 0.4844345152378082, 0.4977579116821289, 0.5297008156776428, 0.5311974287033081], "accuracy": [0.46572446823120117, 0.713908314704895, 0.7510236501693726, 0.7858935594558716, 0.7940827012062073, 0.8095363974571228, 0.8271034359931946, 0.8267071843147278, 0.8257825970649719, 0.8341038227081299, 0.8360850811004639, 0.8350284099578857, 0.8330471515655518, 0.8433496356010437, 0.8364813327789307, 0.8444063067436218, 0.832650899887085, 0.8297450542449951, 0.829216718673706, 0.8276317715644836], "val_loss": [0.7384276390075684, 0.576185405254364, 0.49986231327056885, 0.4838191866874695, 0.46355924010276794, 0.4508702754974365, 0.43030551075935364, 0.4441802501678467, 0.46540600061416626, 0.4473538398742676, 0.4893883466720581, 0.4599420428276062, 0.4781653583049774, 0.503030002117157, 0.477360337972641, 0.5147356986999512, 0.5450619459152222, 0.5156014561653137, 0.5932164192199707, 0.5631364583969116], "val_accuracy": [0.734333336353302, 0.7829999923706055, 0.8190000057220459, 0.8186666369438171, 0.8343333601951599, 0.8259999752044678, 0.8366666436195374, 0.847000002861023, 0.8456666469573975, 0.8306666612625122, 0.8446666598320007, 0.8479999899864197, 0.8453333377838135, 0.8476666808128357, 0.8569999933242798, 0.843666672706604, 0.8309999704360962, 0.8413333296775818, 0.8493333458900452, 0.8420000076293945]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8008571267127991, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293779134750366, 2.188261032104492, 1.7600924968719482, 1.360134243965149, 1.0630557537078857, 0.9243791699409485, 0.848173975944519, 0.8265954256057739, 0.773554801940918, 0.7481197714805603, 0.7128346562385559, 0.6895845532417297, 0.6689807176589966, 0.6336325407028198, 0.610088050365448, 0.5886349678039551, 0.5854372382164001, 0.5671730041503906, 0.5628694295883179, 0.5403246283531189, 0.5392566919326782, 0.5209146738052368, 0.5191610455513, 0.5032676458358765, 0.4905179440975189, 0.4800790548324585, 0.4583907723426819, 0.46060436964035034, 0.4513440430164337, 0.4449689984321594, 0.43116921186447144, 0.42891812324523926, 0.4177934527397156, 0.40649232268333435, 0.40599313378334045, 0.39519575238227844, 0.38477471470832825, 0.38951531052589417, 0.3803804814815521, 0.37118038535118103, 0.3630189597606659, 0.3653706908226013, 0.35501471161842346, 0.3502180278301239, 0.358279824256897, 0.3416896164417267, 0.3370257318019867, 0.3424045443534851, 0.3386758267879486, 0.3297531008720398, 0.32373520731925964, 0.3240365982055664, 0.3207082748413086, 0.31369829177856445, 0.3016337454319, 0.2876030504703522, 0.311110258102417], "accuracy": [0.13432836532592773, 0.33483028411865234, 0.4449874460697174, 0.5424646735191345, 0.6431118845939636, 0.6617355942726135, 0.695813000202179, 0.6996433734893799, 0.7045304179191589, 0.7149649858474731, 0.7309470176696777, 0.7313432693481445, 0.7429665923118591, 0.7594769597053528, 0.759609043598175, 0.7677981853485107, 0.7712323069572449, 0.7817989587783813, 0.7800818681716919, 0.7902522683143616, 0.7874785661697388, 0.7980451583862305, 0.7951393723487854, 0.804649293422699, 0.809140145778656, 0.8157442808151245, 0.8156121969223022, 0.8230088353157043, 0.8271034359931946, 0.8253863453865051, 0.830669641494751, 0.8374059200286865, 0.8366134166717529, 0.8426892161369324, 0.8403117060661316, 0.8477083444595337, 0.8485008478164673, 0.8519350290298462, 0.8569541573524475, 0.8552370667457581, 0.8582749962806702, 0.8557654023170471, 0.8634262084960938, 0.8623695969581604, 0.8654074668884277, 0.8710870146751404, 0.8665962219238281, 0.8656716346740723, 0.8684453964233398, 0.8679170608520508, 0.8737286925315857, 0.8725399374961853, 0.871879518032074, 0.8766345381736755, 0.8804649114608765, 0.887201189994812, 0.8808611631393433], "val_loss": [2.2460482120513916, 2.0178210735321045, 1.1340469121932983, 0.8915958404541016, 0.783706545829773, 0.7318981289863586, 0.6846903562545776, 0.6531116962432861, 0.6565110087394714, 0.6248838901519775, 0.5795215368270874, 0.5672132968902588, 0.5521823763847351, 0.5424410700798035, 0.5292121767997742, 0.5186304450035095, 0.5114274621009827, 0.5012084245681763, 0.4996752142906189, 0.49516361951828003, 0.4846033453941345, 0.4821474552154541, 0.47266948223114014, 0.46711844205856323, 0.454634428024292, 0.4425395429134369, 0.43655017018318176, 0.43911921977996826, 0.43575936555862427, 0.42568305134773254, 0.41670849919319153, 0.4156537353992462, 0.40735018253326416, 0.404134064912796, 0.4041455090045929, 0.3959804177284241, 0.39974430203437805, 0.40086889266967773, 0.4008973240852356, 0.39512157440185547, 0.39390406012535095, 0.3992993235588074, 0.3947811424732208, 0.4043424427509308, 0.40951424837112427, 0.3915533125400543, 0.39437413215637207, 0.39444103837013245, 0.3975488245487213, 0.39678463339805603, 0.39052796363830566, 0.39460140466690063, 0.39812907576560974, 0.3821231424808502, 0.38401657342910767, 0.4117285907268524, 0.42153218388557434], "val_accuracy": [0.43433332443237305, 0.4583333432674408, 0.6456666588783264, 0.6886666417121887, 0.7076666951179504, 0.7329999804496765, 0.7356666922569275, 0.7409999966621399, 0.7603333592414856, 0.7556666731834412, 0.7630000114440918, 0.7789999842643738, 0.7906666398048401, 0.7876666784286499, 0.7953333258628845, 0.7996666431427002, 0.7993333339691162, 0.809333324432373, 0.8090000152587891, 0.8066666722297668, 0.8143333196640015, 0.8240000009536743, 0.8276666402816772, 0.8273333311080933, 0.8373333215713501, 0.8379999995231628, 0.8473333120346069, 0.8536666631698608, 0.8489999771118164, 0.8533333539962769, 0.859000027179718, 0.8633333444595337, 0.8629999756813049, 0.8613333106040955, 0.8606666922569275, 0.8650000095367432, 0.8629999756813049, 0.8643333315849304, 0.8653333187103271, 0.8659999966621399, 0.8693333268165588, 0.8686666488647461, 0.8706666827201843, 0.8693333268165588, 0.8669999837875366, 0.8706666827201843, 0.8650000095367432, 0.871666669845581, 0.8726666569709778, 0.8690000176429749, 0.871666669845581, 0.8763333559036255, 0.8706666827201843, 0.8736666440963745, 0.8740000128746033, 0.875333309173584, 0.8736666440963745]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 3, 3, 1, 3], [0, 1, 1, 0, 0], [83, 99, 27], [0, 0, 1, 1], [0, 2, 3, 0, 3, 5], [0, 4], [0], [0, 1], [0], [0, 7], [0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 5, 6, 2, 6, 3, 7, 6, 1], [1, 0, 1, 3, 0, 0, 3, 1, 2, 0], [73, 80, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 4, 5, 3, 4, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, alpha)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1125368064.0, 21236883456.0, 98262540288.0, 275097321472.0, 580458184704.0, 1074441945088.0], "accuracy": [0.09972262382507324, 0.10196803510189056, 0.09866596013307571, 0.1022322028875351, 0.09576013684272766, 0.10342095047235489], "val_loss": [5160935424.0, 41282555904.0, 139323899904.0, 330248355840.0, 645005246464.0, 1114549780480.0], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [0, 1, 3, 5, 3, 0, 5, 0, 4, 8], [0, 2, 0, 2, 1, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [6, 3, 3, 1, 8, 1, 4, 1, 4, 2, 8, 1, 1, 7, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 0, 4, 1], [16, 64, 96, 99, 61, 1, 22]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 2, 2, 1, 1, 1, 28, 15, 13, 7], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), sigma)), tf.math.sqrt(tf.math.subtract(alpha, beta)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.sqrt(alpha))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 6, 2, 4, 8, 3, 0, 7, 2], [0, 2, 0, 3, 5, 1, 3, 5, 5, 2], [86, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 4, 2, 8, 1, 4, 1, 4, 2, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 24, 14, 10, 2, 2, 1, 1, 1, 20, 11, 9, 6], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.multiply(grad, tf.math.negative(tf.math.add(grad, alpha)))), grad), tf.math.add(grad, grad)))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0], [1, 3, 5, 1, 3, 3, 5, 9], [1, 1, 1, 0, 3], [39, 39], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 2, 0, 3, 8, 5, 7, 6, 2, 1, 4, 8, 8, 0, 4, 8, 2, 9, 1, 1, 7, 5, 6], [0, 2, 2, 3, 4, 3, 0, 2, 3, 3, 5, 2, 3, 5, 3, 0], [16, 16, 34, 48], [0, 0, 1, 1], [0, 4], [0, 6], [99], [0, 1], [0], [1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 2, 44, 28, 16, 4, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(tf.math.square(tf.math.subtract(alpha, tf.math.multiply(tf.math.multiply(alpha, alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(beta), tf.math.multiply(tf.math.square(tf.math.add(tf.math.negative(tf.math.multiply(beta, tf.math.sqrt(grad))), tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.math.add(grad, tf.math.subtract(tf.math.pow(grad, tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.negative(tf.math.pow(beta, grad))))), tf.math.sqrt(grad)), tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.subtract(beta, grad))))))), tf.math.add(tf.math.square(grad), tf.math.divide_no_nan(grad, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [693.5098876953125, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4969557.5, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]