[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8640000224113464, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2250359058380127, 1.8810923099517822, 1.4145073890686035, 1.1195162534713745, 0.953778088092804, 0.8512986302375793, 0.7856336832046509, 0.7427273988723755, 0.7015330195426941, 0.6688115000724792, 0.6430185437202454, 0.6166693568229675, 0.607775092124939, 0.5878355503082275, 0.5650472640991211, 0.5591013431549072, 0.5386081337928772, 0.5255321860313416, 0.5127852559089661, 0.5067538022994995, 0.4891987442970276, 0.48110947012901306, 0.47829878330230713, 0.4606558680534363, 0.46007224917411804, 0.44644641876220703, 0.4365718364715576, 0.43667733669281006, 0.4269351363182068, 0.4201449453830719, 0.4155440330505371, 0.4065122604370117, 0.40452176332473755, 0.39201048016548157, 0.39099550247192383, 0.3808691203594208, 0.3777983486652374, 0.3693425953388214, 0.36416494846343994, 0.35637763142585754, 0.3501589894294739, 0.35460948944091797, 0.35071229934692383, 0.3444240689277649], "accuracy": [0.26760005950927734, 0.4839519262313843, 0.563730001449585, 0.6106194853782654, 0.6655659675598145, 0.6993792057037354, 0.7194558382034302, 0.7312111854553223, 0.7493065595626831, 0.7520803213119507, 0.7623828053474426, 0.7757231593132019, 0.7800818681716919, 0.7847048044204712, 0.8000264167785645, 0.7975168228149414, 0.8049134612083435, 0.811649739742279, 0.817461371421814, 0.8140271902084351, 0.8273676037788391, 0.8272355198860168, 0.8269713521003723, 0.8359529972076416, 0.8322546482086182, 0.8416325449943542, 0.8442742228507996, 0.8438779711723328, 0.8467837572097778, 0.8499537706375122, 0.8500858545303345, 0.8532558679580688, 0.8539162874221802, 0.8569541573524475, 0.859199583530426, 0.8578787446022034, 0.8681812286376953, 0.8671245574951172, 0.8693699836730957, 0.8735966086387634, 0.8737286925315857, 0.8668603897094727, 0.8745211958885193, 0.8811253309249878], "val_loss": [2.0407891273498535, 1.5166940689086914, 1.0399436950683594, 0.8265480995178223, 0.7381283640861511, 0.6827983260154724, 0.6421731114387512, 0.6066592335700989, 0.5859785676002502, 0.5546760559082031, 0.5410425066947937, 0.5224640369415283, 0.5122778415679932, 0.5036699175834656, 0.48835667967796326, 0.4724918603897095, 0.4648655951023102, 0.45729854702949524, 0.4533139765262604, 0.4429306983947754, 0.43595966696739197, 0.4282570779323578, 0.42276477813720703, 0.41864916682243347, 0.41894233226776123, 0.40935856103897095, 0.41066181659698486, 0.4088194966316223, 0.396707683801651, 0.3967072069644928, 0.3973844051361084, 0.39009204506874084, 0.3894399404525757, 0.3840252757072449, 0.3836778998374939, 0.3790740668773651, 0.3772754669189453, 0.37385281920433044, 0.3750450015068054, 0.36838972568511963, 0.36973580718040466, 0.3754114508628845, 0.36947935819625854, 0.3622760474681854], "val_accuracy": [0.5516666769981384, 0.6449999809265137, 0.6793333292007446, 0.7096666693687439, 0.734333336353302, 0.7423333525657654, 0.7580000162124634, 0.762666642665863, 0.7793333530426025, 0.7916666865348816, 0.7960000038146973, 0.809333324432373, 0.8136666417121887, 0.8193333148956299, 0.8196666836738586, 0.8320000171661377, 0.8323333263397217, 0.8360000252723694, 0.8383333086967468, 0.8416666388511658, 0.843999981880188, 0.8476666808128357, 0.8473333120346069, 0.8510000109672546, 0.8536666631698608, 0.8510000109672546, 0.856333315372467, 0.8533333539962769, 0.859000027179718, 0.8566666841506958, 0.8603333234786987, 0.8606666922569275, 0.8569999933242798, 0.8576666712760925, 0.862666666507721, 0.8656666874885559, 0.8659999966621399, 0.8636666536331177, 0.8690000176429749, 0.8676666617393494, 0.8656666874885559, 0.8669999837875366, 0.8666666746139526, 0.8659999966621399]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 4], [0, 1], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8528571724891663, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293022871017456, 2.1904361248016357, 1.7700480222702026, 1.3500257730484009, 1.0834496021270752, 0.9386239051818848, 0.8612299561500549, 0.8197746276855469, 0.7601422071456909, 0.7486395835876465, 0.7040128111839294, 0.6911961436271667, 0.6513066291809082, 0.6254560351371765, 0.610697329044342, 0.5992310047149658, 0.5824040770530701, 0.5820081830024719, 0.5635677576065063, 0.5547414422035217, 0.5370876789093018, 0.5345982909202576, 0.515028715133667, 0.5019474625587463, 0.4951206147670746, 0.49091556668281555, 0.4795643985271454, 0.47682735323905945, 0.46157848834991455, 0.44779443740844727, 0.4461852014064789, 0.42458677291870117, 0.4182626008987427, 0.41458219289779663, 0.40181103348731995, 0.40223586559295654, 0.3980625867843628, 0.3902174234390259, 0.36895492672920227, 0.3736681044101715, 0.36422351002693176, 0.36330389976501465, 0.34676507115364075, 0.3402267396450043, 0.33571070432662964, 0.33444011211395264, 0.318695068359375, 0.3152083456516266, 0.3212355375289917, 0.30959782004356384, 0.31948521733283997, 0.30638161301612854, 0.2914121448993683, 0.2887342870235443, 0.2885737419128418, 0.28908687829971313, 0.2744189500808716, 0.27409136295318604, 0.267677903175354, 0.2670115828514099, 0.2550104558467865, 0.26422715187072754], "accuracy": [0.1286487877368927, 0.3275656998157501, 0.4356095492839813, 0.544181764125824, 0.6328094005584717, 0.6630563735961914, 0.6905296444892883, 0.7107383608818054, 0.7091533541679382, 0.7177387475967407, 0.739928662776947, 0.739928662776947, 0.7568352818489075, 0.7630431652069092, 0.7692511081695557, 0.7792893648147583, 0.7843085527420044, 0.7837802171707153, 0.7858935594558716, 0.7980451583862305, 0.7979130744934082, 0.8025360107421875, 0.8108572363853455, 0.8137630224227905, 0.8120459914207458, 0.8133667707443237, 0.8207634687423706, 0.8191784620285034, 0.8253863453865051, 0.8300092220306396, 0.8297450542449951, 0.8335754871368408, 0.8438779711723328, 0.8438779711723328, 0.8491612672805786, 0.8490291833877563, 0.8511425256729126, 0.8512746095657349, 0.8603883385658264, 0.8602562546730042, 0.8625016212463379, 0.8613129258155823, 0.8671245574951172, 0.8728041052818298, 0.8706908226013184, 0.8713511824607849, 0.8745211958885193, 0.8778232932090759, 0.8751816153526306, 0.8755778670310974, 0.8741249442100525, 0.8782195448875427, 0.8850878477096558, 0.885219931602478, 0.8874653577804565, 0.8845595121383667, 0.8922203183174133, 0.8899748921394348, 0.893541157245636, 0.8901069760322571, 0.8972394466400146, 0.8944657444953918], "val_loss": [2.2461888790130615, 2.0235562324523926, 1.1488471031188965, 0.9215399026870728, 0.7865427136421204, 0.7600788474082947, 0.6924453973770142, 0.6774490475654602, 0.6621288061141968, 0.65822833776474, 0.6012334227561951, 0.5862364172935486, 0.5778695344924927, 0.555500328540802, 0.5525361895561218, 0.5432158708572388, 0.5341113805770874, 0.5309679508209229, 0.5397493839263916, 0.5170208215713501, 0.4937649667263031, 0.4892316460609436, 0.5003671050071716, 0.4832702577114105, 0.47715818881988525, 0.4669787883758545, 0.45651036500930786, 0.45994800329208374, 0.46021273732185364, 0.4517049491405487, 0.45534899830818176, 0.43947917222976685, 0.44154810905456543, 0.4415127635002136, 0.4380847215652466, 0.4302855134010315, 0.4216926693916321, 0.43142151832580566, 0.423199862241745, 0.43288785219192505, 0.41386544704437256, 0.4103756844997406, 0.4304007291793823, 0.4168408513069153, 0.4264695644378662, 0.41557252407073975, 0.432798832654953, 0.43637382984161377, 0.4239616394042969, 0.4298937916755676, 0.4121774137020111, 0.4164328873157501, 0.4357617497444153, 0.43619444966316223, 0.4464476704597473, 0.4428899884223938, 0.4477255344390869, 0.4487524926662445, 0.44442546367645264, 0.46893513202667236, 0.47619059681892395, 0.4753465950489044], "val_accuracy": [0.4153333306312561, 0.437666654586792, 0.6393333077430725, 0.6776666641235352, 0.7173333168029785, 0.7183333039283752, 0.734333336353302, 0.7356666922569275, 0.7556666731834412, 0.7369999885559082, 0.7733333110809326, 0.7673333287239075, 0.7829999923706055, 0.7900000214576721, 0.7850000262260437, 0.7889999747276306, 0.7940000295639038, 0.7886666655540466, 0.7856666445732117, 0.7973333597183228, 0.8086666464805603, 0.8153333067893982, 0.8100000023841858, 0.8153333067893982, 0.8163333535194397, 0.828000009059906, 0.828000009059906, 0.828000009059906, 0.8253333568572998, 0.8339999914169312, 0.8333333134651184, 0.8353333473205566, 0.8356666564941406, 0.8410000205039978, 0.8433333039283752, 0.8446666598320007, 0.8476666808128357, 0.8463333249092102, 0.8539999723434448, 0.8529999852180481, 0.8546666502952576, 0.8493333458900452, 0.8523333072662354, 0.8569999933242798, 0.8529999852180481, 0.8523333072662354, 0.8536666631698608, 0.8556666374206543, 0.8583333492279053, 0.8569999933242798, 0.8583333492279053, 0.8583333492279053, 0.8523333072662354, 0.8586666584014893, 0.8600000143051147, 0.8576666712760925, 0.8659999966621399, 0.8619999885559082, 0.8636666536331177, 0.8656666874885559, 0.8633333444595337, 0.8643333315849304]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 8], [0], [0], [1], [0], [2], [0]], "fitness": -0.840571403503418, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5394012928009033, 0.8512300252914429, 0.6752870082855225, 0.6235470771789551, 0.5905944108963013, 0.5840631127357483, 0.5532630681991577, 0.5247302651405334, 0.49972331523895264, 0.5080148577690125, 0.47992658615112305, 0.5134603977203369, 0.5285674333572388, 0.5965669751167297, 0.5871097445487976, 0.6126477718353271], "accuracy": [0.4593845009803772, 0.7100779414176941, 0.7559106945991516, 0.774270236492157, 0.785101056098938, 0.7991018295288086, 0.8078193068504333, 0.8182538747787476, 0.8210275769233704, 0.8133667707443237, 0.832650899887085, 0.8255184292793274, 0.8259146809577942, 0.8125742673873901, 0.8034605979919434, 0.8149517774581909], "val_loss": [0.8177060484886169, 0.5781154036521912, 0.523565948009491, 0.492942214012146, 0.47471025586128235, 0.48210442066192627, 0.4783037006855011, 0.4801435172557831, 0.46749845147132874, 0.4574083983898163, 0.5031207799911499, 0.4919028580188751, 0.5160701274871826, 0.5528861284255981, 0.5535825490951538, 0.5419520139694214], "val_accuracy": [0.721666693687439, 0.7870000004768372, 0.8006666898727417, 0.812333345413208, 0.8203333616256714, 0.8253333568572998, 0.8233333230018616, 0.8276666402816772, 0.8203333616256714, 0.8276666402816772, 0.8416666388511658, 0.8333333134651184, 0.8336666822433472, 0.8289999961853027, 0.824999988079071, 0.8256666660308838]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 8, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 0, 1], [0, 5, 0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [6, 3, 3, 0, 8, 1, 4, 1, 4, 1, 2], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 69, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 4, 3, 1, 1, 15, 8, 7, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), sigma))))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.3116390705108643, 2.3125953674316406, 2.3110272884368896, 2.3135790824890137, 2.3126232624053955, 2.3137898445129395, 2.3119001388549805, 2.3155105113983154, 2.3123703002929688, 2.3130133152008057, 2.3137736320495605], "accuracy": [0.08598599582910538, 0.09272222965955734, 0.09325055778026581, 0.09100515395402908, 0.09813763201236725, 0.09179764986038208, 0.09813763201236725, 0.08942015469074249, 0.09576013684272766, 0.09866596013307571, 0.09628847241401672], "val_loss": [2.3076822757720947, 2.3077311515808105, 2.307781457901001, 2.3078184127807617, 2.3078346252441406, 2.3078482151031494, 2.307856559753418, 2.3078677654266357, 2.3078765869140625, 2.3078808784484863, 2.307889223098755], "val_accuracy": [0.0989999994635582, 0.10100000351667404, 0.10166666656732559, 0.10199999809265137, 0.10199999809265137, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 77], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 4, 6, 8, 1, 4, 1, 4, 3, 4], [0, 0, 2, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 31, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), beta)), sigma)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [27266709504.0, 1.971098159073807e+24, Infinity, Infinity, Infinity, Infinity], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09919429570436478, 0.09998679161071777, 0.09998679161071777], "val_loss": [21567971000320.0, 1.231242690595003e+27, Infinity, Infinity, Infinity, Infinity], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 8, 2], [0, 1, 0, 2, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [3, 9, 3, 0, 3, 5], [0, 2, 0, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [6, 3, 3, 6, 8, 1, 4, 4, 4, 1, 8, 6, 2, 0, 0, 9], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0, 2], [16, 99, 96, 99, 61, 70, 90]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 2, 1, 0, 1, 1, 2, 1, 1, 1, 27, 16, 11, 7], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, grad)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(grad, tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(sigma, alpha), beta))))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.negative(beta)), tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 2, 0, 9, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 8, 4, 0, 1], [0, 0, 0, 3, 3, 0, 3, 3, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.08457142859697342, "mapping_values": [1, 9, 5, 4, 2, 7, 5, 2, 2, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.sqrt(sigma))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), sigma)", "other_info": {"loss": [2.3091607093811035, 2.3090598583221436, 2.3093342781066895, 2.308483123779297, 2.308519124984741, 2.310275077819824, 2.309148073196411], "accuracy": [0.09206181764602661, 0.09060890227556229, 0.09140139818191528, 0.08994849026203156, 0.09153348207473755, 0.0882314071059227, 0.09060890227556229], "val_loss": [2.3078534603118896, 2.3077971935272217, 2.3077640533447266, 2.307741165161133, 2.3077237606048584, 2.307709217071533, 2.307697057723999], "val_accuracy": [0.09166666865348816, 0.09233333170413971, 0.09233333170413971, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]