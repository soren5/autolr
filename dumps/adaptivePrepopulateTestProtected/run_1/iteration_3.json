[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223226308822632, 1.867703914642334, 1.3979169130325317, 1.097693920135498, 0.9506016969680786, 0.8473412394523621, 0.7836220264434814, 0.7285664677619934, 0.7020352482795715, 0.673151969909668, 0.6537116169929504, 0.6336221098899841, 0.6079898476600647, 0.586005449295044, 0.5808212757110596, 0.5590496063232422, 0.545581579208374, 0.5441274642944336, 0.5286175608634949, 0.514104962348938, 0.5098453760147095, 0.4917857050895691, 0.4832933843135834, 0.4737478792667389, 0.46668264269828796, 0.46034833788871765, 0.4488719701766968, 0.44729670882225037, 0.44234931468963623, 0.42786091566085815, 0.4196518659591675, 0.42388588190078735, 0.41697168350219727, 0.4111258089542389, 0.39976048469543457, 0.3984396457672119, 0.38981741666793823, 0.38605833053588867, 0.38480374217033386, 0.3792741298675537, 0.36549943685531616, 0.3641602396965027, 0.35379284620285034, 0.36207249760627747, 0.3516697883605957, 0.35176679491996765, 0.3357080817222595, 0.32903626561164856, 0.34157875180244446, 0.3262804448604584, 0.325957328081131, 0.32457977533340454, 0.31486135721206665, 0.31250545382499695, 0.30591800808906555, 0.3063277006149292, 0.294706791639328, 0.2881503701210022, 0.2895837128162384, 0.2945956289768219, 0.28820323944091797, 0.28607866168022156, 0.27611443400382996], "accuracy": [0.26601505279541016, 0.4900277256965637, 0.5630695819854736, 0.615770697593689, 0.6573768258094788, 0.6993792057037354, 0.7191916704177856, 0.7313432693481445, 0.7493065595626831, 0.7560427784919739, 0.761590301990509, 0.769911527633667, 0.7754589915275574, 0.7853652238845825, 0.7861577272415161, 0.7998943328857422, 0.802800178527832, 0.804649293422699, 0.8062343001365662, 0.816008448600769, 0.8197067975997925, 0.8239334225654602, 0.8238013386726379, 0.8285563588142395, 0.8329150676727295, 0.8308017253875732, 0.8416325449943542, 0.8404437899589539, 0.8384625315666199, 0.846387505531311, 0.8496896028518677, 0.8473120927810669, 0.8524633646011353, 0.8555012345314026, 0.8560295701026917, 0.8548408150672913, 0.8585391640663147, 0.8622375130653381, 0.8598600029945374, 0.8660678863525391, 0.8688416481018066, 0.8685774803161621, 0.8709549307823181, 0.8716153502464294, 0.8746532797813416, 0.8691058158874512, 0.8755778670310974, 0.8868049383163452, 0.8735966086387634, 0.8800686597824097, 0.8850878477096558, 0.8838990926742554, 0.8857482671737671, 0.887597382068634, 0.8907673954963684, 0.8902390599250793, 0.8919561505317688, 0.896446943283081, 0.8968431949615479, 0.8948619961738586, 0.8926165699958801, 0.8965790271759033, 0.9012019634246826], "val_loss": [2.0399909019470215, 1.5251555442810059, 1.0676544904708862, 0.8588533401489258, 0.7755922079086304, 0.7116458415985107, 0.663692057132721, 0.629660427570343, 0.6024261116981506, 0.5841566324234009, 0.5626380443572998, 0.552465558052063, 0.528258204460144, 0.5171092748641968, 0.5087933540344238, 0.49298208951950073, 0.49300920963287354, 0.47799813747406006, 0.4737568795681, 0.466105192899704, 0.45478856563568115, 0.44371655583381653, 0.44045916199684143, 0.43891358375549316, 0.42701074481010437, 0.425264447927475, 0.4219880700111389, 0.4132193922996521, 0.4107579290866852, 0.40802812576293945, 0.4028666317462921, 0.3983374834060669, 0.4013787806034088, 0.39674508571624756, 0.39126038551330566, 0.38767358660697937, 0.3865254819393158, 0.38263949751853943, 0.37926700711250305, 0.3773876130580902, 0.37374967336654663, 0.36995479464530945, 0.36887121200561523, 0.3753794729709625, 0.3666309416294098, 0.363404780626297, 0.36402180790901184, 0.3644130527973175, 0.35975968837738037, 0.35836148262023926, 0.3537342846393585, 0.3564697206020355, 0.3501151502132416, 0.3494795262813568, 0.34949150681495667, 0.34929975867271423, 0.34752413630485535, 0.3428165018558502, 0.34924837946891785, 0.34377238154411316, 0.34630832076072693, 0.34133535623550415, 0.3400469422340393], "val_accuracy": [0.5149999856948853, 0.643666684627533, 0.6713333129882812, 0.6930000185966492, 0.7126666903495789, 0.7390000224113464, 0.7566666603088379, 0.765999972820282, 0.7733333110809326, 0.7879999876022339, 0.7893333435058594, 0.7933333516120911, 0.8066666722297668, 0.8149999976158142, 0.8186666369438171, 0.8163333535194397, 0.8173333406448364, 0.8246666789054871, 0.8299999833106995, 0.8299999833106995, 0.8356666564941406, 0.843999981880188, 0.843666672706604, 0.8429999947547913, 0.8463333249092102, 0.847000002861023, 0.8500000238418579, 0.8523333072662354, 0.8510000109672546, 0.8513333201408386, 0.8543333411216736, 0.8560000061988831, 0.8566666841506958, 0.8543333411216736, 0.859666645526886, 0.8610000014305115, 0.859000027179718, 0.859333336353302, 0.8606666922569275, 0.8603333234786987, 0.862666666507721, 0.8633333444595337, 0.8653333187103271, 0.859666645526886, 0.8669999837875366, 0.8696666955947876, 0.8669999837875366, 0.8683333396911621, 0.8709999918937683, 0.8679999709129333, 0.8740000128746033, 0.8700000047683716, 0.8763333559036255, 0.8733333349227905, 0.8756666779518127, 0.8723333477973938, 0.8776666522026062, 0.878333330154419, 0.8726666569709778, 0.8769999742507935, 0.8709999918937683, 0.8776666522026062, 0.8769999742507935]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8688571453094482, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2206835746765137, 1.8619509935379028, 1.3866688013076782, 1.087815761566162, 0.9290549755096436, 0.8337364792823792, 0.774225652217865, 0.7180577516555786, 0.6862831711769104, 0.6515433192253113, 0.6335793733596802, 0.6110045313835144, 0.5897910594940186, 0.574905514717102, 0.5638877153396606, 0.5449210405349731, 0.5365721583366394, 0.5209693312644958, 0.5160467028617859, 0.49589499831199646, 0.49228769540786743, 0.48912376165390015, 0.4708941578865051, 0.45445916056632996, 0.4608325660228729, 0.4525122344493866, 0.44804319739341736, 0.4359431564807892, 0.42943263053894043, 0.4303451180458069, 0.41569483280181885, 0.4096469581127167, 0.39688849449157715, 0.3958021402359009, 0.39907345175743103, 0.3858485519886017, 0.3813939094543457, 0.3798237144947052, 0.36797034740448, 0.37022292613983154, 0.3644929826259613, 0.3559085428714752, 0.3507816195487976, 0.34624183177948, 0.33800190687179565, 0.33360791206359863, 0.3396172821521759, 0.3255618214607239, 0.31743085384368896, 0.3167589008808136, 0.3145626485347748, 0.3054509162902832, 0.3055203855037689, 0.29788827896118164, 0.29715031385421753, 0.29092851281166077, 0.29583457112312317, 0.28876054286956787, 0.27728039026260376, 0.27384403347969055, 0.28382036089897156, 0.2656015455722809, 0.2723950147628784, 0.26789164543151855, 0.25844353437423706, 0.25492557883262634, 0.2523929476737976, 0.25507137179374695, 0.24600104987621307, 0.2415580004453659, 0.2327423244714737, 0.23587238788604736, 0.2270285040140152, 0.22732789814472198, 0.22943522036075592], "accuracy": [0.2705058753490448, 0.48289525508880615, 0.5626733303070068, 0.6242240071296692, 0.6633205413818359, 0.7021529674530029, 0.7127195596694946, 0.7416457533836365, 0.7500990629196167, 0.7609298825263977, 0.7658169269561768, 0.7786290049552917, 0.780610203742981, 0.789459764957428, 0.7976489067077637, 0.8016114234924316, 0.8070268034934998, 0.8150838613510132, 0.8123101592063904, 0.8153480291366577, 0.8260467648506165, 0.8232730031013489, 0.8308017253875732, 0.8356888294219971, 0.8322546482086182, 0.8364813327789307, 0.8376700282096863, 0.8470479249954224, 0.8436138033866882, 0.842028796672821, 0.8467837572097778, 0.8552370667457581, 0.8577466607093811, 0.8549728989601135, 0.8545766472816467, 0.8614450097084045, 0.8622375130653381, 0.8648791313171387, 0.8713511824607849, 0.863558292388916, 0.868049144744873, 0.8710870146751404, 0.8706908226013184, 0.8749174475669861, 0.8775591254234314, 0.8774270415306091, 0.8784837126731873, 0.8828424215316772, 0.8833707571029663, 0.8850878477096558, 0.8842953443527222, 0.8906353116035461, 0.8874653577804565, 0.8898428082466125, 0.8910315632820129, 0.8942015767097473, 0.8905032277107239, 0.8960506916046143, 0.9000132083892822, 0.8994848728179932, 0.8960506916046143, 0.9035794734954834, 0.9017302989959717, 0.9014661312103271, 0.9064852595329285, 0.9064852595329285, 0.9068815112113953, 0.9075419306755066, 0.9068815112113953, 0.9103156924247742, 0.9120327830314636, 0.9129573106765747, 0.9196935892105103, 0.9141460657119751, 0.9158631563186646], "val_loss": [2.033355712890625, 1.5087794065475464, 1.0402156114578247, 0.8406103253364563, 0.753488302230835, 0.7003113031387329, 0.651417076587677, 0.6205064058303833, 0.5911837220191956, 0.5671808123588562, 0.5473315715789795, 0.5290159583091736, 0.517187237739563, 0.5079987645149231, 0.4913029670715332, 0.48030710220336914, 0.47480320930480957, 0.45840251445770264, 0.45306047797203064, 0.4511233866214752, 0.4379899203777313, 0.4342922270298004, 0.42895856499671936, 0.42285245656967163, 0.42481961846351624, 0.4131280779838562, 0.4090254306793213, 0.4042488634586334, 0.4002992808818817, 0.3940560221672058, 0.39853161573410034, 0.38650521636009216, 0.38263607025146484, 0.38144949078559875, 0.3815765380859375, 0.3773849308490753, 0.3745593726634979, 0.3716886341571808, 0.368180513381958, 0.36651623249053955, 0.36490392684936523, 0.36325129866600037, 0.3616010844707489, 0.35872653126716614, 0.3581984341144562, 0.3549809455871582, 0.3526434004306793, 0.3494180142879486, 0.34506383538246155, 0.3478129208087921, 0.3424529731273651, 0.3432345390319824, 0.34122180938720703, 0.34306570887565613, 0.3442937731742859, 0.34120893478393555, 0.33577480912208557, 0.33335205912590027, 0.3328242599964142, 0.332019567489624, 0.33006641268730164, 0.3310540020465851, 0.33048757910728455, 0.32684823870658875, 0.33132073283195496, 0.3294159770011902, 0.33226707577705383, 0.3239096999168396, 0.3270975649356842, 0.3256710171699524, 0.32636457681655884, 0.3236725628376007, 0.330814927816391, 0.3277604281902313, 0.326564222574234], "val_accuracy": [0.531333327293396, 0.6380000114440918, 0.6783333420753479, 0.6983333230018616, 0.7329999804496765, 0.7523333430290222, 0.7616666555404663, 0.7663333415985107, 0.7749999761581421, 0.7910000085830688, 0.7976666688919067, 0.7993333339691162, 0.8083333373069763, 0.812333345413208, 0.8216666579246521, 0.8276666402816772, 0.82833331823349, 0.8393333554267883, 0.8346666693687439, 0.8386666774749756, 0.8479999899864197, 0.8410000205039978, 0.846666693687439, 0.8443333506584167, 0.8479999899864197, 0.8536666631698608, 0.8556666374206543, 0.8576666712760925, 0.8569999933242798, 0.8579999804496765, 0.859666645526886, 0.8610000014305115, 0.8619999885559082, 0.859333336353302, 0.8633333444595337, 0.8659999966621399, 0.862666666507721, 0.8653333187103271, 0.8703333139419556, 0.8703333139419556, 0.8666666746139526, 0.8666666746139526, 0.8726666569709778, 0.8679999709129333, 0.8696666955947876, 0.871999979019165, 0.8726666569709778, 0.8733333349227905, 0.875, 0.8733333349227905, 0.8736666440963745, 0.8733333349227905, 0.8773333430290222, 0.874666690826416, 0.871666669845581, 0.8763333559036255, 0.8773333430290222, 0.8803333044052124, 0.8776666522026062, 0.8809999823570251, 0.8820000290870667, 0.878333330154419, 0.8769999742507935, 0.8823333382606506, 0.8803333044052124, 0.8823333382606506, 0.8830000162124634, 0.8820000290870667, 0.8840000033378601, 0.8866666555404663, 0.8809999823570251, 0.8830000162124634, 0.8826666474342346, 0.8846666812896729, 0.8859999775886536]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 7, 6, 7, 2], [0, 2, 3, 2, 4, 4], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.854285717010498, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), tf.math.divide_no_nan(tf.math.add(grad, beta), tf.math.add(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2915806770324707, 2.1878480911254883, 1.7659872770309448, 1.3518650531768799, 1.062716007232666, 0.9059103727340698, 0.8280780911445618, 0.8050887584686279, 0.7699309587478638, 0.7434999346733093, 0.6962480545043945, 0.6840782165527344, 0.6469489932060242, 0.6431174278259277, 0.6109931468963623, 0.6063706874847412, 0.5844894051551819, 0.571851909160614, 0.5581691265106201, 0.5411350131034851, 0.5261678099632263, 0.5297602415084839, 0.5181923508644104, 0.502189040184021, 0.4951954782009125, 0.47998347878456116, 0.4774359464645386, 0.4759778380393982, 0.4651830494403839, 0.45001164078712463, 0.4505529999732971, 0.4400428235530853, 0.43246591091156006, 0.41752374172210693, 0.4210813045501709, 0.41934365034103394, 0.3970993757247925, 0.3935496211051941, 0.392564058303833, 0.39476388692855835, 0.38935819268226624, 0.37637031078338623, 0.377379447221756, 0.36035847663879395, 0.3689640462398529], "accuracy": [0.1294412910938263, 0.31581032276153564, 0.43085458874702454, 0.5403513312339783, 0.63096022605896, 0.6687359809875488, 0.6942279934883118, 0.7022850513458252, 0.7041342258453369, 0.7177387475967407, 0.737947404384613, 0.7425703406333923, 0.7536653280258179, 0.7578919529914856, 0.7605336308479309, 0.7621186375617981, 0.7745344042778015, 0.7810064554214478, 0.7823272943496704, 0.7898560166358948, 0.7960638999938965, 0.7998943328857422, 0.8038568496704102, 0.8049134612083435, 0.8047813773155212, 0.811649739742279, 0.8208954930305481, 0.817461371421814, 0.821820080280304, 0.8227446675300598, 0.8245938420295715, 0.8376700282096863, 0.8334434032440186, 0.8374059200286865, 0.8418967127799988, 0.8405758738517761, 0.8469158411026001, 0.8525954484939575, 0.8540483713150024, 0.8465195894241333, 0.8499537706375122, 0.8585391640663147, 0.852331280708313, 0.8610487580299377, 0.8610487580299377], "val_loss": [2.246755599975586, 2.011782646179199, 1.1202785968780518, 0.8340363502502441, 0.7501806020736694, 0.712424099445343, 0.6744714379310608, 0.6605172753334045, 0.6498060822486877, 0.6286890506744385, 0.5887424349784851, 0.584153950214386, 0.5664243102073669, 0.5440370440483093, 0.5456233620643616, 0.5373453497886658, 0.5165019035339355, 0.5084170699119568, 0.5070692300796509, 0.507445752620697, 0.4930422306060791, 0.4915338456630707, 0.4870622456073761, 0.48219403624534607, 0.4778885841369629, 0.47034725546836853, 0.4651165306568146, 0.4609532058238983, 0.46229344606399536, 0.44708016514778137, 0.43578600883483887, 0.4234814941883087, 0.44053685665130615, 0.43832963705062866, 0.44505590200424194, 0.42962735891342163, 0.4347040057182312, 0.44119420647621155, 0.4341735541820526, 0.42488810420036316, 0.43331027030944824, 0.4144648313522339, 0.4247560203075409, 0.4373944401741028, 0.4307120740413666], "val_accuracy": [0.4086666703224182, 0.41733333468437195, 0.6456666588783264, 0.6919999718666077, 0.7210000157356262, 0.7316666841506958, 0.7446666955947876, 0.7419999837875366, 0.7490000128746033, 0.7570000290870667, 0.7566666603088379, 0.7713333368301392, 0.781000018119812, 0.7903333306312561, 0.7903333306312561, 0.7940000295639038, 0.7976666688919067, 0.8080000281333923, 0.8036666512489319, 0.8056666851043701, 0.8113333582878113, 0.8226666450500488, 0.8240000009536743, 0.8289999961853027, 0.8326666951179504, 0.8330000042915344, 0.8330000042915344, 0.8443333506584167, 0.8413333296775818, 0.8450000286102295, 0.8443333506584167, 0.8519999980926514, 0.8486666679382324, 0.8523333072662354, 0.8516666889190674, 0.8496666550636292, 0.856333315372467, 0.862666666507721, 0.8493333458900452, 0.8653333187103271, 0.8586666584014893, 0.8513333201408386, 0.8553333282470703, 0.862666666507721, 0.8613333106040955]}, "mapping_values": [1, 10, 5, 5, 3, 13, 7, 6, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 13}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0], [0, 5, 5, 9], [0], [0], [1], [0], [2], [0]], "fitness": -0.8259999752044678, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6378374099731445, 0.9879866242408752, 0.7504865527153015, 0.6918637752532959, 0.6140295267105103, 0.5678341388702393, 0.5679589509963989, 0.5574213862419128, 0.5322172045707703, 0.5448771715164185, 0.5481264591217041, 0.5867246985435486, 0.5776002407073975, 0.5677874684333801], "accuracy": [0.4765552878379822, 0.6790384650230408, 0.7298903465270996, 0.7549861073493958, 0.7725531458854675, 0.7942147850990295, 0.7991018295288086, 0.8014793395996094, 0.8144234418869019, 0.8033285140991211, 0.8222163319587708, 0.798309326171875, 0.8004226684570312, 0.7972526550292969], "val_loss": [1.055097222328186, 0.6325654983520508, 0.641303539276123, 0.5286550521850586, 0.5256556868553162, 0.5152814984321594, 0.5082775354385376, 0.5283941030502319, 0.5212845206260681, 0.5464514493942261, 0.5328214764595032, 0.5485221147537231, 0.5423107147216797, 0.5397956371307373], "val_accuracy": [0.6620000004768372, 0.765666663646698, 0.784333348274231, 0.8036666512489319, 0.8013333082199097, 0.8109999895095825, 0.8176666498184204, 0.82833331823349, 0.8393333554267883, 0.8263333439826965, 0.828000009059906, 0.8230000138282776, 0.8276666402816772, 0.8223333358764648]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 4, 0, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 2], [39, 39], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 5, 0, 5, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 0, 2, 4, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 1, 6], [16, 99, 96, 99, 61, 1]], "fitness": -0.6119999885559082, "mapping_values": [1, 9, 5, 4, 1, 1, 0, 1, 1, 2, 1, 1, 1, 26, 14, 12, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.math.negative(tf.math.add(alpha, beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.negative(alpha), grad)))", "other_info": {"loss": [2.304736375808716, 2.2883224487304688, 2.2785515785217285, 2.2751991748809814, 2.2729921340942383, 2.272414445877075, 2.2716548442840576, 2.2703089714050293, 2.2689497470855713, 2.2682907581329346, 2.2675487995147705, 2.266772747039795, 2.265793561935425, 2.2648818492889404, 2.264446258544922, 2.2637267112731934, 2.262939214706421, 2.263136148452759, 2.2630574703216553, 2.262268304824829, 2.261932849884033, 2.261453628540039, 2.261603593826294, 2.2606394290924072, 2.2604498863220215, 2.2602689266204834, 2.259860038757324, 2.2599825859069824, 2.26019549369812, 2.2594263553619385, 2.2592945098876953, 2.2596302032470703, 2.259023427963257, 2.2589895725250244, 2.258500814437866], "accuracy": [0.1002509593963623, 0.15968827903270721, 0.25016510486602783, 0.3213578164577484, 0.3657376766204834, 0.38885220885276794, 0.4006075859069824, 0.41104212403297424, 0.42583543062210083, 0.42504292726516724, 0.4259675145149231, 0.4303262531757355, 0.4445911943912506, 0.44406285881996155, 0.452119916677475, 0.44366663694381714, 0.4550257623195648, 0.4504028558731079, 0.4414212107658386, 0.4581957459449768, 0.4636111557483673, 0.4555540978908539, 0.4554220139980316, 0.46704530715942383, 0.47246071696281433, 0.46625280380249023, 0.46770572662353516, 0.4690265357494354, 0.4601770043373108, 0.4651961326599121, 0.46427157521247864, 0.4687623679637909, 0.4721965491771698, 0.4671773910522461, 0.4706115424633026], "val_loss": [2.293238878250122, 2.2808144092559814, 2.2776591777801514, 2.2772979736328125, 2.276503801345825, 2.275621175765991, 2.274637222290039, 2.2735300064086914, 2.272386312484741, 2.2713122367858887, 2.2703564167022705, 2.269453525543213, 2.2686169147491455, 2.267909288406372, 2.267314910888672, 2.2667508125305176, 2.266312837600708, 2.2658493518829346, 2.265449285507202, 2.2650949954986572, 2.264709949493408, 2.2643959522247314, 2.264096260070801, 2.2638332843780518, 2.263552188873291, 2.263292074203491, 2.2630534172058105, 2.2628109455108643, 2.2626264095306396, 2.2624094486236572, 2.262221574783325, 2.2620272636413574, 2.2618250846862793, 2.261641502380371, 2.261482000350952], "val_accuracy": [0.13566666841506958, 0.3453333377838135, 0.5133333206176758, 0.5406666398048401, 0.5496666431427002, 0.5613333582878113, 0.5676666498184204, 0.5776666402816772, 0.5746666789054871, 0.5766666531562805, 0.578000009059906, 0.5799999833106995, 0.5820000171661377, 0.5836666822433472, 0.5843333601951599, 0.5889999866485596, 0.5883333086967468, 0.5899999737739563, 0.5883333086967468, 0.5899999737739563, 0.5899999737739563, 0.5933333039283752, 0.5929999947547913, 0.5946666598320007, 0.5956666469573975, 0.5950000286102295, 0.5956666469573975, 0.5956666469573975, 0.5953333377838135, 0.596666693687439, 0.5953333377838135, 0.5953333377838135, 0.5953333377838135, 0.5956666469573975, 0.5963333249092102]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], [3, 1, 3, 3, 3, 4, 5, 9], [0, 0, 1, 0, 2, 2], [39, 39, 47, 56], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [4, 6, 9, 0], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 8, 3, 5, 8, 2, 4, 2, 4, 2, 8, 7], [4, 3, 4, 5, 4, 1, 1, 4, 6, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 4, 6, 4, 2, 2, 2, 1, 1, 1, 21, 12, 9, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.square(grad))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.math.square(tf.math.sqrt(tf.math.add(tf.math.pow(grad, tf.math.add(sigma, tf.math.pow(grad, grad))), tf.math.add(grad, alpha)))), alpha)), tf.math.sqrt(tf.math.add(grad, grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 1, 2], [39, 39, 83], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 6, 1, 7, 5, 4], [0, 1, 2, 4, 2, 3], [38], [0, 0, 1], [0, 8], [0], [0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 2, 1, 1, 1, 3, 2, 1, 1, 21, 11, 10, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.add(tf.math.sqrt(alpha), beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.303849458694458, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 5], [0, 0, 0, 2], [39, 39, 37], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 2, 3, 0, 3, 5, 5, 9], [0, 2, 0, 0], [16, 16, 34], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [5, 3, 0, 6, 8, 1, 4, 1, 3, 2, 8], [0, 0, 0, 3, 0, 0, 2, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09114285558462143, "mapping_values": [1, 8, 5, 3, 3, 11, 8, 3, 3, 2, 1, 1, 1, 8, 5, 3, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3092586994171143, 2.309321641921997, 2.3088152408599854, 2.3090152740478516, 2.3094124794006348, 2.3095862865448], "accuracy": [0.09457138925790787, 0.09417514503002167, 0.09140139818191528, 0.09628847241401672, 0.08558975160121918, 0.08638224750757217], "val_loss": [2.3089427947998047, 2.30885648727417, 2.3087546825408936, 2.308645486831665, 2.308530807495117, 2.308407783508301], "val_accuracy": [0.08699999749660492, 0.0860000029206276, 0.08566666394472122, 0.0846666693687439, 0.08433333039283752, 0.08366666734218597]}}]