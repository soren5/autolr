[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2256245613098145, 1.8781623840332031, 1.4072972536087036, 1.096508264541626, 0.9537420868873596, 0.8429968953132629, 0.7770969867706299, 0.7280099391937256, 0.6923913359642029, 0.6564570069313049, 0.6368926763534546, 0.6115496754646301, 0.5907700657844543, 0.5747857093811035, 0.5530373454093933, 0.542858362197876, 0.5388503074645996, 0.5175861120223999, 0.5063436031341553, 0.4964364767074585, 0.48100847005844116, 0.4835014045238495, 0.4731559753417969, 0.46319580078125, 0.4530922472476959, 0.443759560585022, 0.43872886896133423, 0.42735379934310913, 0.4193156063556671, 0.4128904640674591, 0.39494073390960693, 0.39723145961761475, 0.4053707718849182, 0.38770970702171326, 0.3796575665473938, 0.37663471698760986, 0.3762223720550537, 0.37055882811546326, 0.36279982328414917, 0.3573911488056183, 0.3499065339565277, 0.34450095891952515, 0.3362675905227661, 0.3314463794231415, 0.34042227268218994, 0.33452361822128296, 0.3276170790195465, 0.31620195508003235, 0.3183687627315521, 0.32261160016059875, 0.30958059430122375, 0.29887309670448303, 0.30296722054481506, 0.2971844971179962, 0.29300567507743835, 0.2883957624435425, 0.2833849787712097, 0.2780212461948395, 0.2740108370780945, 0.2700497806072235, 0.2713799476623535], "accuracy": [0.27499669790267944, 0.4893673360347748, 0.5567296147346497, 0.6193369626998901, 0.6604147553443909, 0.7036058902740479, 0.719852089881897, 0.7396644949913025, 0.7486461400985718, 0.7604015469551086, 0.770439863204956, 0.7725531458854675, 0.7877426743507385, 0.7931581139564514, 0.8017435073852539, 0.8061022162437439, 0.8088759779930115, 0.8125742673873901, 0.8197067975997925, 0.8240655064582825, 0.8330471515655518, 0.8286884427070618, 0.8337075710296631, 0.8360850811004639, 0.8416325449943542, 0.846387505531311, 0.844010055065155, 0.8510104417800903, 0.8537842035293579, 0.857218325138092, 0.8615770936012268, 0.8574824929237366, 0.8524633646011353, 0.8634262084960938, 0.8664641380310059, 0.8689737319946289, 0.8663320541381836, 0.8664641380310059, 0.8729361891746521, 0.8726720213890076, 0.8776912093162537, 0.8770307898521423, 0.8786157965660095, 0.8831065893173218, 0.8799365758895874, 0.8802007436752319, 0.8808611631393433, 0.8874653577804565, 0.8825782537460327, 0.8865407705307007, 0.8908994793891907, 0.8948619961738586, 0.8886540532112122, 0.8952582478523254, 0.8967111110687256, 0.8969752788543701, 0.8972394466400146, 0.8982961177825928, 0.9041078090667725, 0.9063531756401062, 0.904768168926239], "val_loss": [2.0502963066101074, 1.5404036045074463, 1.070459008216858, 0.8588259816169739, 0.7628595232963562, 0.7101656794548035, 0.6661227345466614, 0.6280916929244995, 0.6037620902061462, 0.5847645401954651, 0.5646317005157471, 0.5509102940559387, 0.5394541621208191, 0.5266077518463135, 0.5127588510513306, 0.50594562292099, 0.49385252594947815, 0.49261927604675293, 0.48340725898742676, 0.47384095191955566, 0.46158459782600403, 0.462019681930542, 0.4513995051383972, 0.44763270020484924, 0.44448038935661316, 0.43677619099617004, 0.4376279413700104, 0.4324284791946411, 0.42557018995285034, 0.4238596558570862, 0.41600117087364197, 0.4181045591831207, 0.4143866002559662, 0.40833088755607605, 0.4043194055557251, 0.39912736415863037, 0.3962313234806061, 0.3911835253238678, 0.39258867502212524, 0.3926599621772766, 0.38583528995513916, 0.3827897906303406, 0.38625845313072205, 0.38166120648384094, 0.37815290689468384, 0.37796714901924133, 0.37750163674354553, 0.3735617697238922, 0.37022730708122253, 0.3730623424053192, 0.36987972259521484, 0.3669206500053406, 0.3721192479133606, 0.3688223958015442, 0.3632954955101013, 0.36513465642929077, 0.3657394349575043, 0.35896745324134827, 0.3532392978668213, 0.3561100959777832, 0.3608724772930145], "val_accuracy": [0.5429999828338623, 0.6460000276565552, 0.6783333420753479, 0.6933333277702332, 0.718999981880188, 0.7413333058357239, 0.746666669845581, 0.7670000195503235, 0.7789999842643738, 0.7889999747276306, 0.7976666688919067, 0.800000011920929, 0.8109999895095825, 0.8180000185966492, 0.8186666369438171, 0.8266666531562805, 0.8289999961853027, 0.8223333358764648, 0.8349999785423279, 0.831333339214325, 0.8396666646003723, 0.8353333473205566, 0.8413333296775818, 0.8410000205039978, 0.8423333168029785, 0.8460000157356262, 0.8456666469573975, 0.8476666808128357, 0.8510000109672546, 0.8500000238418579, 0.8543333411216736, 0.8516666889190674, 0.8529999852180481, 0.8569999933242798, 0.8543333411216736, 0.8553333282470703, 0.8576666712760925, 0.8619999885559082, 0.8629999756813049, 0.8583333492279053, 0.8646666407585144, 0.8656666874885559, 0.8613333106040955, 0.8659999966621399, 0.8656666874885559, 0.8663333058357239, 0.8676666617393494, 0.871999979019165, 0.8669999837875366, 0.8696666955947876, 0.8703333139419556, 0.8740000128746033, 0.8693333268165588, 0.8686666488647461, 0.8713333606719971, 0.878333330154419, 0.871666669845581, 0.8703333139419556, 0.8736666440963745, 0.8736666440963745, 0.8740000128746033]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.850857138633728, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2931325435638428, 2.1860153675079346, 1.7609448432922363, 1.3437447547912598, 1.0467383861541748, 0.8997412919998169, 0.8604435324668884, 0.7991179823875427, 0.7462298274040222, 0.7152256369590759, 0.6884878873825073, 0.6622939705848694, 0.6406204104423523, 0.6109631657600403, 0.5922134518623352, 0.5834614634513855, 0.5656995177268982, 0.5536844730377197, 0.5598181486129761, 0.530971109867096, 0.5219599008560181, 0.5093786120414734, 0.4954375624656677, 0.48751306533813477, 0.47398611903190613, 0.46670064330101013, 0.46767255663871765, 0.45684847235679626, 0.4387640058994293, 0.42658090591430664, 0.4330858886241913, 0.4177224934101105, 0.41200006008148193, 0.4072851538658142, 0.40405458211898804, 0.3970523178577423, 0.38785070180892944, 0.38287726044654846, 0.37361422181129456, 0.3839009702205658, 0.3624795377254486, 0.36831411719322205, 0.3658221364021301, 0.34569603204727173, 0.36186328530311584, 0.3439672589302063, 0.33340057730674744, 0.33213332295417786, 0.334032267332077, 0.3243505656719208, 0.32276806235313416, 0.3124760389328003, 0.2992384731769562, 0.2983006238937378, 0.2966042459011078, 0.28465536236763, 0.2802457809448242, 0.2816527485847473, 0.2770683169364929, 0.2714556157588959, 0.2714154124259949, 0.25537508726119995, 0.2604392468929291, 0.25766417384147644, 0.2468070685863495, 0.24484772980213165], "accuracy": [0.12891295552253723, 0.3245278000831604, 0.44644036889076233, 0.5420684218406677, 0.639809787273407, 0.6769251227378845, 0.6931713223457336, 0.7049266695976257, 0.7131158113479614, 0.7240787148475647, 0.7413815855979919, 0.7494386434555054, 0.7597411274909973, 0.7707040309906006, 0.7717606425285339, 0.7802139520645142, 0.7909126877784729, 0.7886672616004944, 0.7873464822769165, 0.7948752045631409, 0.8049134612083435, 0.8063663840293884, 0.8138951063156128, 0.807158887386322, 0.8212917447090149, 0.826310932636261, 0.8198388814926147, 0.8256505131721497, 0.832650899887085, 0.8376700282096863, 0.8363492488861084, 0.8418967127799988, 0.8438779711723328, 0.844010055065155, 0.8470479249954224, 0.845859169960022, 0.8549728989601135, 0.8519350290298462, 0.8539162874221802, 0.8560295701026917, 0.8613129258155823, 0.8556333184242249, 0.8573504090309143, 0.8696341514587402, 0.8673887252807617, 0.8673887252807617, 0.8651432991027832, 0.8726720213890076, 0.8708229064941406, 0.870030403137207, 0.8636903762817383, 0.8755778670310974, 0.8796724081039429, 0.8771628737449646, 0.8813894987106323, 0.8869370222091675, 0.8856161832809448, 0.8897107243537903, 0.8902390599250793, 0.8916919827461243, 0.8905032277107239, 0.8951261639595032, 0.8973715305328369, 0.898428201675415, 0.8996169567108154, 0.9033153057098389], "val_loss": [2.2453885078430176, 2.0150411128997803, 1.1382460594177246, 0.8875377774238586, 0.7798096537590027, 0.722339928150177, 0.7101558446884155, 0.6481087803840637, 0.636965811252594, 0.6114746332168579, 0.5915601253509521, 0.5727276802062988, 0.5614917874336243, 0.5505062937736511, 0.5445181727409363, 0.5321851968765259, 0.5140734910964966, 0.5111083984375, 0.5059929490089417, 0.488374799489975, 0.47759810090065, 0.4800651967525482, 0.48442554473876953, 0.4668092429637909, 0.4831039607524872, 0.4649515450000763, 0.4477660059928894, 0.44662415981292725, 0.451986163854599, 0.44514408707618713, 0.44308820366859436, 0.437089204788208, 0.4364592432975769, 0.431489497423172, 0.43744364380836487, 0.43174654245376587, 0.42230144143104553, 0.4195880889892578, 0.4422529339790344, 0.44218313694000244, 0.4122207760810852, 0.4058413505554199, 0.4272945523262024, 0.43731144070625305, 0.4407259225845337, 0.4219904839992523, 0.41784653067588806, 0.4291897118091583, 0.43438151478767395, 0.42134493589401245, 0.41026225686073303, 0.4339483976364136, 0.4334016442298889, 0.43268904089927673, 0.44215917587280273, 0.4494702219963074, 0.45785537362098694, 0.46888139843940735, 0.45202872157096863, 0.4545609951019287, 0.475502610206604, 0.4951128661632538, 0.49707019329071045, 0.4851391613483429, 0.47495535016059875, 0.4816737771034241], "val_accuracy": [0.41733333468437195, 0.49666666984558105, 0.6430000066757202, 0.6850000023841858, 0.7089999914169312, 0.722000002861023, 0.7429999709129333, 0.7413333058357239, 0.7573333382606506, 0.7646666765213013, 0.7689999938011169, 0.7739999890327454, 0.7776666879653931, 0.7919999957084656, 0.7863333225250244, 0.7876666784286499, 0.8040000200271606, 0.7990000247955322, 0.8090000152587891, 0.8196666836738586, 0.8259999752044678, 0.8146666884422302, 0.8190000057220459, 0.828000009059906, 0.8223333358764648, 0.8299999833106995, 0.8326666951179504, 0.8363333344459534, 0.8360000252723694, 0.8420000076293945, 0.846666693687439, 0.8460000157356262, 0.8420000076293945, 0.8500000238418579, 0.8416666388511658, 0.8483333587646484, 0.8453333377838135, 0.8500000238418579, 0.8529999852180481, 0.8496666550636292, 0.8543333411216736, 0.8556666374206543, 0.8529999852180481, 0.856333315372467, 0.856333315372467, 0.8560000061988831, 0.8576666712760925, 0.8603333234786987, 0.8616666793823242, 0.856333315372467, 0.8606666922569275, 0.8646666407585144, 0.8643333315849304, 0.8650000095367432, 0.8603333234786987, 0.8656666874885559, 0.8663333058357239, 0.8619999885559082, 0.8693333268165588, 0.8713333606719971, 0.8730000257492065, 0.8686666488647461, 0.8693333268165588, 0.8706666827201843, 0.8669999837875366, 0.862666666507721]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8251428604125977, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5332896709442139, 0.803466260433197, 0.6295021772384644, 0.5789119005203247, 0.5331087112426758, 0.5189298391342163, 0.4930476248264313, 0.4870874285697937, 0.4977658689022064, 0.485403835773468, 0.4811703860759735, 0.5123509168624878, 0.49298882484436035, 0.5466501116752625, 0.5215509533882141, 0.5061689615249634, 0.5248477458953857, 0.5558061599731445], "accuracy": [0.47008320689201355, 0.7238145470619202, 0.7629110813140869, 0.7795535326004028, 0.8037247657775879, 0.8024039268493652, 0.8153480291366577, 0.8219521641731262, 0.8309338092803955, 0.8271034359931946, 0.8286884427070618, 0.8198388814926147, 0.8208954930305481, 0.8234050869941711, 0.82683926820755, 0.821820080280304, 0.8165367841720581, 0.8136309385299683], "val_loss": [0.8699702024459839, 0.6421151757240295, 0.5498450994491577, 0.5357635617256165, 0.5419844388961792, 0.5702604055404663, 0.5401502251625061, 0.5449172258377075, 0.5165571570396423, 0.5813836455345154, 0.5193364024162292, 0.5741334557533264, 0.6449684500694275, 0.6000916957855225, 0.5662645101547241, 0.538219153881073, 0.5799276232719421, 0.6557744741439819], "val_accuracy": [0.6866666674613953, 0.7693333625793457, 0.7919999957084656, 0.8059999942779541, 0.8113333582878113, 0.8136666417121887, 0.8349999785423279, 0.8226666450500488, 0.8293333053588867, 0.8323333263397217, 0.8360000252723694, 0.82833331823349, 0.8389999866485596, 0.8339999914169312, 0.8363333344459534, 0.831333339214325, 0.8203333616256714, 0.8256666660308838]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 38], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 1], [0, 0, 0, 3, 4, 0, 3, 4, 2, 0, 6], [16, 1, 3, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 2, 1, 0, 1, 0, 22, 11, 11, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), grad), tf.math.add(tf.math.subtract(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 1, 0, 2, 1], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 2, 0, 3, 2, 0, 4], [16, 16, 60], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 1, 7, 5, 4, 4, 9], [0, 2, 6, 3, 2], [99, 95, 89], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 5, 8, 1, 4, 1, 4, 2, 3, 0, 9], [2, 7, 6, 3, 0, 7, 5, 0, 6, 0], [0, 33, 55]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 15, 8, 7, 3, 13, 8, 5, 2, 22, 13, 9, 3], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(grad, beta), tf.math.sqrt(tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.pow(grad, tf.math.pow(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), sigma))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.square(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(beta, tf.math.pow(grad, tf.math.add(grad, tf.math.multiply(sigma, tf.constant(0.0, shape=shape, dtype=tf.float32))))), grad), tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), grad), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 6, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [0, 16], [0, 1, 1], [2], [0, 6], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 9, 2, 8, 2, 0], [0, 0, 4, 3, 3, 0, 3, 1, 2, 0], [16, 99, 0, 99, 61, 37]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(sigma), sigma))))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.negative(sigma), alpha)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 0, 3, 1, 2, 1, 22, 13, 9, 4], "tree_depth": 23}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 8], [0, 1, 0, 2], [92, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [8, 2, 3, 0, 3, 5], [0, 0, 0, 1], [16, 16, 43], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 9, 4, 1, 8, 2, 8], [0, 0, 0, 0, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 10, 6, 4, 3, 2, 1, 1, 1, 10, 6, 4, 5], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30312442779541, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]