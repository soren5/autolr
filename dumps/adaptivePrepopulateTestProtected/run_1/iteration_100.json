[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8545714020729065, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2227284908294678, 1.8688043355941772, 1.3957678079605103, 1.0919651985168457, 0.9405674934387207, 0.8319677710533142, 0.7694839239120483, 0.7185102701187134, 0.6833807229995728, 0.6526545882225037, 0.6332686543464661, 0.6033896803855896, 0.5814303159713745, 0.5703864693641663, 0.5548650026321411, 0.53754061460495, 0.520643413066864, 0.5138654112815857, 0.5004838109016418, 0.48780420422554016, 0.4765402674674988, 0.4643566906452179, 0.45871207118034363, 0.4536875784397125, 0.4432615637779236, 0.43052932620048523, 0.4270581603050232, 0.42300698161125183, 0.41631239652633667, 0.40522196888923645, 0.4036300480365753, 0.3962092995643616, 0.38519856333732605, 0.38073188066482544, 0.3780602216720581, 0.37036800384521484, 0.3679784834384918, 0.36351045966148376, 0.35572317242622375, 0.3427562117576599, 0.3457598090171814, 0.3369550108909607, 0.332503080368042, 0.32444319128990173, 0.32180917263031006, 0.31373798847198486, 0.31707486510276794, 0.3091125190258026, 0.3006758987903595, 0.2995239496231079, 0.293692022562027, 0.30355432629585266, 0.29414883255958557, 0.28384530544281006, 0.28136682510375977, 0.2730112671852112, 0.27061885595321655], "accuracy": [0.2769779562950134, 0.4823669195175171, 0.5680887699127197, 0.6244881749153137, 0.669792652130127, 0.7029454708099365, 0.7269845604896545, 0.7366266250610352, 0.7573636174201965, 0.7721568942070007, 0.7716285586357117, 0.7833839654922485, 0.7884030938148499, 0.7957997918128967, 0.8024039268493652, 0.809140145778656, 0.8149517774581909, 0.8230088353157043, 0.8234050869941711, 0.8281601071357727, 0.8323867321014404, 0.8399154543876648, 0.8347642421722412, 0.8358209133148193, 0.8387266993522644, 0.8524633646011353, 0.8500858545303345, 0.8549728989601135, 0.8535200357437134, 0.8553691506385803, 0.8540483713150024, 0.8593316674232483, 0.8609166741371155, 0.8634262084960938, 0.8663320541381836, 0.8661999702453613, 0.8704266548156738, 0.8716153502464294, 0.8767666220664978, 0.8778232932090759, 0.8770307898521423, 0.8819178342819214, 0.8853520154953003, 0.8861445188522339, 0.8860124349594116, 0.8838990926742554, 0.8870691061019897, 0.8887861371040344, 0.8924844861030579, 0.8931449055671692, 0.8975036144256592, 0.8927486538887024, 0.8944657444953918, 0.8960506916046143, 0.897899866104126, 0.8985602855682373, 0.9052965044975281], "val_loss": [2.0380985736846924, 1.5156490802764893, 1.0380343198776245, 0.831969141960144, 0.7409868836402893, 0.6870118975639343, 0.6414075493812561, 0.608349621295929, 0.5819655060768127, 0.5610513687133789, 0.5417057871818542, 0.5272814035415649, 0.5144328474998474, 0.5066133737564087, 0.4902997612953186, 0.4792754650115967, 0.4709676206111908, 0.4648851752281189, 0.4576377868652344, 0.4488883912563324, 0.44306379556655884, 0.44047248363494873, 0.43652600049972534, 0.4279080033302307, 0.42508745193481445, 0.41983798146247864, 0.4220389127731323, 0.4113980233669281, 0.40954288840293884, 0.40490034222602844, 0.3998369872570038, 0.3937031328678131, 0.3957735300064087, 0.38966935873031616, 0.3878820836544037, 0.38255569338798523, 0.3852775990962982, 0.37936335802078247, 0.37413060665130615, 0.3775638937950134, 0.37076494097709656, 0.3729037344455719, 0.3686078190803528, 0.3678555190563202, 0.3632717430591583, 0.3632460832595825, 0.3607213497161865, 0.35609790682792664, 0.35526081919670105, 0.35575422644615173, 0.3495407700538635, 0.35178205370903015, 0.3511004149913788, 0.3487841486930847, 0.3491160571575165, 0.34686657786369324, 0.34366706013679504], "val_accuracy": [0.5106666684150696, 0.6503333449363708, 0.6796666383743286, 0.7046666741371155, 0.7253333330154419, 0.746666669845581, 0.7590000033378601, 0.7683333158493042, 0.7863333225250244, 0.7919999957084656, 0.8046666383743286, 0.8059999942779541, 0.8136666417121887, 0.8180000185966492, 0.8216666579246521, 0.8293333053588867, 0.8330000042915344, 0.8333333134651184, 0.8330000042915344, 0.8410000205039978, 0.8446666598320007, 0.8443333506584167, 0.8433333039283752, 0.8503333330154419, 0.843666672706604, 0.8503333330154419, 0.8523333072662354, 0.8529999852180481, 0.8526666760444641, 0.8536666631698608, 0.8579999804496765, 0.862333357334137, 0.8616666793823242, 0.8633333444595337, 0.859333336353302, 0.8610000014305115, 0.8613333106040955, 0.8646666407585144, 0.8650000095367432, 0.8676666617393494, 0.8679999709129333, 0.8683333396911621, 0.8679999709129333, 0.8679999709129333, 0.8656666874885559, 0.8676666617393494, 0.8709999918937683, 0.8709999918937683, 0.8730000257492065, 0.871999979019165, 0.871999979019165, 0.8759999871253967, 0.871999979019165, 0.8723333477973938, 0.8733333349227905, 0.8756666779518127, 0.8759999871253967]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8522857427597046, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2937521934509277, 2.188750982284546, 1.7665057182312012, 1.347316026687622, 1.0865252017974854, 0.9212501645088196, 0.8636131882667542, 0.8137792348861694, 0.7691713571548462, 0.7390456199645996, 0.7016226649284363, 0.6829201579093933, 0.6504760384559631, 0.6224837303161621, 0.6048668026924133, 0.5910599231719971, 0.5813644528388977, 0.5616971254348755, 0.5553866028785706, 0.5469475984573364, 0.5237089395523071, 0.5151590704917908, 0.5215660333633423, 0.5008252859115601, 0.5009986758232117, 0.4944736063480377, 0.48070356249809265, 0.463029682636261, 0.46594691276550293, 0.4518895149230957, 0.4470142722129822, 0.440156489610672, 0.4242275357246399, 0.41699039936065674, 0.41197043657302856, 0.39695465564727783, 0.39536434412002563, 0.39304107427597046, 0.3832292854785919, 0.38718631863594055, 0.37543150782585144, 0.37056466937065125, 0.3583528995513916, 0.36819976568222046, 0.3576786518096924, 0.3370579779148102, 0.3334558606147766, 0.32456934452056885, 0.31888818740844727, 0.31620749831199646, 0.31357836723327637, 0.3056585490703583, 0.3131123483181], "accuracy": [0.13274335861206055, 0.33562275767326355, 0.4451195299625397, 0.5532954931259155, 0.6310923099517822, 0.6625280380249023, 0.6876237988471985, 0.7059833407402039, 0.7008321285247803, 0.7193237543106079, 0.7305507659912109, 0.7372870445251465, 0.7530049085617065, 0.7573636174201965, 0.7635715007781982, 0.7755910754203796, 0.7749306559562683, 0.7864218950271606, 0.7890635132789612, 0.7926297783851624, 0.7997622489929199, 0.800818920135498, 0.8075551390647888, 0.8103289008140564, 0.8082155585289001, 0.8100647330284119, 0.8177255392074585, 0.8247259259223938, 0.8261788487434387, 0.8310658931732178, 0.828820526599884, 0.8350284099578857, 0.8404437899589539, 0.843481719493866, 0.846387505531311, 0.8508783578872681, 0.850350022315979, 0.8518029451370239, 0.8539162874221802, 0.8537842035293579, 0.8521991968154907, 0.8602562546730042, 0.8643507957458496, 0.8636903762817383, 0.8619733452796936, 0.8712190985679626, 0.8709549307823181, 0.874389111995697, 0.8792761564254761, 0.8750495314598083, 0.8762382864952087, 0.8761062026023865, 0.8799365758895874], "val_loss": [2.246936798095703, 2.0232627391815186, 1.1457257270812988, 0.9052380919456482, 0.8017052412033081, 0.7349826097488403, 0.6998469829559326, 0.6747022867202759, 0.6483424305915833, 0.6228731274604797, 0.5947391986846924, 0.5785520076751709, 0.5564766526222229, 0.5340608954429626, 0.5396179556846619, 0.5283957719802856, 0.5185482501983643, 0.5138708353042603, 0.5115275979042053, 0.5004684329032898, 0.48580119013786316, 0.4840725064277649, 0.48175492882728577, 0.4734792411327362, 0.4612102508544922, 0.45782458782196045, 0.45246902108192444, 0.45038050413131714, 0.43974724411964417, 0.4322168231010437, 0.42603421211242676, 0.4184092581272125, 0.42447802424430847, 0.41878262162208557, 0.4058527946472168, 0.4062405526638031, 0.40877246856689453, 0.40456894040107727, 0.40166836977005005, 0.4094049036502838, 0.4021875858306885, 0.40911245346069336, 0.42746981978416443, 0.4196507930755615, 0.41388216614723206, 0.41414713859558105, 0.40478312969207764, 0.40158817172050476, 0.39678865671157837, 0.3874633312225342, 0.39271679520606995, 0.41262248158454895, 0.4227294623851776], "val_accuracy": [0.4309999942779541, 0.4716666638851166, 0.6346666812896729, 0.6863333582878113, 0.7026666402816772, 0.7256666421890259, 0.7286666631698608, 0.7516666650772095, 0.7436666488647461, 0.7673333287239075, 0.7586666941642761, 0.7716666460037231, 0.781000018119812, 0.7933333516120911, 0.7853333353996277, 0.7979999780654907, 0.7979999780654907, 0.8016666769981384, 0.7963333129882812, 0.8073333501815796, 0.8183333277702332, 0.8166666626930237, 0.8163333535194397, 0.8143333196640015, 0.8176666498184204, 0.8233333230018616, 0.8349999785423279, 0.831333339214325, 0.8399999737739563, 0.8339999914169312, 0.8410000205039978, 0.8503333330154419, 0.8479999899864197, 0.8546666502952576, 0.8556666374206543, 0.8500000238418579, 0.8519999980926514, 0.8556666374206543, 0.8539999723434448, 0.8566666841506958, 0.8603333234786987, 0.8576666712760925, 0.8556666374206543, 0.8586666584014893, 0.8583333492279053, 0.862666666507721, 0.8706666827201843, 0.871999979019165, 0.8703333139419556, 0.8659999966621399, 0.8673333525657654, 0.8676666617393494, 0.8633333444595337]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 4, 4, 2, 9, 9, 4, 1], [0, 2, 4, 0], [0, 5, 47, 24], [1], [0], [2], [0]], "fitness": -0.8288571238517761, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), beta)), tf.math.subtract(grad, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5152875185012817, 0.7778941988945007, 0.6646813154220581, 0.588945209980011, 0.5424228310585022, 0.5108298659324646, 0.49681589007377625, 0.4989478886127472, 0.4792909324169159, 0.48203933238983154, 0.43595537543296814, 0.43540939688682556, 0.43480122089385986, 0.44315460324287415, 0.4357739984989166, 0.43266862630844116, 0.42629873752593994, 0.46041539311408997, 0.4859357476234436, 0.4881531298160553, 0.48747190833091736, 0.4635431468486786], "accuracy": [0.49148064851760864, 0.7234182953834534, 0.7593448758125305, 0.7816668748855591, 0.7969884872436523, 0.8113855719566345, 0.8171972036361694, 0.8245938420295715, 0.8191784620285034, 0.8341038227081299, 0.8396512866020203, 0.8459912538528442, 0.8403117060661316, 0.8471800088882446, 0.8379341959953308, 0.8444063067436218, 0.848368763923645, 0.8446704745292664, 0.8334434032440186, 0.8499537706375122, 0.8374059200286865, 0.8374059200286865], "val_loss": [0.7860300540924072, 0.6074866652488708, 0.5216204524040222, 0.4867089092731476, 0.47985944151878357, 0.453257292509079, 0.46469125151634216, 0.4520131051540375, 0.4584980905056, 0.4785943925380707, 0.5107263326644897, 0.49899759888648987, 0.4933595061302185, 0.4679919481277466, 0.5107648968696594, 0.47908511757850647, 0.5361543893814087, 0.49040377140045166, 0.5061770081520081, 0.5624630451202393, 0.5148934125900269, 0.5720997452735901], "val_accuracy": [0.734000027179718, 0.7789999842643738, 0.8103333115577698, 0.824999988079071, 0.8233333230018616, 0.8230000138282776, 0.8366666436195374, 0.8379999995231628, 0.8370000123977661, 0.8423333168029785, 0.846666693687439, 0.8486666679382324, 0.8450000286102295, 0.8550000190734863, 0.8496666550636292, 0.8396666646003723, 0.8586666584014893, 0.8393333554267883, 0.8516666889190674, 0.8399999737739563, 0.8410000205039978, 0.8526666760444641]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 12, 8, 4, 4, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 3, 1, 3], [0, 1, 0, 2, 1], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9], [0], [54, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 1, 4, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 2, 0, 0, 3, 1, 3, 0], [16, 99, 74, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 2, 2, 0, 1, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), beta))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(sigma), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.706830768722922e+26, 2.311805248260498, 2.3135344982147217, 2.3152239322662354, 2.317007541656494, 2.318997383117676], "accuracy": [0.08717474341392517, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.310692310333252, 2.31247615814209, 2.314110279083252, 2.3158092498779297, 2.3176708221435547, 2.319706916809082], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3], [0, 0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 5, 3, 1, 4, 3, 9, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 67, 0], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [9, 5, 1, 5, 1, 2, 1, 0, 8], [2, 4, 0, 5, 1, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 7, 4, 3, 2, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3031067848205566, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 2, 3, 2, 3], [0, 1, 0, 2], [39, 20], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 5, 2, 2, 8], [0, 0, 0, 3, 0, 2, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.add(beta, sigma)), alpha)", "other_info": {"loss": [2.3591182231903076, 3.797405958175659, 10.947591781616211, 29.05129623413086, 65.64010620117188, 134.5832061767578], "accuracy": [0.09377889335155487, 0.09945846349000931, 0.10593052208423615, 0.09760929644107819, 0.10315678268671036, 0.10249637067317963], "val_loss": [2.4635276794433594, 5.198797702789307, 15.013079643249512, 36.37385559082031, 76.8893051147461, 147.88104248046875], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 0, 1, 0, 2], [39, 39, 43], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 4, 3, 0, 3, 9, 2], [0, 1, 4, 0], [16, 16, 18], [0, 1], [0], [0], [0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 7, 5, 9, 3, 2], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0, 52, 99]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 11, 7, 4, 3, 2, 1, 1, 1, 6, 5, 1, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha)), tf.math.add(grad, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3031601905822754, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}]