[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8791428804397583, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224691152572632, 1.8683772087097168, 1.4013793468475342, 1.0939387083053589, 0.9551045894622803, 0.8530007004737854, 0.779485821723938, 0.7457146048545837, 0.7030880451202393, 0.6819782257080078, 0.646918535232544, 0.6262496709823608, 0.5985910296440125, 0.5927533507347107, 0.5734840035438538, 0.5512962341308594, 0.5397131443023682, 0.5306671261787415, 0.5227266550064087, 0.5091748833656311, 0.493897944688797, 0.4855693578720093, 0.4755500555038452, 0.46436217427253723, 0.4576524496078491, 0.4496408700942993, 0.4397708475589752, 0.4444425106048584, 0.4241836667060852, 0.43109697103500366, 0.4217256009578705, 0.40949341654777527, 0.40209436416625977, 0.40443363785743713, 0.39794257283210754, 0.3834945559501648, 0.3769911527633667, 0.3764527142047882, 0.3669157326221466, 0.37186846137046814, 0.36375153064727783, 0.35602423548698425, 0.3509747087955475, 0.3444776237010956, 0.3358671963214874, 0.32751885056495667, 0.33768701553344727, 0.3213590085506439, 0.3252784311771393, 0.32559001445770264, 0.3185674250125885, 0.3153201639652252, 0.30147793889045715, 0.30520761013031006, 0.2942403256893158, 0.29585933685302734, 0.29156526923179626, 0.28494489192962646, 0.2864094078540802, 0.2840997576713562, 0.28428274393081665, 0.27462372183799744, 0.2701452672481537, 0.26235172152519226, 0.26258987188339233, 0.25485068559646606, 0.25275006890296936, 0.2532438039779663, 0.25031259655952454, 0.24532482028007507, 0.2331540286540985, 0.2390974760055542, 0.23482851684093475, 0.23101423680782318, 0.22753727436065674, 0.22632567584514618], "accuracy": [0.25941091775894165, 0.4893673360347748, 0.55791836977005, 0.6210539937019348, 0.6567164063453674, 0.6983225345611572, 0.7206445932388306, 0.7283053994178772, 0.7486461400985718, 0.7526086568832397, 0.7619865536689758, 0.7676661014556885, 0.7792893648147583, 0.7816668748855591, 0.7922335267066956, 0.7997622489929199, 0.8053097128868103, 0.8055738806724548, 0.8107251524925232, 0.8133667707443237, 0.8222163319587708, 0.8226125836372375, 0.8300092220306396, 0.8327829837799072, 0.8310658931732178, 0.844010055065155, 0.8417646288871765, 0.8400475382804871, 0.846387505531311, 0.845859169960022, 0.8498216867446899, 0.8511425256729126, 0.8581429123878479, 0.8519350290298462, 0.8560295701026917, 0.8639545440673828, 0.8640866279602051, 0.8636903762817383, 0.8676528930664062, 0.8632941246032715, 0.86553955078125, 0.8687095642089844, 0.8733324408531189, 0.8751816153526306, 0.8776912093162537, 0.8792761564254761, 0.8746532797813416, 0.8809932470321655, 0.8815215826034546, 0.8833707571029663, 0.8837670087814331, 0.8850878477096558, 0.8930128216743469, 0.8902390599250793, 0.8947299122810364, 0.8943336606025696, 0.891559898853302, 0.8963148593902588, 0.89552241563797, 0.8947299122810364, 0.895918607711792, 0.8989565372467041, 0.9046360850334167, 0.9054285883903503, 0.9002773761749268, 0.9064852595329285, 0.9074098467826843, 0.9099194407463074, 0.9104477763175964, 0.915070652961731, 0.9157310724258423, 0.9129573106765747, 0.9148064851760864, 0.9124290347099304, 0.9171839952468872, 0.9171839952468872], "val_loss": [2.038526773452759, 1.510238766670227, 1.0447747707366943, 0.8352280259132385, 0.7531793713569641, 0.6963355541229248, 0.6498194932937622, 0.6246073842048645, 0.5953369736671448, 0.5716328024864197, 0.5562007427215576, 0.5438976287841797, 0.5279420018196106, 0.51389080286026, 0.5057971477508545, 0.49414271116256714, 0.482173353433609, 0.47447696328163147, 0.46831631660461426, 0.4581488370895386, 0.4518188536167145, 0.4512670934200287, 0.4456486403942108, 0.43329060077667236, 0.43261417746543884, 0.4205039143562317, 0.4206644594669342, 0.413736492395401, 0.4104427099227905, 0.40436092019081116, 0.4019021689891815, 0.401526540517807, 0.3927256762981415, 0.39569756388664246, 0.388218492269516, 0.39298149943351746, 0.3826553523540497, 0.3818466365337372, 0.3840924799442291, 0.3762838542461395, 0.3779735565185547, 0.3782140612602234, 0.3694102466106415, 0.3699958026409149, 0.36511310935020447, 0.366933137178421, 0.36473965644836426, 0.3623674213886261, 0.35939449071884155, 0.35847315192222595, 0.3595349192619324, 0.35298311710357666, 0.3535289168357849, 0.35462313890457153, 0.35054683685302734, 0.34882593154907227, 0.3493621349334717, 0.3531535565853119, 0.34503549337387085, 0.34384992718696594, 0.3448854088783264, 0.34570378065109253, 0.34537023305892944, 0.34840068221092224, 0.34696924686431885, 0.3487513065338135, 0.33932241797447205, 0.3398410975933075, 0.33569568395614624, 0.33905473351478577, 0.34274718165397644, 0.34127065539360046, 0.33783894777297974, 0.34692227840423584, 0.35144636034965515, 0.33920830488204956], "val_accuracy": [0.5683333277702332, 0.6576666831970215, 0.6836666464805603, 0.7106666564941406, 0.7303333282470703, 0.746666669845581, 0.7596666812896729, 0.7696666717529297, 0.7720000147819519, 0.7870000004768372, 0.7943333387374878, 0.800000011920929, 0.8013333082199097, 0.8119999766349792, 0.8103333115577698, 0.8133333325386047, 0.8209999799728394, 0.8266666531562805, 0.8293333053588867, 0.8296666741371155, 0.831333339214325, 0.8373333215713501, 0.8320000171661377, 0.8396666646003723, 0.8389999866485596, 0.8483333587646484, 0.8433333039283752, 0.8503333330154419, 0.8510000109672546, 0.8523333072662354, 0.8506666421890259, 0.8529999852180481, 0.8543333411216736, 0.8569999933242798, 0.8603333234786987, 0.8576666712760925, 0.859333336353302, 0.8576666712760925, 0.8550000190734863, 0.8643333315849304, 0.859666645526886, 0.8619999885559082, 0.8683333396911621, 0.8663333058357239, 0.8686666488647461, 0.8650000095367432, 0.8663333058357239, 0.8693333268165588, 0.8700000047683716, 0.8709999918937683, 0.8723333477973938, 0.8730000257492065, 0.875, 0.871999979019165, 0.8726666569709778, 0.875, 0.8759999871253967, 0.8723333477973938, 0.8763333559036255, 0.8743333220481873, 0.875, 0.8776666522026062, 0.875, 0.8756666779518127, 0.8759999871253967, 0.8763333559036255, 0.8796666860580444, 0.8806666731834412, 0.8769999742507935, 0.8790000081062317, 0.8840000033378601, 0.8790000081062317, 0.8796666860580444, 0.878333330154419, 0.878000020980835, 0.8816666603088379]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8611428737640381, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2240989208221436, 1.8678849935531616, 1.380955696105957, 1.0832808017730713, 0.9213612675666809, 0.8209328055381775, 0.7601631879806519, 0.7144951224327087, 0.6762824654579163, 0.6451776623725891, 0.6232603192329407, 0.6039223670959473, 0.5778208374977112, 0.5731361508369446, 0.5456739068031311, 0.5359078049659729, 0.5188824534416199, 0.5073994994163513, 0.5036535859107971, 0.485074907541275, 0.4745253920555115, 0.4622223675251007, 0.4534429907798767, 0.45303407311439514, 0.4360482096672058, 0.43329399824142456, 0.4217801094055176, 0.40664833784103394, 0.4090301990509033, 0.40185123682022095, 0.40266701579093933, 0.3933666944503784, 0.3868963122367859, 0.3832830488681793, 0.36672887206077576, 0.36484000086784363, 0.35875174403190613, 0.353344202041626, 0.3476865887641907, 0.3463154137134552, 0.3401843309402466, 0.32946524024009705, 0.33943891525268555, 0.3248966336250305, 0.3172527551651001, 0.30925291776657104, 0.3135731816291809, 0.30313169956207275, 0.29827338457107544, 0.2948622405529022, 0.2910076379776001, 0.2863016426563263, 0.2848009169101715, 0.2807895839214325, 0.28341853618621826, 0.2754792273044586, 0.2740556299686432, 0.2664541006088257, 0.2635023891925812, 0.2571236491203308, 0.25267618894577026, 0.25127676129341125, 0.24380844831466675, 0.2407262623310089, 0.24408915638923645, 0.2303626537322998, 0.23525916039943695, 0.23049627244472504, 0.23137125372886658], "accuracy": [0.2755250334739685, 0.48514068126678467, 0.5775987505912781, 0.6235635876655579, 0.6700568199157715, 0.7058512568473816, 0.7308149337768555, 0.7504953145980835, 0.7586844563484192, 0.7705719470977783, 0.7795535326004028, 0.7840443849563599, 0.7918372750282288, 0.7932901978492737, 0.8084797263145447, 0.8076872229576111, 0.8202351331710815, 0.8232730031013489, 0.8195747137069702, 0.8253863453865051, 0.8355567455291748, 0.8366134166717529, 0.8392550349235535, 0.8391229510307312, 0.8486329317092896, 0.8473120927810669, 0.8498216867446899, 0.8577466607093811, 0.8561616539955139, 0.8570862412452698, 0.8603883385658264, 0.8619733452796936, 0.86553955078125, 0.8661999702453613, 0.8728041052818298, 0.8704266548156738, 0.8710870146751404, 0.8729361891746521, 0.8754457831382751, 0.8761062026023865, 0.878351628780365, 0.8837670087814331, 0.8812574148178101, 0.8864086866378784, 0.8886540532112122, 0.8893144726753235, 0.887201189994812, 0.8926165699958801, 0.8951261639595032, 0.8912957310676575, 0.895918607711792, 0.8969752788543701, 0.8986923694610596, 0.9001452922821045, 0.8988244533538818, 0.9056927561759949, 0.9041078090667725, 0.9033153057098389, 0.9015982151031494, 0.9052965044975281, 0.9064852595329285, 0.908730685710907, 0.9148064851760864, 0.9129573106765747, 0.9132214784622192, 0.9183727502822876, 0.9163914918899536, 0.9170519113540649, 0.919561505317688], "val_loss": [2.040004253387451, 1.5141257047653198, 1.0350964069366455, 0.8330023884773254, 0.7483787536621094, 0.6948027610778809, 0.648832380771637, 0.6117070913314819, 0.5869600176811218, 0.5644035339355469, 0.5470451712608337, 0.5319220423698425, 0.5212143659591675, 0.5034016370773315, 0.4941309094429016, 0.48378682136535645, 0.47391200065612793, 0.4686853289604187, 0.4586082696914673, 0.45179277658462524, 0.45407286286354065, 0.44037458300590515, 0.4369991421699524, 0.42826688289642334, 0.42445191740989685, 0.42573145031929016, 0.41304442286491394, 0.41617870330810547, 0.4113205671310425, 0.4066026210784912, 0.4045179784297943, 0.394796222448349, 0.3962673246860504, 0.39313021302223206, 0.3909474313259125, 0.387119859457016, 0.38588064908981323, 0.38028255105018616, 0.3799345791339874, 0.3839830756187439, 0.38057270646095276, 0.3750842809677124, 0.3701126277446747, 0.36874279379844666, 0.3715267777442932, 0.36607301235198975, 0.36658480763435364, 0.3678570091724396, 0.36487647891044617, 0.3617190420627594, 0.3627074360847473, 0.3610043227672577, 0.3608280420303345, 0.3636065125465393, 0.3523966073989868, 0.3577679991722107, 0.3505745530128479, 0.35280540585517883, 0.35283151268959045, 0.3512307107448578, 0.34988483786582947, 0.3453304171562195, 0.35473284125328064, 0.34911566972732544, 0.34912022948265076, 0.3520945608615875, 0.3460836708545685, 0.3498801589012146, 0.34767863154411316], "val_accuracy": [0.5383333563804626, 0.6620000004768372, 0.6863333582878113, 0.7056666612625122, 0.7310000061988831, 0.7440000176429749, 0.7506666779518127, 0.7670000195503235, 0.7773333191871643, 0.7846666574478149, 0.7950000166893005, 0.8006666898727417, 0.8059999942779541, 0.8140000104904175, 0.8263333439826965, 0.8286666870117188, 0.8349999785423279, 0.8293333053588867, 0.8353333473205566, 0.8379999995231628, 0.8346666693687439, 0.8399999737739563, 0.8423333168029785, 0.8479999899864197, 0.8476666808128357, 0.8453333377838135, 0.8546666502952576, 0.8513333201408386, 0.8536666631698608, 0.859000027179718, 0.8539999723434448, 0.859333336353302, 0.8603333234786987, 0.8600000143051147, 0.859333336353302, 0.8603333234786987, 0.8633333444595337, 0.8690000176429749, 0.8696666955947876, 0.8606666922569275, 0.8676666617393494, 0.8656666874885559, 0.8696666955947876, 0.871999979019165, 0.8693333268165588, 0.8730000257492065, 0.8733333349227905, 0.8700000047683716, 0.874666690826416, 0.874666690826416, 0.8723333477973938, 0.8733333349227905, 0.875, 0.8676666617393494, 0.8759999871253967, 0.874666690826416, 0.8763333559036255, 0.8766666650772095, 0.8790000081062317, 0.8786666393280029, 0.878000020980835, 0.8790000081062317, 0.8790000081062317, 0.8803333044052124, 0.878333330154419, 0.8790000081062317, 0.878333330154419, 0.8776666522026062, 0.875333309173584]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 3, 4, 6, 1, 2, 4, 2, 2, 6, 2, 4, 5, 7, 9, 0, 6, 5, 2], [0, 7, 2, 7, 4, 7, 4, 4, 7, 7, 3, 4, 7, 3], [0, 9], [0, 1], [0], [1], [0]], "fitness": -0.8417142629623413, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(grad, tf.math.subtract(beta, tf.math.add(tf.math.pow(grad, grad), tf.math.add(tf.math.add(tf.math.divide_no_nan(grad, grad), tf.math.add(tf.math.pow(tf.math.square(grad), tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(grad, tf.math.square(grad))))), sigma)), tf.math.add(grad, grad))))), sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2929041385650635, 2.1904795169830322, 1.7632890939712524, 1.3181904554367065, 1.0891427993774414, 0.8864427804946899, 0.8342626690864563, 0.8110889792442322, 0.7482046484947205, 0.7237154841423035, 0.6953897476196289, 0.6567315459251404, 0.6350637078285217, 0.612884521484375, 0.598827600479126, 0.5647346377372742, 0.5560493469238281, 0.5387834906578064, 0.5277045965194702, 0.5316627025604248, 0.5193055272102356, 0.507483959197998, 0.4922097623348236, 0.4844025671482086, 0.4803936779499054, 0.4580158293247223, 0.45549848675727844, 0.4390266537666321, 0.43131259083747864, 0.4212864339351654, 0.41727301478385925, 0.4222366213798523, 0.4084877371788025, 0.39159828424453735, 0.39058178663253784, 0.39060497283935547, 0.3742995858192444, 0.37374940514564514, 0.3673649728298187, 0.3510184586048126], "accuracy": [0.1298375427722931, 0.33060362935066223, 0.44828951358795166, 0.544181764125824, 0.6392814517021179, 0.6785101294517517, 0.6989829540252686, 0.7129837274551392, 0.7113987803459167, 0.7232862114906311, 0.7388719916343689, 0.748249888420105, 0.759080708026886, 0.7623828053474426, 0.769911527633667, 0.785629391670227, 0.7882710099220276, 0.7956677079200745, 0.7994980812072754, 0.7854973077774048, 0.7971205711364746, 0.8095363974571228, 0.8117818236351013, 0.811649739742279, 0.8181217908859253, 0.8220842480659485, 0.8212917447090149, 0.8256505131721497, 0.8318583965301514, 0.8374059200286865, 0.8428213000297546, 0.8400475382804871, 0.841500461101532, 0.848368763923645, 0.8535200357437134, 0.8514066934585571, 0.8585391640663147, 0.8533879518508911, 0.8514066934585571, 0.8618412613868713], "val_loss": [2.246656656265259, 2.0198421478271484, 1.1382237672805786, 0.9016295671463013, 0.7516796588897705, 0.7195400595664978, 0.6654586791992188, 0.6443625688552856, 0.6293271780014038, 0.594678521156311, 0.5523478388786316, 0.5320658087730408, 0.5216434001922607, 0.5211787223815918, 0.5084420442581177, 0.4902682602405548, 0.487203449010849, 0.4954976439476013, 0.49091747403144836, 0.49025022983551025, 0.484131395816803, 0.47059595584869385, 0.46104711294174194, 0.45752352476119995, 0.4553772807121277, 0.43958911299705505, 0.43229609727859497, 0.42930111289024353, 0.42722004652023315, 0.4166622757911682, 0.4200238585472107, 0.4268176257610321, 0.4012160301208496, 0.4004330337047577, 0.402610719203949, 0.4166998267173767, 0.40175849199295044, 0.3973691463470459, 0.40082481503486633, 0.40400174260139465], "val_accuracy": [0.43299999833106995, 0.4776666760444641, 0.6503333449363708, 0.6926666498184204, 0.7243333458900452, 0.7326666712760925, 0.7509999871253967, 0.765333354473114, 0.762333333492279, 0.7753333449363708, 0.7876666784286499, 0.7923333048820496, 0.8023333549499512, 0.8019999861717224, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8176666498184204, 0.8169999718666077, 0.8169999718666077, 0.8176666498184204, 0.8296666741371155, 0.8286666870117188, 0.831333339214325, 0.8379999995231628, 0.8379999995231628, 0.8349999785423279, 0.8413333296775818, 0.8410000205039978, 0.8423333168029785, 0.8483333587646484, 0.8460000157356262, 0.8500000238418579, 0.8536666631698608, 0.8586666584014893, 0.8586666584014893, 0.8579999804496765, 0.8566666841506958, 0.8556666374206543, 0.8583333492279053]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 33, 19, 14, 2, 2, 1, 1, 0], "tree_depth": 31}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 6], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8325714468955994, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.775083065032959, 0.9555253386497498, 0.7747370600700378, 0.6885042190551758, 0.6530296802520752, 0.5986031293869019, 0.5903228521347046, 0.5720685124397278, 0.5337828397750854, 0.5081892013549805, 0.4925435185432434, 0.4866909384727478, 0.48654618859291077, 0.48231688141822815, 0.4967101216316223, 0.49777743220329285, 0.5142659544944763, 0.5551887154579163, 0.5152508616447449], "accuracy": [0.44525161385536194, 0.6804913282394409, 0.7320036888122559, 0.7471932172775269, 0.7633073329925537, 0.7794214487075806, 0.7872143983840942, 0.7924976944923401, 0.7993659973144531, 0.816008448600769, 0.8185180425643921, 0.8204993009567261, 0.8207634687423706, 0.8203672170639038, 0.828820526599884, 0.8265751004219055, 0.8158763647079468, 0.8086118102073669, 0.8305375576019287], "val_loss": [0.9701311588287354, 0.6796948313713074, 0.5911710858345032, 0.5492296814918518, 0.5186824798583984, 0.48903703689575195, 0.5038669109344482, 0.4605129361152649, 0.46047142148017883, 0.4836515784263611, 0.4430730938911438, 0.46805858612060547, 0.47394615411758423, 0.4571559727191925, 0.4470699727535248, 0.46925464272499084, 0.48416370153427124, 0.49140965938568115, 0.46399450302124023], "val_accuracy": [0.6439999938011169, 0.7576666474342346, 0.7746666669845581, 0.7946666479110718, 0.8006666898727417, 0.8296666741371155, 0.8090000152587891, 0.8323333263397217, 0.8339999914169312, 0.8386666774749756, 0.8296666741371155, 0.8383333086967468, 0.8386666774749756, 0.8503333330154419, 0.8426666855812073, 0.8259999752044678, 0.8306666612625122, 0.8353333473205566, 0.8353333473205566]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 6, 3, 5, 2, 8, 1, 5, 1, 4, 0, 1, 6, 1, 0, 6, 1, 6, 6, 9, 6, 5, 9, 5], [0, 3, 0, 3, 5, 2, 0, 1, 0, 1, 4, 0, 3, 2, 1], [16, 16, 18, 85, 28, 67, 21], [0, 1], [0], [0], [99], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 9, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 16, 99, 61, 86]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.square(tf.math.subtract(grad, tf.math.pow(tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.math.subtract(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), alpha), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), alpha))), tf.math.divide_no_nan(grad, tf.math.square(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), grad))), tf.math.square(beta))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303474187850952, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}, "mapping_values": [1, 9, 5, 4, 2, 41, 26, 15, 7, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 38}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 9, 0, 3], [0, 1, 0, 2], [39, 60], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [98], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 3, 1, 4, 2, 8], [0, 2, 0, 3, 0, 0, 3, 1, 2, 4], [57, 99, 87, 83, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 4, 1, 2, 7, 4, 3, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), sigma), alpha))))", "other_info": {"loss": [2.303603172302246, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09694888442754745, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025848865509033, 2.3025848865509033, 2.3025848865509033, 2.3025848865509033, 2.3025848865509033, 2.3025848865509033], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 3, 0, 3, 8], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 1, 5, 6, 8, 5, 6, 7, 1, 0, 4, 4, 6, 5], [0, 2, 0, 3, 5, 2, 2, 3, 0, 5, 0, 4], [5, 16, 50, 17], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 2, 1, 0, 1, 4, 2, 8, 8, 0, 8, 7, 3, 0, 3, 0, 1, 4], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0, 0, 2, 2, 0, 1], [16, 99, 96, 99, 61, 1, 43]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(tf.math.divide_no_nan(grad, beta))), tf.math.add(tf.math.subtract(beta, tf.math.negative(tf.math.pow(grad, tf.math.pow(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.square(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))))), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.subtract(tf.math.pow(tf.math.add(grad, tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.negative(sigma))), alpha)), tf.math.sqrt(tf.math.add(tf.math.multiply(beta, tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.negative(beta), tf.math.subtract(tf.math.pow(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}, "mapping_values": [1, 10, 6, 4, 1, 31, 19, 12, 4, 2, 1, 1, 1, 36, 21, 15, 7], "tree_depth": 26}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [8, 2, 3, 0, 3, 5, 1], [0, 2, 3, 3, 4], [16, 16], [0, 1], [0], [0], [50], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [6, 3, 5, 2, 8, 1, 4, 1, 4, 0, 8, 1, 3], [0, 1, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 11, 99, 56, 65]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 12, 7, 5, 1, 2, 1, 1, 1, 23, 13, 10, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.subtract(grad, grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.multiply(sigma, alpha), beta)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]