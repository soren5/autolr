[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8619999885559082, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223327875137329, 1.8616642951965332, 1.3859893083572388, 1.092727541923523, 0.9364179372787476, 0.8425022959709167, 0.761676549911499, 0.7322495579719543, 0.6881930232048035, 0.656596839427948, 0.626211941242218, 0.6045268177986145, 0.5843712091445923, 0.5681134462356567, 0.5544294714927673, 0.5410453081130981, 0.5158466696739197, 0.5117023587226868, 0.49724602699279785, 0.4946969449520111, 0.47933417558670044, 0.46613243222236633, 0.4617602825164795, 0.4507021903991699, 0.4461413025856018, 0.43985459208488464, 0.4336901605129242, 0.42264190316200256, 0.4162636399269104, 0.40308570861816406, 0.40607962012290955, 0.39162325859069824, 0.3814467787742615, 0.3777776062488556, 0.3789673447608948, 0.37216585874557495, 0.35906368494033813, 0.35471752285957336, 0.35032400488853455, 0.3572344481945038, 0.34077218174934387, 0.34451594948768616, 0.3364398181438446, 0.3335561454296112, 0.3241410255432129, 0.3197537958621979, 0.31778228282928467, 0.31054624915122986, 0.3071490228176117, 0.30364668369293213, 0.29883575439453125, 0.2943522036075592, 0.2869844138622284, 0.285869300365448, 0.2822924554347992], "accuracy": [0.26720380783081055, 0.4950468838214874, 0.5601637959480286, 0.6206578016281128, 0.6590939164161682, 0.6977941989898682, 0.7301545143127441, 0.739400327205658, 0.7530049085617065, 0.757099449634552, 0.7689869403839111, 0.7840443849563599, 0.7898560166358948, 0.7942147850990295, 0.7955356240272522, 0.8055738806724548, 0.8178576231002808, 0.8140271902084351, 0.8231409192085266, 0.8208954930305481, 0.8267071843147278, 0.8383304476737976, 0.839519202709198, 0.8387266993522644, 0.8412362933158875, 0.8469158411026001, 0.8438779711723328, 0.8492933511734009, 0.8516708612442017, 0.8589354157447815, 0.8490291833877563, 0.8603883385658264, 0.8642187118530273, 0.8646149635314941, 0.8636903762817383, 0.8661999702453613, 0.8716153502464294, 0.8722757697105408, 0.8742570281028748, 0.8721436858177185, 0.880729079246521, 0.8746532797813416, 0.8790120482444763, 0.8759741187095642, 0.8848236799240112, 0.8819178342819214, 0.8833707571029663, 0.886672854423523, 0.8856161832809448, 0.8887861371040344, 0.8919561505317688, 0.8939374089241028, 0.894069492816925, 0.895918607711792, 0.8968431949615479], "val_loss": [2.0422933101654053, 1.514488935470581, 1.0471866130828857, 0.8384514451026917, 0.7459044456481934, 0.6875725388526917, 0.6441817879676819, 0.6120193600654602, 0.5825603604316711, 0.5598942041397095, 0.5491514801979065, 0.5261071920394897, 0.5089073777198792, 0.5020284652709961, 0.4858897626399994, 0.47328177094459534, 0.4672502875328064, 0.45841503143310547, 0.451221764087677, 0.44094109535217285, 0.4395882189273834, 0.429446816444397, 0.4257102310657501, 0.420452356338501, 0.4157025218009949, 0.4177285134792328, 0.4029482305049896, 0.40223681926727295, 0.39705273509025574, 0.39318904280662537, 0.38858866691589355, 0.38484326004981995, 0.3811340630054474, 0.379673570394516, 0.3825148046016693, 0.3759106397628784, 0.3675737977027893, 0.3681226372718811, 0.36668041348457336, 0.3612900674343109, 0.3638893961906433, 0.36066684126853943, 0.3548150956630707, 0.3565090596675873, 0.35474225878715515, 0.35510799288749695, 0.355264812707901, 0.34662893414497375, 0.34765204787254333, 0.3463183641433716, 0.34151843190193176, 0.3455987870693207, 0.34464356303215027, 0.3389011323451996, 0.33834734559059143], "val_accuracy": [0.5346666574478149, 0.6510000228881836, 0.6840000152587891, 0.7126666903495789, 0.7293333411216736, 0.7379999756813049, 0.7609999775886536, 0.7683333158493042, 0.7833333611488342, 0.7953333258628845, 0.7879999876022339, 0.8036666512489319, 0.8100000023841858, 0.8063333630561829, 0.8209999799728394, 0.8270000219345093, 0.8303333520889282, 0.831333339214325, 0.8343333601951599, 0.8353333473205566, 0.8386666774749756, 0.8443333506584167, 0.8473333120346069, 0.8476666808128357, 0.8479999899864197, 0.8429999947547913, 0.8513333201408386, 0.8493333458900452, 0.8523333072662354, 0.8569999933242798, 0.8603333234786987, 0.8616666793823242, 0.862333357334137, 0.862666666507721, 0.862666666507721, 0.859333336353302, 0.8646666407585144, 0.8676666617393494, 0.8666666746139526, 0.8700000047683716, 0.8673333525657654, 0.8703333139419556, 0.8726666569709778, 0.8686666488647461, 0.8743333220481873, 0.8700000047683716, 0.8730000257492065, 0.874666690826416, 0.8736666440963745, 0.8759999871253967, 0.8756666779518127, 0.8713333606719971, 0.8736666440963745, 0.875333309173584, 0.874666690826416]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1, 1], [0, 1], [0, 4], [0], [0, 1], [0], [1], [0]], "fitness": -0.822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933318614959717, 2.1924681663513184, 1.7754919528961182, 1.3583842515945435, 1.0793184041976929, 0.9404706358909607, 0.845530092716217, 0.7982711791992188, 0.7626966834068298, 0.737751841545105, 0.7020418643951416, 0.6785634160041809, 0.6288255453109741, 0.6259638071060181, 0.5997214913368225, 0.5962911248207092, 0.5802024006843567, 0.5654711127281189, 0.5667629241943359, 0.5525276064872742, 0.539014995098114, 0.5239542722702026, 0.5042716860771179, 0.5065904259681702, 0.49633553624153137, 0.48705223202705383, 0.46677350997924805, 0.45586109161376953, 0.4464890956878662, 0.4397330582141876, 0.4403129518032074, 0.4291084408760071, 0.4246716797351837, 0.41924071311950684, 0.40890130400657654, 0.39842087030410767, 0.3949722647666931, 0.3803160488605499, 0.3724004030227661, 0.36495351791381836, 0.34750455617904663, 0.35481810569763184, 0.3457460105419159, 0.34825459122657776, 0.35007160902023315, 0.3368642330169678, 0.3277789056301117, 0.31666767597198486, 0.30901414155960083, 0.31239354610443115], "accuracy": [0.13247919082641602, 0.32122573256492615, 0.43891164660453796, 0.5391625761985779, 0.6382247805595398, 0.6514331102371216, 0.6897371411323547, 0.7063795924186707, 0.7080966830253601, 0.7182670831680298, 0.7329282760620117, 0.7342491149902344, 0.7601373791694641, 0.7663452625274658, 0.7779685854911804, 0.7799497842788696, 0.7804781198501587, 0.7857614755630493, 0.7891955971717834, 0.793422281742096, 0.7984414100646973, 0.8092722296714783, 0.8096684813499451, 0.8117818236351013, 0.8145555257797241, 0.8164047002792358, 0.8197067975997925, 0.8257825970649719, 0.8290846943855286, 0.8338396549224854, 0.8334434032440186, 0.8370096683502197, 0.8388587832450867, 0.8400475382804871, 0.8465195894241333, 0.8491612672805786, 0.8521991968154907, 0.8519350290298462, 0.856689989566803, 0.8603883385658264, 0.8691058158874512, 0.8631620407104492, 0.8628978729248047, 0.8614450097084045, 0.8638224601745605, 0.8696341514587402, 0.8753136992454529, 0.8811253309249878, 0.8811253309249878, 0.8772949576377869], "val_loss": [2.2476253509521484, 2.0287375450134277, 1.170070767402649, 0.9256330728530884, 0.8021120429039001, 0.7532047629356384, 0.7234578728675842, 0.6728681921958923, 0.6610028743743896, 0.6333524584770203, 0.6136729121208191, 0.5829035043716431, 0.5627992153167725, 0.5597534775733948, 0.5506928563117981, 0.5310640335083008, 0.5081642866134644, 0.511160135269165, 0.4992145299911499, 0.49927636981010437, 0.48713749647140503, 0.4870772361755371, 0.47970283031463623, 0.4653798043727875, 0.4617568254470825, 0.44782909750938416, 0.4430996775627136, 0.45285090804100037, 0.44032934308052063, 0.433305948972702, 0.42135322093963623, 0.4216063618659973, 0.42814093828201294, 0.41842082142829895, 0.415070116519928, 0.4158405065536499, 0.4053598642349243, 0.4119572639465332, 0.41951775550842285, 0.41333773732185364, 0.41657495498657227, 0.40914976596832275, 0.40670886635780334, 0.412059485912323, 0.3999793231487274, 0.39730826020240784, 0.4110170602798462, 0.4054728150367737, 0.40774551033973694, 0.41603612899780273], "val_accuracy": [0.41233333945274353, 0.4493333399295807, 0.6413333415985107, 0.6669999957084656, 0.6919999718666077, 0.7236666679382324, 0.734333336353302, 0.7486666440963745, 0.7429999709129333, 0.7609999775886536, 0.768666684627533, 0.7733333110809326, 0.7820000052452087, 0.7886666655540466, 0.7910000085830688, 0.7940000295639038, 0.8080000281333923, 0.8076666593551636, 0.8040000200271606, 0.8050000071525574, 0.8146666884422302, 0.8119999766349792, 0.8136666417121887, 0.8153333067893982, 0.8216666579246521, 0.8343333601951599, 0.8393333554267883, 0.8320000171661377, 0.8399999737739563, 0.8383333086967468, 0.843999981880188, 0.8420000076293945, 0.8399999737739563, 0.8460000157356262, 0.8456666469573975, 0.8443333506584167, 0.8496666550636292, 0.8506666421890259, 0.8526666760444641, 0.8613333106040955, 0.8583333492279053, 0.859333336353302, 0.8616666793823242, 0.862666666507721, 0.8676666617393494, 0.862333357334137, 0.8600000143051147, 0.862333357334137, 0.8610000014305115, 0.8606666922569275]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 2], [0], [1], [0], [2], [0]], "fitness": -0.8205714225769043, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5767996311187744, 0.8605301976203918, 0.7370671033859253, 0.6311392784118652, 0.599584698677063, 0.5965452790260315, 0.5675321817398071, 0.5321895480155945, 0.5543462634086609, 0.5464682579040527, 0.5590373277664185, 0.5470872521400452, 0.5382353663444519, 0.5488612651824951, 0.5622988343238831, 0.5077958703041077, 0.5191835165023804, 0.5185096263885498, 0.5503622889518738, 0.5445731282234192], "accuracy": [0.4826310873031616, 0.7071720957756042, 0.7334566116333008, 0.7672698497772217, 0.7798177003860474, 0.7841764688491821, 0.7960638999938965, 0.8053097128868103, 0.8034605979919434, 0.8047813773155212, 0.8063663840293884, 0.8006868362426758, 0.8251221776008606, 0.8158763647079468, 0.7975168228149414, 0.8170651197433472, 0.813498854637146, 0.8264430165290833, 0.8129705190658569, 0.8158763647079468], "val_loss": [0.956143856048584, 0.696975827217102, 0.5725852847099304, 0.5449132323265076, 0.5674811005592346, 0.5512627959251404, 0.5219330191612244, 0.5073647499084473, 0.5245165824890137, 0.49912410974502563, 0.5383421778678894, 0.5262945294380188, 0.5725115537643433, 0.5483871102333069, 0.563007116317749, 0.5423403978347778, 0.6029327511787415, 0.5955316424369812, 0.5722929835319519, 0.5619789361953735], "val_accuracy": [0.6833333373069763, 0.7553333044052124, 0.7870000004768372, 0.7926666736602783, 0.809333324432373, 0.809333324432373, 0.8199999928474426, 0.8143333196640015, 0.8230000138282776, 0.8209999799728394, 0.8159999847412109, 0.8293333053588867, 0.8323333263397217, 0.8220000267028809, 0.8360000252723694, 0.8186666369438171, 0.8309999704360962, 0.8223333358764648, 0.831333339214325, 0.8206666707992554]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 3, 2, 9, 3, 5], [0, 2, 0, 2], [96, 16], [0, 1], [0], [4], [62], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 8, 7, 8, 3], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 6, 6], [16, 99, 4, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 0, 6, 4, 2, 2, 2, 1, 1, 0, 27, 15, 12, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(tf.math.sqrt(beta)), tf.math.add(tf.math.sqrt(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 0], [0, 2, 3, 0, 3], [0, 0, 0, 1], [39, 39], [0, 1, 0, 1], [0, 2, 9], [0, 2, 0, 3], [16, 49], [0, 1], [0], [0], [0, 67], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 8], [1, 6, 2, 3, 3, 7, 4, 2, 3, 5], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 22, 12, 10, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.multiply(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(beta), sigma), tf.math.subtract(sigma, tf.math.pow(grad, tf.math.subtract(grad, tf.math.pow(tf.math.add(beta, tf.math.sqrt(sigma)), tf.math.sqrt(grad))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [25, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 1, 0], [0, 2, 2, 3], [25, 16], [0, 1, 1], [4], [0, 7], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 2, 6, 1, 9], [0, 4, 3, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 3, 1, 2, 1, 22, 12, 10, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), beta), tf.math.subtract(beta, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(sigma, sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.divide_no_nan(tf.math.subtract(beta, tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 5], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 4, 1, 4, 1, 4, 2, 8], [0, 0, 0, 2, 0, 0, 3, 0, 2, 0], [16, 99, 96, 99, 14, 1]], "fitness": -0.08885714411735535, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1, 13, 6, 7, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(beta, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.309987783432007, 2.3105945587158203, 2.3113880157470703, 2.311384439468384, 2.3083856105804443, 2.311089038848877], "accuracy": [0.09747721254825592, 0.08849557489156723, 0.09074098616838455, 0.09272222965955734, 0.09879804402589798, 0.09179764986038208], "val_loss": [2.3085808753967285, 2.3085858821868896, 2.3085885047912598, 2.308590888977051, 2.3085925579071045, 2.30859375], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09166666865348816, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]