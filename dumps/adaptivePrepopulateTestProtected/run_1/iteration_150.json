[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8674286007881165, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2244911193847656, 1.8696681261062622, 1.408693790435791, 1.1028815507888794, 0.948987603187561, 0.8365378975868225, 0.7815830707550049, 0.7404782176017761, 0.6914776563644409, 0.6734183430671692, 0.6354577541351318, 0.6170192360877991, 0.6037574410438538, 0.5820046663284302, 0.5619339346885681, 0.5486030578613281, 0.5289437174797058, 0.5212892293930054, 0.5137527585029602, 0.5019418001174927, 0.4909660220146179, 0.48109951615333557, 0.47351258993148804, 0.47433677315711975, 0.45761075615882874, 0.4567570090293884, 0.4482680857181549, 0.43071240186691284, 0.42784634232521057, 0.4194257855415344, 0.4227336347103119, 0.40404051542282104, 0.40480121970176697, 0.3996957242488861, 0.3925020098686218, 0.3905228078365326, 0.384102463722229, 0.38160452246665955, 0.37716636061668396, 0.3637203276157379, 0.372357040643692, 0.36194172501564026, 0.3531452715396881, 0.3423685133457184, 0.34395691752433777, 0.3367067277431488, 0.33298084139823914, 0.3252239525318146, 0.3322475254535675, 0.32364627718925476, 0.31564489006996155, 0.3137269914150238, 0.3032475411891937, 0.30676835775375366, 0.2999088168144226, 0.2943671643733978, 0.2943418323993683, 0.2903217375278473, 0.29264718294143677, 0.27582675218582153, 0.2751983404159546], "accuracy": [0.27605336904525757, 0.4912164807319641, 0.5592392086982727, 0.6148461103439331, 0.6633205413818359, 0.7000396251678467, 0.7223616242408752, 0.7321357727050781, 0.7497028112411499, 0.7526086568832397, 0.7750627398490906, 0.778232753276825, 0.7852331399917603, 0.7915731072425842, 0.7964601516723633, 0.8014793395996094, 0.8095363974571228, 0.8131026029586792, 0.8157442808151245, 0.822348415851593, 0.8214238286018372, 0.8285563588142395, 0.8296129703521729, 0.8300092220306396, 0.8417646288871765, 0.8391229510307312, 0.844010055065155, 0.8487650156021118, 0.8453308939933777, 0.8520671129226685, 0.8504821062088013, 0.8541803956031799, 0.8555012345314026, 0.8603883385658264, 0.86118084192276, 0.8599920868873596, 0.8632941246032715, 0.8677849769592285, 0.8665962219238281, 0.871879518032074, 0.8708229064941406, 0.8732003569602966, 0.8689737319946289, 0.8750495314598083, 0.8790120482444763, 0.8759741187095642, 0.8829745054244995, 0.8815215826034546, 0.8794082403182983, 0.8831065893173218, 0.8879936337471008, 0.8891823887825012, 0.8927486538887024, 0.8878615498542786, 0.8916919827461243, 0.8952582478523254, 0.8963148593902588, 0.897899866104126, 0.8930128216743469, 0.9015982151031494, 0.9022586345672607], "val_loss": [2.0455944538116455, 1.5279273986816406, 1.0633389949798584, 0.8618417978286743, 0.7691975831985474, 0.715040385723114, 0.6743966341018677, 0.6414644718170166, 0.6185604929924011, 0.5932367444038391, 0.5775376558303833, 0.5648788809776306, 0.545587956905365, 0.5367485880851746, 0.5252347588539124, 0.520439624786377, 0.5081310868263245, 0.49691882729530334, 0.48920130729675293, 0.48436522483825684, 0.47777843475341797, 0.47125303745269775, 0.47016191482543945, 0.46578264236450195, 0.4611910879611969, 0.45626309514045715, 0.45318979024887085, 0.44267013669013977, 0.43950480222702026, 0.43916356563568115, 0.4298798441886902, 0.42697882652282715, 0.42111727595329285, 0.42668387293815613, 0.42198285460472107, 0.4224717617034912, 0.4193175435066223, 0.42260295152664185, 0.4089709520339966, 0.4069992005825043, 0.40736401081085205, 0.40486034750938416, 0.3999873101711273, 0.4002717137336731, 0.3941029906272888, 0.39662694931030273, 0.3936394155025482, 0.39411428570747375, 0.39186036586761475, 0.3881825804710388, 0.3884817361831665, 0.3899761438369751, 0.38398194313049316, 0.3849559426307678, 0.3837166726589203, 0.37895670533180237, 0.38024526834487915, 0.3763689398765564, 0.37485405802726746, 0.3787733018398285, 0.38241496682167053], "val_accuracy": [0.5296666622161865, 0.6449999809265137, 0.6803333163261414, 0.6980000138282776, 0.7213333249092102, 0.7383333444595337, 0.7473333477973938, 0.7590000033378601, 0.7649999856948853, 0.7796666622161865, 0.7799999713897705, 0.7889999747276306, 0.7996666431427002, 0.8006666898727417, 0.8033333420753479, 0.8023333549499512, 0.812333345413208, 0.8213333487510681, 0.8176666498184204, 0.8193333148956299, 0.8230000138282776, 0.8293333053588867, 0.8266666531562805, 0.8289999961853027, 0.8326666951179504, 0.8336666822433472, 0.8339999914169312, 0.8429999947547913, 0.8423333168029785, 0.8433333039283752, 0.8450000286102295, 0.840666651725769, 0.8453333377838135, 0.846666693687439, 0.8483333587646484, 0.846666693687439, 0.847000002861023, 0.8443333506584167, 0.8479999899864197, 0.8543333411216736, 0.8543333411216736, 0.8519999980926514, 0.856333315372467, 0.8550000190734863, 0.8569999933242798, 0.8546666502952576, 0.8569999933242798, 0.8560000061988831, 0.8603333234786987, 0.8603333234786987, 0.859666645526886, 0.8606666922569275, 0.862666666507721, 0.8606666922569275, 0.8616666793823242, 0.8666666746139526, 0.8629999756813049, 0.8653333187103271, 0.8633333444595337, 0.8636666536331177, 0.8656666874885559]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 1], [0, 8, 1], [0, 0], [0, 10], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8500000238418579, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2937302589416504, 2.1876468658447266, 1.7729625701904297, 1.3402513265609741, 1.0560492277145386, 0.890836775302887, 0.8131383657455444, 0.7890885472297668, 0.7424490451812744, 0.7270891666412354, 0.6873077154159546, 0.6622826457023621, 0.6335073709487915, 0.6113537549972534, 0.6016976237297058, 0.5862352252006531, 0.5843037962913513, 0.5642049908638, 0.5415762066841125, 0.540534257888794, 0.5383166670799255, 0.5259271860122681, 0.511120617389679, 0.49580636620521545, 0.47668489813804626, 0.47265204787254333, 0.4715385437011719, 0.45633792877197266, 0.4449293613433838, 0.44708213210105896, 0.4394291043281555, 0.4272317886352539, 0.4149552583694458, 0.41028091311454773, 0.4063882529735565, 0.39895763993263245, 0.3828656077384949, 0.3819451928138733, 0.37178146839141846, 0.3718608617782593, 0.3704199492931366, 0.3502905070781708, 0.35613396763801575, 0.3442772924900055, 0.334378719329834, 0.3326721787452698, 0.33129802346229553, 0.32572048902511597, 0.31511664390563965, 0.31604111194610596, 0.3066349923610687, 0.29796984791755676, 0.3099912703037262, 0.2898993492126465, 0.29984554648399353, 0.2892807424068451, 0.29426997900009155, 0.2804490625858307], "accuracy": [0.12878087162971497, 0.3329811096191406, 0.43904373049736023, 0.5519746541976929, 0.6367719173431396, 0.6708492636680603, 0.698190450668335, 0.7153612375259399, 0.7092854380607605, 0.7235503792762756, 0.7380794882774353, 0.7437590956687927, 0.757099449634552, 0.763967752456665, 0.7625148296356201, 0.7746664881706238, 0.7794214487075806, 0.7898560166358948, 0.7973847389221191, 0.7955356240272522, 0.7989697456359863, 0.7994980812072754, 0.8004226684570312, 0.8119139075279236, 0.8157442808151245, 0.8230088353157043, 0.8203672170639038, 0.8247259259223938, 0.8278959393501282, 0.8323867321014404, 0.835160493850708, 0.8330471515655518, 0.8396512866020203, 0.8467837572097778, 0.8481045961380005, 0.8448025584220886, 0.8562937378883362, 0.856689989566803, 0.8535200357437134, 0.857218325138092, 0.856689989566803, 0.8610487580299377, 0.8628978729248047, 0.8638224601745605, 0.8688416481018066, 0.8672566413879395, 0.8687095642089844, 0.8687095642089844, 0.8766345381736755, 0.8780874609947205, 0.8765024542808533, 0.8844274282455444, 0.8753136992454529, 0.8893144726753235, 0.8860124349594116, 0.8887861371040344, 0.8820499181747437, 0.8861445188522339], "val_loss": [2.246695041656494, 2.0214614868164062, 1.15071702003479, 0.8685890436172485, 0.7550361156463623, 0.6981232762336731, 0.6722216010093689, 0.6513698101043701, 0.6200823783874512, 0.6045949459075928, 0.5713006854057312, 0.5493435859680176, 0.5290249586105347, 0.5244173407554626, 0.5193963050842285, 0.5167222619056702, 0.5003499388694763, 0.496991366147995, 0.4936501383781433, 0.4838094115257263, 0.47738906741142273, 0.4749663770198822, 0.4646342098712921, 0.4627411365509033, 0.45716312527656555, 0.4465612471103668, 0.4446261525154114, 0.44419535994529724, 0.46226587891578674, 0.4331282079219818, 0.43001237511634827, 0.4231087267398834, 0.42062443494796753, 0.42531609535217285, 0.4188506603240967, 0.4103486239910126, 0.4179617464542389, 0.4048309028148651, 0.3952631950378418, 0.39314180612564087, 0.394712895154953, 0.4007790982723236, 0.39928850531578064, 0.3906104266643524, 0.39344674348831177, 0.40225788950920105, 0.4045964479446411, 0.40697193145751953, 0.3994203805923462, 0.3997800648212433, 0.4080257713794708, 0.4233977198600769, 0.42697063088417053, 0.4383373260498047, 0.45264938473701477, 0.4323740303516388, 0.42238935828208923, 0.4241200089454651], "val_accuracy": [0.4203333258628845, 0.4506666660308838, 0.6396666765213013, 0.7009999752044678, 0.7173333168029785, 0.7426666617393494, 0.7576666474342346, 0.7556666731834412, 0.7680000066757202, 0.7716666460037231, 0.7760000228881836, 0.784333348274231, 0.7940000295639038, 0.8016666769981384, 0.7979999780654907, 0.8050000071525574, 0.8153333067893982, 0.812333345413208, 0.812333345413208, 0.8220000267028809, 0.8293333053588867, 0.8216666579246521, 0.8326666951179504, 0.8339999914169312, 0.8389999866485596, 0.8383333086967468, 0.8366666436195374, 0.8479999899864197, 0.8353333473205566, 0.8473333120346069, 0.8453333377838135, 0.8476666808128357, 0.8553333282470703, 0.856333315372467, 0.8493333458900452, 0.8550000190734863, 0.8569999933242798, 0.8583333492279053, 0.8550000190734863, 0.8560000061988831, 0.862666666507721, 0.8616666793823242, 0.8659999966621399, 0.8659999966621399, 0.8656666874885559, 0.8650000095367432, 0.8683333396911621, 0.8696666955947876, 0.8709999918937683, 0.8703333139419556, 0.8700000047683716, 0.8709999918937683, 0.8740000128746033, 0.8730000257492065, 0.8690000176429749, 0.8673333525657654, 0.8656666874885559, 0.8733333349227905]}, "mapping_values": [1, 10, 5, 5, 3, 5, 3, 2, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8391428589820862, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.560674786567688, 0.8629844784736633, 0.7269177436828613, 0.6361322402954102, 0.5971071720123291, 0.5697246789932251, 0.5589863061904907, 0.5545836687088013, 0.5470728278160095, 0.5487245917320251, 0.5227310061454773, 0.4891803562641144, 0.5110922455787659, 0.48912811279296875, 0.4977251887321472, 0.5255880355834961, 0.5419018268585205], "accuracy": [0.47430986166000366, 0.7041342258453369, 0.7363624572753906, 0.7664773464202881, 0.7853652238845825, 0.7860256433486938, 0.7964601516723633, 0.7960638999938965, 0.8061022162437439, 0.7987055778503418, 0.8182538747787476, 0.8206313848495483, 0.8181217908859253, 0.8232730031013489, 0.8214238286018372, 0.8138951063156128, 0.8231409192085266], "val_loss": [0.8978082537651062, 0.6872959136962891, 0.5594666600227356, 0.5186502933502197, 0.5296977758407593, 0.49678921699523926, 0.5421497225761414, 0.4925762414932251, 0.5245233774185181, 0.542068362236023, 0.5006433129310608, 0.5238614678382874, 0.4812553822994232, 0.5343520045280457, 0.553296685218811, 0.5441461801528931, 0.589403510093689], "val_accuracy": [0.67166668176651, 0.721666693687439, 0.7860000133514404, 0.8056666851043701, 0.8059999942779541, 0.8213333487510681, 0.8163333535194397, 0.8270000219345093, 0.8176666498184204, 0.8429999947547913, 0.8323333263397217, 0.8453333377838135, 0.8320000171661377, 0.8326666951179504, 0.8303333520889282, 0.8360000252723694, 0.8426666855812073]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 2, 3, 0, 3, 8], [0, 2, 0, 2, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 2, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [66, 99, 96, 99, 9, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.304074287414551, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 0], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [6, 2, 3, 0, 3, 5], [0, 2, 0, 3, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 2, 3, 6, 2, 1, 4, 3, 4, 2, 1, 6, 3, 0, 5, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 7, 2, 1, 3], [16, 99, 96, 99, 61, 15]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 2, 11, 6, 5, 2, 2, 1, 1, 1, 30, 16, 14, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), tf.math.subtract(tf.math.divide_no_nan(alpha, beta), tf.math.multiply(tf.math.negative(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), grad))))), tf.math.square(tf.math.negative(beta)))), alpha), sigma)", "other_info": {"loss": [6098575163392.0, 6994882723840.0, 6994882723840.0, 6994883248128.0, 6994882199552.0, 6994882199552.0], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [6902559801344.0, 6902559801344.0, 6902559801344.0, 6902559801344.0, 6902559801344.0, 6902559801344.0], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 2, 1, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 3, 3, 5, 5], [0, 2, 0, 3, 4], [16, 16], [0, 1], [8], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 5, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 3], [16, 99, 96, 19, 61, 5]], "fitness": -0.09028571099042892, "mapping_values": [1, 6, 3, 3, 2, 12, 7, 5, 2, 2, 1, 1, 1, 9, 5, 4, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), sigma)", "other_info": {"loss": [2.310398578643799, 2.31012225151062, 2.3103015422821045, 2.308889865875244, 2.3106818199157715, 2.3090977668762207], "accuracy": [0.09100515395402908, 0.09008057415485382, 0.08942015469074249, 0.08955223858356476, 0.08717474341392517, 0.09245806187391281], "val_loss": [2.3082382678985596, 2.308241844177246, 2.308244228363037, 2.3082454204559326, 2.3082468509674072, 2.3082478046417236], "val_accuracy": [0.09433333575725555, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 0, 3, 1, 4], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.087714284658432, "mapping_values": [1, 7, 4, 3, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3098642826080322, 2.309527635574341, 2.31034779548645, 2.309382677078247, 2.3109500408172607, 2.3097784519195557], "accuracy": [0.0940430611371994, 0.09893012791872025, 0.09179764986038208, 0.09259014576673508, 0.09021265059709549, 0.09457138925790787], "val_loss": [2.3084917068481445, 2.3084917068481445, 2.3084917068481445, 2.3084917068481445, 2.3084917068481445, 2.3084917068481445], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]