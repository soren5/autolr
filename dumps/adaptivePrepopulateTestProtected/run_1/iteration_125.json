[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8682857155799866, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223290205001831, 1.8671261072158813, 1.3959091901779175, 1.1064929962158203, 0.9381361603736877, 0.8322808146476746, 0.7731614112854004, 0.723350465297699, 0.6989938616752625, 0.6635599732398987, 0.6417544484138489, 0.6179403066635132, 0.6057029366493225, 0.5835369229316711, 0.5672248601913452, 0.5604650974273682, 0.5476851463317871, 0.5319511294364929, 0.5264787673950195, 0.5093963146209717, 0.49481841921806335, 0.49010807275772095, 0.47731468081474304, 0.47563087940216064, 0.46784061193466187, 0.45406949520111084, 0.45570385456085205, 0.43789440393447876, 0.4406775236129761, 0.42375096678733826, 0.42145583033561707, 0.41826948523521423, 0.4077228009700775, 0.4056473672389984, 0.39665350317955017, 0.39082878828048706, 0.3869238495826721, 0.3781961500644684, 0.38070493936538696, 0.3698730766773224, 0.36412566900253296, 0.3627934753894806, 0.3602076470851898, 0.35850849747657776, 0.3460047245025635, 0.33930617570877075], "accuracy": [0.28239333629608154, 0.4975564777851105, 0.5659754276275635, 0.6180161237716675, 0.6633205413818359, 0.7033417224884033, 0.7206445932388306, 0.7416457533836365, 0.7491744756698608, 0.7629110813140869, 0.7709681391716003, 0.7763835787773132, 0.7802139520645142, 0.7890635132789612, 0.8009510040283203, 0.7973847389221191, 0.8062343001365662, 0.8080834746360779, 0.8107251524925232, 0.8203672170639038, 0.8257825970649719, 0.8230088353157043, 0.8290846943855286, 0.8350284099578857, 0.8352925777435303, 0.8400475382804871, 0.8384625315666199, 0.8491612672805786, 0.848368763923645, 0.8499537706375122, 0.8499537706375122, 0.8499537706375122, 0.8552370667457581, 0.857218325138092, 0.860652506351471, 0.8610487580299377, 0.8599920868873596, 0.8685774803161621, 0.8664641380310059, 0.8709549307823181, 0.869502067565918, 0.872407853603363, 0.8742570281028748, 0.8705587387084961, 0.8746532797813416, 0.8780874609947205], "val_loss": [2.0439436435699463, 1.5263867378234863, 1.0579665899276733, 0.8528019785881042, 0.7607762217521667, 0.7073676586151123, 0.6634135842323303, 0.6328451633453369, 0.6026241779327393, 0.5836221575737, 0.563886821269989, 0.5512407422065735, 0.5365923643112183, 0.527824342250824, 0.5118629336357117, 0.5048555135726929, 0.4948095679283142, 0.4879392981529236, 0.4739148020744324, 0.4657011330127716, 0.462066650390625, 0.45296183228492737, 0.4521504342556, 0.4491913318634033, 0.43971574306488037, 0.427681565284729, 0.4248960316181183, 0.4228678345680237, 0.41408756375312805, 0.4105289578437805, 0.40590062737464905, 0.4098285436630249, 0.3980292081832886, 0.3993172347545624, 0.3940921127796173, 0.3965708315372467, 0.39080142974853516, 0.3849458694458008, 0.3791162073612213, 0.38282495737075806, 0.3776068389415741, 0.38254284858703613, 0.37073880434036255, 0.3692972958087921, 0.3697059750556946, 0.36594972014427185], "val_accuracy": [0.5506666898727417, 0.640999972820282, 0.6633333563804626, 0.6956666707992554, 0.7206666469573975, 0.7319999933242798, 0.7490000128746033, 0.7599999904632568, 0.7683333158493042, 0.777999997138977, 0.7796666622161865, 0.784333348274231, 0.7919999957084656, 0.79666668176651, 0.8103333115577698, 0.812333345413208, 0.8063333630561829, 0.8090000152587891, 0.815666675567627, 0.8236666917800903, 0.8243333101272583, 0.8326666951179504, 0.8330000042915344, 0.8379999995231628, 0.8373333215713501, 0.8393333554267883, 0.8463333249092102, 0.8399999737739563, 0.8496666550636292, 0.8476666808128357, 0.8536666631698608, 0.8533333539962769, 0.8579999804496765, 0.8560000061988831, 0.8569999933242798, 0.8629999756813049, 0.8613333106040955, 0.8606666922569275, 0.8636666536331177, 0.8610000014305115, 0.8686666488647461, 0.8643333315849304, 0.8669999837875366, 0.8683333396911621, 0.8669999837875366, 0.8679999709129333]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8577142953872681, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292609453201294, 2.1859169006347656, 1.7601277828216553, 1.36721670627594, 1.051958441734314, 0.9332346320152283, 0.8453538417816162, 0.8175039887428284, 0.7746175527572632, 0.7525221109390259, 0.7009850740432739, 0.6807065606117249, 0.6530118584632874, 0.6382386684417725, 0.6134724617004395, 0.6068955063819885, 0.5910093188285828, 0.5828566551208496, 0.5612883567810059, 0.5514545440673828, 0.5348395705223083, 0.5349429249763489, 0.5326445698738098, 0.5234757661819458, 0.5127949118614197, 0.4945058226585388, 0.4959205090999603, 0.4742468595504761, 0.47621768712997437, 0.45897477865219116, 0.4532511830329895, 0.44918593764305115, 0.437019020318985, 0.44393789768218994, 0.42783844470977783, 0.4094323217868805, 0.4114327132701874, 0.4092690944671631, 0.3946189284324646, 0.39444902539253235, 0.3880069851875305, 0.3721313178539276, 0.36505424976348877, 0.37193578481674194, 0.3672393262386322, 0.35870981216430664, 0.35297688841819763, 0.35318171977996826, 0.3502746820449829, 0.3348841071128845, 0.33351194858551025, 0.332620233297348, 0.33857086300849915, 0.32451918721199036, 0.31509560346603394, 0.3130202293395996], "accuracy": [0.12257297337055206, 0.32862237095832825, 0.4373266398906708, 0.5320301055908203, 0.633469820022583, 0.6535464525222778, 0.6921146512031555, 0.6971337795257568, 0.7058512568473816, 0.7121912837028503, 0.7367587089538574, 0.7412495017051697, 0.7473253011703491, 0.7544577717781067, 0.7514199018478394, 0.7658169269561768, 0.7652885913848877, 0.7717606425285339, 0.787082314491272, 0.7881389260292053, 0.7828556299209595, 0.7847048044204712, 0.789459764957428, 0.7973847389221191, 0.8005547523498535, 0.806630551815033, 0.8099326491355896, 0.8169330358505249, 0.8140271902084351, 0.8238013386726379, 0.8255184292793274, 0.8289526104927063, 0.8276317715644836, 0.8323867321014404, 0.8392550349235535, 0.8457271456718445, 0.8389908671379089, 0.843481719493866, 0.8453308939933777, 0.8477083444595337, 0.8485008478164673, 0.8570862412452698, 0.8593316674232483, 0.8540483713150024, 0.8560295701026917, 0.8588033318519592, 0.860652506351471, 0.8623695969581604, 0.8627657890319824, 0.8697662353515625, 0.8652753829956055, 0.867520809173584, 0.8607845902442932, 0.8714832663536072, 0.8751816153526306, 0.8710870146751404], "val_loss": [2.2460057735443115, 2.0125110149383545, 1.1169731616973877, 0.863130509853363, 0.779770016670227, 0.718156099319458, 0.6895602345466614, 0.6601917743682861, 0.6332149505615234, 0.6134304404258728, 0.5717610120773315, 0.5558541417121887, 0.541803240776062, 0.5364225506782532, 0.5230295658111572, 0.5109166502952576, 0.5063031911849976, 0.5173810124397278, 0.49865981936454773, 0.4894039034843445, 0.47946590185165405, 0.4817957282066345, 0.4690350890159607, 0.4594511389732361, 0.46793895959854126, 0.4562146067619324, 0.450123131275177, 0.44921785593032837, 0.4423900842666626, 0.4352862238883972, 0.4286233186721802, 0.4198369085788727, 0.4154907166957855, 0.40983861684799194, 0.41827210783958435, 0.4076770842075348, 0.4019533693790436, 0.4020480513572693, 0.3891441524028778, 0.38427257537841797, 0.37985607981681824, 0.380409300327301, 0.39228808879852295, 0.39281827211380005, 0.3712957799434662, 0.3655989468097687, 0.3676066994667053, 0.3742620348930359, 0.37955227494239807, 0.38714563846588135, 0.38884103298187256, 0.39407405257225037, 0.39521434903144836, 0.4000597596168518, 0.39520472288131714, 0.39564722776412964], "val_accuracy": [0.4153333306312561, 0.45133334398269653, 0.6526666879653931, 0.6923333406448364, 0.7153333425521851, 0.7226666808128357, 0.737333357334137, 0.7409999966621399, 0.7703333497047424, 0.7696666717529297, 0.7773333191871643, 0.7793333530426025, 0.7889999747276306, 0.7870000004768372, 0.7933333516120911, 0.7986666560173035, 0.8019999861717224, 0.7953333258628845, 0.8033333420753479, 0.8253333568572998, 0.812666654586792, 0.8046666383743286, 0.8263333439826965, 0.8353333473205566, 0.831333339214325, 0.831333339214325, 0.8323333263397217, 0.8273333311080933, 0.8370000123977661, 0.8403333425521851, 0.8460000157356262, 0.8473333120346069, 0.8496666550636292, 0.8566666841506958, 0.8533333539962769, 0.8553333282470703, 0.8629999756813049, 0.856333315372467, 0.8573333621025085, 0.8636666536331177, 0.8646666407585144, 0.8706666827201843, 0.8679999709129333, 0.8643333315849304, 0.8713333606719971, 0.8696666955947876, 0.8676666617393494, 0.871666669845581, 0.8726666569709778, 0.8769999742507935, 0.8776666522026062, 0.875, 0.871666669845581, 0.8696666955947876, 0.8706666827201843, 0.8709999918937683]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8454285860061646, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4951266050338745, 0.8681145310401917, 0.6817888021469116, 0.6320981979370117, 0.604296863079071, 0.5598846077919006, 0.5471107959747314, 0.5431744456291199, 0.5080437064170837, 0.5134993195533752, 0.5052880644798279, 0.48356959223747253, 0.48976394534111023, 0.48521688580513, 0.4943734407424927, 0.4863893389701843, 0.4965658485889435, 0.5266711115837097], "accuracy": [0.48487651348114014, 0.7150970697402954, 0.7456082701683044, 0.7597411274909973, 0.7821952104568481, 0.8012151718139648, 0.7967243194580078, 0.8061022162437439, 0.8078193068504333, 0.8185180425643921, 0.81548011302948, 0.8245938420295715, 0.8281601071357727, 0.8333113193511963, 0.8182538747787476, 0.8345000743865967, 0.8269713521003723, 0.8290846943855286], "val_loss": [0.8754737973213196, 0.6069373488426208, 0.5707830786705017, 0.5469886660575867, 0.5210391879081726, 0.5361099243164062, 0.528544008731842, 0.5307352542877197, 0.5644821524620056, 0.5109384655952454, 0.5047929883003235, 0.522304117679596, 0.5428221225738525, 0.5300382375717163, 0.5678883194923401, 0.6058943271636963, 0.6330882906913757, 0.5340893864631653], "val_accuracy": [0.7039999961853027, 0.7730000019073486, 0.7793333530426025, 0.8096666932106018, 0.8096666932106018, 0.8086666464805603, 0.8069999814033508, 0.8223333358764648, 0.8220000267028809, 0.8243333101272583, 0.8230000138282776, 0.8306666612625122, 0.8316666483879089, 0.8306666612625122, 0.8216666579246521, 0.8263333439826965, 0.8263333439826965, 0.8213333487510681]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 3, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [2, 3, 3, 6, 8, 1, 4, 1, 4, 2, 6, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 6], [16, 99, 96, 99, 88, 1]], "fitness": -0.1785714328289032, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 23, 12, 11, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.divide_no_nan(tf.math.square(alpha), beta)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)", "other_info": {"loss": [2.520329713821411, 2.5765981674194336, 2.305962562561035, 2.305424451828003, 2.3026702404022217, 2.2041049003601074, 2.3010342121124268, 2.3074588775634766, 2.303842544555664, 2.303253412246704], "accuracy": [0.20763438940048218, 0.09298639744520187, 0.09959053993225098, 0.09681680053472519, 0.1010434553027153, 0.18042530119419098, 0.15255580842494965, 0.10236428678035736, 0.0940430611371994, 0.09813763201236725], "val_loss": [3.8976659774780273, 2.3077573776245117, 2.3025803565979004, 2.3023884296417236, 2.2950868606567383, 2.4839797019958496, 2.3107898235321045, 2.303499937057495, 2.3028786182403564, 2.3026082515716553], "val_accuracy": [0.0989999994635582, 0.10333333164453506, 0.1080000028014183, 0.09799999743700027, 0.1836666613817215, 0.10599999874830246, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 5, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 6], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 5, 3, 6, 3, 2, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 4, 1, 2, 0], [73, 69, 96, 99, 61, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 3, 2, 1, 6, 3, 3, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(grad, tf.constant(1.0, shape=shape, dtype=tf.float32))), grad))), alpha)", "other_info": {"loss": [NaN, Infinity, 4.0429129373309795e+32, 6.972207665989367e+33, 1.1338907921271818e+32, 2.9582649550349925e+34], "accuracy": [0.09549596905708313, 0.09800554811954498, 0.09879804402589798, 0.09747721254825592, 0.09721305221319199, 0.09840179979801178], "val_loss": [7.950075691091498e+33, 7.950045361560535e+33, 7.950045361560535e+33, 7.950045361560535e+33, 7.950045361560535e+33, 7.950045361560535e+33], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 60], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 0, 1], [2, 8], [4, 7], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 6, 7, 1, 0, 1, 8, 1, 5, 1, 8, 4, 2, 8, 3, 6, 0, 0, 5, 4], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 7, 5, 0, 2, 5, 4, 7, 4, 4, 4, 3], [16, 99, 96, 99, 61, 1, 44]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 10, 6, 4, 2, 4, 2, 2, 0, 51, 30, 21, 7], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(grad, tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(sigma, alpha), tf.math.subtract(beta, tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.sqrt(grad), tf.math.subtract(grad, tf.math.square(tf.math.subtract(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), beta))))), tf.math.sqrt(grad)), tf.math.pow(tf.math.add(grad, tf.math.sqrt(tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(tf.math.negative(grad)), grad), tf.math.square(tf.math.pow(grad, grad))))), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 9, 4, 5], [2, 1, 0, 0], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 8, 5], [0, 2, 0, 3], [16, 16], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 7, 4, 6, 8, 2, 9, 9], [0, 1, 1], [99, 2, 78], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 8, 2, 8, 1, 4, 1, 2, 9, 8], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 6, 3, 3, 2, 11, 8, 3, 3, 17, 10, 7, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), tf.math.sqrt(tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.add(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]