[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87371426820755, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2228734493255615, 1.8646705150604248, 1.3892556428909302, 1.0881510972976685, 0.9358226656913757, 0.8430068492889404, 0.7645420432090759, 0.7280378341674805, 0.6827303171157837, 0.6580735445022583, 0.6304691433906555, 0.6069021224975586, 0.5968988537788391, 0.5708913803100586, 0.5561423897743225, 0.5371028184890747, 0.525234043598175, 0.5126693248748779, 0.4938237965106964, 0.48608723282814026, 0.4702284336090088, 0.4620598554611206, 0.45274612307548523, 0.4524102210998535, 0.4470943212509155, 0.4379097521305084, 0.4261297881603241, 0.41880562901496887, 0.4133523404598236, 0.40377992391586304, 0.3926399052143097, 0.3952954411506653, 0.39238131046295166, 0.37688151001930237, 0.3722785711288452, 0.3668058216571808, 0.36519819498062134, 0.3620600700378418, 0.3451836407184601, 0.3482179641723633, 0.3445530831813812, 0.34170234203338623, 0.33391451835632324, 0.3327735364437103, 0.32326453924179077, 0.31286340951919556, 0.30683213472366333, 0.30827900767326355, 0.302769273519516, 0.30135881900787354, 0.2954920530319214, 0.2976670265197754, 0.2915855646133423, 0.2867542803287506, 0.28022709488868713, 0.2757680416107178, 0.2753838002681732, 0.27151867747306824, 0.2641567587852478], "accuracy": [0.2731475234031677, 0.49425438046455383, 0.5672962665557861, 0.6210539937019348, 0.6623960137367249, 0.7018887996673584, 0.726192057132721, 0.7371549606323242, 0.7479857206344604, 0.7585523724555969, 0.7716285586357117, 0.7759873270988464, 0.7828556299209595, 0.7955356240272522, 0.7976489067077637, 0.8099326491355896, 0.8132346868515015, 0.816008448600769, 0.8261788487434387, 0.8230088353157043, 0.8333113193511963, 0.8360850811004639, 0.8362171649932861, 0.8387266993522644, 0.8378021121025085, 0.8465195894241333, 0.8510104417800903, 0.8492933511734009, 0.8540483713150024, 0.8589354157447815, 0.8590674996376038, 0.8584070801734924, 0.8570862412452698, 0.8692378997802734, 0.8687095642089844, 0.867520809173584, 0.8676528930664062, 0.874389111995697, 0.8779553771018982, 0.8768987059593201, 0.8735966086387634, 0.874389111995697, 0.8840311765670776, 0.8786157965660095, 0.8842953443527222, 0.8926165699958801, 0.8922203183174133, 0.8911636471748352, 0.8938053250312805, 0.8902390599250793, 0.89552241563797, 0.8932769894599915, 0.8992207050323486, 0.8980319499969482, 0.8996169567108154, 0.9006736278533936, 0.9080702662467957, 0.9000132083892822, 0.9006736278533936], "val_loss": [2.0386462211608887, 1.5123720169067383, 1.0373501777648926, 0.8261378407478333, 0.7455208897590637, 0.6908789277076721, 0.6442884802818298, 0.6202579736709595, 0.5893580317497253, 0.5647176504135132, 0.551687479019165, 0.5346356630325317, 0.5233694911003113, 0.5119833946228027, 0.5009209513664246, 0.4852926731109619, 0.47781023383140564, 0.47268903255462646, 0.4611990451812744, 0.4539405107498169, 0.44677668809890747, 0.43842485547065735, 0.44023510813713074, 0.43064582347869873, 0.4277910888195038, 0.4230616092681885, 0.41764578223228455, 0.41194844245910645, 0.4094828963279724, 0.40390437841415405, 0.4044634699821472, 0.405850350856781, 0.39711207151412964, 0.3910899758338928, 0.38937002420425415, 0.3875364065170288, 0.3845146894454956, 0.3843737244606018, 0.38220712542533875, 0.37594133615493774, 0.375576376914978, 0.37187808752059937, 0.3713494837284088, 0.3734619915485382, 0.36716511845588684, 0.3660908639431, 0.3677000403404236, 0.3632417917251587, 0.36613979935646057, 0.36064741015434265, 0.35775142908096313, 0.36290714144706726, 0.36458829045295715, 0.35854285955429077, 0.356625497341156, 0.3544938266277313, 0.35847997665405273, 0.3535296320915222, 0.3578237295150757], "val_accuracy": [0.5573333501815796, 0.6520000100135803, 0.6766666769981384, 0.7110000252723694, 0.7283333539962769, 0.7423333525657654, 0.7580000162124634, 0.7680000066757202, 0.7776666879653931, 0.7926666736602783, 0.7953333258628845, 0.8036666512489319, 0.8086666464805603, 0.812666654586792, 0.8186666369438171, 0.8206666707992554, 0.8323333263397217, 0.8306666612625122, 0.8356666564941406, 0.8386666774749756, 0.843999981880188, 0.8460000157356262, 0.840666651725769, 0.847000002861023, 0.8523333072662354, 0.8483333587646484, 0.8519999980926514, 0.8546666502952576, 0.8523333072662354, 0.8573333621025085, 0.8550000190734863, 0.8553333282470703, 0.8616666793823242, 0.8616666793823242, 0.8616666793823242, 0.8619999885559082, 0.8663333058357239, 0.8616666793823242, 0.8683333396911621, 0.8679999709129333, 0.8659999966621399, 0.8659999966621399, 0.8696666955947876, 0.871666669845581, 0.8713333606719971, 0.871999979019165, 0.8676666617393494, 0.8730000257492065, 0.8740000128746033, 0.8736666440963745, 0.8713333606719971, 0.8740000128746033, 0.8730000257492065, 0.8763333559036255, 0.8763333559036255, 0.8733333349227905, 0.871666669845581, 0.875333309173584, 0.8740000128746033]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 6, 3, 4, 0, 3, 6, 5, 0, 8, 6], [0, 3, 4, 1, 1, 3, 0], [0, 40], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8539999723434448, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(grad)), tf.math.multiply(grad, alpha)), tf.math.divide_no_nan(tf.math.square(tf.math.negative(alpha)), tf.math.sqrt(tf.math.divide_no_nan(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294400215148926, 2.1895782947540283, 1.7663731575012207, 1.3588674068450928, 1.0645878314971924, 0.9171070456504822, 0.8333513140678406, 0.8025217652320862, 0.7437775731086731, 0.735359251499176, 0.6879292130470276, 0.6668625473976135, 0.6354625225067139, 0.6020193696022034, 0.5831793546676636, 0.5832787752151489, 0.5651432275772095, 0.5555392503738403, 0.5425174236297607, 0.545303463935852, 0.527538001537323, 0.5156629681587219, 0.498065322637558, 0.4975311756134033, 0.4979850947856903, 0.47843044996261597, 0.4662163257598877, 0.45147088170051575, 0.4509217143058777, 0.4365926682949066, 0.4266214668750763, 0.41860827803611755, 0.4160878360271454, 0.406979501247406, 0.4044058322906494, 0.398912250995636, 0.3864191174507141, 0.38368451595306396, 0.3718814551830292, 0.3717186152935028, 0.36118900775909424, 0.3499809503555298, 0.3464175760746002, 0.34741920232772827, 0.3591775894165039, 0.34432145953178406, 0.33734992146492004, 0.32902660965919495, 0.33360999822616577, 0.32263806462287903, 0.31426742672920227, 0.32590192556381226, 0.3027188181877136], "accuracy": [0.12032756209373474, 0.33179235458374023, 0.43851539492607117, 0.5453705191612244, 0.6409985423088074, 0.6622639298439026, 0.6857746839523315, 0.7100779414176941, 0.7077004313468933, 0.7124554514884949, 0.7411174178123474, 0.7508915662765503, 0.759609043598175, 0.7744023203849792, 0.7711002230644226, 0.7868181467056274, 0.7812706232070923, 0.7868181467056274, 0.7911768555641174, 0.7980451583862305, 0.8026680946350098, 0.8079513907432556, 0.8090080618858337, 0.8127063512802124, 0.8104609847068787, 0.8204993009567261, 0.8230088353157043, 0.8278959393501282, 0.8241975903511047, 0.8339717388153076, 0.8334434032440186, 0.8383304476737976, 0.8433496356010437, 0.8494254350662231, 0.8482366800308228, 0.8502179384231567, 0.8593316674232483, 0.8574824929237366, 0.8558974862098694, 0.8601241707801819, 0.8673887252807617, 0.8642187118530273, 0.8685774803161621, 0.8721436858177185, 0.8615770936012268, 0.8692378997802734, 0.8728041052818298, 0.8741249442100525, 0.8747853636741638, 0.8741249442100525, 0.8821820020675659, 0.8787478804588318, 0.8835028409957886], "val_loss": [2.245795249938965, 2.018683910369873, 1.126009225845337, 0.9260857105255127, 0.7814680933952332, 0.7281126379966736, 0.6802509427070618, 0.6489285230636597, 0.6286923289299011, 0.6066749095916748, 0.5768697261810303, 0.5707282423973083, 0.5454567670822144, 0.5344822406768799, 0.540292501449585, 0.5338488817214966, 0.5152482390403748, 0.5106393694877625, 0.5233434438705444, 0.5153369307518005, 0.49218302965164185, 0.4839145541191101, 0.48454082012176514, 0.49376416206359863, 0.4761863052845001, 0.4723780155181885, 0.4738941192626953, 0.4647907316684723, 0.4669652581214905, 0.4684095084667206, 0.4553768038749695, 0.4521154761314392, 0.47125107049942017, 0.4661182463169098, 0.4572488069534302, 0.44474053382873535, 0.4523031711578369, 0.44058024883270264, 0.4349716901779175, 0.4526844918727875, 0.4463464319705963, 0.4448717534542084, 0.44639062881469727, 0.4390648901462555, 0.4456337094306946, 0.44334426522254944, 0.4511534869670868, 0.4464016556739807, 0.4687611758708954, 0.4585798382759094, 0.4795064330101013, 0.46755701303482056, 0.45931586623191833], "val_accuracy": [0.4583333432674408, 0.4339999854564667, 0.6449999809265137, 0.6856666803359985, 0.7183333039283752, 0.7260000109672546, 0.7393333315849304, 0.7333333492279053, 0.753333330154419, 0.7716666460037231, 0.7723333239555359, 0.7823333144187927, 0.7976666688919067, 0.8009999990463257, 0.7986666560173035, 0.8019999861717224, 0.8056666851043701, 0.8033333420753479, 0.8059999942779541, 0.8046666383743286, 0.8069999814033508, 0.8106666803359985, 0.8173333406448364, 0.8203333616256714, 0.828000009059906, 0.8220000267028809, 0.8296666741371155, 0.828000009059906, 0.8349999785423279, 0.828000009059906, 0.8306666612625122, 0.8379999995231628, 0.8389999866485596, 0.847000002861023, 0.843999981880188, 0.8483333587646484, 0.8506666421890259, 0.8510000109672546, 0.8489999771118164, 0.856333315372467, 0.8536666631698608, 0.8546666502952576, 0.8606666922569275, 0.8579999804496765, 0.8576666712760925, 0.856333315372467, 0.8579999804496765, 0.862333357334137, 0.8550000190734863, 0.862333357334137, 0.8616666793823242, 0.862333357334137, 0.8606666922569275]}, "mapping_values": [1, 10, 5, 5, 3, 18, 11, 7, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8320000171661377, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5223737955093384, 0.850601315498352, 0.6853485107421875, 0.6286370158195496, 0.5716226696968079, 0.5622832775115967, 0.5564579963684082, 0.5145897269248962, 0.5367172956466675, 0.5149389505386353, 0.5038644075393677, 0.5077959895133972, 0.4852772653102875, 0.46975499391555786, 0.4967040717601776, 0.48274996876716614, 0.5155874490737915, 0.5285789370536804, 0.5254437923431396], "accuracy": [0.48474442958831787, 0.7132478952407837, 0.7606657147407532, 0.7664773464202881, 0.7881389260292053, 0.7993659973144531, 0.8004226684570312, 0.8153480291366577, 0.8113855719566345, 0.8170651197433472, 0.8178576231002808, 0.8280280232429504, 0.8350284099578857, 0.8277638554573059, 0.826310932636261, 0.8216879963874817, 0.8289526104927063, 0.8226125836372375, 0.832650899887085], "val_loss": [0.8616183400154114, 0.6196115016937256, 0.5515250563621521, 0.4984453618526459, 0.49189794063568115, 0.4463421106338501, 0.47411417961120605, 0.478295236825943, 0.4903987646102905, 0.4880550503730774, 0.4744604527950287, 0.49378809332847595, 0.47166478633880615, 0.46886885166168213, 0.47897103428840637, 0.5338638424873352, 0.4816877543926239, 0.5239864587783813, 0.5123839378356934], "val_accuracy": [0.7390000224113464, 0.765333354473114, 0.8009999990463257, 0.8106666803359985, 0.8209999799728394, 0.8383333086967468, 0.8289999961853027, 0.8216666579246521, 0.8296666741371155, 0.8370000123977661, 0.8463333249092102, 0.8453333377838135, 0.8366666436195374, 0.8496666550636292, 0.8420000076293945, 0.8429999947547913, 0.8353333473205566, 0.8353333473205566, 0.8289999961853027]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 8, 3, 0, 3, 5, 3], [0, 3, 2, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 2, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.7925714254379272, "mapping_values": [1, 9, 5, 4, 2, 11, 7, 4, 1, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(grad), tf.math.multiply(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, beta))))", "other_info": {"loss": [2.3081772327423096, 2.299105405807495, 2.274273633956909, 2.231527328491211, 2.1302027702331543, 1.831377625465393, 1.3722947835922241, 1.13336980342865, 0.9795301556587219, 0.9234158992767334, 0.860080897808075, 0.8362393975257874, 0.8202243447303772, 0.7894185781478882, 0.7416559457778931, 0.7361536026000977, 0.7040870785713196, 0.6980756521224976, 0.6931659579277039, 0.6690222024917603, 0.6524328589439392, 0.6731525659561157, 0.6324178576469421, 0.6036303639411926, 0.6427926421165466, 0.6323906183242798, 0.5888608694076538, 0.5558049082756042, 0.5573035478591919, 0.5644398927688599, 0.5584961175918579], "accuracy": [0.09681680053472519, 0.10619468986988068, 0.17157575488090515, 0.2673358917236328, 0.3695680797100067, 0.44947826862335205, 0.5381059050559998, 0.6046757102012634, 0.6507726907730103, 0.6629242897033691, 0.6885483860969543, 0.6942279934883118, 0.6983225345611572, 0.7127195596694946, 0.7239466309547424, 0.7252674698829651, 0.7413815855979919, 0.7351737022399902, 0.7407211661338806, 0.7514199018478394, 0.748249888420105, 0.746268630027771, 0.76106196641922, 0.7717606425285339, 0.7580240368843079, 0.7561748623847961, 0.7733456492424011, 0.7952714562416077, 0.7862898111343384, 0.7906485199928284, 0.7848368883132935], "val_loss": [2.302879571914673, 2.283257246017456, 2.2499899864196777, 2.1805965900421143, 1.9790374040603638, 1.4386417865753174, 1.025771975517273, 0.8999181389808655, 0.7876455187797546, 0.7746666669845581, 0.7830290794372559, 0.6893715262413025, 0.6919856667518616, 0.6844980716705322, 0.6679894328117371, 0.6909905076026917, 0.6585935354232788, 0.6780520677566528, 0.631625235080719, 0.6048880815505981, 0.5623193979263306, 0.6469606757164001, 0.5908651351928711, 0.5672727823257446, 0.5802685022354126, 0.56676185131073, 0.5457313060760498, 0.5400577783584595, 0.5328150391578674, 0.5463563203811646, 0.539519727230072], "val_accuracy": [0.09133332967758179, 0.1599999964237213, 0.37400001287460327, 0.45399999618530273, 0.5793333053588867, 0.6399999856948853, 0.67166668176651, 0.675000011920929, 0.7239999771118164, 0.7279999852180481, 0.7023333311080933, 0.7453333139419556, 0.7409999966621399, 0.7263333201408386, 0.746999979019165, 0.7303333282470703, 0.7400000095367432, 0.7223333120346069, 0.7593333125114441, 0.7636666893959045, 0.7923333048820496, 0.7509999871253967, 0.7613333463668823, 0.7829999923706055, 0.7630000114440918, 0.7983333468437195, 0.796999990940094, 0.7979999780654907, 0.7919999957084656, 0.7799999713897705, 0.7903333306312561]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 4, 3, 0, 3], [0, 1, 2, 0], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 1, 1, 0, 4, 5, 3, 9, 8, 5, 2, 3, 4, 8], [0, 3, 0, 3, 0, 4, 5, 4, 4, 5], [16, 16, 70, 12], [0, 1], [0], [0], [6], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [4, 3, 1, 6, 8, 1, 4, 5, 2, 2, 8, 9, 1, 4, 6, 9, 7, 4, 6, 7, 7], [0, 0, 0, 4, 0, 0, 3, 1, 2, 2, 6, 7, 1, 5, 2], [16, 99, 96, 99, 61, 1, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 29, 19, 10, 4, 2, 1, 1, 1, 36, 21, 15, 7], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.square(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.pow(tf.math.square(tf.math.multiply(grad, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.square(tf.math.add(tf.math.multiply(grad, grad), tf.math.pow(grad, tf.math.sqrt(grad)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, alpha)), tf.math.pow(tf.math.divide_no_nan(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.divide_no_nan(beta, beta), tf.math.add(grad, grad)), alpha)), tf.math.add(grad, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3, 2, 4, 2, 1, 7, 4, 6, 0, 2, 7, 0, 3], [0, 1, 0, 0, 3, 1, 0, 3, 2, 1, 3, 3, 3, 3], [39, 39, 62, 22], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 5, 5], [0, 2, 0, 3], [99, 28], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 4, 3, 6, 8, 1, 4, 3, 4, 2, 8], [0, 0, 3, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.add(tf.math.subtract(tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(grad, alpha)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), grad), grad), alpha), grad), grad))), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), beta), tf.math.square(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma)), sigma), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3030123710632324, 2.302597761154175, 2.3025903701782227, 2.3025906085968018, 2.3025918006896973, 2.3025922775268555], "accuracy": [0.10038304328918457, 0.10011887550354004, 0.10011887550354004, 0.09972262382507324, 0.09959053993225098, 0.1002509593963623], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}, "mapping_values": [1, 31, 17, 14, 4, 8, 5, 3, 2, 2, 1, 1, 1, 10, 5, 5, 3], "tree_depth": 36}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [93], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 9, 6, 8, 5, 4, 1, 4, 2, 8, 0, 7], [0, 0, 0, 3, 0, 0, 3, 1, 2, 1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 6, 3, 3, 2, 2, 1, 1, 1, 21, 13, 8, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))))), tf.math.pow(sigma, tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.add(sigma, alpha)))", "other_info": {"loss": [2.609520673751831, 2.802520513534546, 2.862222671508789, 2.863041400909424, 2.8678457736968994, 2.8752522468566895], "accuracy": [0.09959053993225098, 0.09708096832036972, 0.09932637959718704, 0.09906221181154251, 0.09708096832036972, 0.10038304328918457], "val_loss": [2.533238649368286, 2.5630204677581787, 2.5745017528533936, 2.5806455612182617, 2.5844919681549072, 2.5871357917785645], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]