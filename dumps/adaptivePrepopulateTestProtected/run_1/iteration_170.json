[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8611428737640381, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2206454277038574, 1.8566972017288208, 1.3869541883468628, 1.092175841331482, 0.9320799708366394, 0.8347280025482178, 0.770271360874176, 0.72540283203125, 0.6874513030052185, 0.6513180136680603, 0.6321061849594116, 0.6120563745498657, 0.5883612632751465, 0.5809985995292664, 0.5624367594718933, 0.5388622879981995, 0.5322483777999878, 0.519950270652771, 0.5033931136131287, 0.48552075028419495, 0.4804431200027466, 0.47188684344291687, 0.46723803877830505, 0.45144984126091003, 0.45109641551971436, 0.4388158321380615, 0.43370842933654785, 0.4170757532119751, 0.41527023911476135, 0.40859082341194153, 0.4013610780239105, 0.40228748321533203, 0.3916337192058563, 0.3933831751346588, 0.3809862732887268, 0.3740299642086029, 0.3718413710594177, 0.36089399456977844, 0.36533990502357483, 0.3539466857910156, 0.3561684787273407, 0.33842650055885315, 0.34522926807403564, 0.33372217416763306, 0.33456575870513916, 0.32626035809516907, 0.3185988664627075, 0.3250257670879364, 0.31146520376205444, 0.3052048087120056, 0.307302325963974, 0.3035198152065277, 0.2978023886680603, 0.29989761114120483, 0.2887687683105469, 0.28683826327323914, 0.2893591523170471, 0.27512305974960327, 0.27188488841056824, 0.2643719017505646, 0.2643885612487793, 0.26174065470695496, 0.2587145268917084, 0.2550445795059204, 0.25027990341186523, 0.24162326753139496, 0.24572451412677765, 0.2405722439289093, 0.24274079501628876, 0.23791556060314178, 0.23017998039722443], "accuracy": [0.27341169118881226, 0.4954431354999542, 0.5670320987701416, 0.6221106648445129, 0.6700568199157715, 0.7043983340263367, 0.7235503792762756, 0.7395324110984802, 0.752740740776062, 0.7643640041351318, 0.77677983045578, 0.7802139520645142, 0.7873464822769165, 0.7854973077774048, 0.7944789528846741, 0.8050455451011658, 0.8061022162437439, 0.8100647330284119, 0.8228767514228821, 0.829216718673706, 0.8278959393501282, 0.8335754871368408, 0.833179235458374, 0.8341038227081299, 0.8374059200286865, 0.843481719493866, 0.8453308939933777, 0.8540483713150024, 0.8536521196365356, 0.8548408150672913, 0.8555012345314026, 0.8565579056739807, 0.8613129258155823, 0.8570862412452698, 0.8651432991027832, 0.8671245574951172, 0.8636903762817383, 0.8716153502464294, 0.8717474341392517, 0.870030403137207, 0.8739928603172302, 0.8796724081039429, 0.8742570281028748, 0.8802007436752319, 0.8812574148178101, 0.8809932470321655, 0.8857482671737671, 0.8837670087814331, 0.8878615498542786, 0.8893144726753235, 0.8883898854255676, 0.8887861371040344, 0.8910315632820129, 0.8912957310676575, 0.8988244533538818, 0.8968431949615479, 0.8947299122810364, 0.9005415439605713, 0.8996169567108154, 0.9063531756401062, 0.9046360850334167, 0.9043719172477722, 0.906749427318573, 0.9095231890678406, 0.9079381823539734, 0.9134856462478638, 0.9055606722831726, 0.9154669046401978, 0.9134856462478638, 0.9120327830314636, 0.9158631563186646], "val_loss": [2.038675546646118, 1.5163263082504272, 1.0507920980453491, 0.8453522324562073, 0.7507486343383789, 0.6962761878967285, 0.6472132802009583, 0.6137797832489014, 0.5881499648094177, 0.5612889528274536, 0.5467371344566345, 0.5289850831031799, 0.5191261172294617, 0.5027399063110352, 0.4956398904323578, 0.4846225678920746, 0.4734959006309509, 0.466592937707901, 0.45185238122940063, 0.4453650712966919, 0.43736135959625244, 0.4351573586463928, 0.42924442887306213, 0.42112019658088684, 0.4150313436985016, 0.41610240936279297, 0.40394410490989685, 0.40612247586250305, 0.40322962403297424, 0.3919220268726349, 0.3911406993865967, 0.39329737424850464, 0.38205957412719727, 0.38208556175231934, 0.3829348087310791, 0.37376099824905396, 0.374300092458725, 0.3711793124675751, 0.36698782444000244, 0.38181641697883606, 0.364203542470932, 0.364850252866745, 0.36041757464408875, 0.3570348024368286, 0.3654150068759918, 0.35167306661605835, 0.35199618339538574, 0.3462560176849365, 0.35265642404556274, 0.348329097032547, 0.34052136540412903, 0.34382864832878113, 0.35141661763191223, 0.3399040997028351, 0.340214341878891, 0.3354223966598511, 0.3379143476486206, 0.33914583921432495, 0.3337423503398895, 0.33086097240448, 0.3269769251346588, 0.33601120114326477, 0.3342660963535309, 0.329458624124527, 0.32880884408950806, 0.32827064394950867, 0.3264707028865814, 0.3241996169090271, 0.3263587951660156, 0.3256745934486389, 0.3321380019187927], "val_accuracy": [0.5249999761581421, 0.6423333287239075, 0.6816666722297668, 0.7059999704360962, 0.7319999933242798, 0.7480000257492065, 0.7680000066757202, 0.7789999842643738, 0.7883333563804626, 0.7946666479110718, 0.7979999780654907, 0.8083333373069763, 0.8130000233650208, 0.8173333406448364, 0.8153333067893982, 0.8216666579246521, 0.82833331823349, 0.8253333568572998, 0.8333333134651184, 0.8356666564941406, 0.8389999866485596, 0.8426666855812073, 0.8410000205039978, 0.843666672706604, 0.8473333120346069, 0.8489999771118164, 0.8519999980926514, 0.8483333587646484, 0.8483333587646484, 0.8576666712760925, 0.8503333330154419, 0.8533333539962769, 0.8579999804496765, 0.8610000014305115, 0.8616666793823242, 0.8629999756813049, 0.8633333444595337, 0.8610000014305115, 0.8669999837875366, 0.8579999804496765, 0.8643333315849304, 0.8656666874885559, 0.8640000224113464, 0.8676666617393494, 0.8633333444595337, 0.8679999709129333, 0.8686666488647461, 0.8713333606719971, 0.8650000095367432, 0.8736666440963745, 0.8740000128746033, 0.8700000047683716, 0.8706666827201843, 0.8683333396911621, 0.8713333606719971, 0.874666690826416, 0.8740000128746033, 0.8713333606719971, 0.8740000128746033, 0.874666690826416, 0.8763333559036255, 0.8723333477973938, 0.8726666569709778, 0.878333330154419, 0.875, 0.8793333172798157, 0.8759999871253967, 0.8793333172798157, 0.8793333172798157, 0.8793333172798157, 0.8759999871253967]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 1], [0, 3, 0], [0, 3], [0], [1], [0], [2], [0]], "fitness": -0.8351428508758545, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5595011711120605, 0.896328330039978, 0.704045295715332, 0.6498348712921143, 0.6120198965072632, 0.6038597226142883, 0.6092891693115234, 0.5793219208717346, 0.5626129508018494, 0.5510773658752441, 0.5876482725143433, 0.6882439851760864, 0.6882596015930176], "accuracy": [0.47206446528434753, 0.6964733600616455, 0.7471932172775269, 0.7601373791694641, 0.7769119143486023, 0.7771760821342468, 0.7880068421363831, 0.802800178527832, 0.7989697456359863, 0.8041210174560547, 0.8001585006713867, 0.7792893648147583, 0.7808743715286255], "val_loss": [0.9468142986297607, 0.6846170425415039, 0.612475574016571, 0.5661700963973999, 0.5507996678352356, 0.5891904234886169, 0.5751874446868896, 0.5277591943740845, 0.5526703000068665, 0.5434576869010925, 0.6116601824760437, 0.6895333528518677, 0.5554318428039551], "val_accuracy": [0.6826666593551636, 0.7599999904632568, 0.7793333530426025, 0.7973333597183228, 0.7990000247955322, 0.8026666641235352, 0.8036666512489319, 0.8226666450500488, 0.8046666383743286, 0.8183333277702332, 0.8149999976158142, 0.800000011920929, 0.809333324432373]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 5], [0], [0], [0, 0, 0, 1, 1], [0, 1, 0], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8131428360939026, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2932662963867188, 2.1876754760742188, 1.764042854309082, 1.3680055141448975, 1.0642002820968628, 0.9259613156318665, 0.8229691982269287, 0.819965124130249, 0.7511768341064453, 0.7262144088745117, 0.6959756016731262, 0.6717349290847778, 0.6379579305648804, 0.6096493601799011, 0.6006567478179932, 0.5753132104873657, 0.5613062381744385, 0.5526106357574463, 0.5531418323516846, 0.5373808741569519, 0.5173605680465698, 0.5111663341522217, 0.5089575052261353, 0.49544864892959595, 0.49055078625679016, 0.48258501291275024, 0.48282521963119507, 0.4662768840789795, 0.45157650113105774, 0.4375026226043701, 0.4274474084377289, 0.41572070121765137, 0.42389971017837524, 0.4164517819881439, 0.405097633600235, 0.3896889090538025, 0.3830643594264984, 0.38169777393341064, 0.37490445375442505, 0.3762919008731842, 0.36214345693588257, 0.3578272759914398, 0.35464251041412354, 0.3482063412666321, 0.3472929298877716, 0.341373085975647, 0.3204403519630432, 0.33473384380340576, 0.3266197144985199], "accuracy": [0.12521463632583618, 0.3295469582080841, 0.4345529079437256, 0.5369172096252441, 0.6321489810943604, 0.6577730774879456, 0.6880200505256653, 0.7016246318817139, 0.7003037929534912, 0.7154933214187622, 0.7372870445251465, 0.7316074371337891, 0.7506273984909058, 0.7585523724555969, 0.7586844563484192, 0.7800818681716919, 0.780610203742981, 0.7769119143486023, 0.7852331399917603, 0.789459764957428, 0.7965922355651855, 0.7981772422790527, 0.8009510040283203, 0.8058380484580994, 0.8061022162437439, 0.8117818236351013, 0.8132346868515015, 0.8132346868515015, 0.8207634687423706, 0.833179235458374, 0.8302733898162842, 0.8396512866020203, 0.8350284099578857, 0.8388587832450867, 0.8475762605667114, 0.8498216867446899, 0.8514066934585571, 0.8504821062088013, 0.8555012345314026, 0.8585391640663147, 0.8617091774940491, 0.8549728989601135, 0.8664641380310059, 0.8660678863525391, 0.8617091774940491, 0.8668603897094727, 0.874389111995697, 0.8692378997802734, 0.8689737319946289], "val_loss": [2.2466351985931396, 2.0184926986694336, 1.1342732906341553, 0.9288370609283447, 0.7938241958618164, 0.7203414440155029, 0.6732813119888306, 0.6507517695426941, 0.6499863862991333, 0.6279211044311523, 0.5973209738731384, 0.5703399777412415, 0.5514000058174133, 0.5339085459709167, 0.5270541906356812, 0.5211288928985596, 0.5168200731277466, 0.5211792588233948, 0.5090550184249878, 0.5040378570556641, 0.5016270279884338, 0.5073226690292358, 0.49281713366508484, 0.48943179845809937, 0.4870668649673462, 0.4758906364440918, 0.47628921270370483, 0.4777171313762665, 0.46855103969573975, 0.47331860661506653, 0.46398958563804626, 0.4503563344478607, 0.44968563318252563, 0.46218881011009216, 0.4527985453605652, 0.43983399868011475, 0.4492260813713074, 0.44653093814849854, 0.45119544863700867, 0.45590323209762573, 0.4439905881881714, 0.435965359210968, 0.44254133105278015, 0.434893399477005, 0.4295254051685333, 0.42202702164649963, 0.4396289885044098, 0.45473194122314453, 0.4398401379585266], "val_accuracy": [0.421999990940094, 0.45133334398269653, 0.6523333191871643, 0.6643333435058594, 0.6996666789054871, 0.7239999771118164, 0.7403333187103271, 0.7443333268165588, 0.7536666393280029, 0.753000020980835, 0.7680000066757202, 0.7710000276565552, 0.7816666960716248, 0.8059999942779541, 0.8033333420753479, 0.7973333597183228, 0.8080000281333923, 0.8113333582878113, 0.8063333630561829, 0.809333324432373, 0.8149999976158142, 0.8203333616256714, 0.8199999928474426, 0.8209999799728394, 0.8233333230018616, 0.8253333568572998, 0.8286666870117188, 0.8173333406448364, 0.8376666903495789, 0.8383333086967468, 0.8429999947547913, 0.8479999899864197, 0.8463333249092102, 0.8483333587646484, 0.8503333330154419, 0.8503333330154419, 0.8496666550636292, 0.8506666421890259, 0.8546666502952576, 0.8550000190734863, 0.8603333234786987, 0.8583333492279053, 0.8550000190734863, 0.8613333106040955, 0.8560000061988831, 0.859333336353302, 0.8573333621025085, 0.8450000286102295, 0.8546666502952576]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 5, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 8], [0, 1], [0], [0], [99], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 64, 96, 99, 50, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 10, 6, 4, 2, 2, 1, 1, 1, 14, 7, 7, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [9, 2, 3, 0, 3], [0, 1, 1, 2], [39, 27], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 1, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 1, 0, 0, 3, 1, 2, 0], [16, 99, 43, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.30349063873291, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 9, 3, 1, 3], [0, 0, 1, 0, 0], [39, 39, 32], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 4, 6, 0, 2, 9], [0, 2, 0, 3], [51, 17], [1, 0], [0], [0], [99], [0, 1], [0], [1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 6, 3, 3, 2, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.divide_no_nan(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), beta), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [57466956.0, 8620324864.0, 146920734720.0, 1033788456960.0, 4546972090368.0, 15253712666624.0], "accuracy": [0.09655263274908066, 0.09734513610601425, 0.09932637959718704, 0.09985470771789551, 0.1022322028875351, 0.09615638852119446], "val_loss": [584685120.0, 31511494656.0, 338210095104.0, 1843790479360.0, 6906299023360.0, 20371604504576.0], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [0, 1, 6, 1, 8, 9], [0, 1, 0, 2], [39, 39, 19], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 7, 7, 4, 8], [0, 4, 5, 2], [0], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0, 92, 50, 60, 7, 65]], "fitness": -0.09057142585515976, "mapping_values": [1, 4, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 20, 11, 9, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), sigma)))), tf.math.add(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [2.30989408493042, 2.3098514080047607, 2.3101463317871094, 2.309951066970825, 2.3105719089508057, 2.30999755859375], "accuracy": [0.08994849026203156, 0.09179764986038208, 0.08770307898521423, 0.09272222965955734, 0.09126931428909302, 0.09232597798109055], "val_loss": [2.307887315750122, 2.307887315750122, 2.307887315750122, 2.307887315750122, 2.307887315750122, 2.307887315750122], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]