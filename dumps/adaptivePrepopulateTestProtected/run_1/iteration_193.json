[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 1], [0, 5, 0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8608571290969849, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293079376220703, 2.193284511566162, 1.7899994850158691, 1.332122564315796, 1.0710155963897705, 0.9255841970443726, 0.8611889481544495, 0.8117566704750061, 0.775712251663208, 0.7395055890083313, 0.7010525465011597, 0.69443678855896, 0.6583462953567505, 0.6242588758468628, 0.6149534583091736, 0.5884566903114319, 0.58810955286026, 0.5711386799812317, 0.5548660159111023, 0.5450921654701233, 0.5433319807052612, 0.5194527506828308, 0.5178889036178589, 0.5036417841911316, 0.48970240354537964, 0.4779824912548065, 0.4646380841732025, 0.4594214856624603, 0.45922431349754333, 0.4467957615852356, 0.429090678691864, 0.4223227798938751, 0.41439807415008545, 0.40335193276405334, 0.40335142612457275, 0.40011870861053467, 0.3790893852710724, 0.37443503737449646, 0.35675594210624695, 0.3620379567146301, 0.3472784161567688, 0.3514893054962158, 0.349901407957077, 0.34871500730514526, 0.3455284535884857, 0.3379181921482086], "accuracy": [0.12772421538829803, 0.3217540681362152, 0.42226919531822205, 0.542728841304779, 0.6320168972015381, 0.652621865272522, 0.6926429867744446, 0.7010962963104248, 0.7018887996673584, 0.7152291536331177, 0.737947404384613, 0.7353057861328125, 0.7467969655990601, 0.7648923397064209, 0.7695152759552002, 0.7745344042778015, 0.7751948237419128, 0.7882710099220276, 0.7893276810646057, 0.7967243194580078, 0.7946110367774963, 0.8054417967796326, 0.8072909712791443, 0.8098005652427673, 0.81112140417099, 0.8255184292793274, 0.8260467648506165, 0.8241975903511047, 0.8235371708869934, 0.8314621448516846, 0.8381983637809753, 0.8348963260650635, 0.8421608805656433, 0.8462554216384888, 0.845859169960022, 0.8506141901016235, 0.8553691506385803, 0.8618412613868713, 0.860652506351471, 0.8627657890319824, 0.8648791313171387, 0.8672566413879395, 0.8623695969581604, 0.8656716346740723, 0.8685774803161621, 0.8693699836730957], "val_loss": [2.2471094131469727, 2.0306475162506104, 1.155599594116211, 0.8425227999687195, 0.7607949376106262, 0.6991768479347229, 0.682799220085144, 0.6496859788894653, 0.6428561806678772, 0.5982790589332581, 0.5755721926689148, 0.567656397819519, 0.5517300367355347, 0.5396230220794678, 0.5162092447280884, 0.5110915303230286, 0.5057973861694336, 0.5181980133056641, 0.49818339943885803, 0.4915353059768677, 0.4917808473110199, 0.4988909363746643, 0.4685841500759125, 0.4666096270084381, 0.45554277300834656, 0.4704402685165405, 0.4574311077594757, 0.4512992799282074, 0.4512227475643158, 0.43933606147766113, 0.43282732367515564, 0.43279582262039185, 0.42974016070365906, 0.40992823243141174, 0.4082409143447876, 0.4070686995983124, 0.4133723974227905, 0.41290226578712463, 0.4031398892402649, 0.40807202458381653, 0.39936012029647827, 0.4032672941684723, 0.42263948917388916, 0.41790324449539185, 0.4088875353336334, 0.4048524498939514], "val_accuracy": [0.4230000078678131, 0.4726666808128357, 0.656333327293396, 0.703000009059906, 0.7193333506584167, 0.7400000095367432, 0.7406666874885559, 0.7386666536331177, 0.7593333125114441, 0.7699999809265137, 0.7786666750907898, 0.7866666913032532, 0.7876666784286499, 0.7900000214576721, 0.8009999990463257, 0.7990000247955322, 0.8059999942779541, 0.8053333163261414, 0.8130000233650208, 0.8169999718666077, 0.8169999718666077, 0.8193333148956299, 0.8243333101272583, 0.8296666741371155, 0.8330000042915344, 0.8353333473205566, 0.8333333134651184, 0.8370000123977661, 0.8353333473205566, 0.8386666774749756, 0.8420000076293945, 0.8426666855812073, 0.8463333249092102, 0.8550000190734863, 0.8529999852180481, 0.8506666421890259, 0.8550000190734863, 0.8569999933242798, 0.859666645526886, 0.862666666507721, 0.8669999837875366, 0.8643333315849304, 0.8586666584014893, 0.8643333315849304, 0.862333357334137, 0.8619999885559082]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 4, 3, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8602856993675232, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.225329637527466, 1.876301646232605, 1.4086428880691528, 1.1001603603363037, 0.9531140327453613, 0.8551100492477417, 0.7890990972518921, 0.7469688057899475, 0.7045667171478271, 0.6698218584060669, 0.6385151147842407, 0.6202840209007263, 0.6082003116607666, 0.5849014520645142, 0.5695855021476746, 0.5592197775840759, 0.5355740785598755, 0.5272731781005859, 0.5109112858772278, 0.5092395544052124, 0.4953523278236389, 0.4848059117794037, 0.47846224904060364, 0.4742351770401001, 0.45805567502975464, 0.4497915506362915, 0.4430520236492157, 0.4376530945301056, 0.4285735785961151, 0.4178028106689453, 0.40688538551330566, 0.40785089135169983, 0.40356698632240295, 0.395880788564682, 0.3907483220100403, 0.3911861181259155, 0.38578683137893677, 0.38183677196502686, 0.37024495005607605, 0.36456212401390076, 0.3563053607940674, 0.3544602692127228, 0.3592754006385803, 0.3445001244544983, 0.3404311537742615, 0.33912354707717896, 0.33285441994667053, 0.31934288144111633, 0.3209904432296753, 0.3105359971523285, 0.32594555616378784, 0.3119335472583771, 0.30424389243125916, 0.30313563346862793, 0.293276309967041, 0.29355156421661377, 0.28073740005493164, 0.28472664952278137, 0.2783331573009491, 0.2810179591178894, 0.2692410349845886, 0.2670305073261261, 0.26291099190711975, 0.263687402009964, 0.25282537937164307, 0.25356218218803406, 0.24387267231941223, 0.24799057841300964], "accuracy": [0.275260865688324, 0.486989825963974, 0.5591071248054504, 0.618280291557312, 0.6626601219177246, 0.695813000202179, 0.720380425453186, 0.7327961921691895, 0.7454761862754822, 0.7547219395637512, 0.7691190242767334, 0.7730814814567566, 0.7796856164932251, 0.7884030938148499, 0.7961959838867188, 0.7972526550292969, 0.8020076751708984, 0.8086118102073669, 0.8207634687423706, 0.8189142942428589, 0.8252542614936829, 0.8277638554573059, 0.8313300609588623, 0.8301413059234619, 0.8363492488861084, 0.8407079577445984, 0.8396512866020203, 0.8438779711723328, 0.8507462739944458, 0.8486329317092896, 0.8557654023170471, 0.8527275323867798, 0.8548408150672913, 0.8588033318519592, 0.8582749962806702, 0.8622375130653381, 0.859199583530426, 0.8609166741371155, 0.8679170608520508, 0.8697662353515625, 0.8753136992454529, 0.8720116019248962, 0.8710870146751404, 0.8735966086387634, 0.8782195448875427, 0.8766345381736755, 0.8780874609947205, 0.8853520154953003, 0.8842953443527222, 0.8885219693183899, 0.8799365758895874, 0.8889182209968567, 0.8908994793891907, 0.8907673954963684, 0.8948619961738586, 0.8951261639595032, 0.8990886211395264, 0.8982961177825928, 0.898428201675415, 0.8961827754974365, 0.9012019634246826, 0.8996169567108154, 0.9015982151031494, 0.9014661312103271, 0.9101836085319519, 0.9055606722831726, 0.9099194407463074, 0.9078060984611511], "val_loss": [2.043255090713501, 1.5199790000915527, 1.0492870807647705, 0.8468073606491089, 0.7495905756950378, 0.69733065366745, 0.6528903841972351, 0.6180465817451477, 0.5957278609275818, 0.5785953998565674, 0.5542601943016052, 0.5416087508201599, 0.5302579998970032, 0.5175930857658386, 0.5053052306175232, 0.49870866537094116, 0.48664557933807373, 0.4819890856742859, 0.4723112881183624, 0.46290019154548645, 0.45788922905921936, 0.44540607929229736, 0.44622883200645447, 0.4384503662586212, 0.4348645806312561, 0.42776644229888916, 0.420950323343277, 0.41594603657722473, 0.41412344574928284, 0.41046497225761414, 0.4074254035949707, 0.40412354469299316, 0.39700037240982056, 0.3963322639465332, 0.3980391323566437, 0.3915686309337616, 0.3927411437034607, 0.38899362087249756, 0.38312122225761414, 0.38286831974983215, 0.38011813163757324, 0.38028809428215027, 0.37402409315109253, 0.37250828742980957, 0.3681308329105377, 0.3708430528640747, 0.3655908703804016, 0.36608371138572693, 0.36131322383880615, 0.37019896507263184, 0.3772939145565033, 0.35846662521362305, 0.36497005820274353, 0.3519227206707001, 0.35463955998420715, 0.36103442311286926, 0.3487435281276703, 0.349580317735672, 0.35001468658447266, 0.3469075858592987, 0.34880736470222473, 0.3451877534389496, 0.3504009544849396, 0.3486793339252472, 0.3445051610469818, 0.3463406562805176, 0.34571290016174316, 0.3439134955406189], "val_accuracy": [0.562666654586792, 0.671999990940094, 0.687333345413208, 0.7153333425521851, 0.7440000176429749, 0.7536666393280029, 0.7763333320617676, 0.7886666655540466, 0.7870000004768372, 0.8026666641235352, 0.8063333630561829, 0.8106666803359985, 0.8166666626930237, 0.8233333230018616, 0.8259999752044678, 0.8253333568572998, 0.8330000042915344, 0.8289999961853027, 0.8370000123977661, 0.8396666646003723, 0.8363333344459534, 0.847000002861023, 0.8443333506584167, 0.846666693687439, 0.8463333249092102, 0.8493333458900452, 0.8519999980926514, 0.8533333539962769, 0.8516666889190674, 0.8569999933242798, 0.8576666712760925, 0.8603333234786987, 0.8619999885559082, 0.8616666793823242, 0.8616666793823242, 0.8643333315849304, 0.8650000095367432, 0.8646666407585144, 0.8646666407585144, 0.862666666507721, 0.8666666746139526, 0.8669999837875366, 0.8686666488647461, 0.871666669845581, 0.8726666569709778, 0.8713333606719971, 0.8706666827201843, 0.8730000257492065, 0.8736666440963745, 0.8669999837875366, 0.8669999837875366, 0.875, 0.875333309173584, 0.8773333430290222, 0.8763333559036255, 0.8763333559036255, 0.875333309173584, 0.8793333172798157, 0.8769999742507935, 0.8803333044052124, 0.8793333172798157, 0.8816666603088379, 0.8840000033378601, 0.8793333172798157, 0.8836666941642761, 0.8806666731834412, 0.8840000033378601, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 4], [0, 1], [0], [1], [0], [2], [0]], "fitness": -0.8291428685188293, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.551125407218933, 0.9207687377929688, 0.7236716747283936, 0.6509048342704773, 0.5906766057014465, 0.5924016237258911, 0.5558419227600098, 0.49813932180404663, 0.49994954466819763, 0.4677146077156067, 0.44603967666625977, 0.41117700934410095, 0.4193364679813385, 0.42978039383888245, 0.42623141407966614, 0.4167146384716034, 0.3916342556476593, 0.43654969334602356, 0.4432881772518158, 0.432318776845932, 0.43071913719177246, 0.46955087780952454, 0.48236018419265747, 0.4455791413784027, 0.4610818326473236, 0.506140947341919, 0.5263568758964539], "accuracy": [0.46189406514167786, 0.683000922203064, 0.7416457533836365, 0.7609298825263977, 0.778761088848114, 0.7860256433486938, 0.804649293422699, 0.817461371421814, 0.8235371708869934, 0.8231409192085266, 0.8305375576019287, 0.8490291833877563, 0.8510104417800903, 0.8533879518508911, 0.8519350290298462, 0.8570862412452698, 0.8564258217811584, 0.867520809173584, 0.8442742228507996, 0.8479725122451782, 0.8597279191017151, 0.8453308939933777, 0.8401796221733093, 0.8514066934585571, 0.8475762605667114, 0.8527275323867798, 0.822348415851593], "val_loss": [1.0149040222167969, 0.6580544114112854, 0.6098017692565918, 0.5551638007164001, 0.5513980388641357, 0.54742431640625, 0.5368751883506775, 0.5184734463691711, 0.5318812727928162, 0.5127166509628296, 0.5261856317520142, 0.573235273361206, 0.541839599609375, 0.5542265772819519, 0.5386667251586914, 0.526687502861023, 0.5583603382110596, 0.54257732629776, 0.5575205087661743, 0.5584346055984497, 0.5488492250442505, 0.5663403868675232, 0.6816587448120117, 0.5856983065605164, 0.7168102860450745, 0.5719592571258545, 0.6518092155456543], "val_accuracy": [0.5770000219345093, 0.7609999775886536, 0.778333306312561, 0.7816666960716248, 0.7956666946411133, 0.7956666946411133, 0.8136666417121887, 0.8086666464805603, 0.8153333067893982, 0.8209999799728394, 0.8253333568572998, 0.8243333101272583, 0.8199999928474426, 0.8276666402816772, 0.8370000123977661, 0.8393333554267883, 0.8476666808128357, 0.8416666388511658, 0.8333333134651184, 0.8366666436195374, 0.8363333344459534, 0.8510000109672546, 0.8503333330154419, 0.8353333473205566, 0.8396666646003723, 0.8309999704360962, 0.8316666483879089]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [0, 1, 0, 2], [39, 23], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 6, 3, 6, 8, 8, 2, 1, 4, 0, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 34, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma)), tf.math.add(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), sigma)), alpha))))", "other_info": {"loss": [2.303142547607422, 2.302581310272217, 2.302579402923584, 2.3025827407836914, 2.302579164505005, 2.3025808334350586, 2.3025784492492676, 2.3025784492492676, 2.302576780319214, 2.3025736808776855, 2.3025777339935303, 2.3025765419006348, 2.3025729656219482], "accuracy": [0.10421344637870789, 0.10711926966905594, 0.09998679161071777, 0.09998679161071777, 0.10355303436517715, 0.09813763201236725, 0.09998679161071777, 0.10698718577623367, 0.10421344637870789, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025848865509033, 2.302586555480957, 2.3025875091552734, 2.3025853633880615, 2.302583932876587, 2.302582263946533, 2.3025829792022705, 2.3025786876678467, 2.3025808334350586, 2.302586317062378, 2.302582025527954, 2.302576780319214, 2.3025803565979004], "val_accuracy": [0.10000000149011612, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.10233332961797714, 0.10000000149011612, 0.10000000149011612, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}, "mapping_values": [1, 9, 5, 4, 2, 9, 5, 4, 2, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 16}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 4, 2, 0, 3], [2, 1, 0, 2, 0], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 8, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 0, 3, 6, 8, 9, 4, 1, 4, 2, 8], [0, 0, 4, 3, 4, 0, 3, 1, 2, 0], [16, 99, 75, 99, 61, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 9, 5, 4, 2, 2, 1, 1, 1, 15, 9, 6, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.add(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), grad), tf.math.pow(sigma, grad))))), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09325055778026581, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 2, 0, 3, 3], [0, 1, 0, 2, 3], [83, 99, 27], [0, 1], [0, 2, 3, 0, 3, 5], [0], [61], [0, 0, 0, 0, 0, 1, 1], [0, 7, 9, 4, 0], [0, 1], [0, 27], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [5, 7, 7, 6, 5, 5, 7, 9, 9], [1, 6, 4, 1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 2, 1, 1, 1, 7, 5, 2, 2, 12, 9, 3, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.square(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), grad)), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.304948091506958, 2.303692579269409, 2.3041491508483887, 2.3040950298309326, 2.3036887645721436, 2.3041341304779053], "accuracy": [0.09668471664190292, 0.0944393053650856, 0.09826971590518951, 0.09457138925790787, 0.1002509593963623, 0.09219389408826828], "val_loss": [2.3026039600372314, 2.303745985031128, 2.3031694889068604, 2.3034892082214355, 2.3033363819122314, 2.3030078411102295], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.09966666996479034, 0.10366666316986084, 0.09366666525602341, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 2, 8, 1, 4, 4, 9], [0, 1, 2, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [5], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 3, 6, 8, 1, 4, 1, 1, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 0, 0], [16, 99, 96, 99, 61, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.math.pow(grad, tf.math.pow(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]