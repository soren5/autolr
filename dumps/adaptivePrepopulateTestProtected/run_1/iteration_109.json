[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8582857251167297, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2204527854919434, 1.8661905527114868, 1.3876023292541504, 1.0921257734298706, 0.9266822338104248, 0.8186116218566895, 0.7549801468849182, 0.7157596945762634, 0.6745761632919312, 0.658672571182251, 0.6200481057167053, 0.5944300889968872, 0.5798505544662476, 0.5676051378250122, 0.5462399125099182, 0.5298604369163513, 0.5226529240608215, 0.5016645789146423, 0.4937642216682434, 0.48632746934890747, 0.4789348244667053, 0.4652915894985199, 0.44973596930503845, 0.4457654356956482, 0.438495397567749, 0.42522668838500977, 0.42160096764564514, 0.4142877757549286, 0.41247057914733887, 0.40623295307159424, 0.3922951817512512, 0.38900065422058105, 0.3935248553752899, 0.3768065869808197, 0.37206587195396423, 0.3614824712276459, 0.35763293504714966, 0.35693347454071045, 0.35627859830856323, 0.3434047996997833, 0.3363087773323059, 0.3405722677707672], "accuracy": [0.2822612524032593, 0.49029189348220825, 0.5752212405204773, 0.6227710843086243, 0.6672830581665039, 0.7057191729545593, 0.7329282760620117, 0.7429665923118591, 0.7490423917770386, 0.7627789974212646, 0.7829877138137817, 0.7869502305984497, 0.7930260300636292, 0.7984414100646973, 0.8057059645652771, 0.8124422430992126, 0.8157442808151245, 0.8228767514228821, 0.8265751004219055, 0.8289526104927063, 0.8341038227081299, 0.8348963260650635, 0.8399154543876648, 0.8412362933158875, 0.8449346423149109, 0.8510104417800903, 0.8479725122451782, 0.850350022315979, 0.8556333184242249, 0.8599920868873596, 0.8607845902442932, 0.8621054291725159, 0.8588033318519592, 0.8651432991027832, 0.8692378997802734, 0.8770307898521423, 0.8704266548156738, 0.8693699836730957, 0.8704266548156738, 0.8787478804588318, 0.8792761564254761, 0.8786157965660095], "val_loss": [2.0368475914001465, 1.5164531469345093, 1.0527095794677734, 0.8468261957168579, 0.7572163939476013, 0.6987695097923279, 0.6473613977432251, 0.615000307559967, 0.5909295082092285, 0.5680150389671326, 0.548276424407959, 0.5335772037506104, 0.5176841616630554, 0.5065460801124573, 0.4962124824523926, 0.48374804854393005, 0.4790859520435333, 0.46431735157966614, 0.4570082128047943, 0.45198044180870056, 0.4417300522327423, 0.44088369607925415, 0.4318942725658417, 0.4277976453304291, 0.419170081615448, 0.4117535948753357, 0.4129331409931183, 0.4061017334461212, 0.4017396569252014, 0.4006727337837219, 0.39582565426826477, 0.3951132893562317, 0.38838744163513184, 0.38913387060165405, 0.3829241096973419, 0.37968578934669495, 0.3750651478767395, 0.37900444865226746, 0.3730716109275818, 0.3720172047615051, 0.37631404399871826, 0.3683796525001526], "val_accuracy": [0.5366666913032532, 0.6476666927337646, 0.6883333325386047, 0.7149999737739563, 0.7329999804496765, 0.7463333606719971, 0.7630000114440918, 0.7706666588783264, 0.7776666879653931, 0.7929999828338623, 0.8069999814033508, 0.8096666932106018, 0.8166666626930237, 0.8266666531562805, 0.8273333311080933, 0.8370000123977661, 0.8299999833106995, 0.8339999914169312, 0.8410000205039978, 0.843999981880188, 0.847000002861023, 0.8456666469573975, 0.8519999980926514, 0.8516666889190674, 0.8529999852180481, 0.8610000014305115, 0.8546666502952576, 0.862333357334137, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432, 0.8619999885559082, 0.8666666746139526, 0.8669999837875366, 0.8700000047683716, 0.8676666617393494, 0.8740000128746033, 0.871999979019165, 0.8723333477973938, 0.8706666827201843, 0.8693333268165588, 0.8736666440963745]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.834857165813446, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6100151538848877, 0.8485147356987, 0.6744300723075867, 0.6276983618736267, 0.575721800327301, 0.5441389083862305, 0.4937098026275635, 0.4966418147087097, 0.5295764803886414, 0.49985751509666443, 0.45427682995796204, 0.4585106670856476, 0.45505860447883606, 0.4366716742515564, 0.4313856363296509, 0.44691407680511475, 0.43218961358070374, 0.4316016137599945, 0.415313720703125, 0.4192243814468384, 0.4078587591648102, 0.4099564850330353, 0.4303531348705292, 0.4415128529071808, 0.47333404421806335, 0.45156675577163696, 0.44468215107917786], "accuracy": [0.47629112005233765, 0.6980583667755127, 0.7561748623847961, 0.7750627398490906, 0.7844406366348267, 0.8033285140991211, 0.8132346868515015, 0.8212917447090149, 0.8145555257797241, 0.8269713521003723, 0.832650899887085, 0.8356888294219971, 0.8424250483512878, 0.8461233377456665, 0.852331280708313, 0.842028796672821, 0.8543124794960022, 0.8471800088882446, 0.8469158411026001, 0.8625016212463379, 0.8558974862098694, 0.8549728989601135, 0.8577466607093811, 0.8518029451370239, 0.8363492488861084, 0.8520671129226685, 0.8543124794960022], "val_loss": [0.8674819469451904, 0.6237292289733887, 0.5621767640113831, 0.5278991460800171, 0.5033527612686157, 0.48200666904449463, 0.48589226603507996, 0.5277000069618225, 0.5362577438354492, 0.49107640981674194, 0.48687729239463806, 0.48506730794906616, 0.4949709475040436, 0.5281173586845398, 0.5153430104255676, 0.5294861197471619, 0.5427083373069763, 0.4754908084869385, 0.5249003767967224, 0.5291891098022461, 0.5360950827598572, 0.501473069190979, 0.5381839275360107, 0.5454243421554565, 0.6115880608558655, 0.5267333984375, 0.5138623714447021], "val_accuracy": [0.6880000233650208, 0.7549999952316284, 0.7820000052452087, 0.8016666769981384, 0.8143333196640015, 0.815666675567627, 0.8270000219345093, 0.8149999976158142, 0.8199999928474426, 0.8266666531562805, 0.8263333439826965, 0.8343333601951599, 0.8289999961853027, 0.8370000123977661, 0.8306666612625122, 0.8393333554267883, 0.8396666646003723, 0.8426666855812073, 0.8453333377838135, 0.8423333168029785, 0.8376666903495789, 0.8506666421890259, 0.8443333506584167, 0.831333339214325, 0.840666651725769, 0.8360000252723694, 0.8399999737739563]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.801714301109314, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2932586669921875, 2.189112901687622, 1.7676160335540771, 1.341145634651184, 1.0647538900375366, 0.9049725532531738, 0.8271259069442749, 0.8150164484977722, 0.7620266675949097, 0.7310971617698669, 0.7024005651473999, 0.6769381165504456, 0.6568995714187622, 0.6418651938438416, 0.6152805089950562, 0.6174322366714478, 0.6034218072891235, 0.5820929408073425, 0.5655072927474976, 0.5564852356910706, 0.547737717628479, 0.5564780831336975, 0.5452952980995178, 0.5213631391525269, 0.5091354846954346, 0.5015267133712769, 0.4923270344734192, 0.4773648977279663, 0.484205037355423, 0.4614700675010681, 0.44942182302474976, 0.4476608335971832, 0.44508761167526245, 0.4340125620365143, 0.4260709583759308, 0.42442023754119873, 0.4074726104736328, 0.40242627263069153, 0.4127693474292755, 0.40704345703125, 0.3813767731189728, 0.3910968005657196, 0.39490851759910583, 0.38485249876976013, 0.38575372099876404, 0.37160253524780273, 0.37666821479797363], "accuracy": [0.13498876988887787, 0.328490287065506, 0.4371945559978485, 0.5392946600914001, 0.6427156329154968, 0.6750759482383728, 0.6942279934883118, 0.7055870890617371, 0.7033417224884033, 0.7239466309547424, 0.739400327205658, 0.7363624572753906, 0.7465327978134155, 0.7547219395637512, 0.763967752456665, 0.7666094303131104, 0.7730814814567566, 0.7814027070999146, 0.7922335267066956, 0.7911768555641174, 0.7955356240272522, 0.785629391670227, 0.7913089394569397, 0.8006868362426758, 0.8053097128868103, 0.8115176558494568, 0.8133667707443237, 0.8220842480659485, 0.8208954930305481, 0.8240655064582825, 0.8286884427070618, 0.8285563588142395, 0.8317263126373291, 0.83119797706604, 0.8305375576019287, 0.8333113193511963, 0.8449346423149109, 0.8438779711723328, 0.843481719493866, 0.8392550349235535, 0.8487650156021118, 0.8492933511734009, 0.8450667262077332, 0.8494254350662231, 0.8549728989601135, 0.8601241707801819, 0.8594637513160706], "val_loss": [2.245879888534546, 2.017904043197632, 1.1499313116073608, 0.8884878754615784, 0.7540860772132874, 0.7026326656341553, 0.681688129901886, 0.6487354040145874, 0.6487843990325928, 0.6112295985221863, 0.5721735954284668, 0.5665425658226013, 0.5473829507827759, 0.5449218153953552, 0.5407043695449829, 0.5353931188583374, 0.5242781043052673, 0.5208472609519958, 0.5058109760284424, 0.5135305523872375, 0.5133289098739624, 0.5031954050064087, 0.4830748438835144, 0.4801899790763855, 0.46499010920524597, 0.4700271487236023, 0.4569067358970642, 0.4459216296672821, 0.4432121515274048, 0.44499343633651733, 0.4467070996761322, 0.43544885516166687, 0.4274081289768219, 0.4205996096134186, 0.41944316029548645, 0.41662874817848206, 0.4123627841472626, 0.41559138894081116, 0.4165816605091095, 0.4086059629917145, 0.40639203786849976, 0.4040931761264801, 0.38999301195144653, 0.394814133644104, 0.40504375100135803, 0.4119548201560974, 0.41833120584487915], "val_accuracy": [0.4436666667461395, 0.5, 0.6476666927337646, 0.6943333148956299, 0.734333336353302, 0.7450000047683716, 0.7426666617393494, 0.7639999985694885, 0.7620000243186951, 0.7706666588783264, 0.7793333530426025, 0.7873333096504211, 0.793666660785675, 0.793666660785675, 0.7983333468437195, 0.7943333387374878, 0.7956666946411133, 0.8080000281333923, 0.8116666674613953, 0.8083333373069763, 0.8116666674613953, 0.8106666803359985, 0.8169999718666077, 0.8216666579246521, 0.8346666693687439, 0.8206666707992554, 0.831333339214325, 0.8306666612625122, 0.8366666436195374, 0.840666651725769, 0.8356666564941406, 0.8416666388511658, 0.8370000123977661, 0.8403333425521851, 0.8473333120346069, 0.8513333201408386, 0.8519999980926514, 0.8503333330154419, 0.8420000076293945, 0.8516666889190674, 0.862333357334137, 0.862666666507721, 0.862666666507721, 0.8573333621025085, 0.8560000061988831, 0.8573333621025085, 0.8526666760444641]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 9, 3, 0, 3], [0, 0, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 0, 1], [2, 8], [0, 1], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [6, 3, 3, 8, 6, 1, 4, 4, 1, 2, 8, 4, 6, 2, 2, 2, 7, 8, 4, 0, 1, 9, 5, 9], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0, 0, 1, 3, 3, 4, 4], [16, 99, 96, 99, 61, 1, 82, 10]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 1, 4, 2, 2, 1, 40, 24, 16, 8], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(tf.math.subtract(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad), tf.math.pow(tf.math.divide_no_nan(sigma, alpha), tf.math.add(beta, tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha), sigma)))))), tf.math.sqrt(tf.math.pow(sigma, grad))))), tf.math.negative(tf.math.subtract(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [5, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 58], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 5, 1], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 6, 3, 3, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)))), alpha), tf.math.square(tf.math.subtract(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.310321807861328, 2.3116488456726074, 2.3104279041290283, 2.311336040496826, 2.310746908187866, 2.3103113174438477, 2.3100059032440186, 2.3102009296417236, 2.311544418334961, 2.311143636703491, 2.309814214706421, 1227.45751953125, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09113723784685135, 0.0886276587843895, 0.09945846349000931, 0.09377889335155487, 0.08994849026203156, 0.09232597798109055, 0.09391097724437714, 0.09100515395402908, 0.09285431355237961, 0.09060890227556229, 0.09166556596755981, 0.09153348207473755, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.309006452560425, 2.309009552001953, 2.309011459350586, 2.3090133666992188, 2.3090152740478516, 2.3090174198150635, 2.3090198040008545, 2.3090221881866455, 2.309025764465332, 2.309030771255493, 2.3090434074401855, 793413760.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.0949999988079071, 0.0949999988079071, 0.09566666930913925, 0.10166666656732559, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 3, 1, 3, 1], [0, 0, 1, 0, 2, 1], [83, 99, 29], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 4, 1, 2, 2, 5, 3, 0, 5, 3, 0, 0, 8, 7, 8], [0, 5, 1, 0, 2, 1, 1, 1], [0, 48], [0, 1], [0], [6], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.math.subtract(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), grad), alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(tf.math.add(tf.math.square(grad), tf.math.multiply(alpha, tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.negative(beta)))))), alpha), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10408136248588562, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}, "mapping_values": [1, 12, 6, 6, 3, 23, 15, 8, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 24}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [83, 99, 27], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [2, 8, 9, 1], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [1, 3, 3, 6, 8, 1, 5, 8, 4, 2, 8, 0], [0, 0, 0, 3, 0, 1, 3, 4, 2, 0], [0, 53, 66, 12, 77, 56]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 4, 3, 1, 2, 2, 1, 1, 1, 20, 12, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.sqrt(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(alpha, sigma), tf.math.sqrt(tf.math.negative(grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]