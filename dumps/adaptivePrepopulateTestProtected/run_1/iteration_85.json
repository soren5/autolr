[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8659999966621399, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2206597328186035, 1.85828697681427, 1.3902488946914673, 1.0894016027450562, 0.9195501208305359, 0.8207476735115051, 0.7681096792221069, 0.7175306081771851, 0.6818943619728088, 0.6480350494384766, 0.6283842921257019, 0.6062447428703308, 0.5877342820167542, 0.5666776895523071, 0.5594931840896606, 0.5450246334075928, 0.53403639793396, 0.5154547095298767, 0.5113117694854736, 0.49328047037124634, 0.48416194319725037, 0.477922260761261, 0.46852076053619385, 0.4557843804359436, 0.45607733726501465, 0.43889757990837097, 0.43107128143310547, 0.4187789857387543, 0.41472646594047546, 0.4115743041038513, 0.4043424427509308, 0.403433620929718, 0.3964511752128601, 0.3889705538749695, 0.38652846217155457, 0.3732111155986786, 0.3722876310348511, 0.36397698521614075, 0.3627048134803772, 0.3524458110332489, 0.34994035959243774, 0.34847623109817505, 0.3426744341850281, 0.33330172300338745, 0.33036988973617554, 0.32861459255218506, 0.3206506073474884, 0.3253761827945709, 0.3159969747066498, 0.31451907753944397, 0.3059568703174591, 0.2996974587440491, 0.3003189265727997, 0.2984103560447693, 0.2863135039806366, 0.2823917865753174, 0.2799161374568939, 0.281383216381073, 0.27386343479156494, 0.26596522331237793, 0.2617812752723694, 0.2610352039337158, 0.2559066712856293, 0.2475130707025528, 0.25413572788238525, 0.24937379360198975, 0.2450781911611557, 0.24533039331436157, 0.23471447825431824, 0.23351304233074188, 0.22820904850959778, 0.22856934368610382, 0.2186824530363083, 0.21597060561180115, 0.21615885198116302, 0.2111971527338028, 0.2051718384027481, 0.20614808797836304, 0.2040068805217743, 0.20955611765384674, 0.20144423842430115], "accuracy": [0.2794875204563141, 0.49108439683914185, 0.5608242154121399, 0.6165632009506226, 0.6699247360229492, 0.6993792057037354, 0.7253995537757874, 0.7430986762046814, 0.7553823590278625, 0.7611940503120422, 0.7717606425285339, 0.7810064554214478, 0.7902522683143616, 0.7910447716712952, 0.7961959838867188, 0.8010830879211426, 0.806630551815033, 0.8156121969223022, 0.8157442808151245, 0.8203672170639038, 0.8273676037788391, 0.8302733898162842, 0.828292191028595, 0.8310658931732178, 0.8404437899589539, 0.8437458872795105, 0.8453308939933777, 0.8479725122451782, 0.847840428352356, 0.852331280708313, 0.8560295701026917, 0.8595958352088928, 0.8564258217811584, 0.8597279191017151, 0.863558292388916, 0.8665962219238281, 0.8671245574951172, 0.8728041052818298, 0.872407853603363, 0.8726720213890076, 0.8722757697105408, 0.8757099509239197, 0.8757099509239197, 0.8772949576377869, 0.880729079246521, 0.8809932470321655, 0.8842953443527222, 0.8833707571029663, 0.8831065893173218, 0.8878615498542786, 0.8882578015327454, 0.8919561505317688, 0.894069492816925, 0.8934090733528137, 0.8960506916046143, 0.8990886211395264, 0.8967111110687256, 0.8986923694610596, 0.8997490406036377, 0.9010698795318604, 0.901862382888794, 0.9075419306755066, 0.9079381823539734, 0.9113723635673523, 0.9070135951042175, 0.9116365313529968, 0.9125610589981079, 0.9109761118888855, 0.9161273241043091, 0.9149385690689087, 0.9163914918899536, 0.9174481630325317, 0.9207502603530884, 0.9233918786048889, 0.9204860925674438, 0.921938955783844, 0.9241843819618225, 0.9248448014259338, 0.9235239624977112, 0.9215427041053772, 0.9261656403541565], "val_loss": [2.031360626220703, 1.5022997856140137, 1.0223627090454102, 0.805461585521698, 0.7092703580856323, 0.6495679616928101, 0.6026255488395691, 0.5769500136375427, 0.5478101968765259, 0.5284067988395691, 0.5102031230926514, 0.4941478371620178, 0.4799206852912903, 0.465336412191391, 0.46104735136032104, 0.45093777775764465, 0.4426203966140747, 0.4351428747177124, 0.4263741075992584, 0.41877758502960205, 0.4172498285770416, 0.4054688811302185, 0.40069156885147095, 0.3937802016735077, 0.3893020451068878, 0.38623425364494324, 0.38127657771110535, 0.37679722905158997, 0.3726351261138916, 0.36782771348953247, 0.3655061721801758, 0.3630731999874115, 0.35777750611305237, 0.35529589653015137, 0.35250550508499146, 0.3552834391593933, 0.3497507870197296, 0.3438008725643158, 0.34195467829704285, 0.34101730585098267, 0.33499109745025635, 0.33747681975364685, 0.3356468975543976, 0.337036669254303, 0.33092001080513, 0.3284119963645935, 0.33103010058403015, 0.324986070394516, 0.32301104068756104, 0.32203811407089233, 0.32153913378715515, 0.3201470673084259, 0.31606242060661316, 0.3180859088897705, 0.3121868073940277, 0.3180479109287262, 0.3187442123889923, 0.30893436074256897, 0.3105345368385315, 0.31228819489479065, 0.30767717957496643, 0.3078520596027374, 0.30722561478614807, 0.30626586079597473, 0.31034204363822937, 0.30375057458877563, 0.30444255471229553, 0.30366846919059753, 0.3001253008842468, 0.3000509738922119, 0.3016085922718048, 0.30270782113075256, 0.30143851041793823, 0.29884082078933716, 0.29528599977493286, 0.30069902539253235, 0.2982242703437805, 0.300271600484848, 0.3014879822731018, 0.2964598536491394, 0.2972652018070221], "val_accuracy": [0.5463333129882812, 0.6763333082199097, 0.699999988079071, 0.7283333539962769, 0.7476666569709778, 0.7666666507720947, 0.7786666750907898, 0.784333348274231, 0.7950000166893005, 0.8019999861717224, 0.8053333163261414, 0.8116666674613953, 0.8183333277702332, 0.8240000009536743, 0.8233333230018616, 0.8273333311080933, 0.8349999785423279, 0.8386666774749756, 0.8376666903495789, 0.847000002861023, 0.847000002861023, 0.8569999933242798, 0.8510000109672546, 0.8539999723434448, 0.859666645526886, 0.8550000190734863, 0.8606666922569275, 0.8640000224113464, 0.8629999756813049, 0.8610000014305115, 0.8659999966621399, 0.8676666617393494, 0.8683333396911621, 0.8659999966621399, 0.8679999709129333, 0.8713333606719971, 0.8763333559036255, 0.8786666393280029, 0.8766666650772095, 0.8769999742507935, 0.8759999871253967, 0.8763333559036255, 0.8803333044052124, 0.8796666860580444, 0.8786666393280029, 0.8799999952316284, 0.8826666474342346, 0.8816666603088379, 0.8880000114440918, 0.8846666812896729, 0.8849999904632568, 0.8856666684150696, 0.8853333592414856, 0.8889999985694885, 0.8870000243186951, 0.887333333492279, 0.8843333125114441, 0.890666663646698, 0.8889999985694885, 0.887666642665863, 0.890999972820282, 0.8913333415985107, 0.890999972820282, 0.8930000066757202, 0.8893333077430725, 0.8943333625793457, 0.8953333497047424, 0.8916666507720947, 0.8963333368301392, 0.8930000066757202, 0.8920000195503235, 0.8939999938011169, 0.8943333625793457, 0.8973333239555359, 0.8970000147819519, 0.8983333110809326, 0.8949999809265137, 0.8960000276565552, 0.8973333239555359, 0.8963333368301392, 0.8976666927337646]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 1, 1], [0, 7, 7, 3], [0, 5, 1, 6], [0], [1], [0], [2], [0]], "fitness": -0.8305714130401611, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.541487693786621, 0.8343116641044617, 0.6696872115135193, 0.6139849424362183, 0.5731967091560364, 0.5328333973884583, 0.5251171588897705, 0.5101525187492371, 0.4839823544025421, 0.4912773668766022, 0.48256081342697144, 0.48513463139533997, 0.4733242988586426, 0.4710961580276489, 0.49017879366874695, 0.501832127571106, 0.46830132603645325, 0.5244854688644409, 0.5403222441673279, 0.5369823575019836], "accuracy": [0.486989825963974, 0.7125874757766724, 0.7500990629196167, 0.7670056819915771, 0.7835160493850708, 0.7988376617431641, 0.8026680946350098, 0.8136309385299683, 0.8206313848495483, 0.8187822103500366, 0.8296129703521729, 0.8301413059234619, 0.8308017253875732, 0.837141752243042, 0.824329674243927, 0.8315942287445068, 0.8313300609588623, 0.8273676037788391, 0.8362171649932861, 0.8101968169212341], "val_loss": [0.9169716835021973, 0.6096721887588501, 0.550670862197876, 0.5166098475456238, 0.47612887620925903, 0.511379063129425, 0.509920060634613, 0.48433834314346313, 0.49503085017204285, 0.5125299096107483, 0.5078035593032837, 0.4810218811035156, 0.5077307820320129, 0.5211862921714783, 0.4764550030231476, 0.46592313051223755, 0.5749058723449707, 0.5733020305633545, 0.6257341504096985, 0.564906120300293], "val_accuracy": [0.7139999866485596, 0.7743333578109741, 0.7903333306312561, 0.8130000233650208, 0.8273333311080933, 0.8199999928474426, 0.8293333053588867, 0.8266666531562805, 0.8399999737739563, 0.8309999704360962, 0.8383333086967468, 0.8450000286102295, 0.8479999899864197, 0.8420000076293945, 0.8510000109672546, 0.8396666646003723, 0.8356666564941406, 0.8386666774749756, 0.8386666774749756, 0.8190000057220459]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1], [0, 0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8154285550117493, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293518304824829, 2.1912970542907715, 1.7820167541503906, 1.3378820419311523, 1.0826237201690674, 0.9099417924880981, 0.847313404083252, 0.8181130290031433, 0.772146999835968, 0.7395057678222656, 0.7120851278305054, 0.685837984085083, 0.6757854223251343, 0.6431534886360168, 0.6202405095100403, 0.6036951541900635, 0.5896729230880737, 0.5697044730186462, 0.5689452886581421, 0.5473832488059998, 0.5255663990974426, 0.5316525101661682, 0.5158469080924988, 0.4975515902042389, 0.4941190183162689, 0.49231651425361633, 0.47616279125213623, 0.4699532985687256, 0.45189619064331055, 0.46227994561195374, 0.44575923681259155, 0.4516841173171997, 0.43085023760795593, 0.4216557741165161, 0.41581350564956665, 0.415122926235199, 0.40578946471214294, 0.4014367163181305, 0.39121705293655396], "accuracy": [0.12455421686172485, 0.3295469582080841, 0.428609162569046, 0.5391625761985779, 0.6289790272712708, 0.6666226387023926, 0.6936996579170227, 0.6910579800605774, 0.7047945857048035, 0.7063795924186707, 0.7351737022399902, 0.7411174178123474, 0.7424382567405701, 0.7560427784919739, 0.7574957013130188, 0.7656848430633545, 0.7792893648147583, 0.7788931727409363, 0.7827235460281372, 0.7964601516723633, 0.7931581139564514, 0.7930260300636292, 0.8018755912780762, 0.8095363974571228, 0.8088759779930115, 0.8095363974571228, 0.819970965385437, 0.8234050869941711, 0.8249900937080383, 0.8193105459213257, 0.8232730031013489, 0.8190463781356812, 0.8318583965301514, 0.833179235458374, 0.8393871188163757, 0.8379341959953308, 0.8417646288871765, 0.8403117060661316, 0.8466516733169556], "val_loss": [2.248079538345337, 2.0289556980133057, 1.1596893072128296, 0.9212872982025146, 0.778413712978363, 0.7422844767570496, 0.6846632361412048, 0.6839582324028015, 0.644001841545105, 0.6329192519187927, 0.6079646944999695, 0.5843853950500488, 0.5608082413673401, 0.5515989065170288, 0.5402318239212036, 0.527594804763794, 0.5161002278327942, 0.5010412335395813, 0.48691534996032715, 0.4909808039665222, 0.4779462218284607, 0.47753214836120605, 0.46891528367996216, 0.459363728761673, 0.4586258828639984, 0.4522055983543396, 0.4502006769180298, 0.4381870925426483, 0.4398846924304962, 0.4395981431007385, 0.43093860149383545, 0.4280987083911896, 0.42424553632736206, 0.42530086636543274, 0.42342323064804077, 0.425212025642395, 0.427146315574646, 0.4203440845012665, 0.4249708652496338], "val_accuracy": [0.41600000858306885, 0.44566667079925537, 0.6359999775886536, 0.6859999895095825, 0.7120000123977661, 0.7136666774749756, 0.7393333315849304, 0.7416666746139526, 0.7543333172798157, 0.7563333511352539, 0.7649999856948853, 0.7756666541099548, 0.7903333306312561, 0.7903333306312561, 0.7846666574478149, 0.7943333387374878, 0.8023333549499512, 0.8143333196640015, 0.8153333067893982, 0.8180000185966492, 0.8213333487510681, 0.8176666498184204, 0.8216666579246521, 0.8346666693687439, 0.8323333263397217, 0.8360000252723694, 0.8320000171661377, 0.8429999947547913, 0.8356666564941406, 0.8366666436195374, 0.8456666469573975, 0.8456666469573975, 0.8483333587646484, 0.8536666631698608, 0.847000002861023, 0.846666693687439, 0.8476666808128357, 0.847000002861023, 0.8500000238418579]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [5, 1, 9, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [1, 1], [3], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.4975202083587646, 14.344948768615723, 117.67044830322266, 646.135498046875, 2588.271484375, 8561.53515625], "accuracy": [0.09470347315073013, 0.09840179979801178, 0.10540219396352768, 0.09945846349000931, 0.09998679161071777, 0.09774138033390045], "val_loss": [3.4783127307891846, 35.7398796081543, 235.9297637939453, 1113.0389404296875, 3987.725341796875, 11549.82421875], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}, "mapping_values": [1, 6, 4, 2, 3, 2, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 10}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [3, 2, 3, 0, 3], [0, 1, 0, 2, 3], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 2, 3, 0, 3, 5, 5, 8, 9], [0, 2, 0, 3], [54, 16, 19], [0, 0, 1], [0, 5], [0], [33], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 3, 6, 6, 1, 4, 1, 4, 2, 8, 8, 6, 5, 5, 6, 4, 6, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 0, 2, 2, 7, 3], [16, 99, 48, 99, 95, 1, 52]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad), tf.math.sqrt(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.sqrt(alpha))))), beta)), tf.math.divide_no_nan(tf.math.square(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), beta), beta))), tf.math.divide_no_nan(tf.math.negative(grad), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 10, 5, 5, 2, 13, 9, 4, 3, 3, 2, 1, 1, 34, 19, 15, 7], "tree_depth": 21}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0], [0, 1, 3, 1, 3], [0, 0, 3, 0, 2], [83, 99, 27], [1, 1], [0], [0], [0], [0, 1], [0], [0], [9], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [29250472.0, 2.7101635932922363, 2.4789090156555176, 2.5787105560302734, 2.6440913677215576, 2.4910356998443604], "accuracy": [0.09457138925790787, 0.09430722147226334, 0.10011887550354004, 0.09615638852119446, 0.10077928751707077, 0.10315678268671036], "val_loss": [2.7298965454101562, 2.6516053676605225, 2.6967926025390625, 2.588592529296875, 2.730743408203125, 2.597419500350952], "val_accuracy": [0.10533333569765091, 0.09833333641290665, 0.10100000351667404, 0.09966666996479034, 0.09833333641290665, 0.10100000351667404]}, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 10}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 2, 3, 0, 3], [0, 1, 0, 2], [39, 51], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 1, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [6, 3, 3, 6, 8, 1, 6, 6, 4, 2, 8, 6, 9], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 26, 95]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 9, 5, 4, 1, 2, 1, 1, 1, 23, 13, 10, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(sigma, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.sqrt(sigma))))), tf.math.divide_no_nan(alpha, beta))), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]