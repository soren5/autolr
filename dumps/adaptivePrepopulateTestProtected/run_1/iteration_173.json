[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8565714359283447, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221590280532837, 1.8629742860794067, 1.3852640390396118, 1.0992738008499146, 0.9407901167869568, 0.8323368430137634, 0.7756826281547546, 0.7363574504852295, 0.6913858652114868, 0.6590633392333984, 0.6432950496673584, 0.6171258091926575, 0.5955941677093506, 0.5812441110610962, 0.5708959102630615, 0.5454573035240173, 0.5430843830108643, 0.5211619138717651, 0.5131224989891052, 0.5053143501281738, 0.4903772473335266, 0.48843175172805786, 0.47129857540130615, 0.4623253643512726, 0.4596870243549347, 0.45302167534828186, 0.4435216188430786, 0.431261271238327, 0.4242326021194458, 0.41589099168777466, 0.40809366106987, 0.4024057686328888, 0.3992832601070404, 0.3959084451198578, 0.38920435309410095, 0.38350990414619446, 0.37093183398246765, 0.3694114089012146, 0.369838684797287, 0.35597679018974304, 0.3573414385318756, 0.34927594661712646, 0.3378702402114868, 0.34632498025894165, 0.3368077576160431, 0.3351185619831085, 0.3256390690803528, 0.32556524872779846, 0.3225589394569397, 0.3105277419090271, 0.306715190410614, 0.3034251034259796, 0.30150631070137024, 0.2917751967906952, 0.2957318425178528, 0.28516605496406555], "accuracy": [0.27882710099220276, 0.4934619069099426, 0.5665037631988525, 0.6124686598777771, 0.6660943031311035, 0.6995112895965576, 0.7169462442398071, 0.7331924438476562, 0.7428345084190369, 0.7626469135284424, 0.7646281719207764, 0.7754589915275574, 0.7812706232070923, 0.7897239327430725, 0.793950617313385, 0.8004226684570312, 0.7988376617431641, 0.8123101592063904, 0.8161405324935913, 0.8157442808151245, 0.8289526104927063, 0.8280280232429504, 0.8360850811004639, 0.8381983637809753, 0.8350284099578857, 0.8374059200286865, 0.8441421389579773, 0.8432175517082214, 0.8492933511734009, 0.8515387773513794, 0.8551049828529358, 0.8585391640663147, 0.8614450097084045, 0.8598600029945374, 0.8593316674232483, 0.8615770936012268, 0.8702945709228516, 0.8705587387084961, 0.8706908226013184, 0.8737286925315857, 0.8757099509239197, 0.8754457831382751, 0.8802007436752319, 0.8765024542808533, 0.8802007436752319, 0.8824461698532104, 0.8864086866378784, 0.8799365758895874, 0.883238673210144, 0.893541157245636, 0.8894465565681458, 0.8891823887825012, 0.8934090733528137, 0.8971073627471924, 0.8906353116035461, 0.8952582478523254], "val_loss": [2.0407111644744873, 1.5103001594543457, 1.036529779434204, 0.8288196325302124, 0.7394148707389832, 0.6832767128944397, 0.636768102645874, 0.6101459860801697, 0.5830157995223999, 0.5562764406204224, 0.5447331666946411, 0.5261686444282532, 0.5130372047424316, 0.5016095042228699, 0.4867681562900543, 0.4792027175426483, 0.4716261327266693, 0.45724251866340637, 0.45456433296203613, 0.4402408003807068, 0.43621015548706055, 0.43396249413490295, 0.4242687523365021, 0.42021581530570984, 0.42654475569725037, 0.4130503833293915, 0.4066837430000305, 0.40491893887519836, 0.397868812084198, 0.40134677290916443, 0.3945970833301544, 0.3891527056694031, 0.38782697916030884, 0.3822827935218811, 0.3825385868549347, 0.37842968106269836, 0.3793155252933502, 0.3699381649494171, 0.36872443556785583, 0.36469128727912903, 0.3665814697742462, 0.3661356568336487, 0.370347261428833, 0.3612675666809082, 0.3605298697948456, 0.35891059041023254, 0.36255237460136414, 0.35757210850715637, 0.3551565706729889, 0.3520122766494751, 0.35100579261779785, 0.3510873317718506, 0.34454894065856934, 0.3534069359302521, 0.34592878818511963, 0.3479946255683899], "val_accuracy": [0.5009999871253967, 0.6600000262260437, 0.6856666803359985, 0.7013333439826965, 0.7350000143051147, 0.7433333396911621, 0.7609999775886536, 0.768666684627533, 0.7743333578109741, 0.7886666655540466, 0.8006666898727417, 0.7990000247955322, 0.8050000071525574, 0.8209999799728394, 0.8226666450500488, 0.8220000267028809, 0.8366666436195374, 0.8346666693687439, 0.8383333086967468, 0.8413333296775818, 0.8429999947547913, 0.8389999866485596, 0.8510000109672546, 0.8496666550636292, 0.8413333296775818, 0.8529999852180481, 0.8536666631698608, 0.859666645526886, 0.8573333621025085, 0.8510000109672546, 0.8573333621025085, 0.8610000014305115, 0.8619999885559082, 0.862666666507721, 0.8643333315849304, 0.8643333315849304, 0.8656666874885559, 0.8643333315849304, 0.8656666874885559, 0.8643333315849304, 0.8676666617393494, 0.8676666617393494, 0.8669999837875366, 0.871999979019165, 0.8676666617393494, 0.871999979019165, 0.8723333477973938, 0.8690000176429749, 0.8696666955947876, 0.8756666779518127, 0.8763333559036255, 0.8756666779518127, 0.8756666779518127, 0.8723333477973938, 0.8713333606719971, 0.8763333559036255]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8554285764694214, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2932546138763428, 2.191328287124634, 1.7776429653167725, 1.3481431007385254, 1.0674177408218384, 0.9307220578193665, 0.8636184334754944, 0.8261878490447998, 0.786243200302124, 0.7552314400672913, 0.7015243172645569, 0.6822636723518372, 0.6684931516647339, 0.6365880966186523, 0.6113711595535278, 0.5928424000740051, 0.572438657283783, 0.5765069127082825, 0.5616683959960938, 0.5445159673690796, 0.5384678244590759, 0.5296615958213806, 0.510313868522644, 0.5077950954437256, 0.49310657382011414, 0.48692312836647034, 0.47472938895225525, 0.4677792489528656, 0.4585816562175751, 0.448019802570343, 0.43870240449905396, 0.4316159188747406, 0.4255072772502899, 0.42172637581825256, 0.41169583797454834, 0.406535804271698, 0.4158501923084259, 0.39192378520965576, 0.3939598798751831, 0.37876594066619873, 0.3696581721305847, 0.37843018770217896, 0.37688371539115906, 0.37363484501838684, 0.36418744921684265, 0.36376360058784485, 0.3566179573535919, 0.34637901186943054, 0.34316542744636536, 0.3442237675189972, 0.3273697793483734, 0.33426278829574585, 0.3349534571170807, 0.3246264159679413, 0.3213220536708832, 0.3197275996208191, 0.32436901330947876, 0.33128708600997925, 0.29776033759117126, 0.3056229054927826, 0.30277279019355774, 0.2985701262950897, 0.29284849762916565, 0.28728947043418884, 0.29147011041641235], "accuracy": [0.13247919082641602, 0.32267865538597107, 0.44208163022994995, 0.5396909117698669, 0.6395456194877625, 0.6613393425941467, 0.6866992712020874, 0.6952846646308899, 0.6950204968452454, 0.7108704447746277, 0.7378153204917908, 0.737022876739502, 0.7457403540611267, 0.7638356685638428, 0.7643640041351318, 0.7816668748855591, 0.7890635132789612, 0.7876105904579163, 0.7869502305984497, 0.7967243194580078, 0.7957997918128967, 0.7984414100646973, 0.8059701323509216, 0.8121780753135681, 0.8170651197433472, 0.8181217908859253, 0.8170651197433472, 0.8164047002792358, 0.8276317715644836, 0.8315942287445068, 0.8379341959953308, 0.8329150676727295, 0.8407079577445984, 0.8453308939933777, 0.8449346423149109, 0.8502179384231567, 0.8518029451370239, 0.852859616279602, 0.8525954484939575, 0.8618412613868713, 0.8651432991027832, 0.8595958352088928, 0.8631620407104492, 0.8609166741371155, 0.8639545440673828, 0.8639545440673828, 0.8665962219238281, 0.8687095642089844, 0.8737286925315857, 0.8754457831382751, 0.8765024542808533, 0.8696341514587402, 0.8693699836730957, 0.8754457831382751, 0.8780874609947205, 0.8778232932090759, 0.8817857503890991, 0.8805969953536987, 0.8885219693183899, 0.878351628780365, 0.8799365758895874, 0.8835028409957886, 0.8854840993881226, 0.8902390599250793, 0.8889182209968567], "val_loss": [2.246462821960449, 2.0223841667175293, 1.1330167055130005, 0.8546468615531921, 0.7645117044448853, 0.7231521606445312, 0.6671230792999268, 0.6363593935966492, 0.6245782971382141, 0.6109091639518738, 0.5803574919700623, 0.5609015226364136, 0.5339889526367188, 0.5104680061340332, 0.5113137364387512, 0.4956369996070862, 0.48543140292167664, 0.48199576139450073, 0.47753846645355225, 0.46110090613365173, 0.45769554376602173, 0.45548853278160095, 0.44634389877319336, 0.4427584111690521, 0.434081107378006, 0.4318837821483612, 0.441864013671875, 0.4351661801338196, 0.42602983117103577, 0.41548389196395874, 0.41446489095687866, 0.4120716154575348, 0.4014824330806732, 0.3928226828575134, 0.3868262469768524, 0.3805786967277527, 0.3896910548210144, 0.3765537440776825, 0.3766380548477173, 0.3749951124191284, 0.38765597343444824, 0.39182186126708984, 0.3806760609149933, 0.36971214413642883, 0.3724958598613739, 0.37145596742630005, 0.38341382145881653, 0.3872348666191101, 0.3864710330963135, 0.3737647235393524, 0.3698422908782959, 0.3596861958503723, 0.3812827467918396, 0.37950101494789124, 0.3984927535057068, 0.40647923946380615, 0.4274752140045166, 0.4275902211666107, 0.4037942588329315, 0.396720826625824, 0.4167987108230591, 0.4333154261112213, 0.4232608675956726, 0.44614338874816895, 0.44487646222114563], "val_accuracy": [0.4153333306312561, 0.4410000145435333, 0.6483333110809326, 0.6963333487510681, 0.7283333539962769, 0.7223333120346069, 0.7459999918937683, 0.7493333220481873, 0.7646666765213013, 0.7616666555404663, 0.7696666717529297, 0.777999997138977, 0.781000018119812, 0.7883333563804626, 0.7993333339691162, 0.7990000247955322, 0.8113333582878113, 0.8163333535194397, 0.8196666836738586, 0.8266666531562805, 0.828000009059906, 0.8240000009536743, 0.8286666870117188, 0.8276666402816772, 0.8330000042915344, 0.8363333344459534, 0.8330000042915344, 0.8416666388511658, 0.8399999737739563, 0.8396666646003723, 0.8373333215713501, 0.8443333506584167, 0.8536666631698608, 0.8519999980926514, 0.8523333072662354, 0.856333315372467, 0.8550000190734863, 0.8636666536331177, 0.859000027179718, 0.862666666507721, 0.8643333315849304, 0.8610000014305115, 0.862666666507721, 0.8646666407585144, 0.8659999966621399, 0.8646666407585144, 0.8613333106040955, 0.8643333315849304, 0.8650000095367432, 0.871999979019165, 0.8696666955947876, 0.871999979019165, 0.8679999709129333, 0.8756666779518127, 0.8733333349227905, 0.8693333268165588, 0.8763333559036255, 0.8763333559036255, 0.8723333477973938, 0.8773333430290222, 0.8700000047683716, 0.8616666793823242, 0.8706666827201843, 0.8646666407585144, 0.8683333396911621]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.843999981880188, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.538596749305725, 0.810051441192627, 0.7008062601089478, 0.6137294769287109, 0.5574420690536499, 0.5554574131965637, 0.5257539749145508, 0.4980506896972656, 0.4674360752105713, 0.4619138836860657, 0.4729995131492615, 0.476826012134552, 0.534146785736084, 0.512830376625061, 0.49493876099586487, 0.5023953318595886, 0.5144582390785217, 0.5490701198577881], "accuracy": [0.46691322326660156, 0.7172104120254517, 0.7446836829185486, 0.7755910754203796, 0.7961959838867188, 0.8049134612083435, 0.8125742673873901, 0.8203672170639038, 0.8327829837799072, 0.8308017253875732, 0.8272355198860168, 0.8358209133148193, 0.8397833704948425, 0.8259146809577942, 0.8257825970649719, 0.8354246616363525, 0.8370096683502197, 0.8264430165290833], "val_loss": [0.8209243416786194, 0.6114584803581238, 0.5726149678230286, 0.5088887214660645, 0.4601811170578003, 0.4793197512626648, 0.5258739590644836, 0.5097057223320007, 0.49002164602279663, 0.47507625818252563, 0.5206409692764282, 0.535608172416687, 0.5388292074203491, 0.5162079334259033, 0.5467544198036194, 0.5988382697105408, 0.5790327191352844, 0.5960966944694519], "val_accuracy": [0.7246666550636292, 0.7886666655540466, 0.7816666960716248, 0.8163333535194397, 0.8316666483879089, 0.8296666741371155, 0.8159999847412109, 0.8360000252723694, 0.8216666579246521, 0.8339999914169312, 0.8386666774749756, 0.8360000252723694, 0.8426666855812073, 0.8206666707992554, 0.8360000252723694, 0.840666651725769, 0.8303333520889282, 0.8253333568572998]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 1, 0, 2], [39, 39], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 75], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 8, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 27, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 1, 0, 1, 1, 2, 1, 1, 0, 11, 6, 5, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.640817403793335, 6.997283458709717, 18.66228675842285, 33.88002014160156, 65.22869873046875, 156.6779327392578], "accuracy": [0.09642054885625839, 0.09787346422672272, 0.1026284471154213, 0.10619468986988068, 0.1022322028875351, 0.09985470771789551], "val_loss": [3.303929090499878, 10.037096977233887, 15.11559009552002, 22.50056266784668, 62.19511795043945, 105.4245834350586], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.08866667002439499, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [2, 2, 0, 3], [16, 16], [0, 1, 1], [1], [1, 1], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [6, 3, 3, 6, 4, 1, 4, 1, 4, 2, 8, 1, 8, 1, 0, 7, 4, 2, 4, 2, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 4, 3, 3, 7, 7, 7, 0], [16, 99, 30, 99, 61, 1, 99, 29]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 3, 1, 2, 0, 38, 21, 17, 8], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(beta), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.subtract(alpha, tf.math.sqrt(beta))))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, sigma)), tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(sigma, tf.math.pow(grad, tf.math.add(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)))), grad), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 6, 3, 0, 3], [1, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [2, 2, 3, 0, 3, 5], [0, 0, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 5, 6, 6, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 3, 3, 4, 2, 3], [56, 99, 30, 99, 48, 7]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 1, 0, 1, 1, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma)), tf.math.subtract(sigma, grad))", "other_info": {"loss": [2.303691864013672, 2.3025946617126465, 2.3025941848754883, 2.3025941848754883, 2.3025941848754883, 2.3025941848754883], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.302560806274414, 2.3025612831115723, 2.302560806274414, 2.3025612831115723, 2.302560806274414, 2.302560806274414], "val_accuracy": [0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 2, 0, 3, 4, 1, 6, 9, 7, 4], [0, 1, 0, 0, 2, 1, 0, 3], [39, 39, 66, 71, 65], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [3, 2, 3, 0, 3, 1, 6, 5], [0, 2, 0, 3, 2, 0, 0], [16, 34, 10, 54], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 1, 8, 9, 4, 1, 4, 2, 8, 6, 7, 0, 4, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 18, 64, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 11, 8, 5, 15, 8, 7, 4, 2, 1, 1, 1, 26, 16, 10, 8], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.divide_no_nan(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.pow(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.multiply(tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.square(beta), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.subtract(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(sigma, alpha), beta)), tf.math.negative(tf.math.pow(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10460969805717468, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]