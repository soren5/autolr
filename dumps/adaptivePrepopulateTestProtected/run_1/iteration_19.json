[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223330497741699, 1.8670156002044678, 1.3935511112213135, 1.1012579202651978, 0.9477801322937012, 0.8379126191139221, 0.7764281630516052, 0.7235901951789856, 0.6839449405670166, 0.6511124968528748, 0.6340097188949585, 0.6069210171699524, 0.5817078948020935, 0.5635776519775391, 0.5524153113365173, 0.5367791652679443, 0.5212588906288147, 0.5178380608558655, 0.5019086003303528, 0.4879888892173767, 0.4858485460281372, 0.4747111201286316, 0.45951735973358154, 0.4532293975353241, 0.4492609202861786, 0.4330301284790039, 0.4310648441314697, 0.42051371932029724, 0.41327017545700073, 0.4060419201850891, 0.3997148871421814, 0.39729252457618713, 0.3869434893131256, 0.3869549036026001, 0.38186177611351013, 0.3692651391029358, 0.36346086859703064, 0.3634459972381592, 0.3600703179836273, 0.3489670753479004, 0.3429599404335022, 0.34309908747673035, 0.3401198089122772, 0.3303268253803253, 0.3301240801811218, 0.3276282846927643, 0.3180643618106842, 0.3136589229106903, 0.3090694546699524, 0.3071834146976471, 0.3011736273765564, 0.30332496762275696, 0.29351481795310974, 0.2937680780887604], "accuracy": [0.26680755615234375, 0.49451854825019836, 0.5679566860198975, 0.6209219098091125, 0.6646413803100586, 0.7078325152397156, 0.7234182953834534, 0.7387399077415466, 0.7541936039924622, 0.7672698497772217, 0.7677981853485107, 0.7820631265640259, 0.7897239327430725, 0.7977809906005859, 0.798309326171875, 0.8082155585289001, 0.8138951063156128, 0.8094043135643005, 0.822348415851593, 0.8269713521003723, 0.8208954930305481, 0.8310658931732178, 0.8350284099578857, 0.8367455005645752, 0.8368775844573975, 0.8444063067436218, 0.843481719493866, 0.850350022315979, 0.8502179384231567, 0.8570862412452698, 0.857218325138092, 0.8574824929237366, 0.8610487580299377, 0.8610487580299377, 0.8607845902442932, 0.8658037185668945, 0.8701624870300293, 0.8689737319946289, 0.8708229064941406, 0.8792761564254761, 0.8798044919967651, 0.8765024542808533, 0.8765024542808533, 0.8824461698532104, 0.880729079246521, 0.8844274282455444, 0.8838990926742554, 0.8887861371040344, 0.8878615498542786, 0.8903711438179016, 0.8924844861030579, 0.8912957310676575, 0.8976356983184814, 0.8960506916046143], "val_loss": [2.040694236755371, 1.5166728496551514, 1.045767068862915, 0.8421168327331543, 0.7569165229797363, 0.7011509537696838, 0.6573318839073181, 0.6179470419883728, 0.5908101201057434, 0.5737177133560181, 0.5541383624076843, 0.5365487933158875, 0.518412172794342, 0.5104728937149048, 0.49868762493133545, 0.485697478055954, 0.48461878299713135, 0.46694132685661316, 0.459992378950119, 0.44818419218063354, 0.45110249519348145, 0.4507465958595276, 0.4339507520198822, 0.4287099242210388, 0.42590731382369995, 0.4119842052459717, 0.4104468524456024, 0.4069807529449463, 0.40372517704963684, 0.3985708951950073, 0.3967111110687256, 0.39305025339126587, 0.39346253871917725, 0.3906964063644409, 0.3815464675426483, 0.3792845904827118, 0.37928369641304016, 0.3762374818325043, 0.37582898139953613, 0.37387406826019287, 0.3717586398124695, 0.36671704053878784, 0.363382488489151, 0.36401286721229553, 0.3619881868362427, 0.35666540265083313, 0.3588123917579651, 0.3541429042816162, 0.35232576727867126, 0.35342442989349365, 0.3524846136569977, 0.34847813844680786, 0.34814298152923584, 0.35015836358070374], "val_accuracy": [0.5323333144187927, 0.6446666717529297, 0.6756666898727417, 0.7043333053588867, 0.7239999771118164, 0.7493333220481873, 0.753000020980835, 0.7706666588783264, 0.7820000052452087, 0.7873333096504211, 0.7956666946411133, 0.800000011920929, 0.8136666417121887, 0.812666654586792, 0.8199999928474426, 0.824999988079071, 0.8246666789054871, 0.8326666951179504, 0.8303333520889282, 0.8376666903495789, 0.8333333134651184, 0.8343333601951599, 0.8446666598320007, 0.843666672706604, 0.846666693687439, 0.8513333201408386, 0.8546666502952576, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8529999852180481, 0.859333336353302, 0.8546666502952576, 0.8569999933242798, 0.8606666922569275, 0.8633333444595337, 0.8643333315849304, 0.8629999756813049, 0.8576666712760925, 0.8703333139419556, 0.8640000224113464, 0.8643333315849304, 0.8676666617393494, 0.8663333058357239, 0.8713333606719971, 0.871999979019165, 0.8693333268165588, 0.8693333268165588, 0.878000020980835, 0.8756666779518127, 0.8706666827201843, 0.8756666779518127, 0.8769999742507935, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8657143115997314, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2240984439849854, 1.8655058145523071, 1.3900970220565796, 1.0855014324188232, 0.9145185351371765, 0.8305869698524475, 0.7651897072792053, 0.7158618569374084, 0.6823663115501404, 0.6496617197990417, 0.625985860824585, 0.6003698706626892, 0.5844651460647583, 0.5616148114204407, 0.553856372833252, 0.5283066630363464, 0.5191428661346436, 0.5009027719497681, 0.4947771728038788, 0.4846241772174835, 0.47435465455055237, 0.463281512260437, 0.45141080021858215, 0.4365816116333008, 0.4421764016151428, 0.4289816915988922, 0.4243262708187103, 0.4157203435897827, 0.4111078679561615, 0.4097800850868225, 0.39351126551628113, 0.3911776840686798, 0.3845462203025818, 0.37308743596076965, 0.3714233338832855, 0.3629699647426605, 0.35983574390411377, 0.3530702292919159, 0.34937119483947754, 0.3505234718322754, 0.341032475233078, 0.334951788187027, 0.33207669854164124, 0.3221779465675354, 0.32023781538009644, 0.3173314332962036, 0.31327274441719055], "accuracy": [0.28080835938453674, 0.4983489513397217, 0.5609562993049622, 0.6262052655220032, 0.6793025732040405, 0.7033417224884033, 0.719852089881897, 0.7400607466697693, 0.7537974119186401, 0.7627789974212646, 0.7774402499198914, 0.7821952104568481, 0.7924976944923401, 0.7959318161010742, 0.7987055778503418, 0.8120459914207458, 0.8128384351730347, 0.8157442808151245, 0.8181217908859253, 0.8238013386726379, 0.8286884427070618, 0.8335754871368408, 0.8379341959953308, 0.8432175517082214, 0.8411042094230652, 0.8451988101005554, 0.8459912538528442, 0.8537842035293579, 0.8508783578872681, 0.8539162874221802, 0.8598600029945374, 0.8598600029945374, 0.8609166741371155, 0.8667283058166504, 0.868049144744873, 0.8685774803161621, 0.869502067565918, 0.8721436858177185, 0.8770307898521423, 0.8734645247459412, 0.8815215826034546, 0.8792761564254761, 0.8799365758895874, 0.8870691061019897, 0.8808611631393433, 0.8802007436752319, 0.8881257176399231], "val_loss": [2.0388779640197754, 1.5132607221603394, 1.0386377573013306, 0.8324550986289978, 0.7526764273643494, 0.6978268027305603, 0.6567821502685547, 0.6257565021514893, 0.5995456576347351, 0.5766596794128418, 0.559457540512085, 0.5450195074081421, 0.5296312570571899, 0.5220182538032532, 0.5090546011924744, 0.49948981404304504, 0.48923954367637634, 0.4825010597705841, 0.4809340834617615, 0.4701414704322815, 0.4661271274089813, 0.456856906414032, 0.45093604922294617, 0.44608503580093384, 0.44168025255203247, 0.43817242980003357, 0.43260106444358826, 0.4293166399002075, 0.4298003613948822, 0.42196112871170044, 0.41859447956085205, 0.4191020429134369, 0.4184046685695648, 0.41055595874786377, 0.41201797127723694, 0.40308645367622375, 0.4024510383605957, 0.39791032671928406, 0.39670637249946594, 0.3959318995475769, 0.3891690671443939, 0.3897533416748047, 0.3899017870426178, 0.38588717579841614, 0.383085697889328, 0.37894177436828613, 0.37824174761772156], "val_accuracy": [0.5583333373069763, 0.6573333144187927, 0.6816666722297668, 0.7076666951179504, 0.7273333072662354, 0.7473333477973938, 0.7559999823570251, 0.7616666555404663, 0.7806666493415833, 0.7833333611488342, 0.7979999780654907, 0.8013333082199097, 0.8113333582878113, 0.8130000233650208, 0.8223333358764648, 0.8216666579246521, 0.8246666789054871, 0.8293333053588867, 0.8303333520889282, 0.8333333134651184, 0.8330000042915344, 0.8360000252723694, 0.8393333554267883, 0.8423333168029785, 0.8413333296775818, 0.8403333425521851, 0.8426666855812073, 0.843666672706604, 0.8476666808128357, 0.8476666808128357, 0.8476666808128357, 0.8496666550636292, 0.8506666421890259, 0.8526666760444641, 0.8493333458900452, 0.8513333201408386, 0.8510000109672546, 0.8576666712760925, 0.8556666374206543, 0.856333315372467, 0.8576666712760925, 0.8600000143051147, 0.8539999723434448, 0.8579999804496765, 0.859333336353302, 0.8573333621025085, 0.859666645526886]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.843999981880188, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293024778366089, 2.189802646636963, 1.7700228691101074, 1.3237309455871582, 1.1001710891723633, 0.9071739912033081, 0.8354337215423584, 0.8025166392326355, 0.7595289349555969, 0.7134127020835876, 0.6725484132766724, 0.6533350348472595, 0.6335325241088867, 0.6046573519706726, 0.5934157371520996, 0.5976302027702332, 0.569578230381012, 0.5512769222259521, 0.5349870324134827, 0.5276731252670288, 0.5153533816337585, 0.5208748579025269, 0.509688138961792, 0.5004271268844604, 0.494636207818985, 0.47773972153663635, 0.4778093099594116, 0.46497413516044617, 0.4534021317958832, 0.43658673763275146, 0.45153069496154785, 0.41309893131256104, 0.42160916328430176, 0.4106687903404236, 0.3995360732078552, 0.40467169880867004, 0.38941240310668945, 0.3877424895763397, 0.3879835903644562, 0.3669569492340088, 0.38445988297462463, 0.3652576506137848, 0.35134264826774597, 0.36657145619392395, 0.3496624529361725, 0.3426162004470825, 0.3305203914642334, 0.33676522970199585, 0.3368802070617676, 0.32294636964797974, 0.3200829029083252, 0.30695056915283203, 0.30791953206062317, 0.3090423047542572, 0.30666738748550415, 0.2924494445323944], "accuracy": [0.12362963706254959, 0.3241315484046936, 0.43825122714042664, 0.5558050274848938, 0.6308281421661377, 0.6656980514526367, 0.6869634389877319, 0.6996433734893799, 0.7078325152397156, 0.7177387475967407, 0.7430986762046814, 0.7477215528488159, 0.7560427784919739, 0.7656848430633545, 0.7684586048126221, 0.7640998363494873, 0.7816668748855591, 0.7907806038856506, 0.7952714562416077, 0.7955356240272522, 0.8001585006713867, 0.7979130744934082, 0.8009510040283203, 0.8059701323509216, 0.8173292875289917, 0.8185180425643921, 0.8107251524925232, 0.822348415851593, 0.82683926820755, 0.828292191028595, 0.8290846943855286, 0.8418967127799988, 0.8378021121025085, 0.8407079577445984, 0.8511425256729126, 0.8519350290298462, 0.8500858545303345, 0.8473120927810669, 0.8545766472816467, 0.8561616539955139, 0.8502179384231567, 0.8603883385658264, 0.8640866279602051, 0.8607845902442932, 0.8654074668884277, 0.8716153502464294, 0.8706908226013184, 0.8667283058166504, 0.868049144744873, 0.8726720213890076, 0.8746532797813416, 0.8796724081039429, 0.8774270415306091, 0.8817857503890991, 0.8849557638168335, 0.8860124349594116], "val_loss": [2.2461462020874023, 2.018444776535034, 1.1415009498596191, 0.8783647418022156, 0.7573754787445068, 0.7040694355964661, 0.673721432685852, 0.6724209785461426, 0.632307231426239, 0.5914911031723022, 0.5721105337142944, 0.5501574873924255, 0.539343535900116, 0.5454850196838379, 0.53568035364151, 0.5220730900764465, 0.5135295987129211, 0.5154299736022949, 0.5052813291549683, 0.4976442754268646, 0.5000354647636414, 0.49594759941101074, 0.4911220371723175, 0.491509348154068, 0.49968189001083374, 0.4850221872329712, 0.4837437868118286, 0.47963857650756836, 0.46644535660743713, 0.4764215350151062, 0.476225882768631, 0.45900943875312805, 0.455047070980072, 0.45741698145866394, 0.46510523557662964, 0.46429702639579773, 0.4567924737930298, 0.43780893087387085, 0.4428926706314087, 0.4397149980068207, 0.4231378436088562, 0.4182718098163605, 0.4470372796058655, 0.4372274577617645, 0.43238207697868347, 0.42766329646110535, 0.43025749921798706, 0.40280604362487793, 0.410462349653244, 0.43376001715660095, 0.42802247405052185, 0.42570874094963074, 0.4295758605003357, 0.4364529550075531, 0.41772136092185974, 0.3987559676170349], "val_accuracy": [0.4000000059604645, 0.4716666638851166, 0.6460000276565552, 0.6940000057220459, 0.7166666388511658, 0.7360000014305115, 0.7526666522026062, 0.7459999918937683, 0.7599999904632568, 0.7689999938011169, 0.7736666798591614, 0.7906666398048401, 0.7923333048820496, 0.8016666769981384, 0.7953333258628845, 0.8026666641235352, 0.8063333630561829, 0.812666654586792, 0.8109999895095825, 0.8073333501815796, 0.8246666789054871, 0.8230000138282776, 0.8199999928474426, 0.8190000057220459, 0.8236666917800903, 0.824999988079071, 0.82833331823349, 0.8270000219345093, 0.8450000286102295, 0.8420000076293945, 0.8416666388511658, 0.8426666855812073, 0.8463333249092102, 0.8486666679382324, 0.8543333411216736, 0.8569999933242798, 0.847000002861023, 0.8526666760444641, 0.8560000061988831, 0.8600000143051147, 0.8603333234786987, 0.8586666584014893, 0.862666666507721, 0.862333357334137, 0.8603333234786987, 0.8640000224113464, 0.8613333106040955, 0.8616666793823242, 0.8653333187103271, 0.8669999837875366, 0.8703333139419556, 0.8686666488647461, 0.8663333058357239, 0.8653333187103271, 0.8666666746139526, 0.8679999709129333]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8305714130401611, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5827953815460205, 0.8523132801055908, 0.6806483268737793, 0.6255306601524353, 0.579518735408783, 0.5369894504547119, 0.4982657730579376, 0.4929502606391907, 0.46684151887893677, 0.44842246174812317, 0.4862465262413025, 0.45911961793899536, 0.4746180772781372, 0.43638697266578674, 0.4318268299102783, 0.4315227270126343, 0.48970553278923035], "accuracy": [0.4760269522666931, 0.6995112895965576, 0.7520803213119507, 0.7732135653495789, 0.7897239327430725, 0.8047813773155212, 0.8222163319587708, 0.8236692547798157, 0.830669641494751, 0.8384625315666199, 0.8372738361358643, 0.8401796221733093, 0.8323867321014404, 0.8368775844573975, 0.8486329317092896, 0.8558974862098694, 0.837141752243042], "val_loss": [0.7749248147010803, 0.6291303038597107, 0.5608317255973816, 0.5225871205329895, 0.4988877773284912, 0.4992714822292328, 0.49223002791404724, 0.4953761696815491, 0.5412636995315552, 0.6125067472457886, 0.5235136151313782, 0.5000478625297546, 0.5216180682182312, 0.520960807800293, 0.626727283000946, 0.5969672203063965, 0.6332654356956482], "val_accuracy": [0.7166666388511658, 0.7743333578109741, 0.796999990940094, 0.8023333549499512, 0.8136666417121887, 0.8266666531562805, 0.8296666741371155, 0.8306666612625122, 0.8303333520889282, 0.8333333134651184, 0.8429999947547913, 0.8476666808128357, 0.8360000252723694, 0.8423333168029785, 0.843666672706604, 0.8446666598320007, 0.8270000219345093]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0], [0, 1, 9, 1, 3], [2, 0, 1, 3, 2], [38, 39, 56], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 9], [0], [48], [0, 1], [0], [0], [0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 3, 9, 6, 2, 0], [1, 1, 5, 5, 6], [0]], "fitness": -0.34599998593330383, "mapping_values": [1, 4, 3, 1, 1, 3, 3, 0, 1, 2, 1, 1, 1, 13, 8, 5, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(alpha, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.add(grad, grad)))), tf.math.negative(grad)))", "other_info": {"loss": [2.356776237487793, 2.4596686363220215, 2.293625593185425, 2.2648730278015137, 2.303685426712036, 2.30319881439209, 2.296031951904297, 2.259920358657837, 2.3038299083709717, 2.303926944732666, 2.3030025959014893, 2.3034329414367676], "accuracy": [0.18544445931911469, 0.14832915365695953, 0.10355303436517715, 0.13498876988887787, 0.09945846349000931, 0.10421344637870789, 0.1262712925672531, 0.14978206157684326, 0.09509972482919693, 0.09179764986038208, 0.09853387624025345, 0.09509972482919693], "val_loss": [2.222712516784668, 2.304328203201294, 2.0897295475006104, 2.303696393966675, 2.3024399280548096, 2.301645278930664, 2.1537153720855713, 2.3034074306488037, 2.3035225868225098, 2.3026909828186035, 2.3026037216186523, 2.302600860595703], "val_accuracy": [0.09966666996479034, 0.10100000351667404, 0.257999986410141, 0.0989999994635582, 0.10300000011920929, 0.15133333206176758, 0.3490000069141388, 0.1003333330154419, 0.09933333098888397, 0.10300000011920929, 0.09966666996479034, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [2, 2, 3, 0, 3, 9], [0, 2, 0, 2], [39, 39, 2], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 0, 5, 5], [0, 2, 0, 3], [16, 16], [0, 0, 1, 0], [0, 1, 9], [4], [35], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 3], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 10, 7, 3, 2, 4, 3, 1, 1, 22, 11, 11, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.square(beta))), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(grad, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)))), alpha), tf.math.add(tf.math.multiply(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [8, 2, 3, 0, 3, 5], [0, 2, 2, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 8, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 1, 2, 1, 1, 1, 13, 7, 6, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3035247325897217, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 1], [40, 16], [1, 0], [0], [2], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 5, 6, 8, 1, 0, 1, 6, 2, 8], [0, 3, 0, 3, 0, 0, 3, 1, 1, 0], [51, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 1, 1, 0, 1, 0, 16, 9, 7, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(sigma, tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma)), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]