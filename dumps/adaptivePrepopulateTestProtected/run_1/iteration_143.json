[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8668571710586548, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2232766151428223, 1.8665059804916382, 1.3956776857376099, 1.0924930572509766, 0.9390035271644592, 0.8361669182777405, 0.7775335907936096, 0.73014235496521, 0.6881048679351807, 0.6642473936080933, 0.6297696232795715, 0.6164679527282715, 0.5976027250289917, 0.5738615393638611, 0.5592651963233948, 0.5401738882064819, 0.526117742061615, 0.5092485547065735, 0.5039796829223633, 0.4979073703289032, 0.48091232776641846, 0.4853449761867523, 0.4724404811859131, 0.45421266555786133, 0.4456821084022522, 0.43664318323135376, 0.42091476917266846, 0.4275628626346588, 0.4185240864753723, 0.4061819314956665, 0.4027566611766815, 0.40464937686920166, 0.3896583318710327, 0.3889295160770416, 0.38004493713378906, 0.37428510189056396, 0.36240777373313904, 0.36122822761535645, 0.3546687662601471, 0.35354843735694885, 0.33955174684524536, 0.3419117033481598, 0.3281848132610321, 0.3280446529388428, 0.32247447967529297, 0.31939250230789185, 0.3118925392627716, 0.31250160932540894, 0.30534711480140686, 0.3006324768066406, 0.29722654819488525, 0.29490649700164795, 0.28812921047210693, 0.28550833463668823, 0.2784388065338135, 0.27603819966316223, 0.270149290561676, 0.2751789689064026, 0.266193687915802, 0.2575891315937042, 0.26297658681869507, 0.26141127943992615, 0.2524650990962982, 0.24820999801158905, 0.2423582524061203, 0.23951458930969238, 0.2381076216697693], "accuracy": [0.2661471366882324, 0.488971084356308, 0.570730447769165, 0.6170915365219116, 0.6672830581665039, 0.6993792057037354, 0.7251353859901428, 0.7388719916343689, 0.7511557340621948, 0.759080708026886, 0.772288978099823, 0.7771760821342468, 0.7845727205276489, 0.7913089394569397, 0.7979130744934082, 0.8076872229576111, 0.8127063512802124, 0.8165367841720581, 0.8208954930305481, 0.8191784620285034, 0.8301413059234619, 0.8238013386726379, 0.8302733898162842, 0.8337075710296631, 0.8399154543876648, 0.845859169960022, 0.8521991968154907, 0.847840428352356, 0.8502179384231567, 0.8548408150672913, 0.8565579056739807, 0.8519350290298462, 0.8574824929237366, 0.8590674996376038, 0.8634262084960938, 0.8636903762817383, 0.870030403137207, 0.8672566413879395, 0.871879518032074, 0.871879518032074, 0.8754457831382751, 0.873860776424408, 0.8808611631393433, 0.8800686597824097, 0.8802007436752319, 0.8868049383163452, 0.8831065893173218, 0.8886540532112122, 0.8907673954963684, 0.8944657444953918, 0.8930128216743469, 0.8907673954963684, 0.8968431949615479, 0.8961827754974365, 0.8973715305328369, 0.8990886211395264, 0.89988112449646, 0.8947299122810364, 0.8981640338897705, 0.9026548862457275, 0.9035794734954834, 0.9005415439605713, 0.9100515246391296, 0.9068815112113953, 0.9122969508171082, 0.9125610589981079, 0.9142781496047974], "val_loss": [2.0383803844451904, 1.5194172859191895, 1.0504835844039917, 0.8366200923919678, 0.7485509514808655, 0.6924082040786743, 0.6447990536689758, 0.6113006472587585, 0.5824186205863953, 0.560728132724762, 0.5420417189598083, 0.5239823460578918, 0.5105130076408386, 0.49436601996421814, 0.4895057678222656, 0.47362950444221497, 0.4625149071216583, 0.4543159306049347, 0.4472779631614685, 0.43753111362457275, 0.43477579951286316, 0.43257778882980347, 0.43194904923439026, 0.41286951303482056, 0.4094768464565277, 0.4024200141429901, 0.39736470580101013, 0.3970368206501007, 0.3928733170032501, 0.38920581340789795, 0.3873806297779083, 0.38444074988365173, 0.38114625215530396, 0.3708829879760742, 0.3701716363430023, 0.36833930015563965, 0.3693135678768158, 0.3627699911594391, 0.36001551151275635, 0.3635149598121643, 0.35584864020347595, 0.35189080238342285, 0.35045361518859863, 0.3524741232395172, 0.34690091013908386, 0.34417104721069336, 0.34500545263290405, 0.34511125087738037, 0.34237906336784363, 0.34148257970809937, 0.3414273262023926, 0.3392672538757324, 0.3394200801849365, 0.34055760502815247, 0.33881381154060364, 0.33470985293388367, 0.33283737301826477, 0.3303925096988678, 0.33108922839164734, 0.3304561376571655, 0.32837140560150146, 0.32781973481178284, 0.33041027188301086, 0.327465295791626, 0.3299824297428131, 0.32787081599235535, 0.3243228793144226], "val_accuracy": [0.5690000057220459, 0.6616666913032532, 0.6783333420753479, 0.7053333520889282, 0.7319999933242798, 0.7386666536331177, 0.7559999823570251, 0.7713333368301392, 0.7739999890327454, 0.7986666560173035, 0.7943333387374878, 0.8113333582878113, 0.8146666884422302, 0.8213333487510681, 0.8236666917800903, 0.8296666741371155, 0.8356666564941406, 0.8386666774749756, 0.8443333506584167, 0.8463333249092102, 0.8463333249092102, 0.843999981880188, 0.8426666855812073, 0.8516666889190674, 0.8550000190734863, 0.8569999933242798, 0.859333336353302, 0.8573333621025085, 0.8616666793823242, 0.862666666507721, 0.8600000143051147, 0.8643333315849304, 0.8616666793823242, 0.8673333525657654, 0.8676666617393494, 0.8693333268165588, 0.8653333187103271, 0.8669999837875366, 0.8696666955947876, 0.8666666746139526, 0.8713333606719971, 0.8700000047683716, 0.871999979019165, 0.8726666569709778, 0.8700000047683716, 0.8726666569709778, 0.874666690826416, 0.8723333477973938, 0.8769999742507935, 0.8756666779518127, 0.874666690826416, 0.8813333511352539, 0.8743333220481873, 0.8776666522026062, 0.8759999871253967, 0.8786666393280029, 0.8816666603088379, 0.878333330154419, 0.8796666860580444, 0.8793333172798157, 0.8823333382606506, 0.8849999904632568, 0.8790000081062317, 0.8769999742507935, 0.8849999904632568, 0.8816666603088379, 0.8846666812896729]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1], [0, 0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8611428737640381, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2928109169006348, 2.1876955032348633, 1.770514965057373, 1.3512318134307861, 1.0818078517913818, 0.9288691878318787, 0.8660944700241089, 0.8241064548492432, 0.7806639671325684, 0.7600722908973694, 0.7197779417037964, 0.6979210376739502, 0.6595259308815002, 0.6329489946365356, 0.6117833256721497, 0.6009471416473389, 0.581964910030365, 0.5655947327613831, 0.5597284436225891, 0.5572786331176758, 0.5335224866867065, 0.5149894952774048, 0.5053094029426575, 0.4955645501613617, 0.49557483196258545, 0.4867298901081085, 0.48401936888694763, 0.45562249422073364, 0.4557788670063019, 0.44642385840415955, 0.42929330468177795, 0.4210171401500702, 0.4241820275783539, 0.4159810245037079, 0.4085315465927124, 0.3976041078567505, 0.38485655188560486, 0.38252994418144226, 0.37341609597206116, 0.367627888917923, 0.36321234703063965, 0.35974976420402527, 0.3574618995189667, 0.3526390492916107, 0.34530559182167053, 0.3552567958831787, 0.34087103605270386, 0.331193208694458, 0.3270857036113739, 0.3430289924144745, 0.32748597860336304, 0.32979658246040344, 0.3339758515357971, 0.31509581208229065, 0.31117671728134155, 0.3021335005760193, 0.30132418870925903], "accuracy": [0.1348566859960556, 0.32782986760139465, 0.43811914324760437, 0.538237988948822, 0.6306960582733154, 0.6682076454162598, 0.689869225025177, 0.6944921612739563, 0.6948884129524231, 0.7061154246330261, 0.7280412316322327, 0.7343811988830566, 0.7515519857406616, 0.763967752456665, 0.7666094303131104, 0.7689869403839111, 0.7833839654922485, 0.7882710099220276, 0.7948752045631409, 0.7957997918128967, 0.8024039268493652, 0.8129705190658569, 0.8084797263145447, 0.8123101592063904, 0.8175934553146362, 0.8198388814926147, 0.8216879963874817, 0.8244617581367493, 0.8253863453865051, 0.8293488025665283, 0.8388587832450867, 0.8441421389579773, 0.8429533839225769, 0.8418967127799988, 0.8482366800308228, 0.8514066934585571, 0.8553691506385803, 0.8533879518508911, 0.8562937378883362, 0.8589354157447815, 0.8602562546730042, 0.8628978729248047, 0.8598600029945374, 0.8628978729248047, 0.8691058158874512, 0.8632941246032715, 0.8687095642089844, 0.8714832663536072, 0.8759741187095642, 0.8745211958885193, 0.8762382864952087, 0.8681812286376953, 0.8697662353515625, 0.8697662353515625, 0.8729361891746521, 0.8840311765670776, 0.8864086866378784], "val_loss": [2.2456445693969727, 2.015610456466675, 1.1374619007110596, 0.8963623642921448, 0.7596938610076904, 0.6852053999900818, 0.6722343564033508, 0.6673822999000549, 0.6539806127548218, 0.6174200773239136, 0.5723864436149597, 0.5544030070304871, 0.5357506275177002, 0.5289128422737122, 0.5152737498283386, 0.49796003103256226, 0.49001070857048035, 0.48224112391471863, 0.48092228174209595, 0.4674873948097229, 0.4528408944606781, 0.452860951423645, 0.4512386918067932, 0.4488224387168884, 0.44075313210487366, 0.4256121516227722, 0.414334237575531, 0.42084571719169617, 0.4120231866836548, 0.4092765152454376, 0.4145754277706146, 0.4121587872505188, 0.4071611762046814, 0.41995638608932495, 0.40281006693840027, 0.39903637766838074, 0.39929133653640747, 0.3979310393333435, 0.3946243226528168, 0.39421239495277405, 0.4013946056365967, 0.40502482652664185, 0.39014631509780884, 0.39414501190185547, 0.38666480779647827, 0.39383983612060547, 0.3879697322845459, 0.39989301562309265, 0.42359229922294617, 0.41070064902305603, 0.4062843322753906, 0.3977002799510956, 0.40651097893714905, 0.40874919295310974, 0.42742955684661865, 0.4154796898365021, 0.42845767736434937], "val_accuracy": [0.43066665530204773, 0.47099998593330383, 0.6476666927337646, 0.6953333616256714, 0.7329999804496765, 0.7463333606719971, 0.737666666507721, 0.7253333330154419, 0.7633333206176758, 0.7680000066757202, 0.778333306312561, 0.7820000052452087, 0.7940000295639038, 0.7960000038146973, 0.8019999861717224, 0.8066666722297668, 0.8086666464805603, 0.8106666803359985, 0.8176666498184204, 0.8233333230018616, 0.8376666903495789, 0.8393333554267883, 0.8389999866485596, 0.843999981880188, 0.8353333473205566, 0.8516666889190674, 0.8566666841506958, 0.8516666889190674, 0.8556666374206543, 0.8576666712760925, 0.8539999723434448, 0.856333315372467, 0.8610000014305115, 0.8579999804496765, 0.859666645526886, 0.8643333315849304, 0.859333336353302, 0.8643333315849304, 0.8636666536331177, 0.8673333525657654, 0.8653333187103271, 0.8659999966621399, 0.8703333139419556, 0.8703333139419556, 0.8696666955947876, 0.8646666407585144, 0.8696666955947876, 0.871999979019165, 0.8709999918937683, 0.871999979019165, 0.8673333525657654, 0.8769999742507935, 0.8743333220481873, 0.8736666440963745, 0.8709999918937683, 0.874666690826416, 0.8769999742507935]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8288571238517761, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5213210582733154, 0.8561462759971619, 0.715857982635498, 0.6536307334899902, 0.5892472267150879, 0.5446754097938538, 0.507712185382843, 0.5002851486206055, 0.4792633354663849, 0.4540328085422516, 0.47189974784851074, 0.46244633197784424, 0.4647238850593567, 0.478296160697937, 0.4712000787258148, 0.47243532538414, 0.49168893694877625], "accuracy": [0.48487651348114014, 0.7040021419525146, 0.7391361594200134, 0.757099449634552, 0.7691190242767334, 0.7977809906005859, 0.8094043135643005, 0.8087438941001892, 0.8212917447090149, 0.8274996876716614, 0.83119797706604, 0.8329150676727295, 0.8360850811004639, 0.8285563588142395, 0.8412362933158875, 0.828820526599884, 0.8304054737091064], "val_loss": [0.9739644527435303, 0.6230732798576355, 0.6009997725486755, 0.5467554330825806, 0.5324063897132874, 0.5165335536003113, 0.4856528341770172, 0.4759611487388611, 0.48057934641838074, 0.49192866683006287, 0.49978873133659363, 0.49796679615974426, 0.5083063244819641, 0.5433263778686523, 0.5276671648025513, 0.5842735767364502, 0.6286367177963257], "val_accuracy": [0.6579999923706055, 0.7796666622161865, 0.7929999828338623, 0.7839999794960022, 0.8109999895095825, 0.8203333616256714, 0.8289999961853027, 0.8343333601951599, 0.8379999995231628, 0.8373333215713501, 0.8410000205039978, 0.8489999771118164, 0.847000002861023, 0.847000002861023, 0.8413333296775818, 0.8416666388511658, 0.8370000123977661]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 5, 3, 5, 7, 0, 2, 5, 9, 2, 6, 0, 6, 3, 7, 4, 6, 7, 8, 2, 2, 8], [3, 2, 0, 3, 5, 2, 1, 4, 3, 3, 4, 3, 4, 2, 3], [65, 16], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [2, 3, 7, 4, 5, 5, 1, 3], [0, 5, 6, 1, 7, 7, 1], [90], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [6, 3, 6, 6, 8, 1, 4, 1, 4, 2, 8, 9], [0, 0, 0, 3, 0, 0, 3, 2, 2, 0], [16, 99, 96, 56, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 39, 24, 15, 2, 15, 8, 7, 1, 21, 12, 9, 6], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.math.multiply(grad, tf.math.square(beta))), tf.math.add(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad))), tf.math.add(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(grad, beta), alpha), tf.math.pow(grad, grad))), grad), tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.math.add(grad, grad)), grad), tf.math.add(beta, tf.math.sqrt(grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.add(grad, tf.math.pow(tf.math.square(tf.math.square(tf.math.subtract(alpha, tf.math.multiply(grad, grad)))), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(beta))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 3, 1, 3, 4, 1, 0, 6, 6, 5], [0, 1, 0, 2, 0, 1, 3], [83, 99, 27, 41], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 2, 3, 0, 9, 9], [0, 3, 0, 3], [16, 16], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 8, 3, 1, 2], [0, 6, 1, 2, 1], [80], [0, 1, 1], [8, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 6, 3, 3, 2, 7, 4, 3, 1, 2, 1, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.multiply(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3036274909973145, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [41], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 63, 63, 35, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3029322624206543, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 9, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 2, 3, 0, 3, 5, 0], [0, 2, 0, 3], [67, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 2, 1, 4, 2, 8], [0, 0, 1, 1, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09228571504354477, "mapping_values": [1, 5, 4, 1, 2, 11, 7, 4, 2, 2, 1, 1, 1, 9, 4, 5, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.divide_no_nan(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3087220191955566, 2.3098323345184326, 2.3098154067993164, 2.3083977699279785, 2.310612678527832, 2.309657096862793], "accuracy": [0.09179764986038208, 0.08928807079792023, 0.09060890227556229, 0.09100515395402908, 0.09417514503002167, 0.09087307006120682], "val_loss": [2.3091702461242676, 2.3091702461242676, 2.3091702461242676, 2.3091702461242676, 2.3091702461242676, 2.3091702461242676], "val_accuracy": [0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862]}}]