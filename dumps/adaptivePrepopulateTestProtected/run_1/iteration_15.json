[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223330497741699, 1.8670156002044678, 1.3935511112213135, 1.1012579202651978, 0.9477801322937012, 0.8379126191139221, 0.7764281630516052, 0.7235901951789856, 0.6839449405670166, 0.6511124968528748, 0.6340097188949585, 0.6069210171699524, 0.5817078948020935, 0.5635776519775391, 0.5524153113365173, 0.5367791652679443, 0.5212588906288147, 0.5178380608558655, 0.5019086003303528, 0.4879888892173767, 0.4858485460281372, 0.4747111201286316, 0.45951735973358154, 0.4532293975353241, 0.4492609202861786, 0.4330301284790039, 0.4310648441314697, 0.42051371932029724, 0.41327017545700073, 0.4060419201850891, 0.3997148871421814, 0.39729252457618713, 0.3869434893131256, 0.3869549036026001, 0.38186177611351013, 0.3692651391029358, 0.36346086859703064, 0.3634459972381592, 0.3600703179836273, 0.3489670753479004, 0.3429599404335022, 0.34309908747673035, 0.3401198089122772, 0.3303268253803253, 0.3301240801811218, 0.3276282846927643, 0.3180643618106842, 0.3136589229106903, 0.3090694546699524, 0.3071834146976471, 0.3011736273765564, 0.30332496762275696, 0.29351481795310974, 0.2937680780887604], "accuracy": [0.26680755615234375, 0.49451854825019836, 0.5679566860198975, 0.6209219098091125, 0.6646413803100586, 0.7078325152397156, 0.7234182953834534, 0.7387399077415466, 0.7541936039924622, 0.7672698497772217, 0.7677981853485107, 0.7820631265640259, 0.7897239327430725, 0.7977809906005859, 0.798309326171875, 0.8082155585289001, 0.8138951063156128, 0.8094043135643005, 0.822348415851593, 0.8269713521003723, 0.8208954930305481, 0.8310658931732178, 0.8350284099578857, 0.8367455005645752, 0.8368775844573975, 0.8444063067436218, 0.843481719493866, 0.850350022315979, 0.8502179384231567, 0.8570862412452698, 0.857218325138092, 0.8574824929237366, 0.8610487580299377, 0.8610487580299377, 0.8607845902442932, 0.8658037185668945, 0.8701624870300293, 0.8689737319946289, 0.8708229064941406, 0.8792761564254761, 0.8798044919967651, 0.8765024542808533, 0.8765024542808533, 0.8824461698532104, 0.880729079246521, 0.8844274282455444, 0.8838990926742554, 0.8887861371040344, 0.8878615498542786, 0.8903711438179016, 0.8924844861030579, 0.8912957310676575, 0.8976356983184814, 0.8960506916046143], "val_loss": [2.040694236755371, 1.5166728496551514, 1.045767068862915, 0.8421168327331543, 0.7569165229797363, 0.7011509537696838, 0.6573318839073181, 0.6179470419883728, 0.5908101201057434, 0.5737177133560181, 0.5541383624076843, 0.5365487933158875, 0.518412172794342, 0.5104728937149048, 0.49868762493133545, 0.485697478055954, 0.48461878299713135, 0.46694132685661316, 0.459992378950119, 0.44818419218063354, 0.45110249519348145, 0.4507465958595276, 0.4339507520198822, 0.4287099242210388, 0.42590731382369995, 0.4119842052459717, 0.4104468524456024, 0.4069807529449463, 0.40372517704963684, 0.3985708951950073, 0.3967111110687256, 0.39305025339126587, 0.39346253871917725, 0.3906964063644409, 0.3815464675426483, 0.3792845904827118, 0.37928369641304016, 0.3762374818325043, 0.37582898139953613, 0.37387406826019287, 0.3717586398124695, 0.36671704053878784, 0.363382488489151, 0.36401286721229553, 0.3619881868362427, 0.35666540265083313, 0.3588123917579651, 0.3541429042816162, 0.35232576727867126, 0.35342442989349365, 0.3524846136569977, 0.34847813844680786, 0.34814298152923584, 0.35015836358070374], "val_accuracy": [0.5323333144187927, 0.6446666717529297, 0.6756666898727417, 0.7043333053588867, 0.7239999771118164, 0.7493333220481873, 0.753000020980835, 0.7706666588783264, 0.7820000052452087, 0.7873333096504211, 0.7956666946411133, 0.800000011920929, 0.8136666417121887, 0.812666654586792, 0.8199999928474426, 0.824999988079071, 0.8246666789054871, 0.8326666951179504, 0.8303333520889282, 0.8376666903495789, 0.8333333134651184, 0.8343333601951599, 0.8446666598320007, 0.843666672706604, 0.846666693687439, 0.8513333201408386, 0.8546666502952576, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8529999852180481, 0.859333336353302, 0.8546666502952576, 0.8569999933242798, 0.8606666922569275, 0.8633333444595337, 0.8643333315849304, 0.8629999756813049, 0.8576666712760925, 0.8703333139419556, 0.8640000224113464, 0.8643333315849304, 0.8676666617393494, 0.8663333058357239, 0.8713333606719971, 0.871999979019165, 0.8693333268165588, 0.8693333268165588, 0.878000020980835, 0.8756666779518127, 0.8706666827201843, 0.8756666779518127, 0.8769999742507935, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8642857074737549, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2265243530273438, 1.8749470710754395, 1.402468204498291, 1.0991767644882202, 0.946816623210907, 0.8388392329216003, 0.7776238322257996, 0.7248634696006775, 0.6905995607376099, 0.6687297224998474, 0.6379684209823608, 0.6110143065452576, 0.5903658866882324, 0.5795285701751709, 0.557857096195221, 0.549081027507782, 0.5355475544929504, 0.5222318172454834, 0.5074892044067383, 0.4989856481552124, 0.48850131034851074, 0.47727689146995544, 0.4707850217819214, 0.46075406670570374, 0.4508201777935028, 0.45017194747924805, 0.4358886778354645, 0.43241921067237854, 0.4203835725784302, 0.4220941960811615, 0.41207587718963623, 0.40957286953926086, 0.4020127058029175, 0.39491596817970276, 0.38280120491981506, 0.37508758902549744, 0.36865830421447754, 0.36904609203338623, 0.36011651158332825, 0.35896921157836914, 0.3473380506038666, 0.3462960124015808, 0.33388370275497437, 0.3327069878578186, 0.33365869522094727, 0.3347674608230591, 0.32104527950286865, 0.3180605173110962, 0.30861860513687134, 0.30943581461906433, 0.30238258838653564, 0.3044831454753876, 0.2945227324962616, 0.28773626685142517, 0.2837109863758087, 0.28501707315444946, 0.2851113975048065, 0.26772835850715637, 0.2710576355457306, 0.2621958553791046], "accuracy": [0.26561880111694336, 0.4876502454280853, 0.5741645693778992, 0.6235635876655579, 0.6612072587013245, 0.6977941989898682, 0.7235503792762756, 0.7386078238487244, 0.7411174178123474, 0.7524765729904175, 0.7725531458854675, 0.7808743715286255, 0.7843085527420044, 0.7926297783851624, 0.7998943328857422, 0.7989697456359863, 0.8045172095298767, 0.8094043135643005, 0.817461371421814, 0.8177255392074585, 0.82683926820755, 0.8348963260650635, 0.8314621448516846, 0.8358209133148193, 0.8359529972076416, 0.8413683772087097, 0.8446704745292664, 0.8508783578872681, 0.8490291833877563, 0.845859169960022, 0.8541803956031799, 0.8573504090309143, 0.8580108284950256, 0.863029956817627, 0.8650112152099609, 0.86553955078125, 0.8677849769592285, 0.868049144744873, 0.8737286925315857, 0.867520809173584, 0.8755778670310974, 0.8784837126731873, 0.8829745054244995, 0.8821820020675659, 0.8790120482444763, 0.8817857503890991, 0.8840311765670776, 0.8877294659614563, 0.8882578015327454, 0.8901069760322571, 0.8923524022102356, 0.8912957310676575, 0.8949940800666809, 0.8989565372467041, 0.8982961177825928, 0.8996169567108154, 0.8988244533538818, 0.9027869701385498, 0.9033153057098389, 0.9056927561759949], "val_loss": [2.0421595573425293, 1.5197981595993042, 1.0357674360275269, 0.8192732930183411, 0.7381763458251953, 0.6857872605323792, 0.633585512638092, 0.5972175598144531, 0.5738648176193237, 0.5564370155334473, 0.5301750302314758, 0.5124650597572327, 0.5043097138404846, 0.4846663773059845, 0.47279036045074463, 0.46666648983955383, 0.4546040892601013, 0.450639009475708, 0.44179508090019226, 0.427672415971756, 0.4207492768764496, 0.41944819688796997, 0.41496655344963074, 0.4059875011444092, 0.4027215242385864, 0.39401933550834656, 0.392884761095047, 0.38821592926979065, 0.38384193181991577, 0.3883858621120453, 0.3781771659851074, 0.3805158734321594, 0.36749303340911865, 0.3646506667137146, 0.36430713534355164, 0.3622720241546631, 0.3575173318386078, 0.3576101064682007, 0.351226270198822, 0.3508053719997406, 0.34825149178504944, 0.3430192172527313, 0.34212836623191833, 0.3394884765148163, 0.3374195098876953, 0.3446936309337616, 0.33657002449035645, 0.3356683850288391, 0.32726147770881653, 0.33158865571022034, 0.3285093307495117, 0.3252604901790619, 0.3275804817676544, 0.3262638747692108, 0.3197918236255646, 0.32218173146247864, 0.31924906373023987, 0.31829237937927246, 0.3201908767223358, 0.31861773133277893], "val_accuracy": [0.5389999747276306, 0.6620000004768372, 0.6896666884422302, 0.7179999947547913, 0.7326666712760925, 0.7519999742507935, 0.7606666684150696, 0.7739999890327454, 0.7856666445732117, 0.7856666445732117, 0.8080000281333923, 0.8113333582878113, 0.8090000152587891, 0.8266666531562805, 0.831333339214325, 0.8306666612625122, 0.8336666822433472, 0.8346666693687439, 0.8373333215713501, 0.8433333039283752, 0.8473333120346069, 0.8500000238418579, 0.8479999899864197, 0.8500000238418579, 0.8506666421890259, 0.8566666841506958, 0.8573333621025085, 0.8579999804496765, 0.862666666507721, 0.8606666922569275, 0.8616666793823242, 0.8650000095367432, 0.8663333058357239, 0.8663333058357239, 0.8666666746139526, 0.8666666746139526, 0.8703333139419556, 0.8723333477973938, 0.8726666569709778, 0.8669999837875366, 0.8736666440963745, 0.8769999742507935, 0.8759999871253967, 0.878000020980835, 0.874666690826416, 0.8703333139419556, 0.8786666393280029, 0.8759999871253967, 0.8793333172798157, 0.8820000290870667, 0.8816666603088379, 0.8806666731834412, 0.8846666812896729, 0.8820000290870667, 0.8866666555404663, 0.8849999904632568, 0.8830000162124634, 0.8833333253860474, 0.8836666941642761, 0.8813333511352539]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1], [0, 5, 5], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8351428508758545, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292574644088745, 2.1888041496276855, 1.7629441022872925, 1.3232660293579102, 1.0786222219467163, 0.9179592728614807, 0.8584265112876892, 0.8195080161094666, 0.7653536796569824, 0.7391985058784485, 0.7122767567634583, 0.6748605370521545, 0.6525093913078308, 0.625296413898468, 0.600408136844635, 0.5836143493652344, 0.5651071071624756, 0.5568534731864929, 0.5525442361831665, 0.5291057229042053, 0.5137320160865784, 0.5181900262832642, 0.4932916760444641, 0.4902462959289551, 0.4715805947780609, 0.47461503744125366, 0.4642990231513977, 0.45810845494270325, 0.44799476861953735, 0.4343269169330597, 0.4327582120895386, 0.41449660062789917, 0.41794553399086, 0.3960871994495392, 0.4032488465309143, 0.39800330996513367, 0.3865800201892853, 0.3807264566421509, 0.3667023777961731, 0.36803337931632996, 0.3701491951942444, 0.36501041054725647, 0.35377639532089233, 0.3531605899333954, 0.338445246219635, 0.3447490632534027, 0.32619380950927734, 0.3220510482788086, 0.3297717869281769, 0.3227565586566925, 0.32338446378707886, 0.3273697793483734, 0.3052225112915039, 0.3105472922325134, 0.30884361267089844, 0.3032962679862976, 0.29793602228164673, 0.3090309202671051, 0.27750203013420105, 0.30556923151016235, 0.29015859961509705, 0.3001997470855713, 0.2863953709602356, 0.27850738167762756, 0.28265127539634705, 0.2838233411312103, 0.27101024985313416], "accuracy": [0.1282525360584259, 0.3269053101539612, 0.43970412015914917, 0.5474838018417358, 0.6357152462005615, 0.6709813475608826, 0.6860388517379761, 0.7000396251678467, 0.7042662501335144, 0.7234182953834534, 0.7280412316322327, 0.7450799345970154, 0.7519482374191284, 0.76542067527771, 0.7725531458854675, 0.7820631265640259, 0.7828556299209595, 0.7921014428138733, 0.7951393723487854, 0.8062343001365662, 0.8078193068504333, 0.8059701323509216, 0.8121780753135681, 0.8112534880638123, 0.8156121969223022, 0.8241975903511047, 0.8253863453865051, 0.8247259259223938, 0.8313300609588623, 0.8363492488861084, 0.839519202709198, 0.8397833704948425, 0.8445383906364441, 0.848368763923645, 0.8519350290298462, 0.8502179384231567, 0.8499537706375122, 0.8529917001724243, 0.8564258217811584, 0.8560295701026917, 0.8581429123878479, 0.8593316674232483, 0.8626337051391602, 0.863029956817627, 0.8687095642089844, 0.8644828796386719, 0.874389111995697, 0.8758420348167419, 0.8708229064941406, 0.8747853636741638, 0.8687095642089844, 0.8762382864952087, 0.8809932470321655, 0.8782195448875427, 0.878351628780365, 0.8803328275680542, 0.8864086866378784, 0.8779553771018982, 0.8869370222091675, 0.8835028409957886, 0.8883898854255676, 0.8835028409957886, 0.8897107243537903, 0.8903711438179016, 0.887597382068634, 0.8837670087814331, 0.8879936337471008], "val_loss": [2.244770050048828, 2.0159366130828857, 1.124631404876709, 0.8419171571731567, 0.7500140070915222, 0.6988377571105957, 0.6584973335266113, 0.6273227334022522, 0.6359740495681763, 0.5868122577667236, 0.5535304546356201, 0.5390020608901978, 0.5331873893737793, 0.5247787833213806, 0.5203696489334106, 0.5053076148033142, 0.5048012733459473, 0.4962405860424042, 0.4832446277141571, 0.47116944193840027, 0.4685148596763611, 0.46462810039520264, 0.4670272171497345, 0.46129369735717773, 0.45477384328842163, 0.44307616353034973, 0.44839656352996826, 0.43389883637428284, 0.4291374087333679, 0.42619404196739197, 0.4172228276729584, 0.42355167865753174, 0.4128279983997345, 0.4117681384086609, 0.4154491424560547, 0.40943461656570435, 0.41972899436950684, 0.41390174627304077, 0.40922120213508606, 0.4102868139743805, 0.39621785283088684, 0.4025301933288574, 0.39259791374206543, 0.3941603899002075, 0.3975970447063446, 0.400021493434906, 0.41559815406799316, 0.4253731369972229, 0.4084869921207428, 0.40142473578453064, 0.41437962651252747, 0.41715943813323975, 0.40398937463760376, 0.4107617735862732, 0.4469679296016693, 0.45255231857299805, 0.4312153458595276, 0.4333168566226959, 0.43860119581222534, 0.4803318679332733, 0.48622041940689087, 0.46612000465393066, 0.4732815623283386, 0.4664137363433838, 0.46989676356315613, 0.4878265857696533, 0.4970352053642273], "val_accuracy": [0.4023333191871643, 0.4573333263397217, 0.6629999876022339, 0.70333331823349, 0.7300000190734863, 0.7366666793823242, 0.7549999952316284, 0.7546666860580444, 0.7643333077430725, 0.7726666927337646, 0.7833333611488342, 0.7853333353996277, 0.7946666479110718, 0.7956666946411133, 0.7973333597183228, 0.8033333420753479, 0.7990000247955322, 0.812666654586792, 0.8193333148956299, 0.8186666369438171, 0.8316666483879089, 0.8326666951179504, 0.8243333101272583, 0.8240000009536743, 0.8363333344459534, 0.8366666436195374, 0.840666651725769, 0.843999981880188, 0.8513333201408386, 0.843666672706604, 0.8463333249092102, 0.8476666808128357, 0.8536666631698608, 0.8510000109672546, 0.8526666760444641, 0.8519999980926514, 0.8550000190734863, 0.8533333539962769, 0.8546666502952576, 0.8529999852180481, 0.8576666712760925, 0.8569999933242798, 0.859666645526886, 0.8633333444595337, 0.8650000095367432, 0.8640000224113464, 0.8610000014305115, 0.8640000224113464, 0.8666666746139526, 0.8659999966621399, 0.8640000224113464, 0.8673333525657654, 0.8676666617393494, 0.8656666874885559, 0.8619999885559082, 0.8666666746139526, 0.8686666488647461, 0.8696666955947876, 0.8713333606719971, 0.8676666617393494, 0.8696666955947876, 0.8726666569709778, 0.8669999837875366, 0.8696666955947876, 0.8686666488647461, 0.8693333268165588, 0.8696666955947876]}, "mapping_values": [1, 10, 5, 5, 3, 4, 3, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 7, 8, 6, 6, 5, 4], [0, 1, 3, 7, 7], [0], [1], [0], [2], [0]], "fitness": -0.8125714063644409, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(sigma, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.7098942995071411, 0.9136679768562317, 0.7242631912231445, 0.6326854825019836, 0.5668386816978455, 0.5509531497955322, 0.5119508504867554, 0.4941175580024719, 0.46694159507751465, 0.4723109006881714, 0.4788394868373871, 0.45375633239746094, 0.4285654127597809, 0.4140971004962921, 0.4187130630016327, 0.4348815679550171, 0.44439414143562317, 0.42941635847091675, 0.4264826774597168, 0.4392169415950775, 0.4217688739299774, 0.44481828808784485, 0.41515275835990906], "accuracy": [0.46968695521354675, 0.6803592443466187, 0.7342491149902344, 0.7677981853485107, 0.793422281742096, 0.8045172095298767, 0.8131026029586792, 0.8235371708869934, 0.8267071843147278, 0.8300092220306396, 0.830669641494751, 0.8301413059234619, 0.8494254350662231, 0.8515387773513794, 0.8448025584220886, 0.8584070801734924, 0.8473120927810669, 0.8576145768165588, 0.852331280708313, 0.8557654023170471, 0.8537842035293579, 0.8504821062088013, 0.8568220734596252], "val_loss": [0.8378199338912964, 0.6714933514595032, 0.5940192341804504, 0.5225788354873657, 0.4870312213897705, 0.479557603597641, 0.4777134954929352, 0.4687838554382324, 0.4446240961551666, 0.47551557421684265, 0.49543753266334534, 0.48017096519470215, 0.4691751003265381, 0.4542684257030487, 0.47563761472702026, 0.4694403409957886, 0.5169818997383118, 0.4249012768268585, 0.47648879885673523, 0.49113667011260986, 0.4707522690296173, 0.48320311307907104, 0.5326219797134399], "val_accuracy": [0.6783333420753479, 0.7493333220481873, 0.7853333353996277, 0.8173333406448364, 0.8153333067893982, 0.828000009059906, 0.8379999995231628, 0.840666651725769, 0.843999981880188, 0.8503333330154419, 0.8413333296775818, 0.856333315372467, 0.8569999933242798, 0.8506666421890259, 0.8473333120346069, 0.8573333621025085, 0.8576666712760925, 0.8616666793823242, 0.8556666374206543, 0.8610000014305115, 0.8529999852180481, 0.8496666550636292, 0.8516666889190674]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 16}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 3, 0, 3, 3, 6, 0], [2, 1, 0, 2, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 5, 4], [0, 2, 0, 3, 0], [16, 16, 59], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 2, 8, 1, 4, 1, 4, 5, 8], [0, 4, 1, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 4, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 1, 13, 8, 5, 3, 2, 1, 1, 1, 18, 9, 9, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(grad), tf.math.multiply(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.negative(alpha)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha)), sigma)), grad), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [47, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0], [2, 3, 3, 6, 8, 2, 4, 1, 4, 2, 8, 4, 6, 4, 6, 9, 4, 0, 5, 8, 1, 0, 9], [2, 0, 0, 3, 0, 0, 3, 1, 2, 0, 1, 5, 5, 4], [16, 99, 96, 99, 61, 1, 79]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 9, 5, 4, 1, 2, 1, 1, 1, 37, 23, 14, 7], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(sigma, tf.math.sqrt(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), alpha), tf.math.add(tf.math.sqrt(tf.math.pow(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.pow(tf.math.divide_no_nan(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.negative(grad))), tf.math.square(tf.math.sqrt(tf.math.subtract(tf.math.negative(grad), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 8], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [15, 16], [0, 1], [0], [0], [98], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 1, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 7, 4, 3, 2, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(alpha, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 1, 0, 2, 2], [83, 8, 27], [0, 0, 0, 0, 0, 1, 1], [0, 5, 0, 0, 7], [0, 5], [86], [0, 1], [0, 7, 7, 6, 6, 5, 1, 6, 8, 0, 4, 9, 2, 0, 3, 8, 7, 6, 2, 5, 3, 7, 0, 2, 4], [0, 1, 6, 3, 0, 2, 0, 6, 6, 2, 4, 6, 0, 3, 1, 0], [0, 73, 0, 67, 99, 19], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 7, 5, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.negative(tf.math.negative(tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [7.592053413391113, 58.948272705078125, 202.6278076171875, 501.8309631347656, 998.0462036132812, 1790.2879638671875], "accuracy": [0.09457138925790787, 0.09708096832036972, 0.1010434553027153, 0.09549596905708313, 0.10157178342342377, 0.09549596905708313], "val_loss": [20.518688201904297, 95.7299575805664, 264.76116943359375, 576.1358032226562, 1078.185791015625, 1819.7110595703125], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]