[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8617143034934998, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2943129539489746, 2.1911087036132812, 1.7644946575164795, 1.343875765800476, 1.0698806047439575, 0.9297026991844177, 0.8332073092460632, 0.8075247406959534, 0.7598298788070679, 0.7300459146499634, 0.7011462450027466, 0.6762388348579407, 0.6520002484321594, 0.6222178936004639, 0.6021556854248047, 0.5817908048629761, 0.5641694664955139, 0.5558111667633057, 0.5434219837188721, 0.5225173234939575, 0.512499213218689, 0.5185980200767517, 0.4983184337615967, 0.48619627952575684, 0.48230892419815063, 0.4805528521537781, 0.465912401676178, 0.46340301632881165, 0.43804222345352173, 0.43645983934402466, 0.42889589071273804, 0.4282624125480652, 0.42164915800094604, 0.39953166246414185, 0.3998618721961975, 0.39549195766448975, 0.3881014883518219, 0.3834720253944397, 0.38390272855758667, 0.36747217178344727, 0.3710043430328369, 0.37285706400871277, 0.3518885374069214, 0.3490978181362152, 0.3452398478984833, 0.3482365608215332, 0.3349754214286804, 0.32140374183654785, 0.3256876468658447, 0.3214680552482605], "accuracy": [0.1254788041114807, 0.3276977837085724, 0.44525161385536194, 0.5457667708396912, 0.6336019039154053, 0.6597543358802795, 0.6917183995246887, 0.7017567157745361, 0.7036058902740479, 0.7214370369911194, 0.7363624572753906, 0.7382115721702576, 0.7515519857406616, 0.7660810947418213, 0.7643640041351318, 0.7763835787773132, 0.7845727205276489, 0.7841764688491821, 0.7907806038856506, 0.7961959838867188, 0.8045172095298767, 0.807158887386322, 0.8152159452438354, 0.8193105459213257, 0.8177255392074585, 0.817989706993103, 0.8232730031013489, 0.8259146809577942, 0.837141752243042, 0.834632158279419, 0.8334434032440186, 0.8368775844573975, 0.8352925777435303, 0.8471800088882446, 0.8469158411026001, 0.8492933511734009, 0.8553691506385803, 0.8551049828529358, 0.8535200357437134, 0.8580108284950256, 0.8590674996376038, 0.8626337051391602, 0.8677849769592285, 0.8683133125305176, 0.8701624870300293, 0.8685774803161621, 0.8706908226013184, 0.878351628780365, 0.8732003569602966, 0.8725399374961853], "val_loss": [2.2476413249969482, 2.0269269943237305, 1.1624927520751953, 0.9097135663032532, 0.8035436272621155, 0.724404513835907, 0.6962801218032837, 0.6694660782814026, 0.6484784483909607, 0.6237521767616272, 0.595329999923706, 0.5799173712730408, 0.5668193101882935, 0.5469651818275452, 0.5528053641319275, 0.5270231366157532, 0.5254843831062317, 0.5205729007720947, 0.5080996155738831, 0.5092905163764954, 0.4903697967529297, 0.4938068091869354, 0.4892495572566986, 0.48617517948150635, 0.46945735812187195, 0.4599228501319885, 0.4656684100627899, 0.4562245309352875, 0.4591624438762665, 0.4589233100414276, 0.4609242379665375, 0.4589520990848541, 0.4479456841945648, 0.44682008028030396, 0.4433425962924957, 0.4413698613643646, 0.4451201856136322, 0.43627938628196716, 0.4294297695159912, 0.4367177188396454, 0.4383675158023834, 0.4350169003009796, 0.4264006018638611, 0.43240687251091003, 0.4359392523765564, 0.431569367647171, 0.4303496181964874, 0.4354761242866516, 0.4296928644180298, 0.43571949005126953], "val_accuracy": [0.4273333251476288, 0.46433332562446594, 0.6446666717529297, 0.687333345413208, 0.6840000152587891, 0.7173333168029785, 0.7253333330154419, 0.7319999933242798, 0.7416666746139526, 0.7633333206176758, 0.7559999823570251, 0.7683333158493042, 0.7663333415985107, 0.7853333353996277, 0.7929999828338623, 0.7916666865348816, 0.7919999957084656, 0.8046666383743286, 0.7993333339691162, 0.7979999780654907, 0.815666675567627, 0.8180000185966492, 0.8183333277702332, 0.8230000138282776, 0.8276666402816772, 0.8330000042915344, 0.8353333473205566, 0.8356666564941406, 0.8349999785423279, 0.8323333263397217, 0.8363333344459534, 0.8366666436195374, 0.8396666646003723, 0.8396666646003723, 0.843666672706604, 0.8479999899864197, 0.8500000238418579, 0.8516666889190674, 0.8496666550636292, 0.8513333201408386, 0.8543333411216736, 0.8539999723434448, 0.8556666374206543, 0.8569999933242798, 0.8600000143051147, 0.8550000190734863, 0.8510000109672546, 0.8579999804496765, 0.859333336353302, 0.8556666374206543]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8534285426139832, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2214558124542236, 1.8660435676574707, 1.4013952016830444, 1.081839680671692, 0.9551742076873779, 0.8368430137634277, 0.7783098220825195, 0.736832320690155, 0.6997938752174377, 0.6612392663955688, 0.6298385262489319, 0.6145201325416565, 0.5857890248298645, 0.5727869272232056, 0.5553322434425354, 0.5423797369003296, 0.5345340967178345, 0.5126762390136719, 0.5068510174751282, 0.49819597601890564, 0.4843768775463104, 0.4802623689174652, 0.47105878591537476, 0.45542359352111816, 0.44832053780555725, 0.43933963775634766, 0.4307129681110382, 0.42330044507980347, 0.42388033866882324, 0.42679691314697266, 0.4039461612701416, 0.4016099274158478, 0.38864684104919434, 0.3882812261581421, 0.3775826394557953, 0.3718249797821045, 0.3659612834453583, 0.36343371868133545, 0.35713276267051697, 0.35358795523643494, 0.35322216153144836, 0.344382107257843], "accuracy": [0.2728833854198456, 0.4876502454280853, 0.5602958798408508, 0.6243560910224915, 0.6616035103797913, 0.6985867023468018, 0.7240787148475647, 0.7310791015625, 0.7454761862754822, 0.7537974119186401, 0.7734777331352234, 0.7750627398490906, 0.7897239327430725, 0.7932901978492737, 0.7952714562416077, 0.8087438941001892, 0.805177628993988, 0.8204993009567261, 0.8197067975997925, 0.817461371421814, 0.8272355198860168, 0.8274996876716614, 0.8281601071357727, 0.8370096683502197, 0.842028796672821, 0.8459912538528442, 0.8470479249954224, 0.847840428352356, 0.8492933511734009, 0.843481719493866, 0.8541803956031799, 0.8545766472816467, 0.8609166741371155, 0.863029956817627, 0.8639545440673828, 0.8687095642089844, 0.8679170608520508, 0.8693699836730957, 0.8714832663536072, 0.871879518032074, 0.8720116019248962, 0.8737286925315857], "val_loss": [2.0303797721862793, 1.495719075202942, 1.018467664718628, 0.8203853964805603, 0.7280805706977844, 0.6730138659477234, 0.6307230591773987, 0.5955670475959778, 0.5676681995391846, 0.5462350249290466, 0.5248172283172607, 0.5105636119842529, 0.49366292357444763, 0.48638737201690674, 0.48167020082473755, 0.4619831442832947, 0.4595140814781189, 0.4486551880836487, 0.4412722587585449, 0.43551772832870483, 0.43386873602867126, 0.4277472198009491, 0.4189120829105377, 0.4168080687522888, 0.4068475663661957, 0.4061893820762634, 0.39946749806404114, 0.39673998951911926, 0.395072877407074, 0.3939976394176483, 0.3910684883594513, 0.39144596457481384, 0.38395634293556213, 0.3826221823692322, 0.37538740038871765, 0.37829166650772095, 0.37073737382888794, 0.3711302578449249, 0.36453762650489807, 0.3647106885910034, 0.3618448078632355, 0.36178508400917053], "val_accuracy": [0.5406666398048401, 0.6496666669845581, 0.6903333067893982, 0.7113333344459534, 0.7409999966621399, 0.7546666860580444, 0.7710000276565552, 0.7823333144187927, 0.7926666736602783, 0.8043333292007446, 0.8119999766349792, 0.8166666626930237, 0.8246666789054871, 0.8296666741371155, 0.824999988079071, 0.8323333263397217, 0.8349999785423279, 0.840666651725769, 0.8450000286102295, 0.8426666855812073, 0.8446666598320007, 0.8413333296775818, 0.8476666808128357, 0.8479999899864197, 0.8519999980926514, 0.8489999771118164, 0.8510000109672546, 0.8539999723434448, 0.8573333621025085, 0.8579999804496765, 0.8529999852180481, 0.8550000190734863, 0.859333336353302, 0.8579999804496765, 0.8613333106040955, 0.862666666507721, 0.8669999837875366, 0.8616666793823242, 0.8663333058357239, 0.8669999837875366, 0.8659999966621399, 0.8656666874885559]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0], [0, 9], [0], [0], [1], [0], [2], [0]], "fitness": -0.8214285969734192, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4959639310836792, 0.7606855034828186, 0.6221154928207397, 0.5835456848144531, 0.5495500564575195, 0.5394548177719116, 0.5187206268310547, 0.481503427028656, 0.5050183534622192, 0.4787411093711853, 0.49383091926574707, 0.5072860717773438, 0.49969714879989624, 0.5118699669837952], "accuracy": [0.4909523129463196, 0.724739134311676, 0.7650244235992432, 0.780610203742981, 0.798309326171875, 0.8054417967796326, 0.8133667707443237, 0.8236692547798157, 0.8158763647079468, 0.8289526104927063, 0.819970965385437, 0.8265751004219055, 0.8210275769233704, 0.826310932636261], "val_loss": [0.7557965517044067, 0.6054295897483826, 0.5351676940917969, 0.4830057919025421, 0.47618433833122253, 0.48408594727516174, 0.4805464744567871, 0.4732125997543335, 0.4924567937850952, 0.506208062171936, 0.5124990344047546, 0.5708097815513611, 0.5283913612365723, 0.629404604434967], "val_accuracy": [0.7170000076293945, 0.7646666765213013, 0.7893333435058594, 0.8140000104904175, 0.8203333616256714, 0.8206666707992554, 0.8286666870117188, 0.8289999961853027, 0.8336666822433472, 0.8273333311080933, 0.8243333101272583, 0.828000009059906, 0.8266666531562805, 0.8263333439826965]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [8, 2, 3, 0, 4, 8, 7, 0, 7, 1, 8, 1], [0, 1, 0, 2, 0, 0, 0, 1], [39, 39, 87, 18, 98], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 1, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 0, 1, 4, 1, 4, 2, 8], [4, 0, 0, 0, 0, 0, 3, 1, 2, 0], [70, 99, 96, 80, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 12, 8, 5, 1, 0, 1, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.add(grad, tf.math.subtract(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))), alpha))))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 2, 3, 1, 3, 5], [0, 1, 0, 2, 3, 3], [39, 39], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 2, 3, 1, 6, 3, 8, 0], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [88], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 5, 1, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [74, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 5, 6, 2, 2, 1, 1, 1, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [11074.7900390625, 12954.39453125, 12778.94140625, 12729.3701171875, 12917.6064453125, 12614.3330078125], "accuracy": [0.09602430462837219, 0.09470347315073013, 0.10249637067317963, 0.10157178342342377, 0.1010434553027153, 0.10315678268671036], "val_loss": [9707.5703125, 9698.8349609375, 9693.830078125, 9690.302734375, 9687.5830078125, 9685.365234375], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [45, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 1, 6, 8, 9, 1, 1, 4, 2, 8, 2], [4, 4, 0, 4, 0, 3, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 21, 12, 9, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.sqrt(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), sigma)), tf.math.sqrt(tf.math.add(alpha, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [11, 10], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 6, 3, 9, 0, 0, 4, 2, 3, 0], [0, 2, 0, 3, 3, 5, 3], [16, 19, 48], [0, 1], [0], [0], [71], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [5, 3, 3, 1, 8, 1, 8, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 2, 1, 2, 0], [16, 99, 22, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 19, 12, 7, 3, 2, 1, 1, 1, 16, 9, 7, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), beta), tf.math.negative(tf.math.negative(tf.math.pow(tf.math.add(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad), grad), grad)))), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.sqrt(sigma), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), beta)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]