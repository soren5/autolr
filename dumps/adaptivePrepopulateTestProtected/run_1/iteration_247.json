[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8728571534156799, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221914052963257, 1.8625435829162598, 1.3899357318878174, 1.0901992321014404, 0.9343618154525757, 0.8312373161315918, 0.7669605612754822, 0.7324233055114746, 0.6795122027397156, 0.6554447412490845, 0.6265402436256409, 0.6046397686004639, 0.5875666737556458, 0.5625019073486328, 0.5539577007293701, 0.53807133436203, 0.52446448802948, 0.5073807835578918, 0.4972420036792755, 0.48988375067710876, 0.4784177541732788, 0.47243693470954895, 0.4734146296977997, 0.45262348651885986, 0.4452497363090515, 0.4319365620613098, 0.42125555872917175, 0.4161186218261719, 0.4152076840400696, 0.40568843483924866, 0.3970491886138916, 0.3915069103240967, 0.3838605582714081, 0.3830609917640686, 0.38029876351356506, 0.37537890672683716, 0.3650955259799957, 0.36212587356567383, 0.3542708456516266, 0.3551897406578064, 0.34839490056037903, 0.33838415145874023, 0.3355582654476166, 0.3334064781665802, 0.3246539831161499, 0.3217080235481262, 0.3105410933494568, 0.3060612976551056, 0.3089028596878052, 0.29627907276153564, 0.29192811250686646, 0.296257883310318, 0.29418742656707764, 0.27591660618782043, 0.27947676181793213, 0.2818688750267029, 0.27136117219924927, 0.2720756530761719, 0.2638590633869171, 0.26258331537246704, 0.2578270733356476, 0.2476036250591278, 0.2510053813457489, 0.24894137680530548, 0.2368798553943634, 0.23854179680347443, 0.2326340526342392, 0.22690989077091217, 0.2269812524318695, 0.2322879582643509, 0.22445839643478394, 0.21401941776275635, 0.21402648091316223, 0.20687034726142883, 0.2066163569688797, 0.20073986053466797, 0.1991937905550003, 0.20623666048049927, 0.19853174686431885, 0.19287832081317902, 0.1927318125963211, 0.1850592941045761, 0.18248528242111206, 0.18534284830093384], "accuracy": [0.2847708463668823, 0.4920089840888977, 0.568220853805542, 0.6166952848434448, 0.6715096831321716, 0.7038700580596924, 0.7248712182044983, 0.7346453666687012, 0.7547219395637512, 0.7656848430633545, 0.7668735980987549, 0.7788931727409363, 0.789459764957428, 0.8059701323509216, 0.7994980812072754, 0.8034605979919434, 0.8138951063156128, 0.8178576231002808, 0.8236692547798157, 0.8265751004219055, 0.8318583965301514, 0.8300092220306396, 0.8334434032440186, 0.8397833704948425, 0.8422929644584656, 0.8451988101005554, 0.8490291833877563, 0.8516708612442017, 0.8520671129226685, 0.8536521196365356, 0.8576145768165588, 0.86118084192276, 0.8650112152099609, 0.86118084192276, 0.8651432991027832, 0.8687095642089844, 0.8685774803161621, 0.8689737319946289, 0.8726720213890076, 0.8713511824607849, 0.8755778670310974, 0.8772949576377869, 0.8825782537460327, 0.8757099509239197, 0.8841632604598999, 0.8842953443527222, 0.889050304889679, 0.8911636471748352, 0.8923524022102356, 0.8934090733528137, 0.8936732411384583, 0.8912957310676575, 0.8945978283882141, 0.9026548862457275, 0.8981640338897705, 0.8985602855682373, 0.8981640338897705, 0.902390718460083, 0.906749427318573, 0.9035794734954834, 0.9068815112113953, 0.9125610589981079, 0.9113723635673523, 0.910711944103241, 0.9145423173904419, 0.9148064851760864, 0.9171839952468872, 0.9181085824966431, 0.9146744012832642, 0.9154669046401978, 0.9192973375320435, 0.9207502603530884, 0.9235239624977112, 0.9241843819618225, 0.9268260598182678, 0.925901472568512, 0.9268260598182678, 0.9260335564613342, 0.9266939759254456, 0.9313168525695801, 0.9290714859962463, 0.9321093559265137, 0.9332981109619141, 0.9299960136413574], "val_loss": [2.042612075805664, 1.521725058555603, 1.0658442974090576, 0.8703145384788513, 0.774996817111969, 0.7257463932037354, 0.6698898077011108, 0.6432310938835144, 0.610502302646637, 0.5863222479820251, 0.5656521320343018, 0.5517076253890991, 0.5322765111923218, 0.5217034816741943, 0.5172157883644104, 0.5036580562591553, 0.48992398381233215, 0.48465609550476074, 0.47446298599243164, 0.467753142118454, 0.46467167139053345, 0.4600255489349365, 0.4553127586841583, 0.44266462326049805, 0.4440668523311615, 0.4354718029499054, 0.42866358160972595, 0.4236580431461334, 0.4322132170200348, 0.4175942838191986, 0.41458210349082947, 0.41285261511802673, 0.4154396057128906, 0.40418824553489685, 0.40583646297454834, 0.40237975120544434, 0.3960060179233551, 0.3963925838470459, 0.3935904800891876, 0.39115652441978455, 0.3939613997936249, 0.3894524872303009, 0.38618749380111694, 0.38312044739723206, 0.38378071784973145, 0.38661983609199524, 0.3816482722759247, 0.38118651509284973, 0.3760609030723572, 0.3747206926345825, 0.37550297379493713, 0.37851667404174805, 0.36987635493278503, 0.37412118911743164, 0.36688801646232605, 0.37412482500076294, 0.3672110140323639, 0.3644813299179077, 0.3638461232185364, 0.36854150891304016, 0.365596204996109, 0.36518189311027527, 0.36530229449272156, 0.3607163429260254, 0.36252737045288086, 0.36252352595329285, 0.3611880838871002, 0.3628295063972473, 0.36828166246414185, 0.35705095529556274, 0.3602564334869385, 0.3594643175601959, 0.35793986916542053, 0.3589096963405609, 0.35969844460487366, 0.3621901869773865, 0.3596910536289215, 0.3599292039871216, 0.35620588064193726, 0.35735297203063965, 0.3580850064754486, 0.35781338810920715, 0.36431682109832764, 0.3649185299873352], "val_accuracy": [0.5223333239555359, 0.6449999809265137, 0.6700000166893005, 0.6836666464805603, 0.7133333086967468, 0.7423333525657654, 0.7490000128746033, 0.7553333044052124, 0.7673333287239075, 0.7749999761581421, 0.7803333401679993, 0.7960000038146973, 0.7916666865348816, 0.8013333082199097, 0.8013333082199097, 0.8090000152587891, 0.8130000233650208, 0.8159999847412109, 0.8199999928474426, 0.8259999752044678, 0.8263333439826965, 0.8253333568572998, 0.82833331823349, 0.8330000042915344, 0.831333339214325, 0.8336666822433472, 0.8383333086967468, 0.8410000205039978, 0.8363333344459534, 0.8460000157356262, 0.8453333377838135, 0.8453333377838135, 0.8450000286102295, 0.8486666679382324, 0.8460000157356262, 0.8496666550636292, 0.8529999852180481, 0.8550000190734863, 0.8529999852180481, 0.8529999852180481, 0.8516666889190674, 0.8556666374206543, 0.8560000061988831, 0.8600000143051147, 0.8586666584014893, 0.8529999852180481, 0.8603333234786987, 0.8610000014305115, 0.8619999885559082, 0.8619999885559082, 0.862333357334137, 0.859666645526886, 0.8666666746139526, 0.8636666536331177, 0.8640000224113464, 0.8653333187103271, 0.8663333058357239, 0.8669999837875366, 0.8683333396911621, 0.8666666746139526, 0.8663333058357239, 0.8663333058357239, 0.8693333268165588, 0.8690000176429749, 0.8706666827201843, 0.8723333477973938, 0.871999979019165, 0.8703333139419556, 0.8693333268165588, 0.8736666440963745, 0.874666690826416, 0.8733333349227905, 0.874666690826416, 0.875, 0.8766666650772095, 0.8723333477973938, 0.8776666522026062, 0.8773333430290222, 0.8796666860580444, 0.8723333477973938, 0.875, 0.8763333559036255, 0.8766666650772095, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 7], [0, 2], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8505714535713196, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2926974296569824, 2.1881940364837646, 1.777952790260315, 1.3574028015136719, 1.084445834159851, 0.9193302989006042, 0.8606991767883301, 0.8176561594009399, 0.7684283256530762, 0.7342890501022339, 0.7043537497520447, 0.6941424608230591, 0.6540508270263672, 0.6291182637214661, 0.621999204158783, 0.6095492839813232, 0.5998184680938721, 0.5976080298423767, 0.5814645886421204, 0.5713593363761902, 0.5499787926673889, 0.5369459986686707, 0.5315885543823242, 0.5165482759475708, 0.5085812211036682, 0.5039252638816833, 0.49817895889282227, 0.4945856034755707, 0.4814172685146332, 0.4751073718070984, 0.4591069221496582, 0.4554629921913147, 0.45325878262519836, 0.4390365183353424, 0.42330288887023926, 0.41993358731269836, 0.41733771562576294, 0.41121232509613037, 0.41000261902809143, 0.3991219401359558, 0.39334604144096375, 0.3874155282974243, 0.3795057535171509, 0.37679407000541687, 0.3822982907295227, 0.37072110176086426, 0.3792218863964081, 0.3678978681564331, 0.35419604182243347], "accuracy": [0.12759213149547577, 0.3279619514942169, 0.4287412464618683, 0.5387663245201111, 0.628582775592804, 0.670320987701416, 0.6927750706672668, 0.7000396251678467, 0.7051908373832703, 0.7201162576675415, 0.7273808121681213, 0.735569953918457, 0.746268630027771, 0.7567031979560852, 0.7646281719207764, 0.7637035846710205, 0.7730814814567566, 0.7732135653495789, 0.7798177003860474, 0.7781006693840027, 0.7890635132789612, 0.7911768555641174, 0.7954035401344299, 0.7967243194580078, 0.8041210174560547, 0.8058380484580994, 0.8045172095298767, 0.8031964302062988, 0.8156121969223022, 0.819970965385437, 0.824329674243927, 0.8228767514228821, 0.8265751004219055, 0.8323867321014404, 0.8348963260650635, 0.8438779711723328, 0.8366134166717529, 0.8408400416374207, 0.8392550349235535, 0.8451988101005554, 0.8470479249954224, 0.8466516733169556, 0.8518029451370239, 0.8520671129226685, 0.8533879518508911, 0.8518029451370239, 0.8533879518508911, 0.858671247959137, 0.8617091774940491], "val_loss": [2.2466073036193848, 2.0196268558502197, 1.1538821458816528, 0.8920501470565796, 0.7698732018470764, 0.6948988437652588, 0.6647618412971497, 0.6292622089385986, 0.6366605758666992, 0.608150839805603, 0.5775235295295715, 0.5545831322669983, 0.5395501852035522, 0.5190705060958862, 0.5106251835823059, 0.5183298587799072, 0.5161556005477905, 0.5012880563735962, 0.500390887260437, 0.5033643245697021, 0.49654072523117065, 0.4813677668571472, 0.46726465225219727, 0.4650722146034241, 0.4615445137023926, 0.4670652747154236, 0.45496654510498047, 0.44256243109703064, 0.44403353333473206, 0.451153039932251, 0.45217886567115784, 0.4452236592769623, 0.4346157908439636, 0.4374619424343109, 0.43719133734703064, 0.4306856393814087, 0.4251718819141388, 0.4208778440952301, 0.42876502871513367, 0.4237925708293915, 0.4282727837562561, 0.43258434534072876, 0.4313179850578308, 0.425924152135849, 0.40748515725135803, 0.4260338246822357, 0.413096159696579, 0.413718581199646, 0.4048345685005188], "val_accuracy": [0.37700000405311584, 0.42366665601730347, 0.6420000195503235, 0.6863333582878113, 0.7106666564941406, 0.7353333234786987, 0.7443333268165588, 0.7563333511352539, 0.7556666731834412, 0.7696666717529297, 0.7666666507720947, 0.7766666412353516, 0.7943333387374878, 0.7943333387374878, 0.8040000200271606, 0.8023333549499512, 0.8033333420753479, 0.8083333373069763, 0.8053333163261414, 0.8066666722297668, 0.8109999895095825, 0.8196666836738586, 0.8216666579246521, 0.8193333148956299, 0.8243333101272583, 0.8256666660308838, 0.8289999961853027, 0.8383333086967468, 0.8326666951179504, 0.8376666903495789, 0.8293333053588867, 0.8413333296775818, 0.8500000238418579, 0.8493333458900452, 0.8510000109672546, 0.8496666550636292, 0.8516666889190674, 0.8539999723434448, 0.846666693687439, 0.8546666502952576, 0.8533333539962769, 0.8600000143051147, 0.862333357334137, 0.8653333187103271, 0.8633333444595337, 0.8643333315849304, 0.8650000095367432, 0.8613333106040955, 0.862333357334137]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 5], [0], [0], [1], [0], [2], [0]], "fitness": -0.833142876625061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4577949047088623, 0.7875208258628845, 0.6302108764648438, 0.5688837170600891, 0.5276228189468384, 0.4943455457687378, 0.5069438815116882, 0.5032137632369995, 0.46448007225990295, 0.48071691393852234, 0.46107545495033264, 0.45987674593925476, 0.459225594997406, 0.4172893166542053, 0.4548094570636749, 0.4882459342479706, 0.5022395849227905, 0.482830286026001], "accuracy": [0.490159809589386, 0.7297582626342773, 0.7619865536689758, 0.7961959838867188, 0.8096684813499451, 0.8203672170639038, 0.8152159452438354, 0.8214238286018372, 0.8329150676727295, 0.8253863453865051, 0.8421608805656433, 0.8319904804229736, 0.8428213000297546, 0.8498216867446899, 0.844010055065155, 0.8405758738517761, 0.8337075710296631, 0.8327829837799072], "val_loss": [0.8083486557006836, 0.6236206889152527, 0.5232167840003967, 0.5066847801208496, 0.4874999225139618, 0.49929189682006836, 0.47714370489120483, 0.5227770805358887, 0.5139277577400208, 0.5045058727264404, 0.4906828701496124, 0.5006429553031921, 0.49582502245903015, 0.5412493348121643, 0.5226678848266602, 0.5725722312927246, 0.5543509125709534, 0.553684651851654], "val_accuracy": [0.7350000143051147, 0.7730000019073486, 0.7976666688919067, 0.8223333358764648, 0.8240000009536743, 0.8273333311080933, 0.8376666903495789, 0.8336666822433472, 0.843666672706604, 0.8386666774749756, 0.8386666774749756, 0.8456666469573975, 0.8516666889190674, 0.846666693687439, 0.8429999947547913, 0.8289999961853027, 0.8456666469573975, 0.8373333215713501]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 3, 0, 3, 2], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 8, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 3, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3037495613098145, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 3, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 6, 0, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 2, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, alpha)))))", "other_info": {"loss": [2.304391384124756, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [1, 2, 0, 0], [16, 37], [1, 1], [3], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 0, 8, 1, 4, 1, 4, 2, 2], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 55, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 1, 0, 1, 1, 11, 6, 5, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30387806892395, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 0, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 2], [38, 16], [0, 0, 1], [0, 8], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 3, 3, 6, 8, 1, 5, 6, 5, 0, 8], [0, 0, 3, 3, 0, 0, 3, 1, 3, 0], [16, 99, 9, 99, 80, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 2, 3, 2, 1, 1, 15, 9, 6, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(sigma))), sigma)), tf.math.divide_no_nan(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]