[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8688571453094482, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2227885723114014, 1.8667538166046143, 1.3878158330917358, 1.0976176261901855, 0.9290701746940613, 0.8356338739395142, 0.767355740070343, 0.7321354150772095, 0.6908463835716248, 0.6575379967689514, 0.6322278380393982, 0.6080508232116699, 0.5835147500038147, 0.5767645239830017, 0.5585500001907349, 0.5411874651908875, 0.529533326625824, 0.5154644846916199, 0.5052767992019653, 0.4938759207725525, 0.4924323558807373, 0.48820504546165466, 0.47344833612442017, 0.46954894065856934, 0.46095553040504456, 0.45397353172302246, 0.43151113390922546, 0.43081924319267273, 0.42985349893569946, 0.4161229729652405, 0.4070594012737274, 0.40451961755752563, 0.39843878149986267, 0.3886193633079529, 0.38604024052619934, 0.3809662163257599, 0.3718186616897583, 0.3733539879322052, 0.36354634165763855], "accuracy": [0.28397834300994873, 0.4777440130710602, 0.5676925182342529, 0.6185444593429565, 0.6676793098449707, 0.7053229212760925, 0.7223616242408752, 0.7353057861328125, 0.746268630027771, 0.7614582180976868, 0.7662131786346436, 0.7770439982414246, 0.783119797706604, 0.7885351777076721, 0.7968564033508301, 0.8016114234924316, 0.8109893202781677, 0.8104609847068787, 0.8144234418869019, 0.8193105459213257, 0.8185180425643921, 0.8265751004219055, 0.8323867321014404, 0.8296129703521729, 0.8379341959953308, 0.8337075710296631, 0.8438779711723328, 0.8441421389579773, 0.8453308939933777, 0.8519350290298462, 0.8535200357437134, 0.8553691506385803, 0.8599920868873596, 0.8638224601745605, 0.863029956817627, 0.8648791313171387, 0.8672566413879395, 0.8664641380310059, 0.8698983192443848], "val_loss": [2.0386006832122803, 1.5068408250808716, 1.0367833375930786, 0.8321883678436279, 0.7461174130439758, 0.6886606216430664, 0.6467738151550293, 0.6138635873794556, 0.5890903472900391, 0.5663132071495056, 0.5477785468101501, 0.5346194505691528, 0.5203500390052795, 0.5131391882896423, 0.500970721244812, 0.49031803011894226, 0.4815499186515808, 0.47370174527168274, 0.46757617592811584, 0.46712902188301086, 0.4603850841522217, 0.45778194069862366, 0.44461163878440857, 0.44419965147972107, 0.4315626621246338, 0.42859384417533875, 0.43163442611694336, 0.4215543568134308, 0.42378750443458557, 0.4178186058998108, 0.4193216860294342, 0.40968891978263855, 0.4077971577644348, 0.4024660587310791, 0.40039029717445374, 0.39774519205093384, 0.3944850265979767, 0.39065662026405334, 0.3900880515575409], "val_accuracy": [0.5506666898727417, 0.6676666736602783, 0.687666654586792, 0.7113333344459534, 0.7336666584014893, 0.7476666569709778, 0.7609999775886536, 0.7756666541099548, 0.7846666574478149, 0.7923333048820496, 0.8009999990463257, 0.8053333163261414, 0.812666654586792, 0.8136666417121887, 0.8230000138282776, 0.8256666660308838, 0.8256666660308838, 0.8346666693687439, 0.8320000171661377, 0.8320000171661377, 0.8373333215713501, 0.8370000123977661, 0.8360000252723694, 0.8423333168029785, 0.8443333506584167, 0.8433333039283752, 0.8450000286102295, 0.8510000109672546, 0.8453333377838135, 0.8510000109672546, 0.8476666808128357, 0.8503333330154419, 0.856333315372467, 0.8613333106040955, 0.8569999933242798, 0.8586666584014893, 0.8600000143051147, 0.859333336353302, 0.8576666712760925]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], [0, 3, 6, 3, 6, 0, 8, 9, 1, 4, 3, 1, 9], [0, 2, 7, 1, 7, 7, 2], [0, 12, 21], [1], [0], [2], [0]], "fitness": -0.8360000252723694, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.sqrt(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.subtract(beta, grad))), tf.math.pow(alpha, tf.math.multiply(grad, tf.math.subtract(grad, beta)))), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.564949631690979, 0.8569604754447937, 0.6839199066162109, 0.6089318990707397, 0.5791524052619934, 0.5758520364761353, 0.5801928043365479, 0.5532988905906677, 0.5505887269973755, 0.5133894085884094, 0.5103009343147278, 0.512357771396637, 0.5030458569526672, 0.5347834229469299, 0.564339280128479, 0.5830045342445374], "accuracy": [0.46149781346321106, 0.6964733600616455, 0.7478536367416382, 0.7716285586357117, 0.7814027070999146, 0.791441023349762, 0.7827235460281372, 0.7977809906005859, 0.8099326491355896, 0.8169330358505249, 0.8119139075279236, 0.8216879963874817, 0.8193105459213257, 0.8210275769233704, 0.8082155585289001, 0.8079513907432556], "val_loss": [0.8537845015525818, 0.6099444031715393, 0.5775291919708252, 0.5307267308235168, 0.5401010513305664, 0.5500465035438538, 0.5491889119148254, 0.5108219981193542, 0.5662497282028198, 0.4987678527832031, 0.5225074887275696, 0.4908229112625122, 0.5426286458969116, 0.5677044987678528, 0.5919135808944702, 0.5701354742050171], "val_accuracy": [0.684333324432373, 0.7673333287239075, 0.7856666445732117, 0.8083333373069763, 0.793666660785675, 0.8149999976158142, 0.8033333420753479, 0.8259999752044678, 0.8376666903495789, 0.8259999752044678, 0.8446666598320007, 0.8336666822433472, 0.8410000205039978, 0.809333324432373, 0.824999988079071, 0.8106666803359985]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 20, 13, 7, 3, 1, 0, 1, 0], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 7, 4, 8, 7, 3], [0, 6, 2, 0, 7, 1], [0, 42], [0, 1], [0], [1], [0]], "fitness": -0.821142852306366, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(grad, tf.math.sqrt(beta)), tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293957233428955, 2.190657138824463, 1.7726316452026367, 1.3554974794387817, 1.0812119245529175, 0.9171044230461121, 0.836871862411499, 0.7992636561393738, 0.7579687237739563, 0.7407152652740479, 0.6922298073768616, 0.6747597455978394, 0.6342135071754456, 0.6199014186859131, 0.6149455308914185, 0.6029108166694641, 0.581184983253479, 0.5681414008140564, 0.5585665702819824, 0.5511528253555298, 0.5346599817276001, 0.5195914506912231, 0.5121535658836365, 0.49995043873786926, 0.494253545999527, 0.49078863859176636, 0.48263683915138245], "accuracy": [0.12719587981700897, 0.32399946451187134, 0.4357416331768036, 0.54220050573349, 0.629507303237915, 0.6604147553443909, 0.6970016956329346, 0.7022850513458252, 0.707040011882782, 0.7112666964530945, 0.7346453666687012, 0.7425703406333923, 0.7530049085617065, 0.7602694630622864, 0.7606657147407532, 0.7708360552787781, 0.7844406366348267, 0.7827235460281372, 0.7848368883132935, 0.793950617313385, 0.7927618622779846, 0.798309326171875, 0.8059701323509216, 0.8100647330284119, 0.8038568496704102, 0.8074230551719666, 0.8146876096725464], "val_loss": [2.24611234664917, 2.021496534347534, 1.1302289962768555, 0.8510369658470154, 0.7629660367965698, 0.7017909288406372, 0.645815372467041, 0.6244907379150391, 0.6286122798919678, 0.633171796798706, 0.5703685879707336, 0.5545138120651245, 0.5450466871261597, 0.5345605611801147, 0.5295526385307312, 0.5125550031661987, 0.5004599094390869, 0.49682557582855225, 0.5067311525344849, 0.4939320385456085, 0.48666495084762573, 0.4856107532978058, 0.49752506613731384, 0.4822207987308502, 0.4781164526939392, 0.4788808226585388, 0.47502607107162476], "val_accuracy": [0.4189999997615814, 0.445333331823349, 0.6613333225250244, 0.6923333406448364, 0.7160000205039978, 0.7463333606719971, 0.7593333125114441, 0.7633333206176758, 0.7706666588783264, 0.7613333463668823, 0.7796666622161865, 0.7829999923706055, 0.7879999876022339, 0.7919999957084656, 0.7983333468437195, 0.8043333292007446, 0.8109999895095825, 0.8136666417121887, 0.8153333067893982, 0.8143333196640015, 0.8233333230018616, 0.8326666951179504, 0.8266666531562805, 0.8266666531562805, 0.828000009059906, 0.8306666612625122, 0.8309999704360962]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 13, 7, 6, 2, 2, 1, 1, 0], "tree_depth": 13}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 4], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 6, 8, 9, 9, 1, 4, 2, 8], [3, 0, 0, 3, 0, 0, 3, 1, 2, 4], [73, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 10, 6, 4, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(sigma, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.3034350872039795, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 3, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [8, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 1, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 6, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 2, 8, 1, 4, 1, 4, 9, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 50]], "fitness": -0.09457142651081085, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 1, 2, 1, 1, 1, 18, 10, 8, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad)))), alpha), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3098437786102295, 2.3095877170562744, 2.3096396923065186, 2.309495210647583, 2.3092610836029053, 2.310072660446167, 2.309424638748169, 2.3093018531799316, 2.3096516132354736, 2.3087973594665527], "accuracy": [0.0944393053650856, 0.08968432247638702, 0.09668471664190292, 0.09430722147226334, 0.08955223858356476, 0.0940430611371994, 0.0948355570435524, 0.09972262382507324, 0.09549596905708313, 0.09140139818191528], "val_loss": [2.3089611530303955, 2.30887770652771, 2.3087496757507324, 2.3085882663726807, 2.308401107788086, 2.308192014694214, 2.30796480178833, 2.3077220916748047, 2.3074636459350586, 2.3071930408477783], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08833333104848862, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 4], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 4, 3, 1, 6, 7, 9], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 2, 0, 2, 6, 2, 6, 9, 4, 0, 6, 5, 1, 3, 8, 0, 0], [0, 6, 6, 6, 4, 2, 7, 4, 6], [0, 19], [1], [0], [1], [0]], "fitness": -0.08942857384681702, "mapping_values": [1, 6, 3, 3, 2, 12, 7, 5, 4, 26, 17, 9, 2, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, grad)), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.negative(tf.math.divide_no_nan(tf.math.square(grad), tf.math.subtract(grad, beta))), tf.math.multiply(tf.math.sqrt(grad), grad)))), tf.math.negative(tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3086702823638916, 2.3096134662628174, 2.3089826107025146, 2.308692693710327, 2.308408260345459, 2.3101701736450195], "accuracy": [0.09325055778026581, 0.09338264167308807, 0.09417514503002167, 0.09166556596755981, 0.09153348207473755, 0.08757099509239197], "val_loss": [2.3087544441223145, 2.3087544441223145, 2.3087544441223145, 2.3087544441223145, 2.3087544441223145, 2.3087544441223145], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]