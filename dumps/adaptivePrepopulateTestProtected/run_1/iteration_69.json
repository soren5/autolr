[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8605714440345764, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.225325345993042, 1.8687453269958496, 1.3897068500518799, 1.0847930908203125, 0.9182129502296448, 0.8359691500663757, 0.7621045708656311, 0.7282870411872864, 0.6884706020355225, 0.6575528383255005, 0.6383976340293884, 0.6121376752853394, 0.5948145389556885, 0.5722193121910095, 0.5589256882667542, 0.5509487390518188, 0.5360104441642761, 0.5262173414230347, 0.5138089060783386, 0.504732608795166, 0.5002808570861816, 0.48519113659858704, 0.4787082374095917, 0.46601229906082153, 0.4603874087333679, 0.44692865014076233, 0.441098153591156, 0.43540650606155396, 0.4294513761997223, 0.4301011562347412, 0.4245463013648987, 0.4029303193092346, 0.399868905544281, 0.394593745470047, 0.38950833678245544, 0.38286399841308594, 0.3759828507900238, 0.37267258763313293, 0.370337575674057, 0.3650120198726654, 0.3593631386756897, 0.3472307622432709, 0.34677034616470337, 0.34659501910209656, 0.3394123911857605, 0.32835227251052856, 0.3263896703720093, 0.3225877285003662, 0.3157799243927002, 0.31198087334632874, 0.30894988775253296, 0.3138352632522583, 0.30291882157325745, 0.2970775067806244, 0.2972158193588257, 0.2969430387020111, 0.28817346692085266, 0.28382325172424316, 0.2740456163883209], "accuracy": [0.2727513015270233, 0.5023114681243896, 0.5700700283050537, 0.6196011304855347, 0.6737551093101501, 0.6971337795257568, 0.7277770638465881, 0.7334566116333008, 0.7504953145980835, 0.755118191242218, 0.7638356685638428, 0.7775723338127136, 0.7773081660270691, 0.7926297783851624, 0.7956677079200745, 0.7981772422790527, 0.8033285140991211, 0.8098005652427673, 0.811649739742279, 0.819970965385437, 0.8195747137069702, 0.8261788487434387, 0.8296129703521729, 0.8342359066009521, 0.8347642421722412, 0.8370096683502197, 0.8401796221733093, 0.8437458872795105, 0.8532558679580688, 0.8473120927810669, 0.850350022315979, 0.8529917001724243, 0.8580108284950256, 0.8617091774940491, 0.8609166741371155, 0.8625016212463379, 0.8704266548156738, 0.867520809173584, 0.8692378997802734, 0.8720116019248962, 0.8735966086387634, 0.8758420348167419, 0.8776912093162537, 0.8765024542808533, 0.878351628780365, 0.8805969953536987, 0.8841632604598999, 0.882710337638855, 0.8864086866378784, 0.8873332738876343, 0.8879936337471008, 0.887597382068634, 0.8902390599250793, 0.8932769894599915, 0.8919561505317688, 0.8920882344245911, 0.8977677822113037, 0.8986923694610596, 0.8982961177825928], "val_loss": [2.04280948638916, 1.5173733234405518, 1.0407092571258545, 0.8280729055404663, 0.7348859310150146, 0.6799817681312561, 0.6375621557235718, 0.6112368106842041, 0.577519953250885, 0.5601601004600525, 0.5441458821296692, 0.5248306393623352, 0.5121657252311707, 0.4981636703014374, 0.491278737783432, 0.47426506876945496, 0.46743661165237427, 0.4623887240886688, 0.4528292119503021, 0.4440218210220337, 0.44094929099082947, 0.43057048320770264, 0.4303617775440216, 0.4208846986293793, 0.4114541709423065, 0.41292858123779297, 0.41419848799705505, 0.40003275871276855, 0.39649373292922974, 0.40095850825309753, 0.39654508233070374, 0.38944604992866516, 0.38396701216697693, 0.3834320604801178, 0.37828731536865234, 0.3736461102962494, 0.3724404275417328, 0.37260526418685913, 0.3668365180492401, 0.36865854263305664, 0.3606957495212555, 0.36443811655044556, 0.36834317445755005, 0.35688912868499756, 0.3617340922355652, 0.35333573818206787, 0.34926262497901917, 0.35179638862609863, 0.3536314368247986, 0.3466118574142456, 0.3487330675125122, 0.3508830666542053, 0.34328076243400574, 0.34039080142974854, 0.34927499294281006, 0.3418923318386078, 0.3393072783946991, 0.3440485894680023, 0.34057942032814026], "val_accuracy": [0.5213333368301392, 0.668666660785675, 0.6919999718666077, 0.7083333134651184, 0.7319999933242798, 0.7556666731834412, 0.7649999856948853, 0.7730000019073486, 0.7883333563804626, 0.7950000166893005, 0.7956666946411133, 0.8026666641235352, 0.8086666464805603, 0.815666675567627, 0.8169999718666077, 0.8270000219345093, 0.82833331823349, 0.8286666870117188, 0.8346666693687439, 0.8393333554267883, 0.8399999737739563, 0.8450000286102295, 0.8463333249092102, 0.8529999852180481, 0.8519999980926514, 0.856333315372467, 0.859000027179718, 0.8616666793823242, 0.8616666793823242, 0.862666666507721, 0.8616666793823242, 0.8619999885559082, 0.8666666746139526, 0.8683333396911621, 0.8683333396911621, 0.8700000047683716, 0.8740000128746033, 0.8709999918937683, 0.8733333349227905, 0.8693333268165588, 0.8743333220481873, 0.8713333606719971, 0.8740000128746033, 0.8803333044052124, 0.875333309173584, 0.8763333559036255, 0.8823333382606506, 0.8799999952316284, 0.8786666393280029, 0.8830000162124634, 0.8820000290870667, 0.8830000162124634, 0.8820000290870667, 0.8863333463668823, 0.8820000290870667, 0.8856666684150696, 0.8856666684150696, 0.8809999823570251, 0.8859999775886536]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 1], [0, 7, 9], [0], [0, 63], [0, 1], [0], [1], [0]], "fitness": -0.8268571496009827, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2924208641052246, 2.185901403427124, 1.7566678524017334, 1.3509858846664429, 1.0552730560302734, 0.9043923616409302, 0.8268454670906067, 0.8174874186515808, 0.7649195194244385, 0.7424657940864563, 0.6951819658279419, 0.687407374382019, 0.6485679149627686, 0.6243208050727844, 0.6052819490432739, 0.6048423647880554, 0.579736590385437, 0.5739458799362183, 0.5632485747337341, 0.5485503673553467, 0.533741295337677, 0.5404213666915894, 0.5241373181343079, 0.51617032289505, 0.5107253789901733, 0.49146008491516113, 0.47127702832221985, 0.4697435200214386, 0.4565291702747345, 0.4503483474254608, 0.43557101488113403, 0.43480604887008667, 0.4266987442970276, 0.41634640097618103, 0.41150325536727905, 0.4028069078922272, 0.38718920946121216, 0.38048502802848816, 0.3806385397911072, 0.37239906191825867, 0.3687220513820648, 0.36028480529785156, 0.35214656591415405, 0.3377652168273926, 0.33178403973579407, 0.33464163541793823, 0.32632410526275635, 0.32082781195640564, 0.30727270245552063, 0.31613689661026, 0.307980477809906, 0.30396121740341187, 0.31279483437538147, 0.2986120283603668, 0.30496659874916077, 0.27815088629722595, 0.30045241117477417], "accuracy": [0.12402588874101639, 0.32822611927986145, 0.4352133274078369, 0.5379738211631775, 0.6388852000236511, 0.669792652130127, 0.691850483417511, 0.6873596906661987, 0.7037379741668701, 0.7074362635612488, 0.7380794882774353, 0.7378153204917908, 0.7497028112411499, 0.7614582180976868, 0.7597411274909973, 0.7701756954193115, 0.778761088848114, 0.7817989587783813, 0.7800818681716919, 0.791969358921051, 0.7976489067077637, 0.7960638999938965, 0.7936864495277405, 0.8016114234924316, 0.8057059645652771, 0.8099326491355896, 0.819970965385437, 0.8186501264572144, 0.828820526599884, 0.8211596608161926, 0.837141752243042, 0.8335754871368408, 0.8366134166717529, 0.8383304476737976, 0.8378021121025085, 0.8459912538528442, 0.8477083444595337, 0.8562937378883362, 0.8491612672805786, 0.8537842035293579, 0.857218325138092, 0.8607845902442932, 0.8623695969581604, 0.874389111995697, 0.8755778670310974, 0.8701624870300293, 0.8739928603172302, 0.8747853636741638, 0.8794082403182983, 0.8737286925315857, 0.8767666220664978, 0.8796724081039429, 0.8808611631393433, 0.8854840993881226, 0.8838990926742554, 0.8882578015327454, 0.8836349248886108], "val_loss": [2.2461698055267334, 2.015270709991455, 1.1457782983779907, 0.9465559124946594, 0.7773259282112122, 0.7217057943344116, 0.7044192552566528, 0.6727157235145569, 0.6557618975639343, 0.6568067669868469, 0.6175459623336792, 0.6082637310028076, 0.5729675889015198, 0.5656559467315674, 0.5600548982620239, 0.558580756187439, 0.5337704420089722, 0.5188596844673157, 0.5127979516983032, 0.5175454020500183, 0.5088644027709961, 0.5104002952575684, 0.5125144124031067, 0.5064488053321838, 0.4922524392604828, 0.4804927706718445, 0.4794410765171051, 0.4708583950996399, 0.4657241106033325, 0.44979190826416016, 0.43969741463661194, 0.4358678460121155, 0.43107470870018005, 0.43680477142333984, 0.43378522992134094, 0.4284682273864746, 0.4262474477291107, 0.4327435791492462, 0.4378449022769928, 0.43785685300827026, 0.4307774603366852, 0.4283789396286011, 0.4208633601665497, 0.41415295004844666, 0.4190487861633301, 0.43108609318733215, 0.4257296919822693, 0.41072022914886475, 0.40690159797668457, 0.4130496382713318, 0.41438737511634827, 0.43576550483703613, 0.446909099817276, 0.4532357454299927, 0.46494752168655396, 0.46255066990852356, 0.4756554365158081], "val_accuracy": [0.4099999964237213, 0.4426666796207428, 0.6399999856948853, 0.6793333292007446, 0.7163333296775818, 0.7179999947547913, 0.7363333106040955, 0.7416666746139526, 0.7436666488647461, 0.7566666603088379, 0.7633333206176758, 0.7726666927337646, 0.7806666493415833, 0.7883333563804626, 0.7923333048820496, 0.7916666865348816, 0.8029999732971191, 0.8036666512489319, 0.8190000057220459, 0.8116666674613953, 0.8216666579246521, 0.8169999718666077, 0.8163333535194397, 0.815666675567627, 0.8289999961853027, 0.8309999704360962, 0.8343333601951599, 0.8356666564941406, 0.831333339214325, 0.8410000205039978, 0.8493333458900452, 0.8510000109672546, 0.8560000061988831, 0.8483333587646484, 0.8526666760444641, 0.8529999852180481, 0.8576666712760925, 0.8573333621025085, 0.8560000061988831, 0.8610000014305115, 0.8643333315849304, 0.8669999837875366, 0.8650000095367432, 0.8673333525657654, 0.8690000176429749, 0.8679999709129333, 0.8713333606719971, 0.8736666440963745, 0.8709999918937683, 0.8709999918937683, 0.8706666827201843, 0.874666690826416, 0.8669999837875366, 0.8673333525657654, 0.874666690826416, 0.8693333268165588, 0.8659999966621399]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 4, 3, 1, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 1, 0, 1], [0, 2, 7, 0], [0, 3, 5], [0], [1], [0], [2], [0]], "fitness": -0.808571457862854, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.628283977508545, 0.8335756063461304, 0.691326379776001, 0.6510857939720154, 0.6575692892074585, 0.6310415267944336, 0.658126175403595, 0.6110071539878845, 0.6041965484619141, 0.6011691093444824, 0.5710287094116211, 0.5957009792327881, 0.5904654860496521, 0.5362856388092041, 0.5402840971946716], "accuracy": [0.48051777482032776, 0.7121912837028503, 0.7516840696334839, 0.7648923397064209, 0.7685906887054443, 0.7938185334205627, 0.7759873270988464, 0.7823272943496704, 0.7804781198501587, 0.7869502305984497, 0.7972526550292969, 0.7907806038856506, 0.8030643463134766, 0.8083476424217224, 0.8055738806724548], "val_loss": [0.8770660758018494, 0.6538960933685303, 0.5920355916023254, 0.576846182346344, 0.5680217742919922, 0.6099107265472412, 0.641404390335083, 0.5621419548988342, 0.6089140772819519, 0.6142303943634033, 0.6130537986755371, 0.6186104416847229, 0.6907999515533447, 0.6618730425834656, 0.5974926948547363], "val_accuracy": [0.7246666550636292, 0.7720000147819519, 0.7820000052452087, 0.8040000200271606, 0.8073333501815796, 0.8013333082199097, 0.8043333292007446, 0.8059999942779541, 0.7893333435058594, 0.815666675567627, 0.7973333597183228, 0.812666654586792, 0.812333345413208, 0.8133333325386047, 0.8149999976158142]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 24], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [6, 2, 0, 0, 3, 5, 8], [0, 2, 3, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 8, 3, 4, 8, 1, 2, 8], [0, 0, 0, 3, 4, 0, 1, 1, 2, 0, 3, 4, 0, 3], [16, 99, 96, 67, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 11, 7, 4, 1, 1, 0, 1, 1, 32, 18, 14, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta), tf.math.multiply(grad, tf.math.square(tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.add(grad, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.sqrt(tf.math.sqrt(alpha))))), beta), tf.math.multiply(tf.math.pow(tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.subtract(tf.math.add(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [9, 2, 3, 9, 3], [0, 0, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [2, 2, 0, 3], [16, 16], [0, 1], [8], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 6, 9], [0, 1, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 10, 6, 4, 1, 2, 1, 1, 0, 20, 11, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(beta), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(alpha, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [6, 2, 4, 0, 3], [0, 1, 0, 2], [74, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 5, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [6, 2, 3, 6, 8, 1, 4, 9, 4, 2, 8, 7, 1, 5, 6], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 3], [16, 99, 96, 99, 61, 1, 25]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 6, 4, 2, 1, 2, 1, 1, 1, 26, 15, 11, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(tf.math.sqrt(sigma), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.subtract(sigma, alpha), tf.math.square(beta))), tf.math.divide_no_nan(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [5.964992046356201, 1023.0848999023438, 8013.83447265625, 40594.78515625, 106200.765625, 219552.953125, 460649.46875, 868464.75], "accuracy": [0.10117553919553757, 0.09734513610601425, 0.1022322028875351, 0.09589222073554993, 0.09932637959718704, 0.09945846349000931, 0.09602430462837219, 0.09377889335155487], "val_loss": [108.0019302368164, 2293.300048828125, 20069.345703125, 68612.9140625, 157347.140625, 340451.71875, 687445.6875, 1199595.375], "val_accuracy": [0.09666666388511658, 0.09966666996479034, 0.10000000149011612, 0.10000000149011612, 0.09966666996479034, 0.09866666793823242, 0.09966666996479034, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 4, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 8], [3, 2, 3, 3], [16, 16], [0, 0, 1], [0, 0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 0], [0, 0, 0, 3, 0, 0, 4, 1, 1, 0], [16, 2, 37, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 0, 3, 2, 1, 1, 16, 8, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(grad, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), grad), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]