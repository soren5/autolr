[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8700000047683716, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2225959300994873, 1.864880919456482, 1.3847687244415283, 1.0894043445587158, 0.9320308566093445, 0.8406444787979126, 0.774441123008728, 0.716585636138916, 0.6878271102905273, 0.6551001071929932, 0.6238085031509399, 0.6015926003456116, 0.5830094814300537, 0.5665204524993896, 0.5590655207633972, 0.5413208603858948, 0.5305612683296204, 0.5138067603111267, 0.5047377347946167, 0.4987069070339203, 0.48192617297172546, 0.4749341905117035, 0.4606342315673828, 0.453978955745697, 0.4448945224285126, 0.43767812848091125, 0.43293455243110657, 0.42283180356025696, 0.41093873977661133, 0.41213133931159973, 0.4009079337120056, 0.40158554911613464, 0.3878820836544037, 0.3843632638454437, 0.3806912302970886, 0.37296414375305176, 0.3660376965999603, 0.36881589889526367, 0.3577490448951721, 0.35030442476272583, 0.34185338020324707, 0.3421786427497864, 0.3330935835838318, 0.3350328207015991, 0.3285338580608368, 0.3247250020503998, 0.3146350085735321, 0.3124936819076538, 0.3104948103427887, 0.3078829348087311, 0.29861822724342346, 0.30032557249069214, 0.2926928997039795, 0.289689302444458, 0.2808855473995209, 0.2808259427547455, 0.27187374234199524, 0.274670273065567, 0.2744505703449249, 0.2606772482395172, 0.2595284581184387, 0.2514258325099945, 0.2566700279712677, 0.2516317367553711, 0.2469603419303894, 0.24794898927211761], "accuracy": [0.28463876247406006, 0.49227315187454224, 0.5676925182342529, 0.6196011304855347, 0.6623960137367249, 0.6946242451667786, 0.7177387475967407, 0.7382115721702576, 0.7425703406333923, 0.7593448758125305, 0.7717606425285339, 0.778232753276825, 0.7886672616004944, 0.7960638999938965, 0.7944789528846741, 0.8016114234924316, 0.8064984679222107, 0.8146876096725464, 0.8195747137069702, 0.8197067975997925, 0.8264430165290833, 0.8302733898162842, 0.8350284099578857, 0.8405758738517761, 0.8405758738517761, 0.8412362933158875, 0.8446704745292664, 0.8495575189590454, 0.8511425256729126, 0.8539162874221802, 0.8621054291725159, 0.8565579056739807, 0.8599920868873596, 0.8648791313171387, 0.8656716346740723, 0.8671245574951172, 0.8671245574951172, 0.8689737319946289, 0.8721436858177185, 0.8771628737449646, 0.876370370388031, 0.8780874609947205, 0.8791441321372986, 0.8795403242111206, 0.8845595121383667, 0.8813894987106323, 0.8853520154953003, 0.8908994793891907, 0.8912957310676575, 0.8918240666389465, 0.8906353116035461, 0.8893144726753235, 0.8951261639595032, 0.8953903317451477, 0.8993527889251709, 0.89988112449646, 0.9041078090667725, 0.8997490406036377, 0.9025228023529053, 0.904768168926239, 0.9084665179252625, 0.9075419306755066, 0.91124027967453, 0.9105798602104187, 0.9113723635673523, 0.9115044474601746], "val_loss": [2.035705089569092, 1.5042060613632202, 1.0216139554977417, 0.8068119287490845, 0.7231879234313965, 0.6712127327919006, 0.6278896331787109, 0.5871803164482117, 0.5605128407478333, 0.546728253364563, 0.5222175121307373, 0.5054110288619995, 0.4971676468849182, 0.48395010828971863, 0.47943782806396484, 0.4622955620288849, 0.4571753740310669, 0.45914965867996216, 0.43635547161102295, 0.43589305877685547, 0.42643752694129944, 0.4183211326599121, 0.4166068434715271, 0.4092382490634918, 0.40636172890663147, 0.4067622125148773, 0.39479759335517883, 0.3962104916572571, 0.3935070037841797, 0.3884759545326233, 0.38360676169395447, 0.3814292848110199, 0.3799276053905487, 0.3800942003726959, 0.37343570590019226, 0.3771519362926483, 0.3704662621021271, 0.36767512559890747, 0.3735572099685669, 0.36384791135787964, 0.3641603887081146, 0.3631771206855774, 0.369282603263855, 0.3627907633781433, 0.36123937368392944, 0.35620108246803284, 0.3588962256908417, 0.35455119609832764, 0.3577084243297577, 0.35876327753067017, 0.3511752188205719, 0.35428303480148315, 0.3505030870437622, 0.34584587812423706, 0.3483218550682068, 0.35024046897888184, 0.34941065311431885, 0.35191890597343445, 0.3482157289981842, 0.34703943133354187, 0.3501202464103699, 0.346377432346344, 0.34624576568603516, 0.3482508957386017, 0.3480602204799652, 0.34157758951187134], "val_accuracy": [0.57833331823349, 0.6763333082199097, 0.6956666707992554, 0.7263333201408386, 0.7459999918937683, 0.7630000114440918, 0.7689999938011169, 0.7839999794960022, 0.7903333306312561, 0.7983333468437195, 0.8080000281333923, 0.8176666498184204, 0.8196666836738586, 0.8259999752044678, 0.8320000171661377, 0.8323333263397217, 0.8353333473205566, 0.8339999914169312, 0.8420000076293945, 0.8489999771118164, 0.8500000238418579, 0.8546666502952576, 0.8539999723434448, 0.8566666841506958, 0.8513333201408386, 0.8513333201408386, 0.8586666584014893, 0.8569999933242798, 0.862333357334137, 0.859333336353302, 0.8666666746139526, 0.8643333315849304, 0.8640000224113464, 0.8633333444595337, 0.8676666617393494, 0.8629999756813049, 0.8690000176429749, 0.8703333139419556, 0.8696666955947876, 0.8676666617393494, 0.8713333606719971, 0.8706666827201843, 0.8669999837875366, 0.8723333477973938, 0.871999979019165, 0.8743333220481873, 0.8726666569709778, 0.8766666650772095, 0.8743333220481873, 0.871999979019165, 0.8766666650772095, 0.8756666779518127, 0.8769999742507935, 0.8769999742507935, 0.878000020980835, 0.8776666522026062, 0.8786666393280029, 0.8769999742507935, 0.8796666860580444, 0.8790000081062317, 0.8833333253860474, 0.8806666731834412, 0.8776666522026062, 0.8816666603088379, 0.8806666731834412, 0.8790000081062317]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1, 1], [0, 6], [0, 4], [0], [0, 1], [0], [1], [0]], "fitness": -0.8619999885559082, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293149948120117, 2.1892385482788086, 1.7642658948898315, 1.3494524955749512, 1.0847597122192383, 0.8930505514144897, 0.8344778418540955, 0.830531656742096, 0.7426649332046509, 0.7419224977493286, 0.6904979944229126, 0.6770700216293335, 0.6334296464920044, 0.6119459271430969, 0.5990231037139893, 0.5903476476669312, 0.578326940536499, 0.558638870716095, 0.5559608340263367, 0.5267064571380615, 0.5207696557044983, 0.517464280128479, 0.500938892364502, 0.48597103357315063, 0.47676169872283936, 0.4702432155609131, 0.45827099680900574, 0.45129674673080444, 0.43731486797332764, 0.43667522072792053, 0.41813284158706665, 0.4140637516975403, 0.4039088785648346, 0.397945761680603, 0.3900597393512726, 0.38401705026626587, 0.3759201765060425, 0.37647873163223267, 0.3640277087688446, 0.3598130941390991, 0.348646342754364, 0.3417961001396179, 0.3411301076412201, 0.3561846613883972, 0.34242892265319824, 0.3311270475387573, 0.31798893213272095, 0.32939469814300537, 0.3132402002811432, 0.3172716200351715, 0.3077671527862549, 0.2874603271484375, 0.2966434061527252, 0.2932043969631195, 0.30154356360435486, 0.2874339520931244], "accuracy": [0.12336547672748566, 0.3287544548511505, 0.4356095492839813, 0.5469554662704468, 0.6310923099517822, 0.6765288710594177, 0.6921146512031555, 0.6917183995246887, 0.7180029153823853, 0.719852089881897, 0.7314753532409668, 0.7469290494918823, 0.7560427784919739, 0.7622507214546204, 0.772288978099823, 0.7693831920623779, 0.780610203742981, 0.7847048044204712, 0.7872143983840942, 0.8010830879211426, 0.8010830879211426, 0.806630551815033, 0.8050455451011658, 0.8189142942428589, 0.8204993009567261, 0.822348415851593, 0.8207634687423706, 0.8271034359931946, 0.8322546482086182, 0.8330471515655518, 0.8413683772087097, 0.8453308939933777, 0.848368763923645, 0.8485008478164673, 0.8481045961380005, 0.8541803956031799, 0.8549728989601135, 0.8588033318519592, 0.8681812286376953, 0.86553955078125, 0.8644828796386719, 0.8681812286376953, 0.8677849769592285, 0.8689737319946289, 0.8693699836730957, 0.8704266548156738, 0.8749174475669861, 0.8691058158874512, 0.8757099509239197, 0.8761062026023865, 0.8776912093162537, 0.8860124349594116, 0.8856161832809448, 0.8815215826034546, 0.8821820020675659, 0.8864086866378784], "val_loss": [2.2452657222747803, 2.014234781265259, 1.1140120029449463, 0.8567511439323425, 0.7557333111763, 0.6987006664276123, 0.6824836730957031, 0.6425549983978271, 0.6352237462997437, 0.6101688742637634, 0.5785907506942749, 0.5548757910728455, 0.5292412638664246, 0.519736647605896, 0.5123828053474426, 0.5053620934486389, 0.5035730600357056, 0.49567627906799316, 0.49717411398887634, 0.4934713542461395, 0.4895062744617462, 0.4803946018218994, 0.4754531979560852, 0.46754977107048035, 0.4579770565032959, 0.45005571842193604, 0.44545048475265503, 0.4321058690547943, 0.4320216774940491, 0.4225884675979614, 0.43179744482040405, 0.43045541644096375, 0.4228852391242981, 0.432677298784256, 0.42114412784576416, 0.4076123535633087, 0.4135831594467163, 0.4098186790943146, 0.422995924949646, 0.4115520417690277, 0.40142613649368286, 0.41486817598342896, 0.4189905524253845, 0.41526490449905396, 0.4152893126010895, 0.414276123046875, 0.4259181320667267, 0.40895819664001465, 0.4099805951118469, 0.4343271851539612, 0.45631110668182373, 0.45524877309799194, 0.45418480038642883, 0.46446818113327026, 0.46328994631767273, 0.44855761528015137], "val_accuracy": [0.43566668033599854, 0.4819999933242798, 0.6606666445732117, 0.7056666612625122, 0.722000002861023, 0.7390000224113464, 0.7573333382606506, 0.7513333559036255, 0.7716666460037231, 0.7609999775886536, 0.7766666412353516, 0.7776666879653931, 0.7929999828338623, 0.7960000038146973, 0.8066666722297668, 0.8100000023841858, 0.8043333292007446, 0.8119999766349792, 0.812666654586792, 0.815666675567627, 0.8163333535194397, 0.8253333568572998, 0.8303333520889282, 0.8333333134651184, 0.831333339214325, 0.8320000171661377, 0.8399999737739563, 0.8393333554267883, 0.8370000123977661, 0.8476666808128357, 0.8479999899864197, 0.8496666550636292, 0.8546666502952576, 0.8516666889190674, 0.8576666712760925, 0.8546666502952576, 0.8453333377838135, 0.8546666502952576, 0.8586666584014893, 0.8553333282470703, 0.8616666793823242, 0.859666645526886, 0.8610000014305115, 0.8606666922569275, 0.8629999756813049, 0.8666666746139526, 0.8646666407585144, 0.8646666407585144, 0.8646666407585144, 0.8653333187103271, 0.8700000047683716, 0.8659999966621399, 0.862333357334137, 0.8636666536331177, 0.8683333396911621, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8328571319580078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5774890184402466, 0.8017562031745911, 0.672905683517456, 0.6193554997444153, 0.575367271900177, 0.5332427024841309, 0.5152997970581055, 0.49529099464416504, 0.4741118252277374, 0.5055792331695557, 0.46605804562568665, 0.48748987913131714, 0.4903619885444641, 0.5017188191413879, 0.562736451625824, 0.6018209457397461, 0.6108689904212952, 0.6004666686058044], "accuracy": [0.4625544846057892, 0.713908314704895, 0.7510236501693726, 0.7732135653495789, 0.7847048044204712, 0.7989697456359863, 0.8149517774581909, 0.8142913579940796, 0.8272355198860168, 0.8195747137069702, 0.8335754871368408, 0.8276317715644836, 0.8280280232429504, 0.8337075710296631, 0.8021397590637207, 0.7976489067077637, 0.8072909712791443, 0.7923656105995178], "val_loss": [0.8329603672027588, 0.6190354228019714, 0.5925713777542114, 0.5583271384239197, 0.5179755091667175, 0.5612648725509644, 0.5041309595108032, 0.5033237934112549, 0.5119272470474243, 0.6290707588195801, 0.5291665196418762, 0.5853686332702637, 0.5921221375465393, 0.5963112115859985, 0.6239029765129089, 0.5789998173713684, 0.6029078960418701, 0.7114225029945374], "val_accuracy": [0.6940000057220459, 0.7739999890327454, 0.7749999761581421, 0.8040000200271606, 0.8183333277702332, 0.8180000185966492, 0.8180000185966492, 0.831333339214325, 0.8216666579246521, 0.8196666836738586, 0.8353333473205566, 0.8376666903495789, 0.8389999866485596, 0.8246666789054871, 0.8209999799728394, 0.8343333601951599, 0.812333345413208, 0.8303333520889282]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 2, 3, 0, 3, 2, 8, 8, 8, 8, 9, 4, 1, 7, 1, 4, 5, 1, 4, 2, 8, 9], [0, 1, 0, 2, 2, 0, 2, 0, 0, 0, 2], [39, 39, 76, 88, 50, 56, 53, 88], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 5, 2, 0, 3, 5], [0, 2, 0, 2], [16, 16], [1, 1], [2], [4], [99], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 52, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 33, 22, 11, 8, 6, 4, 2, 1, 1, 0, 1, 0, 21, 11, 10, 6], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(alpha), tf.math.sqrt(tf.math.sqrt(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.subtract(tf.math.add(tf.math.subtract(grad, grad), tf.math.pow(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.subtract(tf.math.pow(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.sqrt(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), sigma)))), tf.math.sqrt(alpha)), beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 2, 0, 3], [0, 1, 0, 2], [39, 91], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [11, 16], [0, 1], [0], [4], [99], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 0, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3034579753875732, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 5], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 5], [2, 2, 0, 3], [16, 16], [0, 1], [0], [0], [17], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [6, 4, 3, 6, 3, 1, 4, 1, 4, 2, 8, 7, 9], [0, 0, 0, 3, 0, 1, 3, 1, 2, 0, 3], [16, 14, 96, 53, 96, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 2, 10, 6, 4, 1, 2, 1, 1, 1, 24, 13, 11, 6], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(beta), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(sigma, tf.math.sqrt(tf.math.add(alpha, beta))))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [1, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 3, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 1, 3, 1, 4, 0, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 1, 0, 1, 0, 2, 1, 1, 1, 22, 11, 11, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(grad, tf.math.pow(alpha, sigma))), alpha)), tf.math.add(tf.math.sqrt(grad), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}]