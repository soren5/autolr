[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8645714521408081, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222174882888794, 1.869065523147583, 1.3929963111877441, 1.0833306312561035, 0.9339616298675537, 0.8173527717590332, 0.7716739773750305, 0.7183917760848999, 0.6788883805274963, 0.6469740271568298, 0.625238835811615, 0.6097128391265869, 0.5845986008644104, 0.5669119954109192, 0.546809196472168, 0.5377146005630493, 0.533457338809967, 0.5174203515052795, 0.5061590075492859, 0.5031725168228149, 0.4814437925815582, 0.481327086687088, 0.45737913250923157, 0.4529017508029938, 0.45423609018325806, 0.4417089819908142, 0.4288467466831207, 0.43197888135910034, 0.428148090839386, 0.4178631603717804, 0.40482550859451294, 0.4025689959526062, 0.39200863242149353, 0.39823025465011597, 0.3825336694717407, 0.38158243894577026, 0.3666114807128906, 0.3640509843826294, 0.36143767833709717, 0.3603448271751404, 0.35254111886024475, 0.3413234055042267, 0.3435174226760864, 0.33916765451431274, 0.3322126269340515, 0.33117547631263733, 0.32197830080986023, 0.32780104875564575, 0.31624194979667664, 0.31252580881118774, 0.3060929775238037, 0.30093565583229065, 0.3065669536590576, 0.298694908618927, 0.29282042384147644, 0.2818324565887451, 0.28123944997787476, 0.27804386615753174, 0.2743805944919586, 0.27299630641937256], "accuracy": [0.27605336904525757, 0.4916127324104309, 0.5712587237358093, 0.629111111164093, 0.6602826714515686, 0.7094175219535828, 0.7172104120254517, 0.7417778372764587, 0.752740740776062, 0.7640998363494873, 0.770439863204956, 0.7803460359573364, 0.7880068421363831, 0.7910447716712952, 0.798309326171875, 0.8057059645652771, 0.8049134612083435, 0.816008448600769, 0.8173292875289917, 0.8208954930305481, 0.8232730031013489, 0.8297450542449951, 0.8333113193511963, 0.8356888294219971, 0.8367455005645752, 0.8413683772087097, 0.8471800088882446, 0.8500858545303345, 0.8507462739944458, 0.8555012345314026, 0.8553691506385803, 0.8570862412452698, 0.8576145768165588, 0.8598600029945374, 0.8625016212463379, 0.8646149635314941, 0.8697662353515625, 0.8729361891746521, 0.8697662353515625, 0.8689737319946289, 0.8704266548156738, 0.8771628737449646, 0.8799365758895874, 0.8796724081039429, 0.8804649114608765, 0.8786157965660095, 0.8805969953536987, 0.8799365758895874, 0.8893144726753235, 0.8837670087814331, 0.8869370222091675, 0.8916919827461243, 0.8885219693183899, 0.8936732411384583, 0.8947299122810364, 0.8988244533538818, 0.9000132083892822, 0.8985602855682373, 0.9034473896026611, 0.9033153057098389], "val_loss": [2.0393989086151123, 1.517630696296692, 1.0493037700653076, 0.8494596481323242, 0.7661083340644836, 0.7082101106643677, 0.6657302975654602, 0.6341530084609985, 0.6035973429679871, 0.5847221612930298, 0.5640259385108948, 0.5498982071876526, 0.5323261022567749, 0.518379807472229, 0.5096257925033569, 0.5011038184165955, 0.49018582701683044, 0.48099514842033386, 0.4789048731327057, 0.4715788960456848, 0.46498242020606995, 0.45505771040916443, 0.44808056950569153, 0.45150789618492126, 0.43893131613731384, 0.43626683950424194, 0.4301363229751587, 0.4259297251701355, 0.4209124743938446, 0.41887983679771423, 0.4134575128555298, 0.4063313901424408, 0.409756600856781, 0.4081212878227234, 0.40657445788383484, 0.40093693137168884, 0.3960197865962982, 0.3918374478816986, 0.396174818277359, 0.39102083444595337, 0.3870331943035126, 0.38604411482810974, 0.38323038816452026, 0.38090503215789795, 0.3804051876068115, 0.38065168261528015, 0.3787539601325989, 0.37689340114593506, 0.3750752806663513, 0.3766242563724518, 0.3701089322566986, 0.37346646189689636, 0.370123952627182, 0.36620861291885376, 0.36769360303878784, 0.37094977498054504, 0.3633938133716583, 0.36653950810432434, 0.365016371011734, 0.3640458881855011], "val_accuracy": [0.5253333449363708, 0.6513333320617676, 0.6733333468437195, 0.7023333311080933, 0.7276666760444641, 0.7409999966621399, 0.7573333382606506, 0.7683333158493042, 0.7799999713897705, 0.7836666703224182, 0.7990000247955322, 0.8029999732971191, 0.8136666417121887, 0.815666675567627, 0.812333345413208, 0.8230000138282776, 0.824999988079071, 0.8263333439826965, 0.8286666870117188, 0.8296666741371155, 0.8330000042915344, 0.8346666693687439, 0.8389999866485596, 0.8363333344459534, 0.8416666388511658, 0.8463333249092102, 0.8450000286102295, 0.847000002861023, 0.8500000238418579, 0.8486666679382324, 0.8486666679382324, 0.8533333539962769, 0.8543333411216736, 0.8516666889190674, 0.8493333458900452, 0.8576666712760925, 0.8576666712760925, 0.8586666584014893, 0.8536666631698608, 0.8579999804496765, 0.8619999885559082, 0.8603333234786987, 0.8583333492279053, 0.862333357334137, 0.8646666407585144, 0.8579999804496765, 0.862333357334137, 0.8676666617393494, 0.8666666746139526, 0.8656666874885559, 0.8656666874885559, 0.8663333058357239, 0.8683333396911621, 0.8693333268165588, 0.8713333606719971, 0.8703333139419556, 0.8700000047683716, 0.8709999918937683, 0.8696666955947876, 0.8676666617393494]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 0], [0, 3, 9], [0], [0, 58], [1], [0], [2], [0]], "fitness": -0.8322857022285461, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6775866746902466, 0.9085854291915894, 0.7342835068702698, 0.6596356630325317, 0.6154727935791016, 0.5850684642791748, 0.560433030128479, 0.5391530394554138, 0.5204836130142212, 0.4942358732223511, 0.48567524552345276, 0.4890708029270172, 0.5016052722930908, 0.4930771291255951, 0.5038825869560242, 0.5042901635169983, 0.4804777503013611, 0.4311088025569916, 0.4603267312049866, 0.4548676311969757, 0.4509224593639374, 0.46177318692207336, 0.49316179752349854, 0.49403610825538635], "accuracy": [0.49293357133865356, 0.69673752784729, 0.7493065595626831, 0.7647602558135986, 0.7758552432060242, 0.7861577272415161, 0.8012151718139648, 0.8059701323509216, 0.8096684813499451, 0.8183859586715698, 0.8251221776008606, 0.8224804997444153, 0.8181217908859253, 0.8338396549224854, 0.8313300609588623, 0.8207634687423706, 0.832650899887085, 0.8409721255302429, 0.8401796221733093, 0.8487650156021118, 0.8451988101005554, 0.8352925777435303, 0.8212917447090149, 0.8338396549224854], "val_loss": [1.019761323928833, 0.7178645730018616, 0.6111083030700684, 0.5752763748168945, 0.5323570966720581, 0.49518704414367676, 0.5027316212654114, 0.5118430852890015, 0.48045551776885986, 0.4907195270061493, 0.46806225180625916, 0.48911648988723755, 0.4950856566429138, 0.507339358329773, 0.4967382848262787, 0.548821210861206, 0.49955037236213684, 0.5194036364555359, 0.4729149639606476, 0.5143575072288513, 0.5013913512229919, 0.5119493007659912, 0.5408121943473816, 0.5254910588264465], "val_accuracy": [0.6729999780654907, 0.7599999904632568, 0.7846666574478149, 0.784333348274231, 0.7963333129882812, 0.8190000057220459, 0.8163333535194397, 0.8109999895095825, 0.8259999752044678, 0.8263333439826965, 0.8286666870117188, 0.8253333568572998, 0.8149999976158142, 0.8289999961853027, 0.828000009059906, 0.8393333554267883, 0.8266666531562805, 0.8386666774749756, 0.8426666855812073, 0.8420000076293945, 0.8403333425521851, 0.840666651725769, 0.8356666564941406, 0.8416666388511658]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 3, 1, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 0, 1, 0], [0, 6, 6, 8, 9], [0, 4], [0, 8], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8259999752044678, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292604684829712, 2.190425157546997, 1.7663094997406006, 1.3485777378082275, 1.0580049753189087, 0.9126058220863342, 0.8287911415100098, 0.7972526550292969, 0.7428343296051025, 0.7332663536071777, 0.6975304484367371, 0.667178750038147, 0.6405361890792847, 0.6175892353057861, 0.6011475324630737, 0.5793859958648682, 0.5621051788330078, 0.5637487173080444, 0.5467819571495056, 0.5334696173667908, 0.5278376340866089, 0.5151758790016174, 0.50746089220047, 0.494987428188324, 0.47984516620635986, 0.4776456654071808, 0.46637773513793945, 0.4709063768386841, 0.45913854241371155], "accuracy": [0.12640337646007538, 0.32426363229751587, 0.43706247210502625, 0.547087550163269, 0.6361114978790283, 0.6642451286315918, 0.6934354901313782, 0.7058512568473816, 0.7121912837028503, 0.722229540348053, 0.7366266250610352, 0.7519482374191284, 0.757099449634552, 0.7647602558135986, 0.7733456492424011, 0.7751948237419128, 0.7839123010635376, 0.7852331399917603, 0.7832518815994263, 0.7992339134216309, 0.7979130744934082, 0.8016114234924316, 0.8029322624206543, 0.8107251524925232, 0.817989706993103, 0.81548011302948, 0.8203672170639038, 0.8171972036361694, 0.822348415851593], "val_loss": [2.2462007999420166, 2.019737720489502, 1.1403143405914307, 0.8762569427490234, 0.7777581214904785, 0.7128683924674988, 0.7017252445220947, 0.6622843742370605, 0.6404955983161926, 0.6219010949134827, 0.5818261504173279, 0.5640732645988464, 0.5559951066970825, 0.554523229598999, 0.5427572131156921, 0.5357045531272888, 0.540208101272583, 0.5199231505393982, 0.5226547718048096, 0.5207934379577637, 0.5206340551376343, 0.5175952315330505, 0.5134170651435852, 0.5045175552368164, 0.496174156665802, 0.49155500531196594, 0.4899197518825531, 0.47685709595680237, 0.47727033495903015], "val_accuracy": [0.43433332443237305, 0.4533333480358124, 0.6473333239555359, 0.6983333230018616, 0.7116666436195374, 0.7239999771118164, 0.7403333187103271, 0.7543333172798157, 0.7443333268165588, 0.7676666378974915, 0.7696666717529297, 0.7836666703224182, 0.7906666398048401, 0.7833333611488342, 0.7953333258628845, 0.7973333597183228, 0.7946666479110718, 0.8059999942779541, 0.8113333582878113, 0.8043333292007446, 0.8106666803359985, 0.8166666626930237, 0.8209999799728394, 0.8273333311080933, 0.8230000138282776, 0.8266666531562805, 0.8220000267028809, 0.824999988079071, 0.8220000267028809]}, "mapping_values": [1, 10, 5, 5, 3, 7, 5, 2, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [70, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [8], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 8, 8, 7, 6, 4], [0, 2, 0, 3, 3, 0, 4, 1, 2, 0, 6, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 2, 1, 1, 1, 26, 14, 12, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.sqrt(sigma)))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(beta, tf.constant(1.0, shape=shape, dtype=tf.float32))))), tf.math.pow(grad, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 0], [0, 0, 3, 0, 2], [83, 99, 27], [1, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 4, 5, 6, 4, 6, 9, 5, 0], [1, 7, 1, 2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 1, 0, 1, 1, 2, 1, 1, 1, 13, 9, 4, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(grad))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(alpha), tf.math.divide_no_nan(tf.math.pow(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), alpha), tf.math.negative(beta))))", "other_info": {"loss": [1118660608.0, 21485395968.0, 97474781184.0, 275591430144.0, 595799244800.0, 1063338967040.0], "accuracy": [0.1018359512090683, 0.09655263274908066, 0.10196803510189056, 0.09893012791872025, 0.10117553919553757, 0.10130762308835983], "val_loss": [5170267648.0, 41356922880.0, 139573723136.0, 330837426176.0, 646155468800.0, 1116538273792.0], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 4], [0, 1, 0, 2], [39, 74], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 4], [0, 2, 3, 3, 3], [16, 16], [0, 1, 1], [4], [0, 6], [99], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 9, 8, 1, 4, 2, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 11, 6, 5, 1, 3, 1, 2, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.pow(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3036937713623047, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 8, 7, 1], [0, 1, 0, 2, 1, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 0, 2, 0], [16, 43, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}]