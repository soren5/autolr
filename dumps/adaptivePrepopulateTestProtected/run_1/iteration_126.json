[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8734285831451416, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224113702774048, 1.870542049407959, 1.4008498191833496, 1.1037954092025757, 0.9453621506690979, 0.847469687461853, 0.770438015460968, 0.7365202307701111, 0.6973264217376709, 0.6585766077041626, 0.6343984007835388, 0.6170561909675598, 0.5903022885322571, 0.5726697444915771, 0.5557478666305542, 0.5516672730445862, 0.5385779738426208, 0.5247980952262878, 0.5093293786048889, 0.5038973689079285, 0.4847964644432068, 0.4810677170753479, 0.4672485589981079, 0.45456990599632263, 0.45145565271377563, 0.45182785391807556, 0.44361037015914917, 0.4299337565898895, 0.4329390823841095, 0.42583155632019043, 0.4090663492679596, 0.4067002832889557, 0.39997461438179016, 0.3896833062171936, 0.3896559476852417, 0.37925511598587036, 0.37464791536331177, 0.37584608793258667, 0.3690418303012848, 0.3648378551006317, 0.3596140444278717, 0.35628560185432434, 0.3456214666366577, 0.3479425311088562, 0.3392787575721741, 0.33534419536590576, 0.33438482880592346, 0.32836318016052246, 0.32845252752304077, 0.3138633668422699, 0.31931620836257935, 0.3105148673057556, 0.3151509165763855], "accuracy": [0.2677321434020996, 0.4931977391242981, 0.5628054141998291, 0.6096948981285095, 0.663848876953125, 0.6984546184539795, 0.7240787148475647, 0.7325320243835449, 0.7424382567405701, 0.7548540234565735, 0.7689869403839111, 0.7799497842788696, 0.7817989587783813, 0.7891955971717834, 0.7951393723487854, 0.800290584564209, 0.8020076751708984, 0.8113855719566345, 0.8175934553146362, 0.8173292875289917, 0.8239334225654602, 0.8265751004219055, 0.8335754871368408, 0.8374059200286865, 0.8400475382804871, 0.839519202709198, 0.8418967127799988, 0.8429533839225769, 0.8470479249954224, 0.848368763923645, 0.8504821062088013, 0.8533879518508911, 0.856689989566803, 0.8622375130653381, 0.8605204224586487, 0.8642187118530273, 0.8677849769592285, 0.8663320541381836, 0.8708229064941406, 0.8702945709228516, 0.8721436858177185, 0.872407853603363, 0.8804649114608765, 0.8779553771018982, 0.8766345381736755, 0.8782195448875427, 0.8795403242111206, 0.883238673210144, 0.8759741187095642, 0.8850878477096558, 0.884691596031189, 0.8864086866378784, 0.8848236799240112], "val_loss": [2.0444560050964355, 1.5286811590194702, 1.0500411987304688, 0.8400747179985046, 0.7441167235374451, 0.6926871538162231, 0.646365225315094, 0.6144024133682251, 0.589887261390686, 0.5662772059440613, 0.5498769879341125, 0.5309413075447083, 0.5139843821525574, 0.5032774209976196, 0.4908568263053894, 0.4827580451965332, 0.47585901618003845, 0.462497353553772, 0.4529775381088257, 0.4509235918521881, 0.4399564266204834, 0.4302442967891693, 0.4297754764556885, 0.4248693585395813, 0.42317503690719604, 0.41047346591949463, 0.41080746054649353, 0.4047020971775055, 0.40099260210990906, 0.3959951102733612, 0.3899022936820984, 0.38966959714889526, 0.38274064660072327, 0.3816681206226349, 0.38000601530075073, 0.3758983910083771, 0.3686540424823761, 0.36974477767944336, 0.3664852976799011, 0.3653934597969055, 0.3599259555339813, 0.36309927701950073, 0.3599678575992584, 0.35415974259376526, 0.3551197052001953, 0.3575649559497833, 0.3513312041759491, 0.3515171408653259, 0.34519609808921814, 0.34754008054733276, 0.3479995131492615, 0.3470584452152252, 0.340030699968338], "val_accuracy": [0.5136666893959045, 0.6673333048820496, 0.6863333582878113, 0.7070000171661377, 0.7369999885559082, 0.7509999871253967, 0.7580000162124634, 0.7699999809265137, 0.7763333320617676, 0.7896666526794434, 0.7953333258628845, 0.8036666512489319, 0.8140000104904175, 0.8183333277702332, 0.8199999928474426, 0.8216666579246521, 0.8306666612625122, 0.8276666402816772, 0.8306666612625122, 0.8386666774749756, 0.8423333168029785, 0.8399999737739563, 0.8410000205039978, 0.8476666808128357, 0.8500000238418579, 0.8546666502952576, 0.8536666631698608, 0.859666645526886, 0.8583333492279053, 0.859666645526886, 0.8600000143051147, 0.8693333268165588, 0.8616666793823242, 0.8636666536331177, 0.8679999709129333, 0.8679999709129333, 0.8713333606719971, 0.8669999837875366, 0.871999979019165, 0.8669999837875366, 0.8730000257492065, 0.8756666779518127, 0.8766666650772095, 0.8740000128746033, 0.874666690826416, 0.8733333349227905, 0.8756666779518127, 0.8816666603088379, 0.878333330154419, 0.8736666440963745, 0.8796666860580444, 0.8769999742507935, 0.8806666731834412]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1], [0, 0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8659999966621399, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933785915374756, 2.192201614379883, 1.7791672945022583, 1.3569047451019287, 1.0516268014907837, 0.9019252061843872, 0.8480423092842102, 0.8007314205169678, 0.7643961906433105, 0.751931369304657, 0.7006810307502747, 0.6866453289985657, 0.6417829394340515, 0.6286380887031555, 0.6076826453208923, 0.601940393447876, 0.5832067728042603, 0.5814372897148132, 0.5608264803886414, 0.554740309715271, 0.5305395722389221, 0.5261405110359192, 0.5094397664070129, 0.5166917443275452, 0.4986153841018677, 0.4802261292934418, 0.47505977749824524, 0.46961331367492676, 0.45600107312202454, 0.44964680075645447, 0.44811052083969116, 0.42887648940086365, 0.4286210238933563, 0.42310935258865356, 0.4054695665836334, 0.4099659323692322, 0.3920805752277374, 0.3965100347995758, 0.3861882984638214, 0.37379738688468933, 0.3787350058555603, 0.36666759848594666, 0.37079524993896484, 0.36193081736564636, 0.35632768273353577, 0.34150949120521545, 0.3500428795814514, 0.3427867293357849, 0.3530259430408478, 0.3282364010810852, 0.3284807503223419, 0.33570945262908936, 0.3318072259426117, 0.30899837613105774, 0.32242754101753235, 0.3217334747314453, 0.3178563714027405, 0.29913532733917236, 0.29994216561317444, 0.30214107036590576, 0.31972354650497437, 0.32292911410331726, 0.30620044469833374], "accuracy": [0.12719587981700897, 0.3263769745826721, 0.43851539492607117, 0.5453705191612244, 0.6456214785575867, 0.6662263870239258, 0.6915863156318665, 0.7082287669181824, 0.6983225345611572, 0.7037379741668701, 0.7285695672035217, 0.7304186820983887, 0.7515519857406616, 0.7607977986335754, 0.7717606425285339, 0.7736098170280457, 0.7750627398490906, 0.7765156626701355, 0.7884030938148499, 0.7877426743507385, 0.796328067779541, 0.7976489067077637, 0.8088759779930115, 0.8039889335632324, 0.8127063512802124, 0.817461371421814, 0.8144234418869019, 0.824329674243927, 0.8277638554573059, 0.828292191028595, 0.8251221776008606, 0.8317263126373291, 0.8374059200286865, 0.8339717388153076, 0.8451988101005554, 0.8437458872795105, 0.8557654023170471, 0.8524633646011353, 0.8541803956031799, 0.8570862412452698, 0.8537842035293579, 0.8593316674232483, 0.8555012345314026, 0.8639545440673828, 0.8650112152099609, 0.8683133125305176, 0.8660678863525391, 0.8640866279602051, 0.8621054291725159, 0.8714832663536072, 0.8697662353515625, 0.8709549307823181, 0.868049144744873, 0.8733324408531189, 0.8683133125305176, 0.8759741187095642, 0.876370370388031, 0.8804649114608765, 0.884691596031189, 0.8791441321372986, 0.8790120482444763, 0.8767666220664978, 0.8828424215316772], "val_loss": [2.246751546859741, 2.02439284324646, 1.1422176361083984, 0.861020028591156, 0.7538121938705444, 0.6915332078933716, 0.6701640486717224, 0.6464273929595947, 0.6337622404098511, 0.6141409873962402, 0.572589099407196, 0.5493490099906921, 0.5303390026092529, 0.5271967053413391, 0.5213188529014587, 0.5074731707572937, 0.4945621192455292, 0.48202234506607056, 0.4898535907268524, 0.4798905551433563, 0.4741266369819641, 0.4600003957748413, 0.4526224434375763, 0.4499127268791199, 0.4430147409439087, 0.4442928731441498, 0.4286918640136719, 0.4270440638065338, 0.4335058629512787, 0.4114418029785156, 0.4042006731033325, 0.4082164168357849, 0.40868985652923584, 0.3845421075820923, 0.39225468039512634, 0.38393864035606384, 0.396715372800827, 0.38541966676712036, 0.3714160919189453, 0.3767854869365692, 0.3718128204345703, 0.3663876950740814, 0.3676251769065857, 0.377197802066803, 0.37881413102149963, 0.3760891854763031, 0.38509756326675415, 0.38032934069633484, 0.3768553137779236, 0.3835311830043793, 0.3827873468399048, 0.39119625091552734, 0.3774642050266266, 0.39416974782943726, 0.40231627225875854, 0.4096311032772064, 0.4045387804508209, 0.3895091116428375, 0.3852068781852722, 0.39660993218421936, 0.40632694959640503, 0.4092126786708832, 0.3994824290275574], "val_accuracy": [0.44433334469795227, 0.4363333284854889, 0.6579999923706055, 0.699999988079071, 0.7173333168029785, 0.7319999933242798, 0.7440000176429749, 0.7519999742507935, 0.7536666393280029, 0.7643333077430725, 0.768666684627533, 0.7820000052452087, 0.7883333563804626, 0.7946666479110718, 0.79666668176651, 0.8019999861717224, 0.8016666769981384, 0.8056666851043701, 0.8173333406448364, 0.8163333535194397, 0.8080000281333923, 0.8193333148956299, 0.8373333215713501, 0.8366666436195374, 0.8246666789054871, 0.8360000252723694, 0.8479999899864197, 0.8479999899864197, 0.8460000157356262, 0.8519999980926514, 0.859000027179718, 0.8603333234786987, 0.8483333587646484, 0.8610000014305115, 0.8643333315849304, 0.8633333444595337, 0.859666645526886, 0.8650000095367432, 0.8676666617393494, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8723333477973938, 0.8730000257492065, 0.871999979019165, 0.8766666650772095, 0.8709999918937683, 0.8700000047683716, 0.8793333172798157, 0.8763333559036255, 0.8786666393280029, 0.8790000081062317, 0.8796666860580444, 0.875333309173584, 0.8743333220481873, 0.875333309173584, 0.8803333044052124, 0.8826666474342346, 0.875333309173584, 0.8809999823570251, 0.8763333559036255, 0.8723333477973938, 0.8709999918937683]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8231428861618042, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5300555229187012, 0.8722475171089172, 0.7391241788864136, 0.6324222087860107, 0.6264116168022156, 0.576718270778656, 0.5658414959907532, 0.5423185229301453, 0.5227488875389099, 0.47771698236465454, 0.48635777831077576, 0.5065026879310608, 0.5229067206382751, 0.5089300870895386], "accuracy": [0.4896314740180969, 0.707040011882782, 0.7331924438476562, 0.7630431652069092, 0.7692511081695557, 0.7924976944923401, 0.793422281742096, 0.7993659973144531, 0.8086118102073669, 0.8271034359931946, 0.822348415851593, 0.8271034359931946, 0.8191784620285034, 0.8165367841720581], "val_loss": [0.9590904116630554, 0.6920040845870972, 0.5782346725463867, 0.5920572876930237, 0.5569658875465393, 0.5477088093757629, 0.5418784618377686, 0.5185860991477966, 0.5197234749794006, 0.5285334587097168, 0.5554316639900208, 0.5552664995193481, 0.5472481846809387, 0.5554671287536621], "val_accuracy": [0.6909999847412109, 0.749666690826416, 0.7766666412353516, 0.7900000214576721, 0.7919999957084656, 0.8063333630561829, 0.8220000267028809, 0.8246666789054871, 0.828000009059906, 0.8216666579246521, 0.8273333311080933, 0.8140000104904175, 0.8199999928474426, 0.8213333487510681]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [69, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 3, 6, 2, 1, 5, 1, 2, 2, 8, 4, 9, 3, 6, 7, 2, 1, 2, 4, 3, 6, 8, 3, 7, 1, 6, 6, 7, 0, 6, 5, 8, 5, 2, 1, 3, 1, 6, 1, 7, 4, 8, 1, 9], [0, 0, 3, 3, 0, 0, 0, 1, 2, 0, 3, 3, 5, 3, 4, 0, 7, 5, 0, 0, 2, 6, 3, 7, 2, 4, 6, 2, 5, 1, 1, 6, 2, 5], [16, 69, 96, 99, 61, 1, 74, 27, 50, 62, 61]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.square(sigma)), sigma), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), alpha))))), beta), tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), sigma), tf.math.add(sigma, tf.math.subtract(tf.math.add(grad, tf.math.pow(sigma, tf.math.multiply(grad, tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)))), tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.subtract(tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(tf.math.sqrt(beta)), grad))), tf.math.square(tf.math.add(sigma, tf.math.subtract(tf.math.multiply(grad, tf.math.subtract(beta, grad)), grad)))), tf.math.divide_no_nan(beta, grad)), alpha))))), tf.math.subtract(tf.math.add(alpha, tf.math.pow(grad, tf.math.sqrt(tf.math.subtract(beta, grad)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}, "mapping_values": [1, 6, 3, 3, 1, 4, 2, 2, 1, 2, 1, 1, 1, 79, 45, 34, 11], "tree_depth": 31}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 0, 3], [0, 0, 1, 0, 2], [83, 65, 27], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 1, 3, 2], [16, 16], [0, 1], [0], [3], [99], [1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [19, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 1, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3033785820007324, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 3, 1, 3, 5], [2, 1, 0, 2, 1], [39, 39], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [3, 3, 3, 1, 2, 1, 4, 8, 4, 2, 8, 7, 2, 0, 7, 9, 1, 2, 2, 5, 0, 6], [0, 0, 0, 3, 3, 0, 3, 1, 2, 0, 0, 2, 7, 0, 7, 6], [16, 99, 96, 99, 61, 1, 51, 30]], "fitness": -0.08942857384681702, "mapping_values": [1, 11, 6, 5, 1, 1, 0, 1, 1, 2, 1, 1, 1, 38, 22, 16, 8], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(tf.math.subtract(tf.math.pow(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.add(sigma, sigma)), tf.math.add(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma)), alpha)), tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), beta))))), grad)), tf.math.square(tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(grad, grad))", "other_info": {"loss": [2.3103387355804443, 2.3099420070648193, 2.3100948333740234, 2.3107376098632812, 2.310606002807617, 2.3104946613311768], "accuracy": [0.09826971590518951, 0.09008057415485382, 0.09206181764602661, 0.09008057415485382, 0.09047681838274002, 0.08691058307886124], "val_loss": [2.307973861694336, 2.3079683780670166, 2.3079631328582764, 2.307957649230957, 2.307952404022217, 2.3079471588134766], "val_accuracy": [0.09533333033323288, 0.0949999988079071, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 2, 2, 0, 0, 0], [0, 1, 0, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 0, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 66]], "fitness": -0.08914285898208618, "mapping_values": [1, 9, 6, 3, 2, 8, 5, 3, 1, 2, 1, 1, 0, 16, 8, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma), alpha)", "other_info": {"loss": [2.3094420433044434, 2.3098526000976562, 2.3092763423919678, 2.309171438217163, 2.3086748123168945, 2.3098630905151367], "accuracy": [0.09615638852119446, 0.09232597798109055, 0.09008057415485382, 0.09113723784685135, 0.09430722147226334, 0.09008057415485382], "val_loss": [2.309419870376587, 2.309419870376587, 2.309419870376587, 2.309419870376587, 2.309419870376587, 2.309419870376587], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]