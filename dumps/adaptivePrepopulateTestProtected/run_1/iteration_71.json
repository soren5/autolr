[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8631428480148315, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2261807918548584, 1.8744827508926392, 1.3890167474746704, 1.0994956493377686, 0.9530619382858276, 0.8472748398780823, 0.7680171132087708, 0.7309025526046753, 0.69871586561203, 0.667181670665741, 0.6374017000198364, 0.6115239262580872, 0.5822044014930725, 0.573830246925354, 0.5508126616477966, 0.5388383865356445, 0.5280110836029053, 0.5116403102874756, 0.49409133195877075, 0.4911714494228363, 0.4777340888977051, 0.4718162417411804, 0.464720755815506, 0.45325496792793274, 0.44367676973342896, 0.43291640281677246, 0.42658916115760803, 0.42661842703819275, 0.4165627956390381, 0.40302008390426636, 0.3987431228160858, 0.39523977041244507, 0.38509032130241394, 0.385394811630249, 0.37686994671821594, 0.36382418870925903, 0.3648824989795685, 0.36077144742012024, 0.35118794441223145, 0.35356661677360535, 0.3390304148197174, 0.3447686731815338, 0.3281007707118988, 0.3273731470108032, 0.32784903049468994, 0.3254728317260742, 0.31366655230522156, 0.3072105646133423, 0.3069549798965454, 0.29695093631744385, 0.2928706109523773, 0.2945690155029297, 0.2930941581726074, 0.2898942828178406, 0.2808442711830139, 0.28457316756248474, 0.27654048800468445, 0.270988792181015, 0.274402916431427, 0.26223862171173096, 0.2563627362251282, 0.25946319103240967, 0.2470560520887375, 0.2589234709739685], "accuracy": [0.26258090138435364, 0.5046889185905457, 0.5686171054840088, 0.616299033164978, 0.6596222519874573, 0.6968696117401123, 0.7201162576675415, 0.7341170310974121, 0.7437590956687927, 0.759609043598175, 0.7692511081695557, 0.7775723338127136, 0.7884030938148499, 0.7887993454933167, 0.8005547523498535, 0.7955356240272522, 0.8041210174560547, 0.8128384351730347, 0.8177255392074585, 0.8185180425643921, 0.8240655064582825, 0.8366134166717529, 0.8293488025665283, 0.8366134166717529, 0.8405758738517761, 0.8374059200286865, 0.8426892161369324, 0.8454629778862, 0.8510104417800903, 0.8521991968154907, 0.8521991968154907, 0.8556333184242249, 0.8646149635314941, 0.8613129258155823, 0.8636903762817383, 0.8709549307823181, 0.8692378997802734, 0.8663320541381836, 0.8733324408531189, 0.8692378997802734, 0.8786157965660095, 0.8710870146751404, 0.8811253309249878, 0.8775591254234314, 0.8811253309249878, 0.8816536664962769, 0.8868049383163452, 0.8897107243537903, 0.8878615498542786, 0.884691596031189, 0.8932769894599915, 0.8907673954963684, 0.8952582478523254, 0.8914278149604797, 0.8988244533538818, 0.8953903317451477, 0.895918607711792, 0.9001452922821045, 0.9010698795318604, 0.9058248400688171, 0.9054285883903503, 0.9039757251739502, 0.9111081957817078, 0.9050323367118835], "val_loss": [2.044755458831787, 1.5305607318878174, 1.0553836822509766, 0.8550621867179871, 0.7709566950798035, 0.7051317691802979, 0.6610332727432251, 0.6256445050239563, 0.6047695875167847, 0.5743532776832581, 0.5533221960067749, 0.5379638075828552, 0.523264467716217, 0.5106354355812073, 0.49732455611228943, 0.4922844171524048, 0.4772106111049652, 0.4693344831466675, 0.4582241177558899, 0.4546267092227936, 0.4488145411014557, 0.4486907124519348, 0.4339449405670166, 0.4287714958190918, 0.42423778772354126, 0.41773611307144165, 0.4146433174610138, 0.41332992911338806, 0.41018256545066833, 0.4011772871017456, 0.39959025382995605, 0.3950064182281494, 0.39647021889686584, 0.39413392543792725, 0.3884718120098114, 0.38842788338661194, 0.38289111852645874, 0.38006818294525146, 0.3843647837638855, 0.37676164507865906, 0.3755891025066376, 0.3744349777698517, 0.37345197796821594, 0.36827552318573, 0.369937002658844, 0.365907222032547, 0.3671048581600189, 0.3614259958267212, 0.35925495624542236, 0.3620941638946533, 0.3590835630893707, 0.36174678802490234, 0.36111509799957275, 0.35637322068214417, 0.35579654574394226, 0.35442855954170227, 0.3556215465068817, 0.3648911118507385, 0.3517804741859436, 0.3531511723995209, 0.35245296359062195, 0.3497732877731323, 0.35288965702056885, 0.34969955682754517], "val_accuracy": [0.531000018119812, 0.6610000133514404, 0.6869999766349792, 0.7046666741371155, 0.7300000190734863, 0.753333330154419, 0.7593333125114441, 0.7683333158493042, 0.7826666831970215, 0.7883333563804626, 0.7943333387374878, 0.8013333082199097, 0.8090000152587891, 0.8113333582878113, 0.8176666498184204, 0.8153333067893982, 0.8289999961853027, 0.8339999914169312, 0.8336666822433472, 0.8336666822433472, 0.8420000076293945, 0.843666672706604, 0.8486666679382324, 0.8496666550636292, 0.8516666889190674, 0.8533333539962769, 0.8523333072662354, 0.8526666760444641, 0.8569999933242798, 0.8616666793823242, 0.862333357334137, 0.8613333106040955, 0.8566666841506958, 0.8636666536331177, 0.8659999966621399, 0.8616666793823242, 0.8650000095367432, 0.8669999837875366, 0.8659999966621399, 0.8673333525657654, 0.8686666488647461, 0.8693333268165588, 0.8663333058357239, 0.871666669845581, 0.8673333525657654, 0.8703333139419556, 0.8709999918937683, 0.8733333349227905, 0.8723333477973938, 0.871999979019165, 0.8740000128746033, 0.8703333139419556, 0.871999979019165, 0.875, 0.8766666650772095, 0.875, 0.8769999742507935, 0.874666690826416, 0.878333330154419, 0.875333309173584, 0.8776666522026062, 0.878000020980835, 0.875, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 7, 7, 1, 5, 1, 0, 5, 6, 6, 4, 7, 2], [0, 4, 3, 2, 2, 2, 4, 6, 2, 3], [0], [1], [0], [2], [0]], "fitness": -0.8308571577072144, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(grad), tf.math.subtract(tf.math.negative(tf.math.square(tf.math.divide_no_nan(sigma, tf.math.divide_no_nan(tf.math.pow(beta, beta), tf.math.add(beta, grad))))), grad))), tf.math.add(beta, sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6279743909835815, 0.8847596049308777, 0.671221137046814, 0.6322811245918274, 0.5719968676567078, 0.5503266453742981, 0.5288575291633606, 0.4878031015396118, 0.5901755690574646, 0.5492211580276489, 0.5959909558296204, 0.5362943410873413, 0.5343790650367737], "accuracy": [0.4733852744102478, 0.6909258961677551, 0.752740740776062, 0.7630431652069092, 0.7889314293861389, 0.7998943328857422, 0.8068947196006775, 0.8181217908859253, 0.8084797263145447, 0.8030643463134766, 0.7955356240272522, 0.8098005652427673, 0.8234050869941711], "val_loss": [0.9977366328239441, 0.6032156944274902, 0.5385251641273499, 0.5163073539733887, 0.5017637014389038, 0.49543172121047974, 0.49246200919151306, 0.5595940947532654, 0.5730100870132446, 0.5745232105255127, 0.5241820216178894, 0.5215687155723572, 0.5513811707496643], "val_accuracy": [0.6566666960716248, 0.7670000195503235, 0.8040000200271606, 0.8019999861717224, 0.8186666369438171, 0.8226666450500488, 0.8259999752044678, 0.8299999833106995, 0.8143333196640015, 0.8190000057220459, 0.8140000104904175, 0.8220000267028809, 0.8289999961853027]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 23, 13, 10, 1, 1, 0, 1, 0], "tree_depth": 23}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8142856955528259, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2934083938598633, 2.186762809753418, 1.7757313251495361, 1.3402563333511353, 1.0507358312606812, 0.8966242671012878, 0.8378273844718933, 0.7848110198974609, 0.7564477920532227, 0.7291425466537476, 0.7005445957183838, 0.669377863407135, 0.6371003985404968, 0.6393622159957886, 0.6135352849960327, 0.5744730234146118, 0.5706652998924255, 0.5526591539382935, 0.5525984168052673, 0.5284019708633423, 0.5178044438362122, 0.5137671828269958, 0.49817126989364624, 0.48614612221717834, 0.48714199662208557, 0.4742353856563568, 0.46138131618499756, 0.44825828075408936, 0.4427901804447174, 0.4385759234428406, 0.42868801951408386, 0.4271577000617981, 0.41256189346313477, 0.4004192352294922, 0.39813748002052307, 0.39221692085266113, 0.38874900341033936], "accuracy": [0.1270637959241867, 0.32862237095832825, 0.4267600178718567, 0.5474838018417358, 0.6409985423088074, 0.6660943031311035, 0.6845859289169312, 0.7078325152397156, 0.6995112895965576, 0.7131158113479614, 0.7253995537757874, 0.7359662055969238, 0.750759482383728, 0.7506273984909058, 0.7633073329925537, 0.7771760821342468, 0.7761194109916687, 0.7874785661697388, 0.7828556299209595, 0.7890635132789612, 0.7954035401344299, 0.8041210174560547, 0.8104609847068787, 0.8156121969223022, 0.811649739742279, 0.8219521641731262, 0.8195747137069702, 0.8317263126373291, 0.8305375576019287, 0.8314621448516846, 0.8334434032440186, 0.8372738361358643, 0.8417646288871765, 0.8448025584220886, 0.8487650156021118, 0.8465195894241333, 0.8539162874221802], "val_loss": [2.2464613914489746, 2.02077054977417, 1.136451005935669, 0.8694118857383728, 0.7596775889396667, 0.7125028371810913, 0.6810978055000305, 0.6461973190307617, 0.6405608057975769, 0.609726071357727, 0.5774849653244019, 0.5717597603797913, 0.5515594482421875, 0.5438224077224731, 0.5202754735946655, 0.5088645815849304, 0.500066339969635, 0.49164339900016785, 0.4891586899757385, 0.48355841636657715, 0.48196521401405334, 0.4809049069881439, 0.459668904542923, 0.4515426456928253, 0.4640863537788391, 0.443043053150177, 0.4439985454082489, 0.43465250730514526, 0.42989876866340637, 0.44200676679611206, 0.4297705590724945, 0.42362767457962036, 0.4263339042663574, 0.41419705748558044, 0.4158203899860382, 0.42794087529182434, 0.4245755970478058], "val_accuracy": [0.4103333353996277, 0.4176666736602783, 0.6513333320617676, 0.6903333067893982, 0.7149999737739563, 0.7296666502952576, 0.7293333411216736, 0.737333357334137, 0.7450000047683716, 0.7609999775886536, 0.7733333110809326, 0.7649999856948853, 0.7829999923706055, 0.7770000100135803, 0.7953333258628845, 0.8036666512489319, 0.7986666560173035, 0.8176666498184204, 0.8100000023841858, 0.8190000057220459, 0.8226666450500488, 0.8213333487510681, 0.8309999704360962, 0.8339999914169312, 0.8256666660308838, 0.8383333086967468, 0.8346666693687439, 0.843666672706604, 0.8483333587646484, 0.8476666808128357, 0.8516666889190674, 0.8533333539962769, 0.8519999980926514, 0.8529999852180481, 0.8533333539962769, 0.8443333506584167, 0.8510000109672546]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 6, 5, 2, 5, 8, 1], [0, 0, 0, 3], [47, 66], [0, 1], [8], [0], [99], [0, 1], [0], [1], [0]], "fitness": -0.10514285415410995, "mapping_values": [1, 6, 3, 3, 2, 5, 3, 2, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [18533461262336.0, 3.568546087924673e+20, 4.401132667960778e+26, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.1022322028875351, 0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1279711141429248.0, 2.395656495142493e+22, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10533333569765091, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 2, 0], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 6, 5, 2, 1, 1, 1], [0, 3, 2, 2], [0], [0, 0, 0, 0, 0, 1, 1, 1, 1], [7, 3, 9, 1, 1], [5, 0, 7, 5], [0, 35], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 2, 1, 1, 1, 9, 5, 4, 2, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.subtract(grad, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), grad)), grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303361177444458, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 6, 0, 3], [2, 1, 0, 0], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 2, 6, 8, 2, 2], [0, 2, 0, 3, 5, 2, 2, 0], [16, 16, 88], [0, 0, 1, 0, 1, 1], [0, 6, 4], [0, 4, 6], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 6, 3, 6, 2, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 5, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 18, 10, 8, 3, 6, 3, 3, 1, 17, 8, 9, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), grad), tf.math.sqrt(tf.math.add(beta, tf.math.add(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 1, 3, 0, 0, 3, 1, 2, 0], [16, 99, 63, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 1, 0, 1, 1, 21, 11, 10, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(alpha, sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]