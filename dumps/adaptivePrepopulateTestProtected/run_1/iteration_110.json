[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8722857236862183, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22424054145813, 1.8708081245422363, 1.3961646556854248, 1.1041502952575684, 0.9386419653892517, 0.8382049798965454, 0.7721195816993713, 0.7217702269554138, 0.685620903968811, 0.6525906324386597, 0.6302017569541931, 0.6087530851364136, 0.589855432510376, 0.5715839862823486, 0.553339958190918, 0.5376866459846497, 0.5325006246566772, 0.5111444592475891, 0.5066505074501038, 0.4984952211380005, 0.4801800549030304, 0.47161880135536194, 0.4706786572933197, 0.45730602741241455, 0.4445483088493347, 0.43543553352355957, 0.43781736493110657, 0.4201914072036743, 0.415172815322876, 0.41360360383987427, 0.4058675467967987, 0.3973955512046814, 0.38911423087120056, 0.3924159109592438, 0.3837723731994629, 0.3704149127006531, 0.3743949830532074, 0.3730125427246094, 0.3601821959018707, 0.35415858030319214, 0.34901273250579834, 0.34650540351867676, 0.34097957611083984, 0.32985159754753113, 0.3302602171897888, 0.33139973878860474, 0.3269774317741394, 0.31566673517227173, 0.3187698721885681, 0.3072662055492401, 0.3071255385875702, 0.3007887601852417, 0.29259753227233887], "accuracy": [0.27961960434913635, 0.48949941992759705, 0.5666358470916748, 0.6159027814865112, 0.6613393425941467, 0.7017567157745361, 0.7226257920265198, 0.7386078238487244, 0.7442874312400818, 0.7640998363494873, 0.7707040309906006, 0.7766477465629578, 0.7862898111343384, 0.7897239327430725, 0.802271842956543, 0.8013472557067871, 0.8059701323509216, 0.8156121969223022, 0.8169330358505249, 0.8241975903511047, 0.83119797706604, 0.8318583965301514, 0.8321225643157959, 0.837537944316864, 0.841500461101532, 0.8471800088882446, 0.8437458872795105, 0.8519350290298462, 0.8486329317092896, 0.8494254350662231, 0.8525954484939575, 0.8605204224586487, 0.8603883385658264, 0.8617091774940491, 0.86118084192276, 0.8648791313171387, 0.8661999702453613, 0.8640866279602051, 0.8746532797813416, 0.8712190985679626, 0.8778232932090759, 0.8746532797813416, 0.8767666220664978, 0.8803328275680542, 0.8823140859603882, 0.8798044919967651, 0.8821820020675659, 0.8845595121383667, 0.8853520154953003, 0.8910315632820129, 0.8903711438179016, 0.8931449055671692, 0.8942015767097473], "val_loss": [2.0377650260925293, 1.5114052295684814, 1.039604902267456, 0.827757716178894, 0.7337142825126648, 0.675402820110321, 0.6297250390052795, 0.5970205068588257, 0.5651087164878845, 0.5404593348503113, 0.5240703821182251, 0.5162131786346436, 0.5045685172080994, 0.4774656891822815, 0.47384509444236755, 0.466488778591156, 0.44496044516563416, 0.4446066617965698, 0.4355097711086273, 0.4245372414588928, 0.42299744486808777, 0.4105685353279114, 0.40971285104751587, 0.4052128195762634, 0.39468565583229065, 0.38728323578834534, 0.39094987511634827, 0.3839726448059082, 0.3726252019405365, 0.3720121681690216, 0.3722350299358368, 0.3692338168621063, 0.36095893383026123, 0.3601222336292267, 0.3609342575073242, 0.3538047671318054, 0.35526418685913086, 0.34648412466049194, 0.3483799993991852, 0.34564998745918274, 0.3449825942516327, 0.340853750705719, 0.3374824523925781, 0.3383511006832123, 0.33471447229385376, 0.3304400146007538, 0.33348986506462097, 0.3295828402042389, 0.3308927118778229, 0.33132022619247437, 0.3232572078704834, 0.32193484902381897, 0.3246672749519348], "val_accuracy": [0.5516666769981384, 0.6616666913032532, 0.6800000071525574, 0.70333331823349, 0.7289999723434448, 0.7476666569709778, 0.7613333463668823, 0.7730000019073486, 0.7893333435058594, 0.796999990940094, 0.8026666641235352, 0.815666675567627, 0.8153333067893982, 0.828000009059906, 0.8216666579246521, 0.8299999833106995, 0.8403333425521851, 0.8396666646003723, 0.8426666855812073, 0.8476666808128357, 0.8460000157356262, 0.8536666631698608, 0.8560000061988831, 0.8600000143051147, 0.8586666584014893, 0.8666666746139526, 0.862666666507721, 0.8669999837875366, 0.871999979019165, 0.8723333477973938, 0.8706666827201843, 0.8700000047683716, 0.8736666440963745, 0.8763333559036255, 0.875, 0.8799999952316284, 0.871666669845581, 0.8813333511352539, 0.8790000081062317, 0.8790000081062317, 0.8766666650772095, 0.8809999823570251, 0.8816666603088379, 0.8776666522026062, 0.8883333206176758, 0.8863333463668823, 0.878000020980835, 0.8896666765213013, 0.8826666474342346, 0.8853333592414856, 0.887666642665863, 0.8880000114440918, 0.8843333125114441]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8382856845855713, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5236560106277466, 0.8624604344367981, 0.7081547975540161, 0.6501747369766235, 0.5837780833244324, 0.5377945899963379, 0.5376171469688416, 0.4942122995853424, 0.45450741052627563, 0.45737212896347046, 0.4788268506526947, 0.45629069209098816, 0.4724265933036804, 0.44492870569229126, 0.49937015771865845, 0.5313041806221008, 0.5941335558891296, 0.5412577986717224], "accuracy": [0.49491479992866516, 0.7058512568473816, 0.7411174178123474, 0.7675340175628662, 0.7884030938148499, 0.8094043135643005, 0.802271842956543, 0.8238013386726379, 0.8360850811004639, 0.8356888294219971, 0.8286884427070618, 0.8376700282096863, 0.8309338092803955, 0.8416325449943542, 0.829216718673706, 0.8203672170639038, 0.8260467648506165, 0.8173292875289917], "val_loss": [0.9449625611305237, 0.6207274198532104, 0.5680027604103088, 0.5361880660057068, 0.4893592894077301, 0.5029172897338867, 0.5083587169647217, 0.4778032898902893, 0.4910642206668854, 0.5006203055381775, 0.5384093523025513, 0.517401397228241, 0.5766347050666809, 0.5628642439842224, 0.5463781952857971, 0.5926369428634644, 0.6693336367607117, 0.5971088409423828], "val_accuracy": [0.6766666769981384, 0.7670000195503235, 0.7856666445732117, 0.8003333210945129, 0.815666675567627, 0.8166666626930237, 0.8183333277702332, 0.8333333134651184, 0.8306666612625122, 0.8376666903495789, 0.8339999914169312, 0.8330000042915344, 0.8389999866485596, 0.8226666450500488, 0.8306666612625122, 0.8316666483879089, 0.8253333568572998, 0.8256666660308838]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0], [0, 9], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8259999752044678, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2931156158447266, 2.1903765201568604, 1.7696932554244995, 1.3555659055709839, 1.0602366924285889, 0.9188281893730164, 0.8480254411697388, 0.8264502882957458, 0.7636629939079285, 0.754191517829895, 0.7039543390274048, 0.6982998847961426, 0.6538905501365662, 0.6172195076942444, 0.6106696724891663, 0.5938174724578857, 0.5815554261207581, 0.5643590092658997, 0.554759681224823, 0.5371091365814209, 0.5251486301422119, 0.5232894420623779, 0.5036440491676331, 0.49679267406463623, 0.4952714443206787, 0.4771045744419098, 0.46207135915756226, 0.4529975652694702, 0.44889217615127563, 0.4327918291091919, 0.42612454295158386, 0.4288182556629181, 0.42262405157089233, 0.4057217538356781, 0.3980918526649475, 0.39340028166770935, 0.3954351842403412, 0.38687819242477417, 0.37618955969810486, 0.3612905442714691, 0.3689347505569458, 0.3689533770084381, 0.3577881157398224, 0.35895365476608276, 0.3395578861236572, 0.34304627776145935, 0.34683915972709656], "accuracy": [0.1306300312280655, 0.3255844712257385, 0.4391758143901825, 0.5481442213058472, 0.6305639743804932, 0.6610751748085022, 0.6837934255599976, 0.696209192276001, 0.7049266695976257, 0.7124554514884949, 0.7289658188819885, 0.7353057861328125, 0.7526086568832397, 0.7655527591705322, 0.7663452625274658, 0.7765156626701355, 0.7853652238845825, 0.7844406366348267, 0.7948752045631409, 0.7957997918128967, 0.7980451583862305, 0.8021397590637207, 0.8067626357078552, 0.8025360107421875, 0.8045172095298767, 0.8121780753135681, 0.822348415851593, 0.8284242749214172, 0.8255184292793274, 0.8327829837799072, 0.839519202709198, 0.8374059200286865, 0.8355567455291748, 0.8430854678153992, 0.848368763923645, 0.8454629778862, 0.8444063067436218, 0.8508783578872681, 0.850350022315979, 0.859199583530426, 0.86118084192276, 0.8568220734596252, 0.8574824929237366, 0.8597279191017151, 0.8660678863525391, 0.8712190985679626, 0.8626337051391602], "val_loss": [2.2462639808654785, 2.0200839042663574, 1.1531059741973877, 0.8817869424819946, 0.7635679244995117, 0.7128363251686096, 0.6701617240905762, 0.6563897132873535, 0.6404550075531006, 0.6109942197799683, 0.5993854403495789, 0.5685256123542786, 0.5369796752929688, 0.5246497392654419, 0.5100581049919128, 0.4997107684612274, 0.4885568916797638, 0.4863688051700592, 0.47911784052848816, 0.46998336911201477, 0.46624401211738586, 0.4609864354133606, 0.4578070342540741, 0.4576306939125061, 0.4524669647216797, 0.4488438665866852, 0.4374910593032837, 0.43848729133605957, 0.42364799976348877, 0.42398449778556824, 0.420561283826828, 0.4113517701625824, 0.41133755445480347, 0.41367754340171814, 0.4119400084018707, 0.41397953033447266, 0.43309536576271057, 0.4180004894733429, 0.4123819172382355, 0.4191398620605469, 0.4159163534641266, 0.40861189365386963, 0.4091336727142334, 0.42319437861442566, 0.41969892382621765, 0.4294477105140686, 0.4116695523262024], "val_accuracy": [0.41600000858306885, 0.4416666626930237, 0.637666642665863, 0.6909999847412109, 0.7239999771118164, 0.7296666502952576, 0.7516666650772095, 0.7476666569709778, 0.7516666650772095, 0.7733333110809326, 0.7646666765213013, 0.7900000214576721, 0.7996666431427002, 0.7976666688919067, 0.8066666722297668, 0.8069999814033508, 0.8143333196640015, 0.8176666498184204, 0.8119999766349792, 0.8186666369438171, 0.8256666660308838, 0.8296666741371155, 0.8323333263397217, 0.8370000123977661, 0.8370000123977661, 0.8360000252723694, 0.8450000286102295, 0.8443333506584167, 0.8506666421890259, 0.8463333249092102, 0.8519999980926514, 0.8606666922569275, 0.8583333492279053, 0.8569999933242798, 0.8603333234786987, 0.8643333315849304, 0.8566666841506958, 0.8610000014305115, 0.8643333315849304, 0.8686666488647461, 0.8663333058357239, 0.8723333477973938, 0.8693333268165588, 0.8693333268165588, 0.8656666874885559, 0.8686666488647461, 0.8723333477973938]}, "mapping_values": [1, 10, 5, 5, 3, 2, 2, 0, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 1, 3, 2, 3, 9, 6, 3, 5, 4, 3], [2, 1, 0, 2, 0, 1, 1, 1, 2, 3], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [4, 9, 8, 3], [0, 2, 0, 3], [0, 69], [1, 1], [0], [0], [95], [1, 1], [2], [1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 13, 10, 3, 6, 4, 2, 2, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, alpha), tf.math.multiply(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(tf.math.multiply(alpha, alpha), alpha))), grad)))), grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 3, 8, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 6, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 4, 0, 2, 3, 1, 2, 0], [16, 32, 91, 99, 61, 91]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 6, 3, 3, 2, 2, 1, 1, 1, 16, 8, 8, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.subtract(grad, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), tf.math.pow(beta, tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [5, 2, 3, 0, 3], [2, 1, 0, 2], [39, 5], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [6, 0, 3, 0, 3, 6, 1, 8, 6, 6, 9], [0, 2, 3, 3, 2, 1, 5], [16, 16], [0, 1, 0, 1], [3, 8], [0, 3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 9, 8, 5], [0, 3, 0, 3, 0, 0, 3, 1, 0, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 18, 11, 7, 2, 4, 2, 2, 1, 20, 12, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(grad, alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta)), tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(grad, grad), tf.math.sqrt(beta)), tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(sigma, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma), tf.math.sqrt(tf.math.square(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 5, 3, 0, 3], [2, 1, 0, 0], [39, 39], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [27, 16], [0, 1], [0], [2], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 5, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 3, 0, 3, 1, 2, 0], [18, 83, 96, 99, 61, 1]], "fitness": -0.09285714477300644, "mapping_values": [1, 5, 3, 2, 0, 6, 3, 3, 2, 2, 1, 1, 0, 17, 9, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(sigma, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha)", "other_info": {"loss": [2.31069016456604, 2.3093647956848145, 2.308718681335449, 2.309483766555786, 2.3099567890167236, 2.3096909523010254], "accuracy": [0.08849557489156723, 0.09047681838274002, 0.0948355570435524, 0.09126931428909302, 0.08836349099874496, 0.08770307898521423], "val_loss": [2.308544158935547, 2.308544158935547, 2.308544158935547, 2.308544158935547, 2.308544158935547, 2.308544158935547], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]