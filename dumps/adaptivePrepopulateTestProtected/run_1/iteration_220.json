[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8648571372032166, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222979784011841, 1.8641855716705322, 1.3937373161315918, 1.0897040367126465, 0.9440923929214478, 0.8317561745643616, 0.7697362899780273, 0.7234317064285278, 0.6906758546829224, 0.6487892866134644, 0.6297673583030701, 0.600282609462738, 0.5911879539489746, 0.5762978196144104, 0.5529081225395203, 0.5461753606796265, 0.5239410400390625, 0.521336019039154, 0.5146582722663879, 0.4963642656803131, 0.4917584955692291, 0.48129308223724365, 0.4711783826351166, 0.4581694006919861, 0.45545923709869385, 0.44172441959381104, 0.43852362036705017, 0.4240751266479492, 0.42187535762786865, 0.41736751794815063, 0.41041719913482666, 0.4013081192970276, 0.39546066522598267, 0.38560250401496887, 0.3806028664112091, 0.37127384543418884, 0.3774053454399109, 0.3700413107872009, 0.364703506231308, 0.35733723640441895, 0.3570238947868347, 0.35201022028923035, 0.34493488073349], "accuracy": [0.26878878474235535, 0.49187690019607544, 0.5661075115203857, 0.624620258808136, 0.6585655808448792, 0.7033417224884033, 0.7154933214187622, 0.7327961921691895, 0.7494386434555054, 0.7696473598480225, 0.769911527633667, 0.783119797706604, 0.7862898111343384, 0.7959318161010742, 0.7992339134216309, 0.8035926818847656, 0.8141592741012573, 0.8149517774581909, 0.8144234418869019, 0.8222163319587708, 0.821820080280304, 0.8302733898162842, 0.8298771381378174, 0.8348963260650635, 0.8355567455291748, 0.8436138033866882, 0.8438779711723328, 0.8504821062088013, 0.8527275323867798, 0.8533879518508911, 0.8569541573524475, 0.8569541573524475, 0.8577466607093811, 0.8660678863525391, 0.8640866279602051, 0.8716153502464294, 0.8681812286376953, 0.8717474341392517, 0.8676528930664062, 0.8751816153526306, 0.8732003569602966, 0.8775591254234314, 0.8782195448875427], "val_loss": [2.0363008975982666, 1.512771487236023, 1.0439033508300781, 0.8389871716499329, 0.7494502663612366, 0.6868811249732971, 0.6415178775787354, 0.6113017201423645, 0.5797440409660339, 0.5563023090362549, 0.5378168225288391, 0.5223614573478699, 0.5156998038291931, 0.49673566222190857, 0.4889923632144928, 0.4811279773712158, 0.4701068103313446, 0.467264324426651, 0.45922625064849854, 0.44363680481910706, 0.44346654415130615, 0.43553900718688965, 0.43243733048439026, 0.42547371983528137, 0.42385172843933105, 0.4152250587940216, 0.4076501429080963, 0.4031847417354584, 0.39969784021377563, 0.3964654803276062, 0.3944295346736908, 0.39800015091896057, 0.3869761526584625, 0.38660165667533875, 0.380094975233078, 0.3833216428756714, 0.3811624348163605, 0.3700695037841797, 0.3714849352836609, 0.3678930997848511, 0.3641493022441864, 0.3639231026172638, 0.365683913230896], "val_accuracy": [0.5246666669845581, 0.6600000262260437, 0.6796666383743286, 0.7093333601951599, 0.731333315372467, 0.7509999871253967, 0.7593333125114441, 0.7663333415985107, 0.7903333306312561, 0.7926666736602783, 0.7986666560173035, 0.8066666722297668, 0.8109999895095825, 0.8190000057220459, 0.8206666707992554, 0.8253333568572998, 0.828000009059906, 0.8236666917800903, 0.8296666741371155, 0.8383333086967468, 0.8379999995231628, 0.8376666903495789, 0.8360000252723694, 0.8413333296775818, 0.8403333425521851, 0.8506666421890259, 0.8500000238418579, 0.8553333282470703, 0.8553333282470703, 0.8556666374206543, 0.8556666374206543, 0.8510000109672546, 0.8619999885559082, 0.8586666584014893, 0.8613333106040955, 0.8583333492279053, 0.859333336353302, 0.8653333187103271, 0.8633333444595337, 0.862333357334137, 0.8636666536331177, 0.8646666407585144, 0.8606666922569275]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 5], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8531428575515747, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.29384183883667, 2.193068265914917, 1.7821388244628906, 1.3768457174301147, 1.080456256866455, 0.9228349328041077, 0.8358367085456848, 0.8287603259086609, 0.7652565836906433, 0.7371380925178528, 0.7116356492042542, 0.6909491419792175, 0.6581570506095886, 0.6373687386512756, 0.6179896593093872, 0.5940996408462524, 0.5840022563934326, 0.56754070520401, 0.5644407868385315, 0.5468450784683228, 0.5379642844200134, 0.5264102816581726, 0.5161898136138916, 0.506488561630249, 0.49497485160827637, 0.48633378744125366, 0.4708331227302551, 0.47490984201431274, 0.44807496666908264, 0.43382611870765686, 0.4465559422969818, 0.4163777530193329, 0.4101182520389557, 0.4083121418952942, 0.39818304777145386, 0.391062468290329, 0.3970056176185608, 0.3825872242450714, 0.3802635073661804, 0.3723467290401459, 0.365814208984375, 0.36853715777397156, 0.3561391532421112], "accuracy": [0.12600713968276978, 0.3229427933692932, 0.43283581733703613, 0.5404834151268005, 0.629507303237915, 0.6668868064880371, 0.6992471218109131, 0.7066437602043152, 0.7182670831680298, 0.7209087014198303, 0.7347774505615234, 0.7405890822410583, 0.7553823590278625, 0.7563069462776184, 0.7644960880279541, 0.7744023203849792, 0.7827235460281372, 0.7853652238845825, 0.7887993454933167, 0.793950617313385, 0.8012151718139648, 0.8009510040283203, 0.8087438941001892, 0.8119139075279236, 0.8115176558494568, 0.8178576231002808, 0.8238013386726379, 0.8190463781356812, 0.828292191028595, 0.8359529972076416, 0.8327829837799072, 0.843481719493866, 0.8444063067436218, 0.846387505531311, 0.8477083444595337, 0.8498216867446899, 0.8490291833877563, 0.8527275323867798, 0.8558974862098694, 0.8597279191017151, 0.8594637513160706, 0.8555012345314026, 0.8609166741371155], "val_loss": [2.2465221881866455, 2.025052785873413, 1.1571018695831299, 0.892122745513916, 0.7830089330673218, 0.7199662923812866, 0.7109448909759521, 0.6581667065620422, 0.6416980624198914, 0.618050754070282, 0.6005672812461853, 0.5688757300376892, 0.5449498891830444, 0.5368279814720154, 0.5254950523376465, 0.5238341689109802, 0.5212408304214478, 0.5026212930679321, 0.4960985779762268, 0.4870130717754364, 0.4800683856010437, 0.4785976707935333, 0.47116589546203613, 0.46439066529273987, 0.4609028995037079, 0.4573761522769928, 0.4537830352783203, 0.43983256816864014, 0.4315807819366455, 0.4421747624874115, 0.4244869649410248, 0.416627436876297, 0.418402761220932, 0.4090202748775482, 0.4149916470050812, 0.4309273362159729, 0.41227254271507263, 0.39975056052207947, 0.40285226702690125, 0.40763160586357117, 0.4065109193325043, 0.40257149934768677, 0.40498584508895874], "val_accuracy": [0.4300000071525574, 0.4650000035762787, 0.6380000114440918, 0.6846666932106018, 0.7036666870117188, 0.7329999804496765, 0.7283333539962769, 0.7453333139419556, 0.7566666603088379, 0.7639999985694885, 0.765333354473114, 0.7799999713897705, 0.7803333401679993, 0.7923333048820496, 0.8013333082199097, 0.7919999957084656, 0.7933333516120911, 0.8056666851043701, 0.8090000152587891, 0.8186666369438171, 0.8220000267028809, 0.8270000219345093, 0.8253333568572998, 0.831333339214325, 0.824999988079071, 0.8266666531562805, 0.82833331823349, 0.8363333344459534, 0.8393333554267883, 0.8403333425521851, 0.8420000076293945, 0.8489999771118164, 0.8546666502952576, 0.8553333282470703, 0.8543333411216736, 0.8506666421890259, 0.8586666584014893, 0.8619999885559082, 0.8600000143051147, 0.8610000014305115, 0.8603333234786987, 0.8586666584014893, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8231428861618042, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.589237928390503, 0.8173694014549255, 0.698023796081543, 0.6518455743789673, 0.6175569891929626, 0.5976781249046326, 0.5464760065078735, 0.5385534167289734, 0.5168097615242004, 0.49768245220184326, 0.4765263497829437, 0.46717900037765503, 0.500896155834198, 0.6450476050376892, 0.6057595014572144, 0.6748973727226257, 0.622969388961792, 0.6131201982498169, 0.6188364624977112], "accuracy": [0.46070531010627747, 0.711530864238739, 0.7424382567405701, 0.7598732113838196, 0.7766477465629578, 0.7845727205276489, 0.7975168228149414, 0.8034605979919434, 0.8128384351730347, 0.8177255392074585, 0.8277638554573059, 0.8325188159942627, 0.8342359066009521, 0.804649293422699, 0.8064984679222107, 0.7835160493850708, 0.8119139075279236, 0.7979130744934082, 0.8025360107421875], "val_loss": [0.8011590242385864, 0.6526255011558533, 0.5900125503540039, 0.5755540728569031, 0.5247473120689392, 0.526479959487915, 0.5095754265785217, 0.5180359482765198, 0.4841518700122833, 0.5380395650863647, 0.5036893486976624, 0.5113523006439209, 0.7390347719192505, 0.5741517543792725, 0.5580344796180725, 0.6201395988464355, 0.6306758522987366, 0.568766176700592, 0.557971179485321], "val_accuracy": [0.7056666612625122, 0.7563333511352539, 0.7846666574478149, 0.7846666574478149, 0.8133333325386047, 0.8206666707992554, 0.8146666884422302, 0.8370000123977661, 0.82833331823349, 0.8396666646003723, 0.8429999947547913, 0.8423333168029785, 0.8346666693687439, 0.8433333039283752, 0.8303333520889282, 0.828000009059906, 0.8429999947547913, 0.8233333230018616, 0.8433333039283752]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [56, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [9, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [4], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.1371428519487381, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma), alpha)", "other_info": {"loss": [2.310028314590454, 4575656.0, 6157774.0, 2233599232.0, 544240203464704.0, NaN, NaN], "accuracy": [0.09140139818191528, 0.09430722147226334, 0.10276053100824356, 0.09760929644107819, 0.10566636174917221, 0.09642054885625839, 0.09866596013307571], "val_loss": [2.3083770275115967, 4451208.0, 449389120.0, 4539921.5, NaN, 216290624.0, NaN], "val_accuracy": [0.08666666597127914, 0.1326666623353958, 0.13233333826065063, 0.1326666623353958, 0.13233333826065063, 0.1326666623353958, 0.13233333826065063]}, "mapping_values": [1, 9, 5, 4, 2, 1, 1, 0, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 18}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 1], [16, 16], [0, 0, 0, 1], [0, 5, 5], [0], [99], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 0, 3, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 4, 3, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303889274597168, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 5, 3, 2, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [8, 2, 3, 0, 3, 5], [0, 2, 0, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 2, 4, 2, 8, 5], [0, 0, 0, 3, 0, 0, 3, 1, 3, 0], [16, 99, 96, 99, 61, 32]], "fitness": -0.09285714477300644, "mapping_values": [1, 9, 5, 4, 2, 7, 4, 3, 2, 2, 1, 1, 1, 22, 12, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(tf.math.square(sigma)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3094513416290283, 2.3097786903381348, 2.309634208679199, 2.310192346572876, 2.310307025909424, 2.3100833892822266], "accuracy": [0.09615638852119446, 0.09126931428909302, 0.09087307006120682, 0.0952318087220192, 0.09232597798109055, 0.09153348207473755], "val_loss": [2.3091747760772705, 2.3091747760772705, 2.3091747760772705, 2.3091747760772705, 2.3091747760772705, 2.3091747760772705], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3], [0, 1, 3, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 2, 3], [2, 2, 0, 3, 3], [16, 31], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 3, 3, 9, 9], [6], [20, 99, 96, 99, 61, 1]], "fitness": -0.09028571099042892, "mapping_values": [1, 1, 0, 1, 1, 11, 6, 5, 1, 2, 1, 1, 1, 6, 5, 1, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(beta), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(grad, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3124868869781494, 2.315955400466919, 2.319838285446167, 2.323254346847534, 2.3280529975891113, 2.332308530807495], "accuracy": [0.08836349099874496, 0.08585391938686371, 0.08189142495393753, 0.07911768555641174, 0.07528728246688843, 0.07713644206523895], "val_loss": [2.3131327629089355, 2.317408800125122, 2.321812629699707, 2.3262829780578613, 2.3308911323547363, 2.335693597793579], "val_accuracy": [0.08733333647251129, 0.08699999749660492, 0.08699999749660492, 0.08733333647251129, 0.08733333647251129, 0.08666666597127914]}}]