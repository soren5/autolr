[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223330497741699, 1.8670156002044678, 1.3935511112213135, 1.1012579202651978, 0.9477801322937012, 0.8379126191139221, 0.7764281630516052, 0.7235901951789856, 0.6839449405670166, 0.6511124968528748, 0.6340097188949585, 0.6069210171699524, 0.5817078948020935, 0.5635776519775391, 0.5524153113365173, 0.5367791652679443, 0.5212588906288147, 0.5178380608558655, 0.5019086003303528, 0.4879888892173767, 0.4858485460281372, 0.4747111201286316, 0.45951735973358154, 0.4532293975353241, 0.4492609202861786, 0.4330301284790039, 0.4310648441314697, 0.42051371932029724, 0.41327017545700073, 0.4060419201850891, 0.3997148871421814, 0.39729252457618713, 0.3869434893131256, 0.3869549036026001, 0.38186177611351013, 0.3692651391029358, 0.36346086859703064, 0.3634459972381592, 0.3600703179836273, 0.3489670753479004, 0.3429599404335022, 0.34309908747673035, 0.3401198089122772, 0.3303268253803253, 0.3301240801811218, 0.3276282846927643, 0.3180643618106842, 0.3136589229106903, 0.3090694546699524, 0.3071834146976471, 0.3011736273765564, 0.30332496762275696, 0.29351481795310974, 0.2937680780887604], "accuracy": [0.26680755615234375, 0.49451854825019836, 0.5679566860198975, 0.6209219098091125, 0.6646413803100586, 0.7078325152397156, 0.7234182953834534, 0.7387399077415466, 0.7541936039924622, 0.7672698497772217, 0.7677981853485107, 0.7820631265640259, 0.7897239327430725, 0.7977809906005859, 0.798309326171875, 0.8082155585289001, 0.8138951063156128, 0.8094043135643005, 0.822348415851593, 0.8269713521003723, 0.8208954930305481, 0.8310658931732178, 0.8350284099578857, 0.8367455005645752, 0.8368775844573975, 0.8444063067436218, 0.843481719493866, 0.850350022315979, 0.8502179384231567, 0.8570862412452698, 0.857218325138092, 0.8574824929237366, 0.8610487580299377, 0.8610487580299377, 0.8607845902442932, 0.8658037185668945, 0.8701624870300293, 0.8689737319946289, 0.8708229064941406, 0.8792761564254761, 0.8798044919967651, 0.8765024542808533, 0.8765024542808533, 0.8824461698532104, 0.880729079246521, 0.8844274282455444, 0.8838990926742554, 0.8887861371040344, 0.8878615498542786, 0.8903711438179016, 0.8924844861030579, 0.8912957310676575, 0.8976356983184814, 0.8960506916046143], "val_loss": [2.040694236755371, 1.5166728496551514, 1.045767068862915, 0.8421168327331543, 0.7569165229797363, 0.7011509537696838, 0.6573318839073181, 0.6179470419883728, 0.5908101201057434, 0.5737177133560181, 0.5541383624076843, 0.5365487933158875, 0.518412172794342, 0.5104728937149048, 0.49868762493133545, 0.485697478055954, 0.48461878299713135, 0.46694132685661316, 0.459992378950119, 0.44818419218063354, 0.45110249519348145, 0.4507465958595276, 0.4339507520198822, 0.4287099242210388, 0.42590731382369995, 0.4119842052459717, 0.4104468524456024, 0.4069807529449463, 0.40372517704963684, 0.3985708951950073, 0.3967111110687256, 0.39305025339126587, 0.39346253871917725, 0.3906964063644409, 0.3815464675426483, 0.3792845904827118, 0.37928369641304016, 0.3762374818325043, 0.37582898139953613, 0.37387406826019287, 0.3717586398124695, 0.36671704053878784, 0.363382488489151, 0.36401286721229553, 0.3619881868362427, 0.35666540265083313, 0.3588123917579651, 0.3541429042816162, 0.35232576727867126, 0.35342442989349365, 0.3524846136569977, 0.34847813844680786, 0.34814298152923584, 0.35015836358070374], "val_accuracy": [0.5323333144187927, 0.6446666717529297, 0.6756666898727417, 0.7043333053588867, 0.7239999771118164, 0.7493333220481873, 0.753000020980835, 0.7706666588783264, 0.7820000052452087, 0.7873333096504211, 0.7956666946411133, 0.800000011920929, 0.8136666417121887, 0.812666654586792, 0.8199999928474426, 0.824999988079071, 0.8246666789054871, 0.8326666951179504, 0.8303333520889282, 0.8376666903495789, 0.8333333134651184, 0.8343333601951599, 0.8446666598320007, 0.843666672706604, 0.846666693687439, 0.8513333201408386, 0.8546666502952576, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8529999852180481, 0.859333336353302, 0.8546666502952576, 0.8569999933242798, 0.8606666922569275, 0.8633333444595337, 0.8643333315849304, 0.8629999756813049, 0.8576666712760925, 0.8703333139419556, 0.8640000224113464, 0.8643333315849304, 0.8676666617393494, 0.8663333058357239, 0.8713333606719971, 0.871999979019165, 0.8693333268165588, 0.8693333268165588, 0.878000020980835, 0.8756666779518127, 0.8706666827201843, 0.8756666779518127, 0.8769999742507935, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8554285764694214, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2224233150482178, 1.8621710538864136, 1.3939348459243774, 1.0990945100784302, 0.9419246315956116, 0.8408231735229492, 0.7860967516899109, 0.7406108379364014, 0.6927804350852966, 0.6726871132850647, 0.6332351565361023, 0.620376706123352, 0.6021288633346558, 0.5850772261619568, 0.5676766633987427, 0.5473669171333313, 0.5363690257072449, 0.5204302072525024, 0.5137253999710083, 0.5068821907043457, 0.49142831563949585, 0.48402756452560425, 0.47613194584846497, 0.4729635715484619, 0.4606076776981354, 0.4552895724773407, 0.4484519064426422, 0.44255685806274414, 0.43217790126800537, 0.42555999755859375, 0.423490971326828, 0.41124993562698364, 0.4087519943714142, 0.39991530776023865, 0.39342427253723145, 0.38985785841941833, 0.3812328577041626, 0.37597936391830444, 0.3775140941143036, 0.3671534061431885, 0.36783310770988464, 0.36122432351112366, 0.35677170753479004, 0.3521001935005188, 0.3482116460800171, 0.33273306488990784, 0.34002405405044556, 0.3280877470970154, 0.32754597067832947, 0.3249429166316986, 0.31652310490608215, 0.30889636278152466, 0.3129895031452179, 0.29838886857032776, 0.3039591312408447, 0.2961391806602478, 0.29405128955841064, 0.2917129099369049, 0.2856708765029907, 0.2799186110496521, 0.2866549491882324, 0.28077074885368347, 0.27253833413124084, 0.26541322469711304, 0.2630116641521454, 0.2624576985836029, 0.25977712869644165], "accuracy": [0.2744683623313904, 0.4917448163032532, 0.5654470920562744, 0.6136573553085327, 0.6655659675598145, 0.6983225345611572, 0.7131158113479614, 0.7226257920265198, 0.7474573850631714, 0.7557786107063293, 0.7625148296356201, 0.7700436115264893, 0.7783648371696472, 0.7889314293861389, 0.7957997918128967, 0.8039889335632324, 0.8057059645652771, 0.8105930685997009, 0.8144234418869019, 0.8145555257797241, 0.8181217908859253, 0.8286884427070618, 0.8273676037788391, 0.8256505131721497, 0.8305375576019287, 0.8385946154594421, 0.8366134166717529, 0.8388587832450867, 0.8433496356010437, 0.8459912538528442, 0.8462554216384888, 0.846387505531311, 0.8520671129226685, 0.8585391640663147, 0.8615770936012268, 0.8626337051391602, 0.8632941246032715, 0.86553955078125, 0.8648791313171387, 0.8646149635314941, 0.8647470474243164, 0.8689737319946289, 0.869502067565918, 0.8684453964233398, 0.8709549307823181, 0.8775591254234314, 0.8774270415306091, 0.8824461698532104, 0.8779553771018982, 0.8836349248886108, 0.8833707571029663, 0.8870691061019897, 0.8836349248886108, 0.891559898853302, 0.8874653577804565, 0.8908994793891907, 0.8928807377815247, 0.8944657444953918, 0.8968431949615479, 0.8932769894599915, 0.8944657444953918, 0.8997490406036377, 0.8981640338897705, 0.9026548862457275, 0.9066173434257507, 0.9025228023529053, 0.9037115573883057], "val_loss": [2.0337531566619873, 1.5093616247177124, 1.0438424348831177, 0.8368676900863647, 0.7464258074760437, 0.6909834146499634, 0.6450319290161133, 0.6100420951843262, 0.5868061184883118, 0.5610649585723877, 0.5464116334915161, 0.5279358625411987, 0.5164151191711426, 0.5015048980712891, 0.4892912209033966, 0.48214656114578247, 0.47327253222465515, 0.4617222845554352, 0.4606490135192871, 0.44801798462867737, 0.4432283639907837, 0.43155261874198914, 0.4281716048717499, 0.4283002018928528, 0.4206843376159668, 0.419524222612381, 0.4119016230106354, 0.4068896770477295, 0.4057355225086212, 0.4042888879776001, 0.3949926495552063, 0.3951799273490906, 0.395106703042984, 0.3894185721874237, 0.385069340467453, 0.38370996713638306, 0.3824501037597656, 0.3782835006713867, 0.3703121840953827, 0.3730955719947815, 0.37915241718292236, 0.37206798791885376, 0.37196484208106995, 0.3645860254764557, 0.3676581084728241, 0.36302700638771057, 0.35772284865379333, 0.3594421446323395, 0.3574466109275818, 0.36215129494667053, 0.35574665665626526, 0.35274195671081543, 0.35034582018852234, 0.35100993514060974, 0.3471788465976715, 0.3537504971027374, 0.34727275371551514, 0.34919068217277527, 0.35441726446151733, 0.34940341114997864, 0.34094592928886414, 0.340762197971344, 0.34676945209503174, 0.338175505399704, 0.3509909212589264, 0.34695881605148315, 0.3465753197669983], "val_accuracy": [0.5173333287239075, 0.6576666831970215, 0.6809999942779541, 0.7120000123977661, 0.7326666712760925, 0.7453333139419556, 0.762333333492279, 0.7720000147819519, 0.7863333225250244, 0.793666660785675, 0.7940000295639038, 0.8050000071525574, 0.8166666626930237, 0.8173333406448364, 0.8213333487510681, 0.8263333439826965, 0.824999988079071, 0.8330000042915344, 0.8379999995231628, 0.8379999995231628, 0.8389999866485596, 0.8453333377838135, 0.8420000076293945, 0.8456666469573975, 0.8513333201408386, 0.8496666550636292, 0.8506666421890259, 0.8516666889190674, 0.8556666374206543, 0.8546666502952576, 0.856333315372467, 0.8583333492279053, 0.8546666502952576, 0.8629999756813049, 0.8613333106040955, 0.8619999885559082, 0.8636666536331177, 0.8633333444595337, 0.8679999709129333, 0.8643333315849304, 0.8640000224113464, 0.8666666746139526, 0.8693333268165588, 0.8733333349227905, 0.8696666955947876, 0.8690000176429749, 0.8756666779518127, 0.8696666955947876, 0.8730000257492065, 0.8733333349227905, 0.875, 0.878333330154419, 0.8790000081062317, 0.8786666393280029, 0.8796666860580444, 0.8763333559036255, 0.878333330154419, 0.878333330154419, 0.8743333220481873, 0.8799999952316284, 0.8806666731834412, 0.8859999775886536, 0.8799999952316284, 0.8816666603088379, 0.8796666860580444, 0.8803333044052124, 0.8846666812896729]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8497142791748047, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2925806045532227, 2.1865789890289307, 1.7620668411254883, 1.3555165529251099, 1.07374107837677, 0.9176741242408752, 0.8331319689750671, 0.7972730994224548, 0.7613983750343323, 0.7389470338821411, 0.6960707902908325, 0.6822799444198608, 0.6459715366363525, 0.6389341950416565, 0.6171795129776001, 0.595214307308197, 0.5853068232536316, 0.567582368850708, 0.5631290078163147, 0.5432191491127014, 0.5324151515960693, 0.5221864581108093, 0.5066216588020325, 0.501767635345459, 0.5025465488433838, 0.4896201491355896, 0.48126551508903503, 0.47065380215644836, 0.46780040860176086, 0.45069435238838196, 0.4449283480644226, 0.4452771544456482, 0.42536601424217224, 0.4225355088710785, 0.41906264424324036, 0.39648160338401794, 0.40325385332107544, 0.39253100752830505, 0.38312578201293945, 0.37194356322288513, 0.3821622133255005, 0.37172502279281616, 0.3471077084541321, 0.3619116246700287, 0.36237460374832153, 0.35050109028816223], "accuracy": [0.12442214041948318, 0.3319244384765625, 0.4411570429801941, 0.5412759184837341, 0.635979413986206, 0.667811393737793, 0.6942279934883118, 0.7087571024894714, 0.702681303024292, 0.7186633348464966, 0.7283053994178772, 0.7412495017051697, 0.7464007139205933, 0.7456082701683044, 0.7597411274909973, 0.7701756954193115, 0.7724210619926453, 0.7837802171707153, 0.7820631265640259, 0.7893276810646057, 0.7967243194580078, 0.8001585006713867, 0.8068947196006775, 0.8120459914207458, 0.802800178527832, 0.8090080618858337, 0.8140271902084351, 0.8146876096725464, 0.8204993009567261, 0.826310932636261, 0.8317263126373291, 0.8308017253875732, 0.8354246616363525, 0.837141752243042, 0.8379341959953308, 0.8479725122451782, 0.843481719493866, 0.8488970994949341, 0.8475762605667114, 0.8580108284950256, 0.8527275323867798, 0.8623695969581604, 0.8656716346740723, 0.8574824929237366, 0.8588033318519592, 0.8640866279602051], "val_loss": [2.245605945587158, 2.0119214057922363, 1.1276261806488037, 0.8305585980415344, 0.7553399205207825, 0.6846329569816589, 0.6363755464553833, 0.6234168410301208, 0.6128283739089966, 0.5923743844032288, 0.5354165434837341, 0.5151602625846863, 0.5228506326675415, 0.5142077803611755, 0.4961915612220764, 0.4897533357143402, 0.4861411154270172, 0.47621849179267883, 0.464438259601593, 0.4679573178291321, 0.4526573419570923, 0.44737938046455383, 0.4391441345214844, 0.4384821653366089, 0.4314090609550476, 0.41740551590919495, 0.4220954477787018, 0.41485530138015747, 0.41180098056793213, 0.40593421459198, 0.4014226496219635, 0.39616134762763977, 0.3899625539779663, 0.3895827531814575, 0.3874530792236328, 0.3916180729866028, 0.38333508372306824, 0.3831358253955841, 0.3724442422389984, 0.3823944926261902, 0.38496914505958557, 0.37718600034713745, 0.3854506313800812, 0.3739931583404541, 0.38301700353622437, 0.39261823892593384], "val_accuracy": [0.40533334016799927, 0.4793333411216736, 0.6489999890327454, 0.7049999833106995, 0.7173333168029785, 0.7513333559036255, 0.750333309173584, 0.7680000066757202, 0.7590000033378601, 0.7833333611488342, 0.7836666703224182, 0.7986666560173035, 0.793666660785675, 0.7990000247955322, 0.8029999732971191, 0.8056666851043701, 0.8153333067893982, 0.8203333616256714, 0.8286666870117188, 0.8226666450500488, 0.8339999914169312, 0.8349999785423279, 0.8379999995231628, 0.8349999785423279, 0.8416666388511658, 0.8496666550636292, 0.8506666421890259, 0.8523333072662354, 0.8526666760444641, 0.8550000190734863, 0.8569999933242798, 0.8553333282470703, 0.8603333234786987, 0.859000027179718, 0.8606666922569275, 0.862666666507721, 0.8663333058357239, 0.8640000224113464, 0.8636666536331177, 0.8730000257492065, 0.8756666779518127, 0.871999979019165, 0.8663333058357239, 0.8666666746139526, 0.8706666827201843, 0.8726666569709778]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 0, 1, 1], [0, 7, 4], [0, 2, 5], [0], [1], [0], [2], [0]], "fitness": -0.8345714211463928, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(beta, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5679370164871216, 0.8349224328994751, 0.6852033138275146, 0.6710125207901001, 0.5981177687644958, 0.5693971514701843, 0.524412989616394, 0.5281347036361694, 0.5414363741874695, 0.5541432499885559, 0.5445441603660583, 0.5417812466621399, 0.5255792140960693, 0.48008015751838684, 0.48338624835014343, 0.49289238452911377, 0.48393818736076355, 0.4711165726184845, 0.4465305805206299, 0.5053415298461914, 0.5104121565818787, 0.4870435297489166, 0.512803852558136, 0.545242190361023], "accuracy": [0.47906485199928284, 0.69673752784729, 0.737022876739502, 0.7489103078842163, 0.7734777331352234, 0.7872143983840942, 0.8013472557067871, 0.807158887386322, 0.8018755912780762, 0.8083476424217224, 0.809140145778656, 0.8041210174560547, 0.8109893202781677, 0.8226125836372375, 0.8227446675300598, 0.8203672170639038, 0.8278959393501282, 0.8297450542449951, 0.8409721255302429, 0.8329150676727295, 0.8309338092803955, 0.8321225643157959, 0.835160493850708, 0.8255184292793274], "val_loss": [0.829708993434906, 0.6244611144065857, 0.5923925042152405, 0.5737408995628357, 0.5248229503631592, 0.5173136591911316, 0.5485374927520752, 0.5360619425773621, 0.5412929058074951, 0.533859372138977, 0.5116583108901978, 0.5159108638763428, 0.5070441365242004, 0.5176925659179688, 0.5486270189285278, 0.48468017578125, 0.4761064946651459, 0.5078078508377075, 0.5290384888648987, 0.5570200085639954, 0.5925276875495911, 0.5954731702804565, 0.6093897223472595, 0.6108106374740601], "val_accuracy": [0.703000009059906, 0.7680000066757202, 0.7706666588783264, 0.7933333516120911, 0.8109999895095825, 0.8096666932106018, 0.8286666870117188, 0.8199999928474426, 0.8303333520889282, 0.8316666483879089, 0.8263333439826965, 0.8339999914169312, 0.8330000042915344, 0.8393333554267883, 0.8356666564941406, 0.8346666693687439, 0.8446666598320007, 0.8443333506584167, 0.8479999899864197, 0.8353333473205566, 0.8363333344459534, 0.8423333168029785, 0.8293333053588867, 0.8410000205039978]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [44, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [9, 2, 3, 3, 3, 0], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 9, 8], [0, 0, 0, 1, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 1, 1, 0, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), alpha)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [1.695130580304267e+23, 4.513327121734619, 4.522527694702148, 4.533627510070801, 4.555956840515137, 4.6001386642456055], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.513992786407471, 4.515676498413086, 4.530093669891357, 4.546384811401367, 4.579076766967773, 4.641085147857666], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 41], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 6, 0, 3, 5, 9], [0, 2, 0, 3], [16, 16, 65], [0, 1], [0], [2], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 8, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 0, 0, 3, 0, 0, 3, 1, 2, 0], [6, 3, 96, 96, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 7, 3, 3, 2, 1, 1, 0, 11, 6, 5, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 5, 2, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 0, 0, 3], [16, 16, 77], [0, 1, 1], [2], [0, 2], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 1, 2, 6, 8, 1, 4, 2, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [19, 99, 4, 88, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 3, 3, 1, 2, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.add(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 6, 5, 2], [0, 0, 0, 2, 3, 0], [39, 39, 71, 83], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 3, 3, 0], [0, 2, 0, 3, 3], [16, 16], [0, 1], [0], [0], [70], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 1, 4, 1, 4, 5, 8, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 45, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 4, 10, 5, 5, 2, 2, 1, 1, 1, 21, 12, 9, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), tf.math.add(grad, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32))))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(tf.math.sqrt(alpha))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}]