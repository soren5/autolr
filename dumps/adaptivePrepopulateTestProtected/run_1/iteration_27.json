[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223330497741699, 1.8670156002044678, 1.3935511112213135, 1.1012579202651978, 0.9477801322937012, 0.8379126191139221, 0.7764281630516052, 0.7235901951789856, 0.6839449405670166, 0.6511124968528748, 0.6340097188949585, 0.6069210171699524, 0.5817078948020935, 0.5635776519775391, 0.5524153113365173, 0.5367791652679443, 0.5212588906288147, 0.5178380608558655, 0.5019086003303528, 0.4879888892173767, 0.4858485460281372, 0.4747111201286316, 0.45951735973358154, 0.4532293975353241, 0.4492609202861786, 0.4330301284790039, 0.4310648441314697, 0.42051371932029724, 0.41327017545700073, 0.4060419201850891, 0.3997148871421814, 0.39729252457618713, 0.3869434893131256, 0.3869549036026001, 0.38186177611351013, 0.3692651391029358, 0.36346086859703064, 0.3634459972381592, 0.3600703179836273, 0.3489670753479004, 0.3429599404335022, 0.34309908747673035, 0.3401198089122772, 0.3303268253803253, 0.3301240801811218, 0.3276282846927643, 0.3180643618106842, 0.3136589229106903, 0.3090694546699524, 0.3071834146976471, 0.3011736273765564, 0.30332496762275696, 0.29351481795310974, 0.2937680780887604], "accuracy": [0.26680755615234375, 0.49451854825019836, 0.5679566860198975, 0.6209219098091125, 0.6646413803100586, 0.7078325152397156, 0.7234182953834534, 0.7387399077415466, 0.7541936039924622, 0.7672698497772217, 0.7677981853485107, 0.7820631265640259, 0.7897239327430725, 0.7977809906005859, 0.798309326171875, 0.8082155585289001, 0.8138951063156128, 0.8094043135643005, 0.822348415851593, 0.8269713521003723, 0.8208954930305481, 0.8310658931732178, 0.8350284099578857, 0.8367455005645752, 0.8368775844573975, 0.8444063067436218, 0.843481719493866, 0.850350022315979, 0.8502179384231567, 0.8570862412452698, 0.857218325138092, 0.8574824929237366, 0.8610487580299377, 0.8610487580299377, 0.8607845902442932, 0.8658037185668945, 0.8701624870300293, 0.8689737319946289, 0.8708229064941406, 0.8792761564254761, 0.8798044919967651, 0.8765024542808533, 0.8765024542808533, 0.8824461698532104, 0.880729079246521, 0.8844274282455444, 0.8838990926742554, 0.8887861371040344, 0.8878615498542786, 0.8903711438179016, 0.8924844861030579, 0.8912957310676575, 0.8976356983184814, 0.8960506916046143], "val_loss": [2.040694236755371, 1.5166728496551514, 1.045767068862915, 0.8421168327331543, 0.7569165229797363, 0.7011509537696838, 0.6573318839073181, 0.6179470419883728, 0.5908101201057434, 0.5737177133560181, 0.5541383624076843, 0.5365487933158875, 0.518412172794342, 0.5104728937149048, 0.49868762493133545, 0.485697478055954, 0.48461878299713135, 0.46694132685661316, 0.459992378950119, 0.44818419218063354, 0.45110249519348145, 0.4507465958595276, 0.4339507520198822, 0.4287099242210388, 0.42590731382369995, 0.4119842052459717, 0.4104468524456024, 0.4069807529449463, 0.40372517704963684, 0.3985708951950073, 0.3967111110687256, 0.39305025339126587, 0.39346253871917725, 0.3906964063644409, 0.3815464675426483, 0.3792845904827118, 0.37928369641304016, 0.3762374818325043, 0.37582898139953613, 0.37387406826019287, 0.3717586398124695, 0.36671704053878784, 0.363382488489151, 0.36401286721229553, 0.3619881868362427, 0.35666540265083313, 0.3588123917579651, 0.3541429042816162, 0.35232576727867126, 0.35342442989349365, 0.3524846136569977, 0.34847813844680786, 0.34814298152923584, 0.35015836358070374], "val_accuracy": [0.5323333144187927, 0.6446666717529297, 0.6756666898727417, 0.7043333053588867, 0.7239999771118164, 0.7493333220481873, 0.753000020980835, 0.7706666588783264, 0.7820000052452087, 0.7873333096504211, 0.7956666946411133, 0.800000011920929, 0.8136666417121887, 0.812666654586792, 0.8199999928474426, 0.824999988079071, 0.8246666789054871, 0.8326666951179504, 0.8303333520889282, 0.8376666903495789, 0.8333333134651184, 0.8343333601951599, 0.8446666598320007, 0.843666672706604, 0.846666693687439, 0.8513333201408386, 0.8546666502952576, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8529999852180481, 0.859333336353302, 0.8546666502952576, 0.8569999933242798, 0.8606666922569275, 0.8633333444595337, 0.8643333315849304, 0.8629999756813049, 0.8576666712760925, 0.8703333139419556, 0.8640000224113464, 0.8643333315849304, 0.8676666617393494, 0.8663333058357239, 0.8713333606719971, 0.871999979019165, 0.8693333268165588, 0.8693333268165588, 0.878000020980835, 0.8756666779518127, 0.8706666827201843, 0.8756666779518127, 0.8769999742507935, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8722857236862183, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224829912185669, 1.8737059831619263, 1.3848540782928467, 1.097365379333496, 0.935946524143219, 0.83921879529953, 0.7684561610221863, 0.712721049785614, 0.6895875334739685, 0.6549102663993835, 0.6248413920402527, 0.5990521311759949, 0.5790538787841797, 0.5721656680107117, 0.5485500693321228, 0.5487141013145447, 0.5203466415405273, 0.5180399417877197, 0.495897501707077, 0.49029338359832764, 0.47894957661628723, 0.4781363606452942, 0.4623730778694153, 0.4462903141975403, 0.4421493709087372, 0.43845313787460327, 0.43318453431129456, 0.4219439625740051, 0.4233175814151764, 0.4118776023387909, 0.4006495773792267, 0.3974817097187042, 0.39649051427841187, 0.38489532470703125, 0.3796008825302124, 0.37911760807037354, 0.36684781312942505, 0.3631002604961395, 0.36015623807907104, 0.348672479391098, 0.34612977504730225, 0.3489857614040375, 0.3318099081516266, 0.3292725682258606, 0.3282664716243744, 0.3163881003856659, 0.31752797961235046, 0.31265607476234436, 0.3085382282733917, 0.3112242817878723, 0.29980677366256714, 0.29973164200782776, 0.29298219084739685, 0.2902968227863312, 0.28607380390167236, 0.27890685200691223, 0.28139254450798035, 0.27315038442611694, 0.2709355354309082, 0.27101412415504456, 0.25813189148902893, 0.25285443663597107, 0.25373363494873047, 0.24686679244041443, 0.2481137067079544, 0.2460622638463974, 0.2459583282470703, 0.2433038353919983, 0.2391679584980011, 0.23237168788909912, 0.2314983606338501, 0.23004408180713654, 0.2252364456653595, 0.22045955061912537], "accuracy": [0.2697133719921112, 0.4861973226070404, 0.5782591700553894, 0.6184123754501343, 0.6668868064880371, 0.7079645991325378, 0.7223616242408752, 0.739928662776947, 0.7486461400985718, 0.7675340175628662, 0.7726852297782898, 0.7819310426712036, 0.7930260300636292, 0.7965922355651855, 0.8074230551719666, 0.8013472557067871, 0.8133667707443237, 0.8142913579940796, 0.8193105459213257, 0.8241975903511047, 0.8301413059234619, 0.8265751004219055, 0.8360850811004639, 0.8426892161369324, 0.8467837572097778, 0.8448025584220886, 0.8469158411026001, 0.8486329317092896, 0.8516708612442017, 0.8524633646011353, 0.857218325138092, 0.8552370667457581, 0.8576145768165588, 0.8642187118530273, 0.863029956817627, 0.8671245574951172, 0.8671245574951172, 0.8679170608520508, 0.8721436858177185, 0.8753136992454529, 0.8770307898521423, 0.8739928603172302, 0.8815215826034546, 0.8787478804588318, 0.8816536664962769, 0.8813894987106323, 0.8856161832809448, 0.8861445188522339, 0.8902390599250793, 0.8835028409957886, 0.8877294659614563, 0.8953903317451477, 0.8919561505317688, 0.8911636471748352, 0.8949940800666809, 0.8973715305328369, 0.8969752788543701, 0.8994848728179932, 0.8993527889251709, 0.8993527889251709, 0.9029190540313721, 0.9078060984611511, 0.908730685710907, 0.9080702662467957, 0.9066173434257507, 0.9105798602104187, 0.9079381823539734, 0.9104477763175964, 0.9129573106765747, 0.9154669046401978, 0.9132214784622192, 0.9153348207473755, 0.9170519113540649, 0.9211464524269104], "val_loss": [2.042536735534668, 1.5225846767425537, 1.0532476902008057, 0.8495965003967285, 0.7679138779640198, 0.7078763246536255, 0.6590239405632019, 0.6237457394599915, 0.5942503213882446, 0.5738248825073242, 0.5510073304176331, 0.536427915096283, 0.5243771076202393, 0.5090059638023376, 0.4988178610801697, 0.48868000507354736, 0.47432684898376465, 0.4644317924976349, 0.46261417865753174, 0.4547705054283142, 0.4527968466281891, 0.44186344742774963, 0.4317772686481476, 0.4262462556362152, 0.4221671223640442, 0.4164910614490509, 0.41223078966140747, 0.40923258662223816, 0.4050755500793457, 0.4044838845729828, 0.39927440881729126, 0.3950929641723633, 0.39700961112976074, 0.3911115825176239, 0.38369977474212646, 0.38155537843704224, 0.3803004026412964, 0.38260045647621155, 0.3789246082305908, 0.37302160263061523, 0.3670928180217743, 0.3720783591270447, 0.3653143644332886, 0.36286449432373047, 0.36356452107429504, 0.36735132336616516, 0.3579733073711395, 0.3593265414237976, 0.35645848512649536, 0.3533194959163666, 0.35975393652915955, 0.35459989309310913, 0.35294994711875916, 0.35370010137557983, 0.3509100675582886, 0.3533088266849518, 0.35007983446121216, 0.35500064492225647, 0.34780630469322205, 0.34956273436546326, 0.3467063307762146, 0.3467419445514679, 0.3478531837463379, 0.3536941409111023, 0.3488308787345886, 0.34865933656692505, 0.3484128415584564, 0.3470380902290344, 0.343322217464447, 0.3473711311817169, 0.3516194224357605, 0.3439021408557892, 0.3455694913864136, 0.3465312421321869], "val_accuracy": [0.5096666812896729, 0.6653333306312561, 0.6809999942779541, 0.7039999961853027, 0.7276666760444641, 0.7453333139419556, 0.7599999904632568, 0.7726666927337646, 0.7910000085830688, 0.7926666736602783, 0.8090000152587891, 0.8113333582878113, 0.8206666707992554, 0.8180000185966492, 0.8259999752044678, 0.8320000171661377, 0.831333339214325, 0.8376666903495789, 0.8379999995231628, 0.8456666469573975, 0.846666693687439, 0.8479999899864197, 0.8493333458900452, 0.8476666808128357, 0.8523333072662354, 0.8556666374206543, 0.8519999980926514, 0.8576666712760925, 0.8583333492279053, 0.8573333621025085, 0.8600000143051147, 0.8573333621025085, 0.8656666874885559, 0.8629999756813049, 0.8656666874885559, 0.8676666617393494, 0.8629999756813049, 0.8713333606719971, 0.8673333525657654, 0.8663333058357239, 0.8713333606719971, 0.8690000176429749, 0.8740000128746033, 0.8700000047683716, 0.8723333477973938, 0.8713333606719971, 0.8766666650772095, 0.8743333220481873, 0.8763333559036255, 0.8773333430290222, 0.8786666393280029, 0.8776666522026062, 0.8786666393280029, 0.8786666393280029, 0.8813333511352539, 0.8803333044052124, 0.8809999823570251, 0.8830000162124634, 0.8803333044052124, 0.8843333125114441, 0.8849999904632568, 0.8859999775886536, 0.8846666812896729, 0.8816666603088379, 0.8863333463668823, 0.8836666941642761, 0.8790000081062317, 0.8856666684150696, 0.8889999985694885, 0.8880000114440918, 0.8836666941642761, 0.8880000114440918, 0.8880000114440918, 0.8866666555404663]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 6, 6, 3, 3, 6, 4, 7, 3, 0, 7, 5, 2, 6, 1, 5, 4, 2, 0, 4, 6, 5, 7, 0, 4, 6, 9], [0, 2, 5, 5, 1, 3, 5, 0, 2, 0, 3, 1, 3, 1, 0, 1, 4, 5, 2], [0, 43, 21, 64, 56], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8434285521507263, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.pow(grad, grad), tf.math.add(tf.math.multiply(tf.math.negative(alpha), tf.math.add(grad, grad)), tf.math.square(tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), beta)))), tf.math.divide_no_nan(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(tf.math.pow(tf.math.add(tf.math.negative(tf.math.pow(grad, alpha)), tf.math.divide_no_nan(tf.math.square(grad), alpha)), tf.math.add(tf.math.negative(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.divide_no_nan(alpha, grad), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))), grad)))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2935409545898438, 2.189979076385498, 1.7846064567565918, 1.3579074144363403, 1.0943810939788818, 0.9453122615814209, 0.8528301119804382, 0.8293017745018005, 0.7691728472709656, 0.759564220905304, 0.7046055197715759, 0.6901935935020447, 0.6725178956985474, 0.6382509469985962, 0.6337170600891113, 0.6139518022537231, 0.6068253517150879, 0.5681682825088501, 0.5789889693260193, 0.5640525817871094, 0.561381995677948, 0.5510695576667786, 0.5476226210594177, 0.5235729217529297, 0.5125909447669983, 0.4916156530380249, 0.4923866093158722, 0.482870876789093, 0.4736224412918091, 0.45343509316444397, 0.45501908659935, 0.44530361890792847, 0.4363861382007599, 0.423952579498291, 0.4213953912258148, 0.4130127429962158, 0.4052363634109497, 0.4011254906654358, 0.382192999124527, 0.39329811930656433, 0.3800172209739685, 0.37145915627479553, 0.3722793161869049], "accuracy": [0.12996962666511536, 0.3303394615650177, 0.42464667558670044, 0.540219247341156, 0.6215823292732239, 0.6530181169509888, 0.6900013089179993, 0.7046625018119812, 0.695813000202179, 0.7111346125602722, 0.724739134311676, 0.7382115721702576, 0.7456082701683044, 0.7576277852058411, 0.7563069462776184, 0.763967752456665, 0.761590301990509, 0.7794214487075806, 0.7804781198501587, 0.7841764688491821, 0.7839123010635376, 0.7895918488502502, 0.7924976944923401, 0.8018755912780762, 0.7971205711364746, 0.8057059645652771, 0.8098005652427673, 0.8152159452438354, 0.8216879963874817, 0.8247259259223938, 0.8280280232429504, 0.8308017253875732, 0.8337075710296631, 0.8356888294219971, 0.8327829837799072, 0.8413683772087097, 0.8404437899589539, 0.8492933511734009, 0.8511425256729126, 0.8462554216384888, 0.8518029451370239, 0.854708731174469, 0.8512746095657349], "val_loss": [2.2479445934295654, 2.0249364376068115, 1.1601481437683105, 0.8837204575538635, 0.7934545874595642, 0.7315201759338379, 0.7031195759773254, 0.6596135497093201, 0.656122624874115, 0.6142838001251221, 0.5819302797317505, 0.5657923817634583, 0.558829128742218, 0.5677043199539185, 0.5792484879493713, 0.5473235845565796, 0.5305326581001282, 0.5226584672927856, 0.5173999667167664, 0.5102621912956238, 0.5068874359130859, 0.504919707775116, 0.49878764152526855, 0.4857340455055237, 0.47876524925231934, 0.46619361639022827, 0.47388917207717896, 0.465076744556427, 0.45994865894317627, 0.4499084949493408, 0.4433090090751648, 0.44037926197052, 0.43738794326782227, 0.4461659789085388, 0.4402976930141449, 0.4308244585990906, 0.4434276521205902, 0.43558821082115173, 0.4338952898979187, 0.4410836100578308, 0.43542376160621643, 0.43266990780830383, 0.4319283068180084], "val_accuracy": [0.38733333349227905, 0.4403333365917206, 0.643666684627533, 0.6890000104904175, 0.7093333601951599, 0.7260000109672546, 0.7426666617393494, 0.75, 0.7620000243186951, 0.7593333125114441, 0.7743333578109741, 0.7773333191871643, 0.7893333435058594, 0.7886666655540466, 0.7746666669845581, 0.796999990940094, 0.8029999732971191, 0.8063333630561829, 0.8153333067893982, 0.8153333067893982, 0.8186666369438171, 0.8240000009536743, 0.8286666870117188, 0.8276666402816772, 0.8306666612625122, 0.8416666388511658, 0.8370000123977661, 0.8410000205039978, 0.8383333086967468, 0.8513333201408386, 0.8523333072662354, 0.8496666550636292, 0.8533333539962769, 0.8523333072662354, 0.8576666712760925, 0.8603333234786987, 0.8600000143051147, 0.8610000014305115, 0.8603333234786987, 0.8553333282470703, 0.8579999804496765, 0.859333336353302, 0.8579999804496765]}, "mapping_values": [1, 10, 5, 5, 3, 46, 27, 19, 5, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 27}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8268571496009827, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.555802583694458, 0.8276405930519104, 0.6690496802330017, 0.6122128367424011, 0.5706103444099426, 0.5293636322021484, 0.48869234323501587, 0.4874171316623688, 0.5081654191017151, 0.48391345143318176, 0.4787396788597107, 0.5195152759552002, 0.5140306353569031, 0.5411574244499207, 0.5465542078018188, 0.550567626953125, 0.5839999318122864, 0.6031538248062134, 0.6667781472206116, 0.6451683640480042], "accuracy": [0.4667811393737793, 0.7169462442398071, 0.7578919529914856, 0.7790252566337585, 0.7835160493850708, 0.804649293422699, 0.8182538747787476, 0.8185180425643921, 0.8203672170639038, 0.8290846943855286, 0.8197067975997925, 0.8272355198860168, 0.8222163319587708, 0.8183859586715698, 0.8272355198860168, 0.8150838613510132, 0.8029322624206543, 0.8078193068504333, 0.8144234418869019, 0.785629391670227], "val_loss": [0.9089705348014832, 0.6334260106086731, 0.5378642678260803, 0.543064296245575, 0.5070446133613586, 0.485706627368927, 0.5033818483352661, 0.5273638963699341, 0.5249053835868835, 0.517170250415802, 0.5061672925949097, 0.5504165291786194, 0.48951399326324463, 0.48365646600723267, 0.5159440636634827, 0.5108237266540527, 0.620259702205658, 0.750598132610321, 0.570713996887207, 0.5652194023132324], "val_accuracy": [0.6970000267028809, 0.7699999809265137, 0.7946666479110718, 0.8036666512489319, 0.8090000152587891, 0.8259999752044678, 0.8266666531562805, 0.8230000138282776, 0.8320000171661377, 0.8186666369438171, 0.8316666483879089, 0.8276666402816772, 0.8339999914169312, 0.8293333053588867, 0.8389999866485596, 0.8236666917800903, 0.8246666789054871, 0.8299999833106995, 0.812666654586792, 0.8296666741371155]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 0], [23, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 0, 2, 3], [16, 16], [0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 8, 7], [0, 3, 3, 5], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], [2, 3, 3, 6, 8, 1, 4, 1, 4, 1, 8], [4, 2, 1, 4, 6, 1, 5, 6, 3, 3], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 2, 7, 4, 3, 1, 16, 8, 8, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(beta, tf.math.pow(alpha, grad))), grad)), alpha), tf.math.subtract(grad, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 1, 7, 8, 4], [0, 1, 0, 2, 2, 2, 3], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 2, 4, 1, 4, 2, 8, 2], [0, 0, 4, 3, 0, 0, 3, 1, 4, 0, 0], [16, 99, 51, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 2, 10, 6, 4, 2, 1, 0, 1, 1, 23, 12, 11, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(tf.math.sqrt(grad), tf.math.pow(grad, grad)), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(grad, tf.math.pow(sigma, tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma))), tf.math.sqrt(tf.math.add(alpha, grad)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10447761416435242, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 4, 0, 2, 0], [0, 1, 0, 2, 3, 3, 0], [39, 39, 41], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [3, 2, 5, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 3, 2, 1, 1, 1, 2, 1, 1, 0, 11, 6, 5, 4], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.pow(tf.math.negative(tf.math.add(grad, tf.math.negative(grad))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [21514400.0, 2.314093828201294, 2.305386781692505, 2.3033292293548584, 2.3029632568359375, 2.3029139041900635, 2.30301833152771, 2.3028955459594727, 2.302983045578003, 2.3030242919921875, 2.3028852939605713, 2.3029136657714844, 2.302940607070923, 2.302875518798828], "accuracy": [0.09206181764602661, 0.09893012791872025, 0.09153348207473755, 0.09100515395402908, 0.09655263274908066, 0.09708096832036972, 0.09047681838274002, 0.09576013684272766, 0.09932637959718704, 0.09259014576673508, 0.09285431355237961, 0.09747721254825592, 0.09919429570436478, 0.0948355570435524], "val_loss": [2.3216283321380615, 2.306953191757202, 2.303616762161255, 2.3028624057769775, 2.3026204109191895, 2.3026273250579834, 2.302604913711548, 2.3025925159454346, 2.3025741577148438, 2.3026201725006104, 2.302699327468872, 2.3027005195617676, 2.302739143371582, 2.302609443664551], "val_accuracy": [0.09666666388511658, 0.10000000149011612, 0.09799999743700027, 0.09799999743700027, 0.10100000351667404, 0.10133333504199982, 0.10133333504199982, 0.09799999743700027, 0.10366666316986084, 0.0976666659116745, 0.0976666659116745, 0.10100000351667404, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 9, 3, 1, 3, 7, 4, 0, 8, 8, 3, 8, 0, 4, 7, 3, 7, 1, 1, 3, 9, 6, 8, 8, 5, 6], [0, 0, 1, 0, 2, 2, 1, 1, 0, 2, 2, 3, 0, 0, 2, 1], [39, 39, 46, 33, 34, 61, 77], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 6, 5, 3, 5, 5], [0, 5, 4, 1], [0], [0, 1], [0], [1], [0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [1, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [2, 1, 4, 4, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0, 10, 5, 5, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(alpha, grad), grad), tf.math.sqrt(sigma)))", "other_info": {"loss": [92047288.0, 97434214400.0, 5678436974592.0, 99366333317120.0, 877415781892096.0, 5063753020211200.0], "accuracy": [0.09853387624025345, 0.10276053100824356, 0.1010434553027153, 0.10091137140989304, 0.09919429570436478, 0.10421344637870789], "val_loss": [1652562432.0, 582345490432.0, 19639268540416.0, 244659976667136.0, 1750507605458944.0, 8790278710231040.0], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]