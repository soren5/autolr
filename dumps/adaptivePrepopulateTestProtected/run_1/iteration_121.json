[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 8], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8751428723335266, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294051170349121, 2.1892027854919434, 1.7701845169067383, 1.3438360691070557, 1.0793458223342896, 0.9008540511131287, 0.8374690413475037, 0.8075473308563232, 0.7543761134147644, 0.7411683797836304, 0.6888377070426941, 0.6630193591117859, 0.6398753523826599, 0.6157380938529968, 0.6014804244041443, 0.5837690234184265, 0.5857588052749634, 0.5605717897415161, 0.5461302399635315, 0.5386200547218323, 0.5340635776519775, 0.5136256217956543, 0.5142084360122681, 0.48485833406448364, 0.4749372899532318, 0.4631135165691376, 0.4639066159725189, 0.4455622732639313, 0.4462272524833679, 0.4204149842262268, 0.4138428866863251, 0.40202033519744873, 0.39729589223861694, 0.39556631445884705, 0.38879314064979553, 0.3734106421470642, 0.3645913600921631, 0.3691403269767761, 0.34871652722358704, 0.34253445267677307, 0.3440561592578888, 0.33728429675102234, 0.33740201592445374, 0.3381863832473755, 0.3235527276992798, 0.3162679076194763, 0.3239808678627014, 0.31138890981674194, 0.3078884780406952, 0.29627561569213867, 0.29811349511146545, 0.30749231576919556, 0.29997965693473816, 0.2844711244106293, 0.29806214570999146, 0.2886669337749481, 0.29412931203842163, 0.291616827249527, 0.2779625356197357, 0.26168301701545715, 0.2714012563228607, 0.2652639150619507, 0.2591556906700134, 0.2768031060695648], "accuracy": [0.13115836679935455, 0.3457931578159332, 0.4415532946586609, 0.5480121374130249, 0.6310923099517822, 0.670320987701416, 0.6911900639533997, 0.7004358768463135, 0.7043983340263367, 0.7191916704177856, 0.7349095344543457, 0.7445515990257263, 0.7536653280258179, 0.7637035846710205, 0.7711002230644226, 0.7728173136711121, 0.7677981853485107, 0.7887993454933167, 0.7913089394569397, 0.7948752045631409, 0.7959318161010742, 0.8057059645652771, 0.8049134612083435, 0.81112140417099, 0.8189142942428589, 0.8236692547798157, 0.8214238286018372, 0.8294808864593506, 0.828820526599884, 0.8429533839225769, 0.8408400416374207, 0.8428213000297546, 0.8495575189590454, 0.8482366800308228, 0.8527275323867798, 0.8631620407104492, 0.8621054291725159, 0.8573504090309143, 0.8689737319946289, 0.8665962219238281, 0.871879518032074, 0.8716153502464294, 0.8673887252807617, 0.8691058158874512, 0.8753136992454529, 0.8750495314598083, 0.8786157965660095, 0.8778232932090759, 0.8784837126731873, 0.8874653577804565, 0.8819178342819214, 0.8813894987106323, 0.8868049383163452, 0.8911636471748352, 0.8816536664962769, 0.8903711438179016, 0.8893144726753235, 0.8858803510665894, 0.8907673954963684, 0.8939374089241028, 0.8931449055671692, 0.8961827754974365, 0.8985602855682373, 0.8914278149604797], "val_loss": [2.246641159057617, 2.02435040473938, 1.1492747068405151, 0.9069585800170898, 0.7850789427757263, 0.7220563888549805, 0.6829090118408203, 0.6658865809440613, 0.6579251289367676, 0.6288614869117737, 0.5861751437187195, 0.5646116137504578, 0.5385625958442688, 0.5289515852928162, 0.5473304986953735, 0.5214990973472595, 0.5169944763183594, 0.5084326267242432, 0.518833339214325, 0.4919402003288269, 0.4795236885547638, 0.480903685092926, 0.48352885246276855, 0.46342357993125916, 0.45228374004364014, 0.4564116299152374, 0.4419301450252533, 0.43289753794670105, 0.4456832706928253, 0.44045376777648926, 0.4321429133415222, 0.42448270320892334, 0.4251042604446411, 0.4183697998523712, 0.4260680377483368, 0.4151706397533417, 0.41154181957244873, 0.41831672191619873, 0.4163031280040741, 0.4186199903488159, 0.4143967628479004, 0.4099888205528259, 0.412241131067276, 0.41222089529037476, 0.4138379693031311, 0.41473525762557983, 0.42275381088256836, 0.41873815655708313, 0.4209164083003998, 0.4112814962863922, 0.4097895622253418, 0.41004830598831177, 0.4331943690776825, 0.43013668060302734, 0.42861923575401306, 0.4793979525566101, 0.4168231189250946, 0.43149515986442566, 0.47631487250328064, 0.4928065538406372, 0.45951253175735474, 0.45632731914520264, 0.4652349352836609, 0.4541664123535156], "val_accuracy": [0.40799999237060547, 0.4556666612625122, 0.6443333625793457, 0.684333324432373, 0.715666651725769, 0.7213333249092102, 0.7366666793823242, 0.7453333139419556, 0.7540000081062317, 0.7580000162124634, 0.765333354473114, 0.7716666460037231, 0.7886666655540466, 0.7893333435058594, 0.7940000295639038, 0.7906666398048401, 0.7963333129882812, 0.812666654586792, 0.8116666674613953, 0.812333345413208, 0.8140000104904175, 0.8190000057220459, 0.8309999704360962, 0.8376666903495789, 0.8363333344459534, 0.8396666646003723, 0.8463333249092102, 0.8420000076293945, 0.8453333377838135, 0.8506666421890259, 0.847000002861023, 0.8523333072662354, 0.8529999852180481, 0.8556666374206543, 0.8553333282470703, 0.8556666374206543, 0.8579999804496765, 0.859666645526886, 0.8643333315849304, 0.8646666407585144, 0.8663333058357239, 0.8633333444595337, 0.8650000095367432, 0.862333357334137, 0.8679999709129333, 0.8709999918937683, 0.8690000176429749, 0.8673333525657654, 0.871666669845581, 0.8700000047683716, 0.8736666440963745, 0.8743333220481873, 0.8736666440963745, 0.8733333349227905, 0.8726666569709778, 0.8769999742507935, 0.8769999742507935, 0.8696666955947876, 0.8776666522026062, 0.875, 0.8743333220481873, 0.8743333220481873, 0.8733333349227905, 0.8766666650772095]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8568571209907532, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223125696182251, 1.8681122064590454, 1.397009253501892, 1.0837026834487915, 0.9381088614463806, 0.8417477011680603, 0.7775410413742065, 0.7270339131355286, 0.6935049891471863, 0.6646819710731506, 0.6403411030769348, 0.624380350112915, 0.6020059585571289, 0.5822940468788147, 0.5717157125473022, 0.5542957186698914, 0.539095401763916, 0.5270633697509766, 0.5128964185714722, 0.5036349296569824, 0.49378132820129395, 0.49315446615219116, 0.4672248959541321, 0.47122758626937866, 0.46062034368515015, 0.4564305245876312, 0.4453878402709961, 0.4340042769908905, 0.42485493421554565, 0.4209461808204651, 0.4085436463356018, 0.41171714663505554, 0.40196093916893005, 0.4019361138343811, 0.39626532793045044, 0.3908884823322296, 0.3918868899345398, 0.38017895817756653, 0.36984431743621826, 0.35587435960769653, 0.361753910779953, 0.36041373014450073, 0.34207314252853394, 0.3385865092277527, 0.33579927682876587, 0.3335045874118805, 0.32855507731437683, 0.32492098212242126, 0.314228355884552, 0.3164353668689728, 0.3136110305786133, 0.30892235040664673, 0.29989418387413025, 0.29542383551597595, 0.3060893714427948, 0.28571611642837524, 0.2863195240497589, 0.28547438979148865, 0.27999556064605713, 0.274671733379364, 0.27336999773979187, 0.26753371953964233, 0.2663986384868622], "accuracy": [0.26878878474235535, 0.4904239773750305, 0.5616167187690735, 0.6244881749153137, 0.6639809608459473, 0.6999075412750244, 0.7181349992752075, 0.737022876739502, 0.7475894689559937, 0.7541936039924622, 0.7643640041351318, 0.7736098170280457, 0.7812706232070923, 0.7891955971717834, 0.7957997918128967, 0.8035926818847656, 0.8053097128868103, 0.8083476424217224, 0.8128384351730347, 0.8145555257797241, 0.8255184292793274, 0.824329674243927, 0.8355567455291748, 0.8304054737091064, 0.8356888294219971, 0.8370096683502197, 0.8385946154594421, 0.8459912538528442, 0.8490291833877563, 0.8531237840652466, 0.8527275323867798, 0.8539162874221802, 0.8589354157447815, 0.8597279191017151, 0.859199583530426, 0.8603883385658264, 0.8594637513160706, 0.8706908226013184, 0.8663320541381836, 0.8746532797813416, 0.8673887252807617, 0.8734645247459412, 0.8767666220664978, 0.8771628737449646, 0.8812574148178101, 0.8815215826034546, 0.8813894987106323, 0.8823140859603882, 0.8902390599250793, 0.887201189994812, 0.8883898854255676, 0.8865407705307007, 0.8926165699958801, 0.8918240666389465, 0.8869370222091675, 0.8965790271759033, 0.895918607711792, 0.8971073627471924, 0.9006736278533936, 0.8993527889251709, 0.9015982151031494, 0.9043719172477722, 0.9078060984611511], "val_loss": [2.0431222915649414, 1.5212724208831787, 1.0521457195281982, 0.8423295021057129, 0.7584682703018188, 0.6950696706771851, 0.6577543020248413, 0.6162450313568115, 0.5869612097740173, 0.5632410049438477, 0.5485411286354065, 0.528697669506073, 0.5173999667167664, 0.5006420016288757, 0.4874453842639923, 0.4809107184410095, 0.465921014547348, 0.4595896899700165, 0.4494994580745697, 0.44367438554763794, 0.43344753980636597, 0.42538565397262573, 0.4269658923149109, 0.41467538475990295, 0.40881332755088806, 0.40437570214271545, 0.40440237522125244, 0.3967745900154114, 0.3901832699775696, 0.38709235191345215, 0.38579273223876953, 0.3778750002384186, 0.3841356635093689, 0.3716808557510376, 0.37822699546813965, 0.3679443895816803, 0.37115636467933655, 0.3677530586719513, 0.36122825741767883, 0.36148086190223694, 0.35493984818458557, 0.3575536012649536, 0.35241633653640747, 0.35259103775024414, 0.3457452654838562, 0.3467409610748291, 0.3436031937599182, 0.34579646587371826, 0.35094180703163147, 0.3387077748775482, 0.33775606751441956, 0.3337039053440094, 0.33504748344421387, 0.34092476963996887, 0.33483073115348816, 0.330476313829422, 0.337141752243042, 0.3258926272392273, 0.3400544822216034, 0.3303459584712982, 0.32960206270217896, 0.32553040981292725, 0.33613118529319763], "val_accuracy": [0.5370000004768372, 0.6579999923706055, 0.6826666593551636, 0.7113333344459534, 0.7243333458900452, 0.7580000162124634, 0.7609999775886536, 0.7730000019073486, 0.7876666784286499, 0.7956666946411133, 0.8033333420753479, 0.8140000104904175, 0.812666654586792, 0.8176666498184204, 0.8273333311080933, 0.8263333439826965, 0.8289999961853027, 0.8403333425521851, 0.8376666903495789, 0.8433333039283752, 0.8486666679382324, 0.8526666760444641, 0.8519999980926514, 0.8536666631698608, 0.8600000143051147, 0.8573333621025085, 0.8539999723434448, 0.8616666793823242, 0.8636666536331177, 0.8643333315849304, 0.8629999756813049, 0.8690000176429749, 0.8619999885559082, 0.8713333606719971, 0.859333336353302, 0.8690000176429749, 0.8696666955947876, 0.8683333396911621, 0.871999979019165, 0.8700000047683716, 0.8743333220481873, 0.8733333349227905, 0.8759999871253967, 0.8759999871253967, 0.8769999742507935, 0.8769999742507935, 0.878333330154419, 0.8759999871253967, 0.8773333430290222, 0.8766666650772095, 0.8790000081062317, 0.8803333044052124, 0.8790000081062317, 0.8756666779518127, 0.8840000033378601, 0.8803333044052124, 0.8756666779518127, 0.8849999904632568, 0.8803333044052124, 0.8816666603088379, 0.8820000290870667, 0.8843333125114441, 0.8793333172798157]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 4], [0, 5], [0], [1], [0], [2], [0]], "fitness": -0.8168571591377258, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5593396425247192, 0.8545027375221252, 0.6766928434371948, 0.6014354228973389, 0.5458101630210876, 0.5272004008293152, 0.4876154363155365, 0.48716384172439575, 0.4904656708240509, 0.4807315170764923, 0.47623130679130554, 0.45164254307746887, 0.4479348957538605, 0.43489399552345276, 0.45089778304100037], "accuracy": [0.47404569387435913, 0.7132478952407837, 0.7510236501693726, 0.7713643908500671, 0.7898560166358948, 0.8062343001365662, 0.8193105459213257, 0.8216879963874817, 0.8203672170639038, 0.8289526104927063, 0.82683926820755, 0.8350284099578857, 0.8356888294219971, 0.8437458872795105, 0.8425571322441101], "val_loss": [0.8651477694511414, 0.6303403377532959, 0.5795415639877319, 0.5226892232894897, 0.49573788046836853, 0.4853243827819824, 0.4841720759868622, 0.4649187922477722, 0.49107393622398376, 0.5018462538719177, 0.478456050157547, 0.4899460971355438, 0.5124045610427856, 0.5016926527023315, 0.4845511019229889], "val_accuracy": [0.6916666626930237, 0.7586666941642761, 0.7786666750907898, 0.8046666383743286, 0.8176666498184204, 0.8286666870117188, 0.8386666774749756, 0.8383333086967468, 0.8336666822433472, 0.843999981880188, 0.8379999995231628, 0.8386666774749756, 0.8360000252723694, 0.8416666388511658, 0.8399999737739563]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [6, 2, 3, 0, 3, 0], [2, 1, 0, 2, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [2, 2, 8, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [18], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 9, 6, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 0, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 6, 3, 3, 1, 2, 1, 1, 1, 7, 4, 3, 4], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(grad, tf.math.negative(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.304110527038574, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [2, 2, 3, 0, 3, 9], [0, 1, 0, 2], [39, 39, 86], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 1], [0, 1, 0, 3, 4], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 9, 6, 8, 1, 4, 1, 4, 2, 8, 9], [4, 0, 0, 3, 0, 4, 4, 1, 2, 0], [16, 70, 96, 96, 70, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 12, 7, 5, 2, 1, 0, 1, 1, 19, 12, 7, 5], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), grad), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 2, 3, 0, 3, 9, 3, 3, 9, 0, 8, 7], [0, 0, 0, 2, 0], [39, 39, 81, 83, 72, 11], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 6, 3, 0, 3, 5], [0, 2, 0, 3], [16, 84], [0, 1, 1], [6], [4, 0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [6, 3, 3, 6, 0, 1, 4, 1, 4, 2, 8, 2, 6, 4, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 5, 5], [16, 99, 96, 99, 61, 1, 14]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 12, 5, 6, 2, 1, 1, 1, 3, 1, 2, 1, 27, 15, 12, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.sqrt(tf.math.add(grad, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.math.add(tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad)), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [58, 48], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 8, 2, 6, 6, 1, 4, 4, 4, 6, 4], [0, 0, 0, 3, 0, 0, 3, 4, 2, 2], [16, 89, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 5, 3, 2, 1, 2, 1, 1, 1, 4, 2, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3035387992858887, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]