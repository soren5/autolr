[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8579999804496765, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223384141921997, 1.865218997001648, 1.383137822151184, 1.097876787185669, 0.9466552734375, 0.8442398309707642, 0.7765392065048218, 0.7404544949531555, 0.7103908061981201, 0.6695881485939026, 0.6526626348495483, 0.6238234639167786, 0.6148486137390137, 0.5886510014533997, 0.5652545094490051, 0.5584450960159302, 0.5393416881561279, 0.5288118720054626, 0.5190122127532959, 0.5099548697471619, 0.5021417140960693, 0.4920715093612671, 0.4774995744228363, 0.47143882513046265, 0.4624898433685303, 0.4493628144264221, 0.44442349672317505, 0.4359867572784424, 0.4222036302089691, 0.42695146799087524, 0.4109496474266052, 0.41037124395370483, 0.4020346403121948, 0.4014926850795746, 0.3883785009384155, 0.38588660955429077, 0.38703054189682007, 0.3772253096103668, 0.3717743456363678, 0.36069437861442566, 0.35629281401634216, 0.34861427545547485, 0.3457288444042206, 0.33465540409088135, 0.33702898025512695, 0.34374770522117615, 0.33000674843788147, 0.32536232471466064, 0.3202979862689972, 0.32047420740127563, 0.3160766363143921, 0.31103450059890747, 0.30435365438461304, 0.306386262178421, 0.2980199456214905, 0.2953193485736847, 0.28643858432769775, 0.28382909297943115, 0.28274205327033997, 0.27292320132255554, 0.2741575837135315, 0.2743206024169922, 0.2650087773799896], "accuracy": [0.26443007588386536, 0.49148064851760864, 0.5670320987701416, 0.6145819425582886, 0.6572447419166565, 0.6946242451667786, 0.7161537408828735, 0.7312111854553223, 0.7424382567405701, 0.7524765729904175, 0.7607977986335754, 0.7693831920623779, 0.7769119143486023, 0.7853652238845825, 0.7891955971717834, 0.7947431206703186, 0.8067626357078552, 0.8061022162437439, 0.8109893202781677, 0.8166688680648804, 0.817461371421814, 0.8204993009567261, 0.824329674243927, 0.8310658931732178, 0.8323867321014404, 0.8356888294219971, 0.8381983637809753, 0.8387266993522644, 0.8425571322441101, 0.8403117060661316, 0.8529917001724243, 0.850350022315979, 0.8518029451370239, 0.8512746095657349, 0.8601241707801819, 0.8595958352088928, 0.8577466607093811, 0.8621054291725159, 0.8631620407104492, 0.8676528930664062, 0.8708229064941406, 0.8701624870300293, 0.8750495314598083, 0.8790120482444763, 0.8780874609947205, 0.8714832663536072, 0.8778232932090759, 0.8799365758895874, 0.8841632604598999, 0.8820499181747437, 0.8854840993881226, 0.8849557638168335, 0.889578640460968, 0.889050304889679, 0.8873332738876343, 0.8911636471748352, 0.8928807377815247, 0.8924844861030579, 0.89552241563797, 0.8976356983184814, 0.8960506916046143, 0.9008057117462158, 0.9035794734954834], "val_loss": [2.038892984390259, 1.508662462234497, 1.0442534685134888, 0.8381657004356384, 0.7569815516471863, 0.694716215133667, 0.648692786693573, 0.6088888049125671, 0.5836293697357178, 0.5567365884780884, 0.5371583700180054, 0.5233535766601562, 0.5079843997955322, 0.4906623959541321, 0.4774928092956543, 0.46799415349960327, 0.455028772354126, 0.45312121510505676, 0.4414798617362976, 0.435895174741745, 0.42658114433288574, 0.418302446603775, 0.4162311553955078, 0.41528841853141785, 0.40334081649780273, 0.4004344046115875, 0.39081037044525146, 0.38573962450027466, 0.3880121111869812, 0.3820912539958954, 0.37828922271728516, 0.37439045310020447, 0.37383216619491577, 0.37511420249938965, 0.36956533789634705, 0.36717167496681213, 0.358478307723999, 0.3626508116722107, 0.3613590896129608, 0.3558593690395355, 0.3546631336212158, 0.3499961197376251, 0.3489059507846832, 0.3461216986179352, 0.3445960283279419, 0.34609541296958923, 0.34353500604629517, 0.3409307897090912, 0.3388732969760895, 0.338539719581604, 0.3358210623264313, 0.34240925312042236, 0.33373579382896423, 0.33094117045402527, 0.3288966119289398, 0.32966235280036926, 0.32718968391418457, 0.32530108094215393, 0.32614317536354065, 0.32456907629966736, 0.3266931474208832, 0.3197391927242279, 0.3232662081718445], "val_accuracy": [0.5136666893959045, 0.6513333320617676, 0.6796666383743286, 0.7120000123977661, 0.7233333587646484, 0.7559999823570251, 0.7536666393280029, 0.7833333611488342, 0.7893333435058594, 0.7986666560173035, 0.812666654586792, 0.812333345413208, 0.8183333277702332, 0.8233333230018616, 0.8320000171661377, 0.8383333086967468, 0.8443333506584167, 0.8373333215713501, 0.8433333039283752, 0.8513333201408386, 0.8513333201408386, 0.8560000061988831, 0.8569999933242798, 0.8493333458900452, 0.862333357334137, 0.8610000014305115, 0.8643333315849304, 0.8673333525657654, 0.8643333315849304, 0.8663333058357239, 0.8650000095367432, 0.8676666617393494, 0.8700000047683716, 0.8636666536331177, 0.8709999918937683, 0.8683333396911621, 0.8743333220481873, 0.8706666827201843, 0.871666669845581, 0.8759999871253967, 0.875, 0.8766666650772095, 0.8766666650772095, 0.8799999952316284, 0.8773333430290222, 0.8786666393280029, 0.8786666393280029, 0.8790000081062317, 0.8806666731834412, 0.8820000290870667, 0.8823333382606506, 0.878000020980835, 0.8826666474342346, 0.8823333382606506, 0.8826666474342346, 0.887333333492279, 0.8846666812896729, 0.8883333206176758, 0.8840000033378601, 0.8859999775886536, 0.8823333382606506, 0.8859999775886536, 0.8846666812896729]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 4, 7, 9], [0, 5, 0], [0, 98, 20], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.852571427822113, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293473243713379, 2.1925387382507324, 1.7789638042449951, 1.3594475984573364, 1.075842261314392, 0.9215825796127319, 0.855445146560669, 0.8227097392082214, 0.7836653590202332, 0.7537243366241455, 0.7151340246200562, 0.6903336644172668, 0.6575822234153748, 0.6395668387413025, 0.6158851385116577, 0.5925413966178894, 0.583328366279602, 0.5697462558746338, 0.5700026154518127, 0.5548697113990784, 0.5390685796737671, 0.5232945680618286, 0.5198957920074463, 0.4907619059085846, 0.4914884567260742, 0.47712090611457825, 0.46125584840774536, 0.47146105766296387, 0.4517907500267029, 0.4305875599384308, 0.4324878752231598, 0.4192020893096924, 0.40774717926979065, 0.3982345163822174, 0.40456315875053406, 0.3746891915798187, 0.38085728883743286, 0.37820619344711304, 0.37275415658950806, 0.36414259672164917, 0.3591149151325226, 0.3410573899745941, 0.3433123230934143, 0.3417738378047943, 0.340067595243454, 0.3333817422389984, 0.3393419682979584, 0.32889917492866516], "accuracy": [0.13274335861206055, 0.3275656998157501, 0.44564786553382874, 0.5390304923057556, 0.6345264911651611, 0.6621318459510803, 0.687491774559021, 0.7024171352386475, 0.693831741809845, 0.7047945857048035, 0.7301545143127441, 0.7271166443824768, 0.7461365461349487, 0.7598732113838196, 0.7648923397064209, 0.7728173136711121, 0.77677983045578, 0.7827235460281372, 0.7833839654922485, 0.789988100528717, 0.7917051911354065, 0.8004226684570312, 0.8012151718139648, 0.8113855719566345, 0.8078193068504333, 0.8197067975997925, 0.8201030492782593, 0.8191784620285034, 0.8249900937080383, 0.8293488025665283, 0.8350284099578857, 0.8383304476737976, 0.8421608805656433, 0.8455950617790222, 0.8428213000297546, 0.8536521196365356, 0.8549728989601135, 0.8536521196365356, 0.8544445633888245, 0.8552370667457581, 0.8574824929237366, 0.8665962219238281, 0.8628978729248047, 0.8683133125305176, 0.8632941246032715, 0.8650112152099609, 0.8651432991027832, 0.8687095642089844], "val_loss": [2.2480263710021973, 2.0257039070129395, 1.1584358215332031, 0.8564679622650146, 0.7409155368804932, 0.7092121839523315, 0.6550103425979614, 0.6351100206375122, 0.6315054297447205, 0.6084901690483093, 0.5692667961120605, 0.5539610981941223, 0.5511227250099182, 0.5165700912475586, 0.5183711051940918, 0.5097532272338867, 0.508310854434967, 0.4933686852455139, 0.48368555307388306, 0.47921955585479736, 0.4713909924030304, 0.48459193110466003, 0.45856183767318726, 0.45070791244506836, 0.4456281065940857, 0.4356432259082794, 0.43552926182746887, 0.43249621987342834, 0.43155863881111145, 0.4241351783275604, 0.4175776243209839, 0.41746190190315247, 0.41827043890953064, 0.41134506464004517, 0.4050264060497284, 0.4066508412361145, 0.40484827756881714, 0.40567705035209656, 0.40247681736946106, 0.39078807830810547, 0.39267003536224365, 0.41435733437538147, 0.3954859972000122, 0.39083147048950195, 0.39627164602279663, 0.4167969822883606, 0.4279152452945709, 0.4210939109325409], "val_accuracy": [0.4073333442211151, 0.45500001311302185, 0.6380000114440918, 0.6936666369438171, 0.7303333282470703, 0.7170000076293945, 0.7459999918937683, 0.7459999918937683, 0.7459999918937683, 0.7649999856948853, 0.7736666798591614, 0.7829999923706055, 0.7820000052452087, 0.7979999780654907, 0.8003333210945129, 0.8023333549499512, 0.8059999942779541, 0.8133333325386047, 0.8193333148956299, 0.8266666531562805, 0.8213333487510681, 0.8236666917800903, 0.8276666402816772, 0.8299999833106995, 0.8396666646003723, 0.8393333554267883, 0.8349999785423279, 0.8413333296775818, 0.8410000205039978, 0.8416666388511658, 0.8443333506584167, 0.8479999899864197, 0.8536666631698608, 0.8503333330154419, 0.8539999723434448, 0.8553333282470703, 0.8600000143051147, 0.8573333621025085, 0.8553333282470703, 0.8610000014305115, 0.8633333444595337, 0.8653333187103271, 0.8666666746139526, 0.8616666793823242, 0.8659999966621399, 0.8606666922569275, 0.8646666407585144, 0.862666666507721]}, "mapping_values": [1, 10, 5, 5, 3, 8, 5, 3, 3, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 1, 1], [0, 7, 2], [0, 0, 5], [0, 19], [1], [0], [2], [0]], "fitness": -0.828000009059906, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6180497407913208, 0.982343852519989, 0.7906806468963623, 0.7678276300430298, 0.6756331324577332, 0.6282671093940735, 0.6464537382125854, 0.6342931389808655, 0.585608720779419, 0.5633651614189148, 0.5529943108558655, 0.5521484017372131, 0.5186455845832825, 0.5170852541923523, 0.5445984601974487, 0.547012448310852, 0.5352535843849182, 0.5476372241973877, 0.5576756596565247, 0.5474731922149658, 0.5978394150733948, 0.6148889660835266, 0.6312420964241028, 0.6023704409599304, 0.6257883906364441, 0.6393797397613525], "accuracy": [0.4765552878379822, 0.6725663542747498, 0.7174745798110962, 0.7339849472045898, 0.755118191242218, 0.7626469135284424, 0.7605336308479309, 0.7786290049552917, 0.7895918488502502, 0.7965922355651855, 0.7967243194580078, 0.7971205711364746, 0.8125742673873901, 0.8108572363853455, 0.8150838613510132, 0.8149517774581909, 0.8124422430992126, 0.8178576231002808, 0.809140145778656, 0.8095363974571228, 0.8084797263145447, 0.8150838613510132, 0.8020076751708984, 0.8001585006713867, 0.8096684813499451, 0.7841764688491821], "val_loss": [1.185764193534851, 0.696683406829834, 0.6551041603088379, 0.5789961814880371, 0.5876937508583069, 0.5845177173614502, 0.5970050692558289, 0.5476185083389282, 0.5423915982246399, 0.5385175943374634, 0.5393834710121155, 0.5688381195068359, 0.5358433723449707, 0.542375385761261, 0.5908644199371338, 0.5302223563194275, 0.5461083054542542, 0.5928747057914734, 0.5886678695678711, 0.5627548694610596, 0.6546468138694763, 0.6171291470527649, 0.6074432730674744, 0.6375740766525269, 0.6065744161605835, 0.5728579759597778], "val_accuracy": [0.5913333296775818, 0.749666690826416, 0.7583333253860474, 0.7856666445732117, 0.7786666750907898, 0.7806666493415833, 0.7983333468437195, 0.8050000071525574, 0.8043333292007446, 0.8190000057220459, 0.8009999990463257, 0.815666675567627, 0.8193333148956299, 0.8236666917800903, 0.8220000267028809, 0.8090000152587891, 0.8216666579246521, 0.8259999752044678, 0.8306666612625122, 0.812333345413208, 0.8363333344459534, 0.8216666579246521, 0.812666654586792, 0.8113333582878113, 0.8226666450500488, 0.8103333115577698]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 6, 3, 3, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 2, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 4, 3, 4, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 4, 3, 4, 8, 1, 4, 1, 6, 2, 6], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 7], [16, 99, 87, 99, 61, 1]], "fitness": -0.11228571087121964, "mapping_values": [1, 9, 5, 4, 1, 6, 3, 3, 2, 2, 1, 1, 1, 22, 11, 11, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.math.divide_no_nan(alpha, tf.math.add(tf.math.divide_no_nan(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad))))", "other_info": {"loss": [2.308030843734741, 2.305845022201538, 2.304706573486328, 2.3038697242736816, 2.3032641410827637, 2.3031373023986816, 2.3028643131256104, 2.302748680114746, 2.302701711654663, 2.3026461601257324, 2.3026206493377686], "accuracy": [0.0886276587843895, 0.08691058307886124, 0.08717474341392517, 0.09192973375320435, 0.09391097724437714, 0.09787346422672272, 0.10091137140989304, 0.09694888442754745, 0.10038304328918457, 0.09906221181154251, 0.10130762308835983], "val_loss": [2.305908679962158, 2.304391384124756, 2.303525686264038, 2.303046226501465, 2.3028104305267334, 2.3026907444000244, 2.302633047103882, 2.3026039600372314, 2.302589178085327, 2.302584409713745, 2.302583932876587], "val_accuracy": [0.07266666740179062, 0.07066666334867477, 0.08833333104848862, 0.10199999809265137, 0.11566666513681412, 0.11933333426713943, 0.11100000143051147, 0.10533333569765091, 0.10266666859388351, 0.10199999809265137, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 2, 9, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 62, 72]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 1, 0, 1, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 3, 3, 0, 3, 5, 8], [0, 2, 0, 3], [16, 16], [0, 1, 1], [1], [0, 2], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [6, 2, 1, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 3, 3, 1, 2, 1], [16, 99, 96, 99, 61, 54]], "fitness": -0.08399999886751175, "mapping_values": [1, 9, 5, 4, 2, 11, 7, 4, 2, 3, 1, 2, 1, 21, 11, 10, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)), tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(sigma, sigma), alpha)), tf.math.sqrt(beta))), alpha)", "other_info": {"loss": [3.0925521946828863e+28, 3.525746678072726e+28, 3.6236297654647308e+28, 3.542237181830907e+28, 3.5899725150680222e+28, 3.581428101272242e+28], "accuracy": [0.08902391046285629, 0.09800554811954498, 0.09100515395402908, 0.09655263274908066, 0.09536388516426086, 0.09298639744520187], "val_loss": [2.294177347291061e+28, 2.2942977676363742e+28, 2.2943031983578295e+28, 2.294315240392361e+28, 2.2943310603200785e+28, 2.2943261018352715e+28], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 11, 69], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 4, 8, 1, 4, 1, 4, 2, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 15, 61, 1]], "fitness": -0.03285714238882065, "mapping_values": [1, 9, 5, 4, 3, 9, 5, 4, 2, 2, 1, 1, 1, 18, 9, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), beta)", "other_info": {"loss": [2.749978715790741e+21, 4.675124285728482e+21, 5.121640426183571e+21, 5.252113085088215e+21, 5.660523706146169e+21, 5.798256730600087e+21, 5.898505169455494e+21, 6.253407960390705e+21], "accuracy": [0.08757099509239197, 0.08928807079792023, 0.08770307898521423, 0.08440100401639938, 0.09245806187391281, 0.08281600475311279, 0.09642054885625839, 0.08321225643157959], "val_loss": [2.990785343441311e+21, 3.405381940062435e+21, 3.6236961837990334e+21, 3.7880415414010375e+21, 3.937847872031006e+21, 4.079183776186821e+21, 4.2165151358489733e+21, 4.3510753743654093e+21], "val_accuracy": [0.030666666105389595, 0.03166666626930237, 0.03200000151991844, 0.03200000151991844, 0.03133333474397659, 0.03166666626930237, 0.03166666626930237, 0.03200000151991844]}}]