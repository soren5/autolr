[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223330497741699, 1.8670156002044678, 1.3935511112213135, 1.1012579202651978, 0.9477801322937012, 0.8379126191139221, 0.7764281630516052, 0.7235901951789856, 0.6839449405670166, 0.6511124968528748, 0.6340097188949585, 0.6069210171699524, 0.5817078948020935, 0.5635776519775391, 0.5524153113365173, 0.5367791652679443, 0.5212588906288147, 0.5178380608558655, 0.5019086003303528, 0.4879888892173767, 0.4858485460281372, 0.4747111201286316, 0.45951735973358154, 0.4532293975353241, 0.4492609202861786, 0.4330301284790039, 0.4310648441314697, 0.42051371932029724, 0.41327017545700073, 0.4060419201850891, 0.3997148871421814, 0.39729252457618713, 0.3869434893131256, 0.3869549036026001, 0.38186177611351013, 0.3692651391029358, 0.36346086859703064, 0.3634459972381592, 0.3600703179836273, 0.3489670753479004, 0.3429599404335022, 0.34309908747673035, 0.3401198089122772, 0.3303268253803253, 0.3301240801811218, 0.3276282846927643, 0.3180643618106842, 0.3136589229106903, 0.3090694546699524, 0.3071834146976471, 0.3011736273765564, 0.30332496762275696, 0.29351481795310974, 0.2937680780887604], "accuracy": [0.26680755615234375, 0.49451854825019836, 0.5679566860198975, 0.6209219098091125, 0.6646413803100586, 0.7078325152397156, 0.7234182953834534, 0.7387399077415466, 0.7541936039924622, 0.7672698497772217, 0.7677981853485107, 0.7820631265640259, 0.7897239327430725, 0.7977809906005859, 0.798309326171875, 0.8082155585289001, 0.8138951063156128, 0.8094043135643005, 0.822348415851593, 0.8269713521003723, 0.8208954930305481, 0.8310658931732178, 0.8350284099578857, 0.8367455005645752, 0.8368775844573975, 0.8444063067436218, 0.843481719493866, 0.850350022315979, 0.8502179384231567, 0.8570862412452698, 0.857218325138092, 0.8574824929237366, 0.8610487580299377, 0.8610487580299377, 0.8607845902442932, 0.8658037185668945, 0.8701624870300293, 0.8689737319946289, 0.8708229064941406, 0.8792761564254761, 0.8798044919967651, 0.8765024542808533, 0.8765024542808533, 0.8824461698532104, 0.880729079246521, 0.8844274282455444, 0.8838990926742554, 0.8887861371040344, 0.8878615498542786, 0.8903711438179016, 0.8924844861030579, 0.8912957310676575, 0.8976356983184814, 0.8960506916046143], "val_loss": [2.040694236755371, 1.5166728496551514, 1.045767068862915, 0.8421168327331543, 0.7569165229797363, 0.7011509537696838, 0.6573318839073181, 0.6179470419883728, 0.5908101201057434, 0.5737177133560181, 0.5541383624076843, 0.5365487933158875, 0.518412172794342, 0.5104728937149048, 0.49868762493133545, 0.485697478055954, 0.48461878299713135, 0.46694132685661316, 0.459992378950119, 0.44818419218063354, 0.45110249519348145, 0.4507465958595276, 0.4339507520198822, 0.4287099242210388, 0.42590731382369995, 0.4119842052459717, 0.4104468524456024, 0.4069807529449463, 0.40372517704963684, 0.3985708951950073, 0.3967111110687256, 0.39305025339126587, 0.39346253871917725, 0.3906964063644409, 0.3815464675426483, 0.3792845904827118, 0.37928369641304016, 0.3762374818325043, 0.37582898139953613, 0.37387406826019287, 0.3717586398124695, 0.36671704053878784, 0.363382488489151, 0.36401286721229553, 0.3619881868362427, 0.35666540265083313, 0.3588123917579651, 0.3541429042816162, 0.35232576727867126, 0.35342442989349365, 0.3524846136569977, 0.34847813844680786, 0.34814298152923584, 0.35015836358070374], "val_accuracy": [0.5323333144187927, 0.6446666717529297, 0.6756666898727417, 0.7043333053588867, 0.7239999771118164, 0.7493333220481873, 0.753000020980835, 0.7706666588783264, 0.7820000052452087, 0.7873333096504211, 0.7956666946411133, 0.800000011920929, 0.8136666417121887, 0.812666654586792, 0.8199999928474426, 0.824999988079071, 0.8246666789054871, 0.8326666951179504, 0.8303333520889282, 0.8376666903495789, 0.8333333134651184, 0.8343333601951599, 0.8446666598320007, 0.843666672706604, 0.846666693687439, 0.8513333201408386, 0.8546666502952576, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8529999852180481, 0.859333336353302, 0.8546666502952576, 0.8569999933242798, 0.8606666922569275, 0.8633333444595337, 0.8643333315849304, 0.8629999756813049, 0.8576666712760925, 0.8703333139419556, 0.8640000224113464, 0.8643333315849304, 0.8676666617393494, 0.8663333058357239, 0.8713333606719971, 0.871999979019165, 0.8693333268165588, 0.8693333268165588, 0.878000020980835, 0.8756666779518127, 0.8706666827201843, 0.8756666779518127, 0.8769999742507935, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8679999709129333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.225449562072754, 1.8735324144363403, 1.40381920337677, 1.104448676109314, 0.946897029876709, 0.8450954556465149, 0.7770963907241821, 0.7275096774101257, 0.688439130783081, 0.6620194911956787, 0.6434504389762878, 0.6126853823661804, 0.5953682065010071, 0.5789385437965393, 0.558005690574646, 0.5459426045417786, 0.5313280820846558, 0.5240398645401001, 0.5040475726127625, 0.5077478289604187, 0.4958394765853882, 0.4743514955043793, 0.4694429934024811, 0.44876864552497864, 0.4500703513622284, 0.4398044943809509, 0.44088420271873474, 0.41750800609588623, 0.4213210344314575, 0.4182608723640442, 0.41310346126556396, 0.3994031250476837, 0.3980250060558319, 0.3902759850025177, 0.38480931520462036, 0.3819904327392578, 0.3711259961128235, 0.36596453189849854, 0.3674452304840088, 0.356767475605011, 0.35468506813049316, 0.3518390357494354, 0.34800389409065247, 0.3345818817615509, 0.3268577456474304], "accuracy": [0.27816668152809143, 0.49491479992866516, 0.5556729435920715, 0.6172236204147339, 0.6647734642028809, 0.6980583667755127, 0.7174745798110962, 0.7359662055969238, 0.7470611333847046, 0.7565711140632629, 0.7635715007781982, 0.7705719470977783, 0.7849689722061157, 0.7890635132789612, 0.798309326171875, 0.8012151718139648, 0.8041210174560547, 0.8132346868515015, 0.821820080280304, 0.816008448600769, 0.8197067975997925, 0.8289526104927063, 0.8348963260650635, 0.8408400416374207, 0.8372738361358643, 0.8451988101005554, 0.8429533839225769, 0.850350022315979, 0.8474441766738892, 0.8516708612442017, 0.854708731174469, 0.8549728989601135, 0.8598600029945374, 0.8599920868873596, 0.8621054291725159, 0.8654074668884277, 0.8684453964233398, 0.8701624870300293, 0.8709549307823181, 0.8732003569602966, 0.873860776424408, 0.8766345381736755, 0.8765024542808533, 0.8817857503890991, 0.8854840993881226], "val_loss": [2.0423057079315186, 1.5166692733764648, 1.0435845851898193, 0.8324804902076721, 0.7466188669204712, 0.6973313689231873, 0.6505634188652039, 0.617180347442627, 0.5848933458328247, 0.5661776661872864, 0.5464819073677063, 0.5329485535621643, 0.5177362561225891, 0.5027812719345093, 0.49484488368034363, 0.4850734770298004, 0.4716055989265442, 0.466884046792984, 0.45805802941322327, 0.45019885897636414, 0.4443804621696472, 0.4394426643848419, 0.43497025966644287, 0.4327034652233124, 0.4228569269180298, 0.41600796580314636, 0.41087087988853455, 0.4092659652233124, 0.4056932330131531, 0.40525707602500916, 0.40205806493759155, 0.4012826383113861, 0.39957937598228455, 0.39544954895973206, 0.3908083438873291, 0.385946124792099, 0.38763147592544556, 0.3838218152523041, 0.38315120339393616, 0.37559255957603455, 0.37699055671691895, 0.37590569257736206, 0.3706355690956116, 0.3767412602901459, 0.37192216515541077], "val_accuracy": [0.5230000019073486, 0.6516666412353516, 0.684333324432373, 0.7113333344459534, 0.737666666507721, 0.7490000128746033, 0.762333333492279, 0.7720000147819519, 0.7823333144187927, 0.7919999957084656, 0.8009999990463257, 0.8053333163261414, 0.8106666803359985, 0.8143333196640015, 0.8233333230018616, 0.8253333568572998, 0.8276666402816772, 0.8343333601951599, 0.8366666436195374, 0.8343333601951599, 0.8333333134651184, 0.8399999737739563, 0.8399999737739563, 0.8420000076293945, 0.8453333377838135, 0.8503333330154419, 0.8486666679382324, 0.8493333458900452, 0.8496666550636292, 0.8489999771118164, 0.8523333072662354, 0.8500000238418579, 0.8529999852180481, 0.8556666374206543, 0.8553333282470703, 0.8586666584014893, 0.8579999804496765, 0.8586666584014893, 0.8566666841506958, 0.8643333315849304, 0.8633333444595337, 0.859333336353302, 0.8643333315849304, 0.859666645526886, 0.8629999756813049]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8614285588264465, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2936196327209473, 2.1894400119781494, 1.7666800022125244, 1.3389006853103638, 1.0873548984527588, 0.9277441501617432, 0.8598232865333557, 0.8077279329299927, 0.7616324424743652, 0.7503883242607117, 0.7059850692749023, 0.6794178485870361, 0.6530391573905945, 0.6190782189369202, 0.6129179000854492, 0.5905231237411499, 0.5678205490112305, 0.5668174624443054, 0.5497891306877136, 0.5416083335876465, 0.5288925170898438, 0.5168337225914001, 0.5018383860588074, 0.48931244015693665, 0.47825267910957336, 0.47181713581085205, 0.45841172337532043, 0.4449932873249054, 0.4338817000389099, 0.435069739818573, 0.4285820722579956, 0.41608309745788574, 0.4148242771625519, 0.407503217458725, 0.39282748103141785, 0.3856508731842041, 0.38917362689971924, 0.3850274682044983, 0.3796966075897217, 0.3710237145423889, 0.3633657395839691], "accuracy": [0.12481838464736938, 0.3265090584754944, 0.4348170757293701, 0.5513142347335815, 0.6346585750579834, 0.6540747880935669, 0.6818121671676636, 0.7062475085258484, 0.7033417224884033, 0.7057191729545593, 0.7240787148475647, 0.741909921169281, 0.7537974119186401, 0.7640998363494873, 0.7671377658843994, 0.7712323069572449, 0.7814027070999146, 0.7825914621353149, 0.7889314293861389, 0.7942147850990295, 0.7954035401344299, 0.7969884872436523, 0.8131026029586792, 0.8128384351730347, 0.8183859586715698, 0.82683926820755, 0.8249900937080383, 0.8296129703521729, 0.8372738361358643, 0.8297450542449951, 0.8323867321014404, 0.8429533839225769, 0.8393871188163757, 0.8424250483512878, 0.8499537706375122, 0.8516708612442017, 0.8521991968154907, 0.854708731174469, 0.8457271456718445, 0.8471800088882446, 0.8595958352088928], "val_loss": [2.245227098464966, 2.0185794830322266, 1.1525216102600098, 0.9253693222999573, 0.8019651770591736, 0.7343453168869019, 0.6800146698951721, 0.6723116636276245, 0.6495154500007629, 0.6238917708396912, 0.5783309936523438, 0.5550565719604492, 0.5412839651107788, 0.534318745136261, 0.5201727747917175, 0.5101839303970337, 0.5055850744247437, 0.48646166920661926, 0.48587852716445923, 0.4869407117366791, 0.4762037694454193, 0.4739798903465271, 0.4653150141239166, 0.46866732835769653, 0.466006875038147, 0.4491426944732666, 0.44560950994491577, 0.445635586977005, 0.43435555696487427, 0.43141382932662964, 0.433842271566391, 0.4356236159801483, 0.4326247572898865, 0.4323788285255432, 0.4217160642147064, 0.41752132773399353, 0.4169069826602936, 0.4175470471382141, 0.4223693907260895, 0.42663314938545227, 0.4342195689678192], "val_accuracy": [0.4189999997615814, 0.45899999141693115, 0.6460000276565552, 0.6880000233650208, 0.6966666579246521, 0.7200000286102295, 0.7390000224113464, 0.7336666584014893, 0.7593333125114441, 0.7583333253860474, 0.7763333320617676, 0.7866666913032532, 0.7879999876022339, 0.7863333225250244, 0.7983333468437195, 0.8046666383743286, 0.8023333549499512, 0.8149999976158142, 0.8163333535194397, 0.8113333582878113, 0.8153333067893982, 0.8230000138282776, 0.828000009059906, 0.8240000009536743, 0.831333339214325, 0.8426666855812073, 0.846666693687439, 0.8453333377838135, 0.8516666889190674, 0.8523333072662354, 0.8516666889190674, 0.8443333506584167, 0.843666672706604, 0.8516666889190674, 0.8566666841506958, 0.8603333234786987, 0.8576666712760925, 0.856333315372467, 0.8500000238418579, 0.8506666421890259, 0.8533333539962769]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 5], [0], [0], [1], [0], [2], [0]], "fitness": -0.8248571157455444, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5531381368637085, 0.8618192672729492, 0.6671007871627808, 0.6058126091957092, 0.5713077187538147, 0.5852199792861938, 0.5305200219154358, 0.5542706251144409, 0.4969383478164673, 0.49502965807914734, 0.5079190731048584, 0.5302703976631165, 0.5432997345924377, 0.5189124941825867, 0.5223893523216248, 0.5706457495689392, 0.504902184009552, 0.5652399659156799, 0.5457198619842529, 0.5807936787605286, 0.551788330078125, 0.6369644999504089, 0.5847141742706299], "accuracy": [0.46387532353401184, 0.6959450244903564, 0.7520803213119507, 0.7740060687065125, 0.7921014428138733, 0.8005547523498535, 0.81112140417099, 0.8079513907432556, 0.8244617581367493, 0.8226125836372375, 0.8284242749214172, 0.8210275769233704, 0.8193105459213257, 0.8230088353157043, 0.8216879963874817, 0.8140271902084351, 0.8352925777435303, 0.8256505131721497, 0.8231409192085266, 0.8072909712791443, 0.8285563588142395, 0.7898560166358948, 0.817461371421814], "val_loss": [0.7524436116218567, 0.5947313904762268, 0.5414204001426697, 0.4986249506473541, 0.4655075669288635, 0.46905937790870667, 0.4655093848705292, 0.465768039226532, 0.5122233629226685, 0.4832579493522644, 0.5375305414199829, 0.5602098703384399, 0.5777092576026917, 0.5395810604095459, 0.5759169459342957, 0.5622411966323853, 0.5936445593833923, 0.7175437808036804, 0.521351158618927, 0.5523440837860107, 0.6422185897827148, 0.6392053961753845, 0.6348472237586975], "val_accuracy": [0.7386666536331177, 0.777999997138977, 0.7993333339691162, 0.8159999847412109, 0.8320000171661377, 0.8246666789054871, 0.8363333344459534, 0.8309999704360962, 0.8333333134651184, 0.8413333296775818, 0.8309999704360962, 0.8379999995231628, 0.847000002861023, 0.8360000252723694, 0.8379999995231628, 0.8423333168029785, 0.8370000123977661, 0.8523333072662354, 0.828000009059906, 0.8293333053588867, 0.8346666693687439, 0.8226666450500488, 0.8343333601951599]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 42], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [1, 3, 3, 6, 8, 4, 8, 1, 4, 2, 8, 7, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 58, 6, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma)), alpha), beta)", "other_info": {"loss": [2.303238868713379, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 2, 2, 1, 1, 1, 22, 13, 9, 6], "tree_depth": 23}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 2, 3, 0, 3, 6, 4, 4, 9], [0, 1, 0, 2, 0, 3], [64, 39, 71, 46], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 4, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 2, 2, 4], [56, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 9, 6, 4, 6, 3, 3, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.divide_no_nan(tf.math.pow(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), beta), tf.math.add(tf.math.sqrt(beta), grad))", "other_info": {"loss": [2.3035171031951904, 2.302570343017578, 2.302572011947632, 2.302570343017578, 2.3025665283203125, 2.3025717735290527], "accuracy": [0.10091137140989304, 0.10276053100824356, 0.10117553919553757, 0.10117553919553757, 0.10579843819141388, 0.10276053100824356], "val_loss": [2.3025827407836914, 2.3025856018066406, 2.302586078643799, 2.30258846282959, 2.302591562271118, 2.3025925159454346], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [4, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 8, 2, 9, 2], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0, 2], [89, 99, 96, 99, 62, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 10, 6, 4, 2, 2, 1, 1, 1, 26, 15, 11, 6], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), tf.math.sqrt(tf.math.add(sigma, alpha)))), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 6], [0, 2, 0, 2], [39, 97], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 43], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [8, 3, 3, 6, 2, 1, 4, 1, 4, 2, 2], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0, 0], [16, 58, 96, 99, 61, 1, 78]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 2, 2, 1, 1, 1, 22, 11, 11, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), grad)), tf.math.add(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0948355570435524, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]