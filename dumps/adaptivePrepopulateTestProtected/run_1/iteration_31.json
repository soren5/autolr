[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223330497741699, 1.8670156002044678, 1.3935511112213135, 1.1012579202651978, 0.9477801322937012, 0.8379126191139221, 0.7764281630516052, 0.7235901951789856, 0.6839449405670166, 0.6511124968528748, 0.6340097188949585, 0.6069210171699524, 0.5817078948020935, 0.5635776519775391, 0.5524153113365173, 0.5367791652679443, 0.5212588906288147, 0.5178380608558655, 0.5019086003303528, 0.4879888892173767, 0.4858485460281372, 0.4747111201286316, 0.45951735973358154, 0.4532293975353241, 0.4492609202861786, 0.4330301284790039, 0.4310648441314697, 0.42051371932029724, 0.41327017545700073, 0.4060419201850891, 0.3997148871421814, 0.39729252457618713, 0.3869434893131256, 0.3869549036026001, 0.38186177611351013, 0.3692651391029358, 0.36346086859703064, 0.3634459972381592, 0.3600703179836273, 0.3489670753479004, 0.3429599404335022, 0.34309908747673035, 0.3401198089122772, 0.3303268253803253, 0.3301240801811218, 0.3276282846927643, 0.3180643618106842, 0.3136589229106903, 0.3090694546699524, 0.3071834146976471, 0.3011736273765564, 0.30332496762275696, 0.29351481795310974, 0.2937680780887604], "accuracy": [0.26680755615234375, 0.49451854825019836, 0.5679566860198975, 0.6209219098091125, 0.6646413803100586, 0.7078325152397156, 0.7234182953834534, 0.7387399077415466, 0.7541936039924622, 0.7672698497772217, 0.7677981853485107, 0.7820631265640259, 0.7897239327430725, 0.7977809906005859, 0.798309326171875, 0.8082155585289001, 0.8138951063156128, 0.8094043135643005, 0.822348415851593, 0.8269713521003723, 0.8208954930305481, 0.8310658931732178, 0.8350284099578857, 0.8367455005645752, 0.8368775844573975, 0.8444063067436218, 0.843481719493866, 0.850350022315979, 0.8502179384231567, 0.8570862412452698, 0.857218325138092, 0.8574824929237366, 0.8610487580299377, 0.8610487580299377, 0.8607845902442932, 0.8658037185668945, 0.8701624870300293, 0.8689737319946289, 0.8708229064941406, 0.8792761564254761, 0.8798044919967651, 0.8765024542808533, 0.8765024542808533, 0.8824461698532104, 0.880729079246521, 0.8844274282455444, 0.8838990926742554, 0.8887861371040344, 0.8878615498542786, 0.8903711438179016, 0.8924844861030579, 0.8912957310676575, 0.8976356983184814, 0.8960506916046143], "val_loss": [2.040694236755371, 1.5166728496551514, 1.045767068862915, 0.8421168327331543, 0.7569165229797363, 0.7011509537696838, 0.6573318839073181, 0.6179470419883728, 0.5908101201057434, 0.5737177133560181, 0.5541383624076843, 0.5365487933158875, 0.518412172794342, 0.5104728937149048, 0.49868762493133545, 0.485697478055954, 0.48461878299713135, 0.46694132685661316, 0.459992378950119, 0.44818419218063354, 0.45110249519348145, 0.4507465958595276, 0.4339507520198822, 0.4287099242210388, 0.42590731382369995, 0.4119842052459717, 0.4104468524456024, 0.4069807529449463, 0.40372517704963684, 0.3985708951950073, 0.3967111110687256, 0.39305025339126587, 0.39346253871917725, 0.3906964063644409, 0.3815464675426483, 0.3792845904827118, 0.37928369641304016, 0.3762374818325043, 0.37582898139953613, 0.37387406826019287, 0.3717586398124695, 0.36671704053878784, 0.363382488489151, 0.36401286721229553, 0.3619881868362427, 0.35666540265083313, 0.3588123917579651, 0.3541429042816162, 0.35232576727867126, 0.35342442989349365, 0.3524846136569977, 0.34847813844680786, 0.34814298152923584, 0.35015836358070374], "val_accuracy": [0.5323333144187927, 0.6446666717529297, 0.6756666898727417, 0.7043333053588867, 0.7239999771118164, 0.7493333220481873, 0.753000020980835, 0.7706666588783264, 0.7820000052452087, 0.7873333096504211, 0.7956666946411133, 0.800000011920929, 0.8136666417121887, 0.812666654586792, 0.8199999928474426, 0.824999988079071, 0.8246666789054871, 0.8326666951179504, 0.8303333520889282, 0.8376666903495789, 0.8333333134651184, 0.8343333601951599, 0.8446666598320007, 0.843666672706604, 0.846666693687439, 0.8513333201408386, 0.8546666502952576, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8529999852180481, 0.859333336353302, 0.8546666502952576, 0.8569999933242798, 0.8606666922569275, 0.8633333444595337, 0.8643333315849304, 0.8629999756813049, 0.8576666712760925, 0.8703333139419556, 0.8640000224113464, 0.8643333315849304, 0.8676666617393494, 0.8663333058357239, 0.8713333606719971, 0.871999979019165, 0.8693333268165588, 0.8693333268165588, 0.878000020980835, 0.8756666779518127, 0.8706666827201843, 0.8756666779518127, 0.8769999742507935, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8668571710586548, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2250618934631348, 1.8718940019607544, 1.3933579921722412, 1.0899847745895386, 0.9371350407600403, 0.8414287567138672, 0.7779287695884705, 0.7260396480560303, 0.688666582107544, 0.6615799069404602, 0.6345467567443848, 0.6217430233955383, 0.58987957239151, 0.5759362578392029, 0.5523941516876221, 0.55366450548172, 0.5306470990180969, 0.5249843597412109, 0.5129254460334778, 0.5031234622001648, 0.49321886897087097, 0.4764217138290405, 0.4762696325778961, 0.461988627910614, 0.450410395860672, 0.44984662532806396, 0.4384040832519531, 0.42917004227638245, 0.42233121395111084, 0.4148961007595062, 0.40794509649276733, 0.4012177586555481, 0.3931504487991333, 0.39512598514556885, 0.3872797191143036, 0.38312268257141113, 0.3803996741771698, 0.36945706605911255, 0.36331620812416077, 0.3640081584453583, 0.3520561456680298, 0.35388076305389404, 0.34236660599708557, 0.33476173877716064, 0.3369844853878021, 0.32919132709503174, 0.3285978436470032, 0.3238072097301483, 0.3193497657775879, 0.3164759576320648, 0.31027546525001526, 0.3056342303752899, 0.3000747263431549, 0.301161527633667, 0.2936287522315979, 0.291689395904541], "accuracy": [0.26324132084846497, 0.47932901978492737, 0.561352550983429, 0.6123365759849548, 0.6623960137367249, 0.6955488324165344, 0.7106062769889832, 0.7327961921691895, 0.7486461400985718, 0.7555144429206848, 0.7585523724555969, 0.7720248103141785, 0.7814027070999146, 0.7845727205276489, 0.7943468689918518, 0.7930260300636292, 0.8086118102073669, 0.8042530417442322, 0.8095363974571228, 0.8150838613510132, 0.821820080280304, 0.8286884427070618, 0.8309338092803955, 0.835160493850708, 0.8405758738517761, 0.8399154543876648, 0.8422929644584656, 0.845859169960022, 0.8486329317092896, 0.8515387773513794, 0.8568220734596252, 0.8556333184242249, 0.8603883385658264, 0.8545766472816467, 0.860652506351471, 0.863029956817627, 0.8622375130653381, 0.869502067565918, 0.8713511824607849, 0.8698983192443848, 0.8747853636741638, 0.8735966086387634, 0.8796724081039429, 0.8758420348167419, 0.8778232932090759, 0.8823140859603882, 0.8800686597824097, 0.8829745054244995, 0.8844274282455444, 0.8824461698532104, 0.8849557638168335, 0.8858803510665894, 0.8903711438179016, 0.8924844861030579, 0.8944657444953918, 0.8960506916046143], "val_loss": [2.041689395904541, 1.523982286453247, 1.0518429279327393, 0.8358453512191772, 0.7445052266120911, 0.6864993572235107, 0.6437663435935974, 0.6088895797729492, 0.5873076319694519, 0.5646366477012634, 0.5487959980964661, 0.5306628942489624, 0.5231052041053772, 0.5039434432983398, 0.493870347738266, 0.48495039343833923, 0.4758937656879425, 0.4670620262622833, 0.4579092264175415, 0.457815945148468, 0.45072078704833984, 0.44413191080093384, 0.4356321096420288, 0.4320025146007538, 0.425016313791275, 0.41846394538879395, 0.4156450927257538, 0.4132855534553528, 0.40986987948417664, 0.40093162655830383, 0.4018585979938507, 0.39724940061569214, 0.40723758935928345, 0.39264264702796936, 0.39511606097221375, 0.3844943940639496, 0.38805681467056274, 0.38343262672424316, 0.3793173134326935, 0.3792889714241028, 0.3773210048675537, 0.37198078632354736, 0.36999812722206116, 0.3692575693130493, 0.37115511298179626, 0.36950546503067017, 0.36645495891571045, 0.3611930310726166, 0.36073794960975647, 0.3583848476409912, 0.35779476165771484, 0.363438218832016, 0.3559916913509369, 0.3540491461753845, 0.35298770666122437, 0.3540738821029663], "val_accuracy": [0.5479999780654907, 0.6566666960716248, 0.6819999814033508, 0.7133333086967468, 0.7310000061988831, 0.7573333382606506, 0.7649999856948853, 0.7753333449363708, 0.7816666960716248, 0.7983333468437195, 0.8086666464805603, 0.8069999814033508, 0.8043333292007446, 0.8153333067893982, 0.8243333101272583, 0.8256666660308838, 0.8273333311080933, 0.8330000042915344, 0.8366666436195374, 0.8343333601951599, 0.8349999785423279, 0.8416666388511658, 0.8410000205039978, 0.8386666774749756, 0.8429999947547913, 0.847000002861023, 0.8473333120346069, 0.8519999980926514, 0.8493333458900452, 0.8539999723434448, 0.8500000238418579, 0.8543333411216736, 0.8493333458900452, 0.8569999933242798, 0.8536666631698608, 0.859333336353302, 0.8613333106040955, 0.862333357334137, 0.8640000224113464, 0.859333336353302, 0.862333357334137, 0.8646666407585144, 0.8643333315849304, 0.8663333058357239, 0.8650000095367432, 0.8653333187103271, 0.8676666617393494, 0.8690000176429749, 0.8690000176429749, 0.8690000176429749, 0.8723333477973938, 0.8646666407585144, 0.871666669845581, 0.8653333187103271, 0.8686666488647461, 0.8686666488647461]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 2, 6], [0, 7, 3, 7], [0], [1], [0], [2], [0]], "fitness": -0.8354285955429077, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(grad, sigma), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5868064165115356, 0.9334475994110107, 0.7691559195518494, 0.6553859710693359, 0.6040632128715515, 0.5371528267860413, 0.5332700610160828, 0.534087061882019, 0.5339908599853516, 0.5333117842674255, 0.5177541971206665, 0.49021416902542114, 0.47909605503082275, 0.503038763999939, 0.4903632402420044, 0.5076789259910583, 0.5252034664154053, 0.5110397338867188, 0.5356786847114563, 0.5276236534118652, 0.5687510967254639, 0.5759141445159912, 0.5734490752220154, 0.5956564545631409, 0.5853909254074097], "accuracy": [0.47364944219589233, 0.6674151420593262, 0.7251353859901428, 0.7605336308479309, 0.7788931727409363, 0.8035926818847656, 0.8038568496704102, 0.8142913579940796, 0.8153480291366577, 0.8123101592063904, 0.817989706993103, 0.8294808864593506, 0.8341038227081299, 0.8389908671379089, 0.8327829837799072, 0.8255184292793274, 0.8224804997444153, 0.8289526104927063, 0.8271034359931946, 0.8363492488861084, 0.813498854637146, 0.8132346868515015, 0.8333113193511963, 0.8230088353157043, 0.8157442808151245], "val_loss": [0.9147421717643738, 0.7004334330558777, 0.5976018309593201, 0.551773726940155, 0.4967828094959259, 0.49961575865745544, 0.5327581763267517, 0.5066527128219604, 0.530051052570343, 0.5202049016952515, 0.5653512477874756, 0.5472001433372498, 0.5785841941833496, 0.5533672571182251, 0.597064197063446, 0.5627428889274597, 0.5806750655174255, 0.6001989841461182, 0.5448431372642517, 0.64585280418396, 0.5511268973350525, 0.6526673436164856, 0.6487950682640076, 0.640701174736023, 0.6415581107139587], "val_accuracy": [0.7009999752044678, 0.75, 0.7773333191871643, 0.8029999732971191, 0.8166666626930237, 0.8230000138282776, 0.8243333101272583, 0.8346666693687439, 0.8333333134651184, 0.8243333101272583, 0.8299999833106995, 0.8263333439826965, 0.8353333473205566, 0.8306666612625122, 0.828000009059906, 0.8303333520889282, 0.831333339214325, 0.8396666646003723, 0.8416666388511658, 0.8450000286102295, 0.8303333520889282, 0.8336666822433472, 0.8399999737739563, 0.8343333601951599, 0.8323333263397217]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1, 1], [0, 2], [0, 2], [0], [0, 1], [0], [1], [0]], "fitness": -0.8339999914169312, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2931511402130127, 2.1894540786743164, 1.7719991207122803, 1.3543449640274048, 1.082974910736084, 0.9343037605285645, 0.8482339382171631, 0.8253440260887146, 0.7828038334846497, 0.75374835729599, 0.7243203520774841, 0.697266161441803, 0.671889066696167, 0.6385232210159302, 0.6280643939971924, 0.6146361231803894, 0.5997238159179688, 0.5906307697296143, 0.5760120153427124, 0.5683119893074036, 0.5525607466697693, 0.5440858006477356, 0.5337350964546204, 0.5173047184944153, 0.4971569776535034, 0.5025632381439209, 0.4939097464084625, 0.476217657327652, 0.4692111909389496, 0.466297447681427, 0.4465068280696869, 0.4526524543762207, 0.43613240122795105, 0.43618330359458923, 0.4228494167327881, 0.41257473826408386, 0.414601594209671, 0.40406060218811035, 0.3933362364768982], "accuracy": [0.1266675442457199, 0.32545238733291626, 0.43270373344421387, 0.5497292280197144, 0.6369040012359619, 0.6509047746658325, 0.6864351034164429, 0.6919825673103333, 0.6989829540252686, 0.7080966830253601, 0.7253995537757874, 0.7298903465270996, 0.7427024245262146, 0.7589486241340637, 0.7607977986335754, 0.7651565074920654, 0.7675340175628662, 0.7791573405265808, 0.7808743715286255, 0.7836481332778931, 0.7889314293861389, 0.7885351777076721, 0.7936864495277405, 0.7984414100646973, 0.8063663840293884, 0.8125742673873901, 0.8128384351730347, 0.8197067975997925, 0.8175934553146362, 0.8201030492782593, 0.8298771381378174, 0.8281601071357727, 0.8345000743865967, 0.8356888294219971, 0.8404437899589539, 0.8432175517082214, 0.841500461101532, 0.8437458872795105, 0.8481045961380005], "val_loss": [2.2458508014678955, 2.016533136367798, 1.1300904750823975, 0.8548644781112671, 0.7501718997955322, 0.7208299040794373, 0.6571439504623413, 0.6570978164672852, 0.6430824995040894, 0.6185285449028015, 0.571858823299408, 0.5577239990234375, 0.5362249612808228, 0.5306543111801147, 0.506338357925415, 0.5090934038162231, 0.49731749296188354, 0.48987704515457153, 0.47503483295440674, 0.46470874547958374, 0.4664234220981598, 0.47294068336486816, 0.459390789270401, 0.44480109214782715, 0.44283318519592285, 0.4362215995788574, 0.426277756690979, 0.4235606789588928, 0.42409053444862366, 0.4118594527244568, 0.4118248224258423, 0.4080343544483185, 0.40876227617263794, 0.4024016857147217, 0.39835911989212036, 0.40747740864753723, 0.4076744019985199, 0.39653280377388, 0.39147037267684937], "val_accuracy": [0.41466665267944336, 0.44333332777023315, 0.6480000019073486, 0.6973333358764648, 0.7200000286102295, 0.7453333139419556, 0.7516666650772095, 0.7580000162124634, 0.7473333477973938, 0.7620000243186951, 0.7739999890327454, 0.7770000100135803, 0.7940000295639038, 0.7923333048820496, 0.8040000200271606, 0.8063333630561829, 0.8166666626930237, 0.8183333277702332, 0.8233333230018616, 0.8320000171661377, 0.8309999704360962, 0.8223333358764648, 0.8343333601951599, 0.8460000157356262, 0.8393333554267883, 0.8399999737739563, 0.8523333072662354, 0.8566666841506958, 0.8539999723434448, 0.8600000143051147, 0.8569999933242798, 0.859666645526886, 0.8553333282470703, 0.8679999709129333, 0.8650000095367432, 0.8663333058357239, 0.8659999966621399, 0.8653333187103271, 0.8669999837875366]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 8, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 5, 2, 3, 5], [0, 3, 3, 3], [90, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 4, 1, 0, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3033392429351807, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 0, 8, 9, 6], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 42, 41, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 2, 2, 1, 1, 1, 22, 13, 9, 6], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(alpha, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 0, 0, 3], [0, 1, 0, 2], [39, 5], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 3, 3, 0, 3, 5, 5, 4, 8, 4, 1, 4, 6, 7, 8, 7, 9, 4, 5, 0, 5, 3, 5], [0, 2, 0, 3, 1, 2, 4, 1, 4, 0, 2, 2], [16, 16, 33, 37], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 1, 9, 4], [4, 0, 3, 3, 0, 0, 3, 1, 1, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 35, 23, 12, 4, 2, 1, 1, 1, 22, 12, 10, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.sqrt(grad), tf.math.pow(tf.math.subtract(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(beta), tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), grad)), alpha), tf.math.pow(tf.math.square(grad), tf.math.negative(tf.math.square(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))))), tf.math.multiply(tf.math.square(beta), beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(sigma, sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 0, 3, 8, 3], [0, 1, 0, 1], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 6, 8, 1, 4, 1, 4, 1, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09228571504354477, "mapping_values": [1, 5, 3, 2, 1, 7, 4, 3, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma), alpha)", "other_info": {"loss": [2.3115906715393066, 2.309629440307617, 2.3101375102996826, 2.309704542160034, 2.309190511703491, 2.3093764781951904], "accuracy": [0.09179764986038208, 0.09391097724437714, 0.08889182657003403, 0.09879804402589798, 0.09272222965955734, 0.09747721254825592], "val_loss": [2.308079481124878, 2.308079481124878, 2.308079481124878, 2.308079481124878, 2.308079481124878, 2.308079481124878], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]