[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223330497741699, 1.8670156002044678, 1.3935511112213135, 1.1012579202651978, 0.9477801322937012, 0.8379126191139221, 0.7764281630516052, 0.7235901951789856, 0.6839449405670166, 0.6511124968528748, 0.6340097188949585, 0.6069210171699524, 0.5817078948020935, 0.5635776519775391, 0.5524153113365173, 0.5367791652679443, 0.5212588906288147, 0.5178380608558655, 0.5019086003303528, 0.4879888892173767, 0.4858485460281372, 0.4747111201286316, 0.45951735973358154, 0.4532293975353241, 0.4492609202861786, 0.4330301284790039, 0.4310648441314697, 0.42051371932029724, 0.41327017545700073, 0.4060419201850891, 0.3997148871421814, 0.39729252457618713, 0.3869434893131256, 0.3869549036026001, 0.38186177611351013, 0.3692651391029358, 0.36346086859703064, 0.3634459972381592, 0.3600703179836273, 0.3489670753479004, 0.3429599404335022, 0.34309908747673035, 0.3401198089122772, 0.3303268253803253, 0.3301240801811218, 0.3276282846927643, 0.3180643618106842, 0.3136589229106903, 0.3090694546699524, 0.3071834146976471, 0.3011736273765564, 0.30332496762275696, 0.29351481795310974, 0.2937680780887604], "accuracy": [0.26680755615234375, 0.49451854825019836, 0.5679566860198975, 0.6209219098091125, 0.6646413803100586, 0.7078325152397156, 0.7234182953834534, 0.7387399077415466, 0.7541936039924622, 0.7672698497772217, 0.7677981853485107, 0.7820631265640259, 0.7897239327430725, 0.7977809906005859, 0.798309326171875, 0.8082155585289001, 0.8138951063156128, 0.8094043135643005, 0.822348415851593, 0.8269713521003723, 0.8208954930305481, 0.8310658931732178, 0.8350284099578857, 0.8367455005645752, 0.8368775844573975, 0.8444063067436218, 0.843481719493866, 0.850350022315979, 0.8502179384231567, 0.8570862412452698, 0.857218325138092, 0.8574824929237366, 0.8610487580299377, 0.8610487580299377, 0.8607845902442932, 0.8658037185668945, 0.8701624870300293, 0.8689737319946289, 0.8708229064941406, 0.8792761564254761, 0.8798044919967651, 0.8765024542808533, 0.8765024542808533, 0.8824461698532104, 0.880729079246521, 0.8844274282455444, 0.8838990926742554, 0.8887861371040344, 0.8878615498542786, 0.8903711438179016, 0.8924844861030579, 0.8912957310676575, 0.8976356983184814, 0.8960506916046143], "val_loss": [2.040694236755371, 1.5166728496551514, 1.045767068862915, 0.8421168327331543, 0.7569165229797363, 0.7011509537696838, 0.6573318839073181, 0.6179470419883728, 0.5908101201057434, 0.5737177133560181, 0.5541383624076843, 0.5365487933158875, 0.518412172794342, 0.5104728937149048, 0.49868762493133545, 0.485697478055954, 0.48461878299713135, 0.46694132685661316, 0.459992378950119, 0.44818419218063354, 0.45110249519348145, 0.4507465958595276, 0.4339507520198822, 0.4287099242210388, 0.42590731382369995, 0.4119842052459717, 0.4104468524456024, 0.4069807529449463, 0.40372517704963684, 0.3985708951950073, 0.3967111110687256, 0.39305025339126587, 0.39346253871917725, 0.3906964063644409, 0.3815464675426483, 0.3792845904827118, 0.37928369641304016, 0.3762374818325043, 0.37582898139953613, 0.37387406826019287, 0.3717586398124695, 0.36671704053878784, 0.363382488489151, 0.36401286721229553, 0.3619881868362427, 0.35666540265083313, 0.3588123917579651, 0.3541429042816162, 0.35232576727867126, 0.35342442989349365, 0.3524846136569977, 0.34847813844680786, 0.34814298152923584, 0.35015836358070374], "val_accuracy": [0.5323333144187927, 0.6446666717529297, 0.6756666898727417, 0.7043333053588867, 0.7239999771118164, 0.7493333220481873, 0.753000020980835, 0.7706666588783264, 0.7820000052452087, 0.7873333096504211, 0.7956666946411133, 0.800000011920929, 0.8136666417121887, 0.812666654586792, 0.8199999928474426, 0.824999988079071, 0.8246666789054871, 0.8326666951179504, 0.8303333520889282, 0.8376666903495789, 0.8333333134651184, 0.8343333601951599, 0.8446666598320007, 0.843666672706604, 0.846666693687439, 0.8513333201408386, 0.8546666502952576, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8529999852180481, 0.859333336353302, 0.8546666502952576, 0.8569999933242798, 0.8606666922569275, 0.8633333444595337, 0.8643333315849304, 0.8629999756813049, 0.8576666712760925, 0.8703333139419556, 0.8640000224113464, 0.8643333315849304, 0.8676666617393494, 0.8663333058357239, 0.8713333606719971, 0.871999979019165, 0.8693333268165588, 0.8693333268165588, 0.878000020980835, 0.8756666779518127, 0.8706666827201843, 0.8756666779518127, 0.8769999742507935, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2248353958129883, 1.8710609674453735, 1.3987709283828735, 1.099935531616211, 0.9482254385948181, 0.8421421647071838, 0.7745283246040344, 0.7347570061683655, 0.6931520104408264, 0.6643970012664795, 0.6311740875244141, 0.6246306300163269, 0.596392035484314, 0.5793808102607727, 0.5694292187690735, 0.5520719885826111, 0.538032591342926, 0.5246251225471497, 0.5074414014816284, 0.501174807548523, 0.4919191300868988, 0.47969764471054077, 0.47722774744033813, 0.4645189344882965, 0.4689490497112274, 0.4543599486351013, 0.4432397484779358, 0.4350433349609375, 0.4240081310272217, 0.4197028577327728, 0.42040929198265076, 0.40489304065704346, 0.40817874670028687, 0.40417468547821045, 0.38809138536453247, 0.38957929611206055, 0.38230863213539124, 0.37387892603874207, 0.36874476075172424, 0.3594781160354614, 0.3575124740600586, 0.3477608859539032, 0.35315051674842834, 0.34670373797416687, 0.3414105772972107, 0.3355899751186371, 0.3343898355960846, 0.3320283591747284, 0.32514670491218567, 0.3256060481071472, 0.32113900780677795, 0.30817338824272156, 0.30018457770347595, 0.30067968368530273, 0.2957894802093506, 0.2947578430175781, 0.2823847830295563, 0.280732661485672, 0.2830595374107361, 0.274325966835022, 0.2754736840724945, 0.2701933979988098, 0.2674393057823181, 0.2630700469017029, 0.260526180267334, 0.25481024384498596, 0.25170016288757324, 0.24307219684123993], "accuracy": [0.2739400267601013, 0.49108439683914185, 0.563730001449585, 0.6264694333076477, 0.6581693291664124, 0.6989829540252686, 0.7191916704177856, 0.7360982894897461, 0.7486461400985718, 0.7531369924545288, 0.7689869403839111, 0.7696473598480225, 0.7786290049552917, 0.7880068421363831, 0.793422281742096, 0.8055738806724548, 0.7991018295288086, 0.813498854637146, 0.8150838613510132, 0.8185180425643921, 0.8239334225654602, 0.8251221776008606, 0.8304054737091064, 0.834632158279419, 0.8271034359931946, 0.8348963260650635, 0.8405758738517761, 0.8408400416374207, 0.8487650156021118, 0.8495575189590454, 0.8519350290298462, 0.8576145768165588, 0.8520671129226685, 0.8543124794960022, 0.8638224601745605, 0.8625016212463379, 0.86118084192276, 0.8671245574951172, 0.8673887252807617, 0.8683133125305176, 0.8696341514587402, 0.873860776424408, 0.8713511824607849, 0.8771628737449646, 0.8722757697105408, 0.878879964351654, 0.8796724081039429, 0.8803328275680542, 0.878879964351654, 0.8799365758895874, 0.8804649114608765, 0.8882578015327454, 0.8924844861030579, 0.8902390599250793, 0.8923524022102356, 0.8908994793891907, 0.8975036144256592, 0.8971073627471924, 0.8942015767097473, 0.9006736278533936, 0.900409460067749, 0.9015982151031494, 0.9021265506744385, 0.9062210917472839, 0.9066173434257507, 0.9070135951042175, 0.9084665179252625, 0.9091269373893738], "val_loss": [2.0406503677368164, 1.5168743133544922, 1.0455403327941895, 0.8356608748435974, 0.7452841997146606, 0.6917238831520081, 0.642934262752533, 0.6148098111152649, 0.584486722946167, 0.5650864243507385, 0.5403783321380615, 0.5311351418495178, 0.5096198320388794, 0.4974246323108673, 0.48901569843292236, 0.4782752990722656, 0.46471869945526123, 0.4522457718849182, 0.44349610805511475, 0.44113126397132874, 0.43002885580062866, 0.4264574348926544, 0.41924113035202026, 0.41620540618896484, 0.4094120264053345, 0.40633076429367065, 0.39545872807502747, 0.39071035385131836, 0.3883645832538605, 0.3812364935874939, 0.38469815254211426, 0.38007816672325134, 0.37316617369651794, 0.3703463673591614, 0.3671828508377075, 0.3620850741863251, 0.3605528473854065, 0.3599309027194977, 0.3563724458217621, 0.35224974155426025, 0.3477134704589844, 0.3468085527420044, 0.3484451174736023, 0.34105515480041504, 0.3458796441555023, 0.33577761054039, 0.34431958198547363, 0.33778366446495056, 0.33519452810287476, 0.328613817691803, 0.3304845094680786, 0.3297886848449707, 0.32519862055778503, 0.32542741298675537, 0.32435452938079834, 0.3212389349937439, 0.3199724555015564, 0.32005423307418823, 0.32050827145576477, 0.3223266899585724, 0.3140650987625122, 0.311213880777359, 0.31244027614593506, 0.3151331841945648, 0.31080394983291626, 0.3118894398212433, 0.3123090863227844, 0.3067033290863037], "val_accuracy": [0.5676666498184204, 0.6566666960716248, 0.6753333210945129, 0.7066666483879089, 0.7266666889190674, 0.7440000176429749, 0.7566666603088379, 0.768666684627533, 0.7786666750907898, 0.7860000133514404, 0.8046666383743286, 0.8073333501815796, 0.8100000023841858, 0.8209999799728394, 0.8243333101272583, 0.8246666789054871, 0.8360000252723694, 0.8373333215713501, 0.8393333554267883, 0.8446666598320007, 0.8489999771118164, 0.8523333072662354, 0.8550000190734863, 0.8553333282470703, 0.8510000109672546, 0.8566666841506958, 0.8643333315849304, 0.8650000095367432, 0.8640000224113464, 0.8686666488647461, 0.8653333187103271, 0.8679999709129333, 0.8756666779518127, 0.8740000128746033, 0.8686666488647461, 0.8759999871253967, 0.871666669845581, 0.8703333139419556, 0.8769999742507935, 0.8733333349227905, 0.8786666393280029, 0.8773333430290222, 0.8776666522026062, 0.8790000081062317, 0.8736666440963745, 0.8816666603088379, 0.8759999871253967, 0.8830000162124634, 0.8840000033378601, 0.8849999904632568, 0.8830000162124634, 0.8830000162124634, 0.8833333253860474, 0.8840000033378601, 0.8856666684150696, 0.8846666812896729, 0.8870000243186951, 0.8889999985694885, 0.8849999904632568, 0.8846666812896729, 0.8883333206176758, 0.8886666893959045, 0.8933333158493042, 0.8893333077430725, 0.8913333415985107, 0.8913333415985107, 0.890999972820282, 0.8923333287239075]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 0, 1, 1, 1], [0, 8, 7, 7], [0, 3, 3], [0], [0, 1], [0], [1], [0]], "fitness": -0.8577142953872681, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma), sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2934489250183105, 2.1911168098449707, 1.7757833003997803, 1.3523128032684326, 1.0670080184936523, 0.9172033667564392, 0.856636106967926, 0.8286076784133911, 0.7737043499946594, 0.7348634600639343, 0.7038561105728149, 0.6752444505691528, 0.6522453427314758, 0.6195012927055359, 0.5920880436897278, 0.5880553126335144, 0.5809510946273804, 0.5608145594596863, 0.5501877665519714, 0.5382602214813232, 0.5261886715888977, 0.5058313012123108, 0.49318987131118774, 0.4948735535144806, 0.489322692155838, 0.46568936109542847, 0.4632214903831482, 0.4550701975822449, 0.4398496448993683, 0.44604894518852234, 0.427123486995697, 0.4150281250476837, 0.42266038060188293, 0.4030931890010834, 0.41285234689712524, 0.3914405107498169, 0.39281919598579407, 0.3765484094619751, 0.3826085031032562, 0.3735010325908661, 0.36952048540115356, 0.35716402530670166, 0.3440914750099182, 0.3438173830509186, 0.34195488691329956, 0.3341836631298065, 0.3282991051673889, 0.3326508700847626, 0.3363729417324066, 0.3241931200027466, 0.3164331018924713, 0.30432572960853577, 0.31489938497543335, 0.3036362826824188, 0.30950117111206055], "accuracy": [0.12679962813854218, 0.32518821954727173, 0.43825122714042664, 0.5432571768760681, 0.6392814517021179, 0.6630563735961914, 0.6866992712020874, 0.6956809163093567, 0.7131158113479614, 0.726192057132721, 0.7353057861328125, 0.7405890822410583, 0.7523444890975952, 0.7626469135284424, 0.7728173136711121, 0.7713643908500671, 0.7788931727409363, 0.7881389260292053, 0.791441023349762, 0.7961959838867188, 0.7989697456359863, 0.8059701323509216, 0.8105930685997009, 0.8131026029586792, 0.8072909712791443, 0.8190463781356812, 0.8189142942428589, 0.828292191028595, 0.8341038227081299, 0.8300092220306396, 0.8321225643157959, 0.8392550349235535, 0.8348963260650635, 0.8453308939933777, 0.8367455005645752, 0.8507462739944458, 0.848368763923645, 0.8540483713150024, 0.8532558679580688, 0.8540483713150024, 0.8525954484939575, 0.8580108284950256, 0.8697662353515625, 0.8664641380310059, 0.8644828796386719, 0.8684453964233398, 0.8704266548156738, 0.8696341514587402, 0.8696341514587402, 0.8672566413879395, 0.8779553771018982, 0.8749174475669861, 0.8750495314598083, 0.8755778670310974, 0.8836349248886108], "val_loss": [2.2461202144622803, 2.023132562637329, 1.148730993270874, 0.8666014671325684, 0.7464120984077454, 0.7432435154914856, 0.658974826335907, 0.6389697194099426, 0.6321685314178467, 0.6158937215805054, 0.5576948523521423, 0.559751570224762, 0.5272913575172424, 0.5146681070327759, 0.5109255313873291, 0.500472903251648, 0.5020021200180054, 0.5047301650047302, 0.4881923794746399, 0.4866394102573395, 0.47877004742622375, 0.4687773585319519, 0.4595996141433716, 0.4505058526992798, 0.4456925392150879, 0.4385058581829071, 0.43716979026794434, 0.436644047498703, 0.43797746300697327, 0.4394996464252472, 0.42834025621414185, 0.42120251059532166, 0.4180430769920349, 0.4206855893135071, 0.4102872610092163, 0.4037024676799774, 0.4191106855869293, 0.39880675077438354, 0.39560094475746155, 0.406126469373703, 0.389601469039917, 0.4014667272567749, 0.41811880469322205, 0.409616619348526, 0.4002784788608551, 0.40567097067832947, 0.413142591714859, 0.4076964259147644, 0.3919733464717865, 0.40125221014022827, 0.42029067873954773, 0.4043598175048828, 0.4253324270248413, 0.4153313934803009, 0.4160428047180176], "val_accuracy": [0.39633333683013916, 0.421999990940094, 0.653333306312561, 0.7043333053588867, 0.7326666712760925, 0.7239999771118164, 0.7590000033378601, 0.762666642665863, 0.765333354473114, 0.765999972820282, 0.7796666622161865, 0.7793333530426025, 0.7903333306312561, 0.7976666688919067, 0.7983333468437195, 0.809333324432373, 0.8086666464805603, 0.8116666674613953, 0.8180000185966492, 0.8196666836738586, 0.8296666741371155, 0.8330000042915344, 0.8343333601951599, 0.8396666646003723, 0.8356666564941406, 0.8416666388511658, 0.8389999866485596, 0.8410000205039978, 0.840666651725769, 0.8393333554267883, 0.8493333458900452, 0.8463333249092102, 0.8479999899864197, 0.8479999899864197, 0.8479999899864197, 0.8573333621025085, 0.8513333201408386, 0.8566666841506958, 0.8576666712760925, 0.8603333234786987, 0.856333315372467, 0.8573333621025085, 0.8560000061988831, 0.8583333492279053, 0.8633333444595337, 0.8633333444595337, 0.8603333234786987, 0.8629999756813049, 0.8650000095367432, 0.8693333268165588, 0.8693333268165588, 0.8676666617393494, 0.8600000143051147, 0.8633333444595337, 0.8666666746139526]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 7, 4, 3, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8308571577072144, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6393083333969116, 0.9309029579162598, 0.7275391221046448, 0.6539462208747864, 0.5743499994277954, 0.5520289540290833, 0.5203989744186401, 0.4852401316165924, 0.5160988569259644, 0.49185997247695923, 0.4966019093990326, 0.48652127385139465, 0.5102627277374268], "accuracy": [0.45449742674827576, 0.6773213744163513, 0.7338528633117676, 0.7601373791694641, 0.780610203742981, 0.7898560166358948, 0.8029322624206543, 0.8170651197433472, 0.8127063512802124, 0.8158763647079468, 0.8166688680648804, 0.8238013386726379, 0.8257825970649719], "val_loss": [0.9777190685272217, 0.6356335282325745, 0.5852665901184082, 0.5511642098426819, 0.5268377661705017, 0.5022151470184326, 0.5094882249832153, 0.5076185464859009, 0.5144317150115967, 0.5190532803535461, 0.5343135595321655, 0.530528724193573, 0.5242116451263428], "val_accuracy": [0.6413333415985107, 0.7743333578109741, 0.7879999876022339, 0.8046666383743286, 0.8086666464805603, 0.815666675567627, 0.8213333487510681, 0.8376666903495789, 0.8333333134651184, 0.8309999704360962, 0.82833331823349, 0.8366666436195374, 0.8356666564941406]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 8, 0, 3], [0, 1, 0, 2], [39, 50], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 1, 3], [3, 2, 1, 3, 2, 0], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0], [6, 3, 3, 2, 8, 1, 4, 1, 4, 2, 8, 4, 9, 1, 0, 1, 6, 3, 4, 1, 8, 2, 8, 4, 0, 3, 6, 0, 7, 1, 9], [4, 0, 0, 3, 4, 0, 3, 1, 4, 0, 4, 1, 6, 3, 7, 3, 1, 3, 5, 7, 6], [16, 84, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 14, 8, 6, 1, 2, 1, 1, 0, 52, 31, 21, 6], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.math.square(tf.math.subtract(alpha, tf.math.multiply(grad, beta))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.pow(grad, tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(tf.math.sqrt(sigma), grad), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), alpha), grad), tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad), alpha)), tf.math.multiply(grad, tf.math.pow(tf.math.subtract(tf.math.sqrt(tf.math.add(tf.math.sqrt(sigma), tf.math.pow(tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(grad, sigma), tf.math.negative(alpha))), sigma))), grad), tf.math.add(grad, tf.math.subtract(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [4, 2, 3, 0, 3, 5, 6, 2, 9], [0, 1, 1, 2, 3, 0], [39, 21, 46], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 2, 8, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [28], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 1, 3, 1, 2, 0], [16, 84, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 9, 6, 3, 10, 6, 4, 2, 2, 1, 1, 1, 10, 5, 5, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.negative(alpha), tf.math.multiply(alpha, grad)), tf.math.square(tf.math.divide_no_nan(tf.math.add(grad, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(sigma, tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3034324645996094, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [1, 2, 3, 3, 3, 1, 3, 2, 3, 2, 7, 2, 0, 9, 3, 2, 7, 1, 6, 5, 2, 5, 2, 3, 7, 1, 0, 8, 1, 5, 3, 6, 9], [0, 1, 0, 2, 3, 2, 1, 1, 1, 1, 0, 1, 3, 1, 2, 2, 1, 2, 1, 3, 1, 2, 0, 3], [39, 39, 4, 70, 99, 41], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [6, 2, 3, 0, 3, 5], [3, 2, 0, 3, 5], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 0, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 3, 2, 0], [16, 99, 25, 99, 61, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 57, 33, 24, 6, 11, 6, 5, 1, 2, 1, 1, 1, 10, 5, 5, 4], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad), tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.multiply(grad, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(tf.math.negative(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), alpha))), tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.math.square(alpha), grad))), tf.math.add(alpha, tf.math.multiply(tf.math.add(grad, tf.math.subtract(tf.math.negative(tf.math.sqrt(grad)), alpha)), tf.math.subtract(grad, alpha))))), grad), alpha)), tf.math.square(tf.math.multiply(tf.math.divide_no_nan(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.303541421890259, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 1, 4, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 0], [0, 2, 0, 3], [2, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 2, 3, 0, 4, 3, 4, 2, 0], [16, 29, 96, 99, 97, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 1, 2, 1, 1, 1, 16, 8, 8, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(beta), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.subtract(sigma, grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]