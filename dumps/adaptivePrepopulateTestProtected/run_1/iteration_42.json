[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2238242626190186, 1.8702408075332642, 1.3989253044128418, 1.0938103199005127, 0.9440132975578308, 0.843924880027771, 0.7770308256149292, 0.7348120808601379, 0.6891900300979614, 0.6686111092567444, 0.6465572118759155, 0.6186468601226807, 0.59220290184021, 0.5814334154129028, 0.5669078230857849, 0.5489019155502319, 0.5301827788352966, 0.5177485942840576, 0.5101649165153503, 0.5117051601409912, 0.4893052577972412, 0.48222053050994873, 0.4678787291049957, 0.4636562168598175, 0.45587465167045593, 0.44814491271972656, 0.43622511625289917, 0.4354732930660248, 0.4265357553958893, 0.4142124354839325, 0.40815725922584534, 0.40005847811698914, 0.4003210663795471, 0.39108172059059143, 0.38397613167762756, 0.3733125925064087, 0.3779296278953552, 0.36518383026123047, 0.3614937663078308, 0.35672062635421753, 0.3492109775543213, 0.3464018404483795, 0.339365154504776, 0.3396804630756378, 0.3307111859321594, 0.3236643671989441, 0.31257879734039307, 0.321456640958786, 0.3110101521015167, 0.31273698806762695, 0.3105744421482086, 0.29919567704200745, 0.29805487394332886, 0.2930542230606079, 0.2938970923423767, 0.28714412450790405, 0.27642741799354553, 0.2792717218399048, 0.27095139026641846], "accuracy": [0.2674679756164551, 0.4842160940170288, 0.5562012791633606, 0.6153744459152222, 0.6609430909156799, 0.6980583667755127, 0.7190595865249634, 0.7337207794189453, 0.748778223991394, 0.7569673657417297, 0.7651565074920654, 0.7724210619926453, 0.7843085527420044, 0.7864218950271606, 0.7895918488502502, 0.7981772422790527, 0.8043851256370544, 0.8068947196006775, 0.8137630224227905, 0.8169330358505249, 0.8247259259223938, 0.8222163319587708, 0.8313300609588623, 0.8313300609588623, 0.8359529972076416, 0.8407079577445984, 0.843481719493866, 0.845859169960022, 0.8451988101005554, 0.8507462739944458, 0.8564258217811584, 0.8552370667457581, 0.856689989566803, 0.8610487580299377, 0.8625016212463379, 0.868049144744873, 0.8625016212463379, 0.8684453964233398, 0.8697662353515625, 0.8705587387084961, 0.8745211958885193, 0.8692378997802734, 0.8753136992454529, 0.8790120482444763, 0.8804649114608765, 0.8819178342819214, 0.8879936337471008, 0.8854840993881226, 0.8858803510665894, 0.8870691061019897, 0.884691596031189, 0.8912957310676575, 0.891559898853302, 0.8919561505317688, 0.8942015767097473, 0.8982961177825928, 0.8972394466400146, 0.8985602855682373, 0.9022586345672607], "val_loss": [2.0391974449157715, 1.5139026641845703, 1.0389410257339478, 0.833385169506073, 0.7425699830055237, 0.6892187595367432, 0.6448782086372375, 0.6089656352996826, 0.5808338522911072, 0.5622445344924927, 0.5464872121810913, 0.5286971926689148, 0.5147833824157715, 0.4997008442878723, 0.4904420077800751, 0.4809882342815399, 0.4727213978767395, 0.4639192223548889, 0.45640018582344055, 0.4523184895515442, 0.44721314311027527, 0.4373686611652374, 0.43181267380714417, 0.4304860830307007, 0.4228566884994507, 0.4188160002231598, 0.41898444294929504, 0.4127434194087982, 0.4063724875450134, 0.4022892117500305, 0.4021618664264679, 0.400217741727829, 0.39576902985572815, 0.38946452736854553, 0.38671496510505676, 0.3825148940086365, 0.3844337463378906, 0.38124749064445496, 0.3744789659976959, 0.37623274326324463, 0.37700000405311584, 0.3697681427001953, 0.3748103380203247, 0.36868640780448914, 0.3667578101158142, 0.3650318682193756, 0.3685290217399597, 0.3615975081920624, 0.3626455068588257, 0.3592783510684967, 0.3611542284488678, 0.36187154054641724, 0.35318341851234436, 0.35676851868629456, 0.3524584174156189, 0.35657671093940735, 0.35240715742111206, 0.34654515981674194, 0.3482426404953003], "val_accuracy": [0.5376666784286499, 0.656000018119812, 0.6850000023841858, 0.7146666646003723, 0.7383333444595337, 0.7543333172798157, 0.765999972820282, 0.7773333191871643, 0.7889999747276306, 0.7926666736602783, 0.7963333129882812, 0.8029999732971191, 0.8086666464805603, 0.8209999799728394, 0.824999988079071, 0.82833331823349, 0.8306666612625122, 0.8336666822433472, 0.8379999995231628, 0.8443333506584167, 0.843666672706604, 0.8416666388511658, 0.8476666808128357, 0.8476666808128357, 0.846666693687439, 0.8483333587646484, 0.8503333330154419, 0.856333315372467, 0.8576666712760925, 0.8619999885559082, 0.8586666584014893, 0.8613333106040955, 0.859333336353302, 0.862333357334137, 0.8650000095367432, 0.8650000095367432, 0.8633333444595337, 0.8683333396911621, 0.8663333058357239, 0.8686666488647461, 0.8679999709129333, 0.8696666955947876, 0.8686666488647461, 0.871666669845581, 0.8740000128746033, 0.8726666569709778, 0.8709999918937683, 0.8736666440963745, 0.875333309173584, 0.8740000128746033, 0.8769999742507935, 0.8736666440963745, 0.875, 0.8823333382606506, 0.8769999742507935, 0.8786666393280029, 0.8726666569709778, 0.8786666393280029, 0.8809999823570251]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 4, 1, 8, 7, 5, 7, 1, 6, 2], [0, 4, 4, 4, 5, 0, 2, 3], [0, 63], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 3, 7, 4, 9, 5, 3, 4, 1, 8, 3], [0, 0, 7, 2, 6, 2, 4], [0, 26, 72], [0, 1], [0], [1], [0]], "fitness": -0.8642857074737549, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.square(tf.math.add(grad, tf.math.subtract(grad, grad))), tf.math.divide_no_nan(tf.math.add(grad, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), beta)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.subtract(tf.math.sqrt(tf.math.multiply(grad, beta)), grad), beta)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2923123836517334, 2.1895945072174072, 1.7783536911010742, 1.3355308771133423, 1.0724070072174072, 0.910403847694397, 0.8404844999313354, 0.8279418349266052, 0.7762914299964905, 0.7426278591156006, 0.7183781862258911, 0.6739460825920105, 0.6589509844779968, 0.6271098256111145, 0.6138160228729248, 0.5933830142021179, 0.5722687244415283, 0.5711460709571838, 0.5523977875709534, 0.5357382893562317, 0.5370780825614929, 0.5329553484916687, 0.5230143070220947, 0.5008671879768372, 0.47936496138572693, 0.473617821931839, 0.46232709288597107, 0.477204829454422, 0.4484848976135254, 0.4365035593509674, 0.4320758283138275, 0.42213889956474304, 0.41929712891578674, 0.40899473428726196, 0.396380752325058, 0.39621222019195557, 0.3889189064502716, 0.3756100535392761, 0.36758583784103394, 0.3657630383968353, 0.35518723726272583, 0.35596969723701477, 0.3409387767314911, 0.33687645196914673, 0.32987213134765625, 0.33066853880882263, 0.32681185007095337, 0.3267216086387634], "accuracy": [0.12838461995124817, 0.320169061422348, 0.42385417222976685, 0.5507858991622925, 0.633469820022583, 0.6711134314537048, 0.691850483417511, 0.702681303024292, 0.700700044631958, 0.7168141603469849, 0.7257958054542542, 0.7391361594200134, 0.7516840696334839, 0.765949010848999, 0.767930269241333, 0.7732135653495789, 0.7861577272415161, 0.7862898111343384, 0.7869502305984497, 0.7980451583862305, 0.7944789528846741, 0.800290584564209, 0.8033285140991211, 0.8142913579940796, 0.8211596608161926, 0.824329674243927, 0.8236692547798157, 0.8146876096725464, 0.8267071843147278, 0.8378021121025085, 0.8381983637809753, 0.8433496356010437, 0.8413683772087097, 0.8445383906364441, 0.8556333184242249, 0.8495575189590454, 0.8556333184242249, 0.8539162874221802, 0.8551049828529358, 0.8638224601745605, 0.8643507957458496, 0.8639545440673828, 0.8728041052818298, 0.8716153502464294, 0.8767666220664978, 0.8728041052818298, 0.8780874609947205, 0.8765024542808533], "val_loss": [2.2468392848968506, 2.017916440963745, 1.1366230249404907, 0.8694890141487122, 0.7770053148269653, 0.716254711151123, 0.7158004641532898, 0.6782006025314331, 0.6585363149642944, 0.636030912399292, 0.598696231842041, 0.5862288475036621, 0.566907525062561, 0.5453344583511353, 0.535706639289856, 0.5230956077575684, 0.512222945690155, 0.4971032738685608, 0.492543488740921, 0.5003829598426819, 0.48583757877349854, 0.48078376054763794, 0.4710477590560913, 0.4632378816604614, 0.46061262488365173, 0.44619613885879517, 0.4366198778152466, 0.4360019862651825, 0.4327950179576874, 0.43697983026504517, 0.43267568945884705, 0.42623743414878845, 0.4140045642852783, 0.40516743063926697, 0.4086984097957611, 0.4095126688480377, 0.41767847537994385, 0.402965247631073, 0.4013698399066925, 0.40958309173583984, 0.39579761028289795, 0.39680880308151245, 0.39925143122673035, 0.40578287839889526, 0.39287954568862915, 0.3989596366882324, 0.42096760869026184, 0.41257786750793457], "val_accuracy": [0.40566667914390564, 0.4506666660308838, 0.6453333497047424, 0.6893333196640015, 0.7123333215713501, 0.7316666841506958, 0.7459999918937683, 0.7516666650772095, 0.7639999985694885, 0.7616666555404663, 0.777999997138977, 0.7803333401679993, 0.7846666574478149, 0.7929999828338623, 0.8046666383743286, 0.8050000071525574, 0.8116666674613953, 0.8180000185966492, 0.8169999718666077, 0.8143333196640015, 0.8223333358764648, 0.8223333358764648, 0.8259999752044678, 0.8373333215713501, 0.8379999995231628, 0.8426666855812073, 0.8420000076293945, 0.8420000076293945, 0.8443333506584167, 0.843666672706604, 0.8446666598320007, 0.8536666631698608, 0.8583333492279053, 0.8610000014305115, 0.856333315372467, 0.8569999933242798, 0.8553333282470703, 0.8613333106040955, 0.8650000095367432, 0.8650000095367432, 0.8656666874885559, 0.8643333315849304, 0.8706666827201843, 0.8659999966621399, 0.8673333525657654, 0.8706666827201843, 0.8653333187103271, 0.8700000047683716]}, "mapping_values": [1, 10, 5, 5, 3, 18, 10, 8, 2, 18, 11, 7, 3, 2, 1, 1, 0], "tree_depth": 19}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8602856993675232, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2226288318634033, 1.865882158279419, 1.3869600296020508, 1.093024492263794, 0.9381987452507019, 0.8433055877685547, 0.7759300470352173, 0.722166895866394, 0.683601438999176, 0.6618251800537109, 0.6344330310821533, 0.6120889782905579, 0.5933576822280884, 0.577739953994751, 0.5657800436019897, 0.5474833250045776, 0.5306791067123413, 0.5328254699707031, 0.515509843826294, 0.5032639503479004, 0.4863353371620178, 0.4826868772506714, 0.4732688069343567, 0.4664851129055023, 0.4575654864311218, 0.45109617710113525, 0.43607059121131897, 0.432523638010025, 0.42803993821144104, 0.4144042432308197, 0.41647428274154663, 0.411072701215744, 0.40871867537498474, 0.40298372507095337, 0.39116260409355164, 0.38634228706359863, 0.37683627009391785, 0.37868860363960266, 0.36808308959007263, 0.36354750394821167, 0.3620709180831909, 0.35343611240386963, 0.35697251558303833], "accuracy": [0.27222296595573425, 0.48989564180374146, 0.5659754276275635, 0.6160348653793335, 0.6647734642028809, 0.7017567157745361, 0.7209087014198303, 0.7349095344543457, 0.7561748623847961, 0.7643640041351318, 0.7736098170280457, 0.7800818681716919, 0.7872143983840942, 0.7905164361000061, 0.8016114234924316, 0.8039889335632324, 0.8078193068504333, 0.8070268034934998, 0.819442629814148, 0.8169330358505249, 0.8293488025665283, 0.8329150676727295, 0.8341038227081299, 0.8350284099578857, 0.8392550349235535, 0.8442742228507996, 0.8437458872795105, 0.8477083444595337, 0.847840428352356, 0.8512746095657349, 0.8515387773513794, 0.8512746095657349, 0.8561616539955139, 0.8555012345314026, 0.8626337051391602, 0.8610487580299377, 0.8652753829956055, 0.8631620407104492, 0.868049144744873, 0.8692378997802734, 0.8712190985679626, 0.8776912093162537, 0.8708229064941406], "val_loss": [2.0395312309265137, 1.5117512941360474, 1.0358394384384155, 0.8288633823394775, 0.7342850565910339, 0.6793152093887329, 0.6344976425170898, 0.5974060297012329, 0.569333016872406, 0.5486499667167664, 0.5341251492500305, 0.5147663354873657, 0.5013860464096069, 0.4842151701450348, 0.477059543132782, 0.46443480253219604, 0.46126458048820496, 0.44720882177352905, 0.4397042989730835, 0.4304107129573822, 0.4199637770652771, 0.4190419018268585, 0.41313737630844116, 0.40394750237464905, 0.40692171454429626, 0.392361581325531, 0.38714176416397095, 0.384739488363266, 0.3780682682991028, 0.37882938981056213, 0.3715401291847229, 0.3755667209625244, 0.3645918667316437, 0.3603478670120239, 0.35423973202705383, 0.35380885004997253, 0.35586878657341003, 0.3494521379470825, 0.34890592098236084, 0.34291478991508484, 0.34126123785972595, 0.34046778082847595, 0.33997488021850586], "val_accuracy": [0.5519999861717224, 0.6613333225250244, 0.687333345413208, 0.7113333344459534, 0.7329999804496765, 0.753333330154419, 0.765666663646698, 0.7749999761581421, 0.7863333225250244, 0.7979999780654907, 0.8040000200271606, 0.8053333163261414, 0.8146666884422302, 0.8199999928474426, 0.8243333101272583, 0.8323333263397217, 0.8343333601951599, 0.8333333134651184, 0.8366666436195374, 0.8420000076293945, 0.8446666598320007, 0.8489999771118164, 0.847000002861023, 0.8489999771118164, 0.8536666631698608, 0.8546666502952576, 0.8579999804496765, 0.8576666712760925, 0.8600000143051147, 0.8616666793823242, 0.862666666507721, 0.8616666793823242, 0.8659999966621399, 0.8709999918937683, 0.871999979019165, 0.8693333268165588, 0.871999979019165, 0.8769999742507935, 0.8759999871253967, 0.8743333220481873, 0.8740000128746033, 0.8759999871253967, 0.875333309173584]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8414285778999329, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5374696254730225, 0.8372017741203308, 0.6905066967010498, 0.6186741590499878, 0.5644108057022095, 0.5382276177406311, 0.5073526501655579, 0.5136116743087769, 0.5050885677337646, 0.5372527241706848, 0.4936087131500244, 0.4505230784416199, 0.45680609345436096, 0.47847437858581543, 0.45799940824508667, 0.43768244981765747, 0.4496457874774933, 0.43070119619369507, 0.4630596935749054, 0.4369080364704132, 0.45404914021492004, 0.46412158012390137, 0.47984617948532104], "accuracy": [0.46506404876708984, 0.7083608508110046, 0.7471932172775269, 0.7779685854911804, 0.7917051911354065, 0.7989697456359863, 0.8148196935653687, 0.8201030492782593, 0.8171972036361694, 0.8164047002792358, 0.824329674243927, 0.8321225643157959, 0.8322546482086182, 0.8323867321014404, 0.8309338092803955, 0.8409721255302429, 0.8429533839225769, 0.8486329317092896, 0.8449346423149109, 0.8441421389579773, 0.846387505531311, 0.8562937378883362, 0.8315942287445068], "val_loss": [0.7168712019920349, 0.6033005118370056, 0.5221006870269775, 0.5061205625534058, 0.469620943069458, 0.4857170283794403, 0.4880084693431854, 0.4619372487068176, 0.4720626771450043, 0.45124006271362305, 0.4663894474506378, 0.4423756003379822, 0.47347208857536316, 0.47358134388923645, 0.429269939661026, 0.45663997530937195, 0.45631277561187744, 0.468251496553421, 0.4709354639053345, 0.4838343858718872, 0.45205411314964294, 0.47893214225769043, 0.5329328775405884], "val_accuracy": [0.7360000014305115, 0.7789999842643738, 0.7993333339691162, 0.8146666884422302, 0.831333339214325, 0.8286666870117188, 0.8376666903495789, 0.8426666855812073, 0.8393333554267883, 0.8539999723434448, 0.8476666808128357, 0.8443333506584167, 0.8533333539962769, 0.8526666760444641, 0.8650000095367432, 0.8560000061988831, 0.856333315372467, 0.8673333525657654, 0.8656666874885559, 0.859666645526886, 0.8600000143051147, 0.8529999852180481, 0.8553333282470703]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 3, 5, 3, 4, 1, 6, 9, 9], [0, 2, 0, 3, 1], [0, 33, 3, 90], [0, 1], [0, 0, 0], [0], [43], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [2, 3, 9, 6, 8, 1, 4, 1, 4, 2, 8, 1, 5, 1, 2, 2, 5], [0, 0, 0, 3, 0, 3, 3, 1, 2, 0, 5, 3], [16, 99, 96, 81, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 13, 9, 4, 4, 2, 1, 1, 1, 29, 17, 12, 6], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.pow(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), beta), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.pow(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(sigma)))), tf.math.subtract(tf.math.square(alpha), tf.math.subtract(beta, tf.math.add(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.square(grad)), sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [3, 0, 0, 0, 2], [10, 99, 40], [0, 1], [0], [0], [0], [0, 0, 0, 1], [0, 0, 0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 4, 3, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.254922439783883e+29, 32.27682876586914, 112.51338195800781, 242.7613525390625, 423.6181945800781, 654.646484375], "accuracy": [0.08558975160121918, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [11.92846965789795, 71.42156219482422, 181.18629455566406, 341.2608642578125, 551.5238037109375, 812.0408325195312], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 6, 3, 5], [0, 2, 1, 1], [16, 16], [0, 0, 0, 1, 1], [0, 2, 5], [0, 3], [99], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [4, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 1, 3, 3, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 8, 4, 4, 1, 5, 3, 2, 1, 10, 5, 5, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), alpha), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.math.divide_no_nan(sigma, tf.math.sqrt(sigma))))", "other_info": {"loss": [2.328540325164795, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.10170386731624603, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [5.593977928161621, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [5, 2, 3, 0, 3], [2, 2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 4, 8, 1, 7, 5], [0, 3, 2, 3], [16, 16], [0, 1, 0, 0], [0, 2, 0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 0, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 7, 2, 4, 5, 2, 0, 7, 6, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09028571099042892, "mapping_values": [1, 7, 4, 3, 0, 7, 4, 3, 1, 2, 1, 1, 1, 11, 6, 5, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(grad), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(alpha, tf.math.divide_no_nan(grad, tf.math.sqrt(beta)))), tf.math.subtract(grad, grad))", "other_info": {"loss": [2.309809684753418, 2.3095932006835938, 2.308741331100464, 2.3096811771392822, 2.309666872024536, 2.310702085494995], "accuracy": [0.0944393053650856, 0.0948355570435524, 0.09430722147226334, 0.09087307006120682, 0.09642054885625839, 0.0956280529499054], "val_loss": [2.308760643005371, 2.308760643005371, 2.308760643005371, 2.308760643005371, 2.308760643005371, 2.308760643005371], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}]