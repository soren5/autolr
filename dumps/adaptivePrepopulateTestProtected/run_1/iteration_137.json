[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8677142858505249, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2236087322235107, 1.8597699403762817, 1.3826195001602173, 1.080545425415039, 0.9324408769607544, 0.8257570266723633, 0.7635774612426758, 0.7193854451179504, 0.6780837774276733, 0.6522203087806702, 0.6255406737327576, 0.6125442981719971, 0.5892824530601501, 0.5632203817367554, 0.5468633770942688, 0.5337510108947754, 0.525711178779602, 0.5090479254722595, 0.504328727722168, 0.4865536391735077, 0.4802618622779846, 0.46578162908554077, 0.4531654715538025, 0.448048859834671, 0.4456918239593506, 0.43508803844451904, 0.425967812538147, 0.42002245783805847, 0.41770583391189575, 0.413348913192749, 0.4126984775066376, 0.40243077278137207, 0.3928305506706238, 0.3835641145706177, 0.3800094723701477, 0.3701219856739044, 0.36882904171943665, 0.3615719676017761, 0.36154529452323914, 0.3520634174346924, 0.35175734758377075, 0.3487267792224884, 0.34030237793922424, 0.3374500572681427, 0.3276285231113434, 0.3282046616077423, 0.3230203688144684, 0.3147352337837219, 0.3221608102321625, 0.30785828828811646, 0.30346599221229553, 0.29759302735328674, 0.294314980506897, 0.2935139238834381, 0.28651824593544006, 0.2835772633552551, 0.2790795564651489, 0.27289316058158875, 0.27768415212631226, 0.2662915289402008, 0.26403412222862244, 0.26348990201950073], "accuracy": [0.2658829689025879, 0.49927353858947754, 0.5694096088409424, 0.6288469433784485, 0.6668868064880371, 0.705058753490448, 0.7231541275978088, 0.7400607466697693, 0.7539294958114624, 0.7597411274909973, 0.7770439982414246, 0.785629391670227, 0.7887993454933167, 0.7971205711364746, 0.8004226684570312, 0.8087438941001892, 0.8061022162437439, 0.8193105459213257, 0.8198388814926147, 0.8293488025665283, 0.8310658931732178, 0.8333113193511963, 0.8418967127799988, 0.8426892161369324, 0.8412362933158875, 0.8444063067436218, 0.8494254350662231, 0.8544445633888245, 0.8539162874221802, 0.8521991968154907, 0.8573504090309143, 0.8590674996376038, 0.8584070801734924, 0.8650112152099609, 0.8658037185668945, 0.8705587387084961, 0.8691058158874512, 0.8717474341392517, 0.8692378997802734, 0.8730682730674744, 0.8779553771018982, 0.8792761564254761, 0.8833707571029663, 0.8776912093162537, 0.8844274282455444, 0.8837670087814331, 0.8877294659614563, 0.8897107243537903, 0.8842953443527222, 0.8886540532112122, 0.8939374089241028, 0.8948619961738586, 0.8976356983184814, 0.8960506916046143, 0.8965790271759033, 0.9014661312103271, 0.9000132083892822, 0.9078060984611511, 0.9021265506744385, 0.9001452922821045, 0.9038436412811279, 0.9096552729606628], "val_loss": [2.036953926086426, 1.5040545463562012, 1.0426584482192993, 0.8409463763237, 0.7594225406646729, 0.6966603994369507, 0.6525014042854309, 0.6201737523078918, 0.5948908925056458, 0.5715779066085815, 0.5577229857444763, 0.538262128829956, 0.5291547179222107, 0.5161558985710144, 0.4986051023006439, 0.486467570066452, 0.4889475107192993, 0.47193998098373413, 0.46568596363067627, 0.45801663398742676, 0.45140618085861206, 0.4416302442550659, 0.4402596056461334, 0.43146005272865295, 0.43259432911872864, 0.42198294401168823, 0.4184812009334564, 0.4186563193798065, 0.4097403287887573, 0.4058324694633484, 0.4039619565010071, 0.40022802352905273, 0.3986121416091919, 0.3940879702568054, 0.39311474561691284, 0.387264609336853, 0.3833668529987335, 0.3867155909538269, 0.3808222711086273, 0.378300279378891, 0.3782704770565033, 0.3715784549713135, 0.3827340602874756, 0.3700459897518158, 0.3701119124889374, 0.36438775062561035, 0.3650389313697815, 0.36928945779800415, 0.3653799593448639, 0.3569204807281494, 0.3581184446811676, 0.3568068742752075, 0.35957735776901245, 0.3528473377227783, 0.35276418924331665, 0.3517032563686371, 0.35313695669174194, 0.3495345413684845, 0.348426878452301, 0.349686861038208, 0.3509235978126526, 0.35019567608833313], "val_accuracy": [0.5433333516120911, 0.6543333530426025, 0.6740000247955322, 0.7006666660308838, 0.7210000157356262, 0.746666669845581, 0.7549999952316284, 0.7620000243186951, 0.7676666378974915, 0.7823333144187927, 0.781333327293396, 0.7916666865348816, 0.7953333258628845, 0.8043333292007446, 0.8153333067893982, 0.8173333406448364, 0.8180000185966492, 0.8253333568572998, 0.8289999961853027, 0.8263333439826965, 0.8343333601951599, 0.8393333554267883, 0.8376666903495789, 0.8426666855812073, 0.8379999995231628, 0.8429999947547913, 0.8450000286102295, 0.8483333587646484, 0.8506666421890259, 0.8519999980926514, 0.8556666374206543, 0.8560000061988831, 0.856333315372467, 0.859666645526886, 0.8616666793823242, 0.8636666536331177, 0.862666666507721, 0.862333357334137, 0.8633333444595337, 0.8643333315849304, 0.8640000224113464, 0.8663333058357239, 0.8619999885559082, 0.8676666617393494, 0.8676666617393494, 0.8709999918937683, 0.8669999837875366, 0.8659999966621399, 0.8683333396911621, 0.8730000257492065, 0.8713333606719971, 0.8756666779518127, 0.8726666569709778, 0.8743333220481873, 0.8766666650772095, 0.8759999871253967, 0.878333330154419, 0.8766666650772095, 0.8776666522026062, 0.8776666522026062, 0.8773333430290222, 0.8743333220481873]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 7, 7, 3, 0, 0], [0, 1, 4, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8625714182853699, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(alpha, tf.math.negative(tf.math.negative(grad))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2934751510620117, 2.192117214202881, 1.7887831926345825, 1.3541682958602905, 1.0627487897872925, 0.9067334532737732, 0.8479413986206055, 0.7954360842704773, 0.7442107200622559, 0.7331604957580566, 0.6958501935005188, 0.6635688543319702, 0.6299605965614319, 0.605754017829895, 0.5911605358123779, 0.5807942748069763, 0.5723959803581238, 0.5521926283836365, 0.5526049733161926, 0.5398275256156921, 0.5291521549224854, 0.5130939483642578, 0.5040059685707092, 0.4987100660800934, 0.4898442327976227, 0.46447181701660156, 0.4637596011161804, 0.45396316051483154, 0.4504494369029999, 0.42970573902130127, 0.4233584702014923, 0.41597431898117065, 0.417187362909317, 0.4051578938961029, 0.3991752862930298, 0.39435669779777527, 0.3907688856124878, 0.37777069211006165, 0.36638063192367554, 0.36227384209632874, 0.3591481149196625, 0.3524656593799591, 0.35846513509750366, 0.34770846366882324, 0.34240788221359253, 0.32111287117004395, 0.3310859799385071, 0.31845909357070923, 0.32318252325057983, 0.3133765459060669, 0.31779372692108154, 0.30189844965934753, 0.2929407060146332, 0.2877078056335449, 0.2909963130950928, 0.2837313711643219, 0.2825891077518463, 0.27634280920028687, 0.2672915756702423, 0.2812677025794983, 0.2803831696510315, 0.28428977727890015, 0.259647399187088, 0.2821894884109497], "accuracy": [0.12336547672748566, 0.32333904504776, 0.431779146194458, 0.5325584411621094, 0.6404702067375183, 0.6633205413818359, 0.6873596906661987, 0.7063795924186707, 0.7124554514884949, 0.7226257920265198, 0.7362303733825684, 0.7445515990257263, 0.7626469135284424, 0.7670056819915771, 0.7738739848136902, 0.7798177003860474, 0.7791573405265808, 0.7852331399917603, 0.7961959838867188, 0.7981772422790527, 0.7954035401344299, 0.8059701323509216, 0.8041210174560547, 0.8033285140991211, 0.8158763647079468, 0.8232730031013489, 0.8230088353157043, 0.8281601071357727, 0.8249900937080383, 0.8354246616363525, 0.8355567455291748, 0.839519202709198, 0.8417646288871765, 0.8481045961380005, 0.847840428352356, 0.8507462739944458, 0.8511425256729126, 0.8560295701026917, 0.860652506351471, 0.860652506351471, 0.8625016212463379, 0.8651432991027832, 0.8627657890319824, 0.8685774803161621, 0.8697662353515625, 0.8709549307823181, 0.8712190985679626, 0.8693699836730957, 0.8768987059593201, 0.8791441321372986, 0.8812574148178101, 0.882710337638855, 0.8782195448875427, 0.8837670087814331, 0.8829745054244995, 0.8881257176399231, 0.8926165699958801, 0.8902390599250793, 0.89552241563797, 0.8922203183174133, 0.889578640460968, 0.8877294659614563, 0.8976356983184814, 0.8882578015327454], "val_loss": [2.247422933578491, 2.0290729999542236, 1.1604400873184204, 0.89352947473526, 0.765526533126831, 0.7283696532249451, 0.6937302947044373, 0.6648423075675964, 0.6328833103179932, 0.6279153823852539, 0.5932912826538086, 0.573066234588623, 0.5659558773040771, 0.5528174638748169, 0.5480949878692627, 0.5391045212745667, 0.5405545830726624, 0.5419979095458984, 0.5437296032905579, 0.5277568101882935, 0.5303995609283447, 0.5270171761512756, 0.5200080275535583, 0.5051507353782654, 0.5038174390792847, 0.4910753667354584, 0.48749613761901855, 0.4818470776081085, 0.47526830434799194, 0.4650111198425293, 0.46607038378715515, 0.45985734462738037, 0.4547041952610016, 0.45470982789993286, 0.44688817858695984, 0.4609813988208771, 0.44758284091949463, 0.4523880183696747, 0.4483278691768646, 0.4389873445034027, 0.43336740136146545, 0.43925899267196655, 0.45701754093170166, 0.4512863755226135, 0.4489951431751251, 0.44635945558547974, 0.45896729826927185, 0.458271324634552, 0.45992326736450195, 0.4747510552406311, 0.47991642355918884, 0.45790615677833557, 0.4526912569999695, 0.45486336946487427, 0.46674996614456177, 0.4921402037143707, 0.48934024572372437, 0.4741831123828888, 0.4881344735622406, 0.4727867841720581, 0.48001334071159363, 0.4621173143386841, 0.47228625416755676, 0.4752591550350189], "val_accuracy": [0.42766666412353516, 0.46266666054725647, 0.6349999904632568, 0.6786666512489319, 0.7183333039283752, 0.7300000190734863, 0.7453333139419556, 0.7453333139419556, 0.749666690826416, 0.7596666812896729, 0.768666684627533, 0.7796666622161865, 0.7883333563804626, 0.79666668176651, 0.800000011920929, 0.8003333210945129, 0.8013333082199097, 0.7986666560173035, 0.8090000152587891, 0.8119999766349792, 0.8019999861717224, 0.812333345413208, 0.8193333148956299, 0.828000009059906, 0.8230000138282776, 0.8316666483879089, 0.8293333053588867, 0.8346666693687439, 0.8360000252723694, 0.8386666774749756, 0.8356666564941406, 0.8423333168029785, 0.8420000076293945, 0.8489999771118164, 0.847000002861023, 0.8443333506584167, 0.8486666679382324, 0.8573333621025085, 0.8573333621025085, 0.8493333458900452, 0.8519999980926514, 0.8586666584014893, 0.8613333106040955, 0.859333336353302, 0.8493333458900452, 0.8569999933242798, 0.8603333234786987, 0.8633333444595337, 0.859666645526886, 0.8613333106040955, 0.8603333234786987, 0.8619999885559082, 0.8650000095367432, 0.8666666746139526, 0.8650000095367432, 0.8616666793823242, 0.8583333492279053, 0.8656666874885559, 0.8686666488647461, 0.8619999885559082, 0.8676666617393494, 0.8679999709129333, 0.8636666536331177, 0.8643333315849304]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 10, 6, 4, 1, 2, 1, 1, 0], "tree_depth": 15}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8251428604125977, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5215121507644653, 0.8096678853034973, 0.7044703364372253, 0.6143434643745422, 0.5840927958488464, 0.5607359409332275, 0.5155633091926575, 0.49473416805267334, 0.4723367989063263, 0.4434199035167694, 0.4424079954624176, 0.4345868229866028, 0.4116872251033783, 0.4536251127719879, 0.4855363667011261, 0.47746601700782776, 0.5316173434257507, 0.5499335527420044, 0.5673613548278809, 0.5200389623641968], "accuracy": [0.4854048490524292, 0.7186633348464966, 0.7421740889549255, 0.7614582180976868, 0.7823272943496704, 0.7996301651000977, 0.8132346868515015, 0.8216879963874817, 0.817989706993103, 0.8401796221733093, 0.8403117060661316, 0.8453308939933777, 0.8508783578872681, 0.8378021121025085, 0.8244617581367493, 0.8507462739944458, 0.837141752243042, 0.8393871188163757, 0.8300092220306396, 0.8418967127799988], "val_loss": [0.7875932455062866, 0.6520727276802063, 0.5562099814414978, 0.5090224742889404, 0.5020127892494202, 0.48818260431289673, 0.47368961572647095, 0.47992798686027527, 0.48189476132392883, 0.5233995318412781, 0.4723019301891327, 0.54443359375, 0.5365259647369385, 0.5049825310707092, 0.5765470266342163, 0.6126118898391724, 0.6619024872779846, 0.5982713103294373, 0.607968807220459, 0.631881833076477], "val_accuracy": [0.7210000157356262, 0.7593333125114441, 0.7736666798591614, 0.8050000071525574, 0.8133333325386047, 0.8270000219345093, 0.82833331823349, 0.8320000171661377, 0.8393333554267883, 0.8393333554267883, 0.8423333168029785, 0.8306666612625122, 0.8389999866485596, 0.8180000185966492, 0.8513333201408386, 0.8429999947547913, 0.8356666564941406, 0.8339999914169312, 0.8410000205039978, 0.8293333053588867]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 4, 5], [0, 2, 0, 0], [16, 16, 25], [0, 0], [9], [2], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [6, 8, 2, 6, 8, 1, 4, 1, 4, 2, 8], [0, 2, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 10, 6, 4, 3, 1, 1, 0, 1, 11, 6, 5, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(beta), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [45089580.0, 335687776.0, 771976832.0, 1287789440.0, 1834866432.0, 2418462464.0], "accuracy": [0.09708096832036972, 0.10276053100824356, 0.10487385839223862, 0.1002509593963623, 0.10117553919553757, 0.09774138033390045], "val_loss": [139360736.0, 449815264.0, 830797760.0, 1249432320.0, 1691032192.0, 2147694848.0], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 8, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [2], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 5, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 5, 4, 1, 1, 1, 0, 1, 1, 20, 11, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), tf.math.square(alpha)), tf.math.sqrt(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [2, 2, 3, 0, 3, 5], [0, 2, 0, 3, 2], [16, 19], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 7, 4, 5, 3], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0, 7, 5, 5], [13, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 11, 6, 5, 2, 1, 0, 1, 1, 28, 15, 13, 5], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, alpha)))), beta)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.square(grad), tf.math.multiply(grad, grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 0], [16, 16, 74], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 3, 6, 8, 5, 4, 1, 4, 2, 8], [0, 0, 0, 3, 2, 0, 3, 1, 2, 0], [16, 15, 96, 99, 61, 88]], "fitness": -0.09942857176065445, "mapping_values": [1, 10, 6, 4, 2, 10, 6, 4, 3, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(beta, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha)", "other_info": {"loss": [1.3141018243223347e+34, 1.531090182700347e+34, 1.514311019613869e+34, 1.521292011083407e+34, 1.568414322472809e+34, 1.5240466752588249e+34], "accuracy": [0.10170386731624603, 0.0956280529499054, 0.09536388516426086, 0.1014397069811821, 0.10368511080741882, 0.09919429570436478], "val_loss": [1.4544605801225465e+34, 1.4544605801225465e+34, 1.4544607039165504e+34, 1.4544607039165504e+34, 1.4544607039165504e+34, 1.4544610752985622e+34], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]