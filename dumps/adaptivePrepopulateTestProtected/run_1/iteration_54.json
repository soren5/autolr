[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2238242626190186, 1.8702408075332642, 1.3989253044128418, 1.0938103199005127, 0.9440132975578308, 0.843924880027771, 0.7770308256149292, 0.7348120808601379, 0.6891900300979614, 0.6686111092567444, 0.6465572118759155, 0.6186468601226807, 0.59220290184021, 0.5814334154129028, 0.5669078230857849, 0.5489019155502319, 0.5301827788352966, 0.5177485942840576, 0.5101649165153503, 0.5117051601409912, 0.4893052577972412, 0.48222053050994873, 0.4678787291049957, 0.4636562168598175, 0.45587465167045593, 0.44814491271972656, 0.43622511625289917, 0.4354732930660248, 0.4265357553958893, 0.4142124354839325, 0.40815725922584534, 0.40005847811698914, 0.4003210663795471, 0.39108172059059143, 0.38397613167762756, 0.3733125925064087, 0.3779296278953552, 0.36518383026123047, 0.3614937663078308, 0.35672062635421753, 0.3492109775543213, 0.3464018404483795, 0.339365154504776, 0.3396804630756378, 0.3307111859321594, 0.3236643671989441, 0.31257879734039307, 0.321456640958786, 0.3110101521015167, 0.31273698806762695, 0.3105744421482086, 0.29919567704200745, 0.29805487394332886, 0.2930542230606079, 0.2938970923423767, 0.28714412450790405, 0.27642741799354553, 0.2792717218399048, 0.27095139026641846], "accuracy": [0.2674679756164551, 0.4842160940170288, 0.5562012791633606, 0.6153744459152222, 0.6609430909156799, 0.6980583667755127, 0.7190595865249634, 0.7337207794189453, 0.748778223991394, 0.7569673657417297, 0.7651565074920654, 0.7724210619926453, 0.7843085527420044, 0.7864218950271606, 0.7895918488502502, 0.7981772422790527, 0.8043851256370544, 0.8068947196006775, 0.8137630224227905, 0.8169330358505249, 0.8247259259223938, 0.8222163319587708, 0.8313300609588623, 0.8313300609588623, 0.8359529972076416, 0.8407079577445984, 0.843481719493866, 0.845859169960022, 0.8451988101005554, 0.8507462739944458, 0.8564258217811584, 0.8552370667457581, 0.856689989566803, 0.8610487580299377, 0.8625016212463379, 0.868049144744873, 0.8625016212463379, 0.8684453964233398, 0.8697662353515625, 0.8705587387084961, 0.8745211958885193, 0.8692378997802734, 0.8753136992454529, 0.8790120482444763, 0.8804649114608765, 0.8819178342819214, 0.8879936337471008, 0.8854840993881226, 0.8858803510665894, 0.8870691061019897, 0.884691596031189, 0.8912957310676575, 0.891559898853302, 0.8919561505317688, 0.8942015767097473, 0.8982961177825928, 0.8972394466400146, 0.8985602855682373, 0.9022586345672607], "val_loss": [2.0391974449157715, 1.5139026641845703, 1.0389410257339478, 0.833385169506073, 0.7425699830055237, 0.6892187595367432, 0.6448782086372375, 0.6089656352996826, 0.5808338522911072, 0.5622445344924927, 0.5464872121810913, 0.5286971926689148, 0.5147833824157715, 0.4997008442878723, 0.4904420077800751, 0.4809882342815399, 0.4727213978767395, 0.4639192223548889, 0.45640018582344055, 0.4523184895515442, 0.44721314311027527, 0.4373686611652374, 0.43181267380714417, 0.4304860830307007, 0.4228566884994507, 0.4188160002231598, 0.41898444294929504, 0.4127434194087982, 0.4063724875450134, 0.4022892117500305, 0.4021618664264679, 0.400217741727829, 0.39576902985572815, 0.38946452736854553, 0.38671496510505676, 0.3825148940086365, 0.3844337463378906, 0.38124749064445496, 0.3744789659976959, 0.37623274326324463, 0.37700000405311584, 0.3697681427001953, 0.3748103380203247, 0.36868640780448914, 0.3667578101158142, 0.3650318682193756, 0.3685290217399597, 0.3615975081920624, 0.3626455068588257, 0.3592783510684967, 0.3611542284488678, 0.36187154054641724, 0.35318341851234436, 0.35676851868629456, 0.3524584174156189, 0.35657671093940735, 0.35240715742111206, 0.34654515981674194, 0.3482426404953003], "val_accuracy": [0.5376666784286499, 0.656000018119812, 0.6850000023841858, 0.7146666646003723, 0.7383333444595337, 0.7543333172798157, 0.765999972820282, 0.7773333191871643, 0.7889999747276306, 0.7926666736602783, 0.7963333129882812, 0.8029999732971191, 0.8086666464805603, 0.8209999799728394, 0.824999988079071, 0.82833331823349, 0.8306666612625122, 0.8336666822433472, 0.8379999995231628, 0.8443333506584167, 0.843666672706604, 0.8416666388511658, 0.8476666808128357, 0.8476666808128357, 0.846666693687439, 0.8483333587646484, 0.8503333330154419, 0.856333315372467, 0.8576666712760925, 0.8619999885559082, 0.8586666584014893, 0.8613333106040955, 0.859333336353302, 0.862333357334137, 0.8650000095367432, 0.8650000095367432, 0.8633333444595337, 0.8683333396911621, 0.8663333058357239, 0.8686666488647461, 0.8679999709129333, 0.8696666955947876, 0.8686666488647461, 0.871666669845581, 0.8740000128746033, 0.8726666569709778, 0.8709999918937683, 0.8736666440963745, 0.875333309173584, 0.8740000128746033, 0.8769999742507935, 0.8736666440963745, 0.875, 0.8823333382606506, 0.8769999742507935, 0.8786666393280029, 0.8726666569709778, 0.8786666393280029, 0.8809999823570251]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8637142777442932, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2215399742126465, 1.8593310117721558, 1.379677653312683, 1.0904886722564697, 0.938701868057251, 0.8425321578979492, 0.7797096371650696, 0.7384479641914368, 0.6891568899154663, 0.6628478169441223, 0.6395806074142456, 0.6243017315864563, 0.5954875946044922, 0.5824376344680786, 0.5658526420593262, 0.5495978593826294, 0.5381349921226501, 0.5236043930053711, 0.5142109394073486, 0.510039210319519, 0.49607348442077637, 0.4866410195827484, 0.4738009572029114, 0.4637880027294159, 0.45354631543159485, 0.4462834596633911, 0.43604588508605957, 0.43531617522239685, 0.4300774931907654, 0.42802855372428894, 0.4129174053668976, 0.40751123428344727, 0.4023153781890869, 0.39799174666404724, 0.3847613036632538, 0.3872491419315338, 0.38406670093536377, 0.37397482991218567, 0.3609641492366791, 0.36592864990234375, 0.3595920503139496, 0.354850709438324, 0.34752389788627625, 0.34948328137397766, 0.3402661979198456, 0.34507977962493896], "accuracy": [0.27539294958114624, 0.4908202290534973, 0.5620129704475403, 0.6155065298080444, 0.670320987701416, 0.7009642124176025, 0.718399167060852, 0.7354378700256348, 0.743891179561615, 0.7582882046699524, 0.763967752456665, 0.7721568942070007, 0.7794214487075806, 0.7854973077774048, 0.7931581139564514, 0.7947431206703186, 0.8045172095298767, 0.8125742673873901, 0.8141592741012573, 0.8169330358505249, 0.822348415851593, 0.8259146809577942, 0.828292191028595, 0.8358209133148193, 0.837141752243042, 0.8401796221733093, 0.8422929644584656, 0.8444063067436218, 0.847840428352356, 0.8492933511734009, 0.8536521196365356, 0.854708731174469, 0.8557654023170471, 0.8594637513160706, 0.8614450097084045, 0.863558292388916, 0.8603883385658264, 0.8668603897094727, 0.8709549307823181, 0.868049144744873, 0.8685774803161621, 0.874389111995697, 0.8768987059593201, 0.8768987059593201, 0.8765024542808533, 0.872407853603363], "val_loss": [2.0367424488067627, 1.5053014755249023, 1.04188871383667, 0.8398546576499939, 0.7471346259117126, 0.6884435415267944, 0.6447343230247498, 0.6149157881736755, 0.587410569190979, 0.5605515241622925, 0.548384428024292, 0.5300288200378418, 0.5137333869934082, 0.4985481798648834, 0.48569628596305847, 0.48016637563705444, 0.4661884903907776, 0.4586736261844635, 0.4483705163002014, 0.443600594997406, 0.4319717586040497, 0.42805713415145874, 0.4205147325992584, 0.4189232289791107, 0.4078678488731384, 0.4024907350540161, 0.4002181887626648, 0.3967442214488983, 0.39412397146224976, 0.3892349302768707, 0.38606974482536316, 0.3809317350387573, 0.3756541311740875, 0.3727765679359436, 0.3736306428909302, 0.36814582347869873, 0.3651074171066284, 0.3629571199417114, 0.36005741357803345, 0.35709479451179504, 0.35513776540756226, 0.3525213897228241, 0.3497229814529419, 0.35159170627593994, 0.35336339473724365, 0.343497633934021], "val_accuracy": [0.5460000038146973, 0.6493333578109741, 0.6703333258628845, 0.7009999752044678, 0.7266666889190674, 0.7476666569709778, 0.7509999871253967, 0.765999972820282, 0.7870000004768372, 0.7863333225250244, 0.8040000200271606, 0.8076666593551636, 0.8166666626930237, 0.8193333148956299, 0.8240000009536743, 0.8289999961853027, 0.8343333601951599, 0.8413333296775818, 0.8429999947547913, 0.847000002861023, 0.847000002861023, 0.846666693687439, 0.8533333539962769, 0.8529999852180481, 0.8539999723434448, 0.8566666841506958, 0.8546666502952576, 0.8550000190734863, 0.8603333234786987, 0.8569999933242798, 0.859333336353302, 0.8613333106040955, 0.8673333525657654, 0.8693333268165588, 0.8646666407585144, 0.871999979019165, 0.8656666874885559, 0.8686666488647461, 0.8663333058357239, 0.874666690826416, 0.8756666779518127, 0.875333309173584, 0.8756666779518127, 0.875333309173584, 0.8723333477973938, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 1], [0, 2], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8517143130302429, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292766809463501, 2.1902499198913574, 1.7673444747924805, 1.363142490386963, 1.0925519466400146, 0.9322300553321838, 0.83536696434021, 0.8183903694152832, 0.7611592411994934, 0.733250617980957, 0.697930097579956, 0.6718717217445374, 0.6541231870651245, 0.6441370248794556, 0.6158322691917419, 0.5965184569358826, 0.5910791158676147, 0.5709700584411621, 0.5700187683105469, 0.5573817491531372, 0.544768750667572, 0.5262474417686462, 0.5258798003196716, 0.5025014281272888, 0.4945172965526581, 0.48920121788978577, 0.4808022975921631, 0.4700825810432434, 0.4628525376319885, 0.46152353286743164, 0.44555026292800903, 0.4272576570510864, 0.43346312642097473, 0.4208328127861023, 0.4205890893936157, 0.4049028754234314, 0.39313411712646484, 0.3898288607597351, 0.38415011763572693, 0.37648648023605347, 0.3698844909667969, 0.36809980869293213, 0.36321061849594116, 0.3641796410083771, 0.3581642806529999, 0.34560924768447876, 0.35067102313041687, 0.3526887595653534, 0.34678706526756287, 0.3329900801181793, 0.33488741517066956, 0.3339431881904602], "accuracy": [0.13089419901371002, 0.33218860626220703, 0.4345529079437256, 0.5433892607688904, 0.6387531161308289, 0.6610751748085022, 0.6901333928108215, 0.7029454708099365, 0.7096816897392273, 0.7190595865249634, 0.7437590956687927, 0.7416457533836365, 0.7499669790267944, 0.750231146812439, 0.7626469135284424, 0.7716285586357117, 0.7800818681716919, 0.7852331399917603, 0.7880068421363831, 0.7931581139564514, 0.7921014428138733, 0.8013472557067871, 0.800290584564209, 0.8120459914207458, 0.8101968169212341, 0.8173292875289917, 0.8182538747787476, 0.8257825970649719, 0.8259146809577942, 0.8269713521003723, 0.8313300609588623, 0.8404437899589539, 0.8383304476737976, 0.8411042094230652, 0.8366134166717529, 0.8429533839225769, 0.8486329317092896, 0.8541803956031799, 0.8551049828529358, 0.8555012345314026, 0.86118084192276, 0.8634262084960938, 0.8659358024597168, 0.860652506351471, 0.8679170608520508, 0.8687095642089844, 0.868049144744873, 0.8701624870300293, 0.8668603897094727, 0.8712190985679626, 0.8705587387084961, 0.8708229064941406], "val_loss": [2.2475922107696533, 2.027225971221924, 1.1641000509262085, 0.9274754524230957, 0.7903690338134766, 0.7214100956916809, 0.6956217288970947, 0.6709892749786377, 0.6554032564163208, 0.626587986946106, 0.5803455114364624, 0.5796551704406738, 0.5461880564689636, 0.5234495997428894, 0.5365592241287231, 0.5105541348457336, 0.5061712861061096, 0.4989970624446869, 0.4827425479888916, 0.4742032587528229, 0.4684886932373047, 0.46670088171958923, 0.45800527930259705, 0.4529029428958893, 0.443655401468277, 0.445345014333725, 0.4339131712913513, 0.43446508049964905, 0.42254236340522766, 0.4198082685470581, 0.41772475838661194, 0.41880902647972107, 0.41427111625671387, 0.40828418731689453, 0.40412938594818115, 0.4021942913532257, 0.406599760055542, 0.4071131944656372, 0.4007086157798767, 0.39933890104293823, 0.3999266028404236, 0.3967805504798889, 0.39138269424438477, 0.39997899532318115, 0.39691901206970215, 0.38691943883895874, 0.40330976247787476, 0.3860660791397095, 0.37836548686027527, 0.39111271500587463, 0.397318959236145, 0.38926270604133606], "val_accuracy": [0.42266666889190674, 0.4429999887943268, 0.6336666941642761, 0.6690000295639038, 0.7163333296775818, 0.7283333539962769, 0.7363333106040955, 0.7256666421890259, 0.7390000224113464, 0.7463333606719971, 0.7689999938011169, 0.765333354473114, 0.778333306312561, 0.7906666398048401, 0.7919999957084656, 0.7990000247955322, 0.8019999861717224, 0.8016666769981384, 0.812666654586792, 0.8166666626930237, 0.8236666917800903, 0.8159999847412109, 0.828000009059906, 0.8306666612625122, 0.8416666388511658, 0.831333339214325, 0.8463333249092102, 0.8429999947547913, 0.8460000157356262, 0.8420000076293945, 0.8446666598320007, 0.8519999980926514, 0.8573333621025085, 0.856333315372467, 0.8600000143051147, 0.8619999885559082, 0.856333315372467, 0.859000027179718, 0.8556666374206543, 0.8556666374206543, 0.8646666407585144, 0.8640000224113464, 0.8586666584014893, 0.8556666374206543, 0.8610000014305115, 0.8653333187103271, 0.8696666955947876, 0.8629999756813049, 0.8619999885559082, 0.8633333444595337, 0.8653333187103271, 0.8696666955947876]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 3], [0, 2], [0], [1], [0], [2], [0]], "fitness": -0.822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6013896465301514, 0.8826051354408264, 0.703494668006897, 0.6344227194786072, 0.595895528793335, 0.5576269626617432, 0.531476616859436, 0.4826705753803253, 0.4575931131839752, 0.43361198902130127, 0.43477120995521545, 0.44379881024360657, 0.4659784138202667, 0.465115487575531, 0.4788396656513214, 0.5165489912033081, 0.5305801630020142], "accuracy": [0.45964866876602173, 0.6947563290596008, 0.7446836829185486, 0.7662131786346436, 0.7795535326004028, 0.7988376617431641, 0.8058380484580994, 0.821820080280304, 0.8296129703521729, 0.8384625315666199, 0.8432175517082214, 0.8418967127799988, 0.8367455005645752, 0.8308017253875732, 0.841500461101532, 0.8329150676727295, 0.8234050869941711], "val_loss": [1.0096025466918945, 0.6574879288673401, 0.5911813378334045, 0.5307417511940002, 0.5301826000213623, 0.52935391664505, 0.5107874274253845, 0.5051353573799133, 0.4860111474990845, 0.5063851475715637, 0.5334461331367493, 0.5834148526191711, 0.5303524732589722, 0.604080319404602, 0.6083251237869263, 0.6378034949302673, 0.57030189037323], "val_accuracy": [0.640333354473114, 0.765999972820282, 0.781000018119812, 0.8056666851043701, 0.812666654586792, 0.8146666884422302, 0.8173333406448364, 0.8296666741371155, 0.8303333520889282, 0.8446666598320007, 0.8410000205039978, 0.8463333249092102, 0.8293333053588867, 0.8333333134651184, 0.8266666531562805, 0.8379999995231628, 0.828000009059906]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 2, 3, 0, 3], [0, 0, 1, 0, 2], [39, 39], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 8, 6, 3, 5], [0, 2, 4, 0], [95, 16], [0, 1], [0], [0], [99], [0, 1, 1], [9, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 2, 3, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303420066833496, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 1, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 14, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma))), alpha)), tf.math.sqrt(beta)), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 1], [0], [0, 2, 0, 3], [25], [0, 1], [0], [0], [0], [0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1, 3, 1, 2, 2], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303514242172241, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 55], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 6, 6, 6], [0, 2, 0, 3, 3, 0, 1], [16, 16, 32], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 8, 6, 8, 1, 2, 1, 4, 2, 8, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 15, 8, 7, 3, 2, 1, 1, 1, 21, 12, 9, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma)), tf.math.sqrt(tf.math.negative(alpha))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]