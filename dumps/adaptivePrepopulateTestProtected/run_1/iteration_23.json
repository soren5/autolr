[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223330497741699, 1.8670156002044678, 1.3935511112213135, 1.1012579202651978, 0.9477801322937012, 0.8379126191139221, 0.7764281630516052, 0.7235901951789856, 0.6839449405670166, 0.6511124968528748, 0.6340097188949585, 0.6069210171699524, 0.5817078948020935, 0.5635776519775391, 0.5524153113365173, 0.5367791652679443, 0.5212588906288147, 0.5178380608558655, 0.5019086003303528, 0.4879888892173767, 0.4858485460281372, 0.4747111201286316, 0.45951735973358154, 0.4532293975353241, 0.4492609202861786, 0.4330301284790039, 0.4310648441314697, 0.42051371932029724, 0.41327017545700073, 0.4060419201850891, 0.3997148871421814, 0.39729252457618713, 0.3869434893131256, 0.3869549036026001, 0.38186177611351013, 0.3692651391029358, 0.36346086859703064, 0.3634459972381592, 0.3600703179836273, 0.3489670753479004, 0.3429599404335022, 0.34309908747673035, 0.3401198089122772, 0.3303268253803253, 0.3301240801811218, 0.3276282846927643, 0.3180643618106842, 0.3136589229106903, 0.3090694546699524, 0.3071834146976471, 0.3011736273765564, 0.30332496762275696, 0.29351481795310974, 0.2937680780887604], "accuracy": [0.26680755615234375, 0.49451854825019836, 0.5679566860198975, 0.6209219098091125, 0.6646413803100586, 0.7078325152397156, 0.7234182953834534, 0.7387399077415466, 0.7541936039924622, 0.7672698497772217, 0.7677981853485107, 0.7820631265640259, 0.7897239327430725, 0.7977809906005859, 0.798309326171875, 0.8082155585289001, 0.8138951063156128, 0.8094043135643005, 0.822348415851593, 0.8269713521003723, 0.8208954930305481, 0.8310658931732178, 0.8350284099578857, 0.8367455005645752, 0.8368775844573975, 0.8444063067436218, 0.843481719493866, 0.850350022315979, 0.8502179384231567, 0.8570862412452698, 0.857218325138092, 0.8574824929237366, 0.8610487580299377, 0.8610487580299377, 0.8607845902442932, 0.8658037185668945, 0.8701624870300293, 0.8689737319946289, 0.8708229064941406, 0.8792761564254761, 0.8798044919967651, 0.8765024542808533, 0.8765024542808533, 0.8824461698532104, 0.880729079246521, 0.8844274282455444, 0.8838990926742554, 0.8887861371040344, 0.8878615498542786, 0.8903711438179016, 0.8924844861030579, 0.8912957310676575, 0.8976356983184814, 0.8960506916046143], "val_loss": [2.040694236755371, 1.5166728496551514, 1.045767068862915, 0.8421168327331543, 0.7569165229797363, 0.7011509537696838, 0.6573318839073181, 0.6179470419883728, 0.5908101201057434, 0.5737177133560181, 0.5541383624076843, 0.5365487933158875, 0.518412172794342, 0.5104728937149048, 0.49868762493133545, 0.485697478055954, 0.48461878299713135, 0.46694132685661316, 0.459992378950119, 0.44818419218063354, 0.45110249519348145, 0.4507465958595276, 0.4339507520198822, 0.4287099242210388, 0.42590731382369995, 0.4119842052459717, 0.4104468524456024, 0.4069807529449463, 0.40372517704963684, 0.3985708951950073, 0.3967111110687256, 0.39305025339126587, 0.39346253871917725, 0.3906964063644409, 0.3815464675426483, 0.3792845904827118, 0.37928369641304016, 0.3762374818325043, 0.37582898139953613, 0.37387406826019287, 0.3717586398124695, 0.36671704053878784, 0.363382488489151, 0.36401286721229553, 0.3619881868362427, 0.35666540265083313, 0.3588123917579651, 0.3541429042816162, 0.35232576727867126, 0.35342442989349365, 0.3524846136569977, 0.34847813844680786, 0.34814298152923584, 0.35015836358070374], "val_accuracy": [0.5323333144187927, 0.6446666717529297, 0.6756666898727417, 0.7043333053588867, 0.7239999771118164, 0.7493333220481873, 0.753000020980835, 0.7706666588783264, 0.7820000052452087, 0.7873333096504211, 0.7956666946411133, 0.800000011920929, 0.8136666417121887, 0.812666654586792, 0.8199999928474426, 0.824999988079071, 0.8246666789054871, 0.8326666951179504, 0.8303333520889282, 0.8376666903495789, 0.8333333134651184, 0.8343333601951599, 0.8446666598320007, 0.843666672706604, 0.846666693687439, 0.8513333201408386, 0.8546666502952576, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8529999852180481, 0.859333336353302, 0.8546666502952576, 0.8569999933242798, 0.8606666922569275, 0.8633333444595337, 0.8643333315849304, 0.8629999756813049, 0.8576666712760925, 0.8703333139419556, 0.8640000224113464, 0.8643333315849304, 0.8676666617393494, 0.8663333058357239, 0.8713333606719971, 0.871999979019165, 0.8693333268165588, 0.8693333268165588, 0.878000020980835, 0.8756666779518127, 0.8706666827201843, 0.8756666779518127, 0.8769999742507935, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8571428656578064, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222847938537598, 1.867392659187317, 1.3911076784133911, 1.0930169820785522, 0.9366121888160706, 0.8372630476951599, 0.7828148603439331, 0.7332644462585449, 0.6989098191261292, 0.6637759804725647, 0.6406188607215881, 0.615948498249054, 0.6086745858192444, 0.5900874137878418, 0.574468731880188, 0.5500780344009399, 0.543301522731781, 0.5270284414291382, 0.5193440914154053, 0.5017447471618652, 0.4978486895561218, 0.4840877950191498, 0.4781550168991089, 0.46358203887939453, 0.45187410712242126, 0.45286473631858826, 0.4401852786540985, 0.43898847699165344, 0.42979106307029724, 0.425175279378891, 0.41294294595718384, 0.4137584865093231, 0.4120878279209137, 0.40623739361763, 0.38897469639778137, 0.3826708495616913, 0.37694770097732544, 0.3697664141654968, 0.37060266733169556, 0.3647136390209198, 0.3594547510147095, 0.35592108964920044, 0.35617923736572266], "accuracy": [0.26826047897338867, 0.48474442958831787, 0.5650508403778076, 0.6166952848434448, 0.6667547225952148, 0.7004358768463135, 0.7166820764541626, 0.7318716049194336, 0.7479857206344604, 0.7600052952766418, 0.7696473598480225, 0.7726852297782898, 0.778232753276825, 0.785101056098938, 0.7893276810646057, 0.8037247657775879, 0.8035926818847656, 0.8103289008140564, 0.8095363974571228, 0.817989706993103, 0.8211596608161926, 0.8280280232429504, 0.8304054737091064, 0.8355567455291748, 0.8384625315666199, 0.8417646288871765, 0.8436138033866882, 0.8454629778862, 0.8455950617790222, 0.8450667262077332, 0.8524633646011353, 0.8531237840652466, 0.8535200357437134, 0.8521991968154907, 0.8619733452796936, 0.8660678863525391, 0.8661999702453613, 0.8638224601745605, 0.8702945709228516, 0.8710870146751404, 0.8710870146751404, 0.8720116019248962, 0.8733324408531189], "val_loss": [2.0408132076263428, 1.5202934741973877, 1.0521996021270752, 0.8457505702972412, 0.7584808468818665, 0.7024694681167603, 0.6606812477111816, 0.6257038116455078, 0.6002932190895081, 0.5708674788475037, 0.5548514723777771, 0.5368862748146057, 0.5254790782928467, 0.5155545473098755, 0.49155086278915405, 0.4868987500667572, 0.47091105580329895, 0.4608018696308136, 0.46074092388153076, 0.445686936378479, 0.4376158118247986, 0.4282269775867462, 0.42753633856773376, 0.41706058382987976, 0.4107365608215332, 0.4033912718296051, 0.3999423384666443, 0.3965218961238861, 0.3970586657524109, 0.38412895798683167, 0.3869628608226776, 0.39264047145843506, 0.37969711422920227, 0.37444043159484863, 0.3699381649494171, 0.3681306838989258, 0.36552953720092773, 0.3616947829723358, 0.36384478211402893, 0.36352604627609253, 0.3569101095199585, 0.36068591475486755, 0.3556968569755554], "val_accuracy": [0.5490000247955322, 0.6510000228881836, 0.6696666479110718, 0.6956666707992554, 0.7196666598320007, 0.734333336353302, 0.7549999952316284, 0.7639999985694885, 0.7673333287239075, 0.7926666736602783, 0.8016666769981384, 0.8003333210945129, 0.8043333292007446, 0.8166666626930237, 0.8263333439826965, 0.8303333520889282, 0.8373333215713501, 0.8366666436195374, 0.8353333473205566, 0.8463333249092102, 0.8460000157356262, 0.8486666679382324, 0.8553333282470703, 0.8533333539962769, 0.8613333106040955, 0.8629999756813049, 0.8613333106040955, 0.8643333315849304, 0.8650000095367432, 0.8693333268165588, 0.8633333444595337, 0.8619999885559082, 0.8690000176429749, 0.8703333139419556, 0.8700000047683716, 0.8703333139419556, 0.871666669845581, 0.874666690826416, 0.874666690826416, 0.871999979019165, 0.8730000257492065, 0.8740000128746033, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1], [0, 4, 0], [0, 0], [0, 71], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.850857138633728, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292109251022339, 2.1900296211242676, 1.7670708894729614, 1.3463343381881714, 1.0682446956634521, 0.9106928110122681, 0.8441570997238159, 0.8003447651863098, 0.7616659998893738, 0.7320587635040283, 0.6998498439788818, 0.6773139834403992, 0.6467342376708984, 0.63631671667099, 0.6151769161224365, 0.5994059443473816, 0.5730986595153809, 0.5729024410247803, 0.5637025237083435, 0.5591938495635986, 0.5343139171600342, 0.5180765986442566, 0.5019855499267578, 0.4973771870136261, 0.4868611693382263, 0.4910992383956909, 0.4589236080646515, 0.46288958191871643, 0.4490449130535126, 0.4432752728462219, 0.43710994720458984, 0.4371342658996582, 0.42100346088409424, 0.4131999611854553, 0.41995152831077576, 0.40955036878585815, 0.3909837603569031, 0.39403071999549866, 0.37798383831977844, 0.3718675971031189, 0.37433159351348877, 0.3697822690010071, 0.35538333654403687, 0.35497620701789856, 0.35018792748451233, 0.33314043283462524, 0.3278789818286896, 0.32420915365219116, 0.3356015086174011, 0.32749688625335693, 0.3080056607723236, 0.3153318464756012, 0.3095221221446991, 0.30960872769355774, 0.2979007065296173, 0.3013332188129425, 0.30388206243515015], "accuracy": [0.13115836679935455, 0.32967904210090637, 0.43706247210502625, 0.551050066947937, 0.6361114978790283, 0.6633205413818359, 0.6930392384529114, 0.7028133869171143, 0.7030775547027588, 0.7211728692054749, 0.7301545143127441, 0.7375511527061462, 0.7557786107063293, 0.7597411274909973, 0.7574957013130188, 0.7713643908500671, 0.7860256433486938, 0.7754589915275574, 0.7860256433486938, 0.7829877138137817, 0.7988376617431641, 0.7985734939575195, 0.8132346868515015, 0.8078193068504333, 0.8039889335632324, 0.8099326491355896, 0.8210275769233704, 0.8234050869941711, 0.8253863453865051, 0.8301413059234619, 0.8297450542449951, 0.8286884427070618, 0.8385946154594421, 0.8397833704948425, 0.8354246616363525, 0.8399154543876648, 0.8496896028518677, 0.8477083444595337, 0.8498216867446899, 0.8543124794960022, 0.856689989566803, 0.8578787446022034, 0.8573504090309143, 0.859199583530426, 0.8617091774940491, 0.8677849769592285, 0.870030403137207, 0.8708229064941406, 0.8648791313171387, 0.8709549307823181, 0.8737286925315857, 0.8755778670310974, 0.8742570281028748, 0.8706908226013184, 0.8759741187095642, 0.8800686597824097, 0.873860776424408], "val_loss": [2.2460505962371826, 2.0153729915618896, 1.1430203914642334, 0.9022366404533386, 0.7782735824584961, 0.7105817794799805, 0.7059789299964905, 0.6670687794685364, 0.6506384015083313, 0.6095081567764282, 0.5799123644828796, 0.5531648993492126, 0.5517765283584595, 0.5385972857475281, 0.5175290703773499, 0.5091022253036499, 0.5042871236801147, 0.49640870094299316, 0.508329451084137, 0.48873040080070496, 0.48778337240219116, 0.47912049293518066, 0.4830993711948395, 0.47174137830734253, 0.47386273741722107, 0.466915488243103, 0.4609098732471466, 0.45640048384666443, 0.454056978225708, 0.44581151008605957, 0.442470908164978, 0.4358493387699127, 0.4331945478916168, 0.42385610938072205, 0.4177532196044922, 0.42570140957832336, 0.4375937581062317, 0.4227612316608429, 0.41948196291923523, 0.4201010465621948, 0.4251503050327301, 0.4204823672771454, 0.42815807461738586, 0.4350336194038391, 0.42977023124694824, 0.4187576472759247, 0.414818674325943, 0.428763747215271, 0.412647008895874, 0.42418786883354187, 0.43945759534835815, 0.44593578577041626, 0.43283000588417053, 0.4229605197906494, 0.4352059066295624, 0.4496338367462158, 0.45844221115112305], "val_accuracy": [0.4126666784286499, 0.4506666660308838, 0.6343333125114441, 0.6919999718666077, 0.7043333053588867, 0.7353333234786987, 0.731333315372467, 0.7443333268165588, 0.7473333477973938, 0.7620000243186951, 0.7670000195503235, 0.7860000133514404, 0.7856666445732117, 0.7950000166893005, 0.7916666865348816, 0.7993333339691162, 0.8023333549499512, 0.8069999814033508, 0.8006666898727417, 0.8080000281333923, 0.8083333373069763, 0.8146666884422302, 0.8169999718666077, 0.8180000185966492, 0.8166666626930237, 0.8233333230018616, 0.8330000042915344, 0.8393333554267883, 0.8353333473205566, 0.8366666436195374, 0.8370000123977661, 0.8403333425521851, 0.8450000286102295, 0.8503333330154419, 0.8476666808128357, 0.8479999899864197, 0.8510000109672546, 0.8510000109672546, 0.8483333587646484, 0.8510000109672546, 0.8536666631698608, 0.8536666631698608, 0.8533333539962769, 0.8566666841506958, 0.8600000143051147, 0.8653333187103271, 0.8629999756813049, 0.8610000014305115, 0.862666666507721, 0.8646666407585144, 0.8683333396911621, 0.8686666488647461, 0.8633333444595337, 0.8603333234786987, 0.8610000014305115, 0.8613333106040955, 0.8673333525657654]}, "mapping_values": [1, 10, 5, 5, 3, 5, 3, 2, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 0], [0, 6, 9], [0], [0, 71], [1], [0], [2], [0]], "fitness": -0.8305714130401611, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5427587032318115, 0.8063229322433472, 0.6908960938453674, 0.6087561249732971, 0.5639417171478271, 0.5410559773445129, 0.509398877620697, 0.4889143705368042, 0.4753986597061157, 0.4677324593067169, 0.4480319023132324, 0.4479806423187256, 0.4480735957622528, 0.47602537274360657, 0.46375253796577454, 0.48806026577949524, 0.46610307693481445, 0.47118550539016724], "accuracy": [0.4566107392311096, 0.7162858247756958, 0.7577598690986633, 0.7777044177055359, 0.7940827012062073, 0.8061022162437439, 0.8171972036361694, 0.8253863453865051, 0.8255184292793274, 0.8330471515655518, 0.8413683772087097, 0.834632158279419, 0.8465195894241333, 0.8404437899589539, 0.842028796672821, 0.8280280232429504, 0.8418967127799988, 0.8437458872795105], "val_loss": [0.8019167184829712, 0.6452445387840271, 0.53932124376297, 0.5297608971595764, 0.49765852093696594, 0.4922462999820709, 0.4728974997997284, 0.4693673551082611, 0.4774167835712433, 0.4829649329185486, 0.4613327980041504, 0.504285454750061, 0.5097860097885132, 0.5271326303482056, 0.5341828465461731, 0.4751560091972351, 0.6083786487579346, 0.5134517550468445], "val_accuracy": [0.7099999785423279, 0.7733333110809326, 0.7986666560173035, 0.8069999814033508, 0.8243333101272583, 0.8206666707992554, 0.8323333263397217, 0.8349999785423279, 0.8333333134651184, 0.8370000123977661, 0.8403333425521851, 0.8343333601951599, 0.8453333377838135, 0.8326666951179504, 0.8396666646003723, 0.8356666564941406, 0.8360000252723694, 0.8316666483879089]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 3, 1, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 7], [0, 1, 0, 2, 0], [39, 39, 54], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 2, 3, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 2], [92, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), beta))", "other_info": {"loss": [208.17202758789062, 692.1417236328125, 1066.5577392578125, 1346.1248779296875, 1521.84912109375, 1593.101806640625], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [514.1719970703125, 925.6571044921875, 1246.300048828125, 1465.57470703125, 1578.7840576171875, 1593.42529296875], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1], [0, 3, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 0, 0, 1, 1, 1], [0, 0, 7, 4], [0, 6, 4], [99], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 6], [1, 0, 4, 3, 0, 0, 3, 0, 2, 0, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 7, 4, 3, 1, 23, 12, 11, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(grad, sigma), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(sigma, tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), beta))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 2, 3, 0, 3], [2, 1, 1, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [2], [99], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 5, 8], [0, 1, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 68, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3040120601654053, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}, "mapping_values": [1, 9, 5, 4, 0, 6, 3, 3, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 11}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 2, 8, 0, 3], [0, 1, 0, 2], [57, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 2, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 1, 1], [0, 4], [0, 0], [53, 38], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 6, 8, 1, 2, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 10, 6, 4, 2, 4, 2, 2, 2, 21, 11, 10, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(grad, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]