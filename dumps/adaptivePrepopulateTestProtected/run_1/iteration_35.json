[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223330497741699, 1.8670156002044678, 1.3935511112213135, 1.1012579202651978, 0.9477801322937012, 0.8379126191139221, 0.7764281630516052, 0.7235901951789856, 0.6839449405670166, 0.6511124968528748, 0.6340097188949585, 0.6069210171699524, 0.5817078948020935, 0.5635776519775391, 0.5524153113365173, 0.5367791652679443, 0.5212588906288147, 0.5178380608558655, 0.5019086003303528, 0.4879888892173767, 0.4858485460281372, 0.4747111201286316, 0.45951735973358154, 0.4532293975353241, 0.4492609202861786, 0.4330301284790039, 0.4310648441314697, 0.42051371932029724, 0.41327017545700073, 0.4060419201850891, 0.3997148871421814, 0.39729252457618713, 0.3869434893131256, 0.3869549036026001, 0.38186177611351013, 0.3692651391029358, 0.36346086859703064, 0.3634459972381592, 0.3600703179836273, 0.3489670753479004, 0.3429599404335022, 0.34309908747673035, 0.3401198089122772, 0.3303268253803253, 0.3301240801811218, 0.3276282846927643, 0.3180643618106842, 0.3136589229106903, 0.3090694546699524, 0.3071834146976471, 0.3011736273765564, 0.30332496762275696, 0.29351481795310974, 0.2937680780887604], "accuracy": [0.26680755615234375, 0.49451854825019836, 0.5679566860198975, 0.6209219098091125, 0.6646413803100586, 0.7078325152397156, 0.7234182953834534, 0.7387399077415466, 0.7541936039924622, 0.7672698497772217, 0.7677981853485107, 0.7820631265640259, 0.7897239327430725, 0.7977809906005859, 0.798309326171875, 0.8082155585289001, 0.8138951063156128, 0.8094043135643005, 0.822348415851593, 0.8269713521003723, 0.8208954930305481, 0.8310658931732178, 0.8350284099578857, 0.8367455005645752, 0.8368775844573975, 0.8444063067436218, 0.843481719493866, 0.850350022315979, 0.8502179384231567, 0.8570862412452698, 0.857218325138092, 0.8574824929237366, 0.8610487580299377, 0.8610487580299377, 0.8607845902442932, 0.8658037185668945, 0.8701624870300293, 0.8689737319946289, 0.8708229064941406, 0.8792761564254761, 0.8798044919967651, 0.8765024542808533, 0.8765024542808533, 0.8824461698532104, 0.880729079246521, 0.8844274282455444, 0.8838990926742554, 0.8887861371040344, 0.8878615498542786, 0.8903711438179016, 0.8924844861030579, 0.8912957310676575, 0.8976356983184814, 0.8960506916046143], "val_loss": [2.040694236755371, 1.5166728496551514, 1.045767068862915, 0.8421168327331543, 0.7569165229797363, 0.7011509537696838, 0.6573318839073181, 0.6179470419883728, 0.5908101201057434, 0.5737177133560181, 0.5541383624076843, 0.5365487933158875, 0.518412172794342, 0.5104728937149048, 0.49868762493133545, 0.485697478055954, 0.48461878299713135, 0.46694132685661316, 0.459992378950119, 0.44818419218063354, 0.45110249519348145, 0.4507465958595276, 0.4339507520198822, 0.4287099242210388, 0.42590731382369995, 0.4119842052459717, 0.4104468524456024, 0.4069807529449463, 0.40372517704963684, 0.3985708951950073, 0.3967111110687256, 0.39305025339126587, 0.39346253871917725, 0.3906964063644409, 0.3815464675426483, 0.3792845904827118, 0.37928369641304016, 0.3762374818325043, 0.37582898139953613, 0.37387406826019287, 0.3717586398124695, 0.36671704053878784, 0.363382488489151, 0.36401286721229553, 0.3619881868362427, 0.35666540265083313, 0.3588123917579651, 0.3541429042816162, 0.35232576727867126, 0.35342442989349365, 0.3524846136569977, 0.34847813844680786, 0.34814298152923584, 0.35015836358070374], "val_accuracy": [0.5323333144187927, 0.6446666717529297, 0.6756666898727417, 0.7043333053588867, 0.7239999771118164, 0.7493333220481873, 0.753000020980835, 0.7706666588783264, 0.7820000052452087, 0.7873333096504211, 0.7956666946411133, 0.800000011920929, 0.8136666417121887, 0.812666654586792, 0.8199999928474426, 0.824999988079071, 0.8246666789054871, 0.8326666951179504, 0.8303333520889282, 0.8376666903495789, 0.8333333134651184, 0.8343333601951599, 0.8446666598320007, 0.843666672706604, 0.846666693687439, 0.8513333201408386, 0.8546666502952576, 0.8500000238418579, 0.8523333072662354, 0.8546666502952576, 0.8529999852180481, 0.859333336353302, 0.8546666502952576, 0.8569999933242798, 0.8606666922569275, 0.8633333444595337, 0.8643333315849304, 0.8629999756813049, 0.8576666712760925, 0.8703333139419556, 0.8640000224113464, 0.8643333315849304, 0.8676666617393494, 0.8663333058357239, 0.8713333606719971, 0.871999979019165, 0.8693333268165588, 0.8693333268165588, 0.878000020980835, 0.8756666779518127, 0.8706666827201843, 0.8756666779518127, 0.8769999742507935, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8602856993675232, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2232611179351807, 1.8669040203094482, 1.3922103643417358, 1.0979578495025635, 0.941860020160675, 0.8492177128791809, 0.7748661041259766, 0.7336273193359375, 0.6914896965026855, 0.6565859913825989, 0.6292169094085693, 0.6212075352668762, 0.604078471660614, 0.5853111147880554, 0.567829966545105, 0.5576974749565125, 0.5413203835487366, 0.5258517265319824, 0.5104042291641235, 0.4982265532016754, 0.4921087622642517, 0.4808887839317322, 0.467134565114975, 0.45810574293136597, 0.45044246315956116, 0.44450923800468445, 0.44353917241096497, 0.4292337894439697, 0.4290601909160614, 0.41582581400871277, 0.4141320586204529, 0.40612712502479553, 0.3975934684276581, 0.39165449142456055, 0.38499316573143005, 0.3798883855342865, 0.36414000391960144, 0.3686557412147522, 0.35621964931488037, 0.3579726815223694, 0.35903313755989075, 0.3491681218147278], "accuracy": [0.2845066785812378, 0.48051777482032776, 0.5602958798408508, 0.6210539937019348, 0.6610751748085022, 0.6947563290596008, 0.7236824631690979, 0.7314753532409668, 0.7437590956687927, 0.7561748623847961, 0.7721568942070007, 0.7751948237419128, 0.7788931727409363, 0.7882710099220276, 0.7967243194580078, 0.7992339134216309, 0.8049134612083435, 0.8087438941001892, 0.8125742673873901, 0.8173292875289917, 0.8224804997444153, 0.8264430165290833, 0.8274996876716614, 0.8322546482086182, 0.8397833704948425, 0.8388587832450867, 0.841500461101532, 0.8454629778862, 0.844010055065155, 0.8512746095657349, 0.8454629778862, 0.8527275323867798, 0.8536521196365356, 0.8626337051391602, 0.8594637513160706, 0.8648791313171387, 0.869502067565918, 0.8685774803161621, 0.8722757697105408, 0.867520809173584, 0.8722757697105408, 0.8696341514587402], "val_loss": [2.0426278114318848, 1.5196019411087036, 1.057069182395935, 0.8542689085006714, 0.7641842365264893, 0.7078387141227722, 0.6642763614654541, 0.6280001401901245, 0.6003620624542236, 0.5804479122161865, 0.5563308000564575, 0.5486704707145691, 0.5339773297309875, 0.527271568775177, 0.5073172450065613, 0.5061464309692383, 0.49222904443740845, 0.4838310182094574, 0.4779186248779297, 0.4673043489456177, 0.4622431695461273, 0.45829495787620544, 0.45249658823013306, 0.44383504986763, 0.4423106014728546, 0.43357446789741516, 0.431771457195282, 0.42906275391578674, 0.4210493266582489, 0.41896167397499084, 0.4149162471294403, 0.4138809144496918, 0.4111684560775757, 0.4041062891483307, 0.40060165524482727, 0.40216895937919617, 0.3988490104675293, 0.39595580101013184, 0.39023536443710327, 0.393586128950119, 0.39315369725227356, 0.38295742869377136], "val_accuracy": [0.5550000071525574, 0.6380000114440918, 0.6756666898727417, 0.6923333406448364, 0.7236666679382324, 0.7416666746139526, 0.7556666731834412, 0.7720000147819519, 0.7839999794960022, 0.7863333225250244, 0.79666668176651, 0.8023333549499512, 0.8096666932106018, 0.809333324432373, 0.8240000009536743, 0.8180000185966492, 0.8273333311080933, 0.8309999704360962, 0.8286666870117188, 0.8356666564941406, 0.8346666693687439, 0.8393333554267883, 0.8420000076293945, 0.8443333506584167, 0.8446666598320007, 0.8489999771118164, 0.8460000157356262, 0.8523333072662354, 0.8546666502952576, 0.8553333282470703, 0.8579999804496765, 0.8536666631698608, 0.856333315372467, 0.8569999933242798, 0.859333336353302, 0.8600000143051147, 0.8659999966621399, 0.8646666407585144, 0.8613333106040955, 0.862333357334137, 0.8616666793823242, 0.8643333315849304]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 1], [0, 1, 5], [0, 4], [0], [0, 0, 1], [0, 8], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8531428575515747, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2923827171325684, 2.191629409790039, 1.7763011455535889, 1.3614773750305176, 1.074735403060913, 0.9231418371200562, 0.8622043132781982, 0.8357762098312378, 0.7817956805229187, 0.7580921053886414, 0.714508593082428, 0.6800475716590881, 0.6535456776618958, 0.6180634498596191, 0.6117986440658569, 0.5913418531417847, 0.5769883990287781, 0.5619368553161621, 0.5594395995140076, 0.5520403981208801, 0.5325907468795776, 0.5378173589706421, 0.5280508995056152, 0.5124428868293762, 0.4980100393295288, 0.4957597553730011, 0.4837580621242523, 0.477082222700119, 0.462329238653183, 0.4603848457336426, 0.44685423374176025, 0.44717440009117126, 0.43537968397140503, 0.4334007501602173, 0.4141230583190918, 0.4163428843021393, 0.41757768392562866, 0.3991428017616272, 0.3959861695766449, 0.39420652389526367, 0.38069620728492737, 0.37480148673057556, 0.3792515695095062, 0.3530883491039276, 0.3561888039112091, 0.3583832383155823, 0.35225334763526917, 0.34334585070610046, 0.34712332487106323, 0.33311235904693604], "accuracy": [0.12917712330818176, 0.32201823592185974, 0.4419495463371277, 0.5404834151268005, 0.6304318904876709, 0.6612072587013245, 0.6885483860969543, 0.6964733600616455, 0.6960771083831787, 0.7121912837028503, 0.7246070504188538, 0.7390040755271912, 0.7483819723129272, 0.7638356685638428, 0.7619865536689758, 0.7840443849563599, 0.78113853931427, 0.7845727205276489, 0.7854973077774048, 0.7901201844215393, 0.8025360107421875, 0.800290584564209, 0.8030643463134766, 0.8018755912780762, 0.8112534880638123, 0.8105930685997009, 0.816008448600769, 0.8226125836372375, 0.8245938420295715, 0.8231409192085266, 0.8273676037788391, 0.830669641494751, 0.8366134166717529, 0.8404437899589539, 0.843481719493866, 0.8413683772087097, 0.839519202709198, 0.8494254350662231, 0.8459912538528442, 0.8477083444595337, 0.8527275323867798, 0.8511425256729126, 0.8516708612442017, 0.8634262084960938, 0.8642187118530273, 0.86553955078125, 0.8640866279602051, 0.8618412613868713, 0.8626337051391602, 0.8688416481018066], "val_loss": [2.246819257736206, 2.021693706512451, 1.164608359336853, 0.9304260015487671, 0.791384756565094, 0.7096430659294128, 0.6808730363845825, 0.6601381301879883, 0.6612441539764404, 0.6273419857025146, 0.5998744368553162, 0.5707656145095825, 0.5551028847694397, 0.5554319024085999, 0.5394936800003052, 0.5242624282836914, 0.5157851576805115, 0.5232750773429871, 0.516838014125824, 0.5054248571395874, 0.5072311758995056, 0.5106873512268066, 0.5034255981445312, 0.4956037104129791, 0.48837578296661377, 0.48551663756370544, 0.47544750571250916, 0.4778330624103546, 0.45969608426094055, 0.4482567608356476, 0.4472406506538391, 0.4358167350292206, 0.441008597612381, 0.4355636537075043, 0.428529292345047, 0.4306652843952179, 0.4325388967990875, 0.4246758222579956, 0.416743665933609, 0.42519643902778625, 0.43690750002861023, 0.43648281693458557, 0.4329002797603607, 0.4370347559452057, 0.43915194272994995, 0.4269863963127136, 0.4229995906352997, 0.4587497413158417, 0.4559849500656128, 0.4342818260192871], "val_accuracy": [0.39633333683013916, 0.4690000116825104, 0.6346666812896729, 0.6883333325386047, 0.6986666917800903, 0.7276666760444641, 0.7256666421890259, 0.7403333187103271, 0.7433333396911621, 0.7586666941642761, 0.7580000162124634, 0.7706666588783264, 0.7756666541099548, 0.7853333353996277, 0.7990000247955322, 0.7983333468437195, 0.7979999780654907, 0.8063333630561829, 0.809333324432373, 0.8146666884422302, 0.8159999847412109, 0.8133333325386047, 0.8116666674613953, 0.8209999799728394, 0.8240000009536743, 0.8259999752044678, 0.8286666870117188, 0.8233333230018616, 0.8363333344459534, 0.8336666822433472, 0.8353333473205566, 0.8460000157356262, 0.8479999899864197, 0.8483333587646484, 0.8483333587646484, 0.847000002861023, 0.8506666421890259, 0.8519999980926514, 0.846666693687439, 0.8533333539962769, 0.8543333411216736, 0.8486666679382324, 0.8543333411216736, 0.8513333201408386, 0.862666666507721, 0.8586666584014893, 0.8546666502952576, 0.862666666507721, 0.8616666793823242, 0.8553333282470703]}, "mapping_values": [1, 10, 5, 5, 3, 5, 3, 2, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 4, 4, 5, 6, 9], [0, 2, 3], [0, 19], [1], [0], [2], [0]], "fitness": -0.7979999780654907, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.pow(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), beta), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6263643503189087, 0.900029718875885, 0.6706361770629883, 0.657814085483551, 0.6108760833740234, 0.6028506755828857, 0.5754073262214661, 0.5515958666801453, 0.544466495513916, 0.4999508857727051, 0.5389576554298401], "accuracy": [0.46651697158813477, 0.6979262828826904, 0.7559106945991516, 0.7738739848136902, 0.7759873270988464, 0.7917051911354065, 0.8012151718139648, 0.8121780753135681, 0.7991018295288086, 0.8150838613510132, 0.8112534880638123], "val_loss": [1.0526858568191528, 0.6070866584777832, 0.5797623991966248, 0.5672768354415894, 0.5358900427818298, 0.530661404132843, 0.5424097776412964, 0.5623094439506531, 0.5519483685493469, 0.5606313347816467, 0.5731268525123596], "val_accuracy": [0.7073333263397217, 0.7866666913032532, 0.7893333435058594, 0.8050000071525574, 0.8133333325386047, 0.8206666707992554, 0.8173333406448364, 0.8136666417121887, 0.8159999847412109, 0.8206666707992554, 0.8103333115577698]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 9, 6, 3, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 2], [89, 39], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 0, 2, 0], [16, 99, 96, 99, 61, 4]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 1, 0, 1, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303593873977661, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 30], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 2, 0, 3, 1, 1, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 6, 4, 2, 1, 1, 0, 1, 1, 16, 8, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(beta, tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 6, 3, 0, 3], [3, 0, 3, 0, 2], [39, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 8, 0, 3, 5], [0, 1, 3, 5], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 8, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0]], "fitness": -0.09314285963773727, "mapping_values": [1, 6, 3, 3, 1, 5, 3, 2, 1, 2, 1, 1, 1, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(grad, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.310544490814209, 2.309417963027954, 2.310372829437256, 2.3098080158233643, 2.3100056648254395, 2.310169219970703], "accuracy": [0.09153348207473755, 0.09140139818191528, 0.09351472556591034, 0.09285431355237961, 0.08955223858356476, 0.08717474341392517], "val_loss": [2.3083319664001465, 2.3083319664001465, 2.3083319664001465, 2.3083319664001465, 2.3083319664001465, 2.3083319664001465], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 1], [8, 2, 1, 2, 3], [0, 1, 2, 2], [39, 22], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 0, 0, 1, 1], [3, 8, 4], [0, 5, 4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 5], [0, 0, 0, 3, 0, 0, 1, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.08971428871154785, "mapping_values": [1, 1, 0, 1, 1, 8, 4, 4, 2, 6, 3, 3, 1, 22, 12, 10, 6], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.pow(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.square(alpha))))))), beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3101160526275635, 2.3109631538391113, 2.3113670349121094, 2.309788465499878, 2.310739755630493, 2.3102705478668213], "accuracy": [0.09311848133802414, 0.08955223858356476, 0.0882314071059227, 0.09232597798109055, 0.09206181764602661, 0.09602430462837219], "val_loss": [2.3085031509399414, 2.3085031509399414, 2.3085031509399414, 2.3085031509399414, 2.3085031509399414, 2.3085031509399414], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]