[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8837142586708069, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235751152038574, 1.863627314567566, 1.3881967067718506, 1.0971885919570923, 0.9431154727935791, 0.835616409778595, 0.7718875408172607, 0.7267177104949951, 0.6853072643280029, 0.6501961350440979, 0.6362801194190979, 0.6226356029510498, 0.5988889336585999, 0.5801778435707092, 0.5583580732345581, 0.5447906851768494, 0.5406832695007324, 0.5254860520362854, 0.5062505006790161, 0.5079479217529297, 0.49121394753456116, 0.48989003896713257, 0.47510769963264465, 0.46506667137145996, 0.4554359018802643, 0.45054957270622253, 0.44110772013664246, 0.430584579706192, 0.42144355177879333, 0.4155716598033905, 0.4158378839492798, 0.4039183557033539, 0.4085548520088196, 0.39546728134155273, 0.39515864849090576, 0.3871508538722992, 0.38307344913482666, 0.3732011318206787, 0.3693823516368866, 0.36437657475471497, 0.3559441566467285, 0.3469986915588379, 0.343269407749176, 0.3417010009288788, 0.33637532591819763, 0.32835736870765686, 0.3263590931892395, 0.31998395919799805], "accuracy": [0.2810725271701813, 0.4971602261066437, 0.5653150081634521, 0.6174877882003784, 0.6604147553443909, 0.6975300312042236, 0.7224937081336975, 0.7313432693481445, 0.7481178045272827, 0.7605336308479309, 0.7685906887054443, 0.7737419009208679, 0.7836481332778931, 0.7877426743507385, 0.8004226684570312, 0.7952714562416077, 0.8047813773155212, 0.8120459914207458, 0.8137630224227905, 0.8156121969223022, 0.8216879963874817, 0.8222163319587708, 0.828820526599884, 0.8327829837799072, 0.8348963260650635, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8473120927810669, 0.8507462739944458, 0.8518029451370239, 0.8524633646011353, 0.852331280708313, 0.8539162874221802, 0.8544445633888245, 0.8615770936012268, 0.859199583530426, 0.8668603897094727, 0.8696341514587402, 0.8679170608520508, 0.872407853603363, 0.8747853636741638, 0.8750495314598083, 0.8750495314598083, 0.8766345381736755, 0.882710337638855, 0.8792761564254761, 0.8848236799240112], "val_loss": [2.041090488433838, 1.5073738098144531, 1.0351890325546265, 0.8288497924804688, 0.7493756413459778, 0.6886183023452759, 0.646604061126709, 0.6087713837623596, 0.582353949546814, 0.5605174899101257, 0.5534560680389404, 0.5316277742385864, 0.514729917049408, 0.5010638236999512, 0.4920998513698578, 0.47585147619247437, 0.47390398383140564, 0.45993757247924805, 0.46219465136528015, 0.44748595356941223, 0.4464666247367859, 0.44296160340309143, 0.4343818426132202, 0.42551079392433167, 0.42283767461776733, 0.41507044434547424, 0.4149109423160553, 0.4069209098815918, 0.40459540486335754, 0.40145280957221985, 0.3985113203525543, 0.3906044065952301, 0.3908856511116028, 0.3974918723106384, 0.38081249594688416, 0.38753604888916016, 0.37521854043006897, 0.37901124358177185, 0.37925422191619873, 0.3736351728439331, 0.36485224962234497, 0.36611106991767883, 0.3618214428424835, 0.35893985629081726, 0.3620902895927429, 0.35414883494377136, 0.3574270009994507, 0.35906851291656494], "val_accuracy": [0.5236666798591614, 0.6586666703224182, 0.6903333067893982, 0.7173333168029785, 0.734000027179718, 0.7480000257492065, 0.7580000162124634, 0.7746666669845581, 0.7803333401679993, 0.7893333435058594, 0.7866666913032532, 0.8023333549499512, 0.8130000233650208, 0.8149999976158142, 0.8186666369438171, 0.8316666483879089, 0.8273333311080933, 0.8356666564941406, 0.8343333601951599, 0.8399999737739563, 0.8420000076293945, 0.840666651725769, 0.8446666598320007, 0.847000002861023, 0.8503333330154419, 0.8516666889190674, 0.8539999723434448, 0.856333315372467, 0.8583333492279053, 0.8579999804496765, 0.8613333106040955, 0.8573333621025085, 0.8636666536331177, 0.8523333072662354, 0.8656666874885559, 0.8583333492279053, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8666666746139526, 0.8700000047683716, 0.8726666569709778, 0.8773333430290222, 0.874666690826416, 0.8759999871253967, 0.8773333430290222, 0.8756666779518127, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 1, 0, 1, 1, 9, 4, 9, 7, 6, 0], [0, 4, 0, 1, 0, 0], [0, 24, 13, 49, 2, 56], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8554285764694214, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294301986694336, 2.190129280090332, 1.7734079360961914, 1.3669778108596802, 1.072271466255188, 0.9253568053245544, 0.8254068493843079, 0.8034826517105103, 0.7456397414207458, 0.7342131733894348, 0.7035771608352661, 0.6720587611198425, 0.638756275177002, 0.6163122653961182, 0.5816957354545593, 0.5838552713394165, 0.5624554753303528, 0.5547009706497192, 0.5409482717514038, 0.5438400506973267, 0.5139656066894531, 0.5109025239944458, 0.5045179128646851, 0.4894780218601227, 0.47231703996658325, 0.476256400346756, 0.4648890793323517, 0.4597539007663727, 0.44626522064208984, 0.42413774132728577, 0.419171541929245, 0.40707629919052124, 0.40548235177993774, 0.4052960276603699, 0.3859693706035614, 0.38205572962760925, 0.3758268356323242, 0.3734409809112549, 0.367116242647171, 0.35247325897216797, 0.34839531779289246, 0.34761759638786316, 0.34056079387664795, 0.3385825753211975, 0.3424760699272156], "accuracy": [0.11755382269620895, 0.3361510932445526, 0.4488178491592407, 0.5478800535202026, 0.6351869106292725, 0.6600185036659241, 0.6929071545600891, 0.7017567157745361, 0.709021270275116, 0.7211728692054749, 0.7251353859901428, 0.7469290494918823, 0.7536653280258179, 0.7606657147407532, 0.7737419009208679, 0.7754589915275574, 0.7819310426712036, 0.7803460359573364, 0.7905164361000061, 0.7923656105995178, 0.7981772422790527, 0.8088759779930115, 0.8026680946350098, 0.8101968169212341, 0.8136309385299683, 0.8125742673873901, 0.8198388814926147, 0.8207634687423706, 0.8289526104927063, 0.8389908671379089, 0.8403117060661316, 0.8450667262077332, 0.8459912538528442, 0.8471800088882446, 0.8514066934585571, 0.8520671129226685, 0.8589354157447815, 0.8561616539955139, 0.8570862412452698, 0.8640866279602051, 0.8648791313171387, 0.8660678863525391, 0.8691058158874512, 0.8691058158874512, 0.8672566413879395], "val_loss": [2.2464990615844727, 2.0250961780548096, 1.1452122926712036, 0.8838562965393066, 0.7881861925125122, 0.7189019918441772, 0.6942896842956543, 0.6733948588371277, 0.6534529328346252, 0.6275905966758728, 0.5877088308334351, 0.5658169984817505, 0.5436673760414124, 0.533769428730011, 0.5288578867912292, 0.5181474685668945, 0.5137857794761658, 0.5035394430160522, 0.5067133903503418, 0.496247261762619, 0.49630361795425415, 0.4939759373664856, 0.4889833927154541, 0.4776287376880646, 0.4758477509021759, 0.4765298366546631, 0.469390869140625, 0.46334439516067505, 0.4668125808238983, 0.4621778130531311, 0.4526430368423462, 0.4392830431461334, 0.444419801235199, 0.44814592599868774, 0.4382494390010834, 0.4363662898540497, 0.43528643250465393, 0.42606082558631897, 0.43551725149154663, 0.44092997908592224, 0.44941678643226624, 0.45846566557884216, 0.4535362422466278, 0.47707659006118774, 0.48354125022888184], "val_accuracy": [0.4363333284854889, 0.492000013589859, 0.6460000276565552, 0.6973333358764648, 0.7233333587646484, 0.7360000014305115, 0.7316666841506958, 0.7483333349227905, 0.7639999985694885, 0.7639999985694885, 0.7693333625793457, 0.7806666493415833, 0.7956666946411133, 0.7990000247955322, 0.800000011920929, 0.8040000200271606, 0.8066666722297668, 0.8149999976158142, 0.8133333325386047, 0.8169999718666077, 0.8130000233650208, 0.8196666836738586, 0.8273333311080933, 0.8293333053588867, 0.8363333344459534, 0.8433333039283752, 0.8416666388511658, 0.8483333587646484, 0.8510000109672546, 0.8546666502952576, 0.8556666374206543, 0.856333315372467, 0.8560000061988831, 0.8560000061988831, 0.8659999966621399, 0.8600000143051147, 0.862333357334137, 0.8659999966621399, 0.8650000095367432, 0.8683333396911621, 0.8663333058357239, 0.862333357334137, 0.8646666407585144, 0.8663333058357239, 0.8643333315849304]}, "mapping_values": [1, 10, 5, 5, 3, 18, 12, 6, 6, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 16}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.852571427822113, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222933769226074, 1.8719269037246704, 1.3937970399856567, 1.087860107421875, 0.9209316968917847, 0.8268450498580933, 0.7654942274093628, 0.7231529951095581, 0.6867740154266357, 0.6504369974136353, 0.6230106353759766, 0.6150182485580444, 0.591785728931427, 0.5700249075889587, 0.5505868196487427, 0.5377980470657349, 0.526623010635376, 0.5210082530975342, 0.5044054985046387, 0.48826220631599426, 0.47736701369285583, 0.4632180333137512, 0.4553571343421936, 0.4539757966995239, 0.44349950551986694, 0.4354182779788971, 0.4189610481262207, 0.4211440980434418, 0.4080354869365692, 0.4029586911201477, 0.4001295864582062, 0.4041706621646881, 0.3856108784675598, 0.3837914764881134, 0.3770800530910492, 0.3728378415107727, 0.36542144417762756, 0.3630080223083496, 0.3535151183605194, 0.35163772106170654, 0.34262511134147644, 0.33941900730133057, 0.333822101354599, 0.3334091007709503, 0.32304298877716064, 0.31963837146759033, 0.31746381521224976, 0.31176361441612244, 0.31422099471092224, 0.2991909682750702, 0.2936437129974365, 0.30010443925857544, 0.28981125354766846, 0.2819395363330841, 0.27822157740592957, 0.2717342674732208, 0.2799830436706543, 0.2732886075973511, 0.2697352170944214, 0.2584868371486664, 0.2621367275714874, 0.2550727128982544, 0.2535555362701416, 0.2510679364204407, 0.24700714647769928, 0.24832667410373688, 0.24185636639595032, 0.24089324474334717, 0.23116186261177063, 0.22887223958969116, 0.2302602082490921, 0.22318094968795776, 0.22314967215061188, 0.21729284524917603, 0.21738167107105255, 0.208603635430336, 0.2047494500875473, 0.2028581202030182, 0.20278272032737732, 0.2016875147819519, 0.1960337609052658, 0.1918812245130539, 0.19684743881225586, 0.19069509208202362], "accuracy": [0.2775062620639801, 0.48249900341033936, 0.5688812732696533, 0.6166952848434448, 0.6686038970947266, 0.7061154246330261, 0.7238145470619202, 0.739400327205658, 0.7448157668113708, 0.7618544697761536, 0.7725531458854675, 0.7824593782424927, 0.791969358921051, 0.7979130744934082, 0.8016114234924316, 0.8064984679222107, 0.8144234418869019, 0.8123101592063904, 0.8231409192085266, 0.8272355198860168, 0.8308017253875732, 0.8383304476737976, 0.8405758738517761, 0.8360850811004639, 0.8446704745292664, 0.8495575189590454, 0.8512746095657349, 0.8532558679580688, 0.8555012345314026, 0.8540483713150024, 0.8557654023170471, 0.8609166741371155, 0.8623695969581604, 0.8648791313171387, 0.8697662353515625, 0.8665962219238281, 0.8722757697105408, 0.8710870146751404, 0.8757099509239197, 0.8780874609947205, 0.8787478804588318, 0.8779553771018982, 0.8865407705307007, 0.8804649114608765, 0.8874653577804565, 0.8870691061019897, 0.8857482671737671, 0.8868049383163452, 0.8869370222091675, 0.887597382068634, 0.8944657444953918, 0.8911636471748352, 0.8942015767097473, 0.89988112449646, 0.9002773761749268, 0.9013340473175049, 0.8996169567108154, 0.9049002528190613, 0.8993527889251709, 0.9093911051750183, 0.9055606722831726, 0.9099194407463074, 0.9097873568534851, 0.9111081957817078, 0.9144102334976196, 0.9100515246391296, 0.9152027368545532, 0.9138818979263306, 0.9165235757827759, 0.9198256731033325, 0.9142781496047974, 0.9196935892105103, 0.9167877435684204, 0.9247127175331116, 0.9212785363197327, 0.9273543953895569, 0.9247127175331116, 0.9256373047828674, 0.9270902276039124, 0.9285431504249573, 0.9298639297485352, 0.9298639297485352, 0.9286752343177795, 0.9332981109619141], "val_loss": [2.0406644344329834, 1.5216915607452393, 1.0462993383407593, 0.8428650498390198, 0.7577036023139954, 0.7054917812347412, 0.6635977029800415, 0.6341285109519958, 0.6073764562606812, 0.5794457197189331, 0.5646172761917114, 0.5510045289993286, 0.5387799739837646, 0.5296196937561035, 0.5103065371513367, 0.5024235248565674, 0.4937754273414612, 0.4878281354904175, 0.4806095361709595, 0.477247029542923, 0.46541690826416016, 0.4563332200050354, 0.4503794312477112, 0.44377467036247253, 0.44843074679374695, 0.43580636382102966, 0.4373356103897095, 0.4323407709598541, 0.4261687695980072, 0.42228400707244873, 0.42737630009651184, 0.4157499074935913, 0.40913310647010803, 0.4084351360797882, 0.41580355167388916, 0.4022403955459595, 0.40103206038475037, 0.3970278799533844, 0.39431139826774597, 0.3941119909286499, 0.38961201906204224, 0.3916226029396057, 0.3848625421524048, 0.39066365361213684, 0.381758451461792, 0.38148829340934753, 0.3808669447898865, 0.3782971203327179, 0.3765765428543091, 0.382183313369751, 0.3735443651676178, 0.37574315071105957, 0.37635448575019836, 0.3721157908439636, 0.3702203035354614, 0.373392790555954, 0.3781346082687378, 0.371233731508255, 0.36438223719596863, 0.3695794939994812, 0.36184078454971313, 0.3632960617542267, 0.36310216784477234, 0.36311793327331543, 0.3672522306442261, 0.3626362383365631, 0.3608936369419098, 0.366359144449234, 0.3633274734020233, 0.3622385561466217, 0.3651743531227112, 0.3623158037662506, 0.3715936541557312, 0.36430060863494873, 0.3583131432533264, 0.35908523201942444, 0.3599170744419098, 0.3599919080734253, 0.35684558749198914, 0.354582816362381, 0.3617245554924011, 0.3668658137321472, 0.3584713637828827, 0.36168283224105835], "val_accuracy": [0.5256666541099548, 0.6443333625793457, 0.6803333163261414, 0.6970000267028809, 0.7260000109672546, 0.7423333525657654, 0.7516666650772095, 0.7570000290870667, 0.7736666798591614, 0.7870000004768372, 0.7926666736602783, 0.7979999780654907, 0.8033333420753479, 0.8033333420753479, 0.8113333582878113, 0.8149999976158142, 0.8230000138282776, 0.8183333277702332, 0.8220000267028809, 0.8253333568572998, 0.831333339214325, 0.8339999914169312, 0.8299999833106995, 0.8370000123977661, 0.8330000042915344, 0.8393333554267883, 0.843666672706604, 0.8393333554267883, 0.8413333296775818, 0.846666693687439, 0.8399999737739563, 0.8486666679382324, 0.847000002861023, 0.8433333039283752, 0.8476666808128357, 0.8500000238418579, 0.8519999980926514, 0.8529999852180481, 0.8506666421890259, 0.8539999723434448, 0.8566666841506958, 0.856333315372467, 0.8576666712760925, 0.8546666502952576, 0.8600000143051147, 0.8573333621025085, 0.8569999933242798, 0.8616666793823242, 0.8586666584014893, 0.8566666841506958, 0.8629999756813049, 0.8576666712760925, 0.8619999885559082, 0.8640000224113464, 0.8666666746139526, 0.8640000224113464, 0.859333336353302, 0.8669999837875366, 0.8659999966621399, 0.8656666874885559, 0.8700000047683716, 0.8669999837875366, 0.8663333058357239, 0.8713333606719971, 0.8693333268165588, 0.8706666827201843, 0.8693333268165588, 0.8673333525657654, 0.8726666569709778, 0.8709999918937683, 0.8726666569709778, 0.8713333606719971, 0.8730000257492065, 0.8736666440963745, 0.875, 0.8726666569709778, 0.8709999918937683, 0.8743333220481873, 0.8769999742507935, 0.875, 0.8726666569709778, 0.8756666779518127, 0.8713333606719971, 0.8759999871253967]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0], [0, 9], [0], [0], [1], [0], [2], [0]], "fitness": -0.829714298248291, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.488908052444458, 0.8752728700637817, 0.6815409660339355, 0.6149917244911194, 0.5696858167648315, 0.535452127456665, 0.5010006427764893, 0.47359490394592285, 0.4688681960105896, 0.4771224856376648, 0.46715590357780457, 0.46196597814559937, 0.44026416540145874, 0.45843997597694397, 0.4650067389011383, 0.4488459825515747, 0.46415239572525024, 0.44546425342559814, 0.45071548223495483, 0.45507803559303284, 0.4528740644454956, 0.49036696553230286, 0.46925073862075806], "accuracy": [0.4819706678390503, 0.7088891863822937, 0.7569673657417297, 0.7770439982414246, 0.7860256433486938, 0.7996301651000977, 0.8177255392074585, 0.8289526104927063, 0.8236692547798157, 0.8308017253875732, 0.8348963260650635, 0.8289526104927063, 0.834632158279419, 0.8335754871368408, 0.8396512866020203, 0.8333113193511963, 0.8385946154594421, 0.847840428352356, 0.845859169960022, 0.8453308939933777, 0.841500461101532, 0.8345000743865967, 0.8411042094230652], "val_loss": [0.7409247756004333, 0.6438106298446655, 0.5056692361831665, 0.48006364703178406, 0.4784538447856903, 0.4449920654296875, 0.43125179409980774, 0.4500398635864258, 0.4558398425579071, 0.45773059129714966, 0.4519774913787842, 0.44661855697631836, 0.43728893995285034, 0.48128068447113037, 0.48683109879493713, 0.5286310315132141, 0.5322725176811218, 0.5680309534072876, 0.5139304399490356, 0.5303674936294556, 0.5108883380889893, 0.5826629996299744, 0.5516024827957153], "val_accuracy": [0.7160000205039978, 0.7683333158493042, 0.8159999847412109, 0.8176666498184204, 0.8159999847412109, 0.8386666774749756, 0.8486666679382324, 0.8483333587646484, 0.8450000286102295, 0.8513333201408386, 0.8476666808128357, 0.8510000109672546, 0.8560000061988831, 0.8479999899864197, 0.8513333201408386, 0.8460000157356262, 0.8463333249092102, 0.859333336353302, 0.8500000238418579, 0.8586666584014893, 0.8533333539962769, 0.843666672706604, 0.8496666550636292]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 7, 4, 3, 0, 8, 6, 6, 4, 5, 8, 3, 9, 3, 3, 1, 9, 0], [0, 0, 3, 3, 0, 4, 4, 0, 1], [33, 16, 64], [0, 1], [0, 9], [0], [4], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], [6, 3, 3, 6, 8, 8, 4, 1, 4, 2, 4, 3, 7, 9], [4, 3, 4, 3, 2, 6, 4, 1, 3, 0, 1], [0, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 10, 6, 4, 2, 2, 1, 1, 1, 25, 14, 11, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(sigma)), tf.math.pow(tf.math.subtract(grad, tf.math.pow(sigma, tf.math.add(beta, grad))), grad))), tf.math.pow(tf.math.multiply(alpha, sigma), tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 8, 3, 1, 9], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 3, 0, 3, 5, 2, 7, 6, 6, 2, 1, 9, 1, 0, 1, 5, 6, 9, 6, 2, 2, 4, 8, 9, 3, 1, 1, 4, 6, 4, 1, 0, 3, 9, 4, 2, 2, 7, 0, 0, 6, 8, 9, 6, 2, 2, 7, 7, 6, 1], [0, 2, 0, 3, 3, 1, 3, 0, 0, 3, 3, 2, 1, 2, 5, 4, 2, 1, 5, 4, 1, 2, 2, 2, 2, 0, 4, 0, 1, 0, 0, 4], [16, 16, 72, 60, 53, 54, 97, 46, 42, 89, 83, 83, 68], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 3, 6, 9, 1, 4, 4, 9], [4, 0, 1, 1], [99, 74, 74], [0, 1], [0], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 81, 50, 31, 13, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 39, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.square(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(grad, tf.math.add(tf.math.subtract(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.negative(alpha), tf.math.subtract(tf.math.square(grad), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(grad, tf.math.pow(tf.math.sqrt(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), beta)), tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.pow(beta, grad), grad)), tf.math.subtract(beta, tf.math.negative(alpha))), grad), tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.negative(tf.math.divide_no_nan(beta, tf.math.sqrt(beta)))), beta)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))))))), tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09060890227556229, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 0, 1, 0, 2], [39, 39, 50], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [9, 7, 4, 3, 0, 8, 6, 6, 8, 5, 8, 3, 9, 3, 3, 1, 9, 0], [0, 2, 0, 3, 5, 1, 2, 0, 2], [16, 16, 56, 47], [1, 1], [3], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 2, 3, 1, 2, 0], [0, 33, 49, 96, 54, 68]], "fitness": -0.09514285624027252, "mapping_values": [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 16, 8, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), beta), tf.math.subtract(sigma, alpha))", "other_info": {"loss": [2.310608386993408, 2.310587167739868, 2.3087050914764404, 2.309598207473755, 2.3085410594940186, 2.3097140789031982], "accuracy": [0.09074098616838455, 0.0956280529499054, 0.09087307006120682, 0.0874389111995697, 0.09800554811954498, 0.09219389408826828], "val_loss": [2.3082706928253174, 2.3082706928253174, 2.3082706928253174, 2.3082706928253174, 2.3082706928253174, 2.3082706928253174], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [5, 2, 3, 0, 3], [0, 1, 0, 2], [39, 15], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [4, 2, 3, 0, 3, 5, 1], [3, 2, 0, 3, 5, 0], [16, 16], [0, 1], [8], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 3, 2, 8], [1, 0, 1, 3, 0, 0, 3, 1, 2, 0], [16, 41, 87, 99, 61, 1]], "fitness": -0.0908571407198906, "mapping_values": [1, 9, 5, 4, 2, 13, 7, 6, 2, 2, 1, 1, 1, 16, 8, 8, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.math.multiply(tf.math.square(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad), tf.math.subtract(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha)), sigma)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.3105387687683105, 2.310577869415283, 2.3089370727539062, 2.310258388519287, 2.311020612716675, 2.309924364089966], "accuracy": [0.09126931428909302, 0.08730682730674744, 0.09642054885625839, 0.09470347315073013, 0.09153348207473755, 0.09153348207473755], "val_loss": [2.307851791381836, 2.307851791381836, 2.307851791381836, 2.307851791381836, 2.307851791381836, 2.307851791381836], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]