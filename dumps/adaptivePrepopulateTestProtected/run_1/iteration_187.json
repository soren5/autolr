[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8659999966621399, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223881959915161, 1.8770581483840942, 1.4063749313354492, 1.102963924407959, 0.954459011554718, 0.8490463495254517, 0.7899249792098999, 0.7330042719841003, 0.7081495523452759, 0.6738258600234985, 0.6484870314598083, 0.633264422416687, 0.6098478436470032, 0.5952881574630737, 0.5726998448371887, 0.5621816515922546, 0.54808509349823, 0.5323020815849304, 0.5233340263366699, 0.5211633443832397, 0.5053064227104187, 0.4962303936481476, 0.4845515489578247, 0.4684170186519623, 0.4641651213169098, 0.45592522621154785, 0.45339521765708923, 0.4458348751068115, 0.43533968925476074, 0.4242427945137024, 0.43232518434524536, 0.4166136085987091, 0.4144691824913025, 0.4088989198207855, 0.39698314666748047, 0.39115771651268005, 0.38813889026641846, 0.3800399601459503, 0.37464115023612976, 0.37218865752220154, 0.3632301390171051, 0.36315467953681946, 0.3517346978187561, 0.34287169575691223, 0.3468795716762543, 0.33922967314720154, 0.3369283676147461, 0.33287426829338074, 0.3284604847431183, 0.321899950504303, 0.3159579336643219, 0.31168603897094727, 0.3040710985660553, 0.3050137460231781, 0.29489654302597046, 0.294563353061676, 0.2927827835083008], "accuracy": [0.2719587981700897, 0.47232863306999207, 0.5695416927337646, 0.6145819425582886, 0.6602826714515686, 0.6942279934883118, 0.7150970697402954, 0.7368907928466797, 0.7420420050621033, 0.7564390301704407, 0.7640998363494873, 0.7666094303131104, 0.7783648371696472, 0.78113853931427, 0.7905164361000061, 0.7968564033508301, 0.8043851256370544, 0.8095363974571228, 0.8137630224227905, 0.8103289008140564, 0.821820080280304, 0.8228767514228821, 0.8286884427070618, 0.83119797706604, 0.8342359066009521, 0.8374059200286865, 0.8376700282096863, 0.8391229510307312, 0.8450667262077332, 0.8502179384231567, 0.8444063067436218, 0.8500858545303345, 0.8518029451370239, 0.8562937378883362, 0.8556333184242249, 0.8622375130653381, 0.8613129258155823, 0.8602562546730042, 0.8605204224586487, 0.8636903762817383, 0.8708229064941406, 0.8712190985679626, 0.8720116019248962, 0.8774270415306091, 0.8757099509239197, 0.8768987059593201, 0.8767666220664978, 0.8812574148178101, 0.8809932470321655, 0.8825782537460327, 0.8853520154953003, 0.8844274282455444, 0.8908994793891907, 0.8927486538887024, 0.89552241563797, 0.8953903317451477, 0.8968431949615479], "val_loss": [2.0422158241271973, 1.5275413990020752, 1.0615545511245728, 0.8601903319358826, 0.7738155126571655, 0.716200053691864, 0.6767213344573975, 0.6419525742530823, 0.617252767086029, 0.5897346138954163, 0.5760416388511658, 0.5555593967437744, 0.5494500994682312, 0.5265962481498718, 0.5214956402778625, 0.5075802206993103, 0.5011841058731079, 0.48940518498420715, 0.48465266823768616, 0.47793081402778625, 0.46980106830596924, 0.4653483033180237, 0.45731306076049805, 0.4475833475589752, 0.44681331515312195, 0.4405326247215271, 0.4353577494621277, 0.42752590775489807, 0.42922669649124146, 0.42369136214256287, 0.42213955521583557, 0.4153982400894165, 0.41273239254951477, 0.4064829647541046, 0.4059019386768341, 0.4062812924385071, 0.40029841661453247, 0.39434993267059326, 0.39434224367141724, 0.38743728399276733, 0.3863832950592041, 0.38432103395462036, 0.3846321702003479, 0.38951969146728516, 0.3790433406829834, 0.3780832588672638, 0.3805742561817169, 0.37395793199539185, 0.3771078288555145, 0.37080079317092896, 0.3722946047782898, 0.36662158370018005, 0.3673027753829956, 0.36263149976730347, 0.36563819646835327, 0.3629320561885834, 0.362460196018219], "val_accuracy": [0.5189999938011169, 0.6523333191871643, 0.6766666769981384, 0.7036666870117188, 0.7250000238418579, 0.7316666841506958, 0.7390000224113464, 0.762333333492279, 0.7689999938011169, 0.7796666622161865, 0.7816666960716248, 0.7926666736602783, 0.7929999828338623, 0.812666654586792, 0.8086666464805603, 0.8146666884422302, 0.8166666626930237, 0.8186666369438171, 0.8263333439826965, 0.8270000219345093, 0.8316666483879089, 0.8286666870117188, 0.8353333473205566, 0.8376666903495789, 0.840666651725769, 0.8396666646003723, 0.8473333120346069, 0.8486666679382324, 0.843999981880188, 0.8473333120346069, 0.847000002861023, 0.8546666502952576, 0.8533333539962769, 0.8550000190734863, 0.859000027179718, 0.8529999852180481, 0.8583333492279053, 0.8613333106040955, 0.8603333234786987, 0.862666666507721, 0.8616666793823242, 0.8653333187103271, 0.8663333058357239, 0.859000027179718, 0.8650000095367432, 0.8636666536331177, 0.8663333058357239, 0.8686666488647461, 0.8700000047683716, 0.8686666488647461, 0.8653333187103271, 0.8723333477973938, 0.871666669845581, 0.8693333268165588, 0.8703333139419556, 0.8703333139419556, 0.8709999918937683]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8565714359283447, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293419122695923, 2.189049482345581, 1.7661255598068237, 1.3506138324737549, 1.074805736541748, 0.9188192486763, 0.8569301962852478, 0.8049836158752441, 0.7679000496864319, 0.740612268447876, 0.7099171876907349, 0.6860445141792297, 0.6523023247718811, 0.6297987103462219, 0.6161726713180542, 0.5973069667816162, 0.5890817642211914, 0.5671520829200745, 0.5687867999076843, 0.5573273301124573, 0.5419691205024719, 0.526888370513916, 0.5063678622245789, 0.5087024569511414, 0.49752742052078247, 0.48918062448501587, 0.48093584179878235, 0.4668036103248596, 0.44776666164398193, 0.4332226514816284, 0.42702430486679077, 0.41696232557296753, 0.41902124881744385, 0.40179628133773804, 0.408230721950531, 0.4024417996406555, 0.3864647150039673, 0.38483917713165283, 0.37634262442588806, 0.3686372637748718], "accuracy": [0.12812046706676483, 0.3287544548511505, 0.43111875653266907, 0.5486725568771362, 0.6289790272712708, 0.6567164063453674, 0.6935675740242004, 0.7018887996673584, 0.6983225345611572, 0.718399167060852, 0.7250033020973206, 0.7320036888122559, 0.7430986762046814, 0.7617223858833313, 0.7647602558135986, 0.7688548564910889, 0.7745344042778015, 0.7845727205276489, 0.7791573405265808, 0.7895918488502502, 0.7931581139564514, 0.8009510040283203, 0.8043851256370544, 0.800818920135498, 0.8038568496704102, 0.8119139075279236, 0.8133667707443237, 0.8215559124946594, 0.82683926820755, 0.8294808864593506, 0.8359529972076416, 0.8388587832450867, 0.8404437899589539, 0.8418967127799988, 0.8449346423149109, 0.8445383906364441, 0.8482366800308228, 0.845859169960022, 0.8549728989601135, 0.8582749962806702], "val_loss": [2.2467896938323975, 2.016308069229126, 1.1475446224212646, 0.9253061413764954, 0.7798497676849365, 0.7201482653617859, 0.7006577253341675, 0.6816527843475342, 0.6516211628913879, 0.6337939500808716, 0.6055511832237244, 0.5835761427879333, 0.5580086708068848, 0.5518556833267212, 0.5427179336547852, 0.5291694402694702, 0.5204434990882874, 0.5212783813476562, 0.5103198885917664, 0.5085729956626892, 0.5049519538879395, 0.5054640173912048, 0.499098539352417, 0.48508861660957336, 0.49255356192588806, 0.49008554220199585, 0.47180619835853577, 0.4627430737018585, 0.4697645306587219, 0.4574621915817261, 0.4428732395172119, 0.4451920688152313, 0.44765225052833557, 0.4316796064376831, 0.4317643344402313, 0.4427223801612854, 0.4230770170688629, 0.43087872862815857, 0.44411060214042664, 0.4500489830970764], "val_accuracy": [0.41999998688697815, 0.4436666667461395, 0.6499999761581421, 0.6953333616256714, 0.7173333168029785, 0.734666645526886, 0.7323333621025085, 0.7493333220481873, 0.7509999871253967, 0.7639999985694885, 0.765333354473114, 0.7793333530426025, 0.7960000038146973, 0.7933333516120911, 0.7983333468437195, 0.8046666383743286, 0.8073333501815796, 0.796999990940094, 0.8133333325386047, 0.8163333535194397, 0.8203333616256714, 0.8209999799728394, 0.8253333568572998, 0.8320000171661377, 0.8320000171661377, 0.8333333134651184, 0.8330000042915344, 0.8383333086967468, 0.8383333086967468, 0.8483333587646484, 0.8473333120346069, 0.8506666421890259, 0.8576666712760925, 0.8536666631698608, 0.859666645526886, 0.8536666631698608, 0.8576666712760925, 0.859000027179718, 0.8576666712760925, 0.8523333072662354]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0], [0, 9], [0], [0], [1], [0], [2], [0]], "fitness": -0.824571430683136, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6482142210006714, 0.9114147424697876, 0.740760862827301, 0.666700541973114, 0.6277371644973755, 0.5773268938064575, 0.5530833005905151, 0.5206860303878784, 0.4998026490211487, 0.5012774467468262, 0.507470428943634, 0.5379957556724548, 0.5305287837982178, 0.4973958134651184, 0.54157555103302, 0.5490332245826721, 0.5342149138450623, 0.5318008065223694, 0.5428934097290039, 0.548724353313446, 0.5717111229896545, 0.5525869131088257, 0.5981413722038269], "accuracy": [0.46770572662353516, 0.6852463483810425, 0.7300224304199219, 0.7582882046699524, 0.7651565074920654, 0.7889314293861389, 0.804649293422699, 0.8131026029586792, 0.8249900937080383, 0.816008448600769, 0.819970965385437, 0.8150838613510132, 0.816008448600769, 0.8236692547798157, 0.8182538747787476, 0.8232730031013489, 0.8201030492782593, 0.8149517774581909, 0.8177255392074585, 0.8197067975997925, 0.8202351331710815, 0.8245938420295715, 0.8162726163864136], "val_loss": [0.9260320663452148, 0.690691351890564, 0.6288644075393677, 0.5737826228141785, 0.5561633110046387, 0.5684489011764526, 0.5222203135490417, 0.5790789127349854, 0.554861843585968, 0.5929777026176453, 0.6455750465393066, 0.6406198143959045, 0.6249549388885498, 0.7304368615150452, 0.6612841486930847, 0.7449594736099243, 0.6489415764808655, 0.769707202911377, 0.691373884677887, 0.7505308985710144, 0.7622005939483643, 0.759608805179596, 0.8787955641746521], "val_accuracy": [0.6949999928474426, 0.7726666927337646, 0.7773333191871643, 0.8103333115577698, 0.8190000057220459, 0.8176666498184204, 0.8240000009536743, 0.8256666660308838, 0.8233333230018616, 0.8233333230018616, 0.8266666531562805, 0.8333333134651184, 0.8173333406448364, 0.8306666612625122, 0.8216666579246521, 0.8149999976158142, 0.8343333601951599, 0.8410000205039978, 0.812666654586792, 0.8389999866485596, 0.82833331823349, 0.8186666369438171, 0.8216666579246521]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [76, 16], [0, 1], [9], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 4, 8, 1, 9, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 1, 1, 0, 1, 12, 7, 5, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303331136703491, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 2, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [1, 3, 3, 2, 8, 1, 4, 1, 4, 2, 6], [4, 3, 0, 3, 0, 0, 3, 0, 2, 0], [16, 58, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 2, 2, 1, 1, 1, 20, 10, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.multiply(grad, tf.math.add(tf.math.sqrt(tf.math.subtract(sigma, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [19298190.0, 2.3082590103149414, 2.3045146465301514, 2.304534435272217, 2.3050436973571777, 2.3051350116729736, 2.304016590118408], "accuracy": [0.09708096832036972, 0.09509972482919693, 0.0956280529499054, 0.10210011899471283, 0.0952318087220192, 0.09655263274908066, 0.09998679161071777], "val_loss": [2.3170526027679443, 2.303220748901367, 2.3042240142822266, 2.3047945499420166, 2.305835247039795, 2.303554058074951, 2.3106861114501953], "val_accuracy": [0.09933333098888397, 0.10300000011920929, 0.10000000149011612, 0.10000000149011612, 0.0976666659116745, 0.10300000011920929, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 3, 0, 2, 0, 2], [0, 2, 2, 2, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 2, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 3, 0, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 1, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(tf.math.negative(grad), tf.math.add(grad, alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], [0, 2, 3, 0, 3, 8, 8, 9], [0, 1, 0, 2], [39, 30, 84], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [3], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 2, 6, 8, 0, 3, 1, 2, 2, 8, 7, 8, 2, 5], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 8, 3, 3, 10, 6, 4, 2, 2, 1, 1, 0, 26, 15, 11, 5], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.sqrt(sigma), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.sqrt(sigma), alpha))), tf.math.add(tf.math.square(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]