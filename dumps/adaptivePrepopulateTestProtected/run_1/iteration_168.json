[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8742856979370117, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2195703983306885, 1.8654673099517822, 1.3897311687469482, 1.093468189239502, 0.9299314022064209, 0.8296003341674805, 0.7592765092849731, 0.7245213389396667, 0.6753844618797302, 0.6519390940666199, 0.6315760016441345, 0.6076300144195557, 0.5719523429870605, 0.5647997260093689, 0.5608236193656921, 0.539219856262207, 0.5243150591850281, 0.5061647891998291, 0.5061580538749695, 0.4928373396396637, 0.4785226583480835, 0.4650954604148865, 0.4653231203556061, 0.45384785532951355, 0.44979122281074524, 0.4372817873954773, 0.4302903115749359, 0.41940003633499146, 0.4144778847694397, 0.40951377153396606, 0.40780436992645264, 0.39717116951942444, 0.39512282609939575, 0.3887327015399933, 0.3847786784172058, 0.371797651052475, 0.370154470205307, 0.36681103706359863, 0.35726961493492126, 0.35061854124069214, 0.34842365980148315, 0.3481435775756836, 0.3441007733345032, 0.3323308825492859, 0.33001890778541565, 0.3255448639392853, 0.3203608989715576, 0.31532299518585205, 0.30813369154930115, 0.3053974211215973, 0.2985617518424988, 0.29936784505844116, 0.2910410165786743, 0.2907416820526123, 0.2857728600502014], "accuracy": [0.27961960434913635, 0.4768194556236267, 0.5654470920562744, 0.6221106648445129, 0.6646413803100586, 0.7049266695976257, 0.728701651096344, 0.737947404384613, 0.7536653280258179, 0.7625148296356201, 0.7677981853485107, 0.7721568942070007, 0.7898560166358948, 0.7946110367774963, 0.7952714562416077, 0.804649293422699, 0.8101968169212341, 0.8144234418869019, 0.8156121969223022, 0.8228767514228821, 0.8297450542449951, 0.8310658931732178, 0.8319904804229736, 0.8372738361358643, 0.8364813327789307, 0.844010055065155, 0.8457271456718445, 0.8479725122451782, 0.8485008478164673, 0.852859616279602, 0.8543124794960022, 0.8548408150672913, 0.8577466607093811, 0.8582749962806702, 0.8614450097084045, 0.8689737319946289, 0.8658037185668945, 0.869502067565918, 0.8730682730674744, 0.872407853603363, 0.8728041052818298, 0.8754457831382751, 0.8720116019248962, 0.876370370388031, 0.8790120482444763, 0.880729079246521, 0.8858803510665894, 0.8837670087814331, 0.8879936337471008, 0.8897107243537903, 0.8908994793891907, 0.8919561505317688, 0.889578640460968, 0.8912957310676575, 0.8960506916046143], "val_loss": [2.038177013397217, 1.5144202709197998, 1.0324972867965698, 0.8221596479415894, 0.7321407794952393, 0.6778938174247742, 0.6333017349243164, 0.59757000207901, 0.5827791094779968, 0.5556213855743408, 0.5418485403060913, 0.5260365605354309, 0.518389880657196, 0.5008211135864258, 0.49409598112106323, 0.4819897413253784, 0.48020491003990173, 0.46436238288879395, 0.45901793241500854, 0.45103132724761963, 0.439287930727005, 0.4401007890701294, 0.4341214895248413, 0.43211397528648376, 0.42236828804016113, 0.42229533195495605, 0.41501474380493164, 0.4126957952976227, 0.4105131924152374, 0.40490734577178955, 0.4045836329460144, 0.40032702684402466, 0.3967816233634949, 0.39773812890052795, 0.39122164249420166, 0.39227747917175293, 0.3872818052768707, 0.3832518458366394, 0.38329756259918213, 0.38082292675971985, 0.38642749190330505, 0.3791114389896393, 0.3772048056125641, 0.3784773647785187, 0.371956467628479, 0.3678489923477173, 0.36699995398521423, 0.3676622807979584, 0.364524245262146, 0.36517101526260376, 0.36106419563293457, 0.36019036173820496, 0.36074328422546387, 0.3637523651123047, 0.3579943776130676], "val_accuracy": [0.5026666522026062, 0.6596666574478149, 0.6840000152587891, 0.7133333086967468, 0.7443333268165588, 0.7616666555404663, 0.7723333239555359, 0.793666660785675, 0.7860000133514404, 0.7986666560173035, 0.8113333582878113, 0.8149999976158142, 0.8169999718666077, 0.828000009059906, 0.8233333230018616, 0.8323333263397217, 0.8256666660308838, 0.8356666564941406, 0.8399999737739563, 0.8399999737739563, 0.843999981880188, 0.843666672706604, 0.8446666598320007, 0.8373333215713501, 0.8483333587646484, 0.847000002861023, 0.8486666679382324, 0.8513333201408386, 0.8539999723434448, 0.8579999804496765, 0.8503333330154419, 0.8576666712760925, 0.8550000190734863, 0.8566666841506958, 0.859666645526886, 0.8600000143051147, 0.8603333234786987, 0.859333336353302, 0.8603333234786987, 0.8633333444595337, 0.8573333621025085, 0.8633333444595337, 0.8646666407585144, 0.8640000224113464, 0.859666645526886, 0.8653333187103271, 0.8636666536331177, 0.8643333315849304, 0.8666666746139526, 0.8706666827201843, 0.8676666617393494, 0.8693333268165588, 0.8679999709129333, 0.8703333139419556, 0.8703333139419556]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 1, 0, 1, 1], [0, 6, 5, 7], [0, 3, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8640000224113464, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2925617694854736, 2.1885292530059814, 1.7531009912490845, 1.3432528972625732, 1.066396951675415, 0.8938378691673279, 0.830723226070404, 0.8002800345420837, 0.7537030577659607, 0.7375431656837463, 0.6983413100242615, 0.674906849861145, 0.6369489431381226, 0.6276707649230957, 0.6019096970558167, 0.5943455100059509, 0.5877556800842285, 0.5530284643173218, 0.5501587986946106, 0.5476413369178772, 0.5351065993309021, 0.5266764163970947, 0.5029600858688354, 0.49670618772506714, 0.48767080903053284, 0.48136112093925476, 0.4623355269432068, 0.4529942572116852, 0.4501997232437134, 0.4417160451412201, 0.43642470240592957, 0.42671456933021545, 0.41729843616485596, 0.41183459758758545, 0.4210667312145233, 0.402219295501709, 0.40215009450912476, 0.38586512207984924, 0.38445934653282166, 0.38279664516448975, 0.37600043416023254, 0.3655073344707489, 0.3620011806488037, 0.35368070006370544, 0.3398038148880005, 0.3432101309299469, 0.3487686812877655, 0.34111979603767395, 0.3412759006023407, 0.32418131828308105, 0.32285478711128235, 0.3238627314567566, 0.3072208762168884, 0.30830857157707214], "accuracy": [0.13168670237064362, 0.3214899003505707, 0.4387795627117157, 0.5498613119125366, 0.6338660717010498, 0.6660943031311035, 0.7012283802032471, 0.7010962963104248, 0.7073041796684265, 0.7077004313468933, 0.7351737022399902, 0.7403249144554138, 0.7452120184898376, 0.7588165402412415, 0.7644960880279541, 0.7630431652069092, 0.7814027070999146, 0.789988100528717, 0.7884030938148499, 0.789988100528717, 0.7940827012062073, 0.7954035401344299, 0.802271842956543, 0.8115176558494568, 0.8107251524925232, 0.811649739742279, 0.8204993009567261, 0.8267071843147278, 0.8241975903511047, 0.8278959393501282, 0.8294808864593506, 0.8366134166717529, 0.8397833704948425, 0.8475762605667114, 0.8368775844573975, 0.8432175517082214, 0.8454629778862, 0.8531237840652466, 0.8532558679580688, 0.8531237840652466, 0.8514066934585571, 0.8574824929237366, 0.856689989566803, 0.8582749962806702, 0.8658037185668945, 0.8669924736022949, 0.860652506351471, 0.8672566413879395, 0.8638224601745605, 0.8710870146751404, 0.8710870146751404, 0.8713511824607849, 0.8802007436752319, 0.8813894987106323], "val_loss": [2.2467310428619385, 2.0158698558807373, 1.1400891542434692, 0.8994560837745667, 0.7919995784759521, 0.7216041088104248, 0.703784167766571, 0.6970070600509644, 0.670415461063385, 0.6441823840141296, 0.6182680726051331, 0.5950655937194824, 0.5837466716766357, 0.5810413956642151, 0.5648857951164246, 0.5423790812492371, 0.5366706848144531, 0.5281754732131958, 0.5387778282165527, 0.5381228923797607, 0.5165441036224365, 0.504723310470581, 0.5174625515937805, 0.5021700263023376, 0.4857097864151001, 0.4857577979564667, 0.47938260436058044, 0.4644201993942261, 0.46703654527664185, 0.46687787771224976, 0.4515986442565918, 0.45644620060920715, 0.4626762270927429, 0.4510079026222229, 0.45258527994155884, 0.46256130933761597, 0.43982556462287903, 0.4514920115470886, 0.4610554873943329, 0.4598178565502167, 0.45829853415489197, 0.44476452469825745, 0.4650660455226898, 0.4585319459438324, 0.43036743998527527, 0.44723641872406006, 0.45506879687309265, 0.4734632074832916, 0.4648493230342865, 0.44498971104621887, 0.4535690248012543, 0.4739646017551422, 0.4655788540840149, 0.4842255115509033], "val_accuracy": [0.42500001192092896, 0.46666666865348816, 0.637666642665863, 0.6893333196640015, 0.7099999785423279, 0.7326666712760925, 0.7383333444595337, 0.749666690826416, 0.746666669845581, 0.753333330154419, 0.7570000290870667, 0.749666690826416, 0.7786666750907898, 0.7856666445732117, 0.7866666913032532, 0.7876666784286499, 0.7983333468437195, 0.8080000281333923, 0.8066666722297668, 0.8026666641235352, 0.8080000281333923, 0.8116666674613953, 0.8130000233650208, 0.8173333406448364, 0.8173333406448364, 0.8223333358764648, 0.8220000267028809, 0.8296666741371155, 0.8343333601951599, 0.8379999995231628, 0.8423333168029785, 0.8353333473205566, 0.8410000205039978, 0.8423333168029785, 0.8413333296775818, 0.8446666598320007, 0.843999981880188, 0.8456666469573975, 0.8506666421890259, 0.8533333539962769, 0.8510000109672546, 0.8526666760444641, 0.8453333377838135, 0.8516666889190674, 0.8583333492279053, 0.8503333330154419, 0.8533333539962769, 0.8566666841506958, 0.859333336353302, 0.8543333411216736, 0.8546666502952576, 0.8556666374206543, 0.8566666841506958, 0.859000027179718]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 7, 4, 3, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8254285454750061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.567078948020935, 0.7772050499916077, 0.6329168081283569, 0.5737638473510742, 0.5257273316383362, 0.48731911182403564, 0.48912498354911804, 0.48027506470680237, 0.4704631567001343, 0.47973349690437317, 0.5259464383125305, 0.5375283360481262, 0.5119855999946594, 0.4873333275318146, 0.4748426377773285, 0.4681697487831116, 0.5671699047088623, 0.5644490122795105, 0.5652883648872375, 0.554408073425293], "accuracy": [0.47549861669540405, 0.72672039270401, 0.7712323069572449, 0.7938185334205627, 0.8080834746360779, 0.819970965385437, 0.8238013386726379, 0.829216718673706, 0.8300092220306396, 0.8309338092803955, 0.828820526599884, 0.8168009519577026, 0.8211596608161926, 0.824329674243927, 0.835160493850708, 0.8286884427070618, 0.8319904804229736, 0.8211596608161926, 0.8309338092803955, 0.8189142942428589], "val_loss": [0.7636643648147583, 0.61664879322052, 0.5511635541915894, 0.5091153979301453, 0.47888338565826416, 0.49972549080848694, 0.513011634349823, 0.5551458597183228, 0.5228666067123413, 0.6077757477760315, 0.5926523208618164, 0.6021374464035034, 0.5420694947242737, 0.5382367372512817, 0.5144135355949402, 0.6043666005134583, 0.549639105796814, 0.6347384452819824, 0.6684701442718506, 0.5837883353233337], "val_accuracy": [0.7256666421890259, 0.7743333578109741, 0.8106666803359985, 0.8116666674613953, 0.8230000138282776, 0.82833331823349, 0.8339999914169312, 0.8330000042915344, 0.8299999833106995, 0.8373333215713501, 0.8216666579246521, 0.8323333263397217, 0.831333339214325, 0.8373333215713501, 0.840666651725769, 0.8376666903495789, 0.8216666579246521, 0.8230000138282776, 0.8336666822433472, 0.82833331823349]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 8, 1], [0, 1, 0, 2], [39, 11], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 4, 5, 0, 1, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 1, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 4, 0, 6], [16, 99, 79, 28, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1, 22, 11, 11, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), grad)), tf.math.add(tf.math.sqrt(grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 2, 3], [0, 1, 0, 2], [39, 39], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 2], [16, 16], [0, 1], [0], [0], [2], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 9, 8, 1, 4, 1, 4, 2, 0], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 24, 61, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1, 16, 9, 7, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), sigma)))), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 6, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 4, 0, 3, 5], [0, 2, 0, 3], [16, 3], [0, 1], [9], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 6, 2, 8], [4, 4, 0, 0, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.multiply(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09034473448991776, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 1, 1, 0, 1, 21, 11, 10, 5], "tree_depth": 20}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 2, 3, 1, 3, 9], [0, 1, 0, 2], [39, 39, 85], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 1], [3], [0, 2], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 2, 1, 4, 1, 4, 8, 3, 4, 8, 1, 9], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0, 7, 4], [16, 99, 96, 99, 61, 1, 17]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 10, 6, 4, 2, 3, 1, 2, 1, 27, 15, 12, 7], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.sqrt(tf.math.multiply(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha)))), grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), grad), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]