[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8794285655021667, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222564220428467, 1.8654934167861938, 1.392636775970459, 1.0800100564956665, 0.9349965453147888, 0.83723384141922, 0.771166205406189, 0.7229189872741699, 0.6917352080345154, 0.6532851457595825, 0.6217012405395508, 0.6138775944709778, 0.5917757749557495, 0.5793368220329285, 0.5567960739135742, 0.5480981469154358, 0.5474538803100586, 0.5317270755767822, 0.5151227116584778, 0.5055264234542847, 0.5014929175376892, 0.4862228035926819, 0.4727080464363098, 0.47010233998298645, 0.46293196082115173, 0.4504174590110779, 0.447412371635437, 0.4438058137893677, 0.42948198318481445, 0.417126327753067, 0.4136964678764343, 0.40704113245010376, 0.4020131528377533, 0.39997783303260803, 0.39442774653434753, 0.3916949927806854, 0.38260385394096375, 0.3716582953929901, 0.3650337755680084, 0.3573426902294159, 0.36132100224494934, 0.3564379811286926, 0.3445151448249817, 0.33812835812568665, 0.3384065330028534, 0.3359524607658386, 0.33294373750686646, 0.3212839663028717, 0.3217304050922394, 0.3110441267490387, 0.31119072437286377], "accuracy": [0.2685246467590332, 0.4955752193927765, 0.5610883831977844, 0.6197332143783569, 0.6668868064880371, 0.6963412761688232, 0.7205125093460083, 0.7349095344543457, 0.7469290494918823, 0.7604015469551086, 0.7732135653495789, 0.7761194109916687, 0.7878747582435608, 0.7901201844215393, 0.8009510040283203, 0.802271842956543, 0.8050455451011658, 0.8103289008140564, 0.8158763647079468, 0.8197067975997925, 0.817461371421814, 0.8255184292793274, 0.8273676037788391, 0.8333113193511963, 0.832650899887085, 0.8392550349235535, 0.8367455005645752, 0.8408400416374207, 0.8474441766738892, 0.8475762605667114, 0.8519350290298462, 0.8545766472816467, 0.8574824929237366, 0.8544445633888245, 0.8589354157447815, 0.8561616539955139, 0.8632941246032715, 0.8640866279602051, 0.869502067565918, 0.8702945709228516, 0.8702945709228516, 0.8689737319946289, 0.8772949576377869, 0.8754457831382751, 0.8767666220664978, 0.8809932470321655, 0.8776912093162537, 0.8853520154953003, 0.8811253309249878, 0.8886540532112122, 0.8885219693183899], "val_loss": [2.042604923248291, 1.5189800262451172, 1.0515391826629639, 0.8450219035148621, 0.7558016777038574, 0.7093545794487, 0.6593213081359863, 0.6230939030647278, 0.5998342037200928, 0.5830129981040955, 0.5592260956764221, 0.5484577417373657, 0.5345214009284973, 0.5245682597160339, 0.508945107460022, 0.5038147568702698, 0.4949795603752136, 0.4867953658103943, 0.47808560729026794, 0.4682127833366394, 0.46202969551086426, 0.4617370665073395, 0.4514632225036621, 0.4495610296726227, 0.4391477108001709, 0.43453720211982727, 0.42648962140083313, 0.42570948600769043, 0.4242604672908783, 0.4146496057510376, 0.41664713621139526, 0.4113439619541168, 0.41593310236930847, 0.4013250470161438, 0.40437138080596924, 0.39875122904777527, 0.3905998170375824, 0.3918660581111908, 0.38664665818214417, 0.3956036865711212, 0.38548287749290466, 0.3855803310871124, 0.3777529299259186, 0.3802799582481384, 0.3779101073741913, 0.371540904045105, 0.3776323199272156, 0.36875513195991516, 0.37442195415496826, 0.3655129075050354, 0.3628164827823639], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6830000281333923, 0.7059999704360962, 0.7336666584014893, 0.7506666779518127, 0.7580000162124634, 0.7689999938011169, 0.7736666798591614, 0.7846666574478149, 0.7950000166893005, 0.7963333129882812, 0.7993333339691162, 0.8100000023841858, 0.8173333406448364, 0.8190000057220459, 0.8213333487510681, 0.8209999799728394, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8336666822433472, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8393333554267883, 0.8429999947547913, 0.8443333506584167, 0.843999981880188, 0.8476666808128357, 0.8446666598320007, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8493333458900452, 0.8550000190734863, 0.8546666502952576, 0.856333315372467, 0.8613333106040955, 0.856333315372467, 0.859000027179718, 0.8550000190734863, 0.8586666584014893, 0.8633333444595337, 0.8619999885559082, 0.8659999966621399, 0.859666645526886, 0.862666666507721, 0.8603333234786987, 0.8610000014305115, 0.8650000095367432]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8500000238418579, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2929394245147705, 2.1894054412841797, 1.7736597061157227, 1.386358380317688, 1.0775541067123413, 0.9352623224258423, 0.8587316274642944, 0.8098862767219543, 0.7649441957473755, 0.7579906582832336, 0.721860408782959, 0.6662172675132751, 0.6572546362876892, 0.628995954990387, 0.6210785508155823, 0.5946987271308899, 0.6054975390434265, 0.5894830822944641, 0.5631115436553955, 0.5537606477737427, 0.543482780456543, 0.5256191492080688, 0.5213075280189514, 0.5152558088302612, 0.5091052651405334, 0.499263733625412, 0.4865933656692505, 0.4766938090324402, 0.463866263628006, 0.46455955505371094, 0.4490327537059784, 0.44917070865631104, 0.4397503733634949, 0.4304972290992737, 0.4152195155620575, 0.4203450083732605, 0.4105832576751709, 0.39921581745147705, 0.3994884192943573, 0.3840683102607727, 0.38263189792633057, 0.37106752395629883, 0.38111525774002075], "accuracy": [0.12838461995124817, 0.33284902572631836, 0.4270241856575012, 0.5322942733764648, 0.6349227428436279, 0.6516972780227661, 0.6865671873092651, 0.7065116763114929, 0.7094175219535828, 0.7157574892044067, 0.7298903465270996, 0.7497028112411499, 0.7491744756698608, 0.7600052952766418, 0.7605336308479309, 0.7709681391716003, 0.7700436115264893, 0.7791573405265808, 0.7848368883132935, 0.7884030938148499, 0.7895918488502502, 0.7996301651000977, 0.8013472557067871, 0.8025360107421875, 0.800818920135498, 0.8127063512802124, 0.817461371421814, 0.8165367841720581, 0.8210275769233704, 0.8228767514228821, 0.8269713521003723, 0.8271034359931946, 0.8342359066009521, 0.8347642421722412, 0.841500461101532, 0.8381983637809753, 0.8418967127799988, 0.8502179384231567, 0.8551049828529358, 0.8514066934585571, 0.8516708612442017, 0.8590674996376038, 0.8516708612442017], "val_loss": [2.244884967803955, 2.0181028842926025, 1.1362565755844116, 0.8812949061393738, 0.7678805589675903, 0.7109603881835938, 0.6658309698104858, 0.6273593306541443, 0.6333909630775452, 0.6025364398956299, 0.5510204434394836, 0.5249516367912292, 0.4982464909553528, 0.5025714039802551, 0.509416937828064, 0.49628475308418274, 0.4636504650115967, 0.4667752683162689, 0.4726257622241974, 0.45151111483573914, 0.4393186867237091, 0.4435238838195801, 0.42809444665908813, 0.4231173098087311, 0.4316427409648895, 0.42276448011398315, 0.4116388261318207, 0.39660030603408813, 0.4022350311279297, 0.3937506377696991, 0.39083045721054077, 0.39028945565223694, 0.39658331871032715, 0.384369432926178, 0.37589505314826965, 0.3717661201953888, 0.377179354429245, 0.3723224997520447, 0.36587026715278625, 0.3679579198360443, 0.36665964126586914, 0.366091787815094, 0.3694031834602356], "val_accuracy": [0.4423333406448364, 0.44733333587646484, 0.6486666798591614, 0.6893333196640015, 0.7083333134651184, 0.7243333458900452, 0.7440000176429749, 0.7646666765213013, 0.7519999742507935, 0.7633333206176758, 0.7820000052452087, 0.7916666865348816, 0.7990000247955322, 0.8046666383743286, 0.7950000166893005, 0.7983333468437195, 0.8159999847412109, 0.8163333535194397, 0.8116666674613953, 0.8206666707992554, 0.8299999833106995, 0.8343333601951599, 0.8336666822433472, 0.8399999737739563, 0.8370000123977661, 0.8446666598320007, 0.8410000205039978, 0.8473333120346069, 0.8516666889190674, 0.8560000061988831, 0.8586666584014893, 0.8543333411216736, 0.8483333587646484, 0.856333315372467, 0.8569999933242798, 0.8600000143051147, 0.8629999756813049, 0.8700000047683716, 0.8676666617393494, 0.8576666712760925, 0.862333357334137, 0.8659999966621399, 0.8576666712760925]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8431428670883179, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2246415615081787, 1.870496153831482, 1.3907883167266846, 1.086315631866455, 0.941415011882782, 0.8324278593063354, 0.7784548997879028, 0.7233707904815674, 0.6971027851104736, 0.6601455211639404, 0.6425280570983887, 0.6161432862281799, 0.5927687287330627, 0.5863849520683289, 0.564943253993988, 0.5561264157295227, 0.5360090136528015, 0.5272015333175659, 0.5127180814743042, 0.5048593878746033, 0.49271106719970703, 0.48333030939102173, 0.48171475529670715, 0.46234753727912903, 0.458357036113739, 0.4495150148868561, 0.4398472309112549, 0.4238760471343994, 0.4278477132320404, 0.421057790517807, 0.40862125158309937, 0.4048915207386017, 0.40263429284095764, 0.38977745175361633, 0.38821813464164734, 0.3820720613002777], "accuracy": [0.28318583965301514, 0.49148064851760864, 0.570730447769165, 0.6227710843086243, 0.6654338836669922, 0.7003037929534912, 0.7209087014198303, 0.7351737022399902, 0.7449478507041931, 0.7559106945991516, 0.7647602558135986, 0.7712323069572449, 0.7845727205276489, 0.7880068421363831, 0.8004226684570312, 0.8010830879211426, 0.8047813773155212, 0.8082155585289001, 0.8123101592063904, 0.8208954930305481, 0.8245938420295715, 0.8284242749214172, 0.8290846943855286, 0.8348963260650635, 0.8333113193511963, 0.8426892161369324, 0.8442742228507996, 0.8479725122451782, 0.8469158411026001, 0.8514066934585571, 0.8558974862098694, 0.8581429123878479, 0.859199583530426, 0.8603883385658264, 0.860652506351471, 0.8650112152099609], "val_loss": [2.043867826461792, 1.516144871711731, 1.0394039154052734, 0.838699460029602, 0.7449049353599548, 0.694521963596344, 0.6558393836021423, 0.6204014420509338, 0.6024393439292908, 0.5803501009941101, 0.559610903263092, 0.5426325798034668, 0.5291456580162048, 0.5201575756072998, 0.5061829686164856, 0.4959890842437744, 0.4870116114616394, 0.4775312840938568, 0.46880561113357544, 0.4645329713821411, 0.4577675461769104, 0.45123758912086487, 0.44296351075172424, 0.43909952044487, 0.4351333677768707, 0.4259412884712219, 0.42045992612838745, 0.41274210810661316, 0.4117451310157776, 0.4123149812221527, 0.40449827909469604, 0.4010683596134186, 0.3993397653102875, 0.3993298411369324, 0.3963404595851898, 0.38959941267967224], "val_accuracy": [0.546999990940094, 0.6526666879653931, 0.690666675567627, 0.7099999785423279, 0.737666666507721, 0.7476666569709778, 0.7566666603088379, 0.7680000066757202, 0.7749999761581421, 0.7846666574478149, 0.7873333096504211, 0.8026666641235352, 0.8076666593551636, 0.8043333292007446, 0.8180000185966492, 0.8163333535194397, 0.8206666707992554, 0.8213333487510681, 0.8259999752044678, 0.8276666402816772, 0.8326666951179504, 0.8383333086967468, 0.8373333215713501, 0.8386666774749756, 0.8420000076293945, 0.846666693687439, 0.8486666679382324, 0.8486666679382324, 0.8533333539962769, 0.8529999852180481, 0.8573333621025085, 0.8536666631698608, 0.8519999980926514, 0.8553333282470703, 0.8566666841506958, 0.8543333411216736]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8282856941223145, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.606976866722107, 0.8556411862373352, 0.6761149764060974, 0.6032589673995972, 0.5646314024925232, 0.5194224119186401, 0.47979673743247986, 0.508895993232727, 0.4864506423473358, 0.4782782196998596, 0.4598710834980011, 0.5000672936439514, 0.5039154291152954, 0.535256564617157, 0.5746902227401733, 0.5663367509841919], "accuracy": [0.4449874460697174, 0.6977941989898682, 0.7588165402412415, 0.7800818681716919, 0.791441023349762, 0.8133667707443237, 0.8215559124946594, 0.8149517774581909, 0.8271034359931946, 0.8230088353157043, 0.8380662798881531, 0.8318583965301514, 0.8290846943855286, 0.8281601071357727, 0.8305375576019287, 0.802271842956543], "val_loss": [0.8557589650154114, 0.6144149303436279, 0.5286941528320312, 0.5044999122619629, 0.4897727072238922, 0.4930790662765503, 0.45551803708076477, 0.44536930322647095, 0.4728624224662781, 0.47498685121536255, 0.48492568731307983, 0.5326114296913147, 0.5094231963157654, 0.5516474843025208, 0.5978807210922241, 0.5398982167243958], "val_accuracy": [0.6983333230018616, 0.7676666378974915, 0.8076666593551636, 0.8180000185966492, 0.8199999928474426, 0.8276666402816772, 0.8403333425521851, 0.8413333296775818, 0.8379999995231628, 0.8423333168029785, 0.8460000157356262, 0.8366666436195374, 0.8256666660308838, 0.8453333377838135, 0.8356666564941406, 0.8343333601951599]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [0, 4, 3, 1, 3], [0, 1, 0, 2, 0], [39, 39, 19], [0, 0, 1, 1], [0, 2, 3, 0, 3, 5], [0, 1, 0, 3], [0], [1, 1], [0], [0], [0], [0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10114285349845886, "mapping_values": [1, 1, 0, 1, 1, 4, 2, 2, 1, 1, 0, 1, 1, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.756705673589555e+16, 5.620596788563018e+18, 9.802738138683435e+19, 6.882711276709415e+20, 3.0243838855113553e+21, 1.0158452175685898e+22, 2.8289016533956277e+22, 6.981551749583818e+22, 1.5341422058645047e+23, 3.160635946263809e+23, 6.167506751458203e+23], "accuracy": [0.1002509593963623, 0.09734513610601425, 0.09906221181154251, 0.09959053993225098, 0.10460969805717468, 0.09985470771789551, 0.09840179979801178, 0.10236428678035736, 0.09774138033390045, 0.1026284471154213, 0.09998679161071777], "val_loss": [3.841347968481362e+17, 2.0729767818600382e+19, 2.2116570839597974e+20, 1.210506077554778e+21, 4.680873693602774e+21, 1.4163262381726416e+22, 3.7589643318818966e+22, 8.923541288782883e+22, 1.877581489272211e+23, 3.639748330173873e+23, 7.295867425137222e+23], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10266666859388351, 0.10233332961797714, 0.09700000286102295, 0.10566666722297668, 0.10433333367109299, 0.10433333367109299, 0.10366666316986084, 0.09600000083446503, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [5, 0, 3, 5, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [15, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [4, 3, 3, 6, 8, 1, 4, 0, 4, 2, 8], [0, 0, 0, 2, 0, 0, 3, 1, 2, 4], [99, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 10, 6, 4, 2, 2, 1, 1, 0, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.negative(tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), beta))), tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)), alpha)", "other_info": {"loss": [2.303441286087036, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 3, 3, 3, 3], [0, 1, 0, 2], [46, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 4, 3, 2, 3, 5], [0, 0, 0, 3, 1], [16, 16, 58], [0, 1, 1], [4], [0, 0], [99, 96], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 2, 1], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 6, 3], [16, 99, 96, 92, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 11, 6, 5, 3, 3, 1, 2, 2, 25, 13, 12, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(tf.math.add(alpha, beta))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 1, 6, 8, 1, 4, 6, 4, 5, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(sigma, tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [98472328.0, 373514272.0, 605488832.0, 791020864.0, 944946880.0, 1089285504.0], "accuracy": [0.10210011899471283, 0.1002509593963623, 0.10038304328918457, 0.09602430462837219, 0.10196803510189056, 0.10487385839223862], "val_loss": [203911008.0, 392399904.0, 546703808.0, 678812608.0, 795301632.0, 900097280.0], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 10, 5, 5, 4], "tree_depth": 12}]