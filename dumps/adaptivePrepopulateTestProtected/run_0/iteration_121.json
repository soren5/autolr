[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2237584590911865, 1.872878074645996, 1.396445393562317, 1.0919315814971924, 0.9137182235717773, 0.8299537897109985, 0.76838219165802, 0.7246337532997131, 0.687949538230896, 0.6588881015777588, 0.6279441118240356, 0.6074424386024475, 0.6050766706466675, 0.582547128200531, 0.5625501275062561, 0.5523593425750732, 0.5281474590301514, 0.5247023701667786, 0.5103811621665955, 0.5112128853797913, 0.49525249004364014, 0.48218709230422974, 0.4767788052558899, 0.47028547525405884, 0.45592206716537476, 0.46314671635627747, 0.4337468445301056, 0.4355906546115875, 0.4294242560863495, 0.4197535514831543, 0.41920211911201477, 0.41766953468322754, 0.4064672887325287, 0.39335107803344727, 0.38861343264579773, 0.3831813335418701, 0.37959539890289307, 0.37992721796035767, 0.3637872338294983, 0.36754295229911804, 0.35936230421066284, 0.3519119322299957, 0.34475046396255493, 0.347836971282959], "accuracy": [0.27143046259880066, 0.4884427487850189, 0.5658433437347412, 0.6213181614875793, 0.6734909415245056, 0.7040021419525146, 0.7191916704177856, 0.7349095344543457, 0.748249888420105, 0.759080708026886, 0.7721568942070007, 0.7763835787773132, 0.778232753276825, 0.7902522683143616, 0.7940827012062073, 0.7987055778503418, 0.8108572363853455, 0.8112534880638123, 0.8121780753135681, 0.8117818236351013, 0.8175934553146362, 0.8234050869941711, 0.8286884427070618, 0.8305375576019287, 0.8308017253875732, 0.8323867321014404, 0.8421608805656433, 0.8425571322441101, 0.8481045961380005, 0.846387505531311, 0.8491612672805786, 0.8498216867446899, 0.8516708612442017, 0.8577466607093811, 0.8610487580299377, 0.8614450097084045, 0.8652753829956055, 0.8625016212463379, 0.8701624870300293, 0.8681812286376953, 0.8716153502464294, 0.8721436858177185, 0.8732003569602966, 0.8734645247459412], "val_loss": [2.0436460971832275, 1.5157345533370972, 1.0410491228103638, 0.8276451826095581, 0.7384371161460876, 0.6837013959884644, 0.6420091390609741, 0.6072559952735901, 0.5794985890388489, 0.553160548210144, 0.5436280965805054, 0.5231563448905945, 0.5089309215545654, 0.4968138337135315, 0.4924905598163605, 0.47714167833328247, 0.4677276313304901, 0.4610641300678253, 0.4598730504512787, 0.44774529337882996, 0.44295215606689453, 0.4345240890979767, 0.42987093329429626, 0.42625537514686584, 0.414102703332901, 0.41490650177001953, 0.41185954213142395, 0.4017045199871063, 0.39922308921813965, 0.39961764216423035, 0.3920290470123291, 0.38851726055145264, 0.38788852095603943, 0.38179898262023926, 0.3812142312526703, 0.3764798641204834, 0.376532644033432, 0.36970677971839905, 0.37048837542533875, 0.36934947967529297, 0.3689616024494171, 0.36016422510147095, 0.36201953887939453, 0.3613470494747162], "val_accuracy": [0.5386666655540466, 0.6480000019073486, 0.6713333129882812, 0.706333339214325, 0.7279999852180481, 0.7456666827201843, 0.7590000033378601, 0.7663333415985107, 0.7829999923706055, 0.7926666736602783, 0.7983333468437195, 0.8076666593551636, 0.8133333325386047, 0.8199999928474426, 0.8213333487510681, 0.8276666402816772, 0.8296666741371155, 0.8326666951179504, 0.8306666612625122, 0.8366666436195374, 0.8416666388511658, 0.8413333296775818, 0.8426666855812073, 0.8493333458900452, 0.8476666808128357, 0.8493333458900452, 0.8529999852180481, 0.8526666760444641, 0.8560000061988831, 0.8536666631698608, 0.8606666922569275, 0.8566666841506958, 0.8573333621025085, 0.859666645526886, 0.862666666507721, 0.8663333058357239, 0.8643333315849304, 0.8653333187103271, 0.8706666827201843, 0.8679999709129333, 0.8646666407585144, 0.8683333396911621, 0.8706666827201843, 0.8663333058357239]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 1], [0, 1, 0], [0, 1], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8442857265472412, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2922251224517822, 2.1881868839263916, 1.763411283493042, 1.3703715801239014, 1.0891039371490479, 0.9226287007331848, 0.8474791646003723, 0.8148317933082581, 0.7606136798858643, 0.7344856262207031, 0.701962947845459, 0.6727668642997742, 0.6465159058570862, 0.6347153782844543, 0.61284339427948, 0.5949293971061707, 0.5941729545593262, 0.5806146264076233, 0.5711846351623535, 0.5548277497291565, 0.5339599251747131, 0.5305501222610474, 0.5096545815467834, 0.49884775280952454, 0.5026043057441711, 0.4802205562591553, 0.46828073263168335, 0.46207964420318604, 0.45177292823791504, 0.4404718279838562, 0.43337956070899963, 0.4255244731903076, 0.43011677265167236, 0.420540452003479, 0.41350826621055603, 0.4088182747364044, 0.39396053552627563, 0.3894159495830536], "accuracy": [0.14000792801380157, 0.3249240517616272, 0.44089287519454956, 0.5488046407699585, 0.6367719173431396, 0.6639809608459473, 0.6907938122749329, 0.7003037929534912, 0.7042662501335144, 0.7174745798110962, 0.7325320243835449, 0.7386078238487244, 0.7534011602401733, 0.7568352818489075, 0.7621186375617981, 0.7745344042778015, 0.7795535326004028, 0.7786290049552917, 0.7861577272415161, 0.7865539789199829, 0.7897239327430725, 0.7952714562416077, 0.807158887386322, 0.8098005652427673, 0.8086118102073669, 0.8181217908859253, 0.8175934553146362, 0.8227446675300598, 0.8247259259223938, 0.8338396549224854, 0.8313300609588623, 0.8418967127799988, 0.8338396549224854, 0.8399154543876648, 0.8384625315666199, 0.8441421389579773, 0.8492933511734009, 0.8453308939933777], "val_loss": [2.246107339859009, 2.015097141265869, 1.1306148767471313, 0.8924223780632019, 0.7872703671455383, 0.7130889296531677, 0.6549066305160522, 0.6533079147338867, 0.6505504250526428, 0.6103227734565735, 0.5704294443130493, 0.5578683018684387, 0.5501524209976196, 0.5355111956596375, 0.5156806111335754, 0.5304003357887268, 0.508764922618866, 0.49945536255836487, 0.5040015578269958, 0.49192991852760315, 0.5008051991462708, 0.489543080329895, 0.4892486035823822, 0.4779256284236908, 0.46864384412765503, 0.45604410767555237, 0.4496595561504364, 0.44804736971855164, 0.43741747736930847, 0.4315509796142578, 0.434822142124176, 0.4346538782119751, 0.4228051006793976, 0.42843326926231384, 0.428532212972641, 0.433438241481781, 0.42486974596977234, 0.42903727293014526], "val_accuracy": [0.43799999356269836, 0.46266666054725647, 0.6536666750907898, 0.6890000104904175, 0.703000009059906, 0.734666645526886, 0.7419999837875366, 0.7509999871253967, 0.7576666474342346, 0.7580000162124634, 0.7680000066757202, 0.7739999890327454, 0.7799999713897705, 0.7916666865348816, 0.7950000166893005, 0.7910000085830688, 0.8046666383743286, 0.8119999766349792, 0.8003333210945129, 0.8069999814033508, 0.8040000200271606, 0.8130000233650208, 0.8169999718666077, 0.8153333067893982, 0.8233333230018616, 0.8306666612625122, 0.8386666774749756, 0.8383333086967468, 0.8403333425521851, 0.8443333506584167, 0.8416666388511658, 0.8410000205039978, 0.847000002861023, 0.8429999947547913, 0.8410000205039978, 0.840666651725769, 0.8450000286102295, 0.843999981880188]}, "mapping_values": [1, 10, 5, 5, 3, 5, 3, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 4], [0, 3], [0], [1], [0], [2], [0]], "fitness": -0.8217142820358276, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5303330421447754, 0.7846282124519348, 0.6305673122406006, 0.6175455451011658, 0.5475266575813293, 0.5078859329223633, 0.47694408893585205, 0.4756174087524414, 0.4537865221500397, 0.46281903982162476, 0.4786425828933716, 0.4815199673175812, 0.44588780403137207, 0.4886723756790161, 0.46165931224823, 0.4571077823638916, 0.458048015832901, 0.4700334668159485, 0.5105503797531128, 0.5107269883155823, 0.5399148464202881, 0.5480276942253113], "accuracy": [0.48131024837493896, 0.720380425453186, 0.7680623531341553, 0.7713643908500671, 0.7956677079200745, 0.8088759779930115, 0.8234050869941711, 0.8276317715644836, 0.8354246616363525, 0.824329674243927, 0.8342359066009521, 0.830669641494751, 0.8335754871368408, 0.8280280232429504, 0.8342359066009521, 0.8355567455291748, 0.8432175517082214, 0.8455950617790222, 0.8401796221733093, 0.8120459914207458, 0.8248580098152161, 0.8208954930305481], "val_loss": [0.832833468914032, 0.6167272925376892, 0.5733562111854553, 0.5255724191665649, 0.5101373791694641, 0.5035926699638367, 0.5196459293365479, 0.47970354557037354, 0.48382332921028137, 0.5130855441093445, 0.5589008331298828, 0.537237823009491, 0.5812429189682007, 0.5472013354301453, 0.5711714029312134, 0.5179713368415833, 0.6283066868782043, 0.6235423684120178, 0.5898743271827698, 0.6582528352737427, 0.6776835918426514, 0.6189345121383667], "val_accuracy": [0.6976666450500488, 0.7710000276565552, 0.7879999876022339, 0.8009999990463257, 0.8140000104904175, 0.812333345413208, 0.8330000042915344, 0.8383333086967468, 0.8299999833106995, 0.8263333439826965, 0.8389999866485596, 0.82833331823349, 0.8413333296775818, 0.8349999785423279, 0.8383333086967468, 0.8339999914169312, 0.8433333039283752, 0.8363333344459534, 0.8193333148956299, 0.8330000042915344, 0.831333339214325, 0.8309999704360962]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 8, 4, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 9, 5, 4, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.304222822189331, 2.302584409713745, 2.302584409713745, 2.302581310272217, 2.3025763034820557, 2.302560567855835], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.10196803510189056, 0.10659094154834747, 0.10447761416435242, 0.09998679161071777], "val_loss": [2.3025848865509033, 2.302584648132324, 2.3025853633880615, 2.3025858402252197, 2.302600383758545, 2.302603244781494], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.0949999988079071, 0.09933333098888397, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [1, 2, 0, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [8, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [23], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [8, 4, 3, 6, 8, 1, 4, 0, 3, 9, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [98, 99, 96, 99, 61, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 1, 0, 1, 1, 13, 7, 6, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.negative(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 2, 3, 0, 6], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 2, 0, 3, 2, 6, 6, 8, 8, 0], [0, 2, 0, 3, 3, 4, 4], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 4, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 18, 11, 7, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, grad))), grad)), tf.math.sqrt(tf.math.sqrt(tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3036651611328125, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [4, 2, 3, 0, 3, 5], [0, 1, 0, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 9, 5], [0, 2, 0, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 3, 1, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 7, 5, 2, 2, 2, 1, 1, 1, 22, 11, 11, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.math.pow(grad, tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}]