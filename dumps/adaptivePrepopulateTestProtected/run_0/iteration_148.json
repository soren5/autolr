[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8788571357727051, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223778247833252, 1.869816780090332, 1.3854763507843018, 1.0877859592437744, 0.9313703775405884, 0.8305619955062866, 0.7596983313560486, 0.7178841233253479, 0.678885817527771, 0.6427952647209167, 0.6314711570739746, 0.6065253019332886, 0.5803450345993042, 0.5689871311187744, 0.5544987320899963, 0.5336046814918518, 0.5189152956008911, 0.5142802596092224, 0.4972553849220276, 0.48589378595352173, 0.4789123237133026, 0.47044631838798523, 0.45680922269821167, 0.4485171139240265, 0.45258986949920654, 0.44318363070487976, 0.4277282655239105, 0.42588117718696594, 0.4205707907676697, 0.4097837805747986, 0.4017646610736847, 0.3997235894203186, 0.39143604040145874, 0.3813983201980591, 0.3799765408039093, 0.3789656162261963, 0.36794283986091614, 0.3624574840068817, 0.35929128527641296, 0.35348811745643616, 0.3508596420288086, 0.34113216400146484, 0.3462033271789551, 0.33102670311927795, 0.330086886882782, 0.32165828347206116, 0.3163209855556488, 0.31816115975379944, 0.30683767795562744, 0.30308493971824646, 0.3014288544654846, 0.2991333305835724, 0.3007844388484955, 0.29286450147628784, 0.28524908423423767, 0.28070855140686035, 0.2784059941768646, 0.26981455087661743, 0.2657836079597473, 0.26673373579978943, 0.2612868845462799, 0.2518042027950287, 0.25471100211143494, 0.24872227013111115, 0.2470250278711319, 0.2423699051141739, 0.2363964468240738, 0.2331322431564331, 0.2366485893726349, 0.22393356263637543, 0.22837325930595398, 0.218330517411232, 0.21717983484268188, 0.21057762205600739, 0.20735885202884674, 0.2054237574338913, 0.20540645718574524, 0.19891852140426636, 0.19594213366508484, 0.20225878059864044, 0.1904907077550888, 0.18262125551700592, 0.18921315670013428, 0.18402932584285736, 0.18388424813747406, 0.18099281191825867, 0.17825645208358765, 0.1715107411146164], "accuracy": [0.2751287817955017, 0.47906485199928284, 0.5712587237358093, 0.6231673359870911, 0.6653017997741699, 0.7033417224884033, 0.7341170310974121, 0.7374191284179688, 0.7518161535263062, 0.7711002230644226, 0.7761194109916687, 0.783119797706604, 0.7940827012062073, 0.7932901978492737, 0.8016114234924316, 0.8078193068504333, 0.8191784620285034, 0.8201030492782593, 0.8281601071357727, 0.8253863453865051, 0.8310658931732178, 0.8338396549224854, 0.8387266993522644, 0.8429533839225769, 0.8429533839225769, 0.8430854678153992, 0.8474441766738892, 0.8525954484939575, 0.8488970994949341, 0.8557654023170471, 0.8605204224586487, 0.8562937378883362, 0.8647470474243164, 0.8679170608520508, 0.8650112152099609, 0.867520809173584, 0.870030403137207, 0.8725399374961853, 0.8734645247459412, 0.8730682730674744, 0.8811253309249878, 0.8813894987106323, 0.8728041052818298, 0.8854840993881226, 0.8800686597824097, 0.885219931602478, 0.8873332738876343, 0.8868049383163452, 0.8886540532112122, 0.8912957310676575, 0.8923524022102356, 0.8920882344245911, 0.8905032277107239, 0.8961827754974365, 0.895918607711792, 0.8968431949615479, 0.8986923694610596, 0.9041078090667725, 0.9021265506744385, 0.902390718460083, 0.9058248400688171, 0.9096552729606628, 0.908730685710907, 0.9115044474601746, 0.9109761118888855, 0.9133535623550415, 0.9162594079971313, 0.9157310724258423, 0.9140139818191528, 0.9169198274612427, 0.9167877435684204, 0.9225993752479553, 0.9235239624977112, 0.9220710396766663, 0.9252410531044006, 0.9272223114967346, 0.9260335564613342, 0.9299960136413574, 0.9298639297485352, 0.9265618920326233, 0.9314489364624023, 0.9351472854614258, 0.930788516998291, 0.9344868659973145, 0.9322414398193359, 0.935279369354248, 0.9355435371398926, 0.9375247359275818], "val_loss": [2.043229818344116, 1.5252792835235596, 1.059319019317627, 0.8622859120368958, 0.7739511728286743, 0.712826669216156, 0.6653242111206055, 0.6353532075881958, 0.6145880818367004, 0.588234007358551, 0.5718778371810913, 0.5557640790939331, 0.5459425449371338, 0.525135338306427, 0.5168591141700745, 0.5053482055664062, 0.4997932016849518, 0.48488402366638184, 0.47919487953186035, 0.4703822433948517, 0.47141027450561523, 0.46116748452186584, 0.453118234872818, 0.44784554839134216, 0.44718751311302185, 0.43445050716400146, 0.4359551668167114, 0.42782077193260193, 0.42837169766426086, 0.4202001988887787, 0.41962215304374695, 0.41002556681632996, 0.40663206577301025, 0.40764692425727844, 0.40263956785202026, 0.3989400267601013, 0.3960455060005188, 0.39371103048324585, 0.3923947811126709, 0.3929206430912018, 0.3917257487773895, 0.3840952217578888, 0.3808329403400421, 0.3817606270313263, 0.37890157103538513, 0.37521520256996155, 0.3746592700481415, 0.3713971674442291, 0.3694106936454773, 0.36994099617004395, 0.36911842226982117, 0.3693079352378845, 0.36807316541671753, 0.3690676987171173, 0.36612769961357117, 0.36626964807510376, 0.36125749349594116, 0.3628350496292114, 0.36928442120552063, 0.3606704771518707, 0.35772624611854553, 0.3617168664932251, 0.3560544550418854, 0.3591160476207733, 0.35777518153190613, 0.35627302527427673, 0.3584086000919342, 0.3570273518562317, 0.3526735305786133, 0.35380101203918457, 0.3530525863170624, 0.35500773787498474, 0.35798314213752747, 0.3571338653564453, 0.35494470596313477, 0.35568180680274963, 0.3550068438053131, 0.35418087244033813, 0.3578505516052246, 0.3490322232246399, 0.35165348649024963, 0.3594669997692108, 0.3573257327079773, 0.35076624155044556, 0.35436558723449707, 0.35485583543777466, 0.35399290919303894, 0.3549942970275879], "val_accuracy": [0.5046666860580444, 0.6439999938011169, 0.6753333210945129, 0.6893333196640015, 0.7256666421890259, 0.7400000095367432, 0.7566666603088379, 0.7670000195503235, 0.7730000019073486, 0.7876666784286499, 0.7906666398048401, 0.7986666560173035, 0.8033333420753479, 0.8163333535194397, 0.8180000185966492, 0.8203333616256714, 0.8183333277702332, 0.82833331823349, 0.8303333520889282, 0.8323333263397217, 0.8263333439826965, 0.8370000123977661, 0.8410000205039978, 0.8399999737739563, 0.8399999737739563, 0.847000002861023, 0.843666672706604, 0.8476666808128357, 0.8493333458900452, 0.8533333539962769, 0.8493333458900452, 0.8579999804496765, 0.859000027179718, 0.8556666374206543, 0.8600000143051147, 0.862333357334137, 0.8613333106040955, 0.8606666922569275, 0.8610000014305115, 0.8673333525657654, 0.8650000095367432, 0.8603333234786987, 0.8673333525657654, 0.8690000176429749, 0.8700000047683716, 0.8703333139419556, 0.8726666569709778, 0.8713333606719971, 0.8700000047683716, 0.871666669845581, 0.874666690826416, 0.8733333349227905, 0.8733333349227905, 0.871666669845581, 0.8756666779518127, 0.874666690826416, 0.8759999871253967, 0.878000020980835, 0.8740000128746033, 0.8766666650772095, 0.8790000081062317, 0.8813333511352539, 0.8849999904632568, 0.8820000290870667, 0.8849999904632568, 0.8823333382606506, 0.8833333253860474, 0.8853333592414856, 0.8853333592414856, 0.8856666684150696, 0.8846666812896729, 0.8889999985694885, 0.8843333125114441, 0.8866666555404663, 0.887333333492279, 0.890999972820282, 0.8893333077430725, 0.8859999775886536, 0.8886666893959045, 0.8926666378974915, 0.890333354473114, 0.887333333492279, 0.8933333158493042, 0.8920000195503235, 0.8913333415985107, 0.890999972820282, 0.8916666507720947, 0.890666663646698]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8697142601013184, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2229981422424316, 1.8682374954223633, 1.3920674324035645, 1.100376844406128, 0.9511418342590332, 0.8504747152328491, 0.7839507460594177, 0.7368571162223816, 0.7021862268447876, 0.6669988036155701, 0.6529596447944641, 0.6298221349716187, 0.596991777420044, 0.5867332220077515, 0.5642213225364685, 0.5487956404685974, 0.5461817383766174, 0.530547022819519, 0.5129618048667908, 0.5136911869049072, 0.5046533346176147, 0.4893021881580353, 0.4742582142353058, 0.47366711497306824, 0.4569723606109619, 0.45610833168029785, 0.449194997549057, 0.43207159638404846, 0.4256044328212738, 0.4246630072593689, 0.4161425828933716, 0.4177177846431732, 0.40392327308654785, 0.3999359905719757, 0.3912002444267273, 0.3920001685619354, 0.3710232079029083, 0.3766070306301117, 0.37512534856796265, 0.3607623279094696, 0.35974887013435364, 0.35446324944496155, 0.3503364622592926, 0.34702715277671814, 0.3428865075111389, 0.34071484208106995, 0.3363884389400482], "accuracy": [0.272090882062912, 0.4892352521419525, 0.5646545886993408, 0.6136573553085327, 0.6567164063453674, 0.69673752784729, 0.7162858247756958, 0.7326641082763672, 0.7470611333847046, 0.7537974119186401, 0.7629110813140869, 0.7718927264213562, 0.778761088848114, 0.7865539789199829, 0.7942147850990295, 0.8013472557067871, 0.8018755912780762, 0.8083476424217224, 0.8181217908859253, 0.8128384351730347, 0.8166688680648804, 0.8210275769233704, 0.8280280232429504, 0.8296129703521729, 0.8359529972076416, 0.8359529972076416, 0.837141752243042, 0.8437458872795105, 0.8444063067436218, 0.8486329317092896, 0.8481045961380005, 0.8488970994949341, 0.8552370667457581, 0.8573504090309143, 0.8581429123878479, 0.8584070801734924, 0.8673887252807617, 0.863029956817627, 0.8661999702453613, 0.8676528930664062, 0.8681812286376953, 0.8702945709228516, 0.8774270415306091, 0.8732003569602966, 0.8758420348167419, 0.878879964351654, 0.8784837126731873], "val_loss": [2.0387749671936035, 1.5180470943450928, 1.0495935678482056, 0.8458537459373474, 0.7639760971069336, 0.7028283476829529, 0.6589264273643494, 0.6203625202178955, 0.5958699584007263, 0.5670069456100464, 0.5551544427871704, 0.5372024178504944, 0.5184616446495056, 0.5070493221282959, 0.4933698773384094, 0.47987842559814453, 0.47955843806266785, 0.4624095857143402, 0.4561874270439148, 0.45594000816345215, 0.4482993185520172, 0.4366530776023865, 0.42855408787727356, 0.42509424686431885, 0.4162364900112152, 0.422173410654068, 0.4104158580303192, 0.4027717709541321, 0.4028172194957733, 0.3995366096496582, 0.3892713189125061, 0.3918631672859192, 0.3840572237968445, 0.3815537095069885, 0.38230982422828674, 0.38002920150756836, 0.3734990656375885, 0.37232714891433716, 0.37131381034851074, 0.36437132954597473, 0.36125069856643677, 0.35812824964523315, 0.3590105473995209, 0.36101457476615906, 0.35551440715789795, 0.35300692915916443, 0.35242733359336853], "val_accuracy": [0.57833331823349, 0.6623333096504211, 0.6826666593551636, 0.7080000042915344, 0.7386666536331177, 0.75, 0.7523333430290222, 0.768666684627533, 0.7776666879653931, 0.7886666655540466, 0.7876666784286499, 0.8050000071525574, 0.8103333115577698, 0.8103333115577698, 0.8203333616256714, 0.8266666531562805, 0.8206666707992554, 0.8326666951179504, 0.8386666774749756, 0.840666651725769, 0.8383333086967468, 0.8429999947547913, 0.843999981880188, 0.8526666760444641, 0.8539999723434448, 0.8479999899864197, 0.8533333539962769, 0.8576666712760925, 0.8560000061988831, 0.859333336353302, 0.8659999966621399, 0.8646666407585144, 0.8679999709129333, 0.8683333396911621, 0.8650000095367432, 0.8679999709129333, 0.8683333396911621, 0.8713333606719971, 0.8690000176429749, 0.8736666440963745, 0.8773333430290222, 0.8806666731834412, 0.8766666650772095, 0.8700000047683716, 0.8793333172798157, 0.8806666731834412, 0.8799999952316284]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 6, 5, 8, 4, 5], [0, 1, 5], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.850857138633728, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946953773498535, 2.1950700283050537, 1.7939457893371582, 1.3630578517913818, 1.1043965816497803, 0.9478281140327454, 0.8761257529258728, 0.8129542469978333, 0.7715259790420532, 0.756837785243988, 0.7232757806777954, 0.6900449991226196, 0.6686812043190002, 0.6324127912521362, 0.6189611554145813, 0.6019799113273621, 0.594264805316925, 0.575482189655304, 0.5752564668655396, 0.5723267197608948, 0.5513714551925659, 0.5274838805198669, 0.525659441947937, 0.514288604259491, 0.4980767071247101, 0.4946291446685791, 0.49134641885757446, 0.4764574468135834, 0.46969226002693176, 0.4420599639415741, 0.440507709980011, 0.42950353026390076, 0.43214237689971924, 0.4220779538154602, 0.4211077094078064, 0.4083467721939087, 0.4008128345012665, 0.39713340997695923, 0.3876758813858032, 0.38392210006713867, 0.3882947564125061, 0.3680652976036072, 0.3729798197746277, 0.38339003920555115, 0.3630908727645874, 0.35316622257232666, 0.3730700612068176, 0.35133877396583557, 0.3491065502166748, 0.3324907124042511, 0.34873420000076294, 0.3269191086292267, 0.3365544378757477, 0.3419897258281708, 0.33446139097213745, 0.32918858528137207, 0.32556918263435364, 0.29889804124832153, 0.30135801434516907, 0.325870156288147, 0.3109166920185089, 0.308197945356369], "accuracy": [0.12336547672748566, 0.3159424066543579, 0.4287412464618683, 0.5362567901611328, 0.6209219098091125, 0.654999315738678, 0.687887966632843, 0.6976621150970459, 0.7034738063812256, 0.7108704447746277, 0.7243428826332092, 0.7288337349891663, 0.7430986762046814, 0.7602694630622864, 0.76106196641922, 0.7668735980987549, 0.7724210619926453, 0.780610203742981, 0.778761088848114, 0.7794214487075806, 0.7897239327430725, 0.7975168228149414, 0.8010830879211426, 0.7993659973144531, 0.8057059645652771, 0.8076872229576111, 0.8088759779930115, 0.8170651197433472, 0.8185180425643921, 0.8284242749214172, 0.8323867321014404, 0.8350284099578857, 0.8322546482086182, 0.8333113193511963, 0.8372738361358643, 0.8409721255302429, 0.8442742228507996, 0.8451988101005554, 0.8536521196365356, 0.8492933511734009, 0.8535200357437134, 0.8617091774940491, 0.8593316674232483, 0.8560295701026917, 0.858671247959137, 0.8594637513160706, 0.8549728989601135, 0.86118084192276, 0.8648791313171387, 0.8664641380310059, 0.860652506351471, 0.8729361891746521, 0.8669924736022949, 0.8659358024597168, 0.867520809173584, 0.8714832663536072, 0.8714832663536072, 0.8767666220664978, 0.8762382864952087, 0.8737286925315857, 0.8725399374961853, 0.873860776424408], "val_loss": [2.246384620666504, 2.0303659439086914, 1.1675209999084473, 0.8731030225753784, 0.7746706008911133, 0.7063788175582886, 0.6741439700126648, 0.6468038558959961, 0.6451930999755859, 0.6357508897781372, 0.5782238841056824, 0.5510228872299194, 0.5491396188735962, 0.5326358079910278, 0.52642822265625, 0.523908793926239, 0.49845609068870544, 0.49349552392959595, 0.49768301844596863, 0.48750969767570496, 0.4849826991558075, 0.48555123805999756, 0.4735921621322632, 0.4561276435852051, 0.4508483111858368, 0.4522748589515686, 0.44285279512405396, 0.43826794624328613, 0.44317349791526794, 0.43395450711250305, 0.42374736070632935, 0.42244869470596313, 0.4162035286426544, 0.4147246181964874, 0.41211849451065063, 0.41230183839797974, 0.4071919023990631, 0.41641679406166077, 0.4074135720729828, 0.4016682505607605, 0.4103237986564636, 0.40959253907203674, 0.42214980721473694, 0.41812801361083984, 0.4010505676269531, 0.3993719518184662, 0.4044972360134125, 0.4045945703983307, 0.4008001387119293, 0.4139573276042938, 0.40557044744491577, 0.41770920157432556, 0.4089268743991852, 0.40777766704559326, 0.41467028856277466, 0.40948083996772766, 0.4245331585407257, 0.43143415451049805, 0.4593784213066101, 0.4345235228538513, 0.45162442326545715, 0.4412962794303894], "val_accuracy": [0.41999998688697815, 0.4283333420753479, 0.6506666541099548, 0.6963333487510681, 0.7243333458900452, 0.7293333411216736, 0.7443333268165588, 0.7526666522026062, 0.7316666841506958, 0.7559999823570251, 0.762333333492279, 0.7866666913032532, 0.7836666703224182, 0.7893333435058594, 0.793666660785675, 0.7933333516120911, 0.8063333630561829, 0.8106666803359985, 0.8096666932106018, 0.8159999847412109, 0.815666675567627, 0.8059999942779541, 0.8159999847412109, 0.8266666531562805, 0.8326666951179504, 0.8320000171661377, 0.840666651725769, 0.8453333377838135, 0.840666651725769, 0.8426666855812073, 0.8483333587646484, 0.847000002861023, 0.8483333587646484, 0.8543333411216736, 0.8560000061988831, 0.8543333411216736, 0.8603333234786987, 0.8573333621025085, 0.859333336353302, 0.8613333106040955, 0.8603333234786987, 0.8573333621025085, 0.8579999804496765, 0.8640000224113464, 0.8653333187103271, 0.8643333315849304, 0.859666645526886, 0.8669999837875366, 0.8676666617393494, 0.862333357334137, 0.8666666746139526, 0.8703333139419556, 0.8709999918937683, 0.871666669845581, 0.8659999966621399, 0.871666669845581, 0.878333330154419, 0.8709999918937683, 0.862333357334137, 0.8633333444595337, 0.859333336353302, 0.8656666874885559]}, "mapping_values": [1, 10, 5, 5, 3, 9, 6, 3, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 13}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1], [0, 6, 8, 8], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8357142806053162, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.587040901184082, 0.9127522706985474, 0.7387438416481018, 0.6548333168029785, 0.6039575934410095, 0.5661400556564331, 0.550147294998169, 0.5202656388282776, 0.5180159211158752, 0.5032246112823486, 0.48113390803337097, 0.46074017882347107, 0.4515194892883301, 0.4861205816268921, 0.5011097192764282, 0.5342984795570374, 0.6152905225753784, 0.6036655902862549, 0.5262331366539001, 0.5507822036743164], "accuracy": [0.4842160940170288, 0.7034738063812256, 0.7329282760620117, 0.7650244235992432, 0.7773081660270691, 0.7906485199928284, 0.7954035401344299, 0.8021397590637207, 0.8098005652427673, 0.8113855719566345, 0.828820526599884, 0.8278959393501282, 0.8367455005645752, 0.828820526599884, 0.832650899887085, 0.8109893202781677, 0.8067626357078552, 0.817461371421814, 0.8308017253875732, 0.8144234418869019], "val_loss": [0.9477351903915405, 0.6236792802810669, 0.5638085007667542, 0.5191587209701538, 0.5213300585746765, 0.5153154134750366, 0.5303139686584473, 0.524699866771698, 0.5163208246231079, 0.47230061888694763, 0.461102694272995, 0.5362913608551025, 0.5001338124275208, 0.5257478356361389, 0.5883821249008179, 0.5307837724685669, 0.667533278465271, 0.6244993209838867, 0.5380486249923706, 0.576664388179779], "val_accuracy": [0.6940000057220459, 0.7646666765213013, 0.7826666831970215, 0.7976666688919067, 0.8040000200271606, 0.8176666498184204, 0.8029999732971191, 0.8240000009536743, 0.815666675567627, 0.8320000171661377, 0.8393333554267883, 0.8363333344459534, 0.8326666951179504, 0.8373333215713501, 0.8426666855812073, 0.8166666626930237, 0.812666654586792, 0.8253333568572998, 0.8343333601951599, 0.8176666498184204]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0], [6, 3, 3, 6, 3, 1, 1, 3, 0, 2, 8], [0, 0, 0, 3, 4, 0, 1, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.245142862200737, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 1, 2, 1, 1, 1, 17, 8, 9, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), grad), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.multiply(alpha, alpha)), beta)", "other_info": {"loss": [2.2005653381347656, 293066016.0, NaN, NaN, NaN, NaN], "accuracy": [0.2102760523557663, 0.11702549457550049, 0.09774138033390045, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [3.8729963302612305, 107782776.0, NaN, NaN, NaN, NaN], "val_accuracy": [0.2540000081062317, 0.07666666805744171, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], [4, 2, 3, 3, 3, 8, 9], [0, 1, 0, 2, 0], [39, 39, 98, 63], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 6, 3, 2, 9, 5, 6, 1, 2, 1, 8], [0, 2, 0, 3, 4, 2, 3, 1, 0], [16, 21, 6, 84], [0, 1], [0], [0], [71], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 6, 6, 8, 1, 4, 4, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 24, 99, 91, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 4, 22, 13, 9, 4, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.math.subtract(grad, beta), grad), alpha), tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303340435028076, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 9, 1, 3], [0, 0, 1, 0, 2], [0, 39, 39], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [3, 2, 3, 1, 6, 3, 8, 2, 6], [0, 0, 2, 0, 3, 1, 0, 4], [54, 27, 16, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 8, 0, 4, 6, 3, 4, 8, 5, 5, 8], [0, 7, 3, 1, 3, 2], [0], [1, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 3, 1, 0, 1, 1, 16, 10, 6, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.sqrt(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.pow(sigma, alpha), tf.math.sqrt(sigma))), tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [16733623296.0, 2444434866176.0, 43121215799296.0, 302046729207808.0, 1347105754972160.0, 4408220483321856.0], "accuracy": [0.09417514503002167, 0.10038304328918457, 0.10038304328918457, 0.1026284471154213, 0.09840179979801178, 0.09642054885625839], "val_loss": [170381361152.0, 9185619083264.0, 98596275879936.0, 537481501999104.0, 2013546971922432.0, 5939894673211392.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1], [4, 2, 3, 0, 6], [2, 1, 0, 2], [75, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 8, 3, 5], [0, 2, 0, 3], [98, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 0, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 62, 96, 76, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 10, 6, 4, 2, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.subtract(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]