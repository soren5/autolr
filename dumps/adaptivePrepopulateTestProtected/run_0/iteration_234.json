[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8528571724891663, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2232582569122314, 1.8644037246704102, 1.3769583702087402, 1.079081416130066, 0.9222489595413208, 0.8290081024169922, 0.748202919960022, 0.7113462686538696, 0.6736394762992859, 0.6464133262634277, 0.6139446496963501, 0.6038306355476379, 0.5697285532951355, 0.5615234375, 0.5451615452766418, 0.5364949703216553, 0.5189003944396973, 0.5125269293785095, 0.49888020753860474, 0.4776557683944702, 0.4828968942165375, 0.46794044971466064, 0.4579131305217743, 0.45341503620147705, 0.4421880543231964, 0.4273938238620758, 0.43348246812820435, 0.4189126789569855, 0.4161592125892639, 0.4050343632698059, 0.4026654064655304, 0.3931339383125305], "accuracy": [0.26826047897338867, 0.4939902126789093, 0.5838066339492798, 0.6238277554512024, 0.670320987701416, 0.7000396251678467, 0.7314753532409668, 0.7397965788841248, 0.7582882046699524, 0.765949010848999, 0.7788931727409363, 0.7817989587783813, 0.796328067779541, 0.7980451583862305, 0.8014793395996094, 0.8086118102073669, 0.8136309385299683, 0.8197067975997925, 0.8210275769233704, 0.8310658931732178, 0.8274996876716614, 0.8333113193511963, 0.8330471515655518, 0.8347642421722412, 0.8426892161369324, 0.8477083444595337, 0.8487650156021118, 0.8521991968154907, 0.852331280708313, 0.8557654023170471, 0.8548408150672913, 0.8598600029945374], "val_loss": [2.0386345386505127, 1.5137970447540283, 1.0367060899734497, 0.8324059247970581, 0.7423458099365234, 0.6870629787445068, 0.643314778804779, 0.6082330942153931, 0.5853265523910522, 0.5577777624130249, 0.5411003232002258, 0.5247732996940613, 0.5115053653717041, 0.4959399402141571, 0.4830271303653717, 0.47321316599845886, 0.46452319622039795, 0.45858630537986755, 0.448707640171051, 0.4428839385509491, 0.43324023485183716, 0.42423224449157715, 0.4230620563030243, 0.41598233580589294, 0.4129752516746521, 0.40600985288619995, 0.4021216630935669, 0.3965187072753906, 0.3944889008998871, 0.39130672812461853, 0.3887304961681366, 0.3841465711593628], "val_accuracy": [0.5406666398048401, 0.6600000262260437, 0.6846666932106018, 0.7149999737739563, 0.7306666374206543, 0.753333330154419, 0.762333333492279, 0.7696666717529297, 0.7733333110809326, 0.7916666865348816, 0.7993333339691162, 0.8086666464805603, 0.8133333325386047, 0.8190000057220459, 0.8216666579246521, 0.8293333053588867, 0.8363333344459534, 0.8366666436195374, 0.8333333134651184, 0.8383333086967468, 0.846666693687439, 0.8486666679382324, 0.8460000157356262, 0.8516666889190674, 0.8500000238418579, 0.8526666760444641, 0.8613333106040955, 0.8553333282470703, 0.859666645526886, 0.8560000061988831, 0.8536666631698608, 0.8583333492279053]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8317142724990845, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5807983875274658, 0.8972943425178528, 0.7310212850570679, 0.6452566981315613, 0.5971312522888184, 0.5873712301254272, 0.5772711038589478, 0.5546819567680359, 0.5495051741600037, 0.5285905599594116, 0.5316674709320068, 0.544248640537262, 0.5298857688903809, 0.5434476733207703, 0.5355399250984192, 0.5923956632614136], "accuracy": [0.4896314740180969, 0.7051908373832703, 0.7407211661338806, 0.767930269241333, 0.7802139520645142, 0.7948752045631409, 0.791441023349762, 0.800290584564209, 0.8140271902084351, 0.816008448600769, 0.8112534880638123, 0.804649293422699, 0.8267071843147278, 0.8074230551719666, 0.8220842480659485, 0.8012151718139648], "val_loss": [0.9759133458137512, 0.6481937766075134, 0.5509544014930725, 0.5626335740089417, 0.5382646322250366, 0.5445084571838379, 0.5179746150970459, 0.49835729598999023, 0.5409244894981384, 0.5102341771125793, 0.5174492001533508, 0.5613794922828674, 0.4925103485584259, 0.5244539976119995, 0.5510900020599365, 0.6364872455596924], "val_accuracy": [0.687666654586792, 0.7673333287239075, 0.8050000071525574, 0.809333324432373, 0.8116666674613953, 0.7926666736602783, 0.8216666579246521, 0.8223333358764648, 0.8320000171661377, 0.8293333053588867, 0.8386666774749756, 0.8236666917800903, 0.8386666774749756, 0.8286666870117188, 0.8096666932106018, 0.809333324432373]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 4], [0, 5], [0], [0, 0, 1], [0, 5], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8171428442001343, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.291788101196289, 2.1882126331329346, 1.7708756923675537, 1.3322261571884155, 1.0602697134017944, 0.8986896276473999, 0.8336370587348938, 0.8061460256576538, 0.77558833360672, 0.755114734172821, 0.719524621963501, 0.6930784583091736, 0.6653008460998535, 0.6241903305053711, 0.6232770085334778, 0.6163031458854675, 0.5904278755187988, 0.5859845876693726, 0.5879228711128235, 0.567409873008728, 0.5436661243438721, 0.5447713732719421, 0.5205761194229126, 0.5199096202850342, 0.5091170072555542, 0.49560949206352234, 0.5017412304878235, 0.4812631607055664, 0.48067107796669006, 0.45209935307502747, 0.454484224319458, 0.444892555475235, 0.4300271272659302, 0.42960381507873535, 0.4271429777145386, 0.4056502878665924, 0.41116684675216675, 0.4052393138408661, 0.39927831292152405, 0.384005606174469, 0.3772188723087311, 0.37027910351753235, 0.36516517400741577, 0.364443302154541, 0.3598262667655945, 0.3566063344478607, 0.3554249405860901, 0.3518712818622589, 0.33971673250198364], "accuracy": [0.13261127471923828, 0.32465988397598267, 0.43904373049736023, 0.5453705191612244, 0.6386210322380066, 0.6745476126670837, 0.6996433734893799, 0.7022850513458252, 0.7040021419525146, 0.7066437602043152, 0.7357020378112793, 0.7314753532409668, 0.7452120184898376, 0.759080708026886, 0.7597411274909973, 0.7675340175628662, 0.7711002230644226, 0.7754589915275574, 0.7853652238845825, 0.7833839654922485, 0.7918372750282288, 0.7909126877784729, 0.804649293422699, 0.8029322624206543, 0.8076872229576111, 0.8150838613510132, 0.8141592741012573, 0.8208954930305481, 0.8235371708869934, 0.830669641494751, 0.8322546482086182, 0.8284242749214172, 0.8356888294219971, 0.8370096683502197, 0.8347642421722412, 0.8465195894241333, 0.8494254350662231, 0.8504821062088013, 0.8471800088882446, 0.8524633646011353, 0.8545766472816467, 0.863029956817627, 0.8627657890319824, 0.8625016212463379, 0.8648791313171387, 0.8643507957458496, 0.8625016212463379, 0.8638224601745605, 0.8697662353515625], "val_loss": [2.2467868328094482, 2.0178890228271484, 1.1299192905426025, 0.8774546980857849, 0.7657074332237244, 0.6915966868400574, 0.6778485178947449, 0.6637511253356934, 0.6457324028015137, 0.6079652905464172, 0.5636243224143982, 0.545504629611969, 0.5325413346290588, 0.5315685272216797, 0.530977725982666, 0.5126940011978149, 0.5219563245773315, 0.49964573979377747, 0.4902980625629425, 0.4806039333343506, 0.4808754622936249, 0.47210079431533813, 0.4713355600833893, 0.4829427897930145, 0.46571770310401917, 0.45089635252952576, 0.445420503616333, 0.44492077827453613, 0.4457634687423706, 0.42692285776138306, 0.42520764470100403, 0.4226384162902832, 0.43392813205718994, 0.42525097727775574, 0.4225480556488037, 0.4044335186481476, 0.41873326897621155, 0.41403084993362427, 0.4088767468929291, 0.404558926820755, 0.3991851806640625, 0.3900766670703888, 0.39351797103881836, 0.40183717012405396, 0.4217793047428131, 0.4172496795654297, 0.41575029492378235, 0.426766961812973, 0.4252052903175354], "val_accuracy": [0.414000004529953, 0.44733333587646484, 0.6493333578109741, 0.7039999961853027, 0.7099999785423279, 0.7369999885559082, 0.737333357334137, 0.7426666617393494, 0.7509999871253967, 0.7680000066757202, 0.7770000100135803, 0.7906666398048401, 0.7879999876022339, 0.8006666898727417, 0.793666660785675, 0.7950000166893005, 0.8056666851043701, 0.8086666464805603, 0.8166666626930237, 0.815666675567627, 0.8130000233650208, 0.8159999847412109, 0.8226666450500488, 0.8243333101272583, 0.828000009059906, 0.8353333473205566, 0.8326666951179504, 0.8393333554267883, 0.8429999947547913, 0.843999981880188, 0.8453333377838135, 0.8413333296775818, 0.8433333039283752, 0.8503333330154419, 0.8413333296775818, 0.856333315372467, 0.8583333492279053, 0.859000027179718, 0.8579999804496765, 0.8643333315849304, 0.862666666507721, 0.8653333187103271, 0.8606666922569275, 0.8679999709129333, 0.8646666407585144, 0.8659999966621399, 0.8646666407585144, 0.8576666712760925, 0.862666666507721]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3], [0, 0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 2, 0, 3, 5, 3, 5], [16, 16], [0, 1], [0], [0], [0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 2], [2, 3, 1, 6, 2, 5, 0, 4, 5, 7], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 15, 8, 7, 2, 2, 1, 1, 1, 10, 5, 5, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(tf.math.add(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(sigma, tf.math.sqrt(alpha))), grad), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 3, 3], [0, 1, 0, 2, 3], [39, 39], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 8], [0, 1, 0, 3], [71, 16], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [2, 6, 8, 9, 0, 1, 8], [0, 7, 2], [99, 63], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 0, 2, 8], [0, 4, 0, 3, 4, 0, 3, 4, 2, 0], [16, 0, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 2, 1, 1, 1, 10, 7, 3, 2, 17, 9, 8, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.subtract(tf.math.sqrt(grad), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), sigma), grad)), tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), sigma), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 9, 0, 3], [0, 1, 0, 0], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 4, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [66], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 3], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0, 5], [16, 99, 96, 99, 61, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 0, 1, 1, 0, 1, 1, 2, 1, 1, 1, 23, 12, 11, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma), tf.math.sqrt(tf.math.multiply(alpha, beta))), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0], [8, 2, 3, 1, 3, 5, 3, 7, 5, 1, 2, 5, 9], [0, 1, 0, 2, 1, 1, 1, 3], [39, 39, 73], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 3, 5, 3, 8, 2, 9], [0, 0, 2, 0, 3, 1, 4], [16, 16, 58, 68], [0, 1, 1], [1], [0, 6], [99], [1], [0], [2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 13, 8, 3, 14, 9, 5, 4, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.square(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), alpha)))), tf.math.square(tf.math.subtract(alpha, tf.math.add(tf.math.square(alpha), grad)))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3035154342651367, 2.30329966545105, 2.303584098815918, 2.303764581680298, 2.3049356937408447, 2.304410934448242, 2.3055505752563477, 2.304389238357544], "accuracy": [0.09615638852119446, 0.09972262382507324, 0.09430722147226334, 0.10011887550354004, 0.09272222965955734, 0.09351472556591034, 0.09602430462837219, 0.09589222073554993], "val_loss": [2.3026535511016846, 2.3032727241516113, 2.3029239177703857, 2.303189516067505, 2.3050098419189453, 2.3042194843292236, 2.3036701679229736, 2.305138111114502], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10333333164453506, 0.0976666659116745, 0.10199999809265137, 0.09700000286102295, 0.10333333164453506, 0.10199999809265137]}}]