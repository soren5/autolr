[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8625714182853699, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220792055130005, 1.8621891736984253, 1.3881357908248901, 1.09302818775177, 0.9417194128036499, 0.8459799289703369, 0.7845369577407837, 0.7382367253303528, 0.7010389566421509, 0.6634865999221802, 0.638221025466919, 0.6109064221382141, 0.607850193977356, 0.5740946531295776, 0.5653810501098633, 0.5476908087730408, 0.5381495952606201, 0.5263752937316895, 0.510925829410553, 0.5015335083007812, 0.4820706248283386, 0.4832106828689575, 0.4756454527378082, 0.4635694622993469, 0.4551225006580353, 0.45027005672454834, 0.44093823432922363, 0.4318511188030243, 0.42541077733039856, 0.42224884033203125, 0.4164779782295227, 0.4049607217311859, 0.3911728262901306, 0.3936416208744049, 0.3928978145122528, 0.3805016577243805, 0.3664579391479492, 0.3673867881298065, 0.36959323287010193, 0.36437299847602844, 0.35438641905784607, 0.35058826208114624, 0.3427507281303406, 0.3370451331138611, 0.33331143856048584, 0.329170823097229, 0.3204112946987152, 0.32700762152671814, 0.3122612237930298, 0.3081066906452179, 0.3094271719455719, 0.29792678356170654, 0.2993115484714508, 0.29422298073768616, 0.2888895571231842, 0.2839169502258301, 0.2818743884563446, 0.2886461317539215, 0.28332072496414185, 0.27269020676612854, 0.27022218704223633, 0.26370662450790405, 0.2666785717010498, 0.2608170211315155, 0.2528769373893738, 0.24999473989009857, 0.2514645457267761, 0.2451011836528778, 0.24377557635307312, 0.24273815751075745, 0.22692491114139557, 0.22888892889022827, 0.22553786635398865, 0.22210849821567535, 0.22111403942108154, 0.21981281042099, 0.22143830358982086], "accuracy": [0.2685246467590332, 0.4850085973739624, 0.5705983638763428, 0.6209219098091125, 0.6653017997741699, 0.6989829540252686, 0.7193237543106079, 0.7371549606323242, 0.7479857206344604, 0.7567031979560852, 0.7640998363494873, 0.7763835787773132, 0.7795535326004028, 0.7979130744934082, 0.8006868362426758, 0.7993659973144531, 0.8082155585289001, 0.8145555257797241, 0.8185180425643921, 0.8181217908859253, 0.8273676037788391, 0.8286884427070618, 0.8298771381378174, 0.83119797706604, 0.8416325449943542, 0.8421608805656433, 0.8426892161369324, 0.8488970994949341, 0.843481719493866, 0.8432175517082214, 0.8506141901016235, 0.8565579056739807, 0.8617091774940491, 0.8622375130653381, 0.856689989566803, 0.8640866279602051, 0.8696341514587402, 0.8652753829956055, 0.8697662353515625, 0.8691058158874512, 0.8729361891746521, 0.8746532797813416, 0.8772949576377869, 0.8864086866378784, 0.8821820020675659, 0.8869370222091675, 0.8854840993881226, 0.8823140859603882, 0.8874653577804565, 0.8870691061019897, 0.8918240666389465, 0.8916919827461243, 0.8903711438179016, 0.8975036144256592, 0.8961827754974365, 0.8967111110687256, 0.8982961177825928, 0.895918607711792, 0.8994848728179932, 0.90423983335495, 0.9088627696037292, 0.9055606722831726, 0.8971073627471924, 0.9070135951042175, 0.909259021282196, 0.9122969508171082, 0.9076740145683289, 0.9122969508171082, 0.9115044474601746, 0.9129573106765747, 0.9179764986038208, 0.9167877435684204, 0.9162594079971313, 0.9231277108192444, 0.9183727502822876, 0.9198256731033325, 0.9187690019607544], "val_loss": [2.0364725589752197, 1.5128246545791626, 1.0533530712127686, 0.8446906805038452, 0.7561763525009155, 0.7019381523132324, 0.65489661693573, 0.6211448311805725, 0.59518963098526, 0.572323203086853, 0.5516096949577332, 0.5376506447792053, 0.5230811238288879, 0.503790557384491, 0.49964791536331177, 0.4881949722766876, 0.48279935121536255, 0.46718528866767883, 0.4612346589565277, 0.4480087459087372, 0.44122591614723206, 0.4413113594055176, 0.43336841464042664, 0.4271835386753082, 0.4218600392341614, 0.42247599363327026, 0.4176708161830902, 0.4117531478404999, 0.4079114496707916, 0.40663301944732666, 0.39961060881614685, 0.4018246531486511, 0.391265869140625, 0.3977048695087433, 0.39048680663108826, 0.3852134943008423, 0.38293033838272095, 0.3836851119995117, 0.38270336389541626, 0.378163605928421, 0.3743564188480377, 0.3732225000858307, 0.37613481283187866, 0.37444448471069336, 0.37225306034088135, 0.3696061968803406, 0.36466512084007263, 0.3650493025779724, 0.3639196753501892, 0.36263972520828247, 0.36024484038352966, 0.3602229356765747, 0.3603344261646271, 0.36090657114982605, 0.35581836104393005, 0.36119937896728516, 0.36255815625190735, 0.3597744107246399, 0.35420486330986023, 0.3587738871574402, 0.355574369430542, 0.35649049282073975, 0.3559623956680298, 0.3540351092815399, 0.35246899724006653, 0.3571052551269531, 0.3522260785102844, 0.3568653464317322, 0.3531077802181244, 0.35371312499046326, 0.35671287775039673, 0.3545120060443878, 0.34966182708740234, 0.3542167842388153, 0.35868433117866516, 0.3556581735610962, 0.3485260307788849], "val_accuracy": [0.5213333368301392, 0.643666684627533, 0.6816666722297668, 0.7120000123977661, 0.734666645526886, 0.746999979019165, 0.7620000243186951, 0.768666684627533, 0.7803333401679993, 0.7889999747276306, 0.7979999780654907, 0.8036666512489319, 0.8050000071525574, 0.815666675567627, 0.8230000138282776, 0.8169999718666077, 0.8193333148956299, 0.8306666612625122, 0.8346666693687439, 0.8383333086967468, 0.8423333168029785, 0.8370000123977661, 0.8443333506584167, 0.843999981880188, 0.8429999947547913, 0.8473333120346069, 0.8429999947547913, 0.8463333249092102, 0.8500000238418579, 0.8556666374206543, 0.8546666502952576, 0.8483333587646484, 0.8556666374206543, 0.8573333621025085, 0.8586666584014893, 0.859333336353302, 0.8579999804496765, 0.8586666584014893, 0.8629999756813049, 0.8610000014305115, 0.8579999804496765, 0.859333336353302, 0.8640000224113464, 0.8616666793823242, 0.8659999966621399, 0.8606666922569275, 0.862666666507721, 0.8610000014305115, 0.8683333396911621, 0.8653333187103271, 0.8646666407585144, 0.8656666874885559, 0.8700000047683716, 0.8676666617393494, 0.8669999837875366, 0.8693333268165588, 0.8700000047683716, 0.8713333606719971, 0.8713333606719971, 0.8700000047683716, 0.8743333220481873, 0.875333309173584, 0.871999979019165, 0.8759999871253967, 0.875333309173584, 0.874666690826416, 0.8806666731834412, 0.8736666440963745, 0.875, 0.8743333220481873, 0.8803333044052124, 0.8809999823570251, 0.8796666860580444, 0.8796666860580444, 0.878000020980835, 0.8803333044052124, 0.8786666393280029]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8571428656578064, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293764591217041, 2.189845561981201, 1.7775580883026123, 1.360792875289917, 1.068073034286499, 0.912892758846283, 0.8484845161437988, 0.8088508248329163, 0.7584752440452576, 0.736923336982727, 0.6868881583213806, 0.6853713989257812, 0.6478379964828491, 0.6088180541992188, 0.6073713302612305, 0.6035471558570862, 0.576197624206543, 0.5713817477226257, 0.5541231632232666, 0.5403174757957458, 0.540847897529602, 0.5214354395866394, 0.5079468488693237, 0.5043949484825134, 0.5085919499397278, 0.4940272271633148, 0.4899486005306244, 0.470270037651062, 0.46707192063331604, 0.4555252492427826, 0.44769084453582764, 0.44525858759880066, 0.4253363311290741, 0.4312397539615631, 0.41939932107925415, 0.4114712178707123, 0.40363532304763794, 0.4135596752166748, 0.39610594511032104, 0.38888445496559143, 0.38426119089126587], "accuracy": [0.1302337795495987, 0.32439571619033813, 0.43428874015808105, 0.544181764125824, 0.631488561630249, 0.6709813475608826, 0.6888125538825989, 0.7024171352386475, 0.7092854380607605, 0.7181349992752075, 0.737022876739502, 0.7372870445251465, 0.7536653280258179, 0.7688548564910889, 0.7611940503120422, 0.7685906887054443, 0.7820631265640259, 0.7827235460281372, 0.7931581139564514, 0.7881389260292053, 0.7891955971717834, 0.7942147850990295, 0.8041210174560547, 0.8068947196006775, 0.8005547523498535, 0.8165367841720581, 0.8141592741012573, 0.8215559124946594, 0.8238013386726379, 0.8314621448516846, 0.8354246616363525, 0.8348963260650635, 0.8359529972076416, 0.832650899887085, 0.8385946154594421, 0.8451988101005554, 0.8492933511734009, 0.8475762605667114, 0.8533879518508911, 0.852331280708313, 0.8524633646011353], "val_loss": [2.24520206451416, 2.015972375869751, 1.1277456283569336, 0.8299547433853149, 0.7450283765792847, 0.6848635077476501, 0.6371579766273499, 0.637825071811676, 0.6160156726837158, 0.5969061851501465, 0.5607876777648926, 0.5452319979667664, 0.5217344164848328, 0.5227025747299194, 0.5230777859687805, 0.5117223858833313, 0.5099635720252991, 0.49664440751075745, 0.49648112058639526, 0.5011491775512695, 0.4935736060142517, 0.4900028109550476, 0.48732882738113403, 0.4829947054386139, 0.4870716631412506, 0.4866401255130768, 0.46768590807914734, 0.4620743691921234, 0.45838817954063416, 0.47238361835479736, 0.46263688802719116, 0.454886257648468, 0.46942391991615295, 0.4706993103027344, 0.4668044149875641, 0.4655740559101105, 0.4626055061817169, 0.4669857621192932, 0.4535222053527832, 0.450224906206131, 0.45317399501800537], "val_accuracy": [0.43433332443237305, 0.4936666786670685, 0.6489999890327454, 0.7003333568572998, 0.7303333282470703, 0.7480000257492065, 0.7590000033378601, 0.7633333206176758, 0.7683333158493042, 0.7823333144187927, 0.7799999713897705, 0.8023333549499512, 0.7893333435058594, 0.7993333339691162, 0.800000011920929, 0.8023333549499512, 0.8146666884422302, 0.8163333535194397, 0.8169999718666077, 0.8133333325386047, 0.8253333568572998, 0.8143333196640015, 0.8153333067893982, 0.8273333311080933, 0.8320000171661377, 0.8263333439826965, 0.8336666822433472, 0.8370000123977661, 0.8423333168029785, 0.840666651725769, 0.843666672706604, 0.8443333506584167, 0.8386666774749756, 0.8410000205039978, 0.8473333120346069, 0.8546666502952576, 0.8463333249092102, 0.8413333296775818, 0.8519999980926514, 0.8523333072662354, 0.8529999852180481]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8305714130401611, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5340285301208496, 0.7589282989501953, 0.6740655303001404, 0.6025635600090027, 0.5495973825454712, 0.5249877572059631, 0.500654399394989, 0.463606595993042, 0.46400830149650574, 0.45256876945495605, 0.4609344005584717, 0.477010577917099, 0.472127228975296, 0.4863804578781128], "accuracy": [0.4768194556236267, 0.7321357727050781, 0.7556465268135071, 0.780610203742981, 0.7997622489929199, 0.8098005652427673, 0.8182538747787476, 0.8298771381378174, 0.8304054737091064, 0.8388587832450867, 0.8405758738517761, 0.8226125836372375, 0.8314621448516846, 0.8355567455291748], "val_loss": [0.7338569164276123, 0.6170772910118103, 0.5679996609687805, 0.5482514500617981, 0.5016319751739502, 0.49292126297950745, 0.5121570825576782, 0.4842958152294159, 0.501849353313446, 0.49318769574165344, 0.5028588771820068, 0.4884313941001892, 0.5274285674095154, 0.5203484296798706], "val_accuracy": [0.7419999837875366, 0.7776666879653931, 0.8053333163261414, 0.7933333516120911, 0.8149999976158142, 0.8243333101272583, 0.8326666951179504, 0.8289999961853027, 0.8416666388511658, 0.8389999866485596, 0.8373333215713501, 0.8336666822433472, 0.8299999833106995, 0.8349999785423279]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 1, 3, 1, 3, 5], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 4, 6, 0, 2, 9, 1, 9, 4], [0, 2, 1, 4, 1, 3, 1, 3, 4], [0, 41, 48], [0, 0, 0, 1, 0, 1], [0, 8, 8, 8], [0, 1], [0], [1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 3, 24, 15, 9, 3, 4, 3, 1, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(beta, tf.math.multiply(tf.math.sqrt(alpha), tf.math.pow(grad, alpha))), grad), tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.subtract(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [52981.55078125, 8010450.5, 135456432.0, 942483584.0, 4075895552.0, 13398759424.0], "accuracy": [0.10051512718200684, 0.09906221181154251, 0.09826971590518951, 0.10130762308835983, 0.10342095047235489, 0.09853387624025345], "val_loss": [547547.5, 29121254.0, 309481280.0, 1671393664.0, 6202916352.0, 18129473536.0], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 4, 2], [0, 3, 0, 3, 2, 4], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 3, 6, 8, 1, 4, 1, 4, 2, 8, 7, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 4], [16, 99, 96, 99, 32, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 13, 7, 6, 2, 2, 1, 1, 1, 24, 13, 11, 6], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.sqrt(sigma), alpha))))), beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], [0, 2, 3, 2, 3, 0, 9], [0, 1, 0, 1], [39, 39, 42], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 9, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.304030179977417, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}, "mapping_values": [1, 11, 7, 4, 3, 10, 6, 4, 2, 1, 0, 1, 1, 8, 5, 3, 4], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 1, 3, 5, 3, 1, 0], [0, 1, 0, 2, 2, 1], [83, 99, 27], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 1, 1], [16, 16], [0, 1], [0], [0], [23, 59], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 3, 5, 5, 4, 5, 4, 8, 7], [1, 7, 4, 1, 0, 0, 0, 1, 0, 6, 3, 1, 5, 5], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 2, 6, 3, 3, 1, 2, 1, 1, 1, 32, 18, 14, 4], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.negative(grad), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(grad, alpha))), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(alpha))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)))))), tf.math.square(sigma)), tf.math.pow(tf.math.sqrt(alpha), tf.math.add(grad, grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]