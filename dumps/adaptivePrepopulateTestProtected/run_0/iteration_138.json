[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8625714182853699, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223539113998413, 1.872334599494934, 1.3979672193527222, 1.1020616292953491, 0.9566105604171753, 0.8456701040267944, 0.7717652916908264, 0.7366267442703247, 0.6966433525085449, 0.67442387342453, 0.6437228322029114, 0.6145903468132019, 0.6090551018714905, 0.5857946872711182, 0.5706149935722351, 0.5618492364883423, 0.5374315977096558, 0.5308107733726501, 0.5174909830093384, 0.5051121115684509, 0.48731115460395813, 0.48079586029052734, 0.47799399495124817, 0.4597863554954529, 0.4578854441642761, 0.4525914788246155, 0.4421590566635132, 0.4319626986980438, 0.4317980408668518, 0.41671255230903625, 0.41549116373062134, 0.41003313660621643, 0.40277960896492004, 0.4001697599887848, 0.3960244357585907, 0.3855605721473694, 0.3810694217681885, 0.3710097670555115, 0.3656192421913147, 0.35659345984458923, 0.3622955083847046, 0.35280129313468933, 0.3541545271873474, 0.34715279936790466, 0.3372575044631958, 0.33422690629959106, 0.3296056091785431, 0.3246772587299347, 0.3192973732948303, 0.30773231387138367, 0.31486940383911133, 0.304614394903183, 0.3019713759422302, 0.29871147871017456, 0.2987125813961029, 0.2912956476211548, 0.2891865074634552, 0.28498026728630066, 0.2754703760147095, 0.27454614639282227], "accuracy": [0.2782987654209137, 0.49068814516067505, 0.5576542019844055, 0.6164311170578003, 0.654999315738678, 0.6948884129524231, 0.7189275026321411, 0.7277770638465881, 0.7471932172775269, 0.7524765729904175, 0.7611940503120422, 0.7803460359573364, 0.7771760821342468, 0.7880068421363831, 0.7909126877784729, 0.7911768555641174, 0.8039889335632324, 0.8067626357078552, 0.81112140417099, 0.8171972036361694, 0.8224804997444153, 0.8216879963874817, 0.828820526599884, 0.8392550349235535, 0.834632158279419, 0.8381983637809753, 0.843481719493866, 0.8455950617790222, 0.843481719493866, 0.8469158411026001, 0.8531237840652466, 0.8525954484939575, 0.8531237840652466, 0.857218325138092, 0.8584070801734924, 0.8621054291725159, 0.8644828796386719, 0.8628978729248047, 0.8716153502464294, 0.8713511824607849, 0.8684453964233398, 0.870030403137207, 0.8741249442100525, 0.8734645247459412, 0.8776912093162537, 0.8765024542808533, 0.882710337638855, 0.882710337638855, 0.8862766027450562, 0.8874653577804565, 0.8873332738876343, 0.8887861371040344, 0.8899748921394348, 0.8885219693183899, 0.8945978283882141, 0.8922203183174133, 0.8939374089241028, 0.8963148593902588, 0.9027869701385498, 0.8990886211395264], "val_loss": [2.045241117477417, 1.5275852680206299, 1.0633692741394043, 0.8606456518173218, 0.7701389193534851, 0.7173994183540344, 0.6710567474365234, 0.6383918523788452, 0.6107854843139648, 0.5926627516746521, 0.5692306160926819, 0.5552037954330444, 0.5385976433753967, 0.526231050491333, 0.5167883038520813, 0.50718092918396, 0.49517273902893066, 0.4838732182979584, 0.4769889712333679, 0.4715701937675476, 0.4645187556743622, 0.45938530564308167, 0.454865962266922, 0.4505693316459656, 0.4423986077308655, 0.43666741251945496, 0.4291958510875702, 0.42785945534706116, 0.4225189983844757, 0.4247387647628784, 0.4110766649246216, 0.4095489978790283, 0.4064296782016754, 0.40155428647994995, 0.407959520816803, 0.3982865512371063, 0.3964449167251587, 0.39457064867019653, 0.39010360836982727, 0.38866397738456726, 0.3935944139957428, 0.3926857113838196, 0.39531102776527405, 0.3852572441101074, 0.38151082396507263, 0.37979230284690857, 0.38503336906433105, 0.3706258535385132, 0.3749140501022339, 0.3702062666416168, 0.37374502420425415, 0.37144243717193604, 0.3685976564884186, 0.36900898814201355, 0.36964428424835205, 0.36920633912086487, 0.36809587478637695, 0.367323637008667, 0.36318400502204895, 0.36190128326416016], "val_accuracy": [0.5433333516120911, 0.653333306312561, 0.6700000166893005, 0.6913333535194397, 0.7183333039283752, 0.7386666536331177, 0.7563333511352539, 0.7603333592414856, 0.7756666541099548, 0.7776666879653931, 0.7870000004768372, 0.7886666655540466, 0.7979999780654907, 0.8029999732971191, 0.8059999942779541, 0.8116666674613953, 0.8130000233650208, 0.8186666369438171, 0.8213333487510681, 0.8233333230018616, 0.8223333358764648, 0.8343333601951599, 0.8263333439826965, 0.8270000219345093, 0.8343333601951599, 0.8370000123977661, 0.8410000205039978, 0.8420000076293945, 0.8420000076293945, 0.8433333039283752, 0.846666693687439, 0.8450000286102295, 0.8529999852180481, 0.8536666631698608, 0.8450000286102295, 0.8529999852180481, 0.8516666889190674, 0.8560000061988831, 0.8560000061988831, 0.8560000061988831, 0.859000027179718, 0.8536666631698608, 0.8513333201408386, 0.8539999723434448, 0.8569999933242798, 0.8613333106040955, 0.8579999804496765, 0.8643333315849304, 0.8619999885559082, 0.8676666617393494, 0.8606666922569275, 0.8666666746139526, 0.8686666488647461, 0.8663333058357239, 0.8730000257492065, 0.8706666827201843, 0.8666666746139526, 0.8706666827201843, 0.8696666955947876, 0.8696666955947876]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8548571467399597, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2923836708068848, 2.1901421546936035, 1.7708033323287964, 1.385962963104248, 1.0641734600067139, 0.9225159883499146, 0.8589253425598145, 0.805942714214325, 0.7783680558204651, 0.7600744366645813, 0.7086188793182373, 0.6750343441963196, 0.6604912877082825, 0.6447722911834717, 0.6096747517585754, 0.6010040044784546, 0.5825809836387634, 0.5713801383972168, 0.5597030520439148, 0.5480977892875671, 0.5341512560844421, 0.5220337510108948, 0.5184498429298401, 0.5084469318389893, 0.4892396032810211, 0.48355022072792053, 0.4778358042240143, 0.473131388425827, 0.4542170464992523, 0.4497486352920532, 0.435825377702713, 0.4392527937889099, 0.4338073432445526, 0.41595473885536194, 0.4099942445755005, 0.4134626090526581, 0.3999166190624237], "accuracy": [0.12930920720100403, 0.32003697752952576, 0.4447232782840729, 0.535860538482666, 0.6386210322380066, 0.656980574131012, 0.6903975605964661, 0.700171709060669, 0.7000396251678467, 0.7086250185966492, 0.7314753532409668, 0.7326641082763672, 0.7518161535263062, 0.7592127919197083, 0.7646281719207764, 0.7755910754203796, 0.7791573405265808, 0.7835160493850708, 0.7911768555641174, 0.7884030938148499, 0.7984414100646973, 0.8035926818847656, 0.8037247657775879, 0.8094043135643005, 0.817989706993103, 0.817461371421814, 0.8142913579940796, 0.8240655064582825, 0.829216718673706, 0.8280280232429504, 0.8363492488861084, 0.8321225643157959, 0.8342359066009521, 0.8416325449943542, 0.846387505531311, 0.8391229510307312, 0.8457271456718445], "val_loss": [2.246000289916992, 2.020479917526245, 1.1387896537780762, 0.8390585780143738, 0.7583150863647461, 0.686244547367096, 0.6341135501861572, 0.6277632713317871, 0.641595721244812, 0.607309877872467, 0.5515539646148682, 0.528494656085968, 0.533193051815033, 0.5137246251106262, 0.49422428011894226, 0.4943186044692993, 0.4878210723400116, 0.48299914598464966, 0.46740275621414185, 0.4694671332836151, 0.46732059121131897, 0.46225643157958984, 0.4540279507637024, 0.45026227831840515, 0.44389185309410095, 0.4244597256183624, 0.4197309613227844, 0.42850643396377563, 0.4091046452522278, 0.40281611680984497, 0.39779597520828247, 0.394232839345932, 0.39905494451522827, 0.3966848850250244, 0.39234665036201477, 0.38725700974464417, 0.3823910355567932], "val_accuracy": [0.41333332657814026, 0.4716666638851166, 0.6466666460037231, 0.6926666498184204, 0.7326666712760925, 0.7396666407585144, 0.7599999904632568, 0.762666642665863, 0.7486666440963745, 0.768666684627533, 0.7756666541099548, 0.7950000166893005, 0.7940000295639038, 0.8116666674613953, 0.8146666884422302, 0.8163333535194397, 0.82833331823349, 0.8203333616256714, 0.8273333311080933, 0.8289999961853027, 0.8256666660308838, 0.8270000219345093, 0.8420000076293945, 0.8383333086967468, 0.8379999995231628, 0.847000002861023, 0.8476666808128357, 0.8533333539962769, 0.856333315372467, 0.8576666712760925, 0.862333357334137, 0.8673333525657654, 0.8583333492279053, 0.862333357334137, 0.8600000143051147, 0.8659999966621399, 0.8673333525657654]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8268571496009827, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4527060985565186, 0.7890411615371704, 0.6550800800323486, 0.6215916275978088, 0.551306962966919, 0.534530520439148, 0.5356782078742981, 0.5324988961219788, 0.4831973612308502, 0.4902517795562744, 0.475007563829422, 0.49048560857772827, 0.5358573794364929, 0.523015558719635, 0.5241749286651611, 0.5113357901573181, 0.5160781145095825, 0.5300518870353699, 0.5971890091896057, 0.5531902313232422, 0.5499704480171204], "accuracy": [0.5083872675895691, 0.7292299270629883, 0.7584202885627747, 0.7668735980987549, 0.7918372750282288, 0.8053097128868103, 0.8037247657775879, 0.8058380484580994, 0.8265751004219055, 0.8193105459213257, 0.8260467648506165, 0.8333113193511963, 0.8125742673873901, 0.8234050869941711, 0.8253863453865051, 0.8296129703521729, 0.826310932636261, 0.8136309385299683, 0.8059701323509216, 0.8078193068504333, 0.829216718673706], "val_loss": [0.8108094334602356, 0.623610258102417, 0.5717376470565796, 0.5285360217094421, 0.5051000714302063, 0.5435990691184998, 0.5623114705085754, 0.584900975227356, 0.5292909145355225, 0.49775174260139465, 0.5519636273384094, 0.5910504460334778, 0.6173514127731323, 0.6100330948829651, 0.6081972122192383, 0.6085239052772522, 0.6530663371086121, 0.6364035606384277, 0.6619159579277039, 0.6193780899047852, 0.7320100665092468], "val_accuracy": [0.7110000252723694, 0.7716666460037231, 0.7903333306312561, 0.8193333148956299, 0.8196666836738586, 0.8073333501815796, 0.8216666579246521, 0.8233333230018616, 0.8306666612625122, 0.8266666531562805, 0.8293333053588867, 0.8360000252723694, 0.8363333344459534, 0.8343333601951599, 0.8169999718666077, 0.8393333554267883, 0.8166666626930237, 0.8296666741371155, 0.8293333053588867, 0.8333333134651184, 0.8309999704360962]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 9, 3], [0, 2, 2, 2], [39, 89], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [8, 2, 3, 0, 3, 5], [3, 2, 0, 2], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 2, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.math.pow(alpha, tf.math.add(tf.math.sqrt(beta), grad)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}, "mapping_values": [1, 9, 6, 3, 2, 10, 6, 4, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 19}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 9, 0, 3], [0, 0, 1, 0, 2], [83, 99, 27], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [9, 2, 9, 0], [0], [0, 72], [0, 1], [0], [0], [0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 6, 1, 4, 2, 8, 3], [1, 0, 4, 4, 3, 2, 0, 1, 3, 2, 1], [16, 99, 80, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 4, 1, 2, 1, 0, 1, 1, 2, 1, 1, 1, 23, 12, 11, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, grad))), tf.math.subtract(sigma, tf.math.pow(tf.math.add(beta, tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.multiply(alpha, sigma)))))), beta), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 3, 3, 5], [0, 2, 0, 3, 5, 5], [16, 16], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 3, 4, 7, 2, 2, 5, 7, 9], [0, 7, 5, 1, 1, 5, 5], [99, 73], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 0, 1, 4, 1, 6, 2, 8], [4, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 6, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 15, 9, 6, 2, 16, 9, 7, 2, 21, 11, 10, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)))), tf.math.square(grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(grad, grad), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, grad)), grad)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09351472556591034, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 7, 3, 1, 3], [0, 1, 0, 3, 0], [54, 99, 27], [0, 1], [0, 2, 3, 0, 3, 5], [0], [0], [0, 0, 1, 0, 1, 1, 1], [2, 3, 4], [0, 2, 7, 7], [0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [6, 3, 3, 5, 8, 1, 4, 1, 4, 2, 8], [1, 6, 2, 1, 0, 1], [0]], "fitness": -0.09228571504354477, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 7, 3, 4, 1, 9, 5, 4, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.multiply(grad, tf.math.square(beta)), tf.math.sqrt(alpha)))", "other_info": {"loss": [2.311258554458618, 2.30959153175354, 2.310514211654663, 2.310373544692993, 2.3101136684417725, 2.308590888977051], "accuracy": [0.08413683623075485, 0.09351472556591034, 0.08836349099874496, 0.08968432247638702, 0.0936468094587326, 0.09430722147226334], "val_loss": [2.3085484504699707, 2.3085484504699707, 2.3085484504699707, 2.3085484504699707, 2.3085484504699707, 2.3085484504699707], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]