[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8697142601013184, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2235324382781982, 1.8586024045944214, 1.380301833152771, 1.0785198211669922, 0.9247974753379822, 0.8284521102905273, 0.7615971565246582, 0.7107214331626892, 0.6932277083396912, 0.6457715034484863, 0.6286975741386414, 0.5994762778282166, 0.5787606239318848, 0.5731003880500793, 0.5468577742576599, 0.5423824787139893, 0.5211275815963745, 0.5113224983215332, 0.5053379535675049, 0.489854633808136, 0.48260021209716797, 0.4696158766746521, 0.46293699741363525, 0.4537324905395508, 0.43842169642448425, 0.4492568373680115, 0.42683520913124084, 0.42359018325805664, 0.4179607331752777, 0.41461119055747986, 0.3984149992465973, 0.3969414234161377, 0.3858357071876526, 0.3878229558467865, 0.37502533197402954, 0.3756277859210968, 0.3682555556297302, 0.3673924207687378, 0.3628644645214081, 0.3525206446647644, 0.35290512442588806, 0.344277560710907, 0.3338833749294281, 0.331618070602417, 0.32454854249954224, 0.323644757270813, 0.32087060809135437, 0.3184255361557007, 0.3122974634170532, 0.3106931447982788], "accuracy": [0.26680755615234375, 0.4994056224822998, 0.5711266398429871, 0.6252806782722473, 0.6684718132019043, 0.7047945857048035, 0.7217012047767639, 0.7437590956687927, 0.7469290494918823, 0.7646281719207764, 0.778232753276825, 0.7848368883132935, 0.7881389260292053, 0.7965922355651855, 0.8010830879211426, 0.8021397590637207, 0.8141592741012573, 0.8178576231002808, 0.8219521641731262, 0.821820080280304, 0.8308017253875732, 0.83119797706604, 0.8368775844573975, 0.837537944316864, 0.8469158411026001, 0.8417646288871765, 0.848368763923645, 0.8499537706375122, 0.8536521196365356, 0.8520671129226685, 0.8593316674232483, 0.8615770936012268, 0.8664641380310059, 0.8618412613868713, 0.8688416481018066, 0.8660678863525391, 0.8747853636741638, 0.8689737319946289, 0.8728041052818298, 0.8774270415306091, 0.8766345381736755, 0.8812574148178101, 0.8792761564254761, 0.8861445188522339, 0.8873332738876343, 0.8870691061019897, 0.8877294659614563, 0.8857482671737671, 0.8889182209968567, 0.889050304889679], "val_loss": [2.0395848751068115, 1.5168565511703491, 1.0485109090805054, 0.8451623320579529, 0.7515866160392761, 0.6956256628036499, 0.6478099822998047, 0.6242215037345886, 0.5950829982757568, 0.5679894089698792, 0.5467814803123474, 0.5314814448356628, 0.5195097923278809, 0.5045698881149292, 0.49132364988327026, 0.4795878827571869, 0.46870091557502747, 0.46352604031562805, 0.4544556438922882, 0.4444507360458374, 0.4406317174434662, 0.4312945604324341, 0.4264895021915436, 0.4164794087409973, 0.42842838168144226, 0.41430655121803284, 0.4145514667034149, 0.40556013584136963, 0.4016743302345276, 0.3939409554004669, 0.3950386941432953, 0.39256757497787476, 0.3846859037876129, 0.38454100489616394, 0.38313615322113037, 0.3749956786632538, 0.3730088174343109, 0.3742174506187439, 0.37142300605773926, 0.37371963262557983, 0.369067907333374, 0.37199243903160095, 0.3623625636100769, 0.36648857593536377, 0.35853663086891174, 0.35849374532699585, 0.35998111963272095, 0.3557817339897156, 0.35721927881240845, 0.35491251945495605], "val_accuracy": [0.5616666674613953, 0.6499999761581421, 0.6746666431427002, 0.6946666836738586, 0.7283333539962769, 0.7433333396911621, 0.7516666650772095, 0.7523333430290222, 0.7786666750907898, 0.7796666622161865, 0.796999990940094, 0.7983333468437195, 0.8019999861717224, 0.8140000104904175, 0.8193333148956299, 0.8226666450500488, 0.8276666402816772, 0.82833331823349, 0.8336666822433472, 0.8416666388511658, 0.8396666646003723, 0.8396666646003723, 0.8460000157356262, 0.8510000109672546, 0.8423333168029785, 0.8473333120346069, 0.8473333120346069, 0.8513333201408386, 0.8543333411216736, 0.8603333234786987, 0.8576666712760925, 0.856333315372467, 0.859666645526886, 0.8603333234786987, 0.8646666407585144, 0.8656666874885559, 0.8646666407585144, 0.8640000224113464, 0.8663333058357239, 0.8663333058357239, 0.8700000047683716, 0.8653333187103271, 0.871666669845581, 0.8683333396911621, 0.8733333349227905, 0.8733333349227905, 0.8709999918937683, 0.8723333477973938, 0.8726666569709778, 0.8726666569709778]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8574285507202148, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2942612171173096, 2.1924874782562256, 1.7717845439910889, 1.385788083076477, 1.0783966779708862, 0.9208258390426636, 0.8470414876937866, 0.8077501058578491, 0.7661036849021912, 0.7239155173301697, 0.7087308764457703, 0.6772024035453796, 0.638799786567688, 0.6148632764816284, 0.6000621318817139, 0.5901040434837341, 0.5726571083068848, 0.5593070983886719, 0.5530022978782654, 0.5262926816940308, 0.522620439529419, 0.5162326097488403, 0.5114402770996094, 0.5058354139328003, 0.48535117506980896, 0.4759751558303833, 0.45276176929473877, 0.44253942370414734, 0.4419705271720886, 0.4198799729347229, 0.4252382516860962, 0.406232625246048, 0.4074324667453766, 0.40278884768486023, 0.38802480697631836, 0.38681966066360474, 0.3689526319503784, 0.3666110336780548, 0.35987573862075806, 0.3474259078502655, 0.34842967987060547, 0.3380868434906006, 0.3477717936038971, 0.3356555998325348], "accuracy": [0.12732796370983124, 0.3346982002258301, 0.4451195299625397, 0.542728841304779, 0.6255448460578918, 0.6639809608459473, 0.6903975605964661, 0.7087571024894714, 0.7034738063812256, 0.722757875919342, 0.7277770638465881, 0.7364945411682129, 0.7572315335273743, 0.7638356685638428, 0.7671377658843994, 0.7725531458854675, 0.7817989587783813, 0.7852331399917603, 0.7885351777076721, 0.8026680946350098, 0.8059701323509216, 0.8033285140991211, 0.8075551390647888, 0.8037247657775879, 0.8137630224227905, 0.8183859586715698, 0.8239334225654602, 0.8300092220306396, 0.8281601071357727, 0.8343679904937744, 0.8366134166717529, 0.8368775844573975, 0.8449346423149109, 0.848368763923645, 0.847840428352356, 0.8467837572097778, 0.8557654023170471, 0.8617091774940491, 0.8581429123878479, 0.8677849769592285, 0.8644828796386719, 0.8676528930664062, 0.8687095642089844, 0.8650112152099609], "val_loss": [2.2463455200195312, 2.0230705738067627, 1.1482553482055664, 0.8642730116844177, 0.7868989109992981, 0.6916479468345642, 0.6767927408218384, 0.6492666006088257, 0.6348683834075928, 0.6024867296218872, 0.5668628811836243, 0.5499516129493713, 0.5304505228996277, 0.5233286619186401, 0.515270471572876, 0.499228835105896, 0.4996313452720642, 0.49693578481674194, 0.48377203941345215, 0.4868732988834381, 0.48238998651504517, 0.47452959418296814, 0.46901342272758484, 0.4621081054210663, 0.45961490273475647, 0.45587944984436035, 0.44572001695632935, 0.45072850584983826, 0.45304372906684875, 0.44226229190826416, 0.43909668922424316, 0.4286646246910095, 0.43731045722961426, 0.41891926527023315, 0.4096663296222687, 0.4201330542564392, 0.4236992597579956, 0.4340588450431824, 0.4299377501010895, 0.4284689426422119, 0.43259960412979126, 0.44525712728500366, 0.44228190183639526, 0.43363261222839355], "val_accuracy": [0.4386666715145111, 0.49666666984558105, 0.6439999938011169, 0.7039999961853027, 0.70333331823349, 0.7400000095367432, 0.7403333187103271, 0.753000020980835, 0.762666642665863, 0.7606666684150696, 0.7699999809265137, 0.7796666622161865, 0.7929999828338623, 0.7916666865348816, 0.7916666865348816, 0.8076666593551636, 0.8026666641235352, 0.8003333210945129, 0.8176666498184204, 0.8213333487510681, 0.8213333487510681, 0.8243333101272583, 0.8333333134651184, 0.8349999785423279, 0.8386666774749756, 0.8416666388511658, 0.8460000157356262, 0.8460000157356262, 0.8393333554267883, 0.8450000286102295, 0.8416666388511658, 0.8576666712760925, 0.8543333411216736, 0.859333336353302, 0.859000027179718, 0.856333315372467, 0.8603333234786987, 0.8633333444595337, 0.8646666407585144, 0.8560000061988831, 0.8600000143051147, 0.8600000143051147, 0.8610000014305115, 0.8610000014305115]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0, 0, 0, 1], [0, 8, 1, 9, 7, 9, 0], [0], [0, 15, 92], [1], [0], [2], [0]], "fitness": -0.8302857279777527, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6580486297607422, 0.9195752739906311, 0.7207817435264587, 0.6435264945030212, 0.5854402780532837, 0.5454810261726379, 0.5216010212898254, 0.4932686686515808, 0.492830365896225, 0.5004427433013916, 0.47106751799583435, 0.47515803575515747, 0.4799818694591522, 0.5048171281814575, 0.5061578154563904, 0.49121636152267456, 0.47884601354599, 0.4872090220451355], "accuracy": [0.4616298973560333, 0.6848500967025757, 0.7342491149902344, 0.7526086568832397, 0.7788931727409363, 0.7893276810646057, 0.8080834746360779, 0.8230088353157043, 0.8224804997444153, 0.8214238286018372, 0.8358209133148193, 0.8309338092803955, 0.8350284099578857, 0.8228767514228821, 0.8355567455291748, 0.8290846943855286, 0.8407079577445984, 0.8317263126373291], "val_loss": [0.8479604721069336, 0.6375035643577576, 0.5603772401809692, 0.5195379257202148, 0.5078949332237244, 0.49729955196380615, 0.4876455068588257, 0.49487751722335815, 0.47779276967048645, 0.46749022603034973, 0.5342153906822205, 0.5303865671157837, 0.6117686629295349, 0.6275345087051392, 0.5829601883888245, 0.6057282090187073, 0.5599097609519958, 0.6360464096069336], "val_accuracy": [0.671999990940094, 0.7630000114440918, 0.796999990940094, 0.8090000152587891, 0.815666675567627, 0.8353333473205566, 0.8330000042915344, 0.8366666436195374, 0.847000002861023, 0.8366666436195374, 0.8410000205039978, 0.8389999866485596, 0.8476666808128357, 0.8309999704360962, 0.8386666774749756, 0.8420000076293945, 0.8370000123977661, 0.8433333039283752]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 8, 7, 1, 3, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 3, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [6, 4, 3, 6, 8, 1, 4, 1, 1, 2, 3, 3], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0, 5, 6], [16, 99, 96, 99, 80, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 2, 1, 1, 1, 24, 12, 12, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.subtract(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), sigma), alpha))), tf.math.multiply(beta, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, grad))", "other_info": {"loss": [708923.8125, 814562.625, 815295.5625, 816021.4375, 816755.75, 817482.0], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [824787.4375, 825523.5625, 826260.125, 826994.375, 827728.375, 828456.625], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 3, 3, 0, 2], [0, 2, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 0], [16, 16], [0, 0], [0, 9], [0], [32], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 3, 8, 9], [4, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 2, 0, 1, 24, 14, 10, 6], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.math.sqrt(sigma), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.sqrt(grad), alpha))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 1, 3, 1, 6, 2, 9, 8], [0, 1, 0, 2, 0], [83, 99, 27, 77], [0, 1], [0, 2, 3, 0, 3, 5], [0], [0], [0, 1, 1], [4], [0, 5], [99], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 6, 3, 6, 6, 2, 7, 1, 6, 8, 3, 9, 1, 3], [1, 1, 0, 4, 6, 2, 1, 0, 6, 2, 4, 1, 6, 5, 1, 4, 3, 2, 5, 5], [0, 98, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 4, 2, 1, 1, 1, 3, 1, 2, 1, 44, 24, 20, 3], "tree_depth": 36, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.multiply(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad), beta), tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), grad), beta), tf.math.add(grad, tf.math.add(tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.subtract(tf.math.multiply(alpha, grad), sigma))))))), beta)), grad), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 8], [0, 0, 0, 2], [39, 39, 18], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 3, 0, 3, 5, 6, 2, 9], [0, 3, 0, 3], [16, 16, 6], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 4, 4, 2, 8, 5, 1, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 0], [24, 99, 96, 99, 91, 1, 81]], "fitness": -0.0908571407198906, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(grad), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), sigma)))), tf.math.sqrt(tf.math.square(alpha)))), beta), tf.math.subtract(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.310110569000244, 2.310706853866577, 2.3104734420776367, 2.310373544692993, 2.3099849224090576, 2.3092503547668457], "accuracy": [0.08796724677085876, 0.09219389408826828, 0.0944393053650856, 0.08994849026203156, 0.08928807079792023, 0.09219389408826828], "val_loss": [2.309112548828125, 2.309113025665283, 2.309113025665283, 2.3091132640838623, 2.3091132640838623, 2.3091135025024414], "val_accuracy": [0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862]}, "mapping_values": [1, 8, 5, 3, 3, 13, 9, 4, 3, 2, 1, 1, 1, 25, 14, 11, 7], "tree_depth": 24}]