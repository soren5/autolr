[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8708571195602417, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2223126888275146, 1.8718255758285522, 1.392868161201477, 1.1026266813278198, 0.9278274178504944, 0.8443608283996582, 0.7716494202613831, 0.7361986637115479, 0.6848198175430298, 0.6610817909240723, 0.6296688318252563, 0.604361891746521, 0.5936242938041687, 0.5804322957992554, 0.5607282519340515, 0.5391599535942078, 0.5305988788604736, 0.5275327563285828, 0.5151979923248291, 0.5016279220581055, 0.4923388361930847, 0.47546640038490295, 0.4661586582660675, 0.4563087224960327, 0.4563702642917633, 0.44638508558273315, 0.4339195787906647, 0.4268753230571747, 0.41743460297584534, 0.4096958637237549, 0.40237677097320557, 0.4013906717300415, 0.3977177143096924, 0.3907550573348999, 0.38052964210510254, 0.3784159719944, 0.3755103051662445, 0.35965460538864136, 0.35721808671951294, 0.35699570178985596, 0.3463886082172394, 0.34394392371177673, 0.34135451912879944, 0.3344518840312958, 0.33164170384407043, 0.32876908779144287, 0.31806814670562744, 0.3177851140499115, 0.31253623962402344, 0.3071143627166748, 0.2974347174167633, 0.30168506503105164], "accuracy": [0.27380794286727905, 0.4920089840888977, 0.5719191431999207, 0.6185444593429565, 0.6734909415245056, 0.6919825673103333, 0.722229540348053, 0.7353057861328125, 0.7471932172775269, 0.754589855670929, 0.765949010848999, 0.7794214487075806, 0.7845727205276489, 0.7902522683143616, 0.7961959838867188, 0.802800178527832, 0.8070268034934998, 0.809140145778656, 0.81548011302948, 0.8178576231002808, 0.819970965385437, 0.8310658931732178, 0.8339717388153076, 0.8356888294219971, 0.8367455005645752, 0.8424250483512878, 0.8424250483512878, 0.8486329317092896, 0.8486329317092896, 0.8518029451370239, 0.8584070801734924, 0.8601241707801819, 0.8590674996376038, 0.8615770936012268, 0.8697662353515625, 0.8634262084960938, 0.8687095642089844, 0.8732003569602966, 0.8753136992454529, 0.8717474341392517, 0.8782195448875427, 0.8753136992454529, 0.8775591254234314, 0.8838990926742554, 0.8831065893173218, 0.8845595121383667, 0.8849557638168335, 0.8889182209968567, 0.8902390599250793, 0.8897107243537903, 0.8957865834236145, 0.889578640460968], "val_loss": [2.0411698818206787, 1.5170276165008545, 1.0414953231811523, 0.8333032131195068, 0.7480823397636414, 0.6892973780632019, 0.6460451483726501, 0.6171519160270691, 0.5864774584770203, 0.5665918588638306, 0.5473706126213074, 0.5300241112709045, 0.521062970161438, 0.5115295648574829, 0.497697114944458, 0.48602908849716187, 0.4843231737613678, 0.47347256541252136, 0.4700367748737335, 0.4569663107395172, 0.4625967741012573, 0.4431987404823303, 0.43728548288345337, 0.4463901221752167, 0.42930591106414795, 0.42171916365623474, 0.4201843738555908, 0.4126354157924652, 0.41104474663734436, 0.40629667043685913, 0.4057250916957855, 0.40045157074928284, 0.39596810936927795, 0.3967319428920746, 0.40023326873779297, 0.38494041562080383, 0.3856172561645508, 0.38504329323768616, 0.3840375244617462, 0.3781033456325531, 0.37711793184280396, 0.3727027177810669, 0.37071964144706726, 0.3730536997318268, 0.370809942483902, 0.36592406034469604, 0.365518182516098, 0.365828275680542, 0.3680746257305145, 0.3643794357776642, 0.36659058928489685, 0.365203320980072], "val_accuracy": [0.5363333225250244, 0.6673333048820496, 0.6880000233650208, 0.7126666903495789, 0.7319999933242798, 0.7509999871253967, 0.7616666555404663, 0.7596666812896729, 0.7793333530426025, 0.7846666574478149, 0.7913333177566528, 0.8019999861717224, 0.8100000023841858, 0.8119999766349792, 0.8220000267028809, 0.8233333230018616, 0.8183333277702332, 0.8353333473205566, 0.8370000123977661, 0.8346666693687439, 0.8296666741371155, 0.8443333506584167, 0.847000002861023, 0.8306666612625122, 0.8429999947547913, 0.8543333411216736, 0.8500000238418579, 0.8533333539962769, 0.8546666502952576, 0.8560000061988831, 0.8516666889190674, 0.8566666841506958, 0.859666645526886, 0.8560000061988831, 0.856333315372467, 0.8629999756813049, 0.8619999885559082, 0.862333357334137, 0.859000027179718, 0.8663333058357239, 0.8659999966621399, 0.8676666617393494, 0.8666666746139526, 0.8650000095367432, 0.8676666617393494, 0.8669999837875366, 0.871999979019165, 0.8706666827201843, 0.871999979019165, 0.8713333606719971, 0.8686666488647461, 0.8686666488647461]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0], [0, 1, 1, 9], [0, 2], [0, 99], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8514285683631897, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293541431427002, 2.191371440887451, 1.784051775932312, 1.3791543245315552, 1.0646100044250488, 0.9291271567344666, 0.8532565832138062, 0.8392985463142395, 0.7746098041534424, 0.7446926832199097, 0.7047402262687683, 0.6831987500190735, 0.6638233661651611, 0.6423015594482422, 0.613105833530426, 0.5970398187637329, 0.5857713222503662, 0.5766129493713379, 0.563447117805481, 0.535443127155304, 0.5274283289909363, 0.5098073482513428, 0.5095771551132202, 0.507147490978241, 0.48527637124061584, 0.48397165536880493, 0.4713875949382782, 0.45116016268730164, 0.4524182677268982, 0.44934025406837463, 0.44119593501091003, 0.4448181688785553, 0.42599520087242126, 0.41169869899749756, 0.39772307872772217, 0.39309385418891907], "accuracy": [0.13247919082641602, 0.3238673806190491, 0.42768457531929016, 0.5271430611610413, 0.6316206455230713, 0.6590939164161682, 0.6839255094528198, 0.6833971738815308, 0.698718786239624, 0.7129837274551392, 0.7235503792762756, 0.7388719916343689, 0.7441553473472595, 0.7530049085617065, 0.7631752490997314, 0.7721568942070007, 0.7803460359573364, 0.7802139520645142, 0.7847048044204712, 0.7922335267066956, 0.8020076751708984, 0.8034605979919434, 0.8078193068504333, 0.8084797263145447, 0.81112140417099, 0.8105930685997009, 0.8161405324935913, 0.822348415851593, 0.8240655064582825, 0.828292191028595, 0.828292191028595, 0.8301413059234619, 0.8374059200286865, 0.8417646288871765, 0.8418967127799988, 0.8455950617790222], "val_loss": [2.2480201721191406, 2.031306743621826, 1.1852647066116333, 0.9583882093429565, 0.810494601726532, 0.7410615086555481, 0.7549309730529785, 0.7123223543167114, 0.6947328448295593, 0.6594370007514954, 0.6268641948699951, 0.6219671368598938, 0.5918431878089905, 0.5778400897979736, 0.5683391690254211, 0.548864483833313, 0.5469434261322021, 0.5391514301300049, 0.5325225591659546, 0.5215891003608704, 0.5072889924049377, 0.5163819789886475, 0.5023084878921509, 0.49846094846725464, 0.48626935482025146, 0.4890817403793335, 0.48918166756629944, 0.4719596207141876, 0.46772512793540955, 0.4636246860027313, 0.45068925619125366, 0.4505237340927124, 0.45888200402259827, 0.45055681467056274, 0.45913833379745483, 0.46789899468421936], "val_accuracy": [0.4216666519641876, 0.4153333306312561, 0.637333333492279, 0.6729999780654907, 0.7123333215713501, 0.7263333201408386, 0.7293333411216736, 0.7233333587646484, 0.7556666731834412, 0.7603333592414856, 0.765999972820282, 0.7689999938011169, 0.7826666831970215, 0.7829999923706055, 0.7889999747276306, 0.7919999957084656, 0.7913333177566528, 0.8003333210945129, 0.8086666464805603, 0.8066666722297668, 0.8159999847412109, 0.8176666498184204, 0.8226666450500488, 0.8253333568572998, 0.8293333053588867, 0.8303333520889282, 0.8296666741371155, 0.840666651725769, 0.8360000252723694, 0.8396666646003723, 0.8493333458900452, 0.8493333458900452, 0.843666672706604, 0.846666693687439, 0.8429999947547913, 0.8433333039283752]}, "mapping_values": [1, 10, 5, 5, 3, 6, 4, 2, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 1], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8214285969734192, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5723106861114502, 0.8239810466766357, 0.6844406127929688, 0.6302059292793274, 0.5609668493270874, 0.5445051193237305, 0.516120970249176, 0.5156787037849426, 0.49605807662010193, 0.5031368136405945, 0.4939868748188019, 0.46101415157318115, 0.47232747077941895, 0.4742084741592407, 0.47368401288986206, 0.4972163140773773, 0.49755871295928955], "accuracy": [0.459780752658844, 0.7071720957756042, 0.7457403540611267, 0.7714964747428894, 0.7861577272415161, 0.7926297783851624, 0.8058380484580994, 0.8141592741012573, 0.8195747137069702, 0.8187822103500366, 0.8183859586715698, 0.837141752243042, 0.8294808864593506, 0.8267071843147278, 0.8350284099578857, 0.8337075710296631, 0.8241975903511047], "val_loss": [0.8259058594703674, 0.6206496357917786, 0.5799234509468079, 0.5285332202911377, 0.5547631978988647, 0.5327104926109314, 0.49313703179359436, 0.5356609225273132, 0.513383150100708, 0.5359156131744385, 0.5680249929428101, 0.4994088411331177, 0.482994943857193, 0.5597135424613953, 0.599907398223877, 0.5884546041488647, 0.6224321126937866], "val_accuracy": [0.7269999980926514, 0.7736666798591614, 0.7919999957084656, 0.8083333373069763, 0.8026666641235352, 0.8216666579246521, 0.8193333148956299, 0.8306666612625122, 0.8349999785423279, 0.8196666836738586, 0.8236666917800903, 0.846666693687439, 0.843666672706604, 0.8373333215713501, 0.8453333377838135, 0.8289999961853027, 0.8343333601951599]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 2, 3], [0, 2, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 2, 3, 4], [0, 2, 3, 3, 3, 2, 5], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0], [6, 2, 3, 6, 8, 2, 2, 1, 4, 2, 1], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 75, 75]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 16, 9, 7, 1, 2, 1, 1, 1, 14, 7, 7, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(tf.math.add(grad, tf.math.multiply(grad, tf.math.pow(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.303035020828247, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 6, 5], [0, 2, 0, 2], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 2, 9, 8, 1, 4, 8, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 0, 2, 0], [52, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 0, 12, 7, 5, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 3, 0, 3], [0, 2, 1, 2], [39, 86], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [3, 2, 3, 0, 3, 5], [0, 2, 0, 3, 0], [16, 16, 6], [0, 1], [0], [0], [58], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 0, 8, 8, 1, 4, 9, 3, 2, 8], [0, 0, 0, 3, 0, 0, 3, 0, 2, 0], [16, 99, 96, 59, 59, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 10, 5, 5, 3, 2, 1, 1, 1, 12, 8, 4, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.347548246383667, 3.061194658279419, 5.972309589385986, 11.995874404907227, 22.488170623779297, 37.4495849609375], "accuracy": [0.09760929644107819, 0.10342095047235489, 0.10421344637870789, 0.10117553919553757, 0.09642054885625839, 0.10328886657953262], "val_loss": [2.4107882976531982, 3.5023515224456787, 7.037034511566162, 13.539143562316895, 23.669960021972656, 38.441341400146484], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 4, 3, 5], [3, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 3, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09514285624027252, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3091437816619873, 2.3097312450408936, 2.309539556503296, 2.3107733726501465, 2.308936357498169, 2.3094868659973145], "accuracy": [0.09919429570436478, 0.0878351628780365, 0.09377889335155487, 0.09576013684272766, 0.09087307006120682, 0.09391097724437714], "val_loss": [2.309006929397583, 2.309006929397583, 2.309006929397583, 2.309006929397583, 2.309006929397583, 2.309006929397583], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 0, 2, 1, 1, 1, 20, 10, 10, 6], "tree_depth": 18}]