[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8625714182853699, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221015453338623, 1.8603498935699463, 1.3874181509017944, 1.0910691022872925, 0.9411328434944153, 0.8489426374435425, 0.7840362787246704, 0.7374842762947083, 0.702122151851654, 0.670112669467926, 0.6475278735160828, 0.6301268935203552, 0.602535605430603, 0.5851088166236877, 0.5689326524734497, 0.5601535439491272, 0.5439139008522034, 0.5391766428947449, 0.5125094652175903, 0.514094352722168, 0.4996747374534607, 0.49094367027282715, 0.48395049571990967, 0.4607095420360565, 0.4601416289806366, 0.4557552933692932, 0.4397903084754944, 0.4413965344429016, 0.42289575934410095, 0.42563876509666443, 0.4182336628437042, 0.4144779145717621, 0.40761539340019226, 0.4013812839984894, 0.4009096324443817, 0.39273443818092346, 0.38346558809280396, 0.37794944643974304, 0.3735772669315338, 0.370286226272583, 0.366376668214798], "accuracy": [0.27737417817115784, 0.48527276515960693, 0.5658433437347412, 0.6219785809516907, 0.6604147553443909, 0.6902654767036438, 0.7211728692054749, 0.7320036888122559, 0.7424382567405701, 0.7485140562057495, 0.7618544697761536, 0.7648923397064209, 0.7810064554214478, 0.7807422876358032, 0.7865539789199829, 0.796328067779541, 0.8041210174560547, 0.8000264167785645, 0.8149517774581909, 0.8117818236351013, 0.8170651197433472, 0.8203672170639038, 0.8227446675300598, 0.8305375576019287, 0.8383304476737976, 0.8327829837799072, 0.8388587832450867, 0.8401796221733093, 0.8475762605667114, 0.8482366800308228, 0.8490291833877563, 0.8524633646011353, 0.8521991968154907, 0.857218325138092, 0.856689989566803, 0.859199583530426, 0.863558292388916, 0.8609166741371155, 0.8656716346740723, 0.867520809173584, 0.8679170608520508], "val_loss": [2.0316481590270996, 1.5015424489974976, 1.0297162532806396, 0.8215047717094421, 0.7358515858650208, 0.6854758262634277, 0.6412514448165894, 0.6092451810836792, 0.5816892385482788, 0.5624507069587708, 0.5347998142242432, 0.5244385004043579, 0.511201024055481, 0.49618664383888245, 0.48082223534584045, 0.472181111574173, 0.46285995841026306, 0.45579639077186584, 0.44551488757133484, 0.43855294585227966, 0.44006550312042236, 0.4267045855522156, 0.4175204932689667, 0.41245973110198975, 0.4058617353439331, 0.4024202823638916, 0.39771518111228943, 0.3927638828754425, 0.3868680000305176, 0.3838849663734436, 0.3792419731616974, 0.37851962447166443, 0.37843960523605347, 0.37405040860176086, 0.36951151490211487, 0.36584699153900146, 0.36964738368988037, 0.35860905051231384, 0.3634554445743561, 0.35698947310447693, 0.352945476770401], "val_accuracy": [0.5180000066757202, 0.656333327293396, 0.6800000071525574, 0.7133333086967468, 0.7366666793823242, 0.7576666474342346, 0.7696666717529297, 0.7730000019073486, 0.7979999780654907, 0.7943333387374878, 0.8100000023841858, 0.8096666932106018, 0.8166666626930237, 0.8259999752044678, 0.8333333134651184, 0.8309999704360962, 0.8333333134651184, 0.8383333086967468, 0.8426666855812073, 0.8479999899864197, 0.8453333377838135, 0.8529999852180481, 0.8546666502952576, 0.8569999933242798, 0.8586666584014893, 0.8613333106040955, 0.8610000014305115, 0.862666666507721, 0.8690000176429749, 0.8686666488647461, 0.8706666827201843, 0.8683333396911621, 0.8663333058357239, 0.8690000176429749, 0.8730000257492065, 0.8769999742507935, 0.874666690826416, 0.875, 0.8713333606719971, 0.8723333477973938, 0.875]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 1, 1], [0, 6, 1], [0, 5, 0], [0, 48], [1], [0], [2], [0]], "fitness": -0.8254285454750061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4844197034835815, 0.8029569983482361, 0.6514146327972412, 0.6200062036514282, 0.5718300342559814, 0.5434123873710632, 0.539650022983551, 0.5044849514961243, 0.4949944317340851, 0.45804452896118164, 0.4524807929992676, 0.4352981448173523, 0.4197636544704437, 0.4217178225517273, 0.4086877405643463, 0.40299513936042786, 0.40084609389305115, 0.4245285987854004, 0.4757652282714844], "accuracy": [0.49425438046455383, 0.7143045663833618, 0.7688548564910889, 0.7712323069572449, 0.7969884872436523, 0.7972526550292969, 0.8144234418869019, 0.8191784620285034, 0.8211596608161926, 0.83119797706604, 0.8352925777435303, 0.8450667262077332, 0.8449346423149109, 0.8512746095657349, 0.8535200357437134, 0.8593316674232483, 0.8556333184242249, 0.843481719493866, 0.8451988101005554], "val_loss": [0.7622522115707397, 0.6088817715644836, 0.5558681488037109, 0.4706299602985382, 0.48476946353912354, 0.4948667883872986, 0.4811461567878723, 0.4842931032180786, 0.4744783043861389, 0.48199597001075745, 0.49801966547966003, 0.5411243438720703, 0.46944254636764526, 0.5159044861793518, 0.4785173237323761, 0.5531975626945496, 0.5075469017028809, 0.5801308751106262, 0.5477767586708069], "val_accuracy": [0.7099999785423279, 0.778333306312561, 0.7786666750907898, 0.8240000009536743, 0.8230000138282776, 0.8233333230018616, 0.8346666693687439, 0.828000009059906, 0.8443333506584167, 0.8373333215713501, 0.8420000076293945, 0.8420000076293945, 0.8410000205039978, 0.8519999980926514, 0.8416666388511658, 0.847000002861023, 0.8386666774749756, 0.8346666693687439, 0.8389999866485596]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 6, 3, 3, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8137142658233643, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293102741241455, 2.187284231185913, 1.7676485776901245, 1.3313300609588623, 1.0410308837890625, 0.9026920199394226, 0.8273739814758301, 0.7826545834541321, 0.7444427013397217, 0.7114119529724121, 0.679355263710022, 0.6616168022155762, 0.6527416706085205, 0.6066921949386597, 0.5990439653396606, 0.5809166431427002, 0.5581434965133667, 0.5487853288650513, 0.5460522174835205, 0.5266727209091187, 0.5073771476745605, 0.5141355991363525, 0.493939071893692, 0.49258872866630554, 0.48564067482948303, 0.47680315375328064, 0.48380246758461, 0.47199079394340515, 0.45065996050834656, 0.4501650929450989, 0.44130179286003113, 0.4248255789279938, 0.429856538772583, 0.41188913583755493, 0.40477919578552246, 0.39989352226257324, 0.39084649085998535, 0.37637919187545776, 0.3749183416366577, 0.3646411895751953, 0.37030214071273804, 0.36413663625717163, 0.34941622614860535, 0.3586633801460266, 0.34593620896339417, 0.3373674154281616, 0.3291749060153961, 0.3256853222846985, 0.32765859365463257], "accuracy": [0.1274600476026535, 0.3275656998157501, 0.44366663694381714, 0.5488046407699585, 0.655527651309967, 0.6777176260948181, 0.6940959095954895, 0.7149649858474731, 0.7132478952407837, 0.7238145470619202, 0.7440232634544373, 0.7464007139205933, 0.7569673657417297, 0.7746664881706238, 0.7750627398490906, 0.7757231593132019, 0.785101056098938, 0.7961959838867188, 0.7936864495277405, 0.8030643463134766, 0.8034605979919434, 0.8005547523498535, 0.8092722296714783, 0.8177255392074585, 0.8150838613510132, 0.8191784620285034, 0.8193105459213257, 0.8201030492782593, 0.8232730031013489, 0.8309338092803955, 0.8359529972076416, 0.837537944316864, 0.8409721255302429, 0.8411042094230652, 0.8467837572097778, 0.8536521196365356, 0.8535200357437134, 0.8564258217811584, 0.8582749962806702, 0.8618412613868713, 0.8617091774940491, 0.8614450097084045, 0.8661999702453613, 0.8673887252807617, 0.8692378997802734, 0.8737286925315857, 0.8792761564254761, 0.8772949576377869, 0.8765024542808533], "val_loss": [2.245807647705078, 2.0192272663116455, 1.134226679801941, 0.883316159248352, 0.7570415735244751, 0.719816267490387, 0.6816144585609436, 0.6561402082443237, 0.6295633316040039, 0.625904381275177, 0.5830810070037842, 0.5645517706871033, 0.541254460811615, 0.5402651429176331, 0.5326048731803894, 0.5219504237174988, 0.5202322006225586, 0.5111555457115173, 0.5120100378990173, 0.5053391456604004, 0.4978519678115845, 0.48917773365974426, 0.4951978325843811, 0.48707857728004456, 0.4796420931816101, 0.48998284339904785, 0.48460644483566284, 0.48375415802001953, 0.4689619541168213, 0.46632495522499084, 0.46647176146507263, 0.4561648666858673, 0.4389953911304474, 0.44785362482070923, 0.43337956070899963, 0.417884886264801, 0.4211711287498474, 0.43332764506340027, 0.4247089922428131, 0.42171037197113037, 0.4291764199733734, 0.42172443866729736, 0.4141066372394562, 0.411766916513443, 0.410685271024704, 0.40860164165496826, 0.4137367308139801, 0.4079572260379791, 0.40597400069236755], "val_accuracy": [0.4320000112056732, 0.47099998593330383, 0.6466666460037231, 0.6940000057220459, 0.7223333120346069, 0.7303333282470703, 0.7429999709129333, 0.7446666955947876, 0.7393333315849304, 0.7559999823570251, 0.765666663646698, 0.781333327293396, 0.7926666736602783, 0.7910000085830688, 0.7896666526794434, 0.796999990940094, 0.7983333468437195, 0.8113333582878113, 0.8159999847412109, 0.812666654586792, 0.8169999718666077, 0.8176666498184204, 0.8149999976158142, 0.8230000138282776, 0.8169999718666077, 0.8196666836738586, 0.8253333568572998, 0.8213333487510681, 0.8363333344459534, 0.8353333473205566, 0.8373333215713501, 0.8399999737739563, 0.8519999980926514, 0.8473333120346069, 0.8546666502952576, 0.8629999756813049, 0.8650000095367432, 0.859000027179718, 0.8643333315849304, 0.8650000095367432, 0.8646666407585144, 0.8669999837875366, 0.8693333268165588, 0.8736666440963745, 0.8683333396911621, 0.8736666440963745, 0.8736666440963745, 0.8723333477973938, 0.871999979019165]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 1, 0, 2, 1], [83, 75, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 5, 2, 0], [3, 3], [0], [0, 0, 0], [0, 0, 9], [0], [0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 0, 1, 3, 4], [0, 44, 86, 84, 32, 24]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 6, 4, 2, 0, 3, 3, 0, 1, 20, 10, 10, 5], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.add(tf.math.negative(grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(grad), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.subtract(tf.math.pow(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.add(sigma, grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 8, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [43], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 9, 3, 6, 8, 1, 4, 9, 1, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 2, 1, 1, 1, 12, 8, 4, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3034636974334717, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [67, 39], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 8, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 5, 6, 8, 1, 4, 1, 4, 2, 8, 4, 3, 1, 0, 2], [0, 0, 0, 3, 4, 0, 3, 1, 4, 0, 0, 3, 6], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 9, 6, 3, 2, 2, 1, 1, 0, 29, 16, 13, 6], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.square(beta))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.pow(tf.math.multiply(alpha, tf.math.subtract(grad, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma)))))))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3041350841522217, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 12}]