[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8602856993675232, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223951578140259, 1.864326000213623, 1.4010252952575684, 1.089576005935669, 0.9502493143081665, 0.8423219323158264, 0.7783206105232239, 0.7211796641349792, 0.6809287071228027, 0.6529397368431091, 0.627232551574707, 0.6043272018432617, 0.5815352201461792, 0.5738667845726013, 0.5486082434654236, 0.5437352657318115, 0.5175276398658752, 0.5106360912322998, 0.499604195356369, 0.4886600077152252, 0.48623472452163696, 0.47363242506980896, 0.46418195962905884, 0.45136433839797974, 0.44422391057014465, 0.4382864534854889, 0.4319128394126892, 0.42451125383377075, 0.40984487533569336, 0.42014116048812866, 0.40714624524116516, 0.39939436316490173, 0.3926544785499573, 0.39054957032203674, 0.38181257247924805, 0.3720320165157318, 0.37398287653923035, 0.36994966864585876, 0.3564645051956177], "accuracy": [0.27077004313468933, 0.4897635579109192, 0.5543521046638489, 0.6148461103439331, 0.6596222519874573, 0.7018887996673584, 0.7197200059890747, 0.7427024245262146, 0.7460044622421265, 0.7586844563484192, 0.7721568942070007, 0.7835160493850708, 0.7877426743507385, 0.7913089394569397, 0.8029322624206543, 0.8016114234924316, 0.8128384351730347, 0.8120459914207458, 0.8187822103500366, 0.8203672170639038, 0.82683926820755, 0.8298771381378174, 0.8376700282096863, 0.841500461101532, 0.8384625315666199, 0.8422929644584656, 0.8473120927810669, 0.8481045961380005, 0.8548408150672913, 0.8518029451370239, 0.8539162874221802, 0.8594637513160706, 0.863558292388916, 0.8638224601745605, 0.8621054291725159, 0.8697662353515625, 0.8663320541381836, 0.8705587387084961, 0.8726720213890076], "val_loss": [2.039395570755005, 1.5239391326904297, 1.06705904006958, 0.8602554798126221, 0.7656313180923462, 0.7066079378128052, 0.6594272255897522, 0.6235419511795044, 0.593881368637085, 0.5735551118850708, 0.5503901243209839, 0.5336313843727112, 0.520699143409729, 0.5119712948799133, 0.49578213691711426, 0.4897858798503876, 0.4772966206073761, 0.4674808382987976, 0.46462297439575195, 0.45376911759376526, 0.4466420114040375, 0.44523656368255615, 0.43563875555992126, 0.43122097849845886, 0.42635369300842285, 0.4210452139377594, 0.4196292459964752, 0.41482725739479065, 0.4078054130077362, 0.4077015519142151, 0.4114134907722473, 0.4004081189632416, 0.39844149351119995, 0.3981812596321106, 0.3958248794078827, 0.393879771232605, 0.3872779905796051, 0.3856865167617798, 0.3877639174461365], "val_accuracy": [0.5379999876022339, 0.6386666893959045, 0.6629999876022339, 0.690666675567627, 0.7193333506584167, 0.7366666793823242, 0.7476666569709778, 0.7636666893959045, 0.7770000100135803, 0.7850000262260437, 0.7906666398048401, 0.8029999732971191, 0.8073333501815796, 0.8116666674613953, 0.8183333277702332, 0.8256666660308838, 0.8299999833106995, 0.8353333473205566, 0.8379999995231628, 0.8370000123977661, 0.8413333296775818, 0.8433333039283752, 0.8486666679382324, 0.8453333377838135, 0.8483333587646484, 0.8539999723434448, 0.8503333330154419, 0.8500000238418579, 0.8546666502952576, 0.8556666374206543, 0.8533333539962769, 0.8556666374206543, 0.8566666841506958, 0.8629999756813049, 0.8546666502952576, 0.8586666584014893, 0.8600000143051147, 0.8600000143051147, 0.8586666584014893]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0], [0, 9], [0], [0], [0, 0, 1, 1], [0, 6], [0, 1], [0], [0, 1], [0], [1], [0]], "fitness": -0.836571455001831, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2927262783050537, 2.190214157104492, 1.7715415954589844, 1.3457307815551758, 1.0786908864974976, 0.905108630657196, 0.8372012972831726, 0.8155695796012878, 0.7630270719528198, 0.7445993423461914, 0.7087988257408142, 0.6757411360740662, 0.6561017036437988, 0.621993899345398, 0.6217396259307861, 0.5987244844436646, 0.5810781121253967, 0.5613419413566589, 0.5549420714378357, 0.5472844243049622, 0.5300010442733765, 0.5203003287315369, 0.5010915994644165, 0.48913776874542236, 0.49352315068244934, 0.4934372305870056, 0.4669945538043976, 0.46350279450416565, 0.45982763171195984, 0.44861921668052673, 0.43454664945602417, 0.4297473430633545, 0.4192586839199066, 0.40966537594795227, 0.39928877353668213, 0.38135579228401184, 0.39022573828697205, 0.37382346391677856, 0.3695664405822754, 0.36564067006111145, 0.3586757481098175, 0.3658296763896942, 0.35447514057159424, 0.34685301780700684, 0.334037184715271, 0.34318920969963074, 0.3434515595436096, 0.3378879129886627], "accuracy": [0.12495046854019165, 0.32201823592185974, 0.43785497546195984, 0.5476158857345581, 0.6346585750579834, 0.6650376319885254, 0.6877558827400208, 0.6988508701324463, 0.702681303024292, 0.7153612375259399, 0.735569953918457, 0.743891179561615, 0.7503632307052612, 0.7647602558135986, 0.7643640041351318, 0.7779685854911804, 0.7810064554214478, 0.7864218950271606, 0.7890635132789612, 0.7940827012062073, 0.8009510040283203, 0.8038568496704102, 0.8127063512802124, 0.8074230551719666, 0.817461371421814, 0.8164047002792358, 0.8256505131721497, 0.8264430165290833, 0.8274996876716614, 0.8286884427070618, 0.8329150676727295, 0.8347642421722412, 0.8413683772087097, 0.8449346423149109, 0.8477083444595337, 0.8521991968154907, 0.8491612672805786, 0.8527275323867798, 0.8634262084960938, 0.8595958352088928, 0.8658037185668945, 0.8568220734596252, 0.8628978729248047, 0.8669924736022949, 0.872407853603363, 0.8658037185668945, 0.8639545440673828, 0.8714832663536072], "val_loss": [2.2469089031219482, 2.0169129371643066, 1.133993148803711, 0.8672705292701721, 0.7504553198814392, 0.7118708491325378, 0.665356457233429, 0.6397317051887512, 0.6335533261299133, 0.6100581288337708, 0.5737248659133911, 0.546735942363739, 0.5402860045433044, 0.5269086360931396, 0.522463321685791, 0.5238080024719238, 0.5016810894012451, 0.4915043115615845, 0.4810728430747986, 0.478381872177124, 0.47096550464630127, 0.4721643328666687, 0.4626834988594055, 0.4537806808948517, 0.45209839940071106, 0.44629162549972534, 0.44146159291267395, 0.43564656376838684, 0.43806928396224976, 0.4318244159221649, 0.4264772832393646, 0.42201876640319824, 0.4182637631893158, 0.4173101484775543, 0.40980175137519836, 0.40766116976737976, 0.40942806005477905, 0.4078739285469055, 0.41071492433547974, 0.403034508228302, 0.39942777156829834, 0.40042203664779663, 0.40176260471343994, 0.40002867579460144, 0.4049939513206482, 0.4026396572589874, 0.3902760446071625, 0.3918834626674652], "val_accuracy": [0.41466665267944336, 0.4436666667461395, 0.6483333110809326, 0.6940000057220459, 0.7266666889190674, 0.7333333492279053, 0.746666669845581, 0.7549999952316284, 0.7576666474342346, 0.7853333353996277, 0.7816666960716248, 0.7933333516120911, 0.7896666526794434, 0.8086666464805603, 0.8036666512489319, 0.7976666688919067, 0.812666654586792, 0.8176666498184204, 0.8140000104904175, 0.8130000233650208, 0.8240000009536743, 0.8353333473205566, 0.8333333134651184, 0.8326666951179504, 0.8333333134651184, 0.8343333601951599, 0.8403333425521851, 0.846666693687439, 0.8413333296775818, 0.8456666469573975, 0.8519999980926514, 0.8516666889190674, 0.8546666502952576, 0.8513333201408386, 0.8553333282470703, 0.8553333282470703, 0.8523333072662354, 0.8553333282470703, 0.8610000014305115, 0.8569999933242798, 0.859333336353302, 0.8656666874885559, 0.8690000176429749, 0.8636666536331177, 0.8663333058357239, 0.8686666488647461, 0.8616666793823242, 0.8550000190734863]}, "mapping_values": [1, 10, 5, 5, 3, 2, 2, 0, 1, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 2], [0], [1], [0], [2], [0]], "fitness": -0.8294285535812378, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.598547339439392, 1.0217623710632324, 0.7675431966781616, 0.6950051784515381, 0.6421782374382019, 0.5980526804924011, 0.5486282110214233, 0.5398067235946655, 0.5185889601707458, 0.4896448850631714, 0.4763563275337219, 0.47415101528167725, 0.4768013656139374, 0.47622430324554443, 0.4819892644882202, 0.46981099247932434, 0.4474414587020874, 0.4666685461997986, 0.48695865273475647, 0.5025225877761841], "accuracy": [0.44802534580230713, 0.667811393737793, 0.7173424959182739, 0.7357020378112793, 0.7622507214546204, 0.7771760821342468, 0.7922335267066956, 0.7973847389221191, 0.8144234418869019, 0.8133667707443237, 0.8251221776008606, 0.8261788487434387, 0.8285563588142395, 0.8197067975997925, 0.8265751004219055, 0.8376700282096863, 0.8391229510307312, 0.8358209133148193, 0.8338396549224854, 0.8280280232429504], "val_loss": [0.8444933295249939, 0.6520554423332214, 0.5957697629928589, 0.5451849699020386, 0.5198779106140137, 0.48263663053512573, 0.46983155608177185, 0.48210960626602173, 0.47347956895828247, 0.4662638008594513, 0.4603114426136017, 0.4864926040172577, 0.4755208194255829, 0.4851692020893097, 0.5163251757621765, 0.5152923464775085, 0.5069302320480347, 0.4910068213939667, 0.5126546621322632, 0.49167171120643616], "val_accuracy": [0.6836666464805603, 0.7606666684150696, 0.778333306312561, 0.7956666946411133, 0.8086666464805603, 0.8130000233650208, 0.8270000219345093, 0.8333333134651184, 0.8330000042915344, 0.8356666564941406, 0.8349999785423279, 0.8453333377838135, 0.8476666808128357, 0.8420000076293945, 0.8513333201408386, 0.8453333377838135, 0.8473333120346069, 0.8423333168029785, 0.8399999737739563, 0.8396666646003723]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 9, 0, 3], [1, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 5, 3, 6, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 1], [2], [0, 1], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 3, 6, 8, 1, 8, 8, 4, 2, 8], [2, 0, 0, 3, 0, 0, 3, 0, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 4, 1, 1, 10, 6, 4, 2, 3, 1, 2, 1, 16, 9, 7, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma)), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 2, 0], [0, 1, 0, 2, 1], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 3, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [98], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 4, 0, 0, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 3]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 2, 2, 1, 1, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [5, 2, 9, 0, 5], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 5, 3, 5], [0, 2, 0, 0], [16, 16, 86], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 42, 99, 61, 1]], "fitness": -0.08799999952316284, "mapping_values": [1, 5, 4, 1, 2, 9, 5, 4, 3, 2, 1, 1, 0, 22, 12, 10, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma)))), tf.math.sqrt(tf.math.sqrt(alpha)))), beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3092637062072754, 2.3103349208831787, 2.309648036956787, 2.3094944953918457, 2.3089075088500977, 2.309593677520752], "accuracy": [0.09496764093637466, 0.09285431355237961, 0.09140139818191528, 0.09074098616838455, 0.09800554811954498, 0.09325055778026581], "val_loss": [2.3083579540252686, 2.3083579540252686, 2.3083579540252686, 2.3083579540252686, 2.3083579540252686, 2.3083579540252686], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [0, 4, 3, 3, 3, 5], [0, 2, 0, 3], [16, 20], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 2, 5, 4, 2, 8], [0, 0, 0, 3, 0, 0, 2, 1, 2, 4], [16, 99, 2, 99, 61, 1]], "fitness": -0.05485714226961136, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.math.add(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), beta)))), alpha)", "other_info": {"loss": [5.906563058547661e+25, 6.974134706505667e+25, 7.0666801768490604e+25, 6.905566775277883e+25, 6.890246293156065e+25, 7.003043521480781e+25, 7.011147637320963e+25, 7.1487811006979195e+25, 6.971065168291802e+25, 6.8994189366467175e+25, 7.1909711102375025e+25, 7.178852982886881e+25, 7.22786413721632e+25, 7.4892973894207555e+25, 7.261188641554078e+25, 8.002516707847679e+25, 7.877481909504464e+25, 7.92747074126981e+25], "accuracy": [0.0796460211277008, 0.0754193663597107, 0.07911768555641174, 0.08030643314123154, 0.08070268481969833, 0.07449477910995483, 0.08149518072605133, 0.07621186226606369, 0.07951393723487854, 0.08757099509239197, 0.0746268630027771, 0.08096684515476227, 0.07911768555641174, 0.08360850811004639, 0.08109892904758453, 0.08215559273958206, 0.07568352669477463, 0.07806102186441422], "val_loss": [5.8023352651823875e+25, 5.8022149001773065e+25, 5.801750042226649e+25, 5.800928700946767e+25, 5.800590203193015e+25, 5.799788692163012e+25, 5.797782608744996e+25, 5.79554870803767e+25, 5.798483585019797e+25, 5.816177240766697e+25, 5.87317767995446e+25, 6.009006590592405e+25, 6.420543766336227e+25, 7.468260261310495e+25, 1.0123014211306369e+26, 1.6672726230164126e+26, 3.342863989740305e+26, 7.742278527958058e+26], "val_accuracy": [0.052666667848825455, 0.052666667848825455, 0.052666667848825455, 0.05299999937415123, 0.05299999937415123, 0.05299999937415123, 0.05366666615009308, 0.05366666615009308, 0.0533333346247673, 0.05366666615009308, 0.05400000140070915, 0.05400000140070915, 0.054666668176651, 0.05433333292603493, 0.05366666615009308, 0.05366666615009308, 0.05400000140070915, 0.05366666615009308]}}]