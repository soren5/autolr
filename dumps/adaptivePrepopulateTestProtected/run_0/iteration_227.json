[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8611428737640381, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221517324447632, 1.860967755317688, 1.3772600889205933, 1.0921508073806763, 0.9273496866226196, 0.8330737352371216, 0.7714974284172058, 0.7258653044700623, 0.693695068359375, 0.6592334508895874, 0.6326239705085754, 0.6060023307800293, 0.5956158638000488, 0.5782034397125244, 0.555470883846283, 0.5474110841751099, 0.5254477858543396, 0.5170407295227051, 0.5107482671737671, 0.49856340885162354, 0.48922422528266907, 0.474076509475708, 0.468233197927475, 0.46413201093673706, 0.45126649737358093, 0.4466637670993805, 0.4411394000053406, 0.4333610236644745, 0.4190424680709839, 0.41996273398399353, 0.41037052869796753, 0.4014405310153961, 0.40179941058158875, 0.3902391493320465, 0.39372193813323975, 0.3882010579109192, 0.3781551718711853, 0.37683701515197754, 0.3609738349914551, 0.35863131284713745, 0.35795149207115173, 0.35389426350593567, 0.3590550422668457, 0.3455321192741394, 0.34018075466156006, 0.3353387117385864, 0.3374684453010559, 0.3224649429321289, 0.32398244738578796, 0.31713351607322693, 0.3069155216217041, 0.30858317017555237, 0.3110600411891937], "accuracy": [0.2755250334739685, 0.48249900341033936, 0.5737683176994324, 0.6213181614875793, 0.6696605682373047, 0.7008321285247803, 0.7250033020973206, 0.7354378700256348, 0.7491744756698608, 0.7611940503120422, 0.7740060687065125, 0.7819310426712036, 0.785629391670227, 0.7942147850990295, 0.7996301651000977, 0.8057059645652771, 0.8096684813499451, 0.8201030492782593, 0.8178576231002808, 0.8173292875289917, 0.8230088353157043, 0.8335754871368408, 0.8362171649932861, 0.8362171649932861, 0.8412362933158875, 0.8430854678153992, 0.8442742228507996, 0.8467837572097778, 0.8524633646011353, 0.8450667262077332, 0.8558974862098694, 0.8561616539955139, 0.8598600029945374, 0.8601241707801819, 0.8618412613868713, 0.8648791313171387, 0.8651432991027832, 0.8663320541381836, 0.8710870146751404, 0.867520809173584, 0.8726720213890076, 0.8730682730674744, 0.8726720213890076, 0.8745211958885193, 0.882710337638855, 0.8804649114608765, 0.8819178342819214, 0.8854840993881226, 0.8825782537460327, 0.887201189994812, 0.887201189994812, 0.8877294659614563, 0.8886540532112122], "val_loss": [2.03932785987854, 1.5126638412475586, 1.0468004941940308, 0.837511420249939, 0.7452876567840576, 0.6886948347091675, 0.6407032608985901, 0.6009984016418457, 0.5774462223052979, 0.5558754205703735, 0.5314905047416687, 0.514614462852478, 0.5000004172325134, 0.4886839985847473, 0.473183810710907, 0.4620015323162079, 0.4588642120361328, 0.45081037282943726, 0.4508034586906433, 0.4341004192829132, 0.42268285155296326, 0.4209824204444885, 0.40893256664276123, 0.4078398048877716, 0.4014565348625183, 0.40238651633262634, 0.3914719521999359, 0.3877793848514557, 0.38607364892959595, 0.3774479627609253, 0.3749198317527771, 0.3676014840602875, 0.36948713660240173, 0.36225709319114685, 0.361497163772583, 0.35684868693351746, 0.35563984513282776, 0.3513430058956146, 0.35091423988342285, 0.34723255038261414, 0.3440402150154114, 0.3436978757381439, 0.34374088048934937, 0.33703309297561646, 0.33522504568099976, 0.3444633483886719, 0.3359009325504303, 0.33290979266166687, 0.33171942830085754, 0.3291056752204895, 0.3288579285144806, 0.32309770584106445, 0.32398900389671326], "val_accuracy": [0.4963333308696747, 0.6513333320617676, 0.6806666851043701, 0.7049999833106995, 0.7300000190734863, 0.750333309173584, 0.762666642665863, 0.7739999890327454, 0.7743333578109741, 0.7900000214576721, 0.7933333516120911, 0.8036666512489319, 0.8136666417121887, 0.8183333277702332, 0.828000009059906, 0.8353333473205566, 0.8326666951179504, 0.8433333039283752, 0.82833331823349, 0.8420000076293945, 0.8453333377838135, 0.8489999771118164, 0.8550000190734863, 0.8533333539962769, 0.8583333492279053, 0.8569999933242798, 0.862666666507721, 0.859666645526886, 0.862666666507721, 0.8676666617393494, 0.8669999837875366, 0.8696666955947876, 0.8696666955947876, 0.8730000257492065, 0.874666690826416, 0.8713333606719971, 0.8756666779518127, 0.878333330154419, 0.8763333559036255, 0.8790000081062317, 0.8796666860580444, 0.878000020980835, 0.8813333511352539, 0.8796666860580444, 0.8823333382606506, 0.8756666779518127, 0.8799999952316284, 0.8859999775886536, 0.8843333125114441, 0.8820000290870667, 0.8840000033378601, 0.8846666812896729, 0.8840000033378601]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8488571643829346, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292109489440918, 2.1899261474609375, 1.7694380283355713, 1.341083288192749, 1.0726680755615234, 0.9086679816246033, 0.8525688648223877, 0.8190117478370667, 0.7601392865180969, 0.7423778772354126, 0.705064594745636, 0.6680077314376831, 0.6470862030982971, 0.6226367950439453, 0.6199450492858887, 0.6040329933166504, 0.5810259580612183, 0.5634322762489319, 0.5670092105865479, 0.5485035181045532, 0.5438570380210876, 0.5221347808837891, 0.49536699056625366, 0.5070196986198425, 0.48393064737319946, 0.4751686453819275, 0.4516828656196594, 0.4452822506427765, 0.45112863183021545, 0.4482295513153076, 0.42812320590019226, 0.4336432218551636, 0.4115712642669678, 0.4100988507270813, 0.39628705382347107, 0.4093167185783386, 0.39519643783569336, 0.3882482349872589, 0.38108715415000916, 0.37296125292778015, 0.37547755241394043, 0.3787880837917328, 0.36060458421707153, 0.35383763909339905, 0.35896381735801697, 0.3396889269351959, 0.3212233781814575, 0.3296618163585663, 0.3167499601840973, 0.3219808340072632, 0.306997150182724], "accuracy": [0.13340377807617188, 0.32518821954727173, 0.4449874460697174, 0.5473517179489136, 0.6347906589508057, 0.6610751748085022, 0.6923788189888, 0.6951525807380676, 0.7099458575248718, 0.7152291536331177, 0.7367587089538574, 0.7437590956687927, 0.7490423917770386, 0.7582882046699524, 0.7621186375617981, 0.7666094303131104, 0.7769119143486023, 0.7854973077774048, 0.7784969210624695, 0.7890635132789612, 0.7902522683143616, 0.8033285140991211, 0.806630551815033, 0.8043851256370544, 0.8113855719566345, 0.8115176558494568, 0.8269713521003723, 0.8248580098152161, 0.828820526599884, 0.8248580098152161, 0.8372738361358643, 0.8342359066009521, 0.8393871188163757, 0.844010055065155, 0.8496896028518677, 0.843481719493866, 0.8486329317092896, 0.8535200357437134, 0.8539162874221802, 0.8553691506385803, 0.856689989566803, 0.8531237840652466, 0.8613129258155823, 0.8656716346740723, 0.8615770936012268, 0.8704266548156738, 0.8728041052818298, 0.8697662353515625, 0.8735966086387634, 0.8721436858177185, 0.8792761564254761], "val_loss": [2.246199607849121, 2.0177841186523438, 1.1285021305084229, 0.8524773716926575, 0.7424213886260986, 0.7159791588783264, 0.6576554775238037, 0.6579104661941528, 0.641244113445282, 0.6130551695823669, 0.5733906030654907, 0.5508434176445007, 0.5345116257667542, 0.5239747762680054, 0.5156076550483704, 0.5064356923103333, 0.5052480697631836, 0.5010538101196289, 0.49325692653656006, 0.4887548089027405, 0.48024633526802063, 0.4715891182422638, 0.47254353761672974, 0.466523140668869, 0.4636472463607788, 0.4588411748409271, 0.4523199498653412, 0.44039270281791687, 0.4343573749065399, 0.4341711103916168, 0.44032108783721924, 0.4402449429035187, 0.43714022636413574, 0.4276757836341858, 0.43484896421432495, 0.42715349793434143, 0.4259144961833954, 0.42415112257003784, 0.4241228401660919, 0.4376126229763031, 0.42175814509391785, 0.4058728814125061, 0.41587382555007935, 0.4206370711326599, 0.40648993849754333, 0.4072262644767761, 0.42324283719062805, 0.428873747587204, 0.4402899146080017, 0.4422129988670349, 0.44718706607818604], "val_accuracy": [0.414000004529953, 0.46266666054725647, 0.6513333320617676, 0.6986666917800903, 0.7193333506584167, 0.7369999885559082, 0.7429999709129333, 0.7493333220481873, 0.7646666765213013, 0.7599999904632568, 0.781000018119812, 0.7826666831970215, 0.7963333129882812, 0.7986666560173035, 0.8043333292007446, 0.8069999814033508, 0.8069999814033508, 0.8096666932106018, 0.8176666498184204, 0.8206666707992554, 0.824999988079071, 0.8230000138282776, 0.8236666917800903, 0.8326666951179504, 0.8356666564941406, 0.8403333425521851, 0.8433333039283752, 0.843666672706604, 0.8453333377838135, 0.8506666421890259, 0.8479999899864197, 0.8489999771118164, 0.8433333039283752, 0.8510000109672546, 0.8553333282470703, 0.859666645526886, 0.8516666889190674, 0.8553333282470703, 0.8603333234786987, 0.8569999933242798, 0.8583333492279053, 0.8600000143051147, 0.8659999966621399, 0.8666666746139526, 0.8646666407585144, 0.8696666955947876, 0.8640000224113464, 0.862666666507721, 0.8619999885559082, 0.8583333492279053, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8377143144607544, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5939186811447144, 0.8515299558639526, 0.6963443756103516, 0.5997454524040222, 0.5854222774505615, 0.5506622195243835, 0.5189521908760071, 0.5176386833190918, 0.500685453414917, 0.48837530612945557, 0.4566713571548462, 0.4898160398006439, 0.5050215721130371, 0.46679142117500305, 0.5085868239402771, 0.48056820034980774, 0.4899716377258301, 0.5510897636413574, 0.49191009998321533, 0.4926367402076721], "accuracy": [0.4671773910522461, 0.7077004313468933, 0.741909921169281, 0.7759873270988464, 0.7837802171707153, 0.7954035401344299, 0.8121780753135681, 0.8216879963874817, 0.8255184292793274, 0.8305375576019287, 0.834632158279419, 0.8384625315666199, 0.828292191028595, 0.8399154543876648, 0.8413683772087097, 0.8409721255302429, 0.829216718673706, 0.8293488025665283, 0.8345000743865967, 0.8304054737091064], "val_loss": [0.8818123936653137, 0.6377383470535278, 0.5554088950157166, 0.5455825328826904, 0.5085865259170532, 0.5260721445083618, 0.5187399387359619, 0.4951755404472351, 0.5214881300926208, 0.5518155097961426, 0.6051706671714783, 0.5968526005744934, 0.5750177502632141, 0.6240564584732056, 0.5990363955497742, 0.5676417350769043, 0.6474376916885376, 0.6027137637138367, 0.5334983468055725, 0.5298833250999451], "val_accuracy": [0.6926666498184204, 0.7576666474342346, 0.7983333468437195, 0.7833333611488342, 0.8163333535194397, 0.8206666707992554, 0.8253333568572998, 0.8259999752044678, 0.8339999914169312, 0.8330000042915344, 0.8333333134651184, 0.8336666822433472, 0.8383333086967468, 0.8163333535194397, 0.8420000076293945, 0.8323333263397217, 0.8263333439826965, 0.8303333520889282, 0.8256666660308838, 0.8416666388511658]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [2, 2, 3, 0, 6, 8, 6, 7, 3, 8, 6, 9], [0, 1, 0, 0, 2, 0, 0, 0], [39, 39, 64, 80, 26, 57, 92], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 2], [16, 16], [0, 1], [0], [4], [99], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [9, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 3, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 12, 8, 7, 9, 5, 4, 2, 2, 1, 1, 0, 1, 1, 0, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(grad, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303946018218994, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 5, 1, 3], [0, 0, 1, 0, 2], [83, 71, 27], [0, 1], [0], [0], [0], [0, 0, 1, 0, 1], [0, 6, 8], [0, 1], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.square(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.335036277770996, 2.6489951610565186, 3.5765483379364014, 5.295640468597412, 7.95721960067749, 11.162442207336426], "accuracy": [0.1018359512090683, 0.09668471664190292, 0.10302469879388809, 0.1018359512090683, 0.09655263274908066, 0.1014397069811821], "val_loss": [2.357743501663208, 2.681769609451294, 3.577948808670044, 5.191952705383301, 7.484294414520264, 10.419937133789062], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 7, 4, 3, 2, 2, 1, 1, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 0, 2], [83, 8, 27], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3, 5, 4, 5, 4, 7, 9], [0, 5, 0, 5, 2, 1], [0, 48, 18], [0, 0, 1], [1, 9], [0], [73, 18], [0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [7, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 3, 17, 11, 6, 3, 3, 2, 1, 2, 3, 1, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(grad), tf.math.pow(tf.math.square(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, beta)))), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.309742975573572e+28, 379.5468444824219, 428.3525390625, 451.68914794921875, 356.9708557128906, 341.78411865234375], "accuracy": [0.10672302544116974, 0.09496764093637466, 0.09893012791872025, 0.08691058307886124, 0.1022322028875351, 0.10315678268671036], "val_loss": [581.51123046875, 434.01446533203125, 266.657470703125, 142.46954345703125, 465.0259094238281, 527.698486328125], "val_accuracy": [0.10233332961797714, 0.09933333098888397, 0.09733333438634872, 0.09933333098888397, 0.09966666996479034, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 4, 4], [12], [0, 1], [0], [0, 1], [0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 3, 2, 1, 4, 8, 8, 2, 6, 6, 5, 8, 1, 1, 7, 8, 8, 1, 8, 8, 7, 9, 1], [6, 1, 5, 2, 2, 1, 0, 1, 1, 0, 3, 6, 1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 1, 2, 1, 1, 1, 36, 23, 13, 3], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.subtract(tf.math.pow(tf.math.sqrt(tf.math.sqrt(grad)), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(alpha), tf.math.sqrt(grad)), beta), beta)), tf.math.subtract(tf.math.subtract(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), grad))))), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]