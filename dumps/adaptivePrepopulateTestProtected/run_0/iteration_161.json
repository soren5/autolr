[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8788571357727051, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223778247833252, 1.869816780090332, 1.3854763507843018, 1.0877859592437744, 0.9313703775405884, 0.8305619955062866, 0.7596983313560486, 0.7178841233253479, 0.678885817527771, 0.6427952647209167, 0.6314711570739746, 0.6065253019332886, 0.5803450345993042, 0.5689871311187744, 0.5544987320899963, 0.5336046814918518, 0.5189152956008911, 0.5142802596092224, 0.4972553849220276, 0.48589378595352173, 0.4789123237133026, 0.47044631838798523, 0.45680922269821167, 0.4485171139240265, 0.45258986949920654, 0.44318363070487976, 0.4277282655239105, 0.42588117718696594, 0.4205707907676697, 0.4097837805747986, 0.4017646610736847, 0.3997235894203186, 0.39143604040145874, 0.3813983201980591, 0.3799765408039093, 0.3789656162261963, 0.36794283986091614, 0.3624574840068817, 0.35929128527641296, 0.35348811745643616, 0.3508596420288086, 0.34113216400146484, 0.3462033271789551, 0.33102670311927795, 0.330086886882782, 0.32165828347206116, 0.3163209855556488, 0.31816115975379944, 0.30683767795562744, 0.30308493971824646, 0.3014288544654846, 0.2991333305835724, 0.3007844388484955, 0.29286450147628784, 0.28524908423423767, 0.28070855140686035, 0.2784059941768646, 0.26981455087661743, 0.2657836079597473, 0.26673373579978943, 0.2612868845462799, 0.2518042027950287, 0.25471100211143494, 0.24872227013111115, 0.2470250278711319, 0.2423699051141739, 0.2363964468240738, 0.2331322431564331, 0.2366485893726349, 0.22393356263637543, 0.22837325930595398, 0.218330517411232, 0.21717983484268188, 0.21057762205600739, 0.20735885202884674, 0.2054237574338913, 0.20540645718574524, 0.19891852140426636, 0.19594213366508484, 0.20225878059864044, 0.1904907077550888, 0.18262125551700592, 0.18921315670013428, 0.18402932584285736, 0.18388424813747406, 0.18099281191825867, 0.17825645208358765, 0.1715107411146164], "accuracy": [0.2751287817955017, 0.47906485199928284, 0.5712587237358093, 0.6231673359870911, 0.6653017997741699, 0.7033417224884033, 0.7341170310974121, 0.7374191284179688, 0.7518161535263062, 0.7711002230644226, 0.7761194109916687, 0.783119797706604, 0.7940827012062073, 0.7932901978492737, 0.8016114234924316, 0.8078193068504333, 0.8191784620285034, 0.8201030492782593, 0.8281601071357727, 0.8253863453865051, 0.8310658931732178, 0.8338396549224854, 0.8387266993522644, 0.8429533839225769, 0.8429533839225769, 0.8430854678153992, 0.8474441766738892, 0.8525954484939575, 0.8488970994949341, 0.8557654023170471, 0.8605204224586487, 0.8562937378883362, 0.8647470474243164, 0.8679170608520508, 0.8650112152099609, 0.867520809173584, 0.870030403137207, 0.8725399374961853, 0.8734645247459412, 0.8730682730674744, 0.8811253309249878, 0.8813894987106323, 0.8728041052818298, 0.8854840993881226, 0.8800686597824097, 0.885219931602478, 0.8873332738876343, 0.8868049383163452, 0.8886540532112122, 0.8912957310676575, 0.8923524022102356, 0.8920882344245911, 0.8905032277107239, 0.8961827754974365, 0.895918607711792, 0.8968431949615479, 0.8986923694610596, 0.9041078090667725, 0.9021265506744385, 0.902390718460083, 0.9058248400688171, 0.9096552729606628, 0.908730685710907, 0.9115044474601746, 0.9109761118888855, 0.9133535623550415, 0.9162594079971313, 0.9157310724258423, 0.9140139818191528, 0.9169198274612427, 0.9167877435684204, 0.9225993752479553, 0.9235239624977112, 0.9220710396766663, 0.9252410531044006, 0.9272223114967346, 0.9260335564613342, 0.9299960136413574, 0.9298639297485352, 0.9265618920326233, 0.9314489364624023, 0.9351472854614258, 0.930788516998291, 0.9344868659973145, 0.9322414398193359, 0.935279369354248, 0.9355435371398926, 0.9375247359275818], "val_loss": [2.043229818344116, 1.5252792835235596, 1.059319019317627, 0.8622859120368958, 0.7739511728286743, 0.712826669216156, 0.6653242111206055, 0.6353532075881958, 0.6145880818367004, 0.588234007358551, 0.5718778371810913, 0.5557640790939331, 0.5459425449371338, 0.525135338306427, 0.5168591141700745, 0.5053482055664062, 0.4997932016849518, 0.48488402366638184, 0.47919487953186035, 0.4703822433948517, 0.47141027450561523, 0.46116748452186584, 0.453118234872818, 0.44784554839134216, 0.44718751311302185, 0.43445050716400146, 0.4359551668167114, 0.42782077193260193, 0.42837169766426086, 0.4202001988887787, 0.41962215304374695, 0.41002556681632996, 0.40663206577301025, 0.40764692425727844, 0.40263956785202026, 0.3989400267601013, 0.3960455060005188, 0.39371103048324585, 0.3923947811126709, 0.3929206430912018, 0.3917257487773895, 0.3840952217578888, 0.3808329403400421, 0.3817606270313263, 0.37890157103538513, 0.37521520256996155, 0.3746592700481415, 0.3713971674442291, 0.3694106936454773, 0.36994099617004395, 0.36911842226982117, 0.3693079352378845, 0.36807316541671753, 0.3690676987171173, 0.36612769961357117, 0.36626964807510376, 0.36125749349594116, 0.3628350496292114, 0.36928442120552063, 0.3606704771518707, 0.35772624611854553, 0.3617168664932251, 0.3560544550418854, 0.3591160476207733, 0.35777518153190613, 0.35627302527427673, 0.3584086000919342, 0.3570273518562317, 0.3526735305786133, 0.35380101203918457, 0.3530525863170624, 0.35500773787498474, 0.35798314213752747, 0.3571338653564453, 0.35494470596313477, 0.35568180680274963, 0.3550068438053131, 0.35418087244033813, 0.3578505516052246, 0.3490322232246399, 0.35165348649024963, 0.3594669997692108, 0.3573257327079773, 0.35076624155044556, 0.35436558723449707, 0.35485583543777466, 0.35399290919303894, 0.3549942970275879], "val_accuracy": [0.5046666860580444, 0.6439999938011169, 0.6753333210945129, 0.6893333196640015, 0.7256666421890259, 0.7400000095367432, 0.7566666603088379, 0.7670000195503235, 0.7730000019073486, 0.7876666784286499, 0.7906666398048401, 0.7986666560173035, 0.8033333420753479, 0.8163333535194397, 0.8180000185966492, 0.8203333616256714, 0.8183333277702332, 0.82833331823349, 0.8303333520889282, 0.8323333263397217, 0.8263333439826965, 0.8370000123977661, 0.8410000205039978, 0.8399999737739563, 0.8399999737739563, 0.847000002861023, 0.843666672706604, 0.8476666808128357, 0.8493333458900452, 0.8533333539962769, 0.8493333458900452, 0.8579999804496765, 0.859000027179718, 0.8556666374206543, 0.8600000143051147, 0.862333357334137, 0.8613333106040955, 0.8606666922569275, 0.8610000014305115, 0.8673333525657654, 0.8650000095367432, 0.8603333234786987, 0.8673333525657654, 0.8690000176429749, 0.8700000047683716, 0.8703333139419556, 0.8726666569709778, 0.8713333606719971, 0.8700000047683716, 0.871666669845581, 0.874666690826416, 0.8733333349227905, 0.8733333349227905, 0.871666669845581, 0.8756666779518127, 0.874666690826416, 0.8759999871253967, 0.878000020980835, 0.8740000128746033, 0.8766666650772095, 0.8790000081062317, 0.8813333511352539, 0.8849999904632568, 0.8820000290870667, 0.8849999904632568, 0.8823333382606506, 0.8833333253860474, 0.8853333592414856, 0.8853333592414856, 0.8856666684150696, 0.8846666812896729, 0.8889999985694885, 0.8843333125114441, 0.8866666555404663, 0.887333333492279, 0.890999972820282, 0.8893333077430725, 0.8859999775886536, 0.8886666893959045, 0.8926666378974915, 0.890333354473114, 0.887333333492279, 0.8933333158493042, 0.8920000195503235, 0.8913333415985107, 0.890999972820282, 0.8916666507720947, 0.890666663646698]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8611428737640381, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2218101024627686, 1.858995795249939, 1.3890678882598877, 1.07602059841156, 0.939432680606842, 0.829258918762207, 0.7595711946487427, 0.721930205821991, 0.6814186573028564, 0.6494670510292053, 0.6226848363876343, 0.6137158870697021, 0.5910214781761169, 0.5692429542541504, 0.5485318303108215, 0.5363817811012268, 0.5234841108322144, 0.5154967904090881, 0.5000637173652649, 0.49057072401046753, 0.4817355275154114, 0.47309553623199463, 0.46049654483795166, 0.4595467150211334, 0.44833606481552124, 0.4369097948074341, 0.42835861444473267, 0.41539832949638367, 0.41681477427482605, 0.4028269648551941, 0.392580509185791, 0.3961174786090851, 0.3809530436992645, 0.37551596760749817, 0.37198689579963684, 0.36977532505989075, 0.3579639792442322, 0.3591432273387909, 0.35075294971466064, 0.346309632062912, 0.33229032158851624, 0.32605788111686707, 0.3341454565525055], "accuracy": [0.27644962072372437, 0.49266940355300903, 0.5651829242706299, 0.627129852771759, 0.669792652130127, 0.7051908373832703, 0.7280412316322327, 0.7434949278831482, 0.7536653280258179, 0.7652885913848877, 0.7758552432060242, 0.7775723338127136, 0.7839123010635376, 0.7943468689918518, 0.8090080618858337, 0.8133667707443237, 0.8100647330284119, 0.8177255392074585, 0.8178576231002808, 0.8248580098152161, 0.8289526104927063, 0.8321225643157959, 0.8333113193511963, 0.844010055065155, 0.8425571322441101, 0.8462554216384888, 0.8492933511734009, 0.8549728989601135, 0.8519350290298462, 0.8553691506385803, 0.8605204224586487, 0.8597279191017151, 0.8654074668884277, 0.8654074668884277, 0.8673887252807617, 0.8661999702453613, 0.8757099509239197, 0.8786157965660095, 0.8750495314598083, 0.878351628780365, 0.8813894987106323, 0.8813894987106323, 0.8831065893173218], "val_loss": [2.03427791595459, 1.4978790283203125, 1.0219981670379639, 0.815353512763977, 0.73257976770401, 0.6773672699928284, 0.6325565576553345, 0.6031513214111328, 0.5813779234886169, 0.557503342628479, 0.5464550852775574, 0.5286853909492493, 0.5107371211051941, 0.4973706007003784, 0.4920104444026947, 0.4752723276615143, 0.47455957531929016, 0.4645965099334717, 0.45493820309638977, 0.4433542490005493, 0.4407484233379364, 0.43758174777030945, 0.43321484327316284, 0.42949429154396057, 0.4226149022579193, 0.4189457297325134, 0.41069188714027405, 0.4081250727176666, 0.40680384635925293, 0.40068039298057556, 0.4035971760749817, 0.39684343338012695, 0.39693933725357056, 0.38902780413627625, 0.3862437605857849, 0.38260477781295776, 0.3920060098171234, 0.3778899312019348, 0.3797948360443115, 0.37609758973121643, 0.3766118586063385, 0.37700292468070984, 0.3679623305797577], "val_accuracy": [0.5686666369438171, 0.6660000085830688, 0.6880000233650208, 0.7126666903495789, 0.734333336353302, 0.7586666941642761, 0.7703333497047424, 0.784333348274231, 0.7839999794960022, 0.8073333501815796, 0.8053333163261414, 0.8116666674613953, 0.8196666836738586, 0.8276666402816772, 0.8299999833106995, 0.8356666564941406, 0.8383333086967468, 0.8360000252723694, 0.8366666436195374, 0.8446666598320007, 0.843999981880188, 0.8443333506584167, 0.846666693687439, 0.8500000238418579, 0.8526666760444641, 0.8496666550636292, 0.8529999852180481, 0.8576666712760925, 0.8569999933242798, 0.8579999804496765, 0.8619999885559082, 0.8566666841506958, 0.8566666841506958, 0.8603333234786987, 0.8576666712760925, 0.8653333187103271, 0.8579999804496765, 0.8709999918937683, 0.8636666536331177, 0.8656666874885559, 0.8640000224113464, 0.8693333268165588, 0.8696666955947876]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 5], [0], [0], [0, 0, 1], [0, 8], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.850857138633728, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2931320667266846, 2.1890296936035156, 1.7681143283843994, 1.3573004007339478, 1.0705393552780151, 0.9311070442199707, 0.8437416553497314, 0.8170358538627625, 0.7780333161354065, 0.7375914454460144, 0.6948449611663818, 0.6721125245094299, 0.6586400866508484, 0.6293259263038635, 0.6222127676010132, 0.5966677069664001, 0.5781177282333374, 0.5683997869491577, 0.559945821762085, 0.5515186190605164, 0.5258963108062744, 0.5159814953804016, 0.5041104555130005, 0.5042456388473511, 0.4891423285007477, 0.48006248474121094, 0.4660221338272095, 0.4670508801937103, 0.44864898920059204, 0.4375354051589966, 0.4361165463924408, 0.43732401728630066, 0.41100481152534485, 0.4092448353767395, 0.4040220379829407, 0.39788272976875305, 0.3924020230770111, 0.3863775134086609, 0.38123467564582825, 0.3751395344734192, 0.3636009395122528, 0.3538465201854706, 0.3539908528327942, 0.34926167130470276, 0.3479559123516083, 0.3440243601799011, 0.3274577558040619, 0.31803810596466064, 0.33453232049942017, 0.33521535992622375, 0.3213191032409668, 0.32710063457489014], "accuracy": [0.12323339283466339, 0.3238673806190491, 0.4403645396232605, 0.5386342406272888, 0.6318848133087158, 0.6606789231300354, 0.6881521344184875, 0.6935675740242004, 0.7004358768463135, 0.7162858247756958, 0.7400607466697693, 0.7329282760620117, 0.7491744756698608, 0.7586844563484192, 0.7633073329925537, 0.7759873270988464, 0.7869502305984497, 0.7833839654922485, 0.7946110367774963, 0.7948752045631409, 0.7976489067077637, 0.8031964302062988, 0.8137630224227905, 0.8004226684570312, 0.8152159452438354, 0.8158763647079468, 0.8203672170639038, 0.8173292875289917, 0.8234050869941711, 0.8273676037788391, 0.8293488025665283, 0.8329150676727295, 0.8413683772087097, 0.8385946154594421, 0.846387505531311, 0.8499537706375122, 0.8466516733169556, 0.8540483713150024, 0.852859616279602, 0.8549728989601135, 0.8595958352088928, 0.8618412613868713, 0.8654074668884277, 0.8661999702453613, 0.8671245574951172, 0.8652753829956055, 0.8735966086387634, 0.878351628780365, 0.8747853636741638, 0.8729361891746521, 0.8730682730674744, 0.8705587387084961], "val_loss": [2.244515895843506, 2.015021562576294, 1.1203064918518066, 0.8403681516647339, 0.7595056891441345, 0.7177213430404663, 0.6803798079490662, 0.663797914981842, 0.656143307685852, 0.6356735229492188, 0.5872175097465515, 0.5769413113594055, 0.5650112628936768, 0.5436331629753113, 0.5370468497276306, 0.5316235423088074, 0.5170076489448547, 0.5067643523216248, 0.5023781061172485, 0.48988333344459534, 0.4811221659183502, 0.4867207705974579, 0.4752149283885956, 0.4627390503883362, 0.4539601504802704, 0.44447189569473267, 0.4412231147289276, 0.43841370940208435, 0.43627625703811646, 0.42638859152793884, 0.42510488629341125, 0.4270155727863312, 0.42051538825035095, 0.4208153188228607, 0.4251307249069214, 0.4096895754337311, 0.40778613090515137, 0.4116528630256653, 0.39677873253822327, 0.39978650212287903, 0.39597630500793457, 0.41056108474731445, 0.40022677183151245, 0.40052735805511475, 0.4065312445163727, 0.4062109887599945, 0.4162404239177704, 0.42772701382637024, 0.40827932953834534, 0.4105876088142395, 0.41097331047058105, 0.4093908369541168], "val_accuracy": [0.4203333258628845, 0.45399999618530273, 0.6523333191871643, 0.6926666498184204, 0.7303333282470703, 0.7353333234786987, 0.7413333058357239, 0.7493333220481873, 0.7586666941642761, 0.7676666378974915, 0.7793333530426025, 0.7836666703224182, 0.7846666574478149, 0.7993333339691162, 0.7979999780654907, 0.7943333387374878, 0.8033333420753479, 0.8166666626930237, 0.8056666851043701, 0.809333324432373, 0.8146666884422302, 0.8230000138282776, 0.8216666579246521, 0.8309999704360962, 0.8360000252723694, 0.8379999995231628, 0.8396666646003723, 0.8426666855812073, 0.840666651725769, 0.8423333168029785, 0.8523333072662354, 0.8516666889190674, 0.8546666502952576, 0.8560000061988831, 0.8573333621025085, 0.8550000190734863, 0.862666666507721, 0.8613333106040955, 0.8676666617393494, 0.8640000224113464, 0.8619999885559082, 0.8679999709129333, 0.8679999709129333, 0.8656666874885559, 0.8703333139419556, 0.8700000047683716, 0.8723333477973938, 0.8679999709129333, 0.8703333139419556, 0.8706666827201843, 0.8693333268165588, 0.8676666617393494]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8288571238517761, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5574926137924194, 0.8221830725669861, 0.6699452996253967, 0.6319412589073181, 0.5804128646850586, 0.5473668575286865, 0.5440192222595215, 0.5811701416969299, 0.5710915327072144, 0.5582618117332458, 0.5621249079704285], "accuracy": [0.4644036591053009, 0.7058512568473816, 0.7534011602401733, 0.7592127919197083, 0.7810064554214478, 0.7938185334205627, 0.8001585006713867, 0.7969884872436523, 0.8087438941001892, 0.8017435073852539, 0.8063663840293884], "val_loss": [0.8174729943275452, 0.6180922985076904, 0.5890787243843079, 0.5365087389945984, 0.5481929183006287, 0.5395030379295349, 0.5261133909225464, 0.5492109656333923, 0.5869255661964417, 0.5703002214431763, 0.5774952173233032], "val_accuracy": [0.7326666712760925, 0.7773333191871643, 0.793666660785675, 0.8109999895095825, 0.8186666369438171, 0.8360000252723694, 0.8143333196640015, 0.8193333148956299, 0.8233333230018616, 0.8199999928474426, 0.8296666741371155]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 5], [0, 2, 0, 3], [82, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 0, 1, 4, 1, 4, 2, 8], [0, 0, 1, 3, 0, 0, 3, 1, 2, 0], [52, 99, 96, 99, 61, 1]], "fitness": -0.10885713994503021, "mapping_values": [1, 9, 5, 4, 2, 11, 7, 4, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(alpha), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [1.374778058148791e+20, 1.771335046657831e+20, 1.7642893761470425e+20, 1.8672775516882626e+20, 1.7337628871571905e+20, 1.8506612042037304e+20], "accuracy": [0.10170386731624603, 0.0952318087220192, 0.09615638852119446, 0.09192973375320435, 0.09906221181154251, 0.09470347315073013], "val_loss": [1.5651173307828614e+20, 1.5651173307828614e+20, 1.5651160993298383e+20, 1.5651164511735592e+20, 1.5651146919549547e+20, 1.565109238377281e+20], "val_accuracy": [0.11366666853427887, 0.11366666853427887, 0.11366666853427887, 0.11366666853427887, 0.11366666853427887, 0.11366666853427887]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 4, 0, 3], [2, 1, 0, 2], [42, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 5, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 9, 3, 6, 8, 1, 4, 1, 4, 2, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [19, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 8, 5, 3, 2, 2, 1, 1, 1, 12, 7, 5, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 5, 3, 0, 3, 5], [3, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 2, 8, 4, 7, 7, 2, 9, 4, 6], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0, 4, 0, 6, 2, 6, 1], [16, 99, 96, 99, 47, 1, 24, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 4, 2, 0, 2, 1, 1, 1, 36, 20, 16, 8], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, beta)))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(grad, tf.math.add(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(grad, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.pow(beta, tf.math.divide_no_nan(grad, alpha)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [1, 1, 0, 0], [39, 27], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3, 6, 3], [0, 2, 0, 3, 5, 0], [16, 16, 95], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [2, 3, 3, 6, 2, 1, 4, 1, 4, 2, 6, 1, 0, 5], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0, 1, 5, 2], [16, 92, 96, 99, 29, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 13, 7, 6, 3, 2, 1, 1, 1, 27, 14, 13, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), grad), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.divide_no_nan(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.negative(tf.math.square(alpha)), grad))), beta)", "other_info": {"loss": [2.3033287525177, 2.302640438079834, 2.303359270095825, 2.3077423572540283, 41.34318923950195, 283.2465515136719], "accuracy": [0.1026284471154213, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.302576780319214, 2.302882194519043, 2.3044350147247314, 2.341061592102051, 169.0929412841797, 453.29412841796875], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]