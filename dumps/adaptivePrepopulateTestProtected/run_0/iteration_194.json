[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8665714263916016, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223886728286743, 1.8690472841262817, 1.3918235301971436, 1.0827105045318604, 0.9265472292900085, 0.8332209587097168, 0.7691662311553955, 0.7288323044776917, 0.6739584803581238, 0.6466304659843445, 0.6240548491477966, 0.5922236442565918, 0.5855587720870972, 0.5670395493507385, 0.5520540475845337, 0.5381173491477966, 0.5133784413337708, 0.5097342133522034, 0.5025365352630615, 0.4872535765171051, 0.4710160791873932, 0.46873944997787476, 0.45605844259262085, 0.4531622529029846, 0.4430314004421234, 0.440861314535141, 0.4315488636493683, 0.4215932786464691, 0.4157101511955261, 0.4094371199607849, 0.39635127782821655, 0.39375996589660645, 0.3924562931060791, 0.3854052722454071, 0.3741634786128998, 0.37862634658813477, 0.36477598547935486, 0.35567042231559753, 0.35718250274658203, 0.3469996154308319, 0.3468742370605469, 0.34374329447746277, 0.3395170271396637, 0.33268794417381287, 0.33381471037864685, 0.31966397166252136, 0.3191491663455963], "accuracy": [0.2739400267601013, 0.48606523871421814, 0.5655791759490967, 0.6176198720932007, 0.6680755615234375, 0.7017567157745361, 0.7185312509536743, 0.7384757399559021, 0.7541936039924622, 0.7565711140632629, 0.7718927264213562, 0.7807422876358032, 0.7889314293861389, 0.7923656105995178, 0.7989697456359863, 0.8021397590637207, 0.8084797263145447, 0.8150838613510132, 0.8207634687423706, 0.8227446675300598, 0.8325188159942627, 0.8323867321014404, 0.8335754871368408, 0.8355567455291748, 0.8397833704948425, 0.8388587832450867, 0.8442742228507996, 0.8462554216384888, 0.852331280708313, 0.8564258217811584, 0.8589354157447815, 0.8601241707801819, 0.8556333184242249, 0.8623695969581604, 0.8667283058166504, 0.8663320541381836, 0.8688416481018066, 0.8704266548156738, 0.871879518032074, 0.8784837126731873, 0.8721436858177185, 0.8770307898521423, 0.8771628737449646, 0.8823140859603882, 0.8800686597824097, 0.8835028409957886, 0.8849557638168335], "val_loss": [2.043863296508789, 1.5190585851669312, 1.052238941192627, 0.8454788327217102, 0.7602579593658447, 0.7042080163955688, 0.6574538350105286, 0.6214037537574768, 0.5925313830375671, 0.570255696773529, 0.5570367574691772, 0.5390968918800354, 0.5237486958503723, 0.5113128423690796, 0.5021271109580994, 0.4922121465206146, 0.4854358732700348, 0.481205552816391, 0.4691009223461151, 0.4590855836868286, 0.4540090262889862, 0.4466254413127899, 0.4440402090549469, 0.44105616211891174, 0.4328592121601105, 0.4291836619377136, 0.4264165461063385, 0.4216275215148926, 0.4177073538303375, 0.4115970730781555, 0.4119546711444855, 0.40799081325531006, 0.403158038854599, 0.40354764461517334, 0.40104833245277405, 0.39730486273765564, 0.39583849906921387, 0.3938717842102051, 0.3853203058242798, 0.38692542910575867, 0.38182398676872253, 0.3807205259799957, 0.38030630350112915, 0.3805156350135803, 0.37914860248565674, 0.37717097997665405, 0.37592968344688416], "val_accuracy": [0.5320000052452087, 0.656333327293396, 0.6853333115577698, 0.7096666693687439, 0.731333315372467, 0.7513333559036255, 0.7620000243186951, 0.7706666588783264, 0.7846666574478149, 0.7986666560173035, 0.7976666688919067, 0.8113333582878113, 0.8223333358764648, 0.8226666450500488, 0.8296666741371155, 0.831333339214325, 0.831333339214325, 0.8296666741371155, 0.840666651725769, 0.8399999737739563, 0.8526666760444641, 0.8476666808128357, 0.846666693687439, 0.8489999771118164, 0.8553333282470703, 0.8546666502952576, 0.8556666374206543, 0.8616666793823242, 0.8610000014305115, 0.8583333492279053, 0.8633333444595337, 0.8603333234786987, 0.8646666407585144, 0.8646666407585144, 0.8650000095367432, 0.8619999885559082, 0.8663333058357239, 0.8679999709129333, 0.8706666827201843, 0.871666669845581, 0.8706666827201843, 0.875, 0.8703333139419556, 0.8690000176429749, 0.8733333349227905, 0.8736666440963745, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 8, 6, 4, 2, 0, 3, 9], [0, 0, 1, 5], [0, 67, 91], [0, 0, 0, 1], [0, 0, 5], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8591428399085999, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(alpha), tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.29323673248291, 2.1918447017669678, 1.7759202718734741, 1.3337684869766235, 1.0905944108963013, 0.9271916747093201, 0.8438431024551392, 0.8296462297439575, 0.7697434425354004, 0.760977566242218, 0.7110469341278076, 0.6815556883811951, 0.652772068977356, 0.6219419836997986, 0.6088362336158752, 0.59567791223526, 0.5819230079650879, 0.5794763565063477, 0.5535545349121094, 0.5500264167785645, 0.5399874448776245, 0.5306617021560669, 0.5181576609611511, 0.5238004326820374, 0.5045880675315857, 0.4857957363128662, 0.47835442423820496, 0.45486870408058167, 0.46267983317375183, 0.4516840875148773, 0.4401945173740387, 0.4415600001811981, 0.4218796491622925, 0.42017483711242676, 0.4123629331588745, 0.40429142117500305, 0.40437227487564087, 0.40140998363494873, 0.3809930980205536, 0.3932214379310608, 0.3631317913532257, 0.3746868968009949, 0.3592624366283417, 0.35573697090148926, 0.34648647904396057, 0.3305991291999817, 0.34100785851478577, 0.3231285512447357, 0.33573073148727417, 0.32041147351264954, 0.32241693139076233, 0.3191565275192261, 0.31706270575523376], "accuracy": [0.1344604343175888, 0.3245278000831604, 0.43230748176574707, 0.5435213446617126, 0.627129852771759, 0.6629242897033691, 0.694360077381134, 0.7036058902740479, 0.7120591998100281, 0.717870831489563, 0.724739134311676, 0.7461365461349487, 0.7541936039924622, 0.7572315335273743, 0.7685906887054443, 0.7692511081695557, 0.776251494884491, 0.7804781198501587, 0.7886672616004944, 0.7886672616004944, 0.7954035401344299, 0.7998943328857422, 0.7976489067077637, 0.7955356240272522, 0.8059701323509216, 0.8149517774581909, 0.8141592741012573, 0.8224804997444153, 0.8164047002792358, 0.8220842480659485, 0.8313300609588623, 0.8269713521003723, 0.834632158279419, 0.8396512866020203, 0.8379341959953308, 0.8470479249954224, 0.8418967127799988, 0.8486329317092896, 0.8504821062088013, 0.8494254350662231, 0.8568220734596252, 0.8578787446022034, 0.8603883385658264, 0.8618412613868713, 0.8639545440673828, 0.8677849769592285, 0.8702945709228516, 0.8737286925315857, 0.8739928603172302, 0.873860776424408, 0.8708229064941406, 0.8735966086387634, 0.8755778670310974], "val_loss": [2.246969699859619, 2.023857355117798, 1.1443880796432495, 0.8985232710838318, 0.7668474912643433, 0.7256611585617065, 0.6734578609466553, 0.6424881219863892, 0.6494391560554504, 0.6282874345779419, 0.5882365703582764, 0.5743185877799988, 0.5504955053329468, 0.5499860048294067, 0.5488712787628174, 0.5324670076370239, 0.5278862118721008, 0.5361090302467346, 0.517869234085083, 0.503762423992157, 0.5077831149101257, 0.49141332507133484, 0.49462971091270447, 0.49376025795936584, 0.49278172850608826, 0.4935854375362396, 0.4743724763393402, 0.4639072120189667, 0.46771305799484253, 0.45579639077186584, 0.45879116654396057, 0.46172407269477844, 0.45812085270881653, 0.4474358856678009, 0.4619229733943939, 0.4691401422023773, 0.4559567868709564, 0.44458818435668945, 0.44834375381469727, 0.45291805267333984, 0.45464831590652466, 0.45143452286720276, 0.4386565387248993, 0.4413328468799591, 0.45614102482795715, 0.4415282905101776, 0.4372636675834656, 0.43937113881111145, 0.44166263937950134, 0.45344027876853943, 0.4524814784526825, 0.4492690861225128, 0.46457502245903015], "val_accuracy": [0.4113333225250244, 0.4333333373069763, 0.6359999775886536, 0.6846666932106018, 0.721666693687439, 0.737666666507721, 0.7509999871253967, 0.7519999742507935, 0.7633333206176758, 0.7473333477973938, 0.7796666622161865, 0.7786666750907898, 0.7950000166893005, 0.7933333516120911, 0.7916666865348816, 0.7979999780654907, 0.8013333082199097, 0.7953333258628845, 0.8073333501815796, 0.8029999732971191, 0.8066666722297668, 0.8109999895095825, 0.8109999895095825, 0.812333345413208, 0.8173333406448364, 0.8206666707992554, 0.8296666741371155, 0.8270000219345093, 0.8386666774749756, 0.8360000252723694, 0.8376666903495789, 0.8389999866485596, 0.8370000123977661, 0.8383333086967468, 0.8420000076293945, 0.840666651725769, 0.8416666388511658, 0.8463333249092102, 0.846666693687439, 0.8506666421890259, 0.8560000061988831, 0.8550000190734863, 0.8489999771118164, 0.8573333621025085, 0.8606666922569275, 0.8573333621025085, 0.859333336353302, 0.8656666874885559, 0.8613333106040955, 0.8610000014305115, 0.8613333106040955, 0.8653333187103271, 0.8656666874885559]}, "mapping_values": [1, 10, 5, 5, 3, 13, 9, 4, 3, 4, 3, 1, 1, 2, 1, 1, 0], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8268571496009827, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5424264669418335, 0.8520585298538208, 0.678777277469635, 0.6155111193656921, 0.5880724191665649, 0.6018927097320557, 0.5720776319503784, 0.5455495715141296, 0.5143381357192993, 0.4889768064022064, 0.4963798522949219, 0.4906972348690033, 0.48821502923965454, 0.5063585042953491, 0.5212392807006836, 0.524634063243866, 0.4934327006340027, 0.5015459060668945, 0.5562165975570679], "accuracy": [0.4741777777671814, 0.7083608508110046, 0.7469290494918823, 0.7700436115264893, 0.7866860628128052, 0.7802139520645142, 0.7984414100646973, 0.8029322624206543, 0.8062343001365662, 0.8204993009567261, 0.8215559124946594, 0.8201030492782593, 0.8277638554573059, 0.8175934553146362, 0.8310658931732178, 0.8277638554573059, 0.8260467648506165, 0.8403117060661316, 0.8211596608161926], "val_loss": [0.8402646780014038, 0.6174282431602478, 0.5516102910041809, 0.5095133185386658, 0.5395848155021667, 0.5433652400970459, 0.5148305892944336, 0.5050331354141235, 0.484452486038208, 0.49533066153526306, 0.4823738932609558, 0.4724976122379303, 0.4927798807621002, 0.5394139885902405, 0.5270209908485413, 0.5051673054695129, 0.5182833075523376, 0.6031180024147034, 0.5396532416343689], "val_accuracy": [0.6976666450500488, 0.762666642665863, 0.7796666622161865, 0.7979999780654907, 0.7990000247955322, 0.8040000200271606, 0.8233333230018616, 0.8226666450500488, 0.8270000219345093, 0.8223333358764648, 0.8413333296775818, 0.8379999995231628, 0.8370000123977661, 0.846666693687439, 0.8316666483879089, 0.8379999995231628, 0.8376666903495789, 0.8343333601951599, 0.8383333086967468]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 4, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 69], [0, 1], [0], [1], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0], [6, 3, 3, 6, 8, 1, 4, 5, 4, 2, 8, 4, 6, 9], [0, 0, 0, 3, 2, 0, 3, 1, 2, 4], [16, 99, 96, 6, 61, 91]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(sigma, tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))))), sigma)), tf.math.sqrt(tf.math.pow(alpha, beta))), tf.math.divide_no_nan(grad, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 0, 24, 14, 10, 5], "tree_depth": 24}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 0, 8, 1, 4, 1, 4, 2, 8], [0, 3, 0, 3, 0, 3, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))))), sigma), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [438.69244384765625, 226249.796875, 7884555.5, 91945912.0, 582001408.0, 2625470208.0], "accuracy": [0.09391097724437714, 0.10051512718200684, 0.10170386731624603, 0.10276053100824356, 0.10302469879388809, 0.10289261490106583], "val_loss": [6834.8154296875, 1155953.875, 23675768.0, 202520720.0, 1072209856.0, 4188793088.0], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 6, 3, 3, 2, 11, 7, 4, 2, 2, 1, 1, 1, 11, 6, 5, 3], "tree_depth": 16}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 4, 4, 3], [0, 1, 0, 2, 3], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 8], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 2, 1, 2, 2, 8, 0, 8, 8], [0, 0, 4, 3, 0, 0, 3, 4, 2, 0], [16, 99, 52, 99, 21, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.add(tf.math.sqrt(sigma), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.sqrt(sigma)))), grad), tf.math.sqrt(beta)), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}, "mapping_values": [1, 10, 5, 5, 2, 11, 7, 4, 2, 2, 1, 1, 1, 24, 14, 10, 5], "tree_depth": 21}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 2, 2, 2, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [73], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 1, 8, 4], [3, 0, 0, 3, 0, 0, 3, 1, 2, 3, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 10, 6, 4, 2, 2, 1, 1, 1, 23, 12, 11, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.math.pow(alpha, tf.math.subtract(tf.math.sqrt(tf.math.pow(beta, sigma)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [2.3050074577331543, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]