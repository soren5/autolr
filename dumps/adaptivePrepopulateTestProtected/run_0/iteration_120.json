[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8688571453094482, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2245447635650635, 1.8664203882217407, 1.386739730834961, 1.0964046716690063, 0.9451019763946533, 0.8538703322410583, 0.781207799911499, 0.7252413630485535, 0.6898291110992432, 0.6534393429756165, 0.6374632120132446, 0.6031787991523743, 0.5857505798339844, 0.5686877965927124, 0.5541450381278992, 0.5306475162506104, 0.5211607813835144, 0.5033178925514221, 0.4879092574119568, 0.4914928674697876, 0.47420772910118103, 0.46666446328163147, 0.45068949460983276, 0.44090208411216736, 0.44186773896217346, 0.4257432222366333, 0.4145297706127167, 0.4201311767101288, 0.4094198942184448, 0.39881518483161926, 0.38874489068984985, 0.38805854320526123, 0.38412877917289734, 0.37893787026405334, 0.3692275583744049, 0.36515718698501587, 0.3595038056373596, 0.35480260848999023, 0.3500406742095947, 0.34153518080711365, 0.3361717462539673, 0.3232552707195282, 0.3291003406047821], "accuracy": [0.2650904655456543, 0.49148064851760864, 0.565711259841919, 0.6124686598777771, 0.6616035103797913, 0.7013604640960693, 0.7169462442398071, 0.7347774505615234, 0.7511557340621948, 0.7622507214546204, 0.7696473598480225, 0.7829877138137817, 0.7873464822769165, 0.7956677079200745, 0.7998943328857422, 0.8095363974571228, 0.8145555257797241, 0.8231409192085266, 0.8265751004219055, 0.8238013386726379, 0.8305375576019287, 0.834632158279419, 0.8380662798881531, 0.8412362933158875, 0.8385946154594421, 0.8479725122451782, 0.8506141901016235, 0.8492933511734009, 0.8487650156021118, 0.8560295701026917, 0.8584070801734924, 0.8619733452796936, 0.8613129258155823, 0.8665962219238281, 0.8677849769592285, 0.8651432991027832, 0.867520809173584, 0.8720116019248962, 0.8732003569602966, 0.8755778670310974, 0.8782195448875427, 0.8821820020675659, 0.8805969953536987], "val_loss": [2.0404505729675293, 1.5209221839904785, 1.0542916059494019, 0.84674072265625, 0.758643388748169, 0.6964895725250244, 0.6548457145690918, 0.6086539030075073, 0.5841830372810364, 0.5584284067153931, 0.5406955480575562, 0.5234145522117615, 0.5076949596405029, 0.49730440974235535, 0.4827224016189575, 0.47778651118278503, 0.47437500953674316, 0.4576537609100342, 0.45254090428352356, 0.4415966868400574, 0.43817761540412903, 0.4354637861251831, 0.4301522672176361, 0.42183810472488403, 0.4158751666545868, 0.41649243235588074, 0.41393688321113586, 0.4086437225341797, 0.40332266688346863, 0.3977948725223541, 0.393099844455719, 0.3931940793991089, 0.39100632071495056, 0.393527090549469, 0.3922240436077118, 0.38604336977005005, 0.3809458017349243, 0.37590253353118896, 0.3778175115585327, 0.3794945180416107, 0.3750537931919098, 0.3683113753795624, 0.36966046690940857], "val_accuracy": [0.527999997138977, 0.6416666507720947, 0.6763333082199097, 0.7123333215713501, 0.7326666712760925, 0.7536666393280029, 0.768666684627533, 0.7796666622161865, 0.7856666445732117, 0.7956666946411133, 0.8013333082199097, 0.8086666464805603, 0.8119999766349792, 0.8153333067893982, 0.8230000138282776, 0.828000009059906, 0.8236666917800903, 0.8379999995231628, 0.8339999914169312, 0.8403333425521851, 0.8413333296775818, 0.8460000157356262, 0.8429999947547913, 0.8489999771118164, 0.8506666421890259, 0.8443333506584167, 0.8456666469573975, 0.8510000109672546, 0.8529999852180481, 0.8546666502952576, 0.859666645526886, 0.8553333282470703, 0.8583333492279053, 0.8543333411216736, 0.8566666841506958, 0.8600000143051147, 0.8629999756813049, 0.8686666488647461, 0.8650000095367432, 0.8669999837875366, 0.8669999837875366, 0.8683333396911621, 0.8656666874885559]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [0, 4, 2, 0, 1, 3, 1, 0], [0, 4, 2, 5, 2, 3], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8399999737739563, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), beta), tf.math.multiply(tf.math.subtract(grad, tf.math.negative(beta)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292307138442993, 2.1881532669067383, 1.7522356510162354, 1.3590210676193237, 1.0841617584228516, 0.9494554400444031, 0.8635033369064331, 0.8197915554046631, 0.7775419354438782, 0.7494500875473022, 0.708700954914093, 0.6774464249610901, 0.6515856385231018, 0.6381199359893799, 0.6264703273773193, 0.6109604835510254, 0.5871949195861816, 0.5731955766677856, 0.5517434477806091, 0.5526752471923828, 0.5438210964202881, 0.5237103700637817, 0.5228291749954224, 0.5133625864982605, 0.49619585275650024, 0.49802476167678833, 0.4759558141231537, 0.4602009057998657, 0.46430209279060364, 0.4594373106956482, 0.4553217589855194, 0.44447824358940125, 0.43362486362457275, 0.42647528648376465, 0.4228235185146332, 0.40854084491729736, 0.4128309488296509, 0.4011034369468689, 0.39450374245643616, 0.38971230387687683, 0.36738744378089905, 0.36800840497016907, 0.35899853706359863, 0.3560815751552582, 0.3571436107158661, 0.35508695244789124, 0.3399486541748047, 0.3281780481338501, 0.3349981904029846, 0.33574098348617554, 0.32944416999816895, 0.3288733661174774, 0.31038975715637207, 0.30728381872177124, 0.31515738368034363, 0.29815199971199036, 0.30167487263679504, 0.2945427894592285, 0.2993945777416229], "accuracy": [0.13181878626346588, 0.32201823592185974, 0.4493461847305298, 0.540219247341156, 0.6300356388092041, 0.654999315738678, 0.6902654767036438, 0.6910579800605774, 0.7025492191314697, 0.7120591998100281, 0.7293620109558105, 0.7364945411682129, 0.7523444890975952, 0.7580240368843079, 0.7553823590278625, 0.7573636174201965, 0.7732135653495789, 0.7766477465629578, 0.7798177003860474, 0.7808743715286255, 0.7887993454933167, 0.791969358921051, 0.7947431206703186, 0.8009510040283203, 0.805177628993988, 0.802271842956543, 0.8083476424217224, 0.8202351331710815, 0.8212917447090149, 0.8185180425643921, 0.8212917447090149, 0.8245938420295715, 0.8273676037788391, 0.8321225643157959, 0.8362171649932861, 0.8428213000297546, 0.8391229510307312, 0.842028796672821, 0.8469158411026001, 0.8569541573524475, 0.8595958352088928, 0.8520671129226685, 0.8561616539955139, 0.8594637513160706, 0.8548408150672913, 0.8549728989601135, 0.8598600029945374, 0.8684453964233398, 0.8685774803161621, 0.868049144744873, 0.869502067565918, 0.8639545440673828, 0.8754457831382751, 0.8762382864952087, 0.8775591254234314, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8808611631393433], "val_loss": [2.2445132732391357, 2.0071280002593994, 1.1245540380477905, 0.8639272451400757, 0.7877783179283142, 0.7186640501022339, 0.6821756958961487, 0.6532838344573975, 0.6401035785675049, 0.609437108039856, 0.5746487379074097, 0.5568498373031616, 0.5423573851585388, 0.5332762002944946, 0.5231532454490662, 0.5124387741088867, 0.5077215433120728, 0.49252766370773315, 0.491056352853775, 0.4990578889846802, 0.4821102023124695, 0.485140860080719, 0.4810570478439331, 0.47487881779670715, 0.4646258056163788, 0.4539180397987366, 0.4590443968772888, 0.4609214961528778, 0.4506630003452301, 0.44294434785842896, 0.4470250606536865, 0.44253838062286377, 0.4346039295196533, 0.42695409059524536, 0.4384114444255829, 0.4300752878189087, 0.42435240745544434, 0.4244152307510376, 0.4261719286441803, 0.42539557814598083, 0.42436352372169495, 0.42088618874549866, 0.42780807614326477, 0.4340839087963104, 0.4094716012477875, 0.42084431648254395, 0.4181485176086426, 0.4232054054737091, 0.44044652581214905, 0.4322565495967865, 0.4231421649456024, 0.43638280034065247, 0.4513911008834839, 0.4734734296798706, 0.47392740845680237, 0.45394277572631836, 0.44969871640205383, 0.4678967595100403, 0.5012062788009644], "val_accuracy": [0.4129999876022339, 0.4593333303928375, 0.6433333158493042, 0.6936666369438171, 0.7116666436195374, 0.7200000286102295, 0.734333336353302, 0.750333309173584, 0.7580000162124634, 0.7693333625793457, 0.7723333239555359, 0.7829999923706055, 0.7993333339691162, 0.7879999876022339, 0.7933333516120911, 0.8059999942779541, 0.8029999732971191, 0.8026666641235352, 0.812666654586792, 0.8113333582878113, 0.8206666707992554, 0.815666675567627, 0.8220000267028809, 0.8273333311080933, 0.8360000252723694, 0.8336666822433472, 0.8303333520889282, 0.8433333039283752, 0.8379999995231628, 0.8416666388511658, 0.8376666903495789, 0.8423333168029785, 0.843666672706604, 0.8479999899864197, 0.8493333458900452, 0.8486666679382324, 0.8503333330154419, 0.8523333072662354, 0.8583333492279053, 0.8583333492279053, 0.8586666584014893, 0.8619999885559082, 0.8669999837875366, 0.8613333106040955, 0.8666666746139526, 0.8606666922569275, 0.8679999709129333, 0.8700000047683716, 0.8676666617393494, 0.8653333187103271, 0.8613333106040955, 0.8656666874885559, 0.8703333139419556, 0.8740000128746033, 0.8703333139419556, 0.8629999756813049, 0.8669999837875366, 0.871666669845581, 0.8693333268165588]}, "mapping_values": [1, 10, 5, 5, 3, 14, 8, 6, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8274285793304443, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5130133628845215, 0.7788017988204956, 0.6396139860153198, 0.569070041179657, 0.5326329469680786, 0.49593526124954224, 0.47331345081329346, 0.4727413058280945, 0.4563601315021515, 0.45913681387901306, 0.4790818989276886, 0.4796257019042969, 0.49629467725753784], "accuracy": [0.4830273389816284, 0.7290979027748108, 0.7691190242767334, 0.787082314491272, 0.8005547523498535, 0.8165367841720581, 0.8309338092803955, 0.8335754871368408, 0.8367455005645752, 0.8407079577445984, 0.837141752243042, 0.8330471515655518, 0.8417646288871765], "val_loss": [0.7322494983673096, 0.5994570851325989, 0.5040361285209656, 0.4677535891532898, 0.44368478655815125, 0.44762101769447327, 0.47563859820365906, 0.47853735089302063, 0.4828849136829376, 0.5145230889320374, 0.572489321231842, 0.513602077960968, 0.5779252052307129], "val_accuracy": [0.7483333349227905, 0.7863333225250244, 0.815666675567627, 0.8376666903495789, 0.8343333601951599, 0.8403333425521851, 0.8343333601951599, 0.8533333539962769, 0.8339999914169312, 0.8373333215713501, 0.8389999866485596, 0.8289999961853027, 0.8433333039283752]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 8, 3, 9], [0, 0, 0, 2], [39, 67, 2, 28], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [2, 2, 3, 0, 3, 5], [0, 2, 0, 1], [16, 16], [0, 1], [0], [2], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 46, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 4, 8, 4, 4, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3036608695983887, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09906221181154251, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [8, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 1, 0, 1], [0, 6, 8], [0, 6], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], [6, 4, 3, 6, 2, 1, 4, 1, 4, 2, 8, 6, 3, 5, 1, 6, 5], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0, 1, 6, 6, 1, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 5, 3, 2, 1, 32, 17, 15, 5], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(grad, tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.square(tf.math.subtract(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(alpha, grad)))))), grad)), alpha), tf.math.square(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 0], [0, 1, 0, 2], [92, 77], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 1, 3], [16, 8], [0, 1, 0, 1], [4, 5], [0, 4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 2, 0, 2, 8, 1, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 2, 10, 6, 4, 1, 4, 2, 2, 1, 17, 9, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(grad), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 0, 0, 3], [0, 1, 0, 2], [32, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [69], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [5, 0, 2, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 1, 0, 0, 3, 1, 2, 0], [16, 22, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 7, 4, 3, 2, 2, 1, 1, 1, 19, 11, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), alpha))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(alpha)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]