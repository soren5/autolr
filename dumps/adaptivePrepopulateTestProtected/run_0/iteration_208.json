[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8625714182853699, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2206530570983887, 1.8537386655807495, 1.3766990900039673, 1.085103154182434, 0.9322483539581299, 0.8285278677940369, 0.7698172330856323, 0.7241672277450562, 0.6882864832878113, 0.6549983024597168, 0.6399466395378113, 0.6115495562553406, 0.5942593216896057, 0.5801802277565002, 0.5612167716026306, 0.5393208861351013, 0.5292569994926453, 0.5201972723007202, 0.5045527219772339, 0.5056374669075012, 0.49168145656585693, 0.4703159034252167, 0.4674278795719147, 0.45837077498435974, 0.4562584161758423, 0.442390114068985, 0.4325430989265442, 0.42943325638771057, 0.4158192276954651, 0.41156265139579773, 0.4007047414779663, 0.3957456052303314, 0.3881794810295105, 0.38462018966674805, 0.3778313398361206, 0.3744576871395111, 0.370424747467041, 0.3704332113265991, 0.36023083329200745, 0.3503470718860626, 0.3405192792415619, 0.3392201364040375, 0.33860698342323303, 0.3298777937889099, 0.3239479959011078, 0.31948983669281006, 0.3168688714504242, 0.3130047619342804, 0.30600807070732117, 0.3096608817577362], "accuracy": [0.2731475234031677, 0.5036323070526123, 0.568749189376831, 0.6173557043075562, 0.6613393425941467, 0.7055870890617371, 0.7191916704177856, 0.7333245277404785, 0.7412495017051697, 0.7593448758125305, 0.7572315335273743, 0.7693831920623779, 0.785629391670227, 0.7906485199928284, 0.7926297783851624, 0.8031964302062988, 0.8038568496704102, 0.8121780753135681, 0.817461371421814, 0.8178576231002808, 0.8187822103500366, 0.8313300609588623, 0.833179235458374, 0.8374059200286865, 0.8352925777435303, 0.8384625315666199, 0.8441421389579773, 0.8491612672805786, 0.8512746095657349, 0.8543124794960022, 0.8564258217811584, 0.8556333184242249, 0.8594637513160706, 0.8640866279602051, 0.8644828796386719, 0.86553955078125, 0.8705587387084961, 0.8693699836730957, 0.8717474341392517, 0.8768987059593201, 0.8762382864952087, 0.8762382864952087, 0.8823140859603882, 0.8829745054244995, 0.885219931602478, 0.8840311765670776, 0.8861445188522339, 0.8878615498542786, 0.889050304889679, 0.8907673954963684], "val_loss": [2.0307788848876953, 1.4857902526855469, 1.0138237476348877, 0.8220483660697937, 0.735033392906189, 0.6792005896568298, 0.6413947939872742, 0.6064826846122742, 0.577989399433136, 0.5703751444816589, 0.5394598245620728, 0.5259638428688049, 0.5171577334403992, 0.4994266629219055, 0.4889923930168152, 0.4861483871936798, 0.4734039008617401, 0.4629575312137604, 0.45520710945129395, 0.4526787996292114, 0.44059062004089355, 0.43367859721183777, 0.4263916015625, 0.4271085560321808, 0.42414602637290955, 0.40941494703292847, 0.4106428623199463, 0.39944547414779663, 0.39786869287490845, 0.3928370475769043, 0.39045870304107666, 0.38200920820236206, 0.38364696502685547, 0.3792005181312561, 0.37942585349082947, 0.36949706077575684, 0.3681755065917969, 0.36560261249542236, 0.36045894026756287, 0.3667938709259033, 0.35521215200424194, 0.3559838831424713, 0.35204020142555237, 0.35216256976127625, 0.34568139910697937, 0.34537816047668457, 0.3481086492538452, 0.34444087743759155, 0.347259521484375, 0.339273601770401], "val_accuracy": [0.5576666593551636, 0.6666666865348816, 0.6919999718666077, 0.7089999914169312, 0.737666666507721, 0.7536666393280029, 0.7546666860580444, 0.7706666588783264, 0.7850000262260437, 0.7806666493415833, 0.7950000166893005, 0.8013333082199097, 0.8050000071525574, 0.815666675567627, 0.8190000057220459, 0.8213333487510681, 0.8240000009536743, 0.828000009059906, 0.8333333134651184, 0.8270000219345093, 0.8429999947547913, 0.8420000076293945, 0.8403333425521851, 0.8389999866485596, 0.8389999866485596, 0.8479999899864197, 0.8510000109672546, 0.8536666631698608, 0.8523333072662354, 0.8533333539962769, 0.8579999804496765, 0.8600000143051147, 0.8556666374206543, 0.8603333234786987, 0.8619999885559082, 0.8629999756813049, 0.8663333058357239, 0.8643333315849304, 0.8690000176429749, 0.8653333187103271, 0.8679999709129333, 0.8669999837875366, 0.8693333268165588, 0.8706666827201843, 0.8733333349227905, 0.8703333139419556, 0.8679999709129333, 0.8690000176429749, 0.8706666827201843, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1], [0, 5, 8], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8548571467399597, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2919530868530273, 2.187519073486328, 1.764618158340454, 1.3449313640594482, 1.0541620254516602, 0.9172934293746948, 0.8408976793289185, 0.8110913038253784, 0.7715262174606323, 0.7474279403686523, 0.711552083492279, 0.6889955997467041, 0.6649686098098755, 0.6399590969085693, 0.6085458993911743, 0.5952417254447937, 0.583496630191803, 0.5728631019592285, 0.5680049657821655, 0.5492327809333801, 0.5436410903930664, 0.5229925513267517, 0.5102165937423706, 0.5095322132110596, 0.49447792768478394, 0.48459938168525696, 0.47421467304229736, 0.4577106833457947, 0.4518830180168152, 0.4430747330188751, 0.43386000394821167, 0.42099782824516296, 0.41195645928382874, 0.4124569892883301, 0.40708932280540466, 0.3986930251121521, 0.3947659730911255, 0.38108521699905396, 0.37122756242752075, 0.3618427813053131, 0.3632977604866028, 0.35682326555252075, 0.35575351119041443, 0.3449520468711853, 0.33907684683799744, 0.3322605490684509, 0.3296712636947632, 0.32656341791152954, 0.31156066060066223, 0.31363198161125183, 0.31118133664131165, 0.30168458819389343], "accuracy": [0.13657376170158386, 0.32782986760139465, 0.4379870593547821, 0.547087550163269, 0.6376964449882507, 0.6606789231300354, 0.6856426000595093, 0.6934354901313782, 0.691850483417511, 0.7108704447746277, 0.7314753532409668, 0.7309470176696777, 0.7416457533836365, 0.7499669790267944, 0.7666094303131104, 0.7688548564910889, 0.772288978099823, 0.7700436115264893, 0.7786290049552917, 0.7840443849563599, 0.7803460359573364, 0.793422281742096, 0.8004226684570312, 0.7989697456359863, 0.8067626357078552, 0.8108572363853455, 0.8170651197433472, 0.8239334225654602, 0.8219521641731262, 0.8314621448516846, 0.8273676037788391, 0.8374059200286865, 0.8416325449943542, 0.8327829837799072, 0.847840428352356, 0.843481719493866, 0.8541803956031799, 0.8516708612442017, 0.8556333184242249, 0.8582749962806702, 0.8590674996376038, 0.8602562546730042, 0.8558974862098694, 0.867520809173584, 0.8650112152099609, 0.8710870146751404, 0.8698983192443848, 0.8710870146751404, 0.8721436858177185, 0.8750495314598083, 0.8735966086387634, 0.8794082403182983], "val_loss": [2.2453246116638184, 2.013779878616333, 1.1062796115875244, 0.8390286564826965, 0.7522868514060974, 0.7132742404937744, 0.6720431447029114, 0.6412540674209595, 0.6396288275718689, 0.6071838140487671, 0.5752487778663635, 0.5714153051376343, 0.5473222732543945, 0.531329333782196, 0.5245083570480347, 0.5129796266555786, 0.5121662616729736, 0.4959811866283417, 0.4889252185821533, 0.48098301887512207, 0.48156362771987915, 0.4782620370388031, 0.46727490425109863, 0.4617690443992615, 0.4516140818595886, 0.4498555362224579, 0.44628018140792847, 0.4333653450012207, 0.4327806532382965, 0.42586076259613037, 0.42360860109329224, 0.4186408817768097, 0.41293472051620483, 0.42676183581352234, 0.404843270778656, 0.3953508734703064, 0.39706072211265564, 0.39946770668029785, 0.3887825608253479, 0.3965625762939453, 0.3895772397518158, 0.38272786140441895, 0.39946427941322327, 0.38460850715637207, 0.39957869052886963, 0.41606441140174866, 0.39397144317626953, 0.3815990388393402, 0.38884320855140686, 0.3998618423938751, 0.4109383523464203, 0.4242161512374878], "val_accuracy": [0.398333340883255, 0.4506666660308838, 0.6576666831970215, 0.6943333148956299, 0.7146666646003723, 0.7170000076293945, 0.7486666440963745, 0.7326666712760925, 0.7459999918937683, 0.7536666393280029, 0.7760000228881836, 0.7646666765213013, 0.7923333048820496, 0.7900000214576721, 0.7973333597183228, 0.79666668176651, 0.8019999861717224, 0.8116666674613953, 0.8050000071525574, 0.8176666498184204, 0.8256666660308838, 0.8073333501815796, 0.8236666917800903, 0.8296666741371155, 0.8256666660308838, 0.8379999995231628, 0.8420000076293945, 0.8523333072662354, 0.8539999723434448, 0.8506666421890259, 0.8516666889190674, 0.8576666712760925, 0.8606666922569275, 0.8529999852180481, 0.8640000224113464, 0.8613333106040955, 0.8683333396911621, 0.8619999885559082, 0.871999979019165, 0.8693333268165588, 0.8673333525657654, 0.8740000128746033, 0.8706666827201843, 0.8740000128746033, 0.8703333139419556, 0.8733333349227905, 0.8759999871253967, 0.8726666569709778, 0.8703333139419556, 0.8696666955947876, 0.862666666507721, 0.8686666488647461]}, "mapping_values": [1, 10, 5, 5, 3, 4, 3, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8254285454750061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.596816062927246, 0.99089515209198, 0.742640495300293, 0.6654726266860962, 0.6023934483528137, 0.5493225455284119, 0.5063290596008301, 0.5027068257331848, 0.491708904504776, 0.4423564374446869, 0.47445669770240784, 0.4635530114173889, 0.4648171365261078, 0.5103791952133179, 0.4836515784263611, 0.45642250776290894, 0.4900366961956024], "accuracy": [0.4702152907848358, 0.674679696559906, 0.7360982894897461, 0.7597411274909973, 0.774798572063446, 0.798309326171875, 0.8129705190658569, 0.8074230551719666, 0.8302733898162842, 0.837537944316864, 0.8335754871368408, 0.835160493850708, 0.8387266993522644, 0.8173292875289917, 0.8201030492782593, 0.8348963260650635, 0.8251221776008606], "val_loss": [1.0129518508911133, 0.6222925782203674, 0.5658500790596008, 0.504471480846405, 0.496623694896698, 0.466765433549881, 0.48266658186912537, 0.47939661145210266, 0.4676598310470581, 0.4829787611961365, 0.4574575126171112, 0.48571890592575073, 0.5143216848373413, 0.5034830570220947, 0.5045948028564453, 0.5075244903564453, 0.5240682363510132], "val_accuracy": [0.6150000095367432, 0.7713333368301392, 0.778333306312561, 0.8069999814033508, 0.815666675567627, 0.8240000009536743, 0.8383333086967468, 0.8389999866485596, 0.8259999752044678, 0.8410000205039978, 0.8399999737739563, 0.8443333506584167, 0.8370000123977661, 0.8360000252723694, 0.831333339214325, 0.8316666483879089, 0.8416666388511658]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 7], [0, 1, 0, 2, 2], [39, 39], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 0], [16, 16], [0, 1, 1], [3], [0, 5], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [6, 3, 0, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 3, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 2, 3, 1, 2, 1, 11, 6, 5, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(beta, tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(sigma), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 8, 0, 3], [0, 1, 0, 1], [39, 39], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 5, 5, 3, 3, 2, 8, 1, 4, 7, 4, 5, 7, 0, 5, 3, 1, 4, 0, 9], [2, 2, 0, 3, 4, 1, 4, 3, 0, 3, 5, 4, 0, 0], [16, 16, 40, 12, 32], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [8, 4, 3, 6, 8, 6, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 38, 24, 14, 5, 2, 1, 1, 1, 4, 2, 2, 2], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(beta, tf.math.square(tf.math.square(tf.math.multiply(tf.math.multiply(beta, tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(grad, tf.math.pow(tf.math.square(grad), alpha)), tf.math.add(grad, tf.math.negative(tf.math.square(grad)))))), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(grad, grad)))), grad))))), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3039534091949463, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 8], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1, 1], [2], [0, 1], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 81, 96, 99, 61, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 9, 5, 4, 1, 3, 1, 2, 1, 16, 8, 8, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [3, 2, 6, 0, 3], [2, 1, 0, 2, 3], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 2, 1, 0, 3, 5, 4, 0, 2, 5, 5], [0, 2, 2, 3, 4, 5], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 8, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 67, 99, 61, 1]], "fitness": -0.037142857909202576, "mapping_values": [1, 10, 5, 5, 1, 17, 11, 6, 1, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.pow(beta, grad)), tf.math.negative(tf.math.add(grad, tf.math.square(tf.math.square(grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), grad)", "other_info": {"loss": [11976600576.0, 14957065216.0, 14354611200.0, 14054201344.0, 13902403584.0, 13750507520.0], "accuracy": [0.0754193663597107, 0.06855104863643646, 0.06921146810054779, 0.07528728246688843, 0.07185312360525131, 0.06736230105161667], "val_loss": [11925190656.0, 11925419008.0, 11925314560.0, 11925270528.0, 11925281792.0, 11925246976.0], "val_accuracy": [0.03266666829586029, 0.03266666829586029, 0.03266666829586029, 0.03266666829586029, 0.03266666829586029, 0.03266666829586029]}}]