[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8694285750389099, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2229883670806885, 1.8682405948638916, 1.3927311897277832, 1.1013613939285278, 0.9319300055503845, 0.8345227837562561, 0.7671689987182617, 0.7298517227172852, 0.6869058609008789, 0.656305193901062, 0.6281198263168335, 0.6137391924858093, 0.5971033573150635, 0.5689330101013184, 0.5557324290275574, 0.5364087224006653, 0.5273706912994385, 0.515065610408783, 0.4928540289402008, 0.48370712995529175, 0.473755419254303, 0.470553457736969, 0.45774397253990173, 0.44899269938468933, 0.4396977722644806, 0.43147268891334534, 0.41755205392837524, 0.4229399263858795, 0.40541571378707886, 0.4048463702201843, 0.399603933095932, 0.38907212018966675, 0.3911868929862976, 0.3740319311618805, 0.37609606981277466, 0.3647944927215576, 0.3584284782409668, 0.3613375127315521, 0.3516198396682739, 0.34458857774734497, 0.33837223052978516, 0.3297535479068756, 0.33175691962242126, 0.3263307213783264, 0.3233211934566498, 0.31578317284584045, 0.30451464653015137, 0.31172168254852295, 0.30707699060440063, 0.2996124029159546, 0.29614168405532837], "accuracy": [0.27327960729599, 0.4873860776424408, 0.5614846348762512, 0.6190727949142456, 0.667811393737793, 0.7043983340263367, 0.7280412316322327, 0.7363624572753906, 0.752740740776062, 0.7602694630622864, 0.7736098170280457, 0.7795535326004028, 0.7823272943496704, 0.7954035401344299, 0.7994980812072754, 0.8080834746360779, 0.8128384351730347, 0.8162726163864136, 0.8230088353157043, 0.8255184292793274, 0.834632158279419, 0.8362171649932861, 0.8376700282096863, 0.8408400416374207, 0.843481719493866, 0.8477083444595337, 0.8532558679580688, 0.8576145768165588, 0.8555012345314026, 0.8551049828529358, 0.8627657890319824, 0.8668603897094727, 0.8626337051391602, 0.8673887252807617, 0.8656716346740723, 0.8734645247459412, 0.8747853636741638, 0.8708229064941406, 0.8768987059593201, 0.8754457831382751, 0.8805969953536987, 0.8790120482444763, 0.8845595121383667, 0.8841632604598999, 0.8835028409957886, 0.886672854423523, 0.8910315632820129, 0.8899748921394348, 0.8862766027450562, 0.8949940800666809, 0.8947299122810364], "val_loss": [2.038520574569702, 1.509766936302185, 1.0343832969665527, 0.8267091512680054, 0.7417742609977722, 0.6766666769981384, 0.6414458155632019, 0.6046456694602966, 0.5773513317108154, 0.5557442903518677, 0.5384941101074219, 0.5288568735122681, 0.5101924538612366, 0.49700552225112915, 0.4921157956123352, 0.4775182604789734, 0.4682512879371643, 0.46129220724105835, 0.4530986249446869, 0.4480533003807068, 0.4398156702518463, 0.442574143409729, 0.42993050813674927, 0.42368799448013306, 0.4147815406322479, 0.4118765890598297, 0.4108446538448334, 0.4079454839229584, 0.4008583128452301, 0.40139859914779663, 0.3936733305454254, 0.3912695348262787, 0.38694867491722107, 0.38763514161109924, 0.38499683141708374, 0.37854981422424316, 0.38148245215415955, 0.37612906098365784, 0.3700931668281555, 0.3686083257198334, 0.3721092641353607, 0.36572858691215515, 0.36085930466651917, 0.3675052225589752, 0.36343148350715637, 0.35589078068733215, 0.3559216260910034, 0.3566790223121643, 0.35173559188842773, 0.355183869600296, 0.3565167784690857], "val_accuracy": [0.5519999861717224, 0.6660000085830688, 0.6853333115577698, 0.7133333086967468, 0.7276666760444641, 0.7506666779518127, 0.7573333382606506, 0.7673333287239075, 0.7860000133514404, 0.7919999957084656, 0.8006666898727417, 0.800000011920929, 0.809333324432373, 0.8230000138282776, 0.8233333230018616, 0.8273333311080933, 0.8320000171661377, 0.8363333344459534, 0.8410000205039978, 0.8396666646003723, 0.8396666646003723, 0.8370000123977661, 0.8450000286102295, 0.843999981880188, 0.8503333330154419, 0.8496666550636292, 0.8483333587646484, 0.8516666889190674, 0.8506666421890259, 0.8516666889190674, 0.8543333411216736, 0.8560000061988831, 0.8566666841506958, 0.8569999933242798, 0.8550000190734863, 0.859666645526886, 0.8586666584014893, 0.859333336353302, 0.862666666507721, 0.8619999885559082, 0.856333315372467, 0.8633333444595337, 0.8650000095367432, 0.8600000143051147, 0.8616666793823242, 0.8683333396911621, 0.8656666874885559, 0.8663333058357239, 0.8666666746139526, 0.8683333396911621, 0.8673333525657654]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 4, 6, 8, 6, 2, 6, 8], [0, 4, 4, 7, 5, 5, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.840571403503418, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(grad, grad), grad), tf.math.sqrt(grad))), grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294175148010254, 2.192004919052124, 1.7755060195922852, 1.3469394445419312, 1.0475372076034546, 0.9172074794769287, 0.8519566655158997, 0.8123098611831665, 0.7635231018066406, 0.7411103844642639, 0.6961106061935425, 0.6596074104309082, 0.635958194732666, 0.604603111743927, 0.5840708613395691, 0.5708164572715759, 0.5621756911277771, 0.5501325726509094, 0.5469426512718201, 0.5381695032119751, 0.5245652794837952, 0.5202604532241821, 0.5167058706283569, 0.5037472248077393, 0.4843980669975281, 0.47298744320869446, 0.4663475453853607, 0.4582243859767914, 0.4498754143714905, 0.4419723451137543, 0.4363314211368561, 0.4271559417247772, 0.4192269444465637, 0.4141254127025604, 0.3930392563343048, 0.39006972312927246, 0.38053369522094727, 0.3864935040473938, 0.3658320903778076, 0.3764533996582031, 0.3734629452228546, 0.36223846673965454, 0.3574914038181305, 0.35870033502578735, 0.3459398150444031, 0.3471554219722748, 0.35800665616989136, 0.3399308919906616], "accuracy": [0.12996962666511536, 0.3255844712257385, 0.4364020526409149, 0.550521731376648, 0.6399418711662292, 0.6572447419166565, 0.6927750706672668, 0.7119271159172058, 0.711530864238739, 0.7269845604896545, 0.7401928305625916, 0.7486461400985718, 0.7586844563484192, 0.7696473598480225, 0.780610203742981, 0.783119797706604, 0.783119797706604, 0.785629391670227, 0.7947431206703186, 0.7959318161010742, 0.7985734939575195, 0.8068947196006775, 0.8107251524925232, 0.81112140417099, 0.819442629814148, 0.8212917447090149, 0.8128384351730347, 0.8202351331710815, 0.8230088353157043, 0.8310658931732178, 0.8315942287445068, 0.8389908671379089, 0.8444063067436218, 0.8381983637809753, 0.8449346423149109, 0.8539162874221802, 0.852331280708313, 0.8487650156021118, 0.8562937378883362, 0.8560295701026917, 0.857218325138092, 0.8588033318519592, 0.8648791313171387, 0.8615770936012268, 0.8668603897094727, 0.8676528930664062, 0.8646149635314941, 0.8597279191017151], "val_loss": [2.2465662956237793, 2.0233235359191895, 1.1492313146591187, 0.8564370274543762, 0.7672044038772583, 0.7335365414619446, 0.7114014625549316, 0.663134753704071, 0.6334838271141052, 0.6152262687683105, 0.5835607051849365, 0.5488861203193665, 0.5286001563072205, 0.5210851430892944, 0.5120348930358887, 0.5011146664619446, 0.4975369870662689, 0.4892345666885376, 0.49270159006118774, 0.4756820499897003, 0.4799956977367401, 0.4801383316516876, 0.4661058783531189, 0.45844799280166626, 0.45243823528289795, 0.4511079788208008, 0.4411103427410126, 0.4344000220298767, 0.44136548042297363, 0.42381641268730164, 0.42417654395103455, 0.4270070493221283, 0.4208410382270813, 0.41913118958473206, 0.41633862257003784, 0.4237655699253082, 0.41847437620162964, 0.40173831582069397, 0.4150426983833313, 0.4192366600036621, 0.4156849682331085, 0.4320620894432068, 0.40582433342933655, 0.3936745226383209, 0.41165220737457275, 0.41457828879356384, 0.40106669068336487, 0.3987957239151001], "val_accuracy": [0.4350000023841858, 0.4860000014305115, 0.6466666460037231, 0.6923333406448364, 0.7120000123977661, 0.7316666841506958, 0.746666669845581, 0.7436666488647461, 0.7630000114440918, 0.762333333492279, 0.7703333497047424, 0.7836666703224182, 0.7946666479110718, 0.7963333129882812, 0.8046666383743286, 0.8029999732971191, 0.812333345413208, 0.8230000138282776, 0.8133333325386047, 0.8143333196640015, 0.8266666531562805, 0.8209999799728394, 0.8333333134651184, 0.8330000042915344, 0.8330000042915344, 0.8299999833106995, 0.828000009059906, 0.8356666564941406, 0.8423333168029785, 0.8453333377838135, 0.8489999771118164, 0.8460000157356262, 0.8493333458900452, 0.8523333072662354, 0.8510000109672546, 0.8539999723434448, 0.8556666374206543, 0.8619999885559082, 0.8629999756813049, 0.862666666507721, 0.862333357334137, 0.8566666841506958, 0.8673333525657654, 0.8663333058357239, 0.8653333187103271, 0.8653333187103271, 0.859000027179718, 0.8659999966621399]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 16, 9, 7, 1, 2, 1, 1, 0], "tree_depth": 19}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1], [0, 3, 1, 9], [0, 7], [0, 69], [1], [0], [2], [0]], "fitness": -0.8254285454750061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5456212759017944, 0.8258790373802185, 0.6694107055664062, 0.6035056710243225, 0.5532534718513489, 0.5292231440544128, 0.5260322690010071, 0.5003179311752319, 0.4931098222732544, 0.48774296045303345, 0.46428248286247253, 0.47044679522514343], "accuracy": [0.4807819426059723, 0.7069079279899597, 0.7524765729904175, 0.7815347909927368, 0.7972526550292969, 0.8103289008140564, 0.8013472557067871, 0.8183859586715698, 0.817461371421814, 0.8248580098152161, 0.8301413059234619, 0.8457271456718445], "val_loss": [0.847581148147583, 0.6356368660926819, 0.534110426902771, 0.4981180727481842, 0.4948175549507141, 0.4848628044128418, 0.4498269557952881, 0.4852750599384308, 0.49136587977409363, 0.5287529826164246, 0.48877912759780884, 0.5412724018096924], "val_accuracy": [0.703000009059906, 0.7893333435058594, 0.8103333115577698, 0.8289999961853027, 0.8273333311080933, 0.8363333344459534, 0.8456666469573975, 0.8383333086967468, 0.8379999995231628, 0.828000009059906, 0.8403333425521851, 0.8399999737739563]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 6, 4, 2, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 5, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [76], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 0, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 8, 5, 3, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3044824600219727, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 4, 3], [0, 1, 2, 2, 0], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 0, 0, 1], [3, 5, 0], [0, 3], [17], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 0, 2, 2, 2, 4, 2, 4, 0, 4, 2, 0, 9, 9, 2], [0, 0, 4, 3, 0, 4, 3, 1, 2, 0, 4, 4, 6, 3, 3, 3, 7], [16, 99, 58, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 10, 6, 4, 2, 5, 3, 2, 1, 42, 25, 17, 6], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(grad, grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(grad, tf.math.pow(tf.math.add(tf.math.sqrt(sigma), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(tf.math.add(sigma, alpha))))), tf.math.add(tf.math.add(tf.math.pow(beta, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.negative(tf.math.pow(tf.math.add(grad, grad), sigma))))), tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), sigma), tf.math.add(sigma, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 5, 3, 1, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [1, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 1, 7, 7, 1, 6, 7, 1, 7, 2, 9, 5, 5, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 3, 0, 2, 3, 4, 0, 2, 6], [18, 99, 96, 99, 61, 1, 31, 47, 63]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 1, 1, 0, 1, 0, 41, 23, 18, 9], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.subtract(tf.math.add(alpha, beta), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.square(sigma))), grad), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))))), tf.math.square(beta)), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 3, 1, 0], [3, 3, 0, 2, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 9, 9, 5], [0, 4, 0, 3], [0, 84], [0, 1], [0], [0], [43], [0, 1, 0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0, 0, 62]], "fitness": -0.09057142585515976, "mapping_values": [1, 2, 1, 1, 0, 6, 4, 2, 2, 2, 1, 1, 1, 7, 3, 4, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.3087058067321777, 2.3102211952209473, 2.3106658458709717, 2.3106048107147217, 2.309953451156616, 2.310819625854492], "accuracy": [0.09232597798109055, 0.0886276587843895, 0.09100515395402908, 0.08942015469074249, 0.09509972482919693, 0.0936468094587326], "val_loss": [2.3080220222473145, 2.3080220222473145, 2.3080220222473145, 2.3080220222473145, 2.3080220222473145, 2.3080220222473145], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]