[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8597142696380615, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2209818363189697, 1.8640027046203613, 1.3974183797836304, 1.0850839614868164, 0.9302647113800049, 0.8386192917823792, 0.7708296775817871, 0.7266650795936584, 0.6950924396514893, 0.6546342372894287, 0.6344090104103088, 0.6145857572555542, 0.5806481838226318, 0.5674817562103271, 0.5588893890380859, 0.5492819547653198, 0.5272842645645142, 0.5172579288482666, 0.5096859335899353, 0.49025553464889526, 0.486135870218277, 0.4756930470466614, 0.46748748421669006, 0.4539223909378052, 0.4521133005619049, 0.44355493783950806, 0.4371647238731384, 0.42665523290634155, 0.41960620880126953, 0.40561985969543457, 0.41074398159980774, 0.3949671685695648, 0.3940308094024658, 0.3927179276943207, 0.38403138518333435, 0.3756813108921051, 0.3774385452270508, 0.36653032898902893, 0.35683098435401917, 0.3608238101005554, 0.3431078791618347, 0.3483334183692932, 0.3312220871448517, 0.33379295468330383, 0.32393577694892883, 0.3264668583869934, 0.3230920433998108, 0.3188363015651703], "accuracy": [0.28661999106407166, 0.49214106798171997, 0.5643904209136963, 0.6247523427009583, 0.6692643165588379, 0.700171709060669, 0.7244749665260315, 0.7366266250610352, 0.7477215528488159, 0.7640998363494873, 0.767401933670044, 0.7755910754203796, 0.7884030938148499, 0.7952714562416077, 0.8013472557067871, 0.8103289008140564, 0.8103289008140564, 0.8171972036361694, 0.8190463781356812, 0.8249900937080383, 0.8273676037788391, 0.832650899887085, 0.8367455005645752, 0.8388587832450867, 0.8412362933158875, 0.8444063067436218, 0.8457271456718445, 0.8455950617790222, 0.8511425256729126, 0.8537842035293579, 0.8535200357437134, 0.8599920868873596, 0.863558292388916, 0.8602562546730042, 0.86118084192276, 0.8669924736022949, 0.8692378997802734, 0.870030403137207, 0.8696341514587402, 0.8709549307823181, 0.8771628737449646, 0.8754457831382751, 0.8784837126731873, 0.8825782537460327, 0.8858803510665894, 0.8860124349594116, 0.8862766027450562, 0.8858803510665894], "val_loss": [2.034858465194702, 1.5076016187667847, 1.0309315919876099, 0.8238593935966492, 0.7363388538360596, 0.683617115020752, 0.6414682865142822, 0.6050836443901062, 0.5826584696769714, 0.5579090714454651, 0.54572993516922, 0.530210018157959, 0.5077654719352722, 0.49936172366142273, 0.48925766348838806, 0.4800508916378021, 0.46910399198532104, 0.4661557972431183, 0.4553382992744446, 0.44866690039634705, 0.4428974986076355, 0.4371556043624878, 0.4321196377277374, 0.43174639344215393, 0.4230819046497345, 0.42336052656173706, 0.4130362570285797, 0.421358197927475, 0.4102506935596466, 0.40928414463996887, 0.40591952204704285, 0.39853861927986145, 0.3955264091491699, 0.3923889100551605, 0.40536490082740784, 0.39265674352645874, 0.38518136739730835, 0.3870786130428314, 0.38114988803863525, 0.3760312497615814, 0.38280266523361206, 0.38074803352355957, 0.3774084448814392, 0.37606990337371826, 0.37476253509521484, 0.3793918788433075, 0.3835155963897705, 0.37976351380348206], "val_accuracy": [0.5519999861717224, 0.6516666412353516, 0.6803333163261414, 0.7096666693687439, 0.7360000014305115, 0.7490000128746033, 0.762333333492279, 0.7736666798591614, 0.7919999957084656, 0.7963333129882812, 0.79666668176651, 0.8116666674613953, 0.8209999799728394, 0.8226666450500488, 0.8240000009536743, 0.8263333439826965, 0.8376666903495789, 0.831333339214325, 0.8366666436195374, 0.8383333086967468, 0.8426666855812073, 0.8450000286102295, 0.8463333249092102, 0.843999981880188, 0.8456666469573975, 0.8476666808128357, 0.8516666889190674, 0.8446666598320007, 0.8453333377838135, 0.8460000157356262, 0.8500000238418579, 0.8519999980926514, 0.8569999933242798, 0.8586666584014893, 0.847000002861023, 0.8556666374206543, 0.8583333492279053, 0.8556666374206543, 0.862666666507721, 0.8610000014305115, 0.8553333282470703, 0.8619999885559082, 0.8629999756813049, 0.8600000143051147, 0.8619999885559082, 0.8616666793823242, 0.859000027179718, 0.862333357334137]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8485714197158813, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293355703353882, 2.189061403274536, 1.7693090438842773, 1.307604193687439, 1.0752862691879272, 0.882125735282898, 0.8290219306945801, 0.8138659596443176, 0.7592475414276123, 0.730237603187561, 0.7104716897010803, 0.6625429391860962, 0.6664827466011047, 0.6291719079017639, 0.5998159646987915, 0.5866020321846008, 0.5679821968078613, 0.5462959408760071, 0.5379347801208496, 0.5294667482376099, 0.5123211741447449, 0.5126320719718933, 0.4845370948314667, 0.4971638321876526, 0.47695475816726685, 0.46699219942092896, 0.4632970988750458, 0.44997546076774597, 0.4425904452800751, 0.4426003396511078, 0.4224894940853119, 0.4152251183986664, 0.41420191526412964, 0.3989569842815399, 0.4001956880092621, 0.38229992985725403, 0.39309778809547424, 0.39294376969337463, 0.36469781398773193, 0.3712182343006134, 0.3587310016155243, 0.3472818434238434, 0.3467147946357727, 0.34920886158943176, 0.34002214670181274, 0.33398309350013733, 0.33025431632995605, 0.33430999517440796], "accuracy": [0.12996962666511536, 0.32584863901138306, 0.431779146194458, 0.5525029897689819, 0.6408664584159851, 0.6798309087753296, 0.6966054439544678, 0.6996433734893799, 0.7078325152397156, 0.7149649858474731, 0.7276449799537659, 0.7548540234565735, 0.7519482374191284, 0.759080708026886, 0.7734777331352234, 0.7817989587783813, 0.7819310426712036, 0.7928939461708069, 0.7979130744934082, 0.8029322624206543, 0.8050455451011658, 0.806630551815033, 0.816008448600769, 0.8164047002792358, 0.8177255392074585, 0.8227446675300598, 0.8226125836372375, 0.8296129703521729, 0.8315942287445068, 0.8313300609588623, 0.8424250483512878, 0.8437458872795105, 0.8473120927810669, 0.8490291833877563, 0.8488970994949341, 0.8511425256729126, 0.8504821062088013, 0.8553691506385803, 0.86118084192276, 0.8527275323867798, 0.8590674996376038, 0.8661999702453613, 0.8643507957458496, 0.8685774803161621, 0.8639545440673828, 0.8696341514587402, 0.8704266548156738, 0.8704266548156738], "val_loss": [2.246328353881836, 2.0192079544067383, 1.1600515842437744, 0.9261775612831116, 0.7461077570915222, 0.7159502506256104, 0.6851086616516113, 0.6720330119132996, 0.640497624874115, 0.6139601469039917, 0.5855334401130676, 0.5927313566207886, 0.5537987351417542, 0.5487810373306274, 0.5442611575126648, 0.5376864671707153, 0.5212724804878235, 0.512148916721344, 0.513616681098938, 0.5088029503822327, 0.5038793087005615, 0.4930896759033203, 0.4870331287384033, 0.4764781892299652, 0.475360631942749, 0.46631598472595215, 0.4597105383872986, 0.4492622911930084, 0.4579934775829315, 0.4567597210407257, 0.45896533131599426, 0.4577195346355438, 0.4456337094306946, 0.43525058031082153, 0.4314488470554352, 0.4360628128051758, 0.43699970841407776, 0.44656670093536377, 0.4365953505039215, 0.4295383393764496, 0.4373857080936432, 0.42880484461784363, 0.425182044506073, 0.431895911693573, 0.4275708794593811, 0.4371529817581177, 0.4255138337612152, 0.41863709688186646], "val_accuracy": [0.4153333306312561, 0.4390000104904175, 0.6420000195503235, 0.6866666674613953, 0.7333333492279053, 0.7360000014305115, 0.7456666827201843, 0.7513333559036255, 0.7580000162124634, 0.7710000276565552, 0.7826666831970215, 0.7793333530426025, 0.7896666526794434, 0.7873333096504211, 0.7940000295639038, 0.8029999732971191, 0.8106666803359985, 0.8190000057220459, 0.8196666836738586, 0.8296666741371155, 0.8223333358764648, 0.8240000009536743, 0.828000009059906, 0.8356666564941406, 0.8370000123977661, 0.8413333296775818, 0.8416666388511658, 0.8456666469573975, 0.8420000076293945, 0.8456666469573975, 0.8483333587646484, 0.8489999771118164, 0.8523333072662354, 0.8519999980926514, 0.8539999723434448, 0.8510000109672546, 0.8486666679382324, 0.8576666712760925, 0.8576666712760925, 0.8576666712760925, 0.8546666502952576, 0.8586666584014893, 0.8636666536331177, 0.862666666507721, 0.8633333444595337, 0.8610000014305115, 0.862666666507721, 0.862666666507721]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5679433345794678, 0.8215082883834839, 0.6694124341011047, 0.61829674243927, 0.5910815000534058, 0.5572081208229065, 0.5279249548912048, 0.5370903015136719, 0.5099909901618958, 0.5010259747505188, 0.4899556636810303, 0.49569618701934814], "accuracy": [0.45872408151626587, 0.7187954187393188, 0.7512878179550171, 0.7744023203849792, 0.7773081660270691, 0.8005547523498535, 0.8029322624206543, 0.8119139075279236, 0.8148196935653687, 0.8247259259223938, 0.8210275769233704, 0.8191784620285034], "val_loss": [0.8888804316520691, 0.6255298256874084, 0.5691274404525757, 0.535493791103363, 0.5068753361701965, 0.5184187293052673, 0.5028131008148193, 0.4939030408859253, 0.5161011219024658, 0.53647381067276, 0.5255311727523804, 0.5342922806739807], "val_accuracy": [0.6793333292007446, 0.7836666703224182, 0.7910000085830688, 0.796999990940094, 0.8233333230018616, 0.8209999799728394, 0.8343333601951599, 0.8299999833106995, 0.8309999704360962, 0.8209999799728394, 0.8263333439826965, 0.8296666741371155]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 8, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [1, 2, 0, 1], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 4, 4, 6, 8, 1, 4, 1, 4, 2, 8, 2, 7, 2, 8, 5, 1, 1, 7, 0, 7, 2, 1, 0, 9, 9, 8, 8, 6, 5, 3, 8, 1, 9, 6], [0, 0, 0, 3, 0, 0, 4, 1, 2, 2, 1, 7, 2, 4, 7, 7, 6, 4, 7, 4], [16, 30, 96, 99, 61, 1, 59, 33]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 55, 35, 20, 8], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, beta)))))), tf.math.add(tf.math.add(tf.math.sqrt(beta), tf.math.square(tf.math.subtract(alpha, tf.math.subtract(grad, tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.negative(grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.sqrt(grad))))))), tf.math.divide_no_nan(tf.math.square(tf.math.multiply(grad, tf.math.sqrt(tf.math.subtract(grad, grad)))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(grad, grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 1, 0, 2], [83, 69, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [1, 2, 4, 1, 3, 1, 3, 3, 1, 0, 5, 2, 2, 0, 4, 4, 1, 2, 4, 0, 0, 4, 2, 5, 3, 4, 1, 5, 4, 5, 5, 3, 4, 3, 1, 5, 3, 4, 0, 3, 2, 1], [78, 16], [0, 0, 1, 0, 0], [2, 0, 5, 9], [0], [99, 62], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 0, 7, 0, 6, 6, 3, 1, 1, 5], [16, 62, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 10, 6, 4, 0, 5, 4, 1, 2, 16, 9, 7, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), beta), tf.math.multiply(grad, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, tf.math.pow(grad, sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 1, 3, 0, 8, 5], [0, 2, 0, 3], [16, 60], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [4, 3, 6, 3, 2, 9, 0, 6, 2, 0, 9, 8, 0, 8, 3, 4, 0, 8, 0], [0, 5, 3, 4, 4, 1, 7, 3], [99, 5, 74], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 36]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 27, 19, 8, 3, 10, 5, 5, 3], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma)), tf.math.negative(grad))))), grad), tf.math.sqrt(tf.math.multiply(tf.math.pow(tf.math.negative(tf.math.sqrt(alpha)), grad), tf.math.negative(sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 8, 3, 2, 8, 0], [0, 6, 2], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 9, 3, 6, 8, 1, 8, 1, 4, 2, 8], [1, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.0917142853140831, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 9, 6, 3, 1, 3, 2, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), grad), tf.math.negative(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3597833256381522e+21, 2.6734484843728806e+21, 2.6034231396668036e+21, 2.70388043295493e+21, 2.6976021335993987e+21, 2.630983199061474e+21], "accuracy": [0.07660810649394989, 0.07687227427959442, 0.07885351777076721, 0.07687227427959442, 0.0816272646188736, 0.0796460211277008], "val_loss": [2.407743143232439e+21, 2.407743143232439e+21, 2.407743143232439e+21, 2.407743143232439e+21, 2.407743143232439e+21, 2.407743143232439e+21], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]