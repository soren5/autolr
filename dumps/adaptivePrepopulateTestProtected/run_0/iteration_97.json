[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8671428561210632, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221858501434326, 1.8707243204116821, 1.4044020175933838, 1.107272982597351, 0.9481082558631897, 0.8426503539085388, 0.778335690498352, 0.7363786697387695, 0.6943578720092773, 0.666684627532959, 0.6354128122329712, 0.6132850050926208, 0.5889173746109009, 0.572993278503418, 0.5601911544799805, 0.5439714193344116, 0.5403439402580261, 0.5189041495323181, 0.5065863728523254, 0.5017976760864258, 0.49372994899749756, 0.48108401894569397, 0.47197139263153076, 0.45911797881126404, 0.4566797614097595, 0.4467526972293854, 0.43789273500442505, 0.42869728803634644, 0.42552757263183594, 0.4167090654373169, 0.4137903153896332, 0.40328487753868103, 0.39597421884536743, 0.3847135007381439, 0.38904571533203125, 0.3792126476764679, 0.3771726191043854, 0.3739885091781616, 0.36560457944869995, 0.35901638865470886, 0.35807278752326965, 0.3447917103767395, 0.3445129692554474, 0.3422461748123169, 0.34077316522598267, 0.3239039182662964, 0.33561044931411743, 0.32720324397087097, 0.32025566697120667, 0.30707040429115295, 0.31768953800201416, 0.3033374547958374, 0.30120572447776794, 0.3010362684726715, 0.2973462641239166, 0.28623706102371216, 0.283469557762146, 0.28001174330711365, 0.2751273214817047, 0.2775133550167084, 0.2637009918689728, 0.27689942717552185, 0.2708445191383362, 0.2571535110473633], "accuracy": [0.2767137885093689, 0.48329150676727295, 0.5653150081634521, 0.6100911498069763, 0.6643772125244141, 0.6995112895965576, 0.7210407853126526, 0.7277770638465881, 0.7481178045272827, 0.7549861073493958, 0.7677981853485107, 0.7794214487075806, 0.7819310426712036, 0.7923656105995178, 0.7923656105995178, 0.8021397590637207, 0.8045172095298767, 0.8100647330284119, 0.8169330358505249, 0.8156121969223022, 0.8257825970649719, 0.8265751004219055, 0.8302733898162842, 0.8338396549224854, 0.8368775844573975, 0.8314621448516846, 0.8413683772087097, 0.8442742228507996, 0.8441421389579773, 0.8469158411026001, 0.8510104417800903, 0.8584070801734924, 0.8556333184242249, 0.8615770936012268, 0.8603883385658264, 0.8625016212463379, 0.8634262084960938, 0.8642187118530273, 0.8664641380310059, 0.8708229064941406, 0.8713511824607849, 0.872407853603363, 0.8745211958885193, 0.8770307898521423, 0.8755778670310974, 0.8823140859603882, 0.8778232932090759, 0.8782195448875427, 0.8850878477096558, 0.8873332738876343, 0.8849557638168335, 0.8918240666389465, 0.889050304889679, 0.8879936337471008, 0.891559898853302, 0.8924844861030579, 0.8963148593902588, 0.8973715305328369, 0.897899866104126, 0.898428201675415, 0.9021265506744385, 0.8973715305328369, 0.9025228023529053, 0.906749427318573], "val_loss": [2.0406484603881836, 1.5161290168762207, 1.0409181118011475, 0.8380329012870789, 0.746588945388794, 0.6931132078170776, 0.6519774198532104, 0.616772472858429, 0.5929140448570251, 0.5657063126564026, 0.5542270541191101, 0.5364634394645691, 0.5202130079269409, 0.5050389766693115, 0.4982073903083801, 0.48629626631736755, 0.4824313223361969, 0.4692738950252533, 0.46301740407943726, 0.46013927459716797, 0.4535168409347534, 0.44141536951065063, 0.43847277760505676, 0.4355125427246094, 0.4288604259490967, 0.42534032464027405, 0.4194498658180237, 0.42180049419403076, 0.41547006368637085, 0.4089759588241577, 0.406830757856369, 0.39866623282432556, 0.3996444046497345, 0.3939036428928375, 0.3868807256221771, 0.38548511266708374, 0.38342294096946716, 0.38289180397987366, 0.37462329864501953, 0.3766166865825653, 0.37288403511047363, 0.3673056960105896, 0.36637386679649353, 0.36618196964263916, 0.3684897720813751, 0.3660965859889984, 0.35716065764427185, 0.36184144020080566, 0.3599848747253418, 0.36117032170295715, 0.35528260469436646, 0.3525344133377075, 0.35340410470962524, 0.34888777136802673, 0.3488500118255615, 0.3496299982070923, 0.34130093455314636, 0.34334683418273926, 0.3419111371040344, 0.337609201669693, 0.3448241055011749, 0.3399387300014496, 0.339760959148407, 0.33522218465805054], "val_accuracy": [0.5550000071525574, 0.6669999957084656, 0.6796666383743286, 0.7073333263397217, 0.731333315372467, 0.7573333382606506, 0.7609999775886536, 0.7730000019073486, 0.7833333611488342, 0.7979999780654907, 0.7986666560173035, 0.7986666560173035, 0.8106666803359985, 0.8236666917800903, 0.8216666579246521, 0.8256666660308838, 0.8330000042915344, 0.8336666822433472, 0.8379999995231628, 0.8433333039283752, 0.8386666774749756, 0.8476666808128357, 0.8496666550636292, 0.8500000238418579, 0.8496666550636292, 0.8500000238418579, 0.8560000061988831, 0.8523333072662354, 0.8556666374206543, 0.8586666584014893, 0.8569999933242798, 0.8619999885559082, 0.859333336353302, 0.8600000143051147, 0.8659999966621399, 0.8633333444595337, 0.8673333525657654, 0.8610000014305115, 0.8700000047683716, 0.8659999966621399, 0.8673333525657654, 0.8706666827201843, 0.871666669845581, 0.8706666827201843, 0.8683333396911621, 0.8743333220481873, 0.8730000257492065, 0.8740000128746033, 0.8736666440963745, 0.8700000047683716, 0.8776666522026062, 0.8736666440963745, 0.8786666393280029, 0.8769999742507935, 0.8813333511352539, 0.8826666474342346, 0.878333330154419, 0.8796666860580444, 0.8833333253860474, 0.8813333511352539, 0.8796666860580444, 0.8786666393280029, 0.8813333511352539, 0.8833333253860474]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 6], [0, 0], [0, 70], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 2, 8, 2, 1, 5], [0, 4, 3, 2], [0], [0, 1], [0], [1], [0]], "fitness": -0.8568571209907532, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, sigma))), tf.math.square(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2935473918914795, 2.1892359256744385, 1.7744373083114624, 1.348359227180481, 1.0647108554840088, 0.9028461575508118, 0.8219959735870361, 0.7982436418533325, 0.7490684390068054, 0.7301034331321716, 0.6852366328239441, 0.6830018758773804, 0.6471905708312988, 0.6191337704658508, 0.5939533114433289, 0.5868530869483948, 0.5722513198852539, 0.5725040435791016, 0.5337768197059631, 0.5337293744087219, 0.5142667889595032, 0.509940505027771, 0.496171772480011, 0.5045313239097595, 0.49040472507476807, 0.4748243987560272, 0.4708027243614197, 0.4487767517566681, 0.446196049451828, 0.4377577602863312, 0.43241262435913086, 0.41412854194641113, 0.41893666982650757, 0.3886740207672119, 0.4120149612426758, 0.4073393940925598, 0.39589887857437134, 0.3840125799179077, 0.37835410237312317, 0.3781623840332031, 0.3716107904911041, 0.3645535707473755, 0.35675784945487976, 0.3644612431526184, 0.35716816782951355], "accuracy": [0.13393211364746094, 0.33060362935066223, 0.4367983043193817, 0.5439175963401794, 0.6288469433784485, 0.6654338836669922, 0.6923788189888, 0.700700044631958, 0.707040011882782, 0.7152291536331177, 0.7281733155250549, 0.7411174178123474, 0.7473253011703491, 0.7577598690986633, 0.7668735980987549, 0.7729493975639343, 0.780610203742981, 0.7777044177055359, 0.7940827012062073, 0.7985734939575195, 0.8004226684570312, 0.7979130744934082, 0.8062343001365662, 0.7994980812072754, 0.81112140417099, 0.8120459914207458, 0.8156121969223022, 0.824329674243927, 0.8294808864593506, 0.8297450542449951, 0.83119797706604, 0.8367455005645752, 0.8381983637809753, 0.8474441766738892, 0.8388587832450867, 0.8393871188163757, 0.8455950617790222, 0.8527275323867798, 0.8545766472816467, 0.8580108284950256, 0.8527275323867798, 0.8561616539955139, 0.8590674996376038, 0.8601241707801819, 0.8598600029945374], "val_loss": [2.247602939605713, 2.0281569957733154, 1.1492104530334473, 0.9058263301849365, 0.7749849557876587, 0.7215114831924438, 0.67910236120224, 0.6685338020324707, 0.6488800644874573, 0.6191596984863281, 0.5922199487686157, 0.5648624897003174, 0.5502569675445557, 0.5346611142158508, 0.5378954410552979, 0.5218755006790161, 0.521150529384613, 0.5110857486724854, 0.4974122643470764, 0.4909544587135315, 0.4822400212287903, 0.47461074590682983, 0.47735539078712463, 0.47409382462501526, 0.45736101269721985, 0.45038172602653503, 0.4540172517299652, 0.44400668144226074, 0.43342798948287964, 0.43293944001197815, 0.4246843755245209, 0.41942691802978516, 0.4164496660232544, 0.4210394024848938, 0.4245874881744385, 0.4163806140422821, 0.41441431641578674, 0.415194571018219, 0.42589905858039856, 0.4140416979789734, 0.40215688943862915, 0.4024128019809723, 0.4166274964809418, 0.42930760979652405, 0.41904911398887634], "val_accuracy": [0.4180000126361847, 0.46433332562446594, 0.6596666574478149, 0.6919999718666077, 0.6919999718666077, 0.7223333120346069, 0.7336666584014893, 0.7293333411216736, 0.7396666407585144, 0.7680000066757202, 0.7603333592414856, 0.7829999923706055, 0.7913333177566528, 0.8019999861717224, 0.8016666769981384, 0.8046666383743286, 0.8043333292007446, 0.8076666593551636, 0.8109999895095825, 0.8209999799728394, 0.8233333230018616, 0.8259999752044678, 0.8259999752044678, 0.8293333053588867, 0.8379999995231628, 0.8376666903495789, 0.8379999995231628, 0.8396666646003723, 0.847000002861023, 0.8506666421890259, 0.8566666841506958, 0.8636666536331177, 0.8633333444595337, 0.8646666407585144, 0.8553333282470703, 0.8586666584014893, 0.8586666584014893, 0.8610000014305115, 0.8683333396911621, 0.8700000047683716, 0.8666666746139526, 0.8640000224113464, 0.8640000224113464, 0.862666666507721, 0.8656666874885559]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 2, 10, 6, 4, 1, 2, 1, 1, 0], "tree_depth": 13}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 7, 5, 6, 3, 1, 2, 7, 3], [0, 1, 7, 2, 6, 7, 3, 5], [0], [1], [0], [2], [0]], "fitness": -0.8368571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(alpha, grad), beta), tf.math.add(tf.math.add(grad, tf.math.multiply(grad, sigma)), grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5400258302688599, 0.8361514210700989, 0.6790532469749451, 0.6299378871917725, 0.5978879332542419, 0.5621396899223328, 0.5592944622039795, 0.5069555044174194, 0.5024343132972717, 0.473538875579834, 0.4657420217990875, 0.48630204796791077, 0.4943058490753174, 0.4922318458557129, 0.4958021640777588, 0.4716915786266327, 0.47881796956062317, 0.5048066973686218, 0.5082938075065613, 0.5251891016960144, 0.5225839018821716, 0.5201983451843262, 0.49895575642585754], "accuracy": [0.4831594228744507, 0.7062475085258484, 0.7518161535263062, 0.7658169269561768, 0.7779685854911804, 0.7972526550292969, 0.7959318161010742, 0.8104609847068787, 0.8146876096725464, 0.8280280232429504, 0.828292191028595, 0.8234050869941711, 0.8264430165290833, 0.8231409192085266, 0.8193105459213257, 0.830669641494751, 0.8363492488861084, 0.8272355198860168, 0.8367455005645752, 0.8274996876716614, 0.8264430165290833, 0.8281601071357727, 0.8290846943855286], "val_loss": [0.8218421339988708, 0.6529886722564697, 0.5816922783851624, 0.541679859161377, 0.5493509769439697, 0.5276325941085815, 0.5191991329193115, 0.5124735236167908, 0.529616117477417, 0.4965261220932007, 0.543676495552063, 0.5236721038818359, 0.5998858213424683, 0.571651041507721, 0.5468266010284424, 0.593629777431488, 0.5743921399116516, 0.6612431406974792, 0.6269505023956299, 0.6844384670257568, 0.610272228717804, 0.6091678738594055, 0.6233645677566528], "val_accuracy": [0.7276666760444641, 0.7633333206176758, 0.7950000166893005, 0.8073333501815796, 0.7973333597183228, 0.8119999766349792, 0.8216666579246521, 0.8273333311080933, 0.8306666612625122, 0.8346666693687439, 0.8389999866485596, 0.8233333230018616, 0.8416666388511658, 0.8306666612625122, 0.8306666612625122, 0.8423333168029785, 0.8316666483879089, 0.8433333039283752, 0.8176666498184204, 0.8389999866485596, 0.8349999785423279, 0.8416666388511658, 0.8396666646003723]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 17, 9, 8, 1, 1, 0, 1, 0], "tree_depth": 15}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 1, 3, 5, 8, 0, 4, 4, 5, 7, 0], [0, 2, 0, 3, 5, 2, 3, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [1, 3, 3, 1, 8, 1, 4, 1, 4, 2, 8, 0], [0, 0, 0, 3, 0, 0, 1, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 21, 13, 8, 2, 2, 1, 1, 1, 22, 12, 10, 6], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.square(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.negative(beta)), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.square(grad), tf.math.add(tf.math.negative(grad), beta)))), grad), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), alpha)), tf.math.sqrt(tf.math.negative(alpha)))), beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 4, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1, 1], [2], [0, 4], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 9, 3, 6, 8, 1, 4, 1, 4, 9, 8], [0, 2, 1, 4, 4, 0, 3, 0, 2, 0], [16, 2, 43, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 0, 3, 1, 2, 1, 8, 5, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(beta), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 4, 3, 0, 3, 1], [0, 1, 0, 0, 0], [39, 39, 62, 19], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 5, 6, 8, 1, 9, 2, 4, 9, 8], [4, 0, 0, 3, 3, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 4, 2, 1, 1, 1, 2, 1, 1, 1, 15, 10, 5, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [5, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 5], [0, 2, 0, 3], [16, 2], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [84, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 1, 0, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]