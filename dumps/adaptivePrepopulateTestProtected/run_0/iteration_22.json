[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 3, 4, 4, 7, 4, 9, 4, 3, 9, 8], [0, 1, 3, 4, 7, 2], [0, 61, 88], [0, 1], [0], [1], [0]], "fitness": -0.8694285750389099, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), alpha), tf.math.pow(tf.math.multiply(sigma, grad), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(grad)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2938008308410645, 2.1907389163970947, 1.779245138168335, 1.3494783639907837, 1.0952287912368774, 0.9319430589675903, 0.8674516677856445, 0.8303878903388977, 0.7753520011901855, 0.7548007369041443, 0.7135081887245178, 0.6844210624694824, 0.6662572026252747, 0.6371467709541321, 0.608115553855896, 0.6014513373374939, 0.581581711769104, 0.577564537525177, 0.5511263608932495, 0.5646957755088806, 0.5431415438652039, 0.550915539264679, 0.5369299054145813, 0.5128499865531921, 0.494112104177475, 0.4860047996044159, 0.47539445757865906, 0.46804141998291016, 0.4567670524120331, 0.4492643177509308, 0.44263115525245667, 0.4441446363925934, 0.43396344780921936, 0.42934468388557434, 0.42260462045669556, 0.41796380281448364, 0.4122133255004883, 0.40100201964378357, 0.38853752613067627, 0.39271777868270874, 0.3875424265861511, 0.3627992272377014, 0.3728645443916321], "accuracy": [0.12561088800430298, 0.3230748772621155, 0.44023245573043823, 0.5432571768760681, 0.6338660717010498, 0.6572447419166565, 0.6839255094528198, 0.6930392384529114, 0.700171709060669, 0.7077004313468933, 0.722229540348053, 0.7421740889549255, 0.7386078238487244, 0.752212405204773, 0.7648923397064209, 0.7672698497772217, 0.7770439982414246, 0.7726852297782898, 0.7861577272415161, 0.7839123010635376, 0.7881389260292053, 0.7906485199928284, 0.7923656105995178, 0.8017435073852539, 0.8067626357078552, 0.8121780753135681, 0.8136309385299683, 0.8189142942428589, 0.8226125836372375, 0.8267071843147278, 0.8236692547798157, 0.8318583965301514, 0.83119797706604, 0.834632158279419, 0.8345000743865967, 0.837537944316864, 0.8397833704948425, 0.8451988101005554, 0.848368763923645, 0.848368763923645, 0.8519350290298462, 0.859199583530426, 0.852859616279602], "val_loss": [2.2467024326324463, 2.023221015930176, 1.1516560316085815, 0.8889845609664917, 0.7646446824073792, 0.7079328894615173, 0.678118884563446, 0.6606215834617615, 0.6383339166641235, 0.6324899196624756, 0.586197018623352, 0.5684871673583984, 0.5524278283119202, 0.5362495183944702, 0.5349531769752502, 0.514207124710083, 0.49881118535995483, 0.49670955538749695, 0.511560320854187, 0.4984617531299591, 0.5007957220077515, 0.4842405617237091, 0.48750245571136475, 0.4803454577922821, 0.47761133313179016, 0.46918416023254395, 0.45967206358909607, 0.45456892251968384, 0.4651774764060974, 0.4477096498012543, 0.4526621997356415, 0.4536643326282501, 0.43211719393730164, 0.43253663182258606, 0.4217923581600189, 0.4176986515522003, 0.4364168345928192, 0.4187232255935669, 0.41682296991348267, 0.4368521273136139, 0.4255256652832031, 0.4244650900363922, 0.42383068799972534], "val_accuracy": [0.42100000381469727, 0.4716666638851166, 0.6570000052452087, 0.6886666417121887, 0.7250000238418579, 0.7333333492279053, 0.737666666507721, 0.7426666617393494, 0.7639999985694885, 0.7576666474342346, 0.7693333625793457, 0.7736666798591614, 0.7883333563804626, 0.7903333306312561, 0.8083333373069763, 0.8019999861717224, 0.8153333067893982, 0.8119999766349792, 0.8050000071525574, 0.8109999895095825, 0.812333345413208, 0.8253333568572998, 0.8286666870117188, 0.8276666402816772, 0.828000009059906, 0.8323333263397217, 0.8410000205039978, 0.8403333425521851, 0.8343333601951599, 0.8410000205039978, 0.8413333296775818, 0.8423333168029785, 0.8463333249092102, 0.8489999771118164, 0.8489999771118164, 0.8546666502952576, 0.8500000238418579, 0.8583333492279053, 0.8560000061988831, 0.8526666760444641, 0.8579999804496765, 0.856333315372467, 0.8523333072662354]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 17, 11, 6, 3, 2, 1, 1, 0], "tree_depth": 17}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8665714263916016, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.225924015045166, 1.8662432432174683, 1.4003161191940308, 1.1026315689086914, 0.9432218670845032, 0.8454793691635132, 0.7837321758270264, 0.7449631094932556, 0.7029255032539368, 0.6770216822624207, 0.6446325778961182, 0.6378695964813232, 0.6056298017501831, 0.5902774333953857, 0.5706074833869934, 0.5573393106460571, 0.5513279438018799, 0.5285472869873047, 0.5251337885856628, 0.5193639397621155, 0.4981635510921478, 0.4878838062286377, 0.4800775647163391, 0.46877387166023254, 0.45791488885879517, 0.4552217721939087, 0.4507925808429718, 0.4400022625923157, 0.43673744797706604, 0.4282061755657196, 0.40843263268470764, 0.41577649116516113, 0.4172723591327667, 0.4031173884868622, 0.3877734839916229, 0.3834800720214844, 0.3910926878452301, 0.37637585401535034, 0.3737318515777588, 0.3696069121360779, 0.3663818836212158, 0.3586137890815735, 0.3442770838737488, 0.34301844239234924], "accuracy": [0.2641659080982208, 0.49425438046455383, 0.5563333630561829, 0.6082419753074646, 0.6588297486305237, 0.6946242451667786, 0.7143045663833618, 0.7284374833106995, 0.7380794882774353, 0.7491744756698608, 0.7607977986335754, 0.7675340175628662, 0.7784969210624695, 0.7839123010635376, 0.791969358921051, 0.7921014428138733, 0.7984414100646973, 0.8076872229576111, 0.8088759779930115, 0.8070268034934998, 0.8215559124946594, 0.8236692547798157, 0.8305375576019287, 0.8301413059234619, 0.8352925777435303, 0.8325188159942627, 0.8400475382804871, 0.8381983637809753, 0.842028796672821, 0.8500858545303345, 0.8535200357437134, 0.8518029451370239, 0.8511425256729126, 0.8595958352088928, 0.8621054291725159, 0.8599920868873596, 0.8593316674232483, 0.8701624870300293, 0.8660678863525391, 0.8667283058166504, 0.8696341514587402, 0.873860776424408, 0.878879964351654, 0.8780874609947205], "val_loss": [2.0389888286590576, 1.510500192642212, 1.0335556268692017, 0.8242353796958923, 0.7351962924003601, 0.6779949069023132, 0.6375977993011475, 0.6008249521255493, 0.5762044191360474, 0.5613950490951538, 0.5375980734825134, 0.5248507261276245, 0.5118412971496582, 0.4981519877910614, 0.48848220705986023, 0.4838404953479767, 0.469350129365921, 0.4649661183357239, 0.4593498408794403, 0.45611023902893066, 0.4454910457134247, 0.43443018198013306, 0.43129631876945496, 0.42466169595718384, 0.41945210099220276, 0.4147203862667084, 0.4115462601184845, 0.40997135639190674, 0.40344786643981934, 0.3983711898326874, 0.402809202671051, 0.3927247226238251, 0.3968926668167114, 0.3900853991508484, 0.38728588819503784, 0.39064034819602966, 0.3807084858417511, 0.37702494859695435, 0.37369173765182495, 0.3788969814777374, 0.3715667426586151, 0.3720819354057312, 0.37356314063072205, 0.37813955545425415], "val_accuracy": [0.5503333210945129, 0.6496666669845581, 0.6859999895095825, 0.7086666822433472, 0.7383333444595337, 0.7630000114440918, 0.7670000195503235, 0.7803333401679993, 0.7929999828338623, 0.7879999876022339, 0.8050000071525574, 0.8086666464805603, 0.8113333582878113, 0.8180000185966492, 0.8230000138282776, 0.8233333230018616, 0.8309999704360962, 0.831333339214325, 0.8323333263397217, 0.8346666693687439, 0.8373333215713501, 0.8426666855812073, 0.8483333587646484, 0.8460000157356262, 0.8529999852180481, 0.8493333458900452, 0.8513333201408386, 0.8486666679382324, 0.859666645526886, 0.8550000190734863, 0.859000027179718, 0.856333315372467, 0.8636666536331177, 0.8600000143051147, 0.8619999885559082, 0.859666645526886, 0.8650000095367432, 0.8666666746139526, 0.8700000047683716, 0.8653333187103271, 0.8663333058357239, 0.8700000047683716, 0.8663333058357239, 0.8673333525657654]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8240000009536743, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5626232624053955, 0.8106826543807983, 0.6730920672416687, 0.6230126023292542, 0.5781211853027344, 0.5585303902626038, 0.5532004833221436, 0.5620332360267639, 0.5222117900848389, 0.5173130035400391, 0.5027238130569458, 0.5222583413124084, 0.5365469455718994, 0.5129731893539429], "accuracy": [0.471800297498703, 0.7168141603469849, 0.7510236501693726, 0.7707040309906006, 0.7854973077774048, 0.8080834746360779, 0.8004226684570312, 0.8157442808151245, 0.8092722296714783, 0.8171972036361694, 0.8193105459213257, 0.8235371708869934, 0.8144234418869019, 0.8215559124946594], "val_loss": [0.8294689059257507, 0.6134836077690125, 0.5618772506713867, 0.5403157472610474, 0.5411004424095154, 0.505376398563385, 0.5440982580184937, 0.511479914188385, 0.5165358781814575, 0.5196525454521179, 0.5551681518554688, 0.5913936495780945, 0.5710850358009338, 0.5605605840682983], "val_accuracy": [0.7316666841506958, 0.7733333110809326, 0.8033333420753479, 0.7933333516120911, 0.8193333148956299, 0.8149999976158142, 0.8113333582878113, 0.8130000233650208, 0.8320000171661377, 0.8259999752044678, 0.8296666741371155, 0.8143333196640015, 0.8266666531562805, 0.8266666531562805]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 2, 3, 0, 3, 7, 1, 7, 7, 1, 0], [0, 1, 1, 0, 2, 0, 1, 1, 2, 1], [0, 39, 39], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 2, 3, 1, 6, 3, 8, 7], [3, 2, 0, 3, 5, 1, 0], [0, 27, 16, 0], [0, 1, 1], [4, 3, 1, 4, 1, 2, 9, 2, 9], [0, 4, 3, 7, 0], [0, 89, 11, 17], [1], [0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [37, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 11, 10, 3, 14, 7, 7, 2, 3, 1, 2, 1, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(tf.math.add(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), alpha), tf.math.subtract(tf.math.negative(grad), alpha))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(grad, tf.math.multiply(beta, tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.sqrt(alpha)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3036208152770996, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 8], [1, 2, 3, 0, 2], [83, 99, 27], [0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5], [0, 0, 5], [16, 16], [0, 1, 0, 1], [1, 5], [0, 3], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 1, 4, 2, 2, 2, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), grad), tf.math.multiply(tf.math.sqrt(grad), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 2, 3, 0, 3, 5, 6, 1, 6, 4, 2, 2, 5, 6, 0, 4, 9], [0, 2, 0, 3, 2, 5, 0, 1, 4, 5, 2], [76, 16, 98, 27], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [6, 3, 3, 6, 8, 3, 8, 1, 4, 1, 2, 1, 3, 7, 1, 3, 3, 7, 0, 2, 6, 0, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 7, 3, 6, 0, 5, 5, 5, 6, 1], [42, 99, 96, 99, 61, 1, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 28, 17, 11, 4, 2, 1, 1, 1, 42, 23, 19, 7], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.pow(tf.math.add(beta, tf.math.add(grad, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.square(alpha))), tf.math.divide_no_nan(grad, tf.math.negative(grad))))), tf.math.pow(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.math.sqrt(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(sigma, tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma), tf.math.add(tf.math.subtract(alpha, beta), tf.math.multiply(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.math.multiply(tf.math.multiply(sigma, tf.math.add(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(grad), tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), grad)), grad)), grad), grad)))), alpha)", "other_info": {"loss": [10.671141624450684, 9.743388175964355, 2.45674991607666, 2.3521735668182373, 2.324597120285034, 2.314682722091675], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [15.908797264099121, 2.5919079780578613, 2.3778698444366455, 2.3360230922698975, 2.3205153942108154, 2.314006805419922], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 19], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 5, 3, 3, 3, 5, 8, 9], [0, 2, 0, 3], [16, 16, 92], [0, 1], [0], [0], [99], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 2, 0, 3, 3, 2, 0], [16, 99, 96, 99, 12, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 11, 8, 3, 3, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta)), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(beta, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), sigma)), tf.math.add(tf.math.sqrt(beta), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3553491.25, 1540870784.0, 50172698624.0, 561297752064.0, 3572984184832.0, 15829689171968.0], "accuracy": [0.09800554811954498, 0.10249637067317963, 0.09747721254825592, 0.10276053100824356, 0.1006472036242485, 0.09787346422672272], "val_loss": [52072512.0, 7566430720.0, 146805800960.0, 1222142328832.0, 6365283090432.0, 24595444793344.0], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]