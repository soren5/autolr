[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8605714440345764, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220531463623047, 1.8561896085739136, 1.3851619958877563, 1.0761027336120605, 0.9324113726615906, 0.8242257237434387, 0.7640373110771179, 0.7127897143363953, 0.6797007322311401, 0.6462169885635376, 0.624801754951477, 0.6041712760925293, 0.5903651714324951, 0.5710625052452087, 0.5425202250480652, 0.5410472750663757, 0.5208849906921387, 0.5205851197242737, 0.49992918968200684, 0.48884135484695435, 0.47193673253059387, 0.47635847330093384, 0.4681389033794403, 0.4600163400173187, 0.44645237922668457, 0.4420682489871979, 0.43121224641799927, 0.428644597530365, 0.4199981987476349, 0.4100746214389801, 0.41243690252304077, 0.4000781178474426, 0.3963334858417511, 0.3888654410839081, 0.38453495502471924, 0.37601956725120544, 0.3726450502872467, 0.36805322766304016, 0.3676493465900421, 0.35777413845062256, 0.35521644353866577, 0.34801942110061646], "accuracy": [0.280940443277359, 0.499009370803833, 0.5696737766265869, 0.6289790272712708, 0.6617355942726135, 0.7092854380607605, 0.7317395210266113, 0.7448157668113708, 0.7568352818489075, 0.7677981853485107, 0.7754589915275574, 0.7803460359573364, 0.7835160493850708, 0.7965922355651855, 0.8072909712791443, 0.8061022162437439, 0.8121780753135681, 0.8181217908859253, 0.821820080280304, 0.8289526104927063, 0.8278959393501282, 0.8298771381378174, 0.8271034359931946, 0.8385946154594421, 0.8391229510307312, 0.8413683772087097, 0.8453308939933777, 0.8475762605667114, 0.8502179384231567, 0.8507462739944458, 0.8544445633888245, 0.8582749962806702, 0.8557654023170471, 0.8602562546730042, 0.8599920868873596, 0.8688416481018066, 0.8636903762817383, 0.8676528930664062, 0.8696341514587402, 0.8673887252807617, 0.8730682730674744, 0.8745211958885193], "val_loss": [2.0324628353118896, 1.5049933195114136, 1.0333003997802734, 0.8218793869018555, 0.7398679852485657, 0.6866243481636047, 0.6376113295555115, 0.6053676605224609, 0.5810124278068542, 0.5536547899246216, 0.5436557531356812, 0.524843156337738, 0.5114238858222961, 0.49695590138435364, 0.4850124418735504, 0.47896483540534973, 0.466609388589859, 0.45547494292259216, 0.44718489050865173, 0.4412064254283905, 0.43272143602371216, 0.4275571405887604, 0.42432472109794617, 0.4167412221431732, 0.42073339223861694, 0.40730398893356323, 0.4044988751411438, 0.39832600951194763, 0.39728760719299316, 0.38834717869758606, 0.3895948827266693, 0.3849037289619446, 0.3787539005279541, 0.3796747326850891, 0.3726474642753601, 0.3691020607948303, 0.3665439486503601, 0.36951103806495667, 0.3674449920654297, 0.36519938707351685, 0.3611897826194763, 0.35832634568214417], "val_accuracy": [0.5793333053588867, 0.6769999861717224, 0.6933333277702332, 0.7206666469573975, 0.746999979019165, 0.7543333172798157, 0.7739999890327454, 0.7833333611488342, 0.7933333516120911, 0.7976666688919067, 0.8066666722297668, 0.8106666803359985, 0.8190000057220459, 0.8220000267028809, 0.8220000267028809, 0.8240000009536743, 0.8339999914169312, 0.8346666693687439, 0.840666651725769, 0.8426666855812073, 0.8500000238418579, 0.8519999980926514, 0.8516666889190674, 0.8560000061988831, 0.8456666469573975, 0.859666645526886, 0.8606666922569275, 0.8640000224113464, 0.8610000014305115, 0.8643333315849304, 0.8653333187103271, 0.8676666617393494, 0.8693333268165588, 0.8679999709129333, 0.8679999709129333, 0.871999979019165, 0.8759999871253967, 0.875, 0.8756666779518127, 0.8713333606719971, 0.874666690826416, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 1, 1, 0, 1], [0, 6, 2, 8], [0, 7, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8514285683631897, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2945556640625, 2.192742347717285, 1.786776065826416, 1.36814546585083, 1.094444751739502, 0.948620617389679, 0.8781935572624207, 0.8276923894882202, 0.7713043689727783, 0.7572159171104431, 0.7127970457077026, 0.6918266415596008, 0.6528658866882324, 0.6388086080551147, 0.617342472076416, 0.6029973030090332, 0.5890762805938721, 0.5862565040588379, 0.5661634802818298, 0.5554249882698059, 0.5493806600570679, 0.5381237864494324, 0.525884211063385, 0.5380138754844666, 0.5018559694290161, 0.5035269856452942, 0.48803603649139404, 0.47966960072517395, 0.47876542806625366, 0.46142953634262085, 0.45034661889076233, 0.46193018555641174, 0.44131192564964294, 0.42837291955947876, 0.41977500915527344, 0.4204527735710144, 0.4053771495819092, 0.41171666979789734, 0.3985762894153595], "accuracy": [0.12415797263383865, 0.3234711289405823, 0.4360058009624481, 0.5359926223754883, 0.6267336010932922, 0.6623960137367249, 0.6791704893112183, 0.6983225345611572, 0.7020208835601807, 0.7157574892044067, 0.7301545143127441, 0.7400607466697693, 0.7552502751350403, 0.7578919529914856, 0.7633073329925537, 0.7681944370269775, 0.7745344042778015, 0.7746664881706238, 0.7843085527420044, 0.7829877138137817, 0.7866860628128052, 0.7947431206703186, 0.8020076751708984, 0.7980451583862305, 0.8083476424217224, 0.8053097128868103, 0.8132346868515015, 0.8177255392074585, 0.817461371421814, 0.8212917447090149, 0.8308017253875732, 0.82683926820755, 0.8330471515655518, 0.8342359066009521, 0.8403117060661316, 0.8378021121025085, 0.844010055065155, 0.8407079577445984, 0.8500858545303345], "val_loss": [2.2468392848968506, 2.025144577026367, 1.1483291387557983, 0.8699902296066284, 0.7574663162231445, 0.7058228254318237, 0.6808691620826721, 0.6360692381858826, 0.6333104372024536, 0.5964395999908447, 0.5538243651390076, 0.5341449975967407, 0.5230884552001953, 0.5151960849761963, 0.5119940638542175, 0.49295178055763245, 0.48213085532188416, 0.4734216332435608, 0.4688912332057953, 0.46451810002326965, 0.46416378021240234, 0.4577156603336334, 0.45254895091056824, 0.4421687722206116, 0.4275054633617401, 0.43738192319869995, 0.4386942982673645, 0.4291541278362274, 0.4118398427963257, 0.4210970103740692, 0.4155736565589905, 0.4095768332481384, 0.4088066518306732, 0.39490583539009094, 0.4062778353691101, 0.41843798756599426, 0.39112362265586853, 0.38713541626930237, 0.39693427085876465], "val_accuracy": [0.4059999883174896, 0.4816666543483734, 0.6493333578109741, 0.6926666498184204, 0.7329999804496765, 0.7350000143051147, 0.75, 0.7646666765213013, 0.7493333220481873, 0.7666666507720947, 0.7816666960716248, 0.7879999876022339, 0.8050000071525574, 0.8076666593551636, 0.8040000200271606, 0.8136666417121887, 0.8163333535194397, 0.8149999976158142, 0.8353333473205566, 0.8289999961853027, 0.8303333520889282, 0.8246666789054871, 0.8360000252723694, 0.8433333039283752, 0.8416666388511658, 0.8353333473205566, 0.8389999866485596, 0.8379999995231628, 0.8479999899864197, 0.847000002861023, 0.8506666421890259, 0.8493333458900452, 0.8513333201408386, 0.8643333315849304, 0.859666645526886, 0.8586666584014893, 0.8610000014305115, 0.8603333234786987, 0.859666645526886]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 7, 4, 3, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0], [0, 9], [0], [0], [1], [0], [2], [0]], "fitness": -0.838857114315033, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5612279176712036, 0.8502016067504883, 0.6976928114891052, 0.6483699679374695, 0.575947642326355, 0.5519003868103027, 0.5220752358436584, 0.5033000707626343, 0.4930678904056549, 0.49098658561706543, 0.4783055782318115, 0.46628251671791077, 0.5038725733757019, 0.4877901077270508, 0.48808151483535767, 0.46395665407180786, 0.500232458114624, 0.4873882532119751, 0.521094024181366, 0.4960782527923584, 0.49896880984306335, 0.4766700565814972], "accuracy": [0.4647998809814453, 0.7037379741668701, 0.750759482383728, 0.7646281719207764, 0.7845727205276489, 0.8026680946350098, 0.8115176558494568, 0.8244617581367493, 0.8193105459213257, 0.8212917447090149, 0.8272355198860168, 0.830669641494751, 0.8300092220306396, 0.8319904804229736, 0.8333113193511963, 0.8416325449943542, 0.8396512866020203, 0.8368775844573975, 0.8247259259223938, 0.8285563588142395, 0.834632158279419, 0.8355567455291748], "val_loss": [0.9915316700935364, 0.6394567489624023, 0.5683708190917969, 0.5408499240875244, 0.5392261743545532, 0.5011807084083557, 0.5304579138755798, 0.5041571259498596, 0.5126246213912964, 0.535326361656189, 0.48266902565956116, 0.5384823083877563, 0.5363452434539795, 0.552463710308075, 0.5456119775772095, 0.5447309017181396, 0.5864759683609009, 0.5464675426483154, 0.6202996969223022, 0.5408238172531128, 0.5278050303459167, 0.5461596846580505], "val_accuracy": [0.6480000019073486, 0.7760000228881836, 0.7963333129882812, 0.8009999990463257, 0.8166666626930237, 0.8220000267028809, 0.8270000219345093, 0.8273333311080933, 0.8383333086967468, 0.8356666564941406, 0.8353333473205566, 0.8309999704360962, 0.8203333616256714, 0.8393333554267883, 0.8276666402816772, 0.8453333377838135, 0.8473333120346069, 0.8393333554267883, 0.8370000123977661, 0.8410000205039978, 0.8379999995231628, 0.8416666388511658]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 1, 0, 3, 0, 6, 6, 4], [0, 1, 0, 2, 0, 1, 3], [39, 39, 24], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0], [0, 2, 3, 9, 3, 5, 3, 4, 5, 9], [0, 2, 0, 0], [16, 16, 16, 23, 25], [0, 1], [0], [0], [26], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 4, 4, 1, 3, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 55, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 9, 7, 3, 14, 10, 4, 5, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.pow(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), alpha)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.square(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(grad, tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 2, 3, 0, 3, 5, 8], [0, 1, 0, 2], [78, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 0], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 5, 3, 0, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 9, 7, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.math.pow(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma))))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [6, 2, 3, 0, 3, 9, 4], [0, 1, 2, 2, 0], [39, 39, 5], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 9], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 6, 1, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 97, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 1, 0, 1, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.pow(grad, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3031797409057617, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 0, 4, 4], [2, 1, 0, 2, 2], [39, 39], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 2, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 9, 0, 8, 1, 4, 5, 4, 2, 8], [0, 0, 4, 3, 0, 1, 3, 1, 2, 0], [16, 99, 96, 99, 61, 87]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 6, 3, 3, 2, 2, 1, 1, 1, 7, 5, 2, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.pow(grad, tf.math.pow(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [7.565573215484619, 57.93831253051758, 197.8662872314453, 499.0289611816406, 998.0892944335938, 1774.1226806640625], "accuracy": [0.09549596905708313, 0.1002509593963623, 0.10645885765552521, 0.10117553919553757, 0.09985470771789551, 0.1002509593963623], "val_loss": [20.562124252319336, 96.03668975830078, 265.8148193359375, 578.8093872070312, 1083.5633544921875, 1829.0631103515625], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}]