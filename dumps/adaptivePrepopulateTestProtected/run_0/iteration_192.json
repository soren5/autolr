[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.852571427822113, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222874164581299, 1.8700059652328491, 1.3912999629974365, 1.095068335533142, 0.9349390864372253, 0.839423656463623, 0.7750480771064758, 0.7173132300376892, 0.68635094165802, 0.6557619571685791, 0.6351098418235779, 0.6078683137893677, 0.5860983729362488, 0.5780856609344482, 0.5541202425956726, 0.5406083464622498, 0.5367314219474792, 0.5102128386497498, 0.502946138381958, 0.48509645462036133, 0.48540717363357544, 0.47327539324760437, 0.4645828604698181, 0.4687793552875519, 0.4481140971183777, 0.44605347514152527, 0.43503302335739136, 0.4280422627925873, 0.4185510575771332, 0.4195571839809418, 0.4115830361843109, 0.3993452191352844, 0.3981228768825531, 0.38952550292015076, 0.38994306325912476, 0.3846982419490814, 0.37862998247146606, 0.368132084608078, 0.3688339293003082, 0.365426629781723, 0.3544189929962158, 0.34552517533302307, 0.3486451506614685, 0.3453249931335449, 0.33901989459991455, 0.33343204855918884, 0.3230469226837158, 0.32082945108413696, 0.31846562027931213, 0.315931499004364, 0.3148454427719116, 0.310217022895813, 0.30378803610801697, 0.2986544370651245, 0.2967566251754761, 0.29663634300231934, 0.2861136794090271, 0.2794855237007141, 0.27592208981513977, 0.27558839321136475, 0.26816654205322266, 0.27140840888023376, 0.2660508453845978, 0.26116955280303955, 0.25880464911460876, 0.24748879671096802, 0.2559356093406677, 0.2454051822423935, 0.24881070852279663, 0.2391723394393921, 0.2367185354232788, 0.2347506880760193, 0.23030175268650055, 0.23035366833209991, 0.22008779644966125, 0.22153626382350922, 0.21474893391132355, 0.2132340520620346, 0.21149083971977234, 0.20844638347625732, 0.20678828656673431, 0.19886630773544312, 0.19447213411331177, 0.1965838521718979, 0.19642610847949982, 0.19433866441249847, 0.18300704658031464], "accuracy": [0.2797516882419586, 0.49108439683914185, 0.5746929049491882, 0.6242240071296692, 0.6724342703819275, 0.7047945857048035, 0.7213049530982971, 0.7368907928466797, 0.7491744756698608, 0.7626469135284424, 0.769911527633667, 0.7788931727409363, 0.7898560166358948, 0.791969358921051, 0.802271842956543, 0.806630551815033, 0.8099326491355896, 0.8161405324935913, 0.8195747137069702, 0.830669641494751, 0.8239334225654602, 0.8298771381378174, 0.8308017253875732, 0.8300092220306396, 0.8422929644584656, 0.8391229510307312, 0.8432175517082214, 0.8475762605667114, 0.846387505531311, 0.8491612672805786, 0.8553691506385803, 0.8581429123878479, 0.8532558679580688, 0.8634262084960938, 0.8609166741371155, 0.8660678863525391, 0.8664641380310059, 0.8664641380310059, 0.868049144744873, 0.8712190985679626, 0.8737286925315857, 0.878351628780365, 0.8754457831382751, 0.8746532797813416, 0.8817857503890991, 0.8805969953536987, 0.8877294659614563, 0.8840311765670776, 0.887201189994812, 0.8858803510665894, 0.889578640460968, 0.8874653577804565, 0.8883898854255676, 0.893541157245636, 0.893541157245636, 0.8971073627471924, 0.898428201675415, 0.9015982151031494, 0.9012019634246826, 0.8986923694610596, 0.9050323367118835, 0.9037115573883057, 0.9052965044975281, 0.9039757251739502, 0.9066173434257507, 0.9088627696037292, 0.9089948534965515, 0.9111081957817078, 0.9109761118888855, 0.915070652961731, 0.9141460657119751, 0.9148064851760864, 0.919561505317688, 0.9187690019607544, 0.9204860925674438, 0.9215427041053772, 0.9232597947120667, 0.9233918786048889, 0.9222031235694885, 0.925901472568512, 0.9256373047828674, 0.9255052208900452, 0.9315810203552246, 0.9288073182106018, 0.9285431504249573, 0.9290714859962463, 0.9342226982116699], "val_loss": [2.0443739891052246, 1.5244117975234985, 1.0546830892562866, 0.8533033728599548, 0.7612627744674683, 0.7030878663063049, 0.6654168367385864, 0.6248753666877747, 0.6007760167121887, 0.5792049765586853, 0.5591186285018921, 0.5493337512016296, 0.526465892791748, 0.5196987986564636, 0.5121321082115173, 0.49674367904663086, 0.4871841371059418, 0.4802868664264679, 0.46899083256721497, 0.4639509618282318, 0.4583073854446411, 0.45420166850090027, 0.44542017579078674, 0.44387614727020264, 0.44024890661239624, 0.43529918789863586, 0.42855632305145264, 0.4255906641483307, 0.4200189709663391, 0.4216504395008087, 0.424745112657547, 0.4182089865207672, 0.4101327359676361, 0.41717982292175293, 0.4079984426498413, 0.40984469652175903, 0.40102294087409973, 0.39536768198013306, 0.3978872001171112, 0.3916485607624054, 0.3939100205898285, 0.39294251799583435, 0.38739079236984253, 0.3861578404903412, 0.382281094789505, 0.38028621673583984, 0.38162028789520264, 0.3778592050075531, 0.3801538944244385, 0.3747237026691437, 0.3764396011829376, 0.37602001428604126, 0.37412503361701965, 0.37210381031036377, 0.37722069025039673, 0.3708951473236084, 0.3698345422744751, 0.3692574203014374, 0.36710789799690247, 0.36650362610816956, 0.36831387877464294, 0.36388087272644043, 0.36827775835990906, 0.3633177578449249, 0.3619970679283142, 0.36376187205314636, 0.3570731282234192, 0.3588307201862335, 0.3665896952152252, 0.3599305748939514, 0.3692165017127991, 0.36026978492736816, 0.3599528670310974, 0.3567759096622467, 0.36139681935310364, 0.36028793454170227, 0.35555359721183777, 0.36248770356178284, 0.3554845452308655, 0.3548881709575653, 0.3592727780342102, 0.35600292682647705, 0.35898029804229736, 0.36313802003860474, 0.3591151535511017, 0.3593626320362091, 0.35957568883895874], "val_accuracy": [0.5609999895095825, 0.6579999923706055, 0.6869999766349792, 0.7059999704360962, 0.7366666793823242, 0.746666669845581, 0.7559999823570251, 0.768666684627533, 0.7773333191871643, 0.7850000262260437, 0.7910000085830688, 0.8003333210945129, 0.809333324432373, 0.8076666593551636, 0.8136666417121887, 0.8206666707992554, 0.8256666660308838, 0.8276666402816772, 0.8326666951179504, 0.8330000042915344, 0.8370000123977661, 0.8389999866485596, 0.8410000205039978, 0.843999981880188, 0.8460000157356262, 0.846666693687439, 0.843666672706604, 0.8443333506584167, 0.8476666808128357, 0.8516666889190674, 0.8453333377838135, 0.8500000238418579, 0.8503333330154419, 0.8473333120346069, 0.8529999852180481, 0.8500000238418579, 0.8543333411216736, 0.8543333411216736, 0.8539999723434448, 0.8553333282470703, 0.8566666841506958, 0.8553333282470703, 0.8550000190734863, 0.8579999804496765, 0.859666645526886, 0.8610000014305115, 0.8576666712760925, 0.859666645526886, 0.8560000061988831, 0.862333357334137, 0.8600000143051147, 0.8613333106040955, 0.859666645526886, 0.8640000224113464, 0.8610000014305115, 0.8606666922569275, 0.8636666536331177, 0.8643333315849304, 0.8650000095367432, 0.8653333187103271, 0.8650000095367432, 0.8666666746139526, 0.8616666793823242, 0.8700000047683716, 0.8673333525657654, 0.8683333396911621, 0.8709999918937683, 0.8703333139419556, 0.8690000176429749, 0.871999979019165, 0.8706666827201843, 0.8723333477973938, 0.8709999918937683, 0.8743333220481873, 0.874666690826416, 0.8743333220481873, 0.8769999742507935, 0.8740000128746033, 0.875, 0.8773333430290222, 0.8759999871253967, 0.8806666731834412, 0.8766666650772095, 0.8730000257492065, 0.8806666731834412, 0.8773333430290222, 0.878333330154419]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 1], [0, 2, 8], [0, 1], [0], [0, 0, 1, 0, 1], [0, 1, 8], [0, 2], [0], [0, 1], [0], [1], [0]], "fitness": -0.8362857103347778, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2926008701324463, 2.1894614696502686, 1.7599844932556152, 1.3758652210235596, 1.0422484874725342, 0.9231643080711365, 0.8524540662765503, 0.8137470483779907, 0.7759605050086975, 0.7522936463356018, 0.714343786239624, 0.68511563539505, 0.6681324243545532, 0.6375821232795715, 0.6158161163330078, 0.6067542433738708, 0.5890405178070068, 0.5793867707252502, 0.5694004893302917, 0.5578414797782898, 0.5399936437606812, 0.5263878703117371, 0.5252108573913574, 0.5116994380950928, 0.49815458059310913, 0.4953015446662903, 0.4807341694831848, 0.4735643267631531, 0.4672681987285614, 0.46522825956344604, 0.4596300721168518, 0.4402254819869995, 0.4389926493167877, 0.4255602955818176, 0.42644011974334717, 0.4050336182117462, 0.4160378575325012, 0.39292553067207336, 0.39324453473091125, 0.3829728364944458, 0.38636887073516846], "accuracy": [0.13155461847782135, 0.3275656998157501, 0.43230748176574707, 0.5391625761985779, 0.6355831623077393, 0.6631884574890137, 0.6963412761688232, 0.6934354901313782, 0.7012283802032471, 0.715889573097229, 0.7290979027748108, 0.7384757399559021, 0.7391361594200134, 0.7576277852058411, 0.7602694630622864, 0.7658169269561768, 0.7763835787773132, 0.7803460359573364, 0.7840443849563599, 0.7804781198501587, 0.7906485199928284, 0.7947431206703186, 0.7979130744934082, 0.7987055778503418, 0.8067626357078552, 0.8092722296714783, 0.8162726163864136, 0.8204993009567261, 0.8164047002792358, 0.8150838613510132, 0.824329674243927, 0.830669641494751, 0.8339717388153076, 0.8355567455291748, 0.8372738361358643, 0.8430854678153992, 0.8389908671379089, 0.8461233377456665, 0.8471800088882446, 0.8541803956031799, 0.8515387773513794], "val_loss": [2.2455453872680664, 2.015686273574829, 1.1261370182037354, 0.886687159538269, 0.7669756412506104, 0.6985635757446289, 0.6668785810470581, 0.6526037454605103, 0.6658973097801208, 0.6394861936569214, 0.6034069061279297, 0.5718543529510498, 0.5582793951034546, 0.5522410273551941, 0.5376671552658081, 0.5165311694145203, 0.5105728507041931, 0.49821996688842773, 0.4983058273792267, 0.492628812789917, 0.48626577854156494, 0.4708597958087921, 0.46499836444854736, 0.46092110872268677, 0.45501554012298584, 0.44702649116516113, 0.44960445165634155, 0.4386782944202423, 0.43272021412849426, 0.4324643611907959, 0.4314618408679962, 0.4219754934310913, 0.4155423939228058, 0.4129980802536011, 0.40915682911872864, 0.41353800892829895, 0.41657522320747375, 0.41321223974227905, 0.4123086631298065, 0.4255499243736267, 0.40835368633270264], "val_accuracy": [0.4320000112056732, 0.4476666748523712, 0.6566666960716248, 0.7020000219345093, 0.7226666808128357, 0.734666645526886, 0.7486666440963745, 0.765333354473114, 0.7513333559036255, 0.7666666507720947, 0.7703333497047424, 0.7910000085830688, 0.7883333563804626, 0.7863333225250244, 0.7893333435058594, 0.8050000071525574, 0.8073333501815796, 0.8096666932106018, 0.8090000152587891, 0.8073333501815796, 0.8080000281333923, 0.8166666626930237, 0.8299999833106995, 0.824999988079071, 0.8349999785423279, 0.8396666646003723, 0.8343333601951599, 0.8370000123977661, 0.8429999947547913, 0.8396666646003723, 0.843999981880188, 0.8493333458900452, 0.8510000109672546, 0.8523333072662354, 0.8513333201408386, 0.8550000190734863, 0.8550000190734863, 0.8526666760444641, 0.8550000190734863, 0.8460000157356262, 0.8543333411216736]}, "mapping_values": [1, 10, 5, 5, 3, 5, 3, 2, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8159999847412109, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5770823955535889, 0.7882704138755798, 0.6664121150970459, 0.6066141724586487, 0.56366366147995, 0.5627450942993164, 0.6000396609306335, 0.5777714252471924, 0.6022455096244812, 0.6222637891769409, 0.6713604927062988, 0.7132891416549683, 0.6707982420921326], "accuracy": [0.4791969358921051, 0.720380425453186, 0.7564390301704407, 0.7757231593132019, 0.791969358921051, 0.7948752045631409, 0.7930260300636292, 0.8039889335632324, 0.7877426743507385, 0.7882710099220276, 0.7749306559562683, 0.7691190242767334, 0.7864218950271606], "val_loss": [0.8001055717468262, 0.6134315729141235, 0.5501490831375122, 0.5201689600944519, 0.4911660850048065, 0.5718181133270264, 0.5095425844192505, 0.6460540890693665, 0.5572125911712646, 0.5971495509147644, 0.6210176348686218, 0.6274914145469666, 0.6068243980407715], "val_accuracy": [0.7059999704360962, 0.7926666736602783, 0.7923333048820496, 0.8086666464805603, 0.8213333487510681, 0.8146666884422302, 0.8190000057220459, 0.8256666660308838, 0.8203333616256714, 0.8113333582878113, 0.812666654586792, 0.7950000166893005, 0.8166666626930237]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 4, 5, 5], [0, 2, 0, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 1, 7, 5, 7], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0, 0, 7, 7], [16, 99, 84, 99, 61, 1]], "fitness": -0.12085714191198349, "mapping_values": [1, 6, 3, 3, 2, 12, 7, 5, 2, 2, 1, 1, 1, 28, 15, 13, 6], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.subtract(alpha, beta))))))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.square(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)), grad))", "other_info": {"loss": [656503472128.0, 869819088896.0, 879518744576.0, 889221414912.0, 877693173760.0, 880407216128.0, 880346398720.0, 868245700608.0, 889694126080.0, 885068595200.0, 887237640192.0, 890783334400.0], "accuracy": [0.09945846349000931, 0.10249637067317963, 0.10051512718200684, 0.09708096832036972, 0.09708096832036972, 0.10077928751707077, 0.10447761416435242, 0.10196803510189056, 0.10011887550354004, 0.1014397069811821, 0.10342095047235489, 0.10527011007070541], "val_loss": [606952095744.0, 606951899136.0, 606953472000.0, 606955044864.0, 606956486656.0, 606959173632.0, 611214163968.0, 611303292928.0, 611592044544.0, 611617275904.0, 611597942784.0, 611660333056.0], "val_accuracy": [0.12099999934434891, 0.12099999934434891, 0.12166666984558105, 0.12099999934434891, 0.12099999934434891, 0.12099999934434891, 0.12466666847467422, 0.12466666847467422, 0.12466666847467422, 0.12466666847467422, 0.12466666847467422, 0.12433333694934845]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [70, 59], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 4, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0], [0, 9], [0], [32], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 2, 4, 1, 4, 2, 0, 6, 3, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 4, 0], [6, 99, 96, 99, 61, 1, 31]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 1, 2, 2, 0, 1, 26, 14, 12, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), tf.math.add(tf.math.negative(tf.math.divide_no_nan(alpha, beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.negative(grad), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 3], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 2, 1, 8, 2, 4, 2, 0, 2, 5, 2, 6, 9, 5, 6], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 5, 6, 4, 3, 5, 5], [16, 99, 96, 99, 61, 29, 55]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 0, 38, 22, 16, 7], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(sigma, alpha), tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), grad), grad)), tf.math.square(tf.math.divide_no_nan(grad, sigma)))), grad), grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 2, 3], [3, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 3, 0, 9, 5], [0, 1, 0, 3], [0, 18, 16, 0], [1, 1], [0], [0], [99], [1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [2], [16, 99, 96, 99, 61, 1]], "fitness": -0.08971428871154785, "mapping_values": [1, 2, 1, 1, 0, 6, 4, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3095808029174805, 2.3094990253448486, 2.3097031116485596, 2.3086953163146973, 2.3103647232055664, 2.309936046600342], "accuracy": [0.09285431355237961, 0.0944393053650856, 0.09351472556591034, 0.09628847241401672, 0.09192973375320435, 0.08915598690509796], "val_loss": [2.3080263137817383, 2.3080263137817383, 2.3080263137817383, 2.3080263137817383, 2.3080263137817383, 2.3080263137817383], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}]