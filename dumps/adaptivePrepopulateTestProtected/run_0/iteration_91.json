[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8568571209907532, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2242488861083984, 1.8673022985458374, 1.393694519996643, 1.089675784111023, 0.9384425282478333, 0.8371570706367493, 0.7715988755226135, 0.7275529503822327, 0.6885166764259338, 0.6537595987319946, 0.6370914578437805, 0.6068512201309204, 0.5852015614509583, 0.572677493095398, 0.5621171593666077, 0.5485393404960632, 0.5244225859642029, 0.5103409886360168, 0.5068226456642151, 0.49681323766708374, 0.4829929769039154, 0.4626556634902954, 0.4605080783367157, 0.45885881781578064, 0.44335708022117615, 0.4385429322719574, 0.4227612316608429, 0.4187014698982239, 0.4139198362827301, 0.40670129656791687, 0.4024852216243744, 0.3916494846343994, 0.38455328345298767, 0.385734885931015, 0.3711569607257843, 0.3671477437019348, 0.36333873867988586, 0.35893791913986206, 0.3457562327384949, 0.350040078163147, 0.3417149782180786, 0.3347623348236084, 0.33174240589141846, 0.3270550072193146, 0.3186616599559784, 0.3349301517009735, 0.31609907746315], "accuracy": [0.2771100103855133, 0.4861973226070404, 0.561352550983429, 0.6159027814865112, 0.6662263870239258, 0.6980583667755127, 0.7209087014198303, 0.7346453666687012, 0.7519482374191284, 0.7621186375617981, 0.7689869403839111, 0.7781006693840027, 0.7878747582435608, 0.7893276810646057, 0.8001585006713867, 0.8055738806724548, 0.8138951063156128, 0.8222163319587708, 0.8241975903511047, 0.8234050869941711, 0.8296129703521729, 0.8372738361358643, 0.8364813327789307, 0.8363492488861084, 0.8467837572097778, 0.8445383906364441, 0.852859616279602, 0.8515387773513794, 0.8541803956031799, 0.8532558679580688, 0.8525954484939575, 0.857218325138092, 0.8623695969581604, 0.8640866279602051, 0.8709549307823181, 0.8716153502464294, 0.8677849769592285, 0.8714832663536072, 0.8761062026023865, 0.8755778670310974, 0.8767666220664978, 0.8824461698532104, 0.8784837126731873, 0.8842953443527222, 0.8854840993881226, 0.8836349248886108, 0.8879936337471008], "val_loss": [2.0374066829681396, 1.5087734460830688, 1.0363409519195557, 0.8337613940238953, 0.7460921406745911, 0.6957544088363647, 0.649594783782959, 0.6142470836639404, 0.5868714451789856, 0.5679269433021545, 0.5455618500709534, 0.5287978053092957, 0.517426073551178, 0.5078842639923096, 0.4996201992034912, 0.48527345061302185, 0.4751593768596649, 0.4678833782672882, 0.4632161557674408, 0.45732375979423523, 0.4433739483356476, 0.44076618552207947, 0.43984565138816833, 0.4271240234375, 0.42509913444519043, 0.4208827614784241, 0.4196189045906067, 0.4102938771247864, 0.409767746925354, 0.40448880195617676, 0.4026006758213043, 0.39725521206855774, 0.39463135600090027, 0.39475131034851074, 0.3918183147907257, 0.3888108432292938, 0.3911043405532837, 0.3858029842376709, 0.38295629620552063, 0.380399614572525, 0.3815808594226837, 0.37614142894744873, 0.3779948055744171, 0.378603994846344, 0.3810097277164459, 0.3746890127658844, 0.3686477839946747], "val_accuracy": [0.5666666626930237, 0.6669999957084656, 0.690666675567627, 0.7149999737739563, 0.737666666507721, 0.7473333477973938, 0.7706666588783264, 0.7730000019073486, 0.7846666574478149, 0.7919999957084656, 0.8036666512489319, 0.8130000233650208, 0.8153333067893982, 0.8180000185966492, 0.8226666450500488, 0.82833331823349, 0.8343333601951599, 0.8346666693687439, 0.8366666436195374, 0.8356666564941406, 0.8473333120346069, 0.846666693687439, 0.843666672706604, 0.8506666421890259, 0.8533333539962769, 0.8519999980926514, 0.8493333458900452, 0.8560000061988831, 0.8556666374206543, 0.8610000014305115, 0.8579999804496765, 0.862666666507721, 0.8600000143051147, 0.8603333234786987, 0.8616666793823242, 0.8616666793823242, 0.8633333444595337, 0.8646666407585144, 0.862333357334137, 0.8629999756813049, 0.862666666507721, 0.8703333139419556, 0.8653333187103271, 0.8613333106040955, 0.8616666793823242, 0.8653333187103271, 0.8679999709129333]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 1], [0, 1, 3, 8], [0, 4, 2], [0], [1], [0], [2], [0]], "fitness": -0.8265714049339294, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5310524702072144, 0.8461830615997314, 0.6727551221847534, 0.6282510161399841, 0.6110007762908936, 0.6036763787269592, 0.5548028945922852, 0.5661489367485046, 0.5330871343612671, 0.5071161985397339, 0.4894097149372101, 0.4790966510772705, 0.4681701362133026, 0.4896760880947113, 0.48028162121772766, 0.5004408359527588, 0.5089835524559021, 0.5472536683082581, 0.5538100600242615, 0.5327011346817017, 0.5790804028511047], "accuracy": [0.4761590361595154, 0.7000396251678467, 0.7592127919197083, 0.7685906887054443, 0.7823272943496704, 0.7777044177055359, 0.8001585006713867, 0.7979130744934082, 0.8062343001365662, 0.8165367841720581, 0.826310932636261, 0.8210275769233704, 0.8341038227081299, 0.8285563588142395, 0.8247259259223938, 0.8267071843147278, 0.8329150676727295, 0.8305375576019287, 0.8214238286018372, 0.8164047002792358, 0.8078193068504333], "val_loss": [0.8794386982917786, 0.6556500792503357, 0.5404740571975708, 0.5288950800895691, 0.5162347555160522, 0.5050238966941833, 0.489205002784729, 0.525108814239502, 0.47339046001434326, 0.5017010569572449, 0.4634549617767334, 0.5108523368835449, 0.5259590744972229, 0.5267415046691895, 0.5132481455802917, 0.48692211508750916, 0.5754896402359009, 0.5783733129501343, 0.6372343897819519, 0.6110129952430725, 0.5990737080574036], "val_accuracy": [0.6779999732971191, 0.7730000019073486, 0.7986666560173035, 0.8083333373069763, 0.809333324432373, 0.8050000071525574, 0.8270000219345093, 0.8086666464805603, 0.8320000171661377, 0.8370000123977661, 0.8356666564941406, 0.8360000252723694, 0.8349999785423279, 0.8303333520889282, 0.8386666774749756, 0.8443333506584167, 0.8190000057220459, 0.8410000205039978, 0.8233333230018616, 0.812333345413208, 0.8226666450500488]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 7, 4, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8217142820358276, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2927310466766357, 2.1889753341674805, 1.774522304534912, 1.3807344436645508, 1.0711112022399902, 0.9510067105293274, 0.8530001640319824, 0.8105401396751404, 0.7764987349510193, 0.7503575086593628, 0.7035819888114929, 0.6706568598747253, 0.6650051474571228, 0.6317400336265564, 0.6128411293029785, 0.6056637167930603, 0.5925705432891846, 0.5772897005081177, 0.5516366362571716, 0.5471284985542297, 0.528527557849884, 0.5211748480796814, 0.5198817253112793, 0.5126298666000366, 0.49430570006370544, 0.4726349711418152, 0.4644237756729126, 0.4735032916069031, 0.4570665955543518], "accuracy": [0.13049794733524323, 0.32505613565444946, 0.4231937527656555, 0.5366530418395996, 0.631488561630249, 0.6456214785575867, 0.68101966381073, 0.6934354901313782, 0.6923788189888, 0.7061154246330261, 0.7260599732398987, 0.7436270117759705, 0.7427024245262146, 0.7607977986335754, 0.7600052952766418, 0.763439416885376, 0.7751948237419128, 0.7828556299209595, 0.7862898111343384, 0.7891955971717834, 0.7955356240272522, 0.7954035401344299, 0.7988376617431641, 0.8064984679222107, 0.8031964302062988, 0.8115176558494568, 0.8219521641731262, 0.8177255392074585, 0.819970965385437], "val_loss": [2.2459475994110107, 2.0174691677093506, 1.1239006519317627, 0.8127826452255249, 0.7677122950553894, 0.6947640180587769, 0.6610841751098633, 0.6146114468574524, 0.6137202382087708, 0.595426082611084, 0.5452401638031006, 0.5305248498916626, 0.5102182030677795, 0.5191465020179749, 0.5230269432067871, 0.4967299699783325, 0.4713629484176636, 0.46891680359840393, 0.4635367691516876, 0.4614316523075104, 0.4577379524707794, 0.4496425688266754, 0.4492050111293793, 0.42643997073173523, 0.43581458926200867, 0.43148839473724365, 0.4393590986728668, 0.4246296286582947, 0.4269866943359375], "val_accuracy": [0.4176666736602783, 0.4749999940395355, 0.6516666412353516, 0.6980000138282776, 0.7046666741371155, 0.7429999709129333, 0.734333336353302, 0.7620000243186951, 0.7603333592414856, 0.768666684627533, 0.7826666831970215, 0.7876666784286499, 0.8063333630561829, 0.800000011920929, 0.7943333387374878, 0.8080000281333923, 0.8143333196640015, 0.8263333439826965, 0.8163333535194397, 0.8173333406448364, 0.828000009059906, 0.8266666531562805, 0.8240000009536743, 0.8433333039283752, 0.8373333215713501, 0.8429999947547913, 0.8363333344459534, 0.8433333039283752, 0.8416666388511658]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 5, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [2, 2, 3, 3], [16, 16], [0, 1, 1], [6], [0, 1], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [6, 3, 3, 6, 8, 1, 1, 1, 6, 2, 8, 7, 7, 6, 1, 4, 3, 0, 8, 6, 0, 3, 6, 2, 6, 5, 5, 3, 0, 4, 7, 3, 8, 9, 1, 5, 8, 3, 5, 7, 0], [0, 0, 0, 4, 0, 0, 3, 4, 2, 0, 4, 0, 6, 1, 2, 5, 4, 2, 5, 5, 0, 5, 2, 3, 2, 5, 4], [16, 99, 96, 99, 61, 6, 42, 92, 69]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 2, 1, 1, 0, 3, 1, 2, 1, 68, 41, 27, 9], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(grad, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma), tf.math.sqrt(tf.math.add(tf.math.add(grad, tf.math.divide_no_nan(tf.math.subtract(tf.math.pow(tf.math.multiply(beta, tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.sqrt(grad)), tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad)), tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, beta), grad), tf.math.divide_no_nan(grad, beta))))), tf.math.square(grad)))), tf.math.square(tf.math.multiply(grad, tf.math.negative(tf.math.pow(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(grad, tf.math.sqrt(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.square(beta), tf.math.sqrt(tf.math.multiply(sigma, tf.math.square(tf.math.add(beta, grad))))))))))), tf.math.negative(grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 8], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 1, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 1], [2], [0, 1], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 3, 1, 5, 1, 4, 5, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [88, 99, 26, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 10, 6, 4, 2, 3, 1, 2, 1, 16, 8, 8, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))))), tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, alpha))", "other_info": {"loss": [2.3039212226867676, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 8, 3], [0, 0, 0, 2], [39, 74, 96], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 5, 2, 8, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [30, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 7, 4, 3, 2, 2, 1, 1, 1, 21, 12, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), tf.math.add(sigma, tf.math.sqrt(tf.math.negative(alpha)))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 99], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 0, 1, 1, 1, 4, 2, 8, 6], [0, 0, 0, 3, 0, 0, 3, 3, 2, 0, 1], [16, 99, 96, 99, 61, 2]], "fitness": -0.09057142585515976, "mapping_values": [1, 9, 5, 4, 3, 10, 6, 4, 2, 2, 1, 1, 1, 23, 12, 11, 6], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.subtract(tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.divide_no_nan(sigma, beta)))), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), alpha))", "other_info": {"loss": [2.3112406730651855, 2.3098108768463135, 2.3107335567474365, 2.3092470169067383, 2.3098256587982178, 2.310304641723633], "accuracy": [0.09100515395402908, 0.09879804402589798, 0.09430722147226334, 0.09140139818191528, 0.0952318087220192, 0.09245806187391281], "val_loss": [2.3098301887512207, 2.309842109680176, 2.3098464012145996, 2.3098485469818115, 2.309849977493286, 2.3098506927490234], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]