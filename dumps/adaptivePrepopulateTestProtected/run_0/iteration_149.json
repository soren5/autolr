[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8788571357727051, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223778247833252, 1.869816780090332, 1.3854763507843018, 1.0877859592437744, 0.9313703775405884, 0.8305619955062866, 0.7596983313560486, 0.7178841233253479, 0.678885817527771, 0.6427952647209167, 0.6314711570739746, 0.6065253019332886, 0.5803450345993042, 0.5689871311187744, 0.5544987320899963, 0.5336046814918518, 0.5189152956008911, 0.5142802596092224, 0.4972553849220276, 0.48589378595352173, 0.4789123237133026, 0.47044631838798523, 0.45680922269821167, 0.4485171139240265, 0.45258986949920654, 0.44318363070487976, 0.4277282655239105, 0.42588117718696594, 0.4205707907676697, 0.4097837805747986, 0.4017646610736847, 0.3997235894203186, 0.39143604040145874, 0.3813983201980591, 0.3799765408039093, 0.3789656162261963, 0.36794283986091614, 0.3624574840068817, 0.35929128527641296, 0.35348811745643616, 0.3508596420288086, 0.34113216400146484, 0.3462033271789551, 0.33102670311927795, 0.330086886882782, 0.32165828347206116, 0.3163209855556488, 0.31816115975379944, 0.30683767795562744, 0.30308493971824646, 0.3014288544654846, 0.2991333305835724, 0.3007844388484955, 0.29286450147628784, 0.28524908423423767, 0.28070855140686035, 0.2784059941768646, 0.26981455087661743, 0.2657836079597473, 0.26673373579978943, 0.2612868845462799, 0.2518042027950287, 0.25471100211143494, 0.24872227013111115, 0.2470250278711319, 0.2423699051141739, 0.2363964468240738, 0.2331322431564331, 0.2366485893726349, 0.22393356263637543, 0.22837325930595398, 0.218330517411232, 0.21717983484268188, 0.21057762205600739, 0.20735885202884674, 0.2054237574338913, 0.20540645718574524, 0.19891852140426636, 0.19594213366508484, 0.20225878059864044, 0.1904907077550888, 0.18262125551700592, 0.18921315670013428, 0.18402932584285736, 0.18388424813747406, 0.18099281191825867, 0.17825645208358765, 0.1715107411146164], "accuracy": [0.2751287817955017, 0.47906485199928284, 0.5712587237358093, 0.6231673359870911, 0.6653017997741699, 0.7033417224884033, 0.7341170310974121, 0.7374191284179688, 0.7518161535263062, 0.7711002230644226, 0.7761194109916687, 0.783119797706604, 0.7940827012062073, 0.7932901978492737, 0.8016114234924316, 0.8078193068504333, 0.8191784620285034, 0.8201030492782593, 0.8281601071357727, 0.8253863453865051, 0.8310658931732178, 0.8338396549224854, 0.8387266993522644, 0.8429533839225769, 0.8429533839225769, 0.8430854678153992, 0.8474441766738892, 0.8525954484939575, 0.8488970994949341, 0.8557654023170471, 0.8605204224586487, 0.8562937378883362, 0.8647470474243164, 0.8679170608520508, 0.8650112152099609, 0.867520809173584, 0.870030403137207, 0.8725399374961853, 0.8734645247459412, 0.8730682730674744, 0.8811253309249878, 0.8813894987106323, 0.8728041052818298, 0.8854840993881226, 0.8800686597824097, 0.885219931602478, 0.8873332738876343, 0.8868049383163452, 0.8886540532112122, 0.8912957310676575, 0.8923524022102356, 0.8920882344245911, 0.8905032277107239, 0.8961827754974365, 0.895918607711792, 0.8968431949615479, 0.8986923694610596, 0.9041078090667725, 0.9021265506744385, 0.902390718460083, 0.9058248400688171, 0.9096552729606628, 0.908730685710907, 0.9115044474601746, 0.9109761118888855, 0.9133535623550415, 0.9162594079971313, 0.9157310724258423, 0.9140139818191528, 0.9169198274612427, 0.9167877435684204, 0.9225993752479553, 0.9235239624977112, 0.9220710396766663, 0.9252410531044006, 0.9272223114967346, 0.9260335564613342, 0.9299960136413574, 0.9298639297485352, 0.9265618920326233, 0.9314489364624023, 0.9351472854614258, 0.930788516998291, 0.9344868659973145, 0.9322414398193359, 0.935279369354248, 0.9355435371398926, 0.9375247359275818], "val_loss": [2.043229818344116, 1.5252792835235596, 1.059319019317627, 0.8622859120368958, 0.7739511728286743, 0.712826669216156, 0.6653242111206055, 0.6353532075881958, 0.6145880818367004, 0.588234007358551, 0.5718778371810913, 0.5557640790939331, 0.5459425449371338, 0.525135338306427, 0.5168591141700745, 0.5053482055664062, 0.4997932016849518, 0.48488402366638184, 0.47919487953186035, 0.4703822433948517, 0.47141027450561523, 0.46116748452186584, 0.453118234872818, 0.44784554839134216, 0.44718751311302185, 0.43445050716400146, 0.4359551668167114, 0.42782077193260193, 0.42837169766426086, 0.4202001988887787, 0.41962215304374695, 0.41002556681632996, 0.40663206577301025, 0.40764692425727844, 0.40263956785202026, 0.3989400267601013, 0.3960455060005188, 0.39371103048324585, 0.3923947811126709, 0.3929206430912018, 0.3917257487773895, 0.3840952217578888, 0.3808329403400421, 0.3817606270313263, 0.37890157103538513, 0.37521520256996155, 0.3746592700481415, 0.3713971674442291, 0.3694106936454773, 0.36994099617004395, 0.36911842226982117, 0.3693079352378845, 0.36807316541671753, 0.3690676987171173, 0.36612769961357117, 0.36626964807510376, 0.36125749349594116, 0.3628350496292114, 0.36928442120552063, 0.3606704771518707, 0.35772624611854553, 0.3617168664932251, 0.3560544550418854, 0.3591160476207733, 0.35777518153190613, 0.35627302527427673, 0.3584086000919342, 0.3570273518562317, 0.3526735305786133, 0.35380101203918457, 0.3530525863170624, 0.35500773787498474, 0.35798314213752747, 0.3571338653564453, 0.35494470596313477, 0.35568180680274963, 0.3550068438053131, 0.35418087244033813, 0.3578505516052246, 0.3490322232246399, 0.35165348649024963, 0.3594669997692108, 0.3573257327079773, 0.35076624155044556, 0.35436558723449707, 0.35485583543777466, 0.35399290919303894, 0.3549942970275879], "val_accuracy": [0.5046666860580444, 0.6439999938011169, 0.6753333210945129, 0.6893333196640015, 0.7256666421890259, 0.7400000095367432, 0.7566666603088379, 0.7670000195503235, 0.7730000019073486, 0.7876666784286499, 0.7906666398048401, 0.7986666560173035, 0.8033333420753479, 0.8163333535194397, 0.8180000185966492, 0.8203333616256714, 0.8183333277702332, 0.82833331823349, 0.8303333520889282, 0.8323333263397217, 0.8263333439826965, 0.8370000123977661, 0.8410000205039978, 0.8399999737739563, 0.8399999737739563, 0.847000002861023, 0.843666672706604, 0.8476666808128357, 0.8493333458900452, 0.8533333539962769, 0.8493333458900452, 0.8579999804496765, 0.859000027179718, 0.8556666374206543, 0.8600000143051147, 0.862333357334137, 0.8613333106040955, 0.8606666922569275, 0.8610000014305115, 0.8673333525657654, 0.8650000095367432, 0.8603333234786987, 0.8673333525657654, 0.8690000176429749, 0.8700000047683716, 0.8703333139419556, 0.8726666569709778, 0.8713333606719971, 0.8700000047683716, 0.871666669845581, 0.874666690826416, 0.8733333349227905, 0.8733333349227905, 0.871666669845581, 0.8756666779518127, 0.874666690826416, 0.8759999871253967, 0.878000020980835, 0.8740000128746033, 0.8766666650772095, 0.8790000081062317, 0.8813333511352539, 0.8849999904632568, 0.8820000290870667, 0.8849999904632568, 0.8823333382606506, 0.8833333253860474, 0.8853333592414856, 0.8853333592414856, 0.8856666684150696, 0.8846666812896729, 0.8889999985694885, 0.8843333125114441, 0.8866666555404663, 0.887333333492279, 0.890999972820282, 0.8893333077430725, 0.8859999775886536, 0.8886666893959045, 0.8926666378974915, 0.890333354473114, 0.887333333492279, 0.8933333158493042, 0.8920000195503235, 0.8913333415985107, 0.890999972820282, 0.8916666507720947, 0.890666663646698]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8659999966621399, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223195791244507, 1.8647019863128662, 1.3879671096801758, 1.1080598831176758, 0.9315156936645508, 0.8394626975059509, 0.7710794806480408, 0.7295276522636414, 0.701019287109375, 0.6572089195251465, 0.6377732157707214, 0.6213915348052979, 0.5949090123176575, 0.5837045907974243, 0.570743203163147, 0.5478911995887756, 0.5355784893035889, 0.5276662111282349, 0.5192508697509766, 0.5058375000953674, 0.5021532773971558, 0.4894225001335144, 0.4786927103996277, 0.4647707939147949, 0.455576628446579, 0.4523957073688507, 0.4404190182685852, 0.43866419792175293, 0.4350075125694275, 0.4216001629829407, 0.42955291271209717, 0.4172668159008026, 0.4116882383823395, 0.3983464539051056, 0.4005245864391327, 0.38617244362831116, 0.3853561580181122, 0.37785807251930237, 0.3657500743865967, 0.36740586161613464, 0.3607954680919647, 0.3651619255542755, 0.3502281904220581, 0.3419789969921112, 0.3450815677642822, 0.3430001735687256, 0.33710581064224243, 0.3279603123664856, 0.3243005573749542], "accuracy": [0.2709021270275116, 0.4905560612678528, 0.5694096088409424, 0.6115440726280212, 0.6643772125244141, 0.7028133869171143, 0.7217012047767639, 0.7376832365989685, 0.7428345084190369, 0.7593448758125305, 0.767930269241333, 0.7728173136711121, 0.7882710099220276, 0.7868181467056274, 0.7926297783851624, 0.7992339134216309, 0.8072909712791443, 0.8064984679222107, 0.81548011302948, 0.8146876096725464, 0.822348415851593, 0.8273676037788391, 0.8297450542449951, 0.8407079577445984, 0.8378021121025085, 0.8409721255302429, 0.8428213000297546, 0.8418967127799988, 0.8496896028518677, 0.8500858545303345, 0.8481045961380005, 0.8507462739944458, 0.8565579056739807, 0.8593316674232483, 0.8556333184242249, 0.8667283058166504, 0.8631620407104492, 0.8654074668884277, 0.8672566413879395, 0.8696341514587402, 0.8720116019248962, 0.8705587387084961, 0.8753136992454529, 0.8779553771018982, 0.8762382864952087, 0.8779553771018982, 0.884691596031189, 0.8854840993881226, 0.8869370222091675], "val_loss": [2.0403265953063965, 1.5200560092926025, 1.0492826700210571, 0.842818021774292, 0.7549734711647034, 0.6990287899971008, 0.6515152454376221, 0.6215806603431702, 0.5940088033676147, 0.5718389749526978, 0.5507453680038452, 0.5363844633102417, 0.5235698223114014, 0.5145885348320007, 0.5025304555892944, 0.48986294865608215, 0.47630441188812256, 0.4699578583240509, 0.46243590116500854, 0.4613899290561676, 0.4504539370536804, 0.44371041655540466, 0.4367294907569885, 0.42786848545074463, 0.42509180307388306, 0.4201609194278717, 0.41658562421798706, 0.4130525588989258, 0.4129078686237335, 0.406247079372406, 0.4022349417209625, 0.4003405272960663, 0.3928801417350769, 0.3909522294998169, 0.38514217734336853, 0.38271427154541016, 0.38040369749069214, 0.3807753026485443, 0.3807716369628906, 0.3740057051181793, 0.37656328082084656, 0.37584736943244934, 0.3703397214412689, 0.37121206521987915, 0.3629167973995209, 0.36285480856895447, 0.3618743121623993, 0.35880574584007263, 0.3622099757194519], "val_accuracy": [0.5066666603088379, 0.6503333449363708, 0.6833333373069763, 0.7096666693687439, 0.7310000061988831, 0.7476666569709778, 0.7559999823570251, 0.7706666588783264, 0.7770000100135803, 0.7926666736602783, 0.800000011920929, 0.8013333082199097, 0.8016666769981384, 0.8199999928474426, 0.8270000219345093, 0.8230000138282776, 0.82833331823349, 0.8293333053588867, 0.8336666822433472, 0.8383333086967468, 0.8389999866485596, 0.8396666646003723, 0.8396666646003723, 0.8460000157356262, 0.8429999947547913, 0.8463333249092102, 0.8510000109672546, 0.8526666760444641, 0.8463333249092102, 0.8536666631698608, 0.8556666374206543, 0.8496666550636292, 0.8553333282470703, 0.8600000143051147, 0.8586666584014893, 0.8616666793823242, 0.862333357334137, 0.862666666507721, 0.8606666922569275, 0.8669999837875366, 0.8633333444595337, 0.8616666793823242, 0.8656666874885559, 0.8703333139419556, 0.8676666617393494, 0.8676666617393494, 0.8679999709129333, 0.8659999966621399, 0.8686666488647461]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 8, 5, 7, 1, 4, 4, 1, 2, 0], [0, 5, 0, 5, 1, 1, 1], [0, 66], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8548571467399597, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.square(tf.math.add(tf.math.subtract(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.math.subtract(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), grad), alpha)), tf.math.add(tf.math.negative(alpha), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292200803756714, 2.1882805824279785, 1.7554681301116943, 1.3369470834732056, 1.0584667921066284, 0.9008691310882568, 0.8568461537361145, 0.7882359623908997, 0.7618740797042847, 0.7323521375656128, 0.6992738246917725, 0.6858804225921631, 0.6550273895263672, 0.6201095581054688, 0.6056742668151855, 0.57896488904953, 0.5713662505149841, 0.5561676025390625, 0.5498647689819336, 0.5402441620826721, 0.5379278063774109, 0.5181455612182617, 0.5125767588615417, 0.5017324090003967, 0.4860073924064636, 0.47856512665748596, 0.4675615727901459, 0.4574737846851349, 0.46052926778793335, 0.4325248897075653, 0.4404224753379822, 0.4353289008140564, 0.43421387672424316, 0.4141511917114258, 0.4237391948699951, 0.41696903109550476, 0.4016260504722595, 0.39123839139938354, 0.38649114966392517, 0.37957051396369934, 0.37677615880966187, 0.3733460009098053, 0.37157610058784485, 0.3600068986415863, 0.36717456579208374, 0.34667548537254333, 0.35693052411079407, 0.3597920536994934, 0.34830597043037415, 0.33750414848327637, 0.3295755386352539, 0.32756397128105164, 0.31894445419311523, 0.3164425790309906, 0.29764148592948914, 0.3000938892364502, 0.30799800157546997, 0.30082201957702637, 0.29315516352653503], "accuracy": [0.13380002975463867, 0.3160744905471802, 0.43243956565856934, 0.5448421835899353, 0.6305639743804932, 0.6643772125244141, 0.6886804699897766, 0.7083608508110046, 0.7049266695976257, 0.7156254053115845, 0.7293620109558105, 0.7371549606323242, 0.7490423917770386, 0.7597411274909973, 0.7696473598480225, 0.780610203742981, 0.7792893648147583, 0.7882710099220276, 0.7952714562416077, 0.791441023349762, 0.7931581139564514, 0.8057059645652771, 0.8005547523498535, 0.8054417967796326, 0.816008448600769, 0.8145555257797241, 0.8231409192085266, 0.8265751004219055, 0.8274996876716614, 0.8308017253875732, 0.830669641494751, 0.8364813327789307, 0.837141752243042, 0.8380662798881531, 0.8400475382804871, 0.8454629778862, 0.8487650156021118, 0.8474441766738892, 0.8527275323867798, 0.8569541573524475, 0.8617091774940491, 0.8576145768165588, 0.8597279191017151, 0.8573504090309143, 0.8627657890319824, 0.869502067565918, 0.8651432991027832, 0.8688416481018066, 0.8726720213890076, 0.8693699836730957, 0.876370370388031, 0.8755778670310974, 0.8757099509239197, 0.8750495314598083, 0.8813894987106323, 0.8825782537460327, 0.8812574148178101, 0.8845595121383667, 0.8850878477096558], "val_loss": [2.2459986209869385, 2.01357364654541, 1.1345808506011963, 0.8947098851203918, 0.7827157974243164, 0.7189202308654785, 0.6894930005073547, 0.6783334016799927, 0.6629217267036438, 0.6357768177986145, 0.6048460006713867, 0.5822731852531433, 0.5594663619995117, 0.5574260950088501, 0.5469481945037842, 0.5409451723098755, 0.5293393731117249, 0.5308498740196228, 0.5333460569381714, 0.5133388042449951, 0.5169789791107178, 0.5009742975234985, 0.48910677433013916, 0.48371773958206177, 0.49323487281799316, 0.48821717500686646, 0.47742900252342224, 0.4855634868144989, 0.46888965368270874, 0.4538417160511017, 0.4814091920852661, 0.445166677236557, 0.4503645896911621, 0.48207101225852966, 0.45123738050460815, 0.434671550989151, 0.44419294595718384, 0.4331333339214325, 0.44073453545570374, 0.4462995231151581, 0.4263973534107208, 0.43104931712150574, 0.43528082966804504, 0.45882943272590637, 0.4463369846343994, 0.44350260496139526, 0.45677828788757324, 0.45295190811157227, 0.44624537229537964, 0.4470290243625641, 0.4518972933292389, 0.4524058401584625, 0.4393516480922699, 0.4321932792663574, 0.44702470302581787, 0.46148592233657837, 0.4676826298236847, 0.46898889541625977, 0.45579224824905396], "val_accuracy": [0.4246666729450226, 0.4286666810512543, 0.6420000195503235, 0.6823333501815796, 0.706333339214325, 0.7289999723434448, 0.7440000176429749, 0.7440000176429749, 0.7513333559036255, 0.75, 0.762333333492279, 0.7756666541099548, 0.7850000262260437, 0.7913333177566528, 0.7940000295639038, 0.7973333597183228, 0.8119999766349792, 0.8116666674613953, 0.8083333373069763, 0.8223333358764648, 0.8193333148956299, 0.8169999718666077, 0.8193333148956299, 0.8296666741371155, 0.8299999833106995, 0.8309999704360962, 0.8353333473205566, 0.843666672706604, 0.8460000157356262, 0.8486666679382324, 0.8333333134651184, 0.8450000286102295, 0.8476666808128357, 0.8473333120346069, 0.8543333411216736, 0.8463333249092102, 0.8420000076293945, 0.8510000109672546, 0.8566666841506958, 0.8523333072662354, 0.8539999723434448, 0.8550000190734863, 0.8610000014305115, 0.8606666922569275, 0.8646666407585144, 0.862666666507721, 0.8566666841506958, 0.8656666874885559, 0.8669999837875366, 0.8636666536331177, 0.8679999709129333, 0.8690000176429749, 0.8679999709129333, 0.875333309173584, 0.8730000257492065, 0.8690000176429749, 0.8713333606719971, 0.8723333477973938, 0.8700000047683716]}, "mapping_values": [1, 10, 5, 5, 3, 17, 10, 7, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 4], [0, 2], [0], [1], [0], [2], [0]], "fitness": -0.8134285807609558, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5443637371063232, 0.7677730321884155, 0.6559911370277405, 0.6316849589347839, 0.6422963738441467, 0.6241786479949951, 0.5723025798797607, 0.5639600157737732, 0.5651201009750366, 0.5742594599723816, 0.559898853302002], "accuracy": [0.47166821360588074, 0.724739134311676, 0.7563069462776184, 0.778761088848114, 0.7655527591705322, 0.7790252566337585, 0.8038568496704102, 0.7903843522071838, 0.8005547523498535, 0.7971205711364746, 0.8127063512802124], "val_loss": [0.718492329120636, 0.5834683179855347, 0.5525217056274414, 0.5300089716911316, 0.5512017607688904, 0.520281970500946, 0.5347546935081482, 0.5427398085594177, 0.5475205779075623, 0.5429302453994751, 0.6017168164253235], "val_accuracy": [0.7576666474342346, 0.7926666736602783, 0.8059999942779541, 0.812666654586792, 0.8180000185966492, 0.82833331823349, 0.8226666450500488, 0.8220000267028809, 0.8216666579246521, 0.8270000219345093, 0.8106666803359985]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 2], [2, 0, 1, 0, 2], [66, 39, 55], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 6, 5, 8, 4, 5], [0, 1, 5], [0], [1, 1], [0], [0], [0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 7, 7, 5, 4, 6, 1, 6], [1, 1, 7, 2, 3, 7, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 5, 3, 2, 1, 1, 0, 1, 1, 11, 6, 5, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(grad, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.pow(alpha, grad)), beta)), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5, 4, 4, 0, 9, 6], [0, 1, 0, 2, 2, 2], [39, 39, 88], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 5], [0, 0, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 2, 0, 4, 0, 0, 3, 1, 2, 0], [16, 29, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 11, 6, 3, 1, 0, 1, 1, 2, 1, 1, 1, 14, 7, 7, 4], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.pow(grad, tf.math.negative(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(grad, grad)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(beta, tf.math.sqrt(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.308471202850342, 2.3035268783569336, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.302584648132324, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09298639744520187, 0.09747721254825592, 0.10619468986988068, 0.10434553027153015, 0.10447761416435242, 0.1072513535618782, 0.10751552134752274, 0.10460969805717468, 0.1014397069811821], "val_loss": [2.3047165870666504, 2.3025853633880615, 2.3025853633880615, 2.3025848865509033, 2.3025848865509033, 2.3025848865509033, 2.3025853633880615, 2.3025853633880615, 2.3025851249694824], "val_accuracy": [0.06499999761581421, 0.09833333641290665, 0.09833333641290665, 0.10100000351667404, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [3, 2, 3, 0, 8], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 1, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 9, 2, 6, 3, 1, 4, 2, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 2, 1, 1, 1, 11, 6, 5, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3037638664245605, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 0, 2], [0, 1, 2, 2, 1], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 2, 4, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [9], [0], [48], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0], [3, 3, 3, 6, 1, 1, 4, 1, 4, 2, 8, 9], [0, 0, 1, 3, 0, 0, 3, 1, 2, 0], [57, 99, 96, 99, 61, 1]], "fitness": -0.08942857384681702, "mapping_values": [1, 10, 5, 5, 1, 6, 3, 3, 2, 1, 1, 0, 1, 22, 12, 10, 6], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(grad, grad)), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.subtract(tf.math.pow(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma), alpha)), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.308551549911499, 2.3099780082702637, 2.3102691173553467, 2.3102660179138184, 2.3102405071258545, 2.309940814971924], "accuracy": [0.09470347315073013, 0.09351472556591034, 0.09060890227556229, 0.0952318087220192, 0.09747721254825592, 0.09813763201236725], "val_loss": [2.3084585666656494, 2.3084585666656494, 2.3084585666656494, 2.3084585666656494, 2.3084585666656494, 2.3084585666656494], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]