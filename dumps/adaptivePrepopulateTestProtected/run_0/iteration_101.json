[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8708571195602417, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221935510635376, 1.8668558597564697, 1.3872612714767456, 1.0903221368789673, 0.9331814646720886, 0.8402225375175476, 0.7748375535011292, 0.7191660404205322, 0.6939716935157776, 0.670218288898468, 0.6402226090431213, 0.6071828007698059, 0.6053450107574463, 0.5753147006034851, 0.561639666557312, 0.5526821613311768, 0.5293659567832947, 0.5281012058258057, 0.5091690421104431, 0.4936264455318451, 0.4885401129722595, 0.48098140954971313, 0.4775848388671875, 0.4652225077152252, 0.4528503715991974, 0.4487123191356659, 0.43443048000335693, 0.4284444749355316, 0.4265895187854767, 0.41578710079193115, 0.41025298833847046, 0.40342679619789124, 0.3981815576553345, 0.3857102692127228, 0.3854309618473053, 0.3768577575683594, 0.3790268003940582, 0.3662363588809967, 0.362650990486145, 0.3560466468334198, 0.3583875298500061, 0.35318729281425476, 0.3405463695526123, 0.3399089574813843, 0.336161732673645, 0.3317156732082367, 0.32911306619644165, 0.3205958604812622, 0.31858333945274353, 0.3155142068862915, 0.3103427588939667, 0.3056145906448364, 0.30068036913871765, 0.29179951548576355, 0.2928343415260315, 0.2865961790084839, 0.2802834212779999, 0.2770995795726776, 0.27455493807792664, 0.28110960125923157, 0.26726454496383667, 0.2707999646663666, 0.26344630122184753, 0.2640759348869324, 0.25811395049095154, 0.24458923935890198], "accuracy": [0.2685246467590332, 0.47285696864128113, 0.5695416927337646, 0.6168273687362671, 0.6670188903808594, 0.6946242451667786, 0.7132478952407837, 0.7383436560630798, 0.7440232634544373, 0.7537974119186401, 0.7618544697761536, 0.7781006693840027, 0.7753269076347351, 0.7903843522071838, 0.7954035401344299, 0.7960638999938965, 0.8125742673873901, 0.8095363974571228, 0.8149517774581909, 0.8224804997444153, 0.8208954930305481, 0.8231409192085266, 0.8285563588142395, 0.8313300609588623, 0.8383304476737976, 0.8342359066009521, 0.8412362933158875, 0.8424250483512878, 0.8486329317092896, 0.8475762605667114, 0.8561616539955139, 0.8524633646011353, 0.8560295701026917, 0.8615770936012268, 0.8642187118530273, 0.8669924736022949, 0.8621054291725159, 0.8667283058166504, 0.8661999702453613, 0.8708229064941406, 0.872407853603363, 0.8705587387084961, 0.8770307898521423, 0.8766345381736755, 0.8771628737449646, 0.8809932470321655, 0.8811253309249878, 0.8835028409957886, 0.8868049383163452, 0.8886540532112122, 0.8869370222091675, 0.8869370222091675, 0.8883898854255676, 0.8922203183174133, 0.8931449055671692, 0.8948619961738586, 0.8973715305328369, 0.9006736278533936, 0.8993527889251709, 0.8975036144256592, 0.9033153057098389, 0.8989565372467041, 0.904768168926239, 0.9045040011405945, 0.9085986018180847, 0.910711944103241], "val_loss": [2.0401620864868164, 1.5149072408676147, 1.0503766536712646, 0.8513860106468201, 0.758959949016571, 0.7063864469528198, 0.658277690410614, 0.6272672414779663, 0.6000809073448181, 0.5830972790718079, 0.5586075186729431, 0.5473633408546448, 0.5300849080085754, 0.5162248015403748, 0.5038739442825317, 0.49295881390571594, 0.4802187383174896, 0.4745301902294159, 0.46449336409568787, 0.4586317539215088, 0.4454992413520813, 0.45021894574165344, 0.4388240575790405, 0.43625733256340027, 0.42313098907470703, 0.42138224840164185, 0.419648677110672, 0.4078827202320099, 0.4088115096092224, 0.40084293484687805, 0.40293651819229126, 0.3964266777038574, 0.38854289054870605, 0.3926355838775635, 0.3834235370159149, 0.38119053840637207, 0.38082998991012573, 0.37944507598876953, 0.37243351340293884, 0.37743937969207764, 0.37128332257270813, 0.3699532151222229, 0.3669840097427368, 0.36838334798812866, 0.3649333417415619, 0.3628026247024536, 0.36655062437057495, 0.3593585193157196, 0.36211922764778137, 0.35522758960723877, 0.35692253708839417, 0.3540784418582916, 0.34922081232070923, 0.35290640592575073, 0.3504878878593445, 0.34592685103416443, 0.3490801155567169, 0.3487835228443146, 0.3491838276386261, 0.34671005606651306, 0.3435392379760742, 0.3470115065574646, 0.33993905782699585, 0.3445577025413513, 0.34121695160865784, 0.34658315777778625], "val_accuracy": [0.5096666812896729, 0.6713333129882812, 0.6846666932106018, 0.7076666951179504, 0.7336666584014893, 0.7509999871253967, 0.7646666765213013, 0.7746666669845581, 0.7803333401679993, 0.7826666831970215, 0.7906666398048401, 0.8003333210945129, 0.8006666898727417, 0.8069999814033508, 0.8186666369438171, 0.8246666789054871, 0.8240000009536743, 0.8213333487510681, 0.8309999704360962, 0.8379999995231628, 0.840666651725769, 0.8399999737739563, 0.8393333554267883, 0.843999981880188, 0.8496666550636292, 0.8479999899864197, 0.8500000238418579, 0.859333336353302, 0.8543333411216736, 0.8606666922569275, 0.8583333492279053, 0.859000027179718, 0.8653333187103271, 0.859000027179718, 0.8659999966621399, 0.8650000095367432, 0.8656666874885559, 0.8676666617393494, 0.8686666488647461, 0.8679999709129333, 0.8690000176429749, 0.8679999709129333, 0.8679999709129333, 0.8679999709129333, 0.8706666827201843, 0.8713333606719971, 0.8706666827201843, 0.871999979019165, 0.871999979019165, 0.871999979019165, 0.8740000128746033, 0.8769999742507935, 0.878333330154419, 0.8786666393280029, 0.8796666860580444, 0.8793333172798157, 0.8790000081062317, 0.878333330154419, 0.878000020980835, 0.8806666731834412, 0.8836666941642761, 0.878000020980835, 0.8830000162124634, 0.8816666603088379, 0.8836666941642761, 0.8790000081062317]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 0], [0], [0], [1], [0], [2], [0]], "fitness": -0.831428587436676, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5752756595611572, 0.8383509516716003, 0.698144257068634, 0.6166002154350281, 0.5790514945983887, 0.5600379109382629, 0.5713145732879639, 0.5458605885505676, 0.5426921844482422, 0.535233199596405, 0.5251350998878479, 0.540764570236206, 0.5540103912353516, 0.5561745762825012, 0.5453487038612366, 0.5664055943489075, 0.5245380401611328], "accuracy": [0.4773477613925934, 0.7106062769889832, 0.7490423917770386, 0.7652885913848877, 0.7885351777076721, 0.7992339134216309, 0.7976489067077637, 0.8043851256370544, 0.8078193068504333, 0.8131026029586792, 0.8161405324935913, 0.8123101592063904, 0.8202351331710815, 0.7969884872436523, 0.809140145778656, 0.8186501264572144, 0.8178576231002808], "val_loss": [0.799610435962677, 0.6080494523048401, 0.5561862587928772, 0.5475181341171265, 0.5364670157432556, 0.5255658030509949, 0.5800256133079529, 0.606792151927948, 0.5445257425308228, 0.5721561908721924, 0.5353427529335022, 0.5783835649490356, 0.5509833097457886, 0.5568680167198181, 0.5584278702735901, 0.5835038423538208, 0.5866822004318237], "val_accuracy": [0.731333315372467, 0.7793333530426025, 0.7913333177566528, 0.8029999732971191, 0.8033333420753479, 0.8019999861717224, 0.815666675567627, 0.8130000233650208, 0.812333345413208, 0.8223333358764648, 0.8173333406448364, 0.8333333134651184, 0.8146666884422302, 0.8180000185966492, 0.828000009059906, 0.8183333277702332, 0.8166666626930237]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 0], [0], [0], [0, 0, 0, 1, 1], [0, 5, 4], [0, 1], [0], [0, 1], [0], [1], [0]], "fitness": -0.801714301109314, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292604684829712, 2.1858460903167725, 1.76130211353302, 1.3366029262542725, 1.074820876121521, 0.9159008860588074, 0.817829966545105, 0.7905069589614868, 0.7584893703460693, 0.7382936477661133, 0.6897333860397339, 0.6686455607414246, 0.6288062930107117, 0.6289595365524292, 0.6102503538131714, 0.5922567248344421, 0.5794356465339661, 0.5747556090354919, 0.556093156337738, 0.553398609161377, 0.5368944406509399, 0.5315366387367249, 0.5311558842658997, 0.5065525770187378, 0.4990304708480835, 0.49330851435661316, 0.47655338048934937, 0.4679965078830719, 0.4602300226688385, 0.4522426426410675, 0.4405626058578491, 0.4276706874370575, 0.42278146743774414, 0.4288090467453003, 0.41514408588409424, 0.4192110598087311, 0.3984319865703583, 0.4013572037220001, 0.4009978473186493, 0.3952012062072754, 0.3836614191532135, 0.3772259056568146, 0.36949092149734497, 0.3692235052585602, 0.3586372435092926, 0.34126996994018555, 0.3470347821712494, 0.34572553634643555, 0.3389469087123871, 0.3383544385433197, 0.32724976539611816, 0.31801119446754456, 0.32192376255989075, 0.31589096784591675, 0.29495424032211304, 0.2965930998325348, 0.30399593710899353, 0.2958676218986511, 0.3013133108615875, 0.2906643748283386, 0.28467273712158203, 0.27212250232696533], "accuracy": [0.12693171203136444, 0.3267732262611389, 0.4266279339790344, 0.5424646735191345, 0.6349227428436279, 0.6557918190956116, 0.6944921612739563, 0.7041342258453369, 0.7143045663833618, 0.7193237543106079, 0.7386078238487244, 0.7416457533836365, 0.7549861073493958, 0.7563069462776184, 0.7574957013130188, 0.7684586048126221, 0.7773081660270691, 0.7759873270988464, 0.7857614755630493, 0.7816668748855591, 0.7889314293861389, 0.793422281742096, 0.7954035401344299, 0.8029322624206543, 0.8050455451011658, 0.8141592741012573, 0.8136309385299683, 0.8226125836372375, 0.8253863453865051, 0.8241975903511047, 0.8222163319587708, 0.8327829837799072, 0.8354246616363525, 0.8366134166717529, 0.8393871188163757, 0.8401796221733093, 0.8492933511734009, 0.837537944316864, 0.8399154543876648, 0.8428213000297546, 0.8495575189590454, 0.8524633646011353, 0.8553691506385803, 0.8549728989601135, 0.8623695969581604, 0.8661999702453613, 0.8622375130653381, 0.8610487580299377, 0.8673887252807617, 0.8634262084960938, 0.8683133125305176, 0.8714832663536072, 0.8696341514587402, 0.8757099509239197, 0.8809932470321655, 0.8848236799240112, 0.8787478804588318, 0.8817857503890991, 0.8767666220664978, 0.8758420348167419, 0.8833707571029663, 0.8882578015327454], "val_loss": [2.244955539703369, 2.0082030296325684, 1.133008599281311, 0.8962055444717407, 0.7666993737220764, 0.7198445796966553, 0.6900057196617126, 0.6823084354400635, 0.650806725025177, 0.624782145023346, 0.5763473510742188, 0.5683364868164062, 0.5461675524711609, 0.5319520831108093, 0.5314881205558777, 0.5367237329483032, 0.523673951625824, 0.5090277791023254, 0.5022063255310059, 0.5019205212593079, 0.49806734919548035, 0.5132035613059998, 0.5003365278244019, 0.4880574643611908, 0.49801504611968994, 0.4840337634086609, 0.4736270308494568, 0.47907233238220215, 0.47828105092048645, 0.46682044863700867, 0.4529024660587311, 0.4534868896007538, 0.460304856300354, 0.4537850320339203, 0.45288997888565063, 0.4577454924583435, 0.446820467710495, 0.43004289269447327, 0.42919740080833435, 0.4467090368270874, 0.43804019689559937, 0.4241531491279602, 0.4220390319824219, 0.4265490174293518, 0.4251139461994171, 0.4266880750656128, 0.4251306653022766, 0.4225018620491028, 0.4224039614200592, 0.43052181601524353, 0.4389498233795166, 0.4353356957435608, 0.4453185200691223, 0.445100873708725, 0.4433846175670624, 0.4499652087688446, 0.44774046540260315, 0.43976500630378723, 0.4309016466140747, 0.4289514124393463, 0.43896540999412537, 0.46495553851127625], "val_accuracy": [0.42633333802223206, 0.45899999141693115, 0.6349999904632568, 0.6830000281333923, 0.7076666951179504, 0.7260000109672546, 0.7350000143051147, 0.7406666874885559, 0.7366666793823242, 0.7586666941642761, 0.7730000019073486, 0.7816666960716248, 0.7873333096504211, 0.7913333177566528, 0.7910000085830688, 0.7913333177566528, 0.796999990940094, 0.8009999990463257, 0.7983333468437195, 0.800000011920929, 0.8050000071525574, 0.8043333292007446, 0.8073333501815796, 0.8090000152587891, 0.8109999895095825, 0.8186666369438171, 0.8220000267028809, 0.8233333230018616, 0.8296666741371155, 0.8270000219345093, 0.8363333344459534, 0.8383333086967468, 0.8393333554267883, 0.8330000042915344, 0.8333333134651184, 0.8416666388511658, 0.8346666693687439, 0.840666651725769, 0.8456666469573975, 0.843999981880188, 0.8416666388511658, 0.8429999947547913, 0.8500000238418579, 0.8510000109672546, 0.8529999852180481, 0.8513333201408386, 0.8496666550636292, 0.8533333539962769, 0.8523333072662354, 0.8529999852180481, 0.8550000190734863, 0.8543333411216736, 0.8550000190734863, 0.859666645526886, 0.859666645526886, 0.8583333492279053, 0.862666666507721, 0.8583333492279053, 0.8550000190734863, 0.8610000014305115, 0.8616666793823242, 0.8606666922569275]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 3, 3, 0, 3, 0, 5], [0, 1, 0, 2], [76, 20], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 9, 5], [0, 2, 0, 3], [16, 16], [0, 1, 1], [1], [0, 2], [42], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 5, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 1, 3, 4, 2, 0], [16, 44, 96, 99, 61, 4]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 2, 7, 5, 2, 2, 3, 1, 2, 1, 17, 9, 8, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, sigma))))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 22], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [91], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [53, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 1, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 5], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 3, 6, 8, 4, 4, 1, 4, 2, 8], [2, 0, 0, 3, 0, 0, 3, 2, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 2, 2, 1, 1, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), beta)), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303274393081665, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 0], [0, 1, 1, 2], [39, 93], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5, 0], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 3, 1, 4, 2, 8], [0, 1, 0, 3, 0, 0, 1, 1, 2, 0], [16, 99, 96, 10, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 1, 11, 7, 4, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(alpha, tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), alpha)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555, 0.09433333575725555]}}]