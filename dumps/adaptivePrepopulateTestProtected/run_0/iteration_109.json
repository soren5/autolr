[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2241744995117188, 1.8753129243850708, 1.398967981338501, 1.0949084758758545, 0.9364327192306519, 0.8464971780776978, 0.7732425928115845, 0.7316570281982422, 0.6995232701301575, 0.6582913994789124, 0.6257668137550354, 0.6078053116798401, 0.5859305262565613, 0.5806881189346313, 0.5663037896156311, 0.5461164712905884, 0.5262336730957031, 0.5217174291610718, 0.5127710700035095, 0.5007437467575073, 0.48968419432640076, 0.4740234613418579, 0.47009649872779846, 0.46016332507133484, 0.45464572310447693, 0.4427807927131653, 0.4369616210460663, 0.43016648292541504, 0.42892777919769287, 0.41893669962882996, 0.41368651390075684, 0.403185099363327, 0.39887040853500366, 0.4056398272514343, 0.3816925585269928, 0.38064900040626526, 0.37473341822624207, 0.36522626876831055, 0.36963367462158203, 0.36489197611808777, 0.35827502608299255, 0.34516608715057373, 0.34661129117012024, 0.3426349461078644, 0.3318440914154053, 0.3279588520526886, 0.32057034969329834, 0.32109907269477844, 0.3112640976905823, 0.3116123378276825, 0.30451729893684387], "accuracy": [0.27460044622421265, 0.478140264749527, 0.5654470920562744, 0.6178840398788452, 0.661471426486969, 0.6931713223457336, 0.7269845604896545, 0.7301545143127441, 0.7436270117759705, 0.7578919529914856, 0.7713643908500671, 0.77677983045578, 0.7848368883132935, 0.7880068421363831, 0.7947431206703186, 0.8038568496704102, 0.8132346868515015, 0.8103289008140564, 0.8177255392074585, 0.8212917447090149, 0.8260467648506165, 0.8274996876716614, 0.8315942287445068, 0.8370096683502197, 0.837537944316864, 0.844010055065155, 0.846387505531311, 0.8465195894241333, 0.8445383906364441, 0.8490291833877563, 0.8498216867446899, 0.8561616539955139, 0.8568220734596252, 0.8565579056739807, 0.8638224601745605, 0.8631620407104492, 0.8636903762817383, 0.8672566413879395, 0.8684453964233398, 0.8659358024597168, 0.8732003569602966, 0.873860776424408, 0.8800686597824097, 0.876370370388031, 0.8833707571029663, 0.8786157965660095, 0.8838990926742554, 0.8845595121383667, 0.8862766027450562, 0.8842953443527222, 0.8903711438179016], "val_loss": [2.043168544769287, 1.5244823694229126, 1.0509003400802612, 0.8309954404830933, 0.7375590205192566, 0.6819328665733337, 0.6400681734085083, 0.6003257036209106, 0.5835949778556824, 0.5561989545822144, 0.5378928780555725, 0.523395299911499, 0.5088404417037964, 0.4997711479663849, 0.4880925416946411, 0.4749357998371124, 0.47084736824035645, 0.46038341522216797, 0.45804524421691895, 0.44969436526298523, 0.43498149514198303, 0.4319899082183838, 0.42334866523742676, 0.42249158024787903, 0.4138929545879364, 0.41299763321876526, 0.4066184163093567, 0.40467971563339233, 0.41666263341903687, 0.39465707540512085, 0.391742467880249, 0.3865472674369812, 0.3885699510574341, 0.38030949234962463, 0.37759163975715637, 0.37537848949432373, 0.37245479226112366, 0.371244877576828, 0.3663875460624695, 0.3673848509788513, 0.37107545137405396, 0.36730557680130005, 0.3613256812095642, 0.35702815651893616, 0.3573472499847412, 0.35778582096099854, 0.35461410880088806, 0.34972718358039856, 0.3522522747516632, 0.3484141528606415, 0.34838956594467163], "val_accuracy": [0.5416666865348816, 0.6573333144187927, 0.6819999814033508, 0.7086666822433472, 0.7323333621025085, 0.7543333172798157, 0.7676666378974915, 0.7870000004768372, 0.7903333306312561, 0.7983333468437195, 0.8063333630561829, 0.8080000281333923, 0.8183333277702332, 0.8173333406448364, 0.8253333568572998, 0.8266666531562805, 0.8303333520889282, 0.8296666741371155, 0.8333333134651184, 0.8353333473205566, 0.8416666388511658, 0.843999981880188, 0.8463333249092102, 0.8429999947547913, 0.8510000109672546, 0.8533333539962769, 0.8510000109672546, 0.8516666889190674, 0.847000002861023, 0.8566666841506958, 0.856333315372467, 0.8636666536331177, 0.8569999933242798, 0.862666666507721, 0.8636666536331177, 0.8606666922569275, 0.8650000095367432, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8629999756813049, 0.8653333187103271, 0.8686666488647461, 0.8693333268165588, 0.8679999709129333, 0.8706666827201843, 0.8683333396911621, 0.8693333268165588, 0.8690000176429749, 0.8679999709129333, 0.8693333268165588]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8579999804496765, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2928409576416016, 2.190317153930664, 1.77956223487854, 1.37501859664917, 1.0699039697647095, 0.9382781982421875, 0.8544241189956665, 0.8223622441291809, 0.7739659547805786, 0.7531530857086182, 0.7066569924354553, 0.6959013342857361, 0.6401435732841492, 0.6186559796333313, 0.6185480952262878, 0.5879089832305908, 0.5862370133399963, 0.5653901100158691, 0.5643724799156189, 0.5473358035087585, 0.5419337153434753, 0.5171202421188354, 0.5069200396537781, 0.5077383518218994, 0.49250876903533936, 0.46891680359840393, 0.4677187502384186, 0.4580494463443756, 0.45521989464759827, 0.44819343090057373, 0.4382897615432739, 0.42970526218414307, 0.4197581708431244, 0.4105292856693268, 0.4085838198661804, 0.4051259458065033, 0.3899185061454773, 0.39541587233543396, 0.390338659286499, 0.3837134838104248, 0.3798638880252838, 0.37814420461654663, 0.3577764630317688, 0.34948307275772095, 0.34467726945877075, 0.3503534495830536, 0.348376601934433, 0.3479433059692383, 0.33859723806381226, 0.34225234389305115, 0.337033748626709, 0.31531447172164917, 0.3226446807384491, 0.32612597942352295], "accuracy": [0.1290450394153595, 0.3343019485473633, 0.4255712628364563, 0.5287280678749084, 0.637828528881073, 0.658961832523346, 0.6896050572395325, 0.707568347454071, 0.7005679607391357, 0.711530864238739, 0.737947404384613, 0.7349095344543457, 0.7560427784919739, 0.7600052952766418, 0.7576277852058411, 0.7707040309906006, 0.77677983045578, 0.7832518815994263, 0.7865539789199829, 0.7911768555641174, 0.7946110367774963, 0.8024039268493652, 0.8057059645652771, 0.8078193068504333, 0.8076872229576111, 0.8161405324935913, 0.8214238286018372, 0.8278959393501282, 0.8280280232429504, 0.8260467648506165, 0.8323867321014404, 0.839519202709198, 0.8399154543876648, 0.8393871188163757, 0.8466516733169556, 0.8511425256729126, 0.8521991968154907, 0.8532558679580688, 0.8461233377456665, 0.8511425256729126, 0.8543124794960022, 0.8617091774940491, 0.8634262084960938, 0.858671247959137, 0.8627657890319824, 0.8589354157447815, 0.863558292388916, 0.86118084192276, 0.8698983192443848, 0.8683133125305176, 0.8698983192443848, 0.8709549307823181, 0.8746532797813416, 0.8716153502464294], "val_loss": [2.2455332279205322, 2.0196454524993896, 1.1479072570800781, 0.8534436821937561, 0.771737813949585, 0.711686372756958, 0.6587511301040649, 0.6276082992553711, 0.6212236881256104, 0.6191542744636536, 0.5666166543960571, 0.5466348528862, 0.5395578742027283, 0.530797004699707, 0.5253997445106506, 0.5084599852561951, 0.49803027510643005, 0.49080654978752136, 0.4842757284641266, 0.4856932461261749, 0.4808354377746582, 0.47175830602645874, 0.4665420651435852, 0.458475798368454, 0.4463195502758026, 0.4418189227581024, 0.4320494830608368, 0.42715951800346375, 0.4307783544063568, 0.4219440817832947, 0.41025468707084656, 0.4251946210861206, 0.4156341254711151, 0.4064778983592987, 0.42014074325561523, 0.4145549237728119, 0.41802385449409485, 0.4096008241176605, 0.4053352475166321, 0.41005080938339233, 0.43549472093582153, 0.43152961134910583, 0.40533560514450073, 0.4006618559360504, 0.4267215132713318, 0.39627397060394287, 0.40392863750457764, 0.423835813999176, 0.4082052707672119, 0.40112248063087463, 0.4214004576206207, 0.39995867013931274, 0.41493484377861023, 0.41548478603363037], "val_accuracy": [0.43299999833106995, 0.4556666612625122, 0.6499999761581421, 0.6926666498184204, 0.7149999737739563, 0.7336666584014893, 0.7486666440963745, 0.7516666650772095, 0.7583333253860474, 0.7590000033378601, 0.7699999809265137, 0.7839999794960022, 0.7903333306312561, 0.7976666688919067, 0.7913333177566528, 0.7976666688919067, 0.8050000071525574, 0.8100000023841858, 0.8143333196640015, 0.8213333487510681, 0.8233333230018616, 0.8216666579246521, 0.8273333311080933, 0.8343333601951599, 0.8343333601951599, 0.8416666388511658, 0.8463333249092102, 0.8489999771118164, 0.8450000286102295, 0.8529999852180481, 0.846666693687439, 0.8539999723434448, 0.8553333282470703, 0.859000027179718, 0.8576666712760925, 0.8503333330154419, 0.8643333315849304, 0.8616666793823242, 0.8650000095367432, 0.8666666746139526, 0.8600000143051147, 0.8619999885559082, 0.8650000095367432, 0.8696666955947876, 0.8703333139419556, 0.8673333525657654, 0.8619999885559082, 0.8673333525657654, 0.8723333477973938, 0.8696666955947876, 0.8666666746139526, 0.8703333139419556, 0.8666666746139526, 0.8640000224113464]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8259999752044678, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4975310564041138, 0.7500531077384949, 0.6746313571929932, 0.6388959288597107, 0.5704134106636047, 0.564941942691803, 0.5430951118469238, 0.5366489291191101, 0.5183310508728027, 0.5013270378112793, 0.5314183831214905, 0.5369853973388672, 0.5695908069610596, 0.5202389359474182], "accuracy": [0.48632940649986267, 0.7322678565979004, 0.7567031979560852, 0.7675340175628662, 0.7924976944923401, 0.7872143983840942, 0.8088759779930115, 0.8078193068504333, 0.8104609847068787, 0.8173292875289917, 0.8165367841720581, 0.8142913579940796, 0.8076872229576111, 0.8156121969223022], "val_loss": [0.7350167036056519, 0.6260073781013489, 0.5845413208007812, 0.5233030319213867, 0.5255278944969177, 0.5144087076187134, 0.5116607546806335, 0.5165808796882629, 0.45449259877204895, 0.5222160816192627, 0.5163219571113586, 0.5783554911613464, 0.5104960799217224, 0.5295048952102661], "val_accuracy": [0.7450000047683716, 0.7829999923706055, 0.812666654586792, 0.8119999766349792, 0.8163333535194397, 0.8286666870117188, 0.8273333311080933, 0.828000009059906, 0.8479999899864197, 0.8410000205039978, 0.8403333425521851, 0.8450000286102295, 0.8199999928474426, 0.8363333344459534]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 1, 0, 2, 1, 2, 0], [93, 99, 62, 27, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(alpha, tf.math.pow(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), beta)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303981065750122, 2.3025918006896973, 2.302591562271118, 2.3025875091552734, 2.302591562271118, 2.302610397338867], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025848865509033, 2.302584409713745, 2.302583932876587, 2.3025870323181152, 2.302591323852539, 2.3025975227355957], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 2, 3, 0, 3], [0, 1, 0, 2], [39, 85], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 2, 5, 1], [0, 2, 0, 3, 5], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [6, 3, 3, 6, 8, 2, 4, 1, 4, 2, 8, 7, 1, 1, 2, 0, 6, 5], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0, 6, 2, 5, 7, 1], [16, 54, 96, 99, 61, 78]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 12, 7, 5, 2, 1, 0, 1, 1, 33, 18, 15, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.sqrt(grad), tf.math.add(tf.math.subtract(sigma, alpha), tf.math.subtract(tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)))), beta)))), grad), tf.math.divide_no_nan(grad, tf.math.square(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 4, 3], [2, 1, 0, 0, 3], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 0], [0, 2, 0, 2], [16, 16], [0, 1, 0, 1], [2, 5], [0, 2], [68], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 6, 1, 4, 2, 8], [0, 4, 4, 3, 0, 0, 3, 4, 2, 0], [16, 96, 96, 99, 61, 43]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(grad, alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.square(beta)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303555727005005, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 10, 5, 5, 2, 11, 7, 4, 2, 4, 2, 2, 1, 1, 0, 1, 1], "tree_depth": 15}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [6, 97], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.06628571450710297, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 0, 3, 1, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)", "other_info": {"loss": [3.836236613801738e+17, 4.465335935529124e+17, 4.4964383706998374e+17, 4.531546807766876e+17, 4.493077988287447e+17, 4.3589983864356864e+17], "accuracy": [0.09166556596755981, 0.09470347315073013, 0.09668471664190292, 0.09100515395402908, 0.09285431355237961, 0.09417514503002167], "val_loss": [3.324382340112712e+17, 3.324382340112712e+17, 3.324382340112712e+17, 3.324382340112712e+17, 3.324382340112712e+17, 3.324382340112712e+17], "val_accuracy": [0.06566666811704636, 0.06566666811704636, 0.06566666811704636, 0.06566666811704636, 0.06566666811704636, 0.06566666811704636]}}]