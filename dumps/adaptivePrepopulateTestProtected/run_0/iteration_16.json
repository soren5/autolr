[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8765714168548584, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223011016845703, 1.865624189376831, 1.3909275531768799, 1.0906970500946045, 0.9346197843551636, 0.8316051959991455, 0.7765270471572876, 0.7175954580307007, 0.689998984336853, 0.6539434790611267, 0.6345682740211487, 0.6125860214233398, 0.5929545760154724, 0.5741943120956421, 0.5605514049530029, 0.5450935363769531, 0.5290834307670593, 0.5135375261306763, 0.5038453936576843, 0.49123626947402954, 0.4824116826057434, 0.47230637073516846, 0.46095383167266846, 0.45251646637916565, 0.4567464590072632, 0.44120994210243225, 0.42931798100471497, 0.4283377230167389, 0.41460976004600525, 0.403716117143631, 0.39799705147743225, 0.38751497864723206, 0.39453190565109253, 0.3867490887641907, 0.3738558888435364, 0.37420085072517395, 0.36704206466674805, 0.35887202620506287, 0.3570341169834137, 0.35280492901802063, 0.34396079182624817, 0.3353290259838104, 0.3330399990081787, 0.33638864755630493, 0.33185482025146484, 0.31505221128463745, 0.3144376277923584, 0.31331920623779297, 0.30786311626434326, 0.30375027656555176, 0.3012574315071106, 0.2957165539264679, 0.29118576645851135, 0.28823795914649963, 0.2842210531234741, 0.2840941250324249, 0.27437901496887207, 0.27262750267982483, 0.2716067135334015, 0.27041494846343994, 0.2598229944705963, 0.251598984003067, 0.2570091187953949, 0.24883396923542023, 0.24945122003555298, 0.23872071504592896, 0.23352831602096558, 0.2393052726984024, 0.23676493763923645, 0.22705252468585968, 0.22216331958770752, 0.2274605929851532, 0.21139736473560333, 0.21167641878128052, 0.21031971275806427, 0.21228449046611786, 0.21343117952346802, 0.20817655324935913], "accuracy": [0.26337340474128723, 0.4963677227497101, 0.5735041499137878, 0.6207898855209351, 0.6701889038085938, 0.7073041796684265, 0.7268524765968323, 0.737947404384613, 0.7526086568832397, 0.7652885913848877, 0.7687227725982666, 0.7729493975639343, 0.7816668748855591, 0.7891955971717834, 0.7973847389221191, 0.802800178527832, 0.8125742673873901, 0.816008448600769, 0.8175934553146362, 0.8210275769233704, 0.826310932636261, 0.8241975903511047, 0.8359529972076416, 0.8367455005645752, 0.8352925777435303, 0.8426892161369324, 0.8450667262077332, 0.8467837572097778, 0.854708731174469, 0.8551049828529358, 0.8584070801734924, 0.8615770936012268, 0.8576145768165588, 0.8610487580299377, 0.8651432991027832, 0.867520809173584, 0.8697662353515625, 0.8708229064941406, 0.8702945709228516, 0.8689737319946289, 0.8737286925315857, 0.8767666220664978, 0.8813894987106323, 0.8805969953536987, 0.883238673210144, 0.889578640460968, 0.884691596031189, 0.8878615498542786, 0.8891823887825012, 0.8905032277107239, 0.8893144726753235, 0.8951261639595032, 0.8968431949615479, 0.896446943283081, 0.8953903317451477, 0.8988244533538818, 0.900409460067749, 0.9006736278533936, 0.902390718460083, 0.9026548862457275, 0.9056927561759949, 0.9101836085319519, 0.9038436412811279, 0.9076740145683289, 0.906749427318573, 0.9137498140335083, 0.9177123308181763, 0.9158631563186646, 0.9129573106765747, 0.9161273241043091, 0.9207502603530884, 0.9183727502822876, 0.9251089692115784, 0.9240522980690002, 0.9294676780700684, 0.9216747879981995, 0.9225993752479553, 0.9266939759254456], "val_loss": [2.0393662452697754, 1.5163432359695435, 1.052855372428894, 0.84853595495224, 0.7553724646568298, 0.7027198672294617, 0.6598775386810303, 0.623932957649231, 0.5951581597328186, 0.575713574886322, 0.5536686778068542, 0.5429341793060303, 0.5218592286109924, 0.5090736746788025, 0.4945620000362396, 0.4894779324531555, 0.4822985827922821, 0.47780728340148926, 0.4668852686882019, 0.4535849690437317, 0.45237162709236145, 0.44523975253105164, 0.44240477681159973, 0.4442044198513031, 0.43248072266578674, 0.43423476815223694, 0.4240863025188446, 0.41704243421554565, 0.4154031574726105, 0.41071370244026184, 0.4096387028694153, 0.4056234061717987, 0.406754732131958, 0.3978225886821747, 0.40128466486930847, 0.39493536949157715, 0.39047834277153015, 0.3979533016681671, 0.38745030760765076, 0.3896806538105011, 0.3836043179035187, 0.38053128123283386, 0.3809419870376587, 0.3778983950614929, 0.3761148154735565, 0.3765009343624115, 0.37689653038978577, 0.3764803409576416, 0.3714219927787781, 0.37403666973114014, 0.36849063634872437, 0.3699629008769989, 0.3696681261062622, 0.3686944246292114, 0.36859026551246643, 0.36190205812454224, 0.3709731996059418, 0.3621075749397278, 0.36187833547592163, 0.36555323004722595, 0.35909056663513184, 0.35743677616119385, 0.3601115345954895, 0.3594057261943817, 0.36111798882484436, 0.3632054030895233, 0.3720882833003998, 0.35455289483070374, 0.3622690737247467, 0.3586713969707489, 0.36113065481185913, 0.3577309548854828, 0.3616664707660675, 0.3606627881526947, 0.3581937551498413, 0.37010177969932556, 0.3561130464076996, 0.35808277130126953], "val_accuracy": [0.5336666703224182, 0.6470000147819519, 0.6696666479110718, 0.6926666498184204, 0.7243333458900452, 0.737666666507721, 0.7490000128746033, 0.765333354473114, 0.7696666717529297, 0.7803333401679993, 0.7933333516120911, 0.7979999780654907, 0.8009999990463257, 0.8119999766349792, 0.8183333277702332, 0.812666654586792, 0.8213333487510681, 0.8226666450500488, 0.8293333053588867, 0.831333339214325, 0.8293333053588867, 0.8366666436195374, 0.8349999785423279, 0.8330000042915344, 0.8363333344459534, 0.8376666903495789, 0.8433333039283752, 0.8446666598320007, 0.8473333120346069, 0.8526666760444641, 0.8496666550636292, 0.8496666550636292, 0.8489999771118164, 0.8539999723434448, 0.8533333539962769, 0.8576666712760925, 0.8576666712760925, 0.8550000190734863, 0.859666645526886, 0.8569999933242798, 0.8606666922569275, 0.8619999885559082, 0.8610000014305115, 0.8650000095367432, 0.8646666407585144, 0.862333357334137, 0.8659999966621399, 0.8666666746139526, 0.8650000095367432, 0.8629999756813049, 0.8659999966621399, 0.8686666488647461, 0.8673333525657654, 0.8666666746139526, 0.8683333396911621, 0.8723333477973938, 0.871666669845581, 0.8696666955947876, 0.8723333477973938, 0.8686666488647461, 0.8730000257492065, 0.8766666650772095, 0.8736666440963745, 0.8736666440963745, 0.8733333349227905, 0.8769999742507935, 0.8683333396911621, 0.8773333430290222, 0.878000020980835, 0.8769999742507935, 0.8796666860580444, 0.8809999823570251, 0.8820000290870667, 0.8773333430290222, 0.8773333430290222, 0.8736666440963745, 0.8820000290870667, 0.8806666731834412]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8665714263916016, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2248756885528564, 1.8694864511489868, 1.4074870347976685, 1.0955350399017334, 0.9418045878410339, 0.8425047993659973, 0.7805651426315308, 0.7290297746658325, 0.6994132399559021, 0.6644750237464905, 0.6379767656326294, 0.6139824986457825, 0.5823411345481873, 0.5846056342124939, 0.5610582232475281, 0.5479718446731567, 0.5328550338745117, 0.5241656303405762, 0.5150504112243652, 0.5046144723892212, 0.4890284538269043, 0.4847736358642578, 0.4671010673046112, 0.464337021112442, 0.46239250898361206, 0.44526124000549316, 0.4437560737133026, 0.4394071102142334, 0.4226681888103485, 0.42091503739356995, 0.4137750566005707, 0.40637287497520447, 0.40072131156921387, 0.3966074585914612, 0.39466333389282227, 0.387602835893631, 0.37573742866516113, 0.37323737144470215, 0.3706037998199463, 0.36508285999298096, 0.35982388257980347, 0.3530465066432953, 0.34871527552604675, 0.3388368785381317, 0.3358490765094757, 0.3288440704345703, 0.3283361494541168, 0.324770450592041, 0.3283975124359131, 0.3176346719264984, 0.3168037235736847, 0.3102535307407379, 0.3027357757091522, 0.3035580813884735, 0.29671257734298706, 0.2909349203109741, 0.28053826093673706, 0.28223955631256104, 0.28457778692245483, 0.273759126663208, 0.2749069631099701, 0.264590859413147, 0.26988542079925537, 0.25944775342941284, 0.2611624300479889, 0.25327423214912415, 0.2502855956554413, 0.2486821413040161, 0.23983290791511536, 0.24186119437217712, 0.2361978143453598, 0.23208874464035034], "accuracy": [0.2665433883666992, 0.48131024837493896, 0.557390034198761, 0.6160348653793335, 0.6641130447387695, 0.6991150379180908, 0.7162858247756958, 0.7376832365989685, 0.7474573850631714, 0.7581561207771301, 0.7642319202423096, 0.7766477465629578, 0.7913089394569397, 0.7877426743507385, 0.800818920135498, 0.8034605979919434, 0.8095363974571228, 0.811649739742279, 0.8124422430992126, 0.8177255392074585, 0.8264430165290833, 0.8260467648506165, 0.8314621448516846, 0.8350284099578857, 0.8334434032440186, 0.8421608805656433, 0.841500461101532, 0.843481719493866, 0.8504821062088013, 0.8451988101005554, 0.8512746095657349, 0.8556333184242249, 0.8553691506385803, 0.857218325138092, 0.8589354157447815, 0.8614450097084045, 0.8702945709228516, 0.8646149635314941, 0.8658037185668945, 0.8712190985679626, 0.8728041052818298, 0.8728041052818298, 0.8750495314598083, 0.8790120482444763, 0.876370370388031, 0.8800686597824097, 0.8833707571029663, 0.8874653577804565, 0.8824461698532104, 0.885219931602478, 0.8870691061019897, 0.887201189994812, 0.8919561505317688, 0.887597382068634, 0.8911636471748352, 0.8930128216743469, 0.8992207050323486, 0.8961827754974365, 0.8994848728179932, 0.8985602855682373, 0.8992207050323486, 0.9058248400688171, 0.9026548862457275, 0.9078060984611511, 0.9059569239616394, 0.9079381823539734, 0.908730685710907, 0.908730685710907, 0.9153348207473755, 0.9157310724258423, 0.9162594079971313, 0.9173160791397095], "val_loss": [2.040178060531616, 1.5134669542312622, 1.0477861166000366, 0.8384003639221191, 0.7500496506690979, 0.6903265118598938, 0.6444254517555237, 0.6109334826469421, 0.5785004496574402, 0.5656514763832092, 0.5398942232131958, 0.5293619632720947, 0.5120939016342163, 0.506758987903595, 0.49105849862098694, 0.48262032866477966, 0.48030394315719604, 0.4686893820762634, 0.46864721179008484, 0.4617446959018707, 0.45605120062828064, 0.44486719369888306, 0.43779778480529785, 0.4335976243019104, 0.43038487434387207, 0.42922714352607727, 0.4251554012298584, 0.42125052213668823, 0.414954274892807, 0.41854721307754517, 0.41070377826690674, 0.40987643599510193, 0.4016568064689636, 0.399787038564682, 0.40187525749206543, 0.39682409167289734, 0.3949882686138153, 0.39117684960365295, 0.39020922780036926, 0.39189648628234863, 0.3909558057785034, 0.38203373551368713, 0.38448095321655273, 0.37937963008880615, 0.3796885907649994, 0.3777506649494171, 0.3777628540992737, 0.3860527276992798, 0.3745494484901428, 0.37865185737609863, 0.3730070888996124, 0.3704385459423065, 0.3715592920780182, 0.3725895285606384, 0.366647332906723, 0.3758990466594696, 0.3689090311527252, 0.3681761920452118, 0.3670040965080261, 0.36444446444511414, 0.36535555124282837, 0.36371663212776184, 0.3637353479862213, 0.3627506196498871, 0.36176571249961853, 0.3664206564426422, 0.3602578938007355, 0.3592795431613922, 0.3647316098213196, 0.3605899214744568, 0.3611772060394287, 0.36435139179229736], "val_accuracy": [0.5270000100135803, 0.656000018119812, 0.6776666641235352, 0.7020000219345093, 0.7223333120346069, 0.7473333477973938, 0.7593333125114441, 0.7606666684150696, 0.781333327293396, 0.7826666831970215, 0.7983333468437195, 0.8033333420753479, 0.8083333373069763, 0.8073333501815796, 0.8149999976158142, 0.8209999799728394, 0.8206666707992554, 0.8316666483879089, 0.8286666870117188, 0.824999988079071, 0.8273333311080933, 0.8353333473205566, 0.8386666774749756, 0.8426666855812073, 0.8403333425521851, 0.8389999866485596, 0.8429999947547913, 0.8450000286102295, 0.8463333249092102, 0.8426666855812073, 0.847000002861023, 0.8489999771118164, 0.8556666374206543, 0.8573333621025085, 0.8543333411216736, 0.8556666374206543, 0.8579999804496765, 0.859000027179718, 0.859000027179718, 0.8573333621025085, 0.8610000014305115, 0.862333357334137, 0.8640000224113464, 0.8646666407585144, 0.8643333315849304, 0.8650000095367432, 0.8659999966621399, 0.862333357334137, 0.8673333525657654, 0.8653333187103271, 0.8653333187103271, 0.8683333396911621, 0.8690000176429749, 0.8690000176429749, 0.8700000047683716, 0.8646666407585144, 0.8703333139419556, 0.8700000047683716, 0.8700000047683716, 0.8690000176429749, 0.8676666617393494, 0.8726666569709778, 0.8709999918937683, 0.871999979019165, 0.871666669845581, 0.8700000047683716, 0.8740000128746033, 0.8723333477973938, 0.8706666827201843, 0.8736666440963745, 0.8723333477973938, 0.8726666569709778]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8368571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5389281511306763, 0.8288935422897339, 0.6482135653495789, 0.593876838684082, 0.5480813384056091, 0.5179506540298462, 0.49023884534835815, 0.48042112588882446, 0.47173038125038147, 0.4750148057937622, 0.4577735960483551, 0.45147350430488586, 0.46944427490234375, 0.4590202271938324, 0.4716746211051941, 0.4438720941543579, 0.4268679618835449], "accuracy": [0.48289525508880615, 0.7121912837028503, 0.7662131786346436, 0.7861577272415161, 0.7994980812072754, 0.81112140417099, 0.8234050869941711, 0.8350284099578857, 0.8309338092803955, 0.832650899887085, 0.8276317715644836, 0.8462554216384888, 0.8408400416374207, 0.8446704745292664, 0.8424250483512878, 0.8475762605667114, 0.8533879518508911], "val_loss": [0.795697033405304, 0.6086017489433289, 0.524735689163208, 0.49760115146636963, 0.5117725133895874, 0.46706855297088623, 0.47409456968307495, 0.48487991094589233, 0.47190144658088684, 0.48306456208229065, 0.5627738833427429, 0.5301946401596069, 0.4983956813812256, 0.6346797943115234, 0.5423547029495239, 0.6442083120346069, 0.5919168591499329], "val_accuracy": [0.7176666855812073, 0.7883333563804626, 0.8063333630561829, 0.8130000233650208, 0.8159999847412109, 0.8379999995231628, 0.8343333601951599, 0.8396666646003723, 0.8360000252723694, 0.8363333344459534, 0.8423333168029785, 0.8516666889190674, 0.8339999914169312, 0.8429999947547913, 0.843666672706604, 0.8386666774749756, 0.8383333086967468]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 9, 6, 7, 6, 3, 6, 8, 2, 0, 9, 2, 8], [0, 4, 0, 4, 2, 2, 4], [0, 39, 80, 44], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.833142876625061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.sqrt(beta))), beta), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2934627532958984, 2.188321828842163, 1.7562601566314697, 1.3169336318969727, 1.0746557712554932, 0.9095765948295593, 0.8292149305343628, 0.7930277585983276, 0.7567601799964905, 0.7400893568992615, 0.7022061347961426, 0.6640512347221375, 0.6565825343132019, 0.6168162226676941, 0.6107979416847229, 0.590677797794342, 0.580726683139801, 0.5600520968437195, 0.5608887672424316, 0.545299232006073, 0.5401215553283691, 0.5218842625617981, 0.5174050331115723, 0.5085325241088867, 0.49751028418540955, 0.4889738857746124, 0.48348379135131836, 0.4665989875793457, 0.46545571088790894, 0.4569079577922821, 0.4485001564025879, 0.4209273159503937, 0.4211176633834839, 0.41711655259132385, 0.4098496437072754, 0.3966035842895508, 0.4001006484031677, 0.39003539085388184, 0.3759291470050812, 0.3704899251461029, 0.37073174118995667, 0.36269068717956543, 0.3514004051685333, 0.35031798481941223, 0.3350617289543152, 0.33033695816993713, 0.3297733664512634, 0.31764328479766846, 0.3146224021911621, 0.3190430700778961, 0.31776347756385803, 0.2990416884422302, 0.3108099102973938, 0.3157787322998047, 0.3155539035797119, 0.30234572291374207, 0.28509560227394104, 0.3024958074092865, 0.2859025299549103, 0.3080565631389618, 0.30265453457832336, 0.2961314916610718], "accuracy": [0.12561088800430298, 0.3350944519042969, 0.44670453667640686, 0.5559371113777161, 0.6337339878082275, 0.6700568199157715, 0.7033417224884033, 0.7062475085258484, 0.7013604640960693, 0.7148329019546509, 0.7428345084190369, 0.7392682433128357, 0.7470611333847046, 0.7635715007781982, 0.7619865536689758, 0.7712323069572449, 0.7840443849563599, 0.7848368883132935, 0.7862898111343384, 0.7942147850990295, 0.7862898111343384, 0.7988376617431641, 0.8012151718139648, 0.8087438941001892, 0.8076872229576111, 0.8138951063156128, 0.8108572363853455, 0.8220842480659485, 0.8177255392074585, 0.8207634687423706, 0.8300092220306396, 0.8387266993522644, 0.8401796221733093, 0.8405758738517761, 0.8400475382804871, 0.8471800088882446, 0.8446704745292664, 0.8504821062088013, 0.8541803956031799, 0.8557654023170471, 0.8574824929237366, 0.8605204224586487, 0.8634262084960938, 0.8617091774940491, 0.8713511824607849, 0.8730682730674744, 0.8708229064941406, 0.8745211958885193, 0.8739928603172302, 0.8730682730674744, 0.8741249442100525, 0.8782195448875427, 0.8762382864952087, 0.8742570281028748, 0.8762382864952087, 0.8809932470321655, 0.8833707571029663, 0.8853520154953003, 0.8885219693183899, 0.8753136992454529, 0.885219931602478, 0.8779553771018982], "val_loss": [2.2461817264556885, 2.0190320014953613, 1.131082534790039, 0.9059831500053406, 0.7722553014755249, 0.695642352104187, 0.6566633582115173, 0.6515552401542664, 0.6540690064430237, 0.6227877736091614, 0.5822560787200928, 0.5655536651611328, 0.5581638813018799, 0.5499446392059326, 0.5445688962936401, 0.5409087538719177, 0.5336298942565918, 0.5181190371513367, 0.5213145613670349, 0.5089271068572998, 0.5126967430114746, 0.5073845386505127, 0.49839213490486145, 0.4887840151786804, 0.4889126121997833, 0.48955950140953064, 0.48507699370384216, 0.47611019015312195, 0.49316826462745667, 0.4740886092185974, 0.46510741114616394, 0.4647656977176666, 0.46442025899887085, 0.4601116478443146, 0.453535795211792, 0.44809362292289734, 0.4514092206954956, 0.44454866647720337, 0.4353029727935791, 0.44213977456092834, 0.43770140409469604, 0.4394652843475342, 0.4540671110153198, 0.4600963592529297, 0.45702892541885376, 0.4516655206680298, 0.45067647099494934, 0.4481818974018097, 0.4565596878528595, 0.45791637897491455, 0.45855477452278137, 0.45244133472442627, 0.4459271728992462, 0.4381856322288513, 0.47675463557243347, 0.47751954197883606, 0.49331843852996826, 0.5533028244972229, 0.5077141523361206, 0.5282114744186401, 0.5078405141830444, 0.47676557302474976], "val_accuracy": [0.42266666889190674, 0.46799999475479126, 0.6486666798591614, 0.6830000281333923, 0.7256666421890259, 0.7360000014305115, 0.7580000162124634, 0.746666669845581, 0.7473333477973938, 0.7563333511352539, 0.7676666378974915, 0.7706666588783264, 0.7913333177566528, 0.79666668176651, 0.7986666560173035, 0.7986666560173035, 0.8036666512489319, 0.8109999895095825, 0.8083333373069763, 0.8149999976158142, 0.8246666789054871, 0.8190000057220459, 0.8193333148956299, 0.8289999961853027, 0.8230000138282776, 0.8259999752044678, 0.8326666951179504, 0.8333333134651184, 0.8333333134651184, 0.8363333344459534, 0.8413333296775818, 0.843999981880188, 0.8463333249092102, 0.843999981880188, 0.8429999947547913, 0.8476666808128357, 0.8460000157356262, 0.8493333458900452, 0.8479999899864197, 0.8519999980926514, 0.8536666631698608, 0.8553333282470703, 0.8493333458900452, 0.8543333411216736, 0.8536666631698608, 0.8583333492279053, 0.856333315372467, 0.859666645526886, 0.8583333492279053, 0.8583333492279053, 0.8643333315849304, 0.862333357334137, 0.8650000095367432, 0.8613333106040955, 0.8579999804496765, 0.8610000014305115, 0.8653333187103271, 0.8646666407585144, 0.859000027179718, 0.862666666507721, 0.8610000014305115, 0.8569999933242798]}, "mapping_values": [1, 10, 5, 5, 3, 21, 14, 7, 4, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 22}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 0], [0, 1, 0, 2], [39, 63], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 5, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 2, 3, 4, 3, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10028571635484695, "mapping_values": [1, 10, 6, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 16, 8, 8, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), beta)), tf.math.subtract(sigma, grad)), tf.math.pow(sigma, tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [47117.82421875, 3.107797533196288e+16, 1.968625080529929e+30, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.10091137140989304, 0.09668471664190292, 0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [14270319.0, 1.8257764413173924e+19, 1.5848187301608943e+33, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.10066666454076767, 0.09866666793823242, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [16, 16], [0, 1], [0], [4], [0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 2, 4, 2, 8], [2, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0, 51, 78, 82, 16, 36]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 0, 16, 8, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 60], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5, 4, 1, 9, 2], [0, 2, 0, 3, 5, 0], [16, 16, 68, 63], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 3, 6, 8, 1, 3, 1, 4, 2, 3], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [78, 99, 96, 99, 58, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(tf.math.subtract(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 9, 5, 4, 3, 16, 10, 6, 4, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [14, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 8, 3, 6, 9, 1, 4, 1, 4, 2, 8, 7], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 75]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 12, 9, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))))), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(tf.math.add(alpha, beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]