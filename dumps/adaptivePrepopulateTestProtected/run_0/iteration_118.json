[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8648571372032166, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2218446731567383, 1.8617461919784546, 1.3829143047332764, 1.0802429914474487, 0.9311318397521973, 0.835020899772644, 0.7589772343635559, 0.7212931513786316, 0.6928313374519348, 0.6479591131210327, 0.6253638863563538, 0.6100990772247314, 0.5790677070617676, 0.563690185546875, 0.5569855570793152, 0.533083438873291, 0.5275682806968689, 0.5084007978439331, 0.4984796643257141, 0.4905730187892914, 0.4759772717952728, 0.4686632752418518, 0.4569430947303772, 0.4475342035293579, 0.443359375, 0.4295814037322998, 0.42978477478027344, 0.41978803277015686, 0.40689215064048767, 0.40383994579315186, 0.3952415883541107, 0.3901515603065491, 0.3835127055644989, 0.3860785961151123, 0.37430062890052795, 0.37656164169311523, 0.3587031066417694, 0.35660791397094727, 0.35791483521461487, 0.3406629264354706, 0.3392404019832611, 0.3417162299156189, 0.33049142360687256, 0.33227959275245667, 0.3192017376422882, 0.3171989619731903, 0.3048924505710602], "accuracy": [0.270109623670578, 0.4924052357673645, 0.5737683176994324, 0.6279223561286926, 0.6705851554870605, 0.7004358768463135, 0.7250033020973206, 0.7371549606323242, 0.7456082701683044, 0.7631752490997314, 0.7716285586357117, 0.7796856164932251, 0.7872143983840942, 0.7927618622779846, 0.8009510040283203, 0.8064984679222107, 0.81112140417099, 0.8131026029586792, 0.8240655064582825, 0.8261788487434387, 0.8318583965301514, 0.8325188159942627, 0.8359529972076416, 0.8379341959953308, 0.8450667262077332, 0.8469158411026001, 0.8445383906364441, 0.8508783578872681, 0.8514066934585571, 0.8574824929237366, 0.8599920868873596, 0.8599920868873596, 0.8625016212463379, 0.8646149635314941, 0.8643507957458496, 0.8689737319946289, 0.874389111995697, 0.8735966086387634, 0.8730682730674744, 0.8759741187095642, 0.8791441321372986, 0.8755778670310974, 0.8796724081039429, 0.8811253309249878, 0.8857482671737671, 0.8844274282455444, 0.8918240666389465], "val_loss": [2.036313056945801, 1.518181324005127, 1.0561113357543945, 0.8566620945930481, 0.7691750526428223, 0.7147669196128845, 0.6642265915870667, 0.6311931014060974, 0.6072298884391785, 0.5797116160392761, 0.5614621639251709, 0.553928792476654, 0.532504141330719, 0.5183294415473938, 0.5064031481742859, 0.5007207989692688, 0.48885583877563477, 0.48380354046821594, 0.4742145538330078, 0.46887174248695374, 0.45829859375953674, 0.45676714181900024, 0.4483705163002014, 0.4414272606372833, 0.44068363308906555, 0.43160563707351685, 0.42778000235557556, 0.4335876405239105, 0.41950908303260803, 0.41400080919265747, 0.4111207127571106, 0.4126739799976349, 0.41167154908180237, 0.4056609570980072, 0.40847209095954895, 0.39942672848701477, 0.39673271775245667, 0.39819347858428955, 0.39848747849464417, 0.39593446254730225, 0.3922131359577179, 0.3840267062187195, 0.39237645268440247, 0.3872048854827881, 0.381866455078125, 0.38195815682411194, 0.38131582736968994], "val_accuracy": [0.5586666464805603, 0.6396666765213013, 0.6673333048820496, 0.690666675567627, 0.7129999995231628, 0.7329999804496765, 0.7480000257492065, 0.7606666684150696, 0.7670000195503235, 0.784333348274231, 0.7883333563804626, 0.7943333387374878, 0.8056666851043701, 0.8136666417121887, 0.8206666707992554, 0.8209999799728394, 0.8263333439826965, 0.8270000219345093, 0.8303333520889282, 0.8330000042915344, 0.8363333344459534, 0.8373333215713501, 0.8429999947547913, 0.8453333377838135, 0.8410000205039978, 0.8489999771118164, 0.846666693687439, 0.8446666598320007, 0.8489999771118164, 0.8510000109672546, 0.8523333072662354, 0.8556666374206543, 0.8476666808128357, 0.8560000061988831, 0.8576666712760925, 0.8579999804496765, 0.8606666922569275, 0.8586666584014893, 0.8566666841506958, 0.859000027179718, 0.8600000143051147, 0.862666666507721, 0.8619999885559082, 0.8610000014305115, 0.8616666793823242, 0.8610000014305115, 0.8610000014305115]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 8], [0], [0], [0, 0, 0, 1, 1], [0, 2, 5], [0, 0], [0, 56], [0, 1], [0], [1], [0]], "fitness": -0.8560000061988831, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2927143573760986, 2.1861484050750732, 1.7486861944198608, 1.3504834175109863, 1.0460385084152222, 0.9138314127922058, 0.82569819688797, 0.8094600439071655, 0.7414766550064087, 0.7447694540023804, 0.7079200744628906, 0.6856414079666138, 0.6464165449142456, 0.6183549761772156, 0.5998216271400452, 0.5808936953544617, 0.577274739742279, 0.5768199563026428, 0.5504913330078125, 0.5419456958770752, 0.5286247134208679, 0.5138605237007141, 0.5129804611206055, 0.5005455017089844, 0.49720698595046997, 0.4782823324203491, 0.47084686160087585, 0.46472737193107605, 0.45650774240493774, 0.4470165967941284, 0.4493597149848938, 0.4367060363292694, 0.4388907551765442, 0.4264376759529114, 0.42572081089019775, 0.4106442630290985, 0.4022116959095001, 0.3987804055213928, 0.40061482787132263, 0.3840803802013397, 0.3705568313598633, 0.3627246022224426, 0.3689679205417633, 0.3573959171772003, 0.35541197657585144, 0.3455497920513153, 0.3530064523220062, 0.33111685514450073, 0.3348470628261566, 0.33675360679626465, 0.3325260579586029, 0.3254547417163849, 0.3233433961868286, 0.32049673795700073, 0.3144872784614563, 0.31606027483940125], "accuracy": [0.12851670384407043, 0.33284902572631836, 0.4476291239261627, 0.542728841304779, 0.6388852000236511, 0.6608110070228577, 0.7013604640960693, 0.7078325152397156, 0.7170783281326294, 0.7165499925613403, 0.7302865982055664, 0.7452120184898376, 0.7549861073493958, 0.76542067527771, 0.7663452625274658, 0.7755910754203796, 0.7803460359573364, 0.7841764688491821, 0.7874785661697388, 0.7918372750282288, 0.7954035401344299, 0.7955356240272522, 0.8029322624206543, 0.8045172095298767, 0.8067626357078552, 0.8183859586715698, 0.8146876096725464, 0.8128384351730347, 0.8207634687423706, 0.8272355198860168, 0.8272355198860168, 0.8323867321014404, 0.8277638554573059, 0.8359529972076416, 0.8348963260650635, 0.8384625315666199, 0.8441421389579773, 0.8455950617790222, 0.8421608805656433, 0.8539162874221802, 0.8521991968154907, 0.8582749962806702, 0.8576145768165588, 0.8581429123878479, 0.8628978729248047, 0.8617091774940491, 0.8562937378883362, 0.8702945709228516, 0.8692378997802734, 0.8664641380310059, 0.8712190985679626, 0.8697662353515625, 0.8696341514587402, 0.8758420348167419, 0.8716153502464294, 0.874389111995697], "val_loss": [2.245128870010376, 2.008260726928711, 1.129794716835022, 0.8964545130729675, 0.7723181843757629, 0.7135973572731018, 0.6816411018371582, 0.664564847946167, 0.6480180025100708, 0.6245250701904297, 0.5778247714042664, 0.5584855675697327, 0.5459442734718323, 0.5334133505821228, 0.527137815952301, 0.5152541399002075, 0.5122836232185364, 0.49446362257003784, 0.5047008991241455, 0.4874191880226135, 0.48590320348739624, 0.47407835721969604, 0.47567424178123474, 0.4742375612258911, 0.4577673375606537, 0.4647839665412903, 0.45749160647392273, 0.44497665762901306, 0.4386385977268219, 0.4381602704524994, 0.41969993710517883, 0.4216860830783844, 0.42292320728302, 0.4175889194011688, 0.41842618584632874, 0.4153692126274109, 0.4086814820766449, 0.41369107365608215, 0.40103524923324585, 0.4009331166744232, 0.4030468463897705, 0.4031200408935547, 0.39520975947380066, 0.396846204996109, 0.4026027321815491, 0.38385656476020813, 0.38661882281303406, 0.3977736532688141, 0.40565168857574463, 0.39701661467552185, 0.3867737352848053, 0.38119104504585266, 0.38495075702667236, 0.4033021330833435, 0.4046122133731842, 0.40229493379592896], "val_accuracy": [0.43299999833106995, 0.4723333418369293, 0.6466666460037231, 0.6996666789054871, 0.7179999947547913, 0.7283333539962769, 0.737666666507721, 0.7413333058357239, 0.7480000257492065, 0.7523333430290222, 0.7613333463668823, 0.7693333625793457, 0.784333348274231, 0.7889999747276306, 0.7839999794960022, 0.7893333435058594, 0.7933333516120911, 0.8056666851043701, 0.8053333163261414, 0.8043333292007446, 0.8043333292007446, 0.8193333148956299, 0.8113333582878113, 0.812333345413208, 0.8323333263397217, 0.8259999752044678, 0.8256666660308838, 0.8356666564941406, 0.8426666855812073, 0.8456666469573975, 0.8489999771118164, 0.8370000123977661, 0.8393333554267883, 0.8420000076293945, 0.843999981880188, 0.8513333201408386, 0.8546666502952576, 0.8500000238418579, 0.8546666502952576, 0.8573333621025085, 0.8573333621025085, 0.8533333539962769, 0.8606666922569275, 0.8633333444595337, 0.8636666536331177, 0.8679999709129333, 0.8669999837875366, 0.8656666874885559, 0.8679999709129333, 0.8713333606719971, 0.8726666569709778, 0.8690000176429749, 0.8656666874885559, 0.862666666507721, 0.8666666746139526, 0.8650000095367432]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 5, 3, 2, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.821142852306366, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6036731004714966, 0.8494417071342468, 0.6898193359375, 0.6058909296989441, 0.5609092116355896, 0.5362605452537537, 0.5087221264839172, 0.4902431070804596, 0.4784795641899109, 0.4812171757221222, 0.4714144766330719, 0.5299590826034546, 0.5078580379486084, 0.5311471223831177, 0.5200566053390503], "accuracy": [0.47629112005233765, 0.6993792057037354, 0.750231146812439, 0.7695152759552002, 0.7987055778503418, 0.8112534880638123, 0.8197067975997925, 0.8181217908859253, 0.8301413059234619, 0.8249900937080383, 0.8399154543876648, 0.8219521641731262, 0.8241975903511047, 0.8144234418869019, 0.8245938420295715], "val_loss": [0.9395903944969177, 0.6139997839927673, 0.5444154143333435, 0.5319925546646118, 0.511370062828064, 0.5335782170295715, 0.5249810814857483, 0.5487010478973389, 0.489916056394577, 0.5423160791397095, 0.5939303636550903, 0.613487958908081, 0.5599251985549927, 0.5727002024650574, 0.5670027732849121], "val_accuracy": [0.6416666507720947, 0.7763333320617676, 0.8019999861717224, 0.8033333420753479, 0.8149999976158142, 0.8136666417121887, 0.8100000023841858, 0.8296666741371155, 0.8276666402816772, 0.8383333086967468, 0.8223333358764648, 0.8240000009536743, 0.8216666579246521, 0.8303333520889282, 0.8330000042915344]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [4, 4, 6, 0, 3, 8], [0, 1, 0, 2, 3], [39, 8], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 65], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 0, 8, 4, 2, 9, 4, 2, 8], [0, 4, 0, 3, 0, 4, 3, 1, 2, 2], [34, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 1, 0, 1, 1, 2, 1, 1, 1, 13, 8, 5, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.pow(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), grad), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.pow(grad, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09298639744520187, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [4, 2, 3, 5, 3], [0, 2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 7, 6, 4, 2], [0, 2, 3, 3, 2, 5], [66, 16, 40], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 1], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [0, 87, 40, 88, 41, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 12, 6, 6, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), beta), tf.math.pow(grad, tf.math.add(grad, beta))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 8, 3, 0, 3], [0, 1, 0, 1], [10, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 6, 5, 7], [0, 2, 0, 3, 5], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 0, 6, 8, 1, 4, 0, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [68, 99, 96, 99, 61, 63]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 12, 7, 5, 2, 2, 1, 1, 1, 16, 9, 7, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3035008907318115, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0], [3, 2, 3, 6, 3, 1, 9], [0, 2, 1, 2, 1, 1], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [8, 2, 9], [0, 5], [39, 2], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0], [6, 3, 3, 6, 6, 1, 4, 1, 4, 2, 8, 8, 5, 9], [2, 2, 2, 2, 1, 6, 2, 4, 0, 7], [86, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 2, 7, 4, 3, 2, 4, 2, 2, 1, 24, 14, 10, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(grad, alpha), grad)), alpha), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(beta, tf.math.pow(beta, tf.math.subtract(tf.math.pow(beta, tf.math.add(alpha, grad)), beta))), tf.math.sqrt(tf.math.sqrt(grad))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), grad), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]