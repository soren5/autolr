[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2214932441711426, 1.8608897924423218, 1.39826238155365, 1.0999555587768555, 0.932354748249054, 0.8448699712753296, 0.778682291507721, 0.7322292327880859, 0.7046854496002197, 0.6599020957946777, 0.637157142162323, 0.6255218386650085, 0.601752519607544, 0.5795660614967346, 0.559593141078949, 0.5481395721435547, 0.5314313173294067, 0.5215159058570862, 0.5159187912940979, 0.4986853301525116, 0.48994699120521545, 0.4788638651371002, 0.47348734736442566, 0.4709387421607971, 0.45610928535461426, 0.4516722857952118, 0.4421216547489166, 0.4324728548526764, 0.4248689115047455, 0.42967766523361206, 0.4162563383579254, 0.4080352783203125, 0.4019434154033661, 0.39459729194641113, 0.3919728100299835, 0.3875662684440613, 0.37849491834640503, 0.3691261112689972, 0.3655169606208801, 0.3567858338356018, 0.3548259437084198, 0.3519657254219055, 0.3456379473209381, 0.33535104990005493, 0.33431151509284973, 0.3326577842235565, 0.3363384008407593, 0.3218238353729248, 0.31567859649658203, 0.3091956675052643, 0.30592775344848633, 0.30434954166412354, 0.30623364448547363], "accuracy": [0.27882710099220276, 0.49029189348220825, 0.5659754276275635, 0.620261549949646, 0.663848876953125, 0.6976621150970459, 0.7201162576675415, 0.7349095344543457, 0.7454761862754822, 0.7605336308479309, 0.7621186375617981, 0.7714964747428894, 0.7820631265640259, 0.7923656105995178, 0.8047813773155212, 0.8018755912780762, 0.8094043135643005, 0.8120459914207458, 0.8112534880638123, 0.8187822103500366, 0.8264430165290833, 0.8323867321014404, 0.8301413059234619, 0.8383304476737976, 0.8368775844573975, 0.8421608805656433, 0.8428213000297546, 0.8475762605667114, 0.8519350290298462, 0.8498216867446899, 0.8560295701026917, 0.8548408150672913, 0.856689989566803, 0.8642187118530273, 0.8593316674232483, 0.8644828796386719, 0.8648791313171387, 0.8677849769592285, 0.8681812286376953, 0.8713511824607849, 0.8730682730674744, 0.8768987059593201, 0.8775591254234314, 0.8798044919967651, 0.884691596031189, 0.8820499181747437, 0.8815215826034546, 0.8828424215316772, 0.8840311765670776, 0.8860124349594116, 0.8887861371040344, 0.8908994793891907, 0.8883898854255676], "val_loss": [2.031705617904663, 1.4985145330429077, 1.0323351621627808, 0.830509603023529, 0.7417277097702026, 0.685570240020752, 0.6437662839889526, 0.6080025434494019, 0.584220826625824, 0.5637567639350891, 0.5367006659507751, 0.5248884558677673, 0.5130652785301208, 0.4990520477294922, 0.48387110233306885, 0.47543570399284363, 0.468295693397522, 0.4573138952255249, 0.45047709345817566, 0.45184585452079773, 0.4387381970882416, 0.43133780360221863, 0.42592015862464905, 0.42299577593803406, 0.41302064061164856, 0.41087454557418823, 0.40678828954696655, 0.40119051933288574, 0.4017881155014038, 0.39466676115989685, 0.3935604989528656, 0.39194270968437195, 0.38423287868499756, 0.3776693642139435, 0.3760567903518677, 0.37155377864837646, 0.37721237540245056, 0.36704036593437195, 0.3662364184856415, 0.36079728603363037, 0.36208122968673706, 0.36421307921409607, 0.3563743829727173, 0.35545438528060913, 0.35615599155426025, 0.3488122224807739, 0.35135263204574585, 0.34804314374923706, 0.34315821528434753, 0.346638023853302, 0.3432350754737854, 0.34659135341644287, 0.34771728515625], "val_accuracy": [0.5339999794960022, 0.6713333129882812, 0.6859999895095825, 0.7120000123977661, 0.7253333330154419, 0.746999979019165, 0.7603333592414856, 0.777999997138977, 0.781000018119812, 0.7760000228881836, 0.8019999861717224, 0.8040000200271606, 0.8063333630561829, 0.8146666884422302, 0.8203333616256714, 0.8230000138282776, 0.8306666612625122, 0.8323333263397217, 0.8339999914169312, 0.8326666951179504, 0.8363333344459534, 0.8376666903495789, 0.8450000286102295, 0.8423333168029785, 0.8443333506584167, 0.8486666679382324, 0.8460000157356262, 0.8546666502952576, 0.8489999771118164, 0.8536666631698608, 0.8536666631698608, 0.8473333120346069, 0.8573333621025085, 0.8553333282470703, 0.8586666584014893, 0.8610000014305115, 0.8523333072662354, 0.8616666793823242, 0.8613333106040955, 0.8629999756813049, 0.8629999756813049, 0.862666666507721, 0.8659999966621399, 0.8619999885559082, 0.8676666617393494, 0.8709999918937683, 0.8636666536331177, 0.8736666440963745, 0.8700000047683716, 0.8726666569709778, 0.8706666827201843, 0.8726666569709778, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8534285426139832, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223965883255005, 1.8728218078613281, 1.4086954593658447, 1.1100332736968994, 0.9521982669830322, 0.8464944362640381, 0.7881091833114624, 0.7335158586502075, 0.697441816329956, 0.6698036789894104, 0.639250636100769, 0.624502420425415, 0.6089697480201721, 0.5854091644287109, 0.5736576914787292, 0.5594295263290405, 0.5482791662216187, 0.5376271605491638, 0.5165011882781982, 0.5067272782325745, 0.49058154225349426, 0.4836580157279968, 0.46828991174697876, 0.46102622151374817, 0.45670124888420105, 0.4427168071269989, 0.4453970789909363, 0.43317827582359314, 0.4231579601764679, 0.42343953251838684, 0.41155871748924255, 0.39640694856643677, 0.4002636969089508, 0.3938238322734833, 0.3901599645614624, 0.38195428252220154, 0.37667718529701233, 0.36790671944618225, 0.35946589708328247, 0.36187291145324707, 0.34913933277130127, 0.3497368395328522, 0.3366338610649109, 0.3394070565700531, 0.33034294843673706, 0.3251090943813324, 0.3218977749347687, 0.31971263885498047, 0.31349867582321167, 0.3092401623725891, 0.3030737042427063, 0.3014417886734009], "accuracy": [0.2623167335987091, 0.4827631711959839, 0.5587108731269836, 0.6149781942367554, 0.6592260003089905, 0.6988508701324463, 0.7136441469192505, 0.7298903465270996, 0.7445515990257263, 0.755118191242218, 0.7667415142059326, 0.7788931727409363, 0.7817989587783813, 0.7928939461708069, 0.7936864495277405, 0.7973847389221191, 0.8075551390647888, 0.8076872229576111, 0.8131026029586792, 0.8193105459213257, 0.8276317715644836, 0.8280280232429504, 0.8293488025665283, 0.8313300609588623, 0.8354246616363525, 0.8430854678153992, 0.8407079577445984, 0.8459912538528442, 0.848368763923645, 0.8499537706375122, 0.8537842035293579, 0.8595958352088928, 0.8576145768165588, 0.859199583530426, 0.8588033318519592, 0.8634262084960938, 0.8664641380310059, 0.8696341514587402, 0.8708229064941406, 0.8701624870300293, 0.8767666220664978, 0.872407853603363, 0.8790120482444763, 0.8755778670310974, 0.8809932470321655, 0.8816536664962769, 0.8829745054244995, 0.885219931602478, 0.8865407705307007, 0.8886540532112122, 0.8905032277107239, 0.8927486538887024], "val_loss": [2.044494390487671, 1.5282526016235352, 1.0567988157272339, 0.8519982099533081, 0.7529841065406799, 0.6952911615371704, 0.6560559272766113, 0.6214380860328674, 0.5915009379386902, 0.5756576061248779, 0.5515764951705933, 0.5403310656547546, 0.5224257111549377, 0.5104490518569946, 0.4994286000728607, 0.48844319581985474, 0.48749226331710815, 0.47684016823768616, 0.46724724769592285, 0.45423299074172974, 0.4470720887184143, 0.4398391544818878, 0.4385134279727936, 0.4349173605442047, 0.4274462163448334, 0.4189966320991516, 0.4185044765472412, 0.4139454662799835, 0.4125032424926758, 0.40586158633232117, 0.40175122022628784, 0.3990864157676697, 0.39931127429008484, 0.3924986720085144, 0.39054858684539795, 0.3876277208328247, 0.3840113580226898, 0.3819507956504822, 0.38148656487464905, 0.3783722221851349, 0.37368109822273254, 0.3714620769023895, 0.3702870309352875, 0.3762323260307312, 0.36728140711784363, 0.365871787071228, 0.3670540452003479, 0.3610379099845886, 0.3634105920791626, 0.35938844084739685, 0.35786718130111694, 0.3555965721607208], "val_accuracy": [0.5146666765213013, 0.6573333144187927, 0.6863333582878113, 0.706333339214325, 0.7353333234786987, 0.7456666827201843, 0.7540000081062317, 0.7693333625793457, 0.7839999794960022, 0.7916666865348816, 0.8056666851043701, 0.8073333501815796, 0.8176666498184204, 0.8243333101272583, 0.8326666951179504, 0.8309999704360962, 0.8289999961853027, 0.8373333215713501, 0.8349999785423279, 0.8443333506584167, 0.8396666646003723, 0.847000002861023, 0.8479999899864197, 0.8489999771118164, 0.8506666421890259, 0.8539999723434448, 0.8523333072662354, 0.8493333458900452, 0.8573333621025085, 0.859666645526886, 0.8566666841506958, 0.8579999804496765, 0.8600000143051147, 0.8653333187103271, 0.8656666874885559, 0.8629999756813049, 0.8683333396911621, 0.8673333525657654, 0.8669999837875366, 0.8666666746139526, 0.8696666955947876, 0.8693333268165588, 0.8703333139419556, 0.8643333315849304, 0.8679999709129333, 0.8726666569709778, 0.8743333220481873, 0.8743333220481873, 0.871666669845581, 0.8733333349227905, 0.871666669845581, 0.8740000128746033]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8362857103347778, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6330249309539795, 0.8815377354621887, 0.7279440760612488, 0.6589106321334839, 0.6092343926429749, 0.5667645931243896, 0.5876473188400269, 0.5220201015472412, 0.5360988974571228, 0.5115667581558228, 0.5091279745101929, 0.5226885080337524, 0.48584234714508057, 0.4896809160709381, 0.4652675986289978, 0.4534173309803009, 0.47387462854385376, 0.4969784915447235, 0.528505802154541, 0.5032510161399841], "accuracy": [0.4702152907848358, 0.6988508701324463, 0.7380794882774353, 0.7638356685638428, 0.7763835787773132, 0.7895918488502502, 0.7817989587783813, 0.805177628993988, 0.8013472557067871, 0.8208954930305481, 0.8068947196006775, 0.817989706993103, 0.8269713521003723, 0.8215559124946594, 0.8330471515655518, 0.8359529972076416, 0.830669641494751, 0.8339717388153076, 0.8145555257797241, 0.8290846943855286], "val_loss": [0.8910695910453796, 0.6512068510055542, 0.6048664450645447, 0.5324138402938843, 0.5209441781044006, 0.5004906058311462, 0.487244576215744, 0.5145795941352844, 0.5069548487663269, 0.5178454518318176, 0.5372415781021118, 0.526520848274231, 0.48503538966178894, 0.5225405097007751, 0.5266766548156738, 0.5339483022689819, 0.5878066420555115, 0.5177242159843445, 0.5479961633682251, 0.6233319640159607], "val_accuracy": [0.6956666707992554, 0.765333354473114, 0.7793333530426025, 0.8053333163261414, 0.8106666803359985, 0.8166666626930237, 0.8140000104904175, 0.8240000009536743, 0.8173333406448364, 0.8206666707992554, 0.82833331823349, 0.8330000042915344, 0.8296666741371155, 0.8403333425521851, 0.8463333249092102, 0.8413333296775818, 0.8376666903495789, 0.8136666417121887, 0.8299999833106995, 0.8233333230018616]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0], [0, 9], [0], [0], [0, 0, 1], [0, 8], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8111428618431091, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294032573699951, 2.190609931945801, 1.7846440076828003, 1.3417186737060547, 1.106745719909668, 0.9335161447525024, 0.8524768948554993, 0.8236017823219299, 0.7648439407348633, 0.7378123998641968, 0.706771731376648, 0.6848257780075073, 0.660064697265625, 0.6272075772285461, 0.6115550398826599, 0.6029439568519592, 0.5823730826377869, 0.562016487121582, 0.5639867186546326, 0.55075603723526, 0.5419338941574097, 0.5248354077339172, 0.5127595663070679, 0.5127058029174805, 0.5050022006034851, 0.4854803681373596, 0.4858052134513855, 0.46578386425971985, 0.4689924120903015, 0.4594895541667938, 0.44555437564849854, 0.44277605414390564, 0.4300852119922638, 0.421679824590683, 0.4111204445362091, 0.4071255624294281, 0.3927974998950958, 0.3825567960739136, 0.3752608001232147, 0.3701377511024475, 0.3605845868587494, 0.3574431240558624, 0.35541561245918274, 0.33976173400878906, 0.3434930145740509, 0.3426040709018707, 0.3314487338066101, 0.32176676392555237, 0.3273557126522064, 0.31782078742980957, 0.32549211382865906, 0.30002057552337646, 0.30212241411209106, 0.30903688073158264, 0.3005838096141815, 0.304576575756073, 0.31051579117774963], "accuracy": [0.12415797263383865, 0.3185840845108032, 0.4361378848552704, 0.5477479696273804, 0.6236956715583801, 0.6572447419166565, 0.6814159154891968, 0.6960771083831787, 0.7112666964530945, 0.715889573097229, 0.7366266250610352, 0.7306828498840332, 0.7471932172775269, 0.7532690763473511, 0.7619865536689758, 0.7716285586357117, 0.7816668748855591, 0.7840443849563599, 0.785629391670227, 0.7858935594558716, 0.789459764957428, 0.7955356240272522, 0.8031964302062988, 0.8001585006713867, 0.8045172095298767, 0.8129705190658569, 0.8087438941001892, 0.817989706993103, 0.8197067975997925, 0.8231409192085266, 0.8274996876716614, 0.8244617581367493, 0.8308017253875732, 0.837141752243042, 0.8384625315666199, 0.8404437899589539, 0.848368763923645, 0.8535200357437134, 0.8491612672805786, 0.8536521196365356, 0.8625016212463379, 0.8632941246032715, 0.8603883385658264, 0.8648791313171387, 0.8688416481018066, 0.8673887252807617, 0.8702945709228516, 0.8739928603172302, 0.8639545440673828, 0.8759741187095642, 0.873860776424408, 0.8802007436752319, 0.8782195448875427, 0.8767666220664978, 0.878351628780365, 0.8831065893173218, 0.8728041052818298], "val_loss": [2.247021436691284, 2.0243029594421387, 1.1536308526992798, 0.8802338242530823, 0.7866206169128418, 0.7291473150253296, 0.7062442898750305, 0.6956565976142883, 0.6643332242965698, 0.6438543200492859, 0.6006187200546265, 0.5827039480209351, 0.5746769905090332, 0.5843889713287354, 0.5537815690040588, 0.53535395860672, 0.5292162895202637, 0.5210369229316711, 0.5172600746154785, 0.5215998291969299, 0.512091875076294, 0.500010073184967, 0.5001397728919983, 0.48372575640678406, 0.4877631366252899, 0.4837091565132141, 0.46848344802856445, 0.4741368889808655, 0.45819804072380066, 0.4562337100505829, 0.46021246910095215, 0.4503060579299927, 0.45129841566085815, 0.4395633041858673, 0.4464363157749176, 0.4518143832683563, 0.44142693281173706, 0.43729063868522644, 0.45065897703170776, 0.44097957015037537, 0.43097856640815735, 0.4375529885292053, 0.44006407260894775, 0.4354095757007599, 0.4293260872364044, 0.4397008419036865, 0.4329961836338043, 0.4234590232372284, 0.43119367957115173, 0.45735278725624084, 0.43888232111930847, 0.4421566426753998, 0.46528881788253784, 0.4806821346282959, 0.4954788386821747, 0.48080044984817505, 0.4545653462409973], "val_accuracy": [0.4013333320617676, 0.46666666865348816, 0.6333333253860474, 0.6823333501815796, 0.7046666741371155, 0.7319999933242798, 0.7223333120346069, 0.7429999709129333, 0.7400000095367432, 0.7590000033378601, 0.7733333110809326, 0.7703333497047424, 0.7820000052452087, 0.7693333625793457, 0.7860000133514404, 0.793666660785675, 0.8009999990463257, 0.8053333163261414, 0.8073333501815796, 0.8116666674613953, 0.8053333163261414, 0.8109999895095825, 0.8203333616256714, 0.8223333358764648, 0.8203333616256714, 0.8320000171661377, 0.8379999995231628, 0.8346666693687439, 0.8383333086967468, 0.8420000076293945, 0.8399999737739563, 0.8489999771118164, 0.8503333330154419, 0.8513333201408386, 0.8446666598320007, 0.8489999771118164, 0.8500000238418579, 0.8543333411216736, 0.8553333282470703, 0.8600000143051147, 0.8566666841506958, 0.8600000143051147, 0.8619999885559082, 0.8629999756813049, 0.8619999885559082, 0.859666645526886, 0.8579999804496765, 0.8579999804496765, 0.8640000224113464, 0.859333336353302, 0.8603333234786987, 0.8686666488647461, 0.859666645526886, 0.8643333315849304, 0.8640000224113464, 0.8650000095367432, 0.862333357334137]}, "mapping_values": [1, 10, 5, 5, 3, 2, 2, 0, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 3, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [1, 1], [0], [2], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [47111569408.0, 7013565202432.0, 119274731470848.0, 837100064735232.0, 3670695141703680.0, 1.2165755785183232e+16], "accuracy": [0.09391097724437714, 0.09787346422672272, 0.10011887550354004, 0.09998679161071777, 0.09932637959718704, 0.1014397069811821], "val_loss": [466599280640.0, 25156149837824.0, 270011692220416.0, 1472030113267712.0, 5514237107503104.0, 1.6266142809063424e+16], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 6}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 9, 2, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [98, 23], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 3, 3, 6, 8, 2, 4, 2, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [97, 99, 96, 42, 41, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 2, 1, 1, 1, 2, 1, 1, 0, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.add(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), sigma))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 65], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 4, 1, 4, 1, 2, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [24, 85, 8, 67, 34, 64]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 6, 3, 3, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3034355640411377, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 1], [39, 39], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [9, 2, 3, 0, 3, 2], [0, 2, 0, 3], [68, 40], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 6, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 12]], "fitness": -0.09000000357627869, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 14, 7, 7, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, grad))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.308903694152832, 2.310143232345581, 2.310774087905884, 2.3093714714050293, 2.3093655109405518, 2.309583902359009], "accuracy": [0.09351472556591034, 0.09060890227556229, 0.09126931428909302, 0.09232597798109055, 0.09153348207473755, 0.09589222073554993], "val_loss": [2.3086719512939453, 2.3086719512939453, 2.3086719512939453, 2.3086719512939453, 2.3086719512939453, 2.3086719512939453], "val_accuracy": [0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862]}}]