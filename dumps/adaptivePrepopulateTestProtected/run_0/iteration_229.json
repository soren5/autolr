[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8645714521408081, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2255699634552, 1.8749099969863892, 1.4045652151107788, 1.1098235845565796, 0.946241557598114, 0.8439700603485107, 0.7887302041053772, 0.7299181222915649, 0.6988116502761841, 0.6734402179718018, 0.6341853737831116, 0.612958550453186, 0.597783625125885, 0.5808767080307007, 0.5628736615180969, 0.5497572422027588, 0.5327439308166504, 0.5174678564071655, 0.5147265791893005, 0.5007985234260559, 0.4876521825790405, 0.4848601222038269, 0.467626690864563, 0.45706114172935486, 0.45155760645866394, 0.4465177059173584, 0.4432767927646637, 0.43820226192474365, 0.42779213190078735, 0.41728198528289795, 0.4149322509765625, 0.4091748893260956, 0.3965751528739929, 0.39170461893081665, 0.39260128140449524, 0.38757607340812683, 0.38388732075691223, 0.37317702174186707, 0.36706697940826416, 0.36130768060684204, 0.35596033930778503, 0.3525150418281555, 0.351340115070343, 0.34175166487693787, 0.3386530876159668, 0.3344203531742096, 0.3251560926437378, 0.32231709361076355, 0.3245026767253876, 0.31776896119117737, 0.3092539310455322, 0.30915123224258423, 0.30439120531082153, 0.2959350645542145], "accuracy": [0.26799631118774414, 0.48606523871421814, 0.5519746541976929, 0.6116761565208435, 0.6622639298439026, 0.6973979473114014, 0.717870831489563, 0.7316074371337891, 0.7440232634544373, 0.7576277852058411, 0.7713643908500671, 0.7761194109916687, 0.7825914621353149, 0.7847048044204712, 0.7946110367774963, 0.8009510040283203, 0.8107251524925232, 0.8096684813499451, 0.8178576231002808, 0.8207634687423706, 0.8264430165290833, 0.8239334225654602, 0.8315942287445068, 0.8367455005645752, 0.8376700282096863, 0.8413683772087097, 0.8389908671379089, 0.8409721255302429, 0.8469158411026001, 0.8487650156021118, 0.8492933511734009, 0.8544445633888245, 0.8578787446022034, 0.8603883385658264, 0.8552370667457581, 0.8618412613868713, 0.8640866279602051, 0.8636903762817383, 0.8683133125305176, 0.8681812286376953, 0.8721436858177185, 0.8735966086387634, 0.872407853603363, 0.8757099509239197, 0.878879964351654, 0.8840311765670776, 0.8835028409957886, 0.8813894987106323, 0.8857482671737671, 0.8853520154953003, 0.889050304889679, 0.8889182209968567, 0.886672854423523, 0.894069492816925], "val_loss": [2.045973300933838, 1.533112645149231, 1.074789047241211, 0.8714781999588013, 0.7804142236709595, 0.7270746827125549, 0.6794793009757996, 0.645621657371521, 0.6227288842201233, 0.5963499546051025, 0.5779756307601929, 0.563647985458374, 0.5514694452285767, 0.5369640588760376, 0.5251959562301636, 0.515537440776825, 0.5049342513084412, 0.4986302852630615, 0.4869833290576935, 0.4844106435775757, 0.4767308235168457, 0.4666401445865631, 0.4651910364627838, 0.4587065577507019, 0.4580402970314026, 0.4499909579753876, 0.4527198374271393, 0.4462614059448242, 0.44171562790870667, 0.43706926703453064, 0.4301415979862213, 0.4343264102935791, 0.4301609992980957, 0.4245951771736145, 0.4207148849964142, 0.41819092631340027, 0.41743648052215576, 0.41298049688339233, 0.4122774302959442, 0.40805676579475403, 0.41112419962882996, 0.4039035141468048, 0.40416258573532104, 0.405061811208725, 0.4039018154144287, 0.4008084833621979, 0.3963574767112732, 0.39516308903694153, 0.3948838412761688, 0.3939971625804901, 0.3910815417766571, 0.39667296409606934, 0.39109542965888977, 0.38923147320747375], "val_accuracy": [0.5516666769981384, 0.6433333158493042, 0.6676666736602783, 0.6959999799728394, 0.7250000238418579, 0.746999979019165, 0.7586666941642761, 0.7633333206176758, 0.7806666493415833, 0.7860000133514404, 0.7996666431427002, 0.7963333129882812, 0.8056666851043701, 0.8066666722297668, 0.8106666803359985, 0.8180000185966492, 0.812333345413208, 0.8220000267028809, 0.8320000171661377, 0.8303333520889282, 0.831333339214325, 0.8360000252723694, 0.8299999833106995, 0.8416666388511658, 0.8399999737739563, 0.8413333296775818, 0.8333333134651184, 0.8403333425521851, 0.8453333377838135, 0.8463333249092102, 0.8486666679382324, 0.8453333377838135, 0.8506666421890259, 0.8506666421890259, 0.8536666631698608, 0.8516666889190674, 0.8533333539962769, 0.8553333282470703, 0.8550000190734863, 0.8543333411216736, 0.8526666760444641, 0.8586666584014893, 0.8583333492279053, 0.8583333492279053, 0.8579999804496765, 0.859333336353302, 0.8583333492279053, 0.8576666712760925, 0.8643333315849304, 0.8616666793823242, 0.862666666507721, 0.8576666712760925, 0.8613333106040955, 0.8633333444595337]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 8], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8494285941123962, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294581174850464, 2.1934797763824463, 1.7784119844436646, 1.355582594871521, 1.0902153253555298, 0.921633780002594, 0.8567845225334167, 0.8184055685997009, 0.7761331796646118, 0.7490365505218506, 0.7068117260932922, 0.6921057105064392, 0.6635270714759827, 0.6381226181983948, 0.6125830411911011, 0.6082140207290649, 0.5863067507743835, 0.5751376748085022, 0.5723105669021606, 0.5663977861404419, 0.5516400337219238, 0.5428376793861389, 0.5293878316879272, 0.5193307995796204, 0.5027550458908081, 0.49977952241897583, 0.4867481589317322, 0.4794091582298279, 0.47119390964508057, 0.4534236490726471, 0.46224626898765564, 0.44766589999198914, 0.43768227100372314, 0.4343198239803314, 0.4224252998828888, 0.41938644647598267, 0.4062751233577728, 0.4106685221195221, 0.4091777503490448], "accuracy": [0.1286487877368927, 0.3160744905471802, 0.44062870740890503, 0.5395588278770447, 0.6318848133087158, 0.6700568199157715, 0.6719059348106384, 0.698190450668335, 0.6995112895965576, 0.7137762308120728, 0.7341170310974121, 0.7404569983482361, 0.7456082701683044, 0.7598732113838196, 0.7676661014556885, 0.7611940503120422, 0.7737419009208679, 0.7820631265640259, 0.7825914621353149, 0.7816668748855591, 0.7841764688491821, 0.7927618622779846, 0.7959318161010742, 0.8017435073852539, 0.8119139075279236, 0.8061022162437439, 0.8153480291366577, 0.819970965385437, 0.8157442808151245, 0.8230088353157043, 0.8252542614936829, 0.8309338092803955, 0.8302733898162842, 0.8341038227081299, 0.8389908671379089, 0.8368775844573975, 0.8473120927810669, 0.8430854678153992, 0.8397833704948425], "val_loss": [2.246938705444336, 2.0256385803222656, 1.1414480209350586, 0.8508924245834351, 0.7765442728996277, 0.7262645959854126, 0.6617742776870728, 0.643559992313385, 0.6338765621185303, 0.6180684566497803, 0.567497193813324, 0.5569186806678772, 0.5470004677772522, 0.534879207611084, 0.5195111632347107, 0.5101966857910156, 0.5014406442642212, 0.5017732977867126, 0.4828933775424957, 0.47990214824676514, 0.47139307856559753, 0.48103857040405273, 0.46923235058784485, 0.4549100697040558, 0.44675081968307495, 0.4392162561416626, 0.43097224831581116, 0.4263097047805786, 0.429005891084671, 0.4251961410045624, 0.4101245403289795, 0.40616604685783386, 0.4034544825553894, 0.4024284780025482, 0.4007740020751953, 0.4181708097457886, 0.4054965674877167, 0.40027645230293274, 0.40062206983566284], "val_accuracy": [0.4323333203792572, 0.48266667127609253, 0.6526666879653931, 0.6899999976158142, 0.7099999785423279, 0.7206666469573975, 0.749666690826416, 0.7546666860580444, 0.7609999775886536, 0.7833333611488342, 0.781333327293396, 0.7839999794960022, 0.7973333597183228, 0.8026666641235352, 0.8033333420753479, 0.8130000233650208, 0.8086666464805603, 0.8153333067893982, 0.8213333487510681, 0.8223333358764648, 0.8203333616256714, 0.8206666707992554, 0.8253333568572998, 0.8306666612625122, 0.8433333039283752, 0.8426666855812073, 0.8403333425521851, 0.846666693687439, 0.840666651725769, 0.8479999899864197, 0.8529999852180481, 0.8566666841506958, 0.8566666841506958, 0.8619999885559082, 0.8539999723434448, 0.8543333411216736, 0.8553333282470703, 0.8566666841506958, 0.8539999723434448]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 1], [0, 7, 0], [0, 2], [0], [1], [0], [2], [0]], "fitness": -0.8205714225769043, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6667630672454834, 0.8769829273223877, 0.6847652792930603, 0.6374473571777344, 0.5623012781143188, 0.5594754219055176, 0.5262148976325989, 0.5261150598526001, 0.5409575700759888, 0.5386408567428589, 0.5642696619033813, 0.5529555678367615, 0.5036261081695557, 0.5299637913703918, 0.5446397662162781, 0.525269091129303, 0.5140658617019653, 0.48643141984939575, 0.5018112659454346, 0.506347119808197, 0.559004545211792], "accuracy": [0.46413949131965637, 0.6893408894538879, 0.7456082701683044, 0.767401933670044, 0.7921014428138733, 0.791441023349762, 0.8145555257797241, 0.8049134612083435, 0.8080834746360779, 0.8090080618858337, 0.8193105459213257, 0.8038568496704102, 0.8136309385299683, 0.8175934553146362, 0.8137630224227905, 0.81548011302948, 0.8186501264572144, 0.8314621448516846, 0.82683926820755, 0.8290846943855286, 0.8278959393501282], "val_loss": [0.9540634751319885, 0.6682355403900146, 0.5953353643417358, 0.5521637201309204, 0.5697574615478516, 0.5254778861999512, 0.60756915807724, 0.5844687223434448, 0.6033594012260437, 0.6264033913612366, 0.6459815502166748, 0.5849103331565857, 0.5936044454574585, 0.5849235653877258, 0.6334459781646729, 0.7124733328819275, 0.6316308379173279, 0.6672247648239136, 0.6456450819969177, 0.7070226073265076, 0.7325024604797363], "val_accuracy": [0.640666663646698, 0.7443333268165588, 0.7893333435058594, 0.8009999990463257, 0.7906666398048401, 0.800000011920929, 0.8050000071525574, 0.8033333420753479, 0.8100000023841858, 0.8119999766349792, 0.809333324432373, 0.8109999895095825, 0.8173333406448364, 0.8080000281333923, 0.8159999847412109, 0.824999988079071, 0.824999988079071, 0.8169999718666077, 0.8223333358764648, 0.8106666803359985, 0.8096666932106018]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 5, 3, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0], [6, 8, 3, 6, 8, 1, 2, 1, 4, 3, 6, 3, 9, 9], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 73, 1, 90]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 23, 14, 9, 7], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, tf.math.divide_no_nan(tf.math.multiply(alpha, beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))))), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [4, 2, 3, 0, 3], [0, 1, 0, 0, 1], [39, 33, 49], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], [2, 2, 3, 0, 3, 5, 0, 3, 9, 9], [0, 2, 0, 3], [16, 65, 37, 4], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 4, 1, 4, 1, 4, 2, 3, 8, 7, 4, 2, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 7, 2, 2, 6, 1], [16, 8, 96, 99, 82, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 14, 10, 4, 4, 2, 1, 1, 1, 31, 16, 15, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), grad)), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), sigma), alpha)), tf.math.add(tf.math.multiply(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(grad, tf.math.pow(beta, tf.math.add(tf.math.negative(beta), grad)))))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 3, 0, 2], [83, 99, 27], [0, 1], [0, 2, 3, 0, 3, 5], [5], [16, 16], [0, 1], [0], [0], [0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 5, 6, 4, 4, 1, 1, 4], [1, 1, 3, 1, 2, 5, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 2, 1, 1, 0, 2, 1, 1, 1, 17, 10, 7, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.pow(tf.math.pow(alpha, tf.math.subtract(alpha, sigma)), tf.math.subtract(alpha, tf.math.pow(beta, grad))), grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 3, 3, 0, 3], [0, 1, 0, 1], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [8], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 5, 1, 4, 2, 3, 2, 8], [1, 0, 0, 3, 0, 0, 3, 1, 0, 0], [16, 25, 96, 5, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 6, 3, 3, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), sigma))), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), sigma)))), tf.math.add(tf.math.sqrt(alpha), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3100028038024902, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08902391046285629, 0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.308194875717163, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09399999678134918, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]