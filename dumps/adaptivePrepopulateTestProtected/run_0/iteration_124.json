[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87628573179245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224755048751831, 1.874579906463623, 1.4000996351242065, 1.1020534038543701, 0.943300187587738, 0.8311794400215149, 0.772227942943573, 0.721795916557312, 0.6979035139083862, 0.6538525819778442, 0.63838791847229, 0.6144108772277832, 0.5974045395851135, 0.5834674835205078, 0.5633969902992249, 0.5529552102088928, 0.5352627635002136, 0.5194379687309265, 0.5126846432685852, 0.5004614591598511, 0.48833441734313965, 0.4774039387702942, 0.46914127469062805, 0.4615752100944519, 0.45069074630737305, 0.4483543634414673, 0.4458400011062622, 0.43162283301353455, 0.42613136768341064, 0.41862061619758606, 0.41258227825164795, 0.41098329424858093, 0.4019950330257416, 0.39737483859062195, 0.38967010378837585, 0.3902629315853119, 0.37094467878341675, 0.3729848861694336, 0.37081649899482727, 0.3618454933166504, 0.35845667123794556, 0.3493996858596802, 0.3456057608127594, 0.3433015048503876, 0.33508652448654175, 0.33513230085372925, 0.32951194047927856, 0.32166141271591187, 0.3140012323856354, 0.315382182598114, 0.31361255049705505, 0.30516567826271057, 0.3043607771396637, 0.3025924265384674, 0.2912288010120392, 0.28510740399360657, 0.2838292419910431, 0.28114181756973267, 0.27740228176116943, 0.2696453034877777, 0.26684433221817017, 0.2640327513217926, 0.2623809576034546, 0.25728699564933777, 0.25739383697509766, 0.2544013261795044], "accuracy": [0.2674679756164551, 0.49768856167793274, 0.5698058605194092, 0.6159027814865112, 0.6715096831321716, 0.7025492191314697, 0.7165499925613403, 0.7367587089538574, 0.7477215528488159, 0.7617223858833313, 0.7675340175628662, 0.7808743715286255, 0.7812706232070923, 0.7928939461708069, 0.7955356240272522, 0.8049134612083435, 0.8133667707443237, 0.8158763647079468, 0.8171972036361694, 0.822348415851593, 0.8253863453865051, 0.82683926820755, 0.8348963260650635, 0.8352925777435303, 0.8411042094230652, 0.8428213000297546, 0.8411042094230652, 0.8485008478164673, 0.8462554216384888, 0.8574824929237366, 0.8541803956031799, 0.8541803956031799, 0.860652506351471, 0.8595958352088928, 0.8634262084960938, 0.8648791313171387, 0.869502067565918, 0.8656716346740723, 0.8656716346740723, 0.8687095642089844, 0.8725399374961853, 0.8778232932090759, 0.8774270415306091, 0.8759741187095642, 0.8831065893173218, 0.8786157965660095, 0.8838990926742554, 0.8882578015327454, 0.8897107243537903, 0.891559898853302, 0.8889182209968567, 0.8916919827461243, 0.8930128216743469, 0.8905032277107239, 0.8985602855682373, 0.9002773761749268, 0.901862382888794, 0.8989565372467041, 0.9022586345672607, 0.9038436412811279, 0.9072777628898621, 0.9031832218170166, 0.9091269373893738, 0.9093911051750183, 0.9080702662467957, 0.9099194407463074], "val_loss": [2.04329776763916, 1.521733045578003, 1.053375005722046, 0.8511098623275757, 0.7601067423820496, 0.7030267119407654, 0.659464418888092, 0.6246460676193237, 0.5973855257034302, 0.5784820914268494, 0.5552046298980713, 0.5379127264022827, 0.5271106958389282, 0.5157949924468994, 0.5066025257110596, 0.49259817600250244, 0.4908466339111328, 0.4799953103065491, 0.4679185450077057, 0.4603872001171112, 0.4558420479297638, 0.4464675784111023, 0.4412594735622406, 0.43988096714019775, 0.4361819624900818, 0.4473295509815216, 0.4284546673297882, 0.41855737566947937, 0.4142724573612213, 0.4104946553707123, 0.4058007001876831, 0.40269413590431213, 0.4022282660007477, 0.4013732969760895, 0.39626452326774597, 0.39251217246055603, 0.39021679759025574, 0.39283204078674316, 0.38254883885383606, 0.3839532136917114, 0.3830716609954834, 0.37890589237213135, 0.37677523493766785, 0.37514346837997437, 0.3726809024810791, 0.3715671896934509, 0.3685586750507355, 0.36883100867271423, 0.3634304702281952, 0.3636940121650696, 0.3618406057357788, 0.36058422923088074, 0.3608158230781555, 0.35642150044441223, 0.35517749190330505, 0.35271021723747253, 0.3544919490814209, 0.3511319160461426, 0.3516623079776764, 0.34598588943481445, 0.3468567430973053, 0.34827369451522827, 0.3487033247947693, 0.3490844666957855, 0.34592488408088684, 0.3469977080821991], "val_accuracy": [0.5553333163261414, 0.6570000052452087, 0.675000011920929, 0.7036666870117188, 0.7250000238418579, 0.7446666955947876, 0.7549999952316284, 0.7670000195503235, 0.7733333110809326, 0.7743333578109741, 0.7943333387374878, 0.8006666898727417, 0.8036666512489319, 0.8046666383743286, 0.8136666417121887, 0.8163333535194397, 0.815666675567627, 0.8180000185966492, 0.8270000219345093, 0.8256666660308838, 0.8306666612625122, 0.8299999833106995, 0.8320000171661377, 0.8349999785423279, 0.8346666693687439, 0.8336666822433472, 0.8370000123977661, 0.8410000205039978, 0.8450000286102295, 0.8489999771118164, 0.8489999771118164, 0.847000002861023, 0.8496666550636292, 0.8486666679382324, 0.8529999852180481, 0.8546666502952576, 0.8539999723434448, 0.8560000061988831, 0.8586666584014893, 0.8533333539962769, 0.859000027179718, 0.8613333106040955, 0.8600000143051147, 0.8610000014305115, 0.8629999756813049, 0.8633333444595337, 0.8643333315849304, 0.8603333234786987, 0.8666666746139526, 0.8633333444595337, 0.8673333525657654, 0.8690000176429749, 0.8653333187103271, 0.8700000047683716, 0.8663333058357239, 0.8706666827201843, 0.8683333396911621, 0.8709999918937683, 0.8713333606719971, 0.8723333477973938, 0.8726666569709778, 0.8693333268165588, 0.8696666955947876, 0.8693333268165588, 0.8706666827201843, 0.8713333606719971]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 1, 1, 1], [0, 1, 4], [0, 6, 6], [0], [0, 1], [0], [1], [0]], "fitness": -0.8522857427597046, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293586254119873, 2.1916866302490234, 1.7873245477676392, 1.3317415714263916, 1.0969611406326294, 0.9371381998062134, 0.8551937341690063, 0.8314869999885559, 0.7707107663154602, 0.7491296529769897, 0.7154117822647095, 0.6924551725387573, 0.6504359245300293, 0.6294281482696533, 0.6115996241569519, 0.5978102684020996, 0.5717599987983704, 0.5790953040122986, 0.5625194311141968, 0.5591363906860352, 0.546225368976593, 0.5410640239715576, 0.5249645709991455, 0.5094781517982483, 0.5019020438194275, 0.4890982508659363, 0.4802929162979126, 0.47521355748176575, 0.4610012173652649, 0.45246005058288574, 0.4455082416534424, 0.43616732954978943, 0.42446863651275635, 0.4146163761615753, 0.4137919545173645, 0.41080987453460693, 0.39446017146110535, 0.40222230553627014, 0.3826354742050171, 0.3811432421207428, 0.35269686579704285, 0.36238598823547363, 0.3641084134578705, 0.3570791482925415, 0.36204326152801514, 0.33502933382987976, 0.3366507291793823, 0.33621883392333984, 0.3211130201816559, 0.3261634409427643, 0.31595683097839355, 0.31726452708244324, 0.31506168842315674, 0.2955173850059509], "accuracy": [0.12838461995124817, 0.32320696115493774, 0.4301941692829132, 0.5482763051986694, 0.632941484451294, 0.6546030640602112, 0.6894729733467102, 0.6999075412750244, 0.7010962963104248, 0.7091533541679382, 0.7329282760620117, 0.7395324110984802, 0.7581561207771301, 0.7689869403839111, 0.7703077793121338, 0.7707040309906006, 0.7828556299209595, 0.7843085527420044, 0.7881389260292053, 0.7940827012062073, 0.791441023349762, 0.7951393723487854, 0.7997622489929199, 0.8021397590637207, 0.8080834746360779, 0.8137630224227905, 0.817461371421814, 0.8206313848495483, 0.8215559124946594, 0.8245938420295715, 0.8319904804229736, 0.8335754871368408, 0.8363492488861084, 0.8380662798881531, 0.8396512866020203, 0.8416325449943542, 0.8418967127799988, 0.8444063067436218, 0.8462554216384888, 0.8529917001724243, 0.8626337051391602, 0.8581429123878479, 0.8622375130653381, 0.8585391640663147, 0.8621054291725159, 0.8702945709228516, 0.8669924736022949, 0.8742570281028748, 0.8728041052818298, 0.8737286925315857, 0.8787478804588318, 0.876370370388031, 0.8750495314598083, 0.8791441321372986], "val_loss": [2.2469024658203125, 2.0276153087615967, 1.1619049310684204, 0.9297991394996643, 0.7759611010551453, 0.7341141700744629, 0.6917942762374878, 0.6853465437889099, 0.6770988702774048, 0.6368194818496704, 0.5872739553451538, 0.566201388835907, 0.5512284636497498, 0.5217910408973694, 0.5198778510093689, 0.5069226026535034, 0.5041162371635437, 0.4882684051990509, 0.4872833788394928, 0.47042927145957947, 0.46292561292648315, 0.47211432456970215, 0.46942129731178284, 0.46263387799263, 0.4559265077114105, 0.4536172151565552, 0.442129909992218, 0.434260755777359, 0.43249568343162537, 0.43861523270606995, 0.4415737986564636, 0.43370142579078674, 0.42897477746009827, 0.4277561902999878, 0.4179694354534149, 0.41718590259552, 0.4250090420246124, 0.43151119351387024, 0.4277257025241852, 0.4312731921672821, 0.4295712411403656, 0.4357057213783264, 0.4379018247127533, 0.4289434552192688, 0.42153316736221313, 0.42774251103401184, 0.43376675248146057, 0.42937031388282776, 0.4151213765144348, 0.42244333028793335, 0.4337189197540283, 0.4412687122821808, 0.4464882016181946, 0.44761359691619873], "val_accuracy": [0.42100000381469727, 0.4533333480358124, 0.6463333368301392, 0.6723333597183228, 0.7203333377838135, 0.7213333249092102, 0.7383333444595337, 0.7326666712760925, 0.7416666746139526, 0.7459999918937683, 0.7723333239555359, 0.7833333611488342, 0.7850000262260437, 0.8006666898727417, 0.7960000038146973, 0.8019999861717224, 0.8086666464805603, 0.812666654586792, 0.8113333582878113, 0.8209999799728394, 0.828000009059906, 0.8130000233650208, 0.8233333230018616, 0.8326666951179504, 0.8373333215713501, 0.8379999995231628, 0.8403333425521851, 0.843999981880188, 0.8426666855812073, 0.8416666388511658, 0.843666672706604, 0.8463333249092102, 0.8429999947547913, 0.846666693687439, 0.8513333201408386, 0.8529999852180481, 0.8496666550636292, 0.8493333458900452, 0.8513333201408386, 0.8560000061988831, 0.8543333411216736, 0.8553333282470703, 0.859333336353302, 0.8573333621025085, 0.862666666507721, 0.8629999756813049, 0.8640000224113464, 0.8629999756813049, 0.8646666407585144, 0.862333357334137, 0.862666666507721, 0.8633333444595337, 0.8569999933242798, 0.8610000014305115]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 6, 3, 3, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8328571319580078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5363054275512695, 0.8375711441040039, 0.6703513264656067, 0.5953847169876099, 0.5840652585029602, 0.5785138607025146, 0.5348901748657227, 0.5444579124450684, 0.5503500699996948, 0.5184265971183777, 0.5114426016807556, 0.5091278553009033, 0.5303847193717957, 0.5390086770057678, 0.5230451226234436, 0.5125290751457214, 0.49400731921195984, 0.5125664472579956, 0.5044882297515869, 0.5225062966346741, 0.5104223489761353], "accuracy": [0.48606523871421814, 0.7096816897392273, 0.7563069462776184, 0.7792893648147583, 0.7860256433486938, 0.7893276810646057, 0.7984414100646973, 0.8050455451011658, 0.800818920135498, 0.8202351331710815, 0.8269713521003723, 0.8215559124946594, 0.8224804997444153, 0.8168009519577026, 0.8103289008140564, 0.8206313848495483, 0.8305375576019287, 0.8269713521003723, 0.8286884427070618, 0.8202351331710815, 0.8256505131721497], "val_loss": [0.8634077906608582, 0.6091957092285156, 0.5838009119033813, 0.5441783666610718, 0.4922761619091034, 0.5232998728752136, 0.5661444067955017, 0.5270494222640991, 0.497734934091568, 0.5150582790374756, 0.4926545321941376, 0.5389186143875122, 0.5577987432479858, 0.5405073165893555, 0.5519353747367859, 0.5301933884620667, 0.5204861760139465, 0.5778512358665466, 0.5617296099662781, 0.5553677678108215, 0.5761277675628662], "val_accuracy": [0.6940000057220459, 0.7803333401679993, 0.778333306312561, 0.7929999828338623, 0.8243333101272583, 0.8186666369438171, 0.8276666402816772, 0.8306666612625122, 0.8316666483879089, 0.8396666646003723, 0.8386666774749756, 0.843666672706604, 0.8276666402816772, 0.8399999737739563, 0.824999988079071, 0.8483333587646484, 0.8349999785423279, 0.8453333377838135, 0.824999988079071, 0.843999981880188, 0.831333339214325]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 3, 2, 0], [16, 99, 96, 99, 6, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3032515048980713, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 3, 0, 3, 3, 9], [0, 1, 0, 2], [39, 39, 38], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 4, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 3, 2, 1, 1, 1, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 2], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 8, 6, 9, 2], [4, 0, 0, 3, 0, 0, 0, 1, 4, 0, 2], [16, 99, 96, 99, 61, 1, 99]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 26, 15, 11, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), alpha), tf.math.add(tf.math.sqrt(grad), tf.math.sqrt(tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), beta)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 1, 0, 2, 2], [83, 99, 27], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9], [0, 2, 0, 3], [26], [0, 0, 1], [0, 5], [0], [50], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 4, 8, 1, 4, 1, 4, 2, 6], [0, 0, 0, 0, 0, 0, 4, 1, 2, 0], [0, 17, 74, 33, 3, 31]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 16, 8, 8, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}]