[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8631428480148315, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22391414642334, 1.8726762533187866, 1.3973971605300903, 1.0913031101226807, 0.9315526485443115, 0.8224389553070068, 0.7740667462348938, 0.7246487140655518, 0.6880063414573669, 0.6428593993186951, 0.619903564453125, 0.597801923751831, 0.5865151286125183, 0.5666136741638184, 0.5482858419418335, 0.5396153926849365, 0.524455189704895, 0.5087161064147949, 0.4970564842224121, 0.48366257548332214, 0.4790545701980591, 0.46602174639701843, 0.4608483910560608, 0.4548458755016327, 0.44673505425453186, 0.43828973174095154, 0.43153369426727295, 0.41972386837005615, 0.4109749495983124, 0.40852785110473633, 0.40254947543144226, 0.39572060108184814, 0.3869970142841339, 0.3794366717338562, 0.3794129192829132, 0.36936160922050476, 0.3595145344734192, 0.3585074245929718, 0.3514237403869629, 0.34726595878601074, 0.3460620939731598, 0.34366077184677124, 0.3363003432750702, 0.3348808288574219, 0.3288959264755249, 0.32270973920822144, 0.31750211119651794, 0.3109353184700012], "accuracy": [0.27460044622421265, 0.4791969358921051, 0.5629374980926514, 0.6205257177352905, 0.6692643165588379, 0.7058512568473816, 0.7275128960609436, 0.741909921169281, 0.7520803213119507, 0.7708360552787781, 0.7703077793121338, 0.7786290049552917, 0.7849689722061157, 0.7943468689918518, 0.7977809906005859, 0.807158887386322, 0.8149517774581909, 0.8153480291366577, 0.8215559124946594, 0.829216718673706, 0.8269713521003723, 0.8364813327789307, 0.8314621448516846, 0.8333113193511963, 0.8430854678153992, 0.8407079577445984, 0.8448025584220886, 0.8498216867446899, 0.8529917001724243, 0.8527275323867798, 0.8558974862098694, 0.8568220734596252, 0.8627657890319824, 0.8627657890319824, 0.8667283058166504, 0.8721436858177185, 0.871879518032074, 0.8735966086387634, 0.8761062026023865, 0.876370370388031, 0.8792761564254761, 0.8742570281028748, 0.8796724081039429, 0.8836349248886108, 0.8836349248886108, 0.8840311765670776, 0.8868049383163452, 0.8869370222091675], "val_loss": [2.042813777923584, 1.5257600545883179, 1.0525180101394653, 0.8461750745773315, 0.7518537044525146, 0.6867708563804626, 0.6434674859046936, 0.6096664071083069, 0.5830733180046082, 0.5590514540672302, 0.5439192056655884, 0.5234671831130981, 0.5131680369377136, 0.49741503596305847, 0.49496304988861084, 0.4822787344455719, 0.46983960270881653, 0.46830272674560547, 0.4585031270980835, 0.4536382555961609, 0.43846395611763, 0.4340375065803528, 0.4264943301677704, 0.4317954480648041, 0.41881608963012695, 0.40959954261779785, 0.40562543272972107, 0.40331029891967773, 0.3935087025165558, 0.39508071541786194, 0.39275333285331726, 0.38838085532188416, 0.37966418266296387, 0.3825221657752991, 0.37310051918029785, 0.3708330988883972, 0.3675289750099182, 0.3621988594532013, 0.36337628960609436, 0.36015260219573975, 0.3621540665626526, 0.3623661994934082, 0.3514130711555481, 0.35652852058410645, 0.3495911955833435, 0.3530825674533844, 0.34364232420921326, 0.34951522946357727], "val_accuracy": [0.5223333239555359, 0.6396666765213013, 0.6766666769981384, 0.7076666951179504, 0.7250000238418579, 0.7459999918937683, 0.7566666603088379, 0.7699999809265137, 0.7833333611488342, 0.7919999957084656, 0.7870000004768372, 0.7983333468437195, 0.8069999814033508, 0.8153333067893982, 0.8159999847412109, 0.8173333406448364, 0.824999988079071, 0.8286666870117188, 0.8209999799728394, 0.8343333601951599, 0.8416666388511658, 0.8446666598320007, 0.846666693687439, 0.8410000205039978, 0.847000002861023, 0.8546666502952576, 0.8539999723434448, 0.8510000109672546, 0.8633333444595337, 0.8586666584014893, 0.8566666841506958, 0.8573333621025085, 0.8666666746139526, 0.8566666841506958, 0.8663333058357239, 0.8690000176429749, 0.8743333220481873, 0.8743333220481873, 0.871999979019165, 0.8756666779518127, 0.8693333268165588, 0.8669999837875366, 0.878000020980835, 0.8686666488647461, 0.8769999742507935, 0.8686666488647461, 0.878000020980835, 0.8690000176429749]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 0, 0], [0, 6, 5, 5, 9], [0], [0, 18], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8420000076293945, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292133092880249, 2.1880850791931152, 1.7767558097839355, 1.3313195705413818, 1.091340184211731, 0.9361580610275269, 0.8722227811813354, 0.8154446482658386, 0.7500728368759155, 0.7495256662368774, 0.7064340114593506, 0.6859666109085083, 0.6682096123695374, 0.6528794169425964, 0.6121991872787476, 0.596450686454773, 0.5902091860771179, 0.5838701128959656, 0.56843101978302, 0.5701172947883606, 0.5482535362243652, 0.5354693531990051, 0.5175226926803589, 0.5073772668838501, 0.5051025748252869, 0.4858691096305847, 0.48565712571144104, 0.482327938079834, 0.4613042175769806, 0.455195814371109, 0.44555041193962097, 0.4437311589717865, 0.4236900210380554, 0.40806782245635986, 0.4092116951942444, 0.4013277590274811, 0.39720213413238525, 0.39134863018989563, 0.37981510162353516, 0.3805082142353058, 0.3773464858531952, 0.3673301339149475, 0.3583166003227234, 0.3473412096500397, 0.343833327293396, 0.3416336178779602, 0.3341933488845825, 0.33177077770233154, 0.32563623785972595, 0.3147488534450531, 0.3058023154735565, 0.30430594086647034, 0.30307796597480774, 0.3044765293598175, 0.29354891180992126, 0.3039838671684265], "accuracy": [0.1306300312280655, 0.328490287065506, 0.42504292726516724, 0.5476158857345581, 0.6287148594856262, 0.6546030640602112, 0.6812838315963745, 0.6999075412750244, 0.7120591998100281, 0.7112666964530945, 0.7294940948486328, 0.7374191284179688, 0.7497028112411499, 0.7413815855979919, 0.763967752456665, 0.7687227725982666, 0.772288978099823, 0.7781006693840027, 0.7821952104568481, 0.7803460359573364, 0.7835160493850708, 0.7935543656349182, 0.8058380484580994, 0.8090080618858337, 0.8057059645652771, 0.8100647330284119, 0.8169330358505249, 0.819442629814148, 0.8219521641731262, 0.8265751004219055, 0.8269713521003723, 0.8323867321014404, 0.8384625315666199, 0.8425571322441101, 0.847840428352356, 0.8409721255302429, 0.8491612672805786, 0.8492933511734009, 0.8561616539955139, 0.8565579056739807, 0.8516708612442017, 0.8524633646011353, 0.863029956817627, 0.868049144744873, 0.8628978729248047, 0.8661999702453613, 0.8709549307823181, 0.8721436858177185, 0.8701624870300293, 0.8792761564254761, 0.878351628780365, 0.8819178342819214, 0.8800686597824097, 0.878879964351654, 0.885219931602478, 0.8821820020675659], "val_loss": [2.246020555496216, 2.0172650814056396, 1.1222389936447144, 0.8252443671226501, 0.7331311702728271, 0.6940719485282898, 0.6431793570518494, 0.6080309748649597, 0.619724452495575, 0.5921340584754944, 0.55111163854599, 0.5355151891708374, 0.5269800424575806, 0.5148892998695374, 0.5205927491188049, 0.5008378624916077, 0.4843093156814575, 0.47979792952537537, 0.496008962392807, 0.48445218801498413, 0.4798232913017273, 0.467980295419693, 0.4564255475997925, 0.4485922157764435, 0.4379032254219055, 0.4392266571521759, 0.44721871614456177, 0.4315342605113983, 0.4166797697544098, 0.41645434498786926, 0.4224402606487274, 0.41360554099082947, 0.41941380500793457, 0.4237668812274933, 0.41440242528915405, 0.40346524119377136, 0.40128540992736816, 0.41058793663978577, 0.4173062741756439, 0.4023304581642151, 0.3942871391773224, 0.39710327982902527, 0.40617915987968445, 0.4072433412075043, 0.3967333137989044, 0.40307682752609253, 0.39913615584373474, 0.3903847336769104, 0.38860616087913513, 0.3894749879837036, 0.40130072832107544, 0.40872102975845337, 0.4120450019836426, 0.4176500737667084, 0.42462411522865295, 0.443971186876297], "val_accuracy": [0.4233333468437195, 0.41600000858306885, 0.6566666960716248, 0.6976666450500488, 0.7323333621025085, 0.7463333606719971, 0.7546666860580444, 0.765666663646698, 0.7693333625793457, 0.7713333368301392, 0.7766666412353516, 0.781000018119812, 0.7953333258628845, 0.8009999990463257, 0.7916666865348816, 0.7953333258628845, 0.8109999895095825, 0.8190000057220459, 0.7979999780654907, 0.809333324432373, 0.8103333115577698, 0.815666675567627, 0.8256666660308838, 0.8349999785423279, 0.8356666564941406, 0.8363333344459534, 0.8349999785423279, 0.8376666903495789, 0.8433333039283752, 0.8446666598320007, 0.8393333554267883, 0.846666693687439, 0.8473333120346069, 0.847000002861023, 0.8489999771118164, 0.8526666760444641, 0.8526666760444641, 0.8529999852180481, 0.856333315372467, 0.8569999933242798, 0.8533333539962769, 0.8600000143051147, 0.8613333106040955, 0.8560000061988831, 0.8646666407585144, 0.862666666507721, 0.8633333444595337, 0.8636666536331177, 0.8673333525657654, 0.8659999966621399, 0.8703333139419556, 0.8690000176429749, 0.8673333525657654, 0.8696666955947876, 0.8700000047683716, 0.8703333139419556]}, "mapping_values": [1, 10, 5, 5, 3, 6, 5, 1, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 3, 5, 3, 3, 7, 3, 4, 4, 1, 1, 9], [0, 0, 5, 1, 4, 7, 1, 5, 6], [0, 2, 16], [1], [0], [2], [0]], "fitness": -0.8334285616874695, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(grad, alpha), tf.math.pow(grad, tf.math.subtract(grad, tf.math.subtract(alpha, grad)))))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5029816627502441, 0.7856312990188599, 0.6400432586669922, 0.5815365314483643, 0.5651059150695801, 0.5302672386169434, 0.5128158330917358, 0.5459792017936707, 0.5074050426483154, 0.4970153272151947, 0.4777325987815857, 0.455132395029068, 0.45363849401474, 0.5366659760475159, 0.493230402469635, 0.49073919653892517, 0.4976331889629364, 0.49079984426498413, 0.46024155616760254, 0.5269567370414734], "accuracy": [0.46929070353507996, 0.7160216569900513, 0.7638356685638428, 0.7860256433486938, 0.789988100528717, 0.8109893202781677, 0.8088759779930115, 0.8050455451011658, 0.8222163319587708, 0.8107251524925232, 0.8284242749214172, 0.8422929644584656, 0.8362171649932861, 0.8128384351730347, 0.82683926820755, 0.8372738361358643, 0.8350284099578857, 0.8442742228507996, 0.8396512866020203, 0.8293488025665283], "val_loss": [0.8234410881996155, 0.6068182587623596, 0.5234321355819702, 0.49315574765205383, 0.48853540420532227, 0.4931287467479706, 0.49227285385131836, 0.5043416619300842, 0.49953797459602356, 0.48048079013824463, 0.5448387265205383, 0.48875394463539124, 0.6112534403800964, 0.5461705923080444, 0.5608914494514465, 0.6352387070655823, 0.6001391410827637, 0.5921275019645691, 0.5481852293014526, 0.6084408164024353], "val_accuracy": [0.6973333358764648, 0.7776666879653931, 0.8033333420753479, 0.8149999976158142, 0.8206666707992554, 0.8216666579246521, 0.8146666884422302, 0.8196666836738586, 0.8216666579246521, 0.8276666402816772, 0.8333333134651184, 0.8383333086967468, 0.8393333554267883, 0.8259999752044678, 0.8479999899864197, 0.8259999752044678, 0.8443333506584167, 0.8303333520889282, 0.8366666436195374, 0.8356666564941406]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 21, 12, 9, 3, 1, 0, 1, 0], "tree_depth": 23}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 5, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 2, 2, 8], [0, 0, 4, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 97, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 4, 1, 1, 6, 4, 2, 1, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(grad, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.306832790374756, 2.302642583847046, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.08889182657003403, 0.0936468094587326, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3026859760284424, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0963333323597908, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 6, 3], [0, 1, 0, 0], [39, 54], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 4, 3, 0, 3, 5, 3], [1, 2, 0, 3, 2], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 4, 3, 2, 8, 1, 4, 1, 4, 2, 8, 8], [4, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 12, 7, 5, 1, 2, 1, 1, 1, 22, 12, 10, 5], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.math.multiply(alpha, tf.math.square(beta))), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(grad, tf.math.add(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.pow(sigma, tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.sqrt(grad))))), beta)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [9, 1, 3, 1, 3, 1], [0, 1, 0, 2, 0, 1], [83, 99, 52], [0, 1], [0], [0], [16, 16], [0, 0, 1, 1], [0, 2], [0, 6], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 5, 8, 3, 9, 3, 6], [1, 1, 4, 6], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 2, 1, 1, 1, 4, 2, 2, 1, 4, 3, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.sqrt(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 0], [1, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [9], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 0, 3, 6, 2, 1, 8, 1, 2, 1, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.08942857384681702, "mapping_values": [1, 8, 5, 3, 1, 6, 3, 3, 1, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(grad, sigma))))), alpha)", "other_info": {"loss": [2.309882402420044, 2.310412883758545, 2.3103384971618652, 2.3097493648529053, 2.3096566200256348, 2.3102030754089355], "accuracy": [0.0936468094587326, 0.08875974267721176, 0.09351472556591034, 0.08889182657003403, 0.08981640636920929, 0.09008057415485382], "val_loss": [2.3083198070526123, 2.3083198070526123, 2.3083198070526123, 2.3083198070526123, 2.3083198070526123, 2.3083198070526123], "val_accuracy": [0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284, 0.08799999952316284]}}]