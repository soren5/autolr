[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8619999885559082, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2247884273529053, 1.865031361579895, 1.3936243057250977, 1.0939942598342896, 0.946215033531189, 0.8405881524085999, 0.7807855606079102, 0.7269722819328308, 0.6903694272041321, 0.6597161293029785, 0.6354900002479553, 0.6109607219696045, 0.5945941209793091, 0.571854293346405, 0.5622366666793823, 0.5459320545196533, 0.5297045111656189, 0.5223291516304016, 0.5118110179901123, 0.4967125356197357, 0.48897483944892883, 0.4865126311779022, 0.47199156880378723, 0.4585956633090973, 0.4543500542640686, 0.4501706659793854, 0.43566879630088806, 0.43281060457229614, 0.4284918010234833, 0.4185464084148407, 0.4095221757888794, 0.4084877371788025, 0.40310120582580566, 0.40323981642723083, 0.39468252658843994, 0.38810139894485474, 0.3854065239429474, 0.3776039183139801, 0.3673708140850067, 0.3702085614204407, 0.3689490258693695, 0.35618260502815247, 0.35863789916038513, 0.3477369546890259, 0.35111162066459656, 0.3416903614997864, 0.3371647596359253, 0.3328450620174408, 0.3317779004573822, 0.32572001218795776, 0.32012858986854553, 0.3172144889831543, 0.31789833307266235, 0.30367639660835266, 0.3082936704158783, 0.30659663677215576, 0.29359400272369385], "accuracy": [0.2681283950805664, 0.4982168674468994, 0.5620129704475403, 0.6189407110214233, 0.6616035103797913, 0.6980583667755127, 0.7182670831680298, 0.7362303733825684, 0.7481178045272827, 0.7611940503120422, 0.767930269241333, 0.7766477465629578, 0.7825914621353149, 0.7935543656349182, 0.7947431206703186, 0.8025360107421875, 0.8059701323509216, 0.8108572363853455, 0.8131026029586792, 0.8214238286018372, 0.8255184292793274, 0.8252542614936829, 0.8293488025665283, 0.8337075710296631, 0.8339717388153076, 0.8323867321014404, 0.8400475382804871, 0.8438779711723328, 0.8470479249954224, 0.8518029451370239, 0.8502179384231567, 0.8564258217811584, 0.8532558679580688, 0.8536521196365356, 0.8578787446022034, 0.8581429123878479, 0.8618412613868713, 0.8597279191017151, 0.8683133125305176, 0.8642187118530273, 0.8698983192443848, 0.8702945709228516, 0.8677849769592285, 0.8742570281028748, 0.8742570281028748, 0.874389111995697, 0.8780874609947205, 0.8780874609947205, 0.8821820020675659, 0.8803328275680542, 0.883238673210144, 0.882710337638855, 0.8837670087814331, 0.889578640460968, 0.8879936337471008, 0.8887861371040344, 0.8927486538887024], "val_loss": [2.0412657260894775, 1.5111230611801147, 1.0406370162963867, 0.8387790322303772, 0.7536279559135437, 0.6987384557723999, 0.6547380089759827, 0.6243901252746582, 0.5967850089073181, 0.577082097530365, 0.562308669090271, 0.5460702776908875, 0.5313377380371094, 0.5224774479866028, 0.50990891456604, 0.49812832474708557, 0.49483081698417664, 0.484861820936203, 0.47439315915107727, 0.47176697850227356, 0.47306665778160095, 0.4662528932094574, 0.4537954032421112, 0.4497154951095581, 0.44488778710365295, 0.44145914912223816, 0.4385721981525421, 0.4321378171443939, 0.42717310786247253, 0.42787206172943115, 0.4206997752189636, 0.4214520752429962, 0.4218316376209259, 0.4121401309967041, 0.4141130745410919, 0.418081134557724, 0.40668630599975586, 0.4037518799304962, 0.40288183093070984, 0.3991387188434601, 0.3955550193786621, 0.4007338881492615, 0.39644038677215576, 0.3952799141407013, 0.38902780413627625, 0.3884384334087372, 0.38975343108177185, 0.3854844570159912, 0.3837255835533142, 0.3845140039920807, 0.3814314901828766, 0.3780721426010132, 0.38025471568107605, 0.378964364528656, 0.37493911385536194, 0.37185657024383545, 0.3763807415962219], "val_accuracy": [0.5230000019073486, 0.6516666412353516, 0.6826666593551636, 0.7023333311080933, 0.734000027179718, 0.7490000128746033, 0.7549999952316284, 0.765999972820282, 0.7746666669845581, 0.7889999747276306, 0.7856666445732117, 0.8026666641235352, 0.8063333630561829, 0.8113333582878113, 0.8209999799728394, 0.8259999752044678, 0.831333339214325, 0.8276666402816772, 0.8349999785423279, 0.840666651725769, 0.8376666903495789, 0.8360000252723694, 0.8513333201408386, 0.8503333330154419, 0.8523333072662354, 0.8560000061988831, 0.8553333282470703, 0.859333336353302, 0.862333357334137, 0.856333315372467, 0.8613333106040955, 0.8579999804496765, 0.8569999933242798, 0.8636666536331177, 0.8656666874885559, 0.8579999804496765, 0.8646666407585144, 0.8706666827201843, 0.8666666746139526, 0.8693333268165588, 0.8736666440963745, 0.8683333396911621, 0.8666666746139526, 0.8713333606719971, 0.8730000257492065, 0.8743333220481873, 0.8766666650772095, 0.8733333349227905, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8803333044052124, 0.8769999742507935, 0.878333330154419, 0.8803333044052124, 0.8776666522026062, 0.8776666522026062]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1, 0, 0, 1], [0, 1, 2, 9], [0, 4], [0, 65], [0, 1], [0], [1], [0]], "fitness": -0.8565714359283447, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2932116985321045, 2.1916463375091553, 1.7904728651046753, 1.355393409729004, 1.0982030630111694, 0.9457698464393616, 0.8711315989494324, 0.8670137524604797, 0.7898769974708557, 0.7820896506309509, 0.7332897782325745, 0.7092710137367249, 0.6992547512054443, 0.6571850776672363, 0.630688488483429, 0.620094358921051, 0.6154860854148865, 0.5972377061843872, 0.5879685878753662, 0.5714879631996155, 0.5543209314346313, 0.5540811419487, 0.5413753986358643, 0.5295167565345764, 0.5166573524475098, 0.5124936103820801, 0.5078345537185669, 0.4991127550601959, 0.4867018461227417, 0.4789852797985077, 0.4689866900444031, 0.45538845658302307, 0.4448840320110321, 0.43968307971954346, 0.4306679666042328, 0.43097880482673645, 0.435167521238327, 0.4174908399581909, 0.40492862462997437, 0.39848265051841736, 0.3963053822517395], "accuracy": [0.12653546035289764, 0.33245277404785156, 0.4295337498188019, 0.54220050573349, 0.6341302394866943, 0.6501122713088989, 0.6884163022041321, 0.6885483860969543, 0.7087571024894714, 0.7061154246330261, 0.7313432693481445, 0.7338528633117676, 0.7424382567405701, 0.7548540234565735, 0.7601373791694641, 0.7638356685638428, 0.7779685854911804, 0.7738739848136902, 0.7765156626701355, 0.7832518815994263, 0.7862898111343384, 0.7885351777076721, 0.7893276810646057, 0.7994980812072754, 0.8088759779930115, 0.8080834746360779, 0.8119139075279236, 0.8133667707443237, 0.8148196935653687, 0.819442629814148, 0.8224804997444153, 0.8235371708869934, 0.8343679904937744, 0.8388587832450867, 0.8405758738517761, 0.8418967127799988, 0.8380662798881531, 0.8429533839225769, 0.8492933511734009, 0.8537842035293579, 0.8551049828529358], "val_loss": [2.246591091156006, 2.0238373279571533, 1.1444616317749023, 0.8422539830207825, 0.7583216428756714, 0.7354334592819214, 0.6926628351211548, 0.6679860353469849, 0.6739327907562256, 0.6353496313095093, 0.596041738986969, 0.5753859877586365, 0.5636916756629944, 0.5483080148696899, 0.5440737009048462, 0.5325400233268738, 0.5168361067771912, 0.5209991931915283, 0.5175330638885498, 0.5034611225128174, 0.4854998290538788, 0.48024997115135193, 0.4725421965122223, 0.4718341529369354, 0.4665147662162781, 0.46066707372665405, 0.4517909288406372, 0.451549232006073, 0.4440736770629883, 0.43786296248435974, 0.43017351627349854, 0.4277883768081665, 0.4243699014186859, 0.4207111895084381, 0.41945233941078186, 0.4185158312320709, 0.41071638464927673, 0.4090765118598938, 0.4084767997264862, 0.4117584228515625, 0.40726611018180847], "val_accuracy": [0.4246666729450226, 0.43433332443237305, 0.6506666541099548, 0.6983333230018616, 0.7329999804496765, 0.7310000061988831, 0.737333357334137, 0.7480000257492065, 0.7630000114440918, 0.7753333449363708, 0.7803333401679993, 0.7806666493415833, 0.7873333096504211, 0.7946666479110718, 0.7963333129882812, 0.800000011920929, 0.8083333373069763, 0.8073333501815796, 0.8083333373069763, 0.8053333163261414, 0.815666675567627, 0.8246666789054871, 0.8236666917800903, 0.8226666450500488, 0.8253333568572998, 0.8323333263397217, 0.8349999785423279, 0.8363333344459534, 0.8370000123977661, 0.8433333039283752, 0.8429999947547913, 0.8433333039283752, 0.846666693687439, 0.8503333330154419, 0.8523333072662354, 0.8579999804496765, 0.8556666374206543, 0.8553333282470703, 0.8533333539962769, 0.8553333282470703, 0.8566666841506958]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 6, 4, 2, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8217142820358276, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.53707754611969, 0.8020970225334167, 0.6742991209030151, 0.5969672203063965, 0.5683137774467468, 0.5670884847640991, 0.5438002943992615, 0.5668789744377136, 0.5632027387619019, 0.5493029952049255, 0.5535624027252197, 0.5706885457038879, 0.5843068361282349, 0.5559120774269104, 0.5354965329170227, 0.5396469831466675], "accuracy": [0.48131024837493896, 0.7135120630264282, 0.755118191242218, 0.7778365015983582, 0.7910447716712952, 0.793422281742096, 0.7994980812072754, 0.8029322624206543, 0.8124422430992126, 0.8087438941001892, 0.802271842956543, 0.8214238286018372, 0.7927618622779846, 0.8121780753135681, 0.8210275769233704, 0.8207634687423706], "val_loss": [0.7691087126731873, 0.6035851240158081, 0.533041775226593, 0.5313395857810974, 0.5090327858924866, 0.5236831307411194, 0.5151160359382629, 0.6143357157707214, 0.5575902462005615, 0.5910288691520691, 0.6274412274360657, 0.600396454334259, 0.6868591904640198, 0.6219397783279419, 0.6217991709709167, 0.6821337342262268], "val_accuracy": [0.7316666841506958, 0.7739999890327454, 0.7956666946411133, 0.8050000071525574, 0.8193333148956299, 0.8133333325386047, 0.8196666836738586, 0.8186666369438171, 0.831333339214325, 0.8216666579246521, 0.843666672706604, 0.809333324432373, 0.8253333568572998, 0.8203333616256714, 0.8206666707992554, 0.8323333263397217]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 0, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 5, 3, 5, 3, 4, 6, 1, 3, 8, 3], [0, 2, 0, 3, 4, 0, 4, 5, 5, 5], [16, 16, 47], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [2, 3, 3, 6, 8, 1, 1, 1, 4, 2, 8], [2, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 4, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 23, 13, 10, 3, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad))), tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(grad, tf.math.sqrt(grad)), tf.math.multiply(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1], [9], [0], [23], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 4, 7, 4, 3, 1, 6, 0, 5], [1, 1, 2, 5, 4, 5, 1], [0, 82], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 1, 0, 1, 16, 9, 7, 0, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.math.pow(alpha, beta)), tf.math.multiply(grad, tf.math.subtract(tf.math.divide_no_nan(grad, grad), tf.math.negative(tf.math.square(alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [109.6226577758789, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0870426595211029, 0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [454877120.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 8, 3, 0, 3], [0, 1, 0, 1], [26, 33], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 2, 3, 0, 3, 8], [0, 2, 0, 3, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [9, 3, 2, 9, 8, 1, 4, 1, 4, 2, 8], [3, 0, 0, 3, 0, 0, 2, 1, 2, 3], [40, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 11, 6, 5, 2, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3036062717437744, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 9], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 6, 3, 8, 3, 5], [0, 2, 0, 3], [39, 32], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 2, 0, 7, 3, 3], [0, 0, 2, 3, 3, 0, 4, 1, 2, 0, 4, 0, 4, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 5, 2, 1, 10, 6, 4, 2, 2, 1, 1, 1, 30, 16, 14, 5], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(beta, tf.math.pow(tf.math.add(tf.math.sqrt(sigma), sigma), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.negative(grad), alpha)))), tf.math.add(beta, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.multiply(grad, tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}]