[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8688571453094482, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.225811004638672, 1.8734170198440552, 1.4017490148544312, 1.117801308631897, 0.9476589560508728, 0.8478939533233643, 0.7816229462623596, 0.7490160465240479, 0.7038166522979736, 0.6750929355621338, 0.6428648829460144, 0.6181008815765381, 0.5967736840248108, 0.5878261923789978, 0.5676663517951965, 0.5561589002609253, 0.5400635004043579, 0.5315356254577637, 0.5211369395256042, 0.5150585174560547, 0.5015693306922913, 0.4939144253730774, 0.47598573565483093, 0.47006896138191223, 0.4564257562160492, 0.4578702449798584, 0.4432533383369446, 0.439037948846817, 0.4340522289276123, 0.4324212372303009, 0.42696812748908997, 0.41643792390823364, 0.4072154462337494, 0.3997415006160736, 0.3935072124004364, 0.39052656292915344, 0.3852342665195465, 0.3832434415817261, 0.37424415349960327, 0.3631182312965393, 0.36226314306259155, 0.35539644956588745, 0.35207128524780273, 0.3536205291748047, 0.34394749999046326, 0.3436601459980011, 0.34043172001838684, 0.3350510597229004, 0.3226039409637451, 0.3201996982097626, 0.31344637274742126, 0.30967095494270325, 0.3119801878929138, 0.3075282573699951, 0.29975011944770813, 0.30006280541419983, 0.28981101512908936, 0.28975045680999756, 0.2834109365940094, 0.2815147340297699, 0.27390897274017334, 0.2732303738594055, 0.264094740152359, 0.26083388924598694, 0.2546057105064392, 0.2533630132675171, 0.2582813799381256, 0.24698708951473236, 0.2461201250553131, 0.23883090913295746, 0.24150820076465607, 0.2435832917690277, 0.2334478348493576, 0.23329885303974152, 0.23225051164627075, 0.22206446528434753, 0.22405225038528442, 0.22420820593833923, 0.21136365830898285, 0.20940865576267242, 0.20672045648097992], "accuracy": [0.2674679756164551, 0.488971084356308, 0.5671641826629639, 0.6131290197372437, 0.6622639298439026, 0.695813000202179, 0.7162858247756958, 0.7273808121681213, 0.7469290494918823, 0.7540615797042847, 0.7577598690986633, 0.7725531458854675, 0.7819310426712036, 0.7828556299209595, 0.7957997918128967, 0.7952714562416077, 0.8047813773155212, 0.8054417967796326, 0.8140271902084351, 0.8145555257797241, 0.8197067975997925, 0.8210275769233704, 0.8298771381378174, 0.8267071843147278, 0.8345000743865967, 0.8347642421722412, 0.8392550349235535, 0.8407079577445984, 0.8416325449943542, 0.844010055065155, 0.8470479249954224, 0.8532558679580688, 0.8520671129226685, 0.8561616539955139, 0.8557654023170471, 0.8621054291725159, 0.863029956817627, 0.8615770936012268, 0.8673887252807617, 0.8721436858177185, 0.8714832663536072, 0.8730682730674744, 0.871879518032074, 0.8741249442100525, 0.8765024542808533, 0.873860776424408, 0.8795403242111206, 0.8791441321372986, 0.8853520154953003, 0.8841632604598999, 0.8891823887825012, 0.8873332738876343, 0.8869370222091675, 0.8897107243537903, 0.8903711438179016, 0.8910315632820129, 0.8993527889251709, 0.8951261639595032, 0.8973715305328369, 0.8977677822113037, 0.9002773761749268, 0.9010698795318604, 0.9033153057098389, 0.9076740145683289, 0.904768168926239, 0.9060890078544617, 0.904768168926239, 0.9085986018180847, 0.9075419306755066, 0.9126931428909302, 0.9144102334976196, 0.909259021282196, 0.9187690019607544, 0.9159952402114868, 0.9125610589981079, 0.917580246925354, 0.9159952402114868, 0.9171839952468872, 0.9232597947120667, 0.9253731369972229, 0.9268260598182678], "val_loss": [2.043133020401001, 1.5171536207199097, 1.0402978658676147, 0.8323009610176086, 0.744274914264679, 0.6920505166053772, 0.6521488428115845, 0.6130645871162415, 0.5951137542724609, 0.5654972195625305, 0.5530800223350525, 0.5331324338912964, 0.5175402164459229, 0.5146557092666626, 0.49540194869041443, 0.49006974697113037, 0.47736796736717224, 0.4716464877128601, 0.46433496475219727, 0.457120805978775, 0.44557324051856995, 0.4416661262512207, 0.44091108441352844, 0.43249285221099854, 0.4268588423728943, 0.42505887150764465, 0.41961726546287537, 0.41142168641090393, 0.41135889291763306, 0.3987094759941101, 0.40333136916160583, 0.40120866894721985, 0.3909495770931244, 0.38870933651924133, 0.3860227167606354, 0.3856211006641388, 0.3827565908432007, 0.3757966160774231, 0.3759050667285919, 0.366737425327301, 0.36871206760406494, 0.36398324370384216, 0.36697331070899963, 0.3619997501373291, 0.3647659122943878, 0.35572901368141174, 0.35805249214172363, 0.3532778322696686, 0.35100558400154114, 0.3500129282474518, 0.351423978805542, 0.34683915972709656, 0.34788134694099426, 0.3489331007003784, 0.34520116448402405, 0.34350499510765076, 0.3411709666252136, 0.34074094891548157, 0.3445712924003601, 0.3366350829601288, 0.33335068821907043, 0.3409305512905121, 0.33322083950042725, 0.335662305355072, 0.3328876197338104, 0.3305799663066864, 0.32923269271850586, 0.33272621035575867, 0.3329005241394043, 0.32632872462272644, 0.3259562849998474, 0.33524128794670105, 0.32795658707618713, 0.32729604840278625, 0.33597007393836975, 0.32770487666130066, 0.3331889808177948, 0.32883933186531067, 0.3292044699192047, 0.3260825574398041, 0.3294917941093445], "val_accuracy": [0.5316666960716248, 0.6579999923706055, 0.6903333067893982, 0.7146666646003723, 0.7296666502952576, 0.7413333058357239, 0.7536666393280029, 0.765666663646698, 0.7693333625793457, 0.7826666831970215, 0.7883333563804626, 0.7973333597183228, 0.8166666626930237, 0.8080000281333923, 0.8236666917800903, 0.824999988079071, 0.8286666870117188, 0.8336666822433472, 0.8353333473205566, 0.8349999785423279, 0.8420000076293945, 0.843666672706604, 0.8410000205039978, 0.8460000157356262, 0.8486666679382324, 0.846666693687439, 0.8493333458900452, 0.8486666679382324, 0.8476666808128357, 0.8579999804496765, 0.8573333621025085, 0.8560000061988831, 0.8603333234786987, 0.8629999756813049, 0.8606666922569275, 0.8603333234786987, 0.862666666507721, 0.8659999966621399, 0.8656666874885559, 0.8696666955947876, 0.8700000047683716, 0.8703333139419556, 0.8683333396911621, 0.8703333139419556, 0.8686666488647461, 0.8740000128746033, 0.871999979019165, 0.871666669845581, 0.8766666650772095, 0.8743333220481873, 0.8763333559036255, 0.8740000128746033, 0.8769999742507935, 0.8756666779518127, 0.875333309173584, 0.8769999742507935, 0.878333330154419, 0.8786666393280029, 0.8803333044052124, 0.8809999823570251, 0.8799999952316284, 0.8799999952316284, 0.8796666860580444, 0.8796666860580444, 0.8816666603088379, 0.8826666474342346, 0.8833333253860474, 0.8823333382606506, 0.8796666860580444, 0.8843333125114441, 0.8866666555404663, 0.8806666731834412, 0.8843333125114441, 0.8840000033378601, 0.8809999823570251, 0.8883333206176758, 0.8809999823570251, 0.8880000114440918, 0.8863333463668823, 0.887333333492279, 0.8856666684150696]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8551428318023682, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2933993339538574, 2.188499927520752, 1.7633954286575317, 1.3596752882003784, 1.0548659563064575, 0.902957558631897, 0.8423796892166138, 0.8325873613357544, 0.7627770304679871, 0.735543429851532, 0.7056248188018799, 0.671688437461853, 0.6347280144691467, 0.6297793388366699, 0.6019344329833984, 0.5827946662902832, 0.5744746327400208, 0.5674766898155212, 0.5471973419189453, 0.5377159714698792, 0.5314324498176575, 0.5174456834793091, 0.4963272511959076, 0.4936002790927887, 0.4980427920818329, 0.4795934557914734, 0.47177624702453613, 0.45876502990722656, 0.4542580544948578, 0.4428585171699524, 0.4278245270252228, 0.42327892780303955, 0.42020881175994873, 0.41424527764320374, 0.40171393752098083, 0.3972395658493042, 0.393530935049057, 0.3842299282550812, 0.375605046749115, 0.3668453097343445, 0.360935777425766, 0.3743869960308075, 0.3601788282394409, 0.35954514145851135], "accuracy": [0.1320829540491104, 0.3465856611728668, 0.44327038526535034, 0.540219247341156, 0.6338660717010498, 0.6631884574890137, 0.6963412761688232, 0.7034738063812256, 0.7113987803459167, 0.7189275026321411, 0.7268524765968323, 0.7387399077415466, 0.7584202885627747, 0.7584202885627747, 0.763967752456665, 0.7755910754203796, 0.7796856164932251, 0.7844406366348267, 0.7946110367774963, 0.796328067779541, 0.7952714562416077, 0.8038568496704102, 0.8133667707443237, 0.8105930685997009, 0.81112140417099, 0.8204993009567261, 0.8170651197433472, 0.8285563588142395, 0.8308017253875732, 0.8333113193511963, 0.8407079577445984, 0.8372738361358643, 0.8421608805656433, 0.8487650156021118, 0.8516708612442017, 0.852859616279602, 0.8553691506385803, 0.8580108284950256, 0.8588033318519592, 0.8581429123878479, 0.8660678863525391, 0.8568220734596252, 0.8609166741371155, 0.8610487580299377], "val_loss": [2.245655059814453, 2.016369581222534, 1.1351627111434937, 0.8671769499778748, 0.7478143572807312, 0.7098920941352844, 0.6956303715705872, 0.6587817668914795, 0.6397280097007751, 0.6175619959831238, 0.5535783171653748, 0.5381357669830322, 0.5306152105331421, 0.5228261947631836, 0.5060837268829346, 0.4989471733570099, 0.5021123886108398, 0.49235790967941284, 0.48580053448677063, 0.4832565486431122, 0.4768484830856323, 0.46896860003471375, 0.46824222803115845, 0.4659872353076935, 0.4577392637729645, 0.45235195755958557, 0.4402341842651367, 0.4378780424594879, 0.4276711344718933, 0.41036611795425415, 0.4104638695716858, 0.40320801734924316, 0.3990260064601898, 0.4016954004764557, 0.40204668045043945, 0.3987593650817871, 0.40811583399772644, 0.4038834571838379, 0.3898436725139618, 0.3846915364265442, 0.39007648825645447, 0.3928292691707611, 0.39632120728492737, 0.3949677050113678], "val_accuracy": [0.4346666634082794, 0.4516666531562805, 0.656000018119812, 0.6993333101272583, 0.7243333458900452, 0.750333309173584, 0.7436666488647461, 0.75, 0.7699999809265137, 0.7689999938011169, 0.7776666879653931, 0.7933333516120911, 0.7983333468437195, 0.7996666431427002, 0.8119999766349792, 0.8069999814033508, 0.8076666593551636, 0.8096666932106018, 0.8096666932106018, 0.8166666626930237, 0.82833331823349, 0.8206666707992554, 0.8270000219345093, 0.8366666436195374, 0.8353333473205566, 0.8396666646003723, 0.8413333296775818, 0.843666672706604, 0.8450000286102295, 0.8513333201408386, 0.8476666808128357, 0.8533333539962769, 0.8516666889190674, 0.8579999804496765, 0.8546666502952576, 0.8583333492279053, 0.8583333492279053, 0.8640000224113464, 0.8676666617393494, 0.8643333315849304, 0.8653333187103271, 0.8633333444595337, 0.8643333315849304, 0.8636666536331177]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8222857117652893, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4969866275787354, 0.777905285358429, 0.6700133085250854, 0.6001644730567932, 0.5534184575080872, 0.5290371179580688, 0.5138902068138123, 0.518112063407898, 0.5173105001449585, 0.5035226941108704, 0.562510073184967, 0.5479078888893127, 0.5075835585594177, 0.5405240654945374, 0.5666924715042114, 0.5796724557876587, 0.56898432970047, 0.5377509593963623], "accuracy": [0.4823669195175171, 0.7265883088111877, 0.7493065595626831, 0.7749306559562683, 0.7972526550292969, 0.7992339134216309, 0.8123101592063904, 0.811649739742279, 0.8175934553146362, 0.8235371708869934, 0.8038568496704102, 0.8141592741012573, 0.8185180425643921, 0.8072909712791443, 0.804649293422699, 0.8170651197433472, 0.7907806038856506, 0.8144234418869019], "val_loss": [0.7452098727226257, 0.6134716272354126, 0.5206049680709839, 0.5091258883476257, 0.4899772107601166, 0.5283884406089783, 0.5336920022964478, 0.5396247506141663, 0.5133110880851746, 0.5428057909011841, 0.5652998685836792, 0.5420781373977661, 0.562502384185791, 0.5337367653846741, 0.6010116338729858, 0.5776762962341309, 0.5365683436393738, 0.5805491805076599], "val_accuracy": [0.7393333315849304, 0.7726666927337646, 0.8243333101272583, 0.8183333277702332, 0.8256666660308838, 0.8360000252723694, 0.8256666660308838, 0.8256666660308838, 0.8403333425521851, 0.8226666450500488, 0.8289999961853027, 0.8396666646003723, 0.8426666855812073, 0.8330000042915344, 0.8330000042915344, 0.8196666836738586, 0.8303333520889282, 0.8420000076293945]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 6, 0, 3, 5], [0, 2, 1, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 6, 1, 4, 1, 0, 2, 8], [0, 0, 0, 2, 0, 0, 3, 1, 1, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.12228571623563766, "mapping_values": [1, 7, 4, 3, 2, 10, 6, 4, 1, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), beta), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.negative(sigma), alpha)), tf.math.add(tf.math.sqrt(alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [234425.1875, 2035461.875, 4180716.0, 1247858.125, 211734.390625, 158730.890625, 108699.3515625, 35656.84765625], "accuracy": [0.09325055778026581, 0.1026284471154213, 0.09998679161071777, 0.11174217611551285, 0.08889182657003403, 0.09008057415485382, 0.08519349992275238, 0.09589222073554993], "val_loss": [759460.5, 4710309.0, 2567801.5, 191488.765625, 150414.640625, 91668.875, 40517.6328125, 23110.130859375], "val_accuracy": [0.10100000351667404, 0.028999999165534973, 0.11433333158493042, 0.09233333170413971, 0.08933333307504654, 0.08766666799783707, 0.09066666662693024, 0.09266666322946548]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [83, 41, 27], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], [0, 2, 1, 6, 6, 2, 8, 9], [0, 2, 0, 3, 2], [0, 87, 72], [0, 1], [0], [0], [0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [59, 92, 5, 24, 93, 29]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 9, 6, 8, 1, 4, 4, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 0, 0], [16, 99, 58, 99, 5, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 9, 7, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1], [9, 2, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 2], [16, 16], [0, 1, 0, 0, 1], [2, 0, 5], [0, 7], [74], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 8, 6, 3, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.0908571407198906, "mapping_values": [1, 1, 1, 0, 1, 10, 6, 4, 2, 5, 3, 2, 1, 16, 8, 8, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, alpha))", "other_info": {"loss": [2.309476137161255, 2.309133291244507, 2.3086819648742676, 2.3080241680145264, 2.3080432415008545, 2.3076837062835693], "accuracy": [0.08730682730674744, 0.09509972482919693, 0.09074098616838455, 0.09457138925790787, 0.09060890227556229, 0.09496764093637466], "val_loss": [2.3095591068267822, 2.3092470169067383, 2.30893611907959, 2.3086040019989014, 2.3082523345947266, 2.3079118728637695], "val_accuracy": [0.08500000089406967, 0.08266666531562805, 0.08100000023841858, 0.07866666465997696, 0.07699999958276749, 0.07466666400432587]}}]