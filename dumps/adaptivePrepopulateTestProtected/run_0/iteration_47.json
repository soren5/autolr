[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8740000128746033, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2252321243286133, 1.8788539171218872, 1.4031034708023071, 1.0990709066390991, 0.9427257776260376, 0.8498911261558533, 0.7815190553665161, 0.7295671105384827, 0.6879461407661438, 0.6651545763015747, 0.6285965442657471, 0.613654613494873, 0.5925408005714417, 0.5775225162506104, 0.5682212114334106, 0.5505475997924805, 0.5362523794174194, 0.5244160890579224, 0.5182265639305115, 0.5011730790138245, 0.4929039180278778, 0.4799659252166748, 0.4690723121166229, 0.4643579423427582, 0.45409101247787476, 0.4434664845466614, 0.4313954710960388, 0.43572553992271423, 0.4230620265007019, 0.4110218286514282, 0.4124387204647064, 0.40494096279144287, 0.40197011828422546, 0.3975500166416168, 0.39174187183380127, 0.38256460428237915, 0.37607207894325256, 0.36490583419799805, 0.36931613087654114, 0.3520519733428955, 0.35676977038383484, 0.3489445745944977, 0.34801217913627625, 0.3404216468334198, 0.33724457025527954, 0.3282003700733185, 0.32915905117988586, 0.32223138213157654, 0.3178483247756958, 0.31794169545173645, 0.3060404360294342, 0.3101520836353302, 0.2946060597896576, 0.30182597041130066, 0.29292091727256775, 0.292345255613327, 0.28778883814811707, 0.2834533751010895, 0.2801075577735901, 0.2766832411289215, 0.2744257152080536], "accuracy": [0.2674679756164551, 0.476951539516449, 0.5600317120552063, 0.6172236204147339, 0.6621318459510803, 0.6968696117401123, 0.7143045663833618, 0.7323999404907227, 0.7483819723129272, 0.7543256878852844, 0.7712323069572449, 0.7799497842788696, 0.7761194109916687, 0.789988100528717, 0.7948752045631409, 0.8020076751708984, 0.8050455451011658, 0.8059701323509216, 0.8128384351730347, 0.8187822103500366, 0.819970965385437, 0.8284242749214172, 0.8363492488861084, 0.8323867321014404, 0.8378021121025085, 0.8422929644584656, 0.845859169960022, 0.8470479249954224, 0.8507462739944458, 0.8520671129226685, 0.8573504090309143, 0.8548408150672913, 0.8531237840652466, 0.8553691506385803, 0.859199583530426, 0.8619733452796936, 0.8640866279602051, 0.8720116019248962, 0.8671245574951172, 0.873860776424408, 0.8717474341392517, 0.8739928603172302, 0.8747853636741638, 0.8774270415306091, 0.8778232932090759, 0.8815215826034546, 0.8813894987106323, 0.8835028409957886, 0.8829745054244995, 0.8865407705307007, 0.8905032277107239, 0.8856161832809448, 0.8905032277107239, 0.8907673954963684, 0.894069492816925, 0.8927486538887024, 0.897899866104126, 0.8988244533538818, 0.8981640338897705, 0.8986923694610596, 0.8977677822113037], "val_loss": [2.045069932937622, 1.5204989910125732, 1.0331178903579712, 0.8143311142921448, 0.7248433232307434, 0.6683552861213684, 0.6237367391586304, 0.5849602222442627, 0.55611652135849, 0.5354941487312317, 0.516137957572937, 0.4986310601234436, 0.4873289465904236, 0.4723055958747864, 0.466046541929245, 0.4510565996170044, 0.4483596980571747, 0.4320352375507355, 0.42770159244537354, 0.41945499181747437, 0.4156714975833893, 0.40748369693756104, 0.40003272891044617, 0.3972897529602051, 0.39007750153541565, 0.38448649644851685, 0.38058581948280334, 0.37731078267097473, 0.37119898200035095, 0.369618684053421, 0.3629034459590912, 0.3602190613746643, 0.35852882266044617, 0.35990527272224426, 0.3524588644504547, 0.34852245450019836, 0.3516269624233246, 0.3445708751678467, 0.3405987620353699, 0.33969807624816895, 0.33796370029449463, 0.33401358127593994, 0.33447620272636414, 0.33118098974227905, 0.32947805523872375, 0.32836225628852844, 0.3284735381603241, 0.3239586055278778, 0.3263487219810486, 0.31882092356681824, 0.31839415431022644, 0.3177931606769562, 0.32329100370407104, 0.3144647479057312, 0.31414100527763367, 0.30899128317832947, 0.3105640709400177, 0.31011396646499634, 0.30555522441864014, 0.3136252164840698, 0.31158092617988586], "val_accuracy": [0.5180000066757202, 0.6473333239555359, 0.6863333582878113, 0.7210000157356262, 0.737333357334137, 0.7506666779518127, 0.768666684627533, 0.784333348274231, 0.7916666865348816, 0.8003333210945129, 0.8063333630561829, 0.8143333196640015, 0.8159999847412109, 0.828000009059906, 0.8256666660308838, 0.8306666612625122, 0.8306666612625122, 0.8433333039283752, 0.8500000238418579, 0.8486666679382324, 0.8516666889190674, 0.8546666502952576, 0.8586666584014893, 0.8610000014305115, 0.862666666507721, 0.862333357334137, 0.8633333444595337, 0.8619999885559082, 0.8736666440963745, 0.8703333139419556, 0.8713333606719971, 0.8769999742507935, 0.8766666650772095, 0.8769999742507935, 0.8769999742507935, 0.878333330154419, 0.874666690826416, 0.8793333172798157, 0.8769999742507935, 0.8826666474342346, 0.8793333172798157, 0.8796666860580444, 0.8790000081062317, 0.8820000290870667, 0.8840000033378601, 0.8803333044052124, 0.8836666941642761, 0.8863333463668823, 0.8826666474342346, 0.8870000243186951, 0.8859999775886536, 0.8856666684150696, 0.8836666941642761, 0.8893333077430725, 0.8886666893959045, 0.8923333287239075, 0.8920000195503235, 0.8916666507720947, 0.8920000195503235, 0.8889999985694885, 0.887333333492279]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 6, 8, 0, 7, 8], [0, 4, 7], [0], [0, 1], [0], [1], [0]], "fitness": -0.8591428399085999, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(tf.math.sqrt(grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2931132316589355, 2.1885533332824707, 1.7587928771972656, 1.3286296129226685, 1.065712332725525, 0.925103485584259, 0.8466149568557739, 0.7972962260246277, 0.756578803062439, 0.7476695775985718, 0.7026489973068237, 0.6959534883499146, 0.6497058272361755, 0.6200679540634155, 0.5983191728591919, 0.5815526843070984, 0.5652216672897339, 0.5573014616966248, 0.5487725734710693, 0.5257933735847473, 0.5307698845863342, 0.5097911953926086, 0.4955712854862213, 0.48050498962402344, 0.46179699897766113, 0.46081626415252686, 0.44870367646217346, 0.4415513873100281, 0.44152551889419556, 0.4276573657989502, 0.4324171543121338, 0.4041121006011963, 0.4034649133682251, 0.39148885011672974, 0.4018092155456543, 0.3843615651130676, 0.3824763000011444, 0.3753822445869446], "accuracy": [0.13115836679935455, 0.3269053101539612, 0.4399682879447937, 0.5550125241279602, 0.6419231295585632, 0.6649055480957031, 0.69673752784729, 0.7022850513458252, 0.7119271159172058, 0.7144366502761841, 0.7371549606323242, 0.7372870445251465, 0.7543256878852844, 0.7693831920623779, 0.774270236492157, 0.7788931727409363, 0.785101056098938, 0.7936864495277405, 0.7944789528846741, 0.7957997918128967, 0.7973847389221191, 0.8079513907432556, 0.807158887386322, 0.817461371421814, 0.8232730031013489, 0.8207634687423706, 0.8257825970649719, 0.834632158279419, 0.8356888294219971, 0.8448025584220886, 0.8347642421722412, 0.8495575189590454, 0.8469158411026001, 0.8506141901016235, 0.8479725122451782, 0.8524633646011353, 0.8553691506385803, 0.8580108284950256], "val_loss": [2.2452380657196045, 2.0128560066223145, 1.120359182357788, 0.8885738849639893, 0.7713949084281921, 0.736142098903656, 0.6781219840049744, 0.6641813516616821, 0.6443634033203125, 0.6344274878501892, 0.5778838992118835, 0.5782566666603088, 0.5483636260032654, 0.5397496819496155, 0.530975341796875, 0.5176596641540527, 0.5111819505691528, 0.5052862763404846, 0.5035969614982605, 0.5044061541557312, 0.5056813359260559, 0.4915158748626709, 0.48405876755714417, 0.48152387142181396, 0.47064077854156494, 0.4569317102432251, 0.450259268283844, 0.45195019245147705, 0.44961047172546387, 0.4447953402996063, 0.4496261477470398, 0.44733521342277527, 0.4334237575531006, 0.4436835050582886, 0.44157901406288147, 0.42847779393196106, 0.4340168535709381, 0.43858471512794495], "val_accuracy": [0.4426666796207428, 0.4749999940395355, 0.6573333144187927, 0.7013333439826965, 0.7133333086967468, 0.7153333425521851, 0.7536666393280029, 0.7559999823570251, 0.7509999871253967, 0.7616666555404663, 0.7826666831970215, 0.7836666703224182, 0.7963333129882812, 0.7900000214576721, 0.8009999990463257, 0.8113333582878113, 0.8096666932106018, 0.8176666498184204, 0.8240000009536743, 0.8176666498184204, 0.8183333277702332, 0.8220000267028809, 0.8266666531562805, 0.8306666612625122, 0.8316666483879089, 0.843999981880188, 0.843666672706604, 0.843999981880188, 0.8426666855812073, 0.847000002861023, 0.8486666679382324, 0.8550000190734863, 0.8583333492279053, 0.856333315372467, 0.8556666374206543, 0.8566666841506958, 0.8579999804496765, 0.8579999804496765]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 9, 6, 3, 1, 2, 1, 1, 0], "tree_depth": 13}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 5], [0], [0], [1], [0], [2], [0]], "fitness": -0.8337143063545227, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.491306185722351, 0.8069513440132141, 0.70514315366745, 0.6288004517555237, 0.6137872934341431, 0.5676557421684265, 0.5293501019477844, 0.4861446022987366, 0.4856799840927124, 0.5030900239944458, 0.49738794565200806, 0.5259537100791931, 0.5201716423034668, 0.5047304034233093, 0.5327553749084473, 0.4996655285358429, 0.5771297216415405, 0.5521910786628723, 0.5741862654685974, 0.5403825640678406, 0.5520209074020386, 0.5160946249961853, 0.548353910446167, 0.5650452375411987, 0.6564090251922607, 0.6236211657524109, 0.5849803686141968, 0.5776161551475525], "accuracy": [0.4822348356246948, 0.7129837274551392, 0.7464007139205933, 0.7635715007781982, 0.7803460359573364, 0.7910447716712952, 0.8029322624206543, 0.8226125836372375, 0.829216718673706, 0.8177255392074585, 0.8256505131721497, 0.8187822103500366, 0.8259146809577942, 0.8257825970649719, 0.8271034359931946, 0.8186501264572144, 0.819970965385437, 0.7996301651000977, 0.8219521641731262, 0.8264430165290833, 0.8301413059234619, 0.8301413059234619, 0.8256505131721497, 0.8252542614936829, 0.7915731072425842, 0.8128384351730347, 0.8067626357078552, 0.8067626357078552], "val_loss": [0.8580471873283386, 0.6628978848457336, 0.5526465773582458, 0.5217797756195068, 0.5114027261734009, 0.48565226793289185, 0.4603317081928253, 0.45147705078125, 0.4613264203071594, 0.4702710509300232, 0.5067495107650757, 0.5255103707313538, 0.5265083312988281, 0.5166974067687988, 0.49774885177612305, 0.5449343323707581, 0.5145543813705444, 0.5318454504013062, 0.5386634469032288, 0.5554593801498413, 0.5132976174354553, 0.5128872990608215, 0.5570099353790283, 0.5221593976020813, 0.57059645652771, 0.5868003964424133, 0.5211820602416992, 0.5552000999450684], "val_accuracy": [0.6940000057220459, 0.7683333158493042, 0.7816666960716248, 0.7943333387374878, 0.812333345413208, 0.8233333230018616, 0.8356666564941406, 0.8373333215713501, 0.8383333086967468, 0.8323333263397217, 0.8320000171661377, 0.8389999866485596, 0.8379999995231628, 0.8396666646003723, 0.8389999866485596, 0.8383333086967468, 0.8226666450500488, 0.8256666660308838, 0.8433333039283752, 0.8453333377838135, 0.8453333377838135, 0.8346666693687439, 0.8546666502952576, 0.8180000185966492, 0.8286666870117188, 0.8296666741371155, 0.8320000171661377, 0.8323333263397217]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [0, 1, 0, 1], [39, 54], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 9, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 0, 4, 0], [16, 99, 96, 99, 14, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 7, 4, 3, 2, 2, 1, 1, 1, 16, 9, 7, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 3], [0, 0, 0, 2, 0], [39, 39, 95, 5], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3, 4], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 1, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 94, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 4, 7, 4, 3, 2, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), grad)), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3035643100738525, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 5, 3, 0, 3], [0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 0], [0, 1, 5, 9], [3], [0, 81], [0, 1], [0, 5], [0], [99], [0, 1], [0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [78]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 5, 4, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.square(grad), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1128236288.0, 21576912896.0, 100174970880.0, 277171470336.0, 597567864832.0, 1095865139200.0], "accuracy": [0.09206181764602661, 0.09959053993225098, 0.09959053993225098, 0.09919429570436478, 0.09509972482919693, 0.09840179979801178], "val_loss": [5054226944.0, 40428699648.0, 136439767040.0, 323407118336.0, 631652220928.0, 1091495723008.0], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [8, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 1], [1], [0, 5], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 3, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09314285963773727, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma), alpha)", "other_info": {"loss": [2.3099498748779297, 2.3095054626464844, 2.3099968433380127, 2.309567451477051, 2.3102638721466064, 2.3096280097961426], "accuracy": [0.09206181764602661, 0.0940430611371994, 0.09166556596755981, 0.09417514503002167, 0.09153348207473755, 0.08955223858356476], "val_loss": [2.3075051307678223, 2.3075051307678223, 2.3075051307678223, 2.3075051307678223, 2.3075051307678223, 2.3075051307678223], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 3, 1, 2, 1, 16, 8, 8, 5], "tree_depth": 18}]