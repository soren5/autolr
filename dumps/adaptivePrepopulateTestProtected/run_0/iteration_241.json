[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8674286007881165, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.219208002090454, 1.860429048538208, 1.3823308944702148, 1.0990209579467773, 0.9395653009414673, 0.8522840738296509, 0.7846739888191223, 0.726693868637085, 0.704842746257782, 0.6662988066673279, 0.6417711973190308, 0.6250722408294678, 0.6089633107185364, 0.579937219619751, 0.5703806281089783, 0.5533610582351685, 0.5499238967895508, 0.5312918424606323, 0.5209785103797913, 0.5113143920898438, 0.4952389597892761, 0.4867028295993805, 0.4766520857810974, 0.46508267521858215, 0.4693682789802551, 0.4568873941898346, 0.4479905962944031, 0.44322240352630615, 0.42730873823165894, 0.42076751589775085, 0.42491617798805237, 0.4109481871128082, 0.41342923045158386, 0.3940902352333069, 0.39711570739746094, 0.3882179260253906, 0.37934115529060364, 0.37291884422302246, 0.3723544776439667, 0.37033987045288086, 0.361145555973053, 0.3546769320964813, 0.35042738914489746, 0.34193670749664307, 0.3367583155632019, 0.33800220489501953, 0.3272208273410797, 0.33168506622314453, 0.3213045001029968, 0.31546008586883545, 0.30498671531677246, 0.3129282593727112, 0.2974328398704529, 0.30564606189727783, 0.2968558371067047, 0.3014557659626007, 0.2881168723106384, 0.28773316740989685], "accuracy": [0.27724209427833557, 0.4810461103916168, 0.568220853805542, 0.6181482076644897, 0.6660943031311035, 0.6964733600616455, 0.7165499925613403, 0.735041618347168, 0.7437590956687927, 0.7552502751350403, 0.7629110813140869, 0.7729493975639343, 0.778232753276825, 0.7857614755630493, 0.791969358921051, 0.7980451583862305, 0.7996301651000977, 0.8087438941001892, 0.807158887386322, 0.8158763647079468, 0.8220842480659485, 0.8259146809577942, 0.8321225643157959, 0.8355567455291748, 0.8345000743865967, 0.8364813327789307, 0.8381983637809753, 0.8383304476737976, 0.8492933511734009, 0.8481045961380005, 0.8527275323867798, 0.8514066934585571, 0.8502179384231567, 0.8613129258155823, 0.8590674996376038, 0.859199583530426, 0.8650112152099609, 0.8713511824607849, 0.8672566413879395, 0.8713511824607849, 0.8716153502464294, 0.8754457831382751, 0.8751816153526306, 0.8774270415306091, 0.8798044919967651, 0.876370370388031, 0.8842953443527222, 0.8821820020675659, 0.8854840993881226, 0.8886540532112122, 0.8905032277107239, 0.8894465565681458, 0.8923524022102356, 0.889578640460968, 0.8953903317451477, 0.8882578015327454, 0.8961827754974365, 0.9009377956390381], "val_loss": [2.032778739929199, 1.4953902959823608, 1.0300406217575073, 0.8284813761711121, 0.7481069564819336, 0.6898160576820374, 0.6566618084907532, 0.6137728691101074, 0.5867297649383545, 0.5710203647613525, 0.5519930124282837, 0.5335574746131897, 0.5193412899971008, 0.5071792602539062, 0.49744072556495667, 0.48444581031799316, 0.4857722520828247, 0.4688507616519928, 0.4605143964290619, 0.45508256554603577, 0.448100745677948, 0.4439717233181, 0.43319353461265564, 0.43047696352005005, 0.4285317361354828, 0.4183199107646942, 0.41425126791000366, 0.4102690517902374, 0.4111061692237854, 0.4032551348209381, 0.40096813440322876, 0.39805760979652405, 0.3961964547634125, 0.39644908905029297, 0.3862112760543823, 0.3841463327407837, 0.3841603994369507, 0.38230159878730774, 0.3791530728340149, 0.37526941299438477, 0.37634921073913574, 0.37444934248924255, 0.3715323805809021, 0.36959826946258545, 0.36408063769340515, 0.36605390906333923, 0.3682329058647156, 0.3617861270904541, 0.3602873682975769, 0.35868924856185913, 0.3579981327056885, 0.3537886440753937, 0.3515792787075043, 0.35467660427093506, 0.35157832503318787, 0.3518161475658417, 0.35209211707115173, 0.34922534227371216], "val_accuracy": [0.5223333239555359, 0.6579999923706055, 0.6840000152587891, 0.7103333473205566, 0.7260000109672546, 0.753000020980835, 0.7526666522026062, 0.7696666717529297, 0.778333306312561, 0.7873333096504211, 0.8016666769981384, 0.8033333420753479, 0.8090000152587891, 0.8159999847412109, 0.8273333311080933, 0.8270000219345093, 0.8203333616256714, 0.8316666483879089, 0.8353333473205566, 0.8370000123977661, 0.8416666388511658, 0.8423333168029785, 0.8463333249092102, 0.8453333377838135, 0.8460000157356262, 0.8479999899864197, 0.8510000109672546, 0.8516666889190674, 0.8516666889190674, 0.8516666889190674, 0.8539999723434448, 0.8553333282470703, 0.8526666760444641, 0.8566666841506958, 0.8579999804496765, 0.859000027179718, 0.859333336353302, 0.8569999933242798, 0.8576666712760925, 0.859333336353302, 0.8553333282470703, 0.8606666922569275, 0.8606666922569275, 0.8650000095367432, 0.8669999837875366, 0.8653333187103271, 0.8636666536331177, 0.8690000176429749, 0.8659999966621399, 0.8663333058357239, 0.8676666617393494, 0.8666666746139526, 0.871999979019165, 0.8709999918937683, 0.8696666955947876, 0.8683333396911621, 0.8676666617393494, 0.8703333139419556]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 1], [0, 4], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8582857251167297, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.291931390762329, 2.1859116554260254, 1.7518984079360962, 1.334830641746521, 1.0578687191009521, 0.9165964126586914, 0.8330242037773132, 0.8108925819396973, 0.7646942734718323, 0.7328349351882935, 0.7096181511878967, 0.6862801313400269, 0.6491516828536987, 0.6408879160881042, 0.6153882145881653, 0.5957548022270203, 0.5807068943977356, 0.560125470161438, 0.5503527522087097, 0.5478836894035339, 0.5204483866691589, 0.5279467701911926, 0.5110757350921631, 0.5090648531913757, 0.4923008978366852, 0.488840788602829, 0.4748084545135498, 0.48306453227996826, 0.45387062430381775, 0.4378279447555542, 0.4488399922847748, 0.4258379340171814, 0.4222034513950348, 0.4118112623691559, 0.404512494802475, 0.39426666498184204, 0.3970274329185486, 0.3873715102672577, 0.37640663981437683, 0.3865598738193512, 0.36616405844688416, 0.34895193576812744, 0.3564622402191162, 0.34451666474342346, 0.3441039025783539, 0.32970577478408813], "accuracy": [0.12402588874101639, 0.32782986760139465, 0.43904373049736023, 0.549068808555603, 0.637432336807251, 0.6639809608459473, 0.6952846646308899, 0.7010962963104248, 0.7043983340263367, 0.7145687341690063, 0.7260599732398987, 0.7351737022399902, 0.7530049085617065, 0.7531369924545288, 0.7646281719207764, 0.769911527633667, 0.7737419009208679, 0.7803460359573364, 0.7881389260292053, 0.7889314293861389, 0.800290584564209, 0.7973847389221191, 0.802271842956543, 0.8013472557067871, 0.8075551390647888, 0.8131026029586792, 0.8153480291366577, 0.8024039268493652, 0.819970965385437, 0.828820526599884, 0.8269713521003723, 0.8354246616363525, 0.8389908671379089, 0.843481719493866, 0.8438779711723328, 0.8527275323867798, 0.8490291833877563, 0.848368763923645, 0.8584070801734924, 0.8438779711723328, 0.8540483713150024, 0.8621054291725159, 0.8622375130653381, 0.8643507957458496, 0.8648791313171387, 0.8684453964233398], "val_loss": [2.244252920150757, 2.0073020458221436, 1.1142189502716064, 0.8792597651481628, 0.7529791593551636, 0.6910803914070129, 0.6663731932640076, 0.6411720514297485, 0.6225358247756958, 0.6073833107948303, 0.5847805142402649, 0.5666014552116394, 0.5547270774841309, 0.5511015057563782, 0.5266868472099304, 0.5103075504302979, 0.5148390531539917, 0.5120722651481628, 0.4948495328426361, 0.49090299010276794, 0.49900877475738525, 0.4942498505115509, 0.4692492187023163, 0.4636933505535126, 0.46822893619537354, 0.46100178360939026, 0.4678959250450134, 0.4610404372215271, 0.4548434317111969, 0.44689249992370605, 0.43283846974372864, 0.4396819770336151, 0.4423908591270447, 0.4249202013015747, 0.4156581163406372, 0.4153292775154114, 0.41729477047920227, 0.41357165575027466, 0.41741812229156494, 0.41496190428733826, 0.41861674189567566, 0.43154531717300415, 0.42325741052627563, 0.41806697845458984, 0.4088578224182129, 0.40479665994644165], "val_accuracy": [0.41066667437553406, 0.4830000102519989, 0.6556666493415833, 0.6813333630561829, 0.7239999771118164, 0.737666666507721, 0.7486666440963745, 0.7590000033378601, 0.762333333492279, 0.7706666588783264, 0.7723333239555359, 0.7836666703224182, 0.7943333387374878, 0.7913333177566528, 0.8009999990463257, 0.8043333292007446, 0.8019999861717224, 0.8053333163261414, 0.8109999895095825, 0.8159999847412109, 0.8190000057220459, 0.8076666593551636, 0.8256666660308838, 0.8360000252723694, 0.8339999914169312, 0.8396666646003723, 0.8403333425521851, 0.8413333296775818, 0.8433333039283752, 0.8483333587646484, 0.8486666679382324, 0.8446666598320007, 0.8479999899864197, 0.8473333120346069, 0.8566666841506958, 0.859333336353302, 0.8556666374206543, 0.8566666841506958, 0.8576666712760925, 0.8533333539962769, 0.8636666536331177, 0.8606666922569275, 0.8610000014305115, 0.8576666712760925, 0.856333315372467, 0.862666666507721]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8302857279777527, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5611143112182617, 0.7741506099700928, 0.6495340466499329, 0.6035338044166565, 0.5494382977485657, 0.5152992606163025, 0.5040959119796753, 0.5025863647460938, 0.4564242362976074, 0.4449644088745117, 0.4490138590335846, 0.48802971839904785, 0.510735809803009, 0.5471982359886169], "accuracy": [0.4831594228744507, 0.7202483415603638, 0.7618544697761536, 0.7763835787773132, 0.7957997918128967, 0.8098005652427673, 0.8185180425643921, 0.819970965385437, 0.835160493850708, 0.8379341959953308, 0.8392550349235535, 0.8319904804229736, 0.8366134166717529, 0.8006868362426758], "val_loss": [0.7781057953834534, 0.6053135991096497, 0.5815368890762329, 0.48608455061912537, 0.4786151647567749, 0.48332738876342773, 0.48580265045166016, 0.4824329912662506, 0.43902429938316345, 0.4557689130306244, 0.48377034068107605, 0.5501159429550171, 0.520904541015625, 0.5831833481788635], "val_accuracy": [0.7143333554267883, 0.777999997138977, 0.781333327293396, 0.8236666917800903, 0.8203333616256714, 0.8326666951179504, 0.8246666789054871, 0.8360000252723694, 0.8489999771118164, 0.8333333134651184, 0.8450000286102295, 0.8460000157356262, 0.8216666579246521, 0.8326666951179504]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 0], [3, 2, 3, 0, 3], [0, 1, 0, 2], [39, 14], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 8, 6, 1, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 3, 4, 2, 6, 3, 3, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [1, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 5], [0, 5, 3, 3], [98], [0, 1], [0], [0, 5], [53], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 2, 1, 4, 1, 4, 2, 8], [1, 5, 0, 3, 4, 5], [0, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 6, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [896876.4375, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1904636174440384, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [47029011087360.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 9], [0, 1, 0, 2], [39, 39, 78], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1, 1], [6], [0, 7], [81], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 2, 1, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4, 0], [16, 99, 96, 99, 61, 86]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 3, 10, 6, 4, 1, 3, 1, 2, 1, 22, 11, 11, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.sqrt(beta), grad)), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0], [0, 7, 1, 0, 3], [0, 1, 0, 1], [0, 39, 39], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 0, 2], [0, 2, 5, 3, 2, 0, 3], [0, 5, 16, 0], [0, 1], [0], [0], [99], [1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [2], [16, 99, 96, 99, 61, 1]], "fitness": -0.09314285963773727, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.310602903366089, 2.310965061187744, 2.3092052936553955, 2.309058427810669, 2.3092541694641113, 2.3098371028900146], "accuracy": [0.09325055778026581, 0.0882314071059227, 0.09496764093637466, 0.09417514503002167, 0.09509972482919693, 0.09536388516426086], "val_loss": [2.308826446533203, 2.308826446533203, 2.308826446533203, 2.308826446533203, 2.308826446533203, 2.308826446533203], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]