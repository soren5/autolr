[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8777142763137817, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223921775817871, 1.865493655204773, 1.381203293800354, 1.092089295387268, 0.9285920262336731, 0.846983015537262, 0.7677517533302307, 0.7256543636322021, 0.6864022016525269, 0.6597965955734253, 0.6334202885627747, 0.6142562627792358, 0.5938773155212402, 0.5740735530853271, 0.5610170364379883, 0.5454871654510498, 0.5276017785072327, 0.5254985690116882, 0.506286084651947, 0.4930702745914459, 0.48603489995002747, 0.47500813007354736, 0.46689698100090027, 0.4453015625476837, 0.45206505060195923, 0.44248637557029724, 0.4357585608959198, 0.4322448670864105, 0.4201362133026123, 0.41579028964042664, 0.4129781126976013, 0.4011895954608917, 0.39216792583465576, 0.39125528931617737, 0.3820517063140869, 0.37555941939353943, 0.372668594121933, 0.36733025312423706, 0.35183778405189514, 0.3526645302772522, 0.3484099209308624, 0.33702999353408813, 0.34001997113227844, 0.3313663899898529, 0.32695791125297546, 0.3238183856010437, 0.3206503093242645, 0.3167172074317932, 0.30791211128234863, 0.3100890815258026, 0.30564722418785095, 0.30298474431037903, 0.29911431670188904, 0.291439414024353, 0.28795745968818665, 0.27982616424560547, 0.2745565176010132, 0.2762313783168793, 0.27016156911849976, 0.2625552713871002, 0.25865229964256287, 0.25437259674072266, 0.2630963921546936, 0.2516944408416748, 0.24748262763023376, 0.2469814568758011, 0.24329595267772675, 0.2382744401693344, 0.23576650023460388, 0.23307128250598907, 0.22521166503429413, 0.22168385982513428, 0.21363820135593414], "accuracy": [0.2674679756164551, 0.49531105160713196, 0.5713908076286316, 0.6169594526290894, 0.6646413803100586, 0.6892088055610657, 0.7180029153823853, 0.7366266250610352, 0.7454761862754822, 0.7619865536689758, 0.7677981853485107, 0.767401933670044, 0.7790252566337585, 0.7853652238845825, 0.7984414100646973, 0.7967243194580078, 0.8083476424217224, 0.8117818236351013, 0.8123101592063904, 0.8219521641731262, 0.8302733898162842, 0.8290846943855286, 0.8368775844573975, 0.8393871188163757, 0.8355567455291748, 0.8430854678153992, 0.8455950617790222, 0.846387505531311, 0.8496896028518677, 0.8515387773513794, 0.8552370667457581, 0.8558974862098694, 0.8597279191017151, 0.8595958352088928, 0.8663320541381836, 0.8658037185668945, 0.8665962219238281, 0.8691058158874512, 0.876370370388031, 0.8726720213890076, 0.8766345381736755, 0.8770307898521423, 0.8800686597824097, 0.8816536664962769, 0.8833707571029663, 0.8820499181747437, 0.8878615498542786, 0.887201189994812, 0.8901069760322571, 0.8879936337471008, 0.8911636471748352, 0.8926165699958801, 0.8906353116035461, 0.8943336606025696, 0.9001452922821045, 0.9006736278533936, 0.8982961177825928, 0.9001452922821045, 0.9009377956390381, 0.906749427318573, 0.9083344340324402, 0.909259021282196, 0.9025228023529053, 0.9091269373893738, 0.9121648669242859, 0.9129573106765747, 0.913089394569397, 0.9089948534965515, 0.9154669046401978, 0.9191652536392212, 0.9228635430335999, 0.9191652536392212, 0.9240522980690002], "val_loss": [2.039701461791992, 1.5136842727661133, 1.0418261289596558, 0.8342753052711487, 0.7514044642448425, 0.7003604173660278, 0.6473202109336853, 0.6170831918716431, 0.5918668508529663, 0.5665839910507202, 0.5510610342025757, 0.5392656922340393, 0.5243865251541138, 0.512589693069458, 0.4988539218902588, 0.48832789063453674, 0.4854111671447754, 0.4774479866027832, 0.4656118154525757, 0.46945860981941223, 0.4558817446231842, 0.4472385346889496, 0.4442334473133087, 0.43861275911331177, 0.4357140362262726, 0.4304681122303009, 0.42605605721473694, 0.42519432306289673, 0.42249172925949097, 0.41404590010643005, 0.41193488240242004, 0.4112255573272705, 0.4057953357696533, 0.4020312428474426, 0.40013980865478516, 0.3961045444011688, 0.39671412110328674, 0.39607641100883484, 0.39083173871040344, 0.39264369010925293, 0.387782484292984, 0.387968510389328, 0.38297590613365173, 0.38532528281211853, 0.3831539452075958, 0.3879275321960449, 0.37827086448669434, 0.3793972432613373, 0.38034310936927795, 0.3775296211242676, 0.3721350133419037, 0.3742235600948334, 0.37903809547424316, 0.38125166296958923, 0.37261727452278137, 0.36983293294906616, 0.36723148822784424, 0.3678532838821411, 0.3692132830619812, 0.36971184611320496, 0.3675082325935364, 0.3701906204223633, 0.3691261410713196, 0.36937785148620605, 0.36686235666275024, 0.3631764352321625, 0.3712875247001648, 0.3618084788322449, 0.36521363258361816, 0.36512207984924316, 0.3635178208351135, 0.36140015721321106, 0.36574122309684753], "val_accuracy": [0.5446666479110718, 0.656000018119812, 0.6880000233650208, 0.7116666436195374, 0.7276666760444641, 0.7476666569709778, 0.7663333415985107, 0.765333354473114, 0.7786666750907898, 0.7879999876022339, 0.7900000214576721, 0.8013333082199097, 0.8046666383743286, 0.8046666383743286, 0.8149999976158142, 0.8206666707992554, 0.8166666626930237, 0.8276666402816772, 0.8320000171661377, 0.8243333101272583, 0.8353333473205566, 0.8399999737739563, 0.8376666903495789, 0.8373333215713501, 0.8393333554267883, 0.8399999737739563, 0.843999981880188, 0.843999981880188, 0.8453333377838135, 0.847000002861023, 0.847000002861023, 0.8506666421890259, 0.8513333201408386, 0.8513333201408386, 0.8513333201408386, 0.8543333411216736, 0.8533333539962769, 0.8566666841506958, 0.8569999933242798, 0.8510000109672546, 0.8556666374206543, 0.8556666374206543, 0.8569999933242798, 0.8640000224113464, 0.8606666922569275, 0.8550000190734863, 0.8640000224113464, 0.8650000095367432, 0.8629999756813049, 0.8629999756813049, 0.8606666922569275, 0.8650000095367432, 0.8666666746139526, 0.8629999756813049, 0.8666666746139526, 0.8629999756813049, 0.8679999709129333, 0.8683333396911621, 0.8693333268165588, 0.8673333525657654, 0.8673333525657654, 0.8693333268165588, 0.8690000176429749, 0.8709999918937683, 0.8669999837875366, 0.8693333268165588, 0.871999979019165, 0.8726666569709778, 0.8696666955947876, 0.8709999918937683, 0.8700000047683716, 0.8713333606719971, 0.871999979019165]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8188571333885193, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.7271831035614014, 0.9216277599334717, 0.7400174736976624, 0.650090217590332, 0.6089661717414856, 0.6123279333114624, 0.5556929707527161, 0.5362539887428284, 0.5663658976554871, 0.5927898287773132, 0.5854368805885315, 0.5710433125495911, 0.6196824312210083, 0.6170617341995239], "accuracy": [0.4687623679637909, 0.6782459616661072, 0.7396644949913025, 0.7592127919197083, 0.7827235460281372, 0.785629391670227, 0.8078193068504333, 0.8078193068504333, 0.802800178527832, 0.796328067779541, 0.785629391670227, 0.8043851256370544, 0.7980451583862305, 0.791441023349762], "val_loss": [0.9417415261268616, 0.6967786550521851, 0.6120810508728027, 0.5503382682800293, 0.5499889850616455, 0.5552160739898682, 0.5220856070518494, 0.5190452337265015, 0.5916684865951538, 0.5539528131484985, 0.5909695625305176, 0.5649431347846985, 0.6403768658638, 0.5876656770706177], "val_accuracy": [0.7023333311080933, 0.7419999837875366, 0.7773333191871643, 0.7993333339691162, 0.7990000247955322, 0.8080000281333923, 0.8066666722297668, 0.815666675567627, 0.8246666789054871, 0.8066666722297668, 0.8083333373069763, 0.8180000185966492, 0.8019999861717224, 0.8169999718666077]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8042857050895691, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294851541519165, 2.1944448947906494, 1.780857801437378, 1.3393419981002808, 1.0832496881484985, 0.9012242555618286, 0.8225072622299194, 0.7998671531677246, 0.7477841377258301, 0.7371162176132202, 0.7015556693077087, 0.6612419486045837, 0.6429384350776672, 0.6186838746070862, 0.6040120720863342, 0.5900159478187561, 0.5757884383201599, 0.5581024289131165, 0.5530197024345398, 0.5368065237998962, 0.528467059135437, 0.5255998373031616], "accuracy": [0.1138555034995079, 0.32281073927879333, 0.4422137141227722, 0.5428609251976013, 0.6305639743804932, 0.6655659675598145, 0.6991150379180908, 0.7054550051689148, 0.7124554514884949, 0.7174745798110962, 0.7341170310974121, 0.7475894689559937, 0.759080708026886, 0.7613261342048645, 0.7629110813140869, 0.7733456492424011, 0.7736098170280457, 0.7847048044204712, 0.7907806038856506, 0.7965922355651855, 0.7924976944923401, 0.7994980812072754], "val_loss": [2.247041940689087, 2.030344247817993, 1.1489869356155396, 0.8741434216499329, 0.7490084767341614, 0.6872940063476562, 0.666894793510437, 0.6652023792266846, 0.6420268416404724, 0.6139290928840637, 0.5883336067199707, 0.5512840747833252, 0.5347626805305481, 0.5285584330558777, 0.512624204158783, 0.4974771738052368, 0.48773571848869324, 0.5127521753311157, 0.4974611699581146, 0.485257089138031, 0.4958042502403259, 0.4885480999946594], "val_accuracy": [0.42366665601730347, 0.476666659116745, 0.6466666460037231, 0.6970000267028809, 0.7166666388511658, 0.7429999709129333, 0.7419999837875366, 0.7493333220481873, 0.7596666812896729, 0.762333333492279, 0.7776666879653931, 0.7826666831970215, 0.7926666736602783, 0.7940000295639038, 0.8016666769981384, 0.8190000057220459, 0.8199999928474426, 0.8076666593551636, 0.8140000104904175, 0.8130000233650208, 0.8096666932106018, 0.8149999976158142]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 9, 3], [0, 1, 0, 2], [38, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 4, 2, 1, 5, 5, 5, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 87, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 7, 4, 3, 1, 2, 1, 1, 1, 16, 9, 7, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(tf.math.square(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [2, 1, 3, 0, 3], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 6, 9, 3, 6], [0, 0, 0, 3], [16, 16, 77], [0, 1, 0, 1], [4, 0], [0, 7], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0], [0, 2, 3, 2, 8, 0, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 82, 96, 16, 64, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 1, 6, 4, 2, 3, 4, 2, 2, 1, 16, 9, 7, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), alpha), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 0, 0, 2], [39, 24], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [11, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 0, 8, 1, 4, 1, 4, 2, 8], [3, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 18]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(sigma, tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1, 3, 5, 9], [3, 3, 0, 2, 2], [39, 39], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [4, 2, 3, 0, 3, 5, 7, 3, 3, 1, 7, 3, 6, 8, 0, 5, 1], [0, 2, 0, 3, 3, 3, 3, 3, 5, 1, 3, 3, 0], [0, 79, 62], [0, 1], [0], [3], [0], [0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0, 22]], "fitness": -0.09114285558462143, "mapping_values": [1, 11, 7, 4, 2, 30, 17, 13, 3, 2, 1, 1, 0, 3, 1, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.subtract(tf.math.subtract(grad, tf.math.multiply(grad, tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(beta, tf.math.square(tf.math.add(tf.math.multiply(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad)), tf.math.subtract(grad, grad))))), tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(tf.math.square(tf.math.subtract(grad, grad)))), alpha), grad), grad)), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.309864044189453, 2.3097143173217773, 2.3109302520751953, 2.310539484024048, 2.3095428943634033, 2.3112986087799072], "accuracy": [0.09034473448991776, 0.09536388516426086, 0.09351472556591034, 0.09536388516426086, 0.08994849026203156, 0.09021265059709549], "val_loss": [2.3089447021484375, 2.3089447021484375, 2.3089447021484375, 2.3089447021484375, 2.3089447021484375, 2.3089447021484375], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]