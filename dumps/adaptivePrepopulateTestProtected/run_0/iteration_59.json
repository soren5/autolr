[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8622857332229614, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2210817337036133, 1.85691499710083, 1.3906463384628296, 1.0858410596847534, 0.9280408620834351, 0.8294480443000793, 0.7770861387252808, 0.7205302119255066, 0.6848688125610352, 0.6639899015426636, 0.6321085095405579, 0.6146350502967834, 0.5959786772727966, 0.581291675567627, 0.5622900128364563, 0.5356589555740356, 0.5299286842346191, 0.5145041942596436, 0.503943920135498, 0.4919978976249695, 0.4886356294155121, 0.4650138318538666, 0.4608853757381439, 0.4524155259132385, 0.4485096037387848, 0.4363287389278412, 0.4340830445289612, 0.42745646834373474, 0.4172948896884918, 0.4125150442123413, 0.40431174635887146, 0.3941054046154022, 0.3968941867351532, 0.3863644003868103, 0.3809038996696472, 0.37869536876678467, 0.3665303885936737, 0.3636282682418823, 0.3717048466205597, 0.35723528265953064, 0.3476714789867401, 0.35024598240852356, 0.34249407052993774, 0.3344481587409973, 0.32935044169425964, 0.3235759437084198, 0.31718358397483826, 0.3176463842391968, 0.3096308410167694, 0.3122818171977997, 0.30438998341560364, 0.2892152667045593, 0.2946802079677582, 0.28724074363708496, 0.28354570269584656, 0.2852116525173187, 0.278873473405838], "accuracy": [0.27420419454574585, 0.48685774207115173, 0.573107898235321, 0.6203936338424683, 0.6730946898460388, 0.7069079279899597, 0.7181349992752075, 0.7358341217041016, 0.7489103078842163, 0.7592127919197083, 0.772288978099823, 0.7729493975639343, 0.7849689722061157, 0.791969358921051, 0.7950072884559631, 0.8083476424217224, 0.8095363974571228, 0.8161405324935913, 0.8171972036361694, 0.8187822103500366, 0.8177255392074585, 0.832650899887085, 0.8333113193511963, 0.8335754871368408, 0.8378021121025085, 0.8436138033866882, 0.8425571322441101, 0.8430854678153992, 0.8474441766738892, 0.850350022315979, 0.8518029451370239, 0.8573504090309143, 0.8580108284950256, 0.8614450097084045, 0.8618412613868713, 0.8627657890319824, 0.867520809173584, 0.8672566413879395, 0.8642187118530273, 0.8737286925315857, 0.874389111995697, 0.8721436858177185, 0.874389111995697, 0.8782195448875427, 0.8779553771018982, 0.8848236799240112, 0.8862766027450562, 0.8862766027450562, 0.8865407705307007, 0.889050304889679, 0.8877294659614563, 0.8951261639595032, 0.8922203183174133, 0.894069492816925, 0.8934090733528137, 0.8968431949615479, 0.8981640338897705], "val_loss": [2.034855842590332, 1.502853512763977, 1.0410454273223877, 0.835745632648468, 0.7484928369522095, 0.6904428005218506, 0.6499361991882324, 0.6175833940505981, 0.5854429006576538, 0.5680232644081116, 0.5529170036315918, 0.5286165475845337, 0.5148172974586487, 0.5038427710533142, 0.4920540452003479, 0.48432785272598267, 0.4700064957141876, 0.4679866433143616, 0.45377835631370544, 0.4476180970668793, 0.44487813115119934, 0.43327417969703674, 0.4308279752731323, 0.43013858795166016, 0.4158603549003601, 0.41709500551223755, 0.40546345710754395, 0.40200936794281006, 0.40687718987464905, 0.3960781693458557, 0.39404934644699097, 0.3943108022212982, 0.38526055216789246, 0.38628312945365906, 0.3814956843852997, 0.37621793150901794, 0.38005298376083374, 0.3731173574924469, 0.3727961480617523, 0.37110263109207153, 0.36343464255332947, 0.36428165435791016, 0.36469799280166626, 0.36181628704071045, 0.356270432472229, 0.35778239369392395, 0.35110682249069214, 0.3579646050930023, 0.35782095789909363, 0.35235750675201416, 0.34804320335388184, 0.3511162996292114, 0.34751757979393005, 0.34726789593696594, 0.34774503111839294, 0.34254345297813416, 0.3405914306640625], "val_accuracy": [0.5070000290870667, 0.6516666412353516, 0.6806666851043701, 0.7086666822433472, 0.7300000190734863, 0.7433333396911621, 0.7586666941642761, 0.7670000195503235, 0.777999997138977, 0.7866666913032532, 0.7829999923706055, 0.8026666641235352, 0.8143333196640015, 0.8133333325386047, 0.8176666498184204, 0.8209999799728394, 0.8316666483879089, 0.8346666693687439, 0.8343333601951599, 0.8383333086967468, 0.8366666436195374, 0.8476666808128357, 0.846666693687439, 0.8453333377838135, 0.847000002861023, 0.8476666808128357, 0.856333315372467, 0.8506666421890259, 0.8479999899864197, 0.8556666374206543, 0.8576666712760925, 0.859666645526886, 0.8610000014305115, 0.8636666536331177, 0.8629999756813049, 0.8659999966621399, 0.8673333525657654, 0.8653333187103271, 0.8679999709129333, 0.8713333606719971, 0.871666669845581, 0.8713333606719971, 0.8669999837875366, 0.8726666569709778, 0.8743333220481873, 0.8730000257492065, 0.8723333477973938, 0.8740000128746033, 0.8696666955947876, 0.8756666779518127, 0.8786666393280029, 0.8799999952316284, 0.878333330154419, 0.8726666569709778, 0.8790000081062317, 0.8790000081062317, 0.8799999952316284]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 7, 1, 4, 1, 0, 1, 7, 6, 0, 2, 2, 8, 4, 2, 0, 4, 3, 9, 3, 7, 5, 0, 0], [0, 1, 0, 1, 3, 4, 2, 2, 3, 5, 1, 4, 0, 0, 2], [0, 97, 74, 93, 72], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8588571548461914, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.pow(grad, tf.math.add(tf.math.negative(grad), beta)))), tf.math.pow(beta, tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), grad)))), grad)))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.square(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2940378189086914, 2.1909825801849365, 1.7884671688079834, 1.3634904623031616, 1.0638480186462402, 0.9362980127334595, 0.8478595614433289, 0.8179860711097717, 0.7677146792411804, 0.7346817851066589, 0.7006725668907166, 0.6933459639549255, 0.6607456207275391, 0.625531792640686, 0.610217273235321, 0.5883836150169373, 0.5799937844276428, 0.5645440816879272, 0.5523437857627869, 0.5577306151390076, 0.5353589057922363, 0.5240317583084106, 0.5133981108665466, 0.4890774190425873, 0.4926396906375885, 0.4868510067462921, 0.4773014783859253, 0.4604172110557556, 0.4573005735874176, 0.4514281749725342, 0.44462335109710693, 0.42558324337005615, 0.42690330743789673, 0.4351308345794678, 0.4324266016483307, 0.4116196036338806, 0.41508784890174866, 0.3988860547542572, 0.39642438292503357, 0.380165696144104, 0.3970855474472046, 0.36429110169410706, 0.37711644172668457, 0.3668067753314972, 0.36550581455230713, 0.34631064534187317, 0.34681493043899536, 0.35994258522987366, 0.3404489755630493, 0.3253023326396942, 0.32622623443603516, 0.33335450291633606, 0.3310961127281189, 0.3243114650249481, 0.3101527690887451, 0.31259432435035706], "accuracy": [0.1274600476026535, 0.32981112599372864, 0.4348170757293701, 0.5394267439842224, 0.6362435817718506, 0.6573768258094788, 0.6892088055610657, 0.6909258961677551, 0.7012283802032471, 0.722229540348053, 0.7284374833106995, 0.7342491149902344, 0.7470611333847046, 0.7625148296356201, 0.7638356685638428, 0.7746664881706238, 0.7740060687065125, 0.7810064554214478, 0.7923656105995178, 0.7874785661697388, 0.7973847389221191, 0.8006868362426758, 0.8038568496704102, 0.8138951063156128, 0.8166688680648804, 0.8156121969223022, 0.8138951063156128, 0.8202351331710815, 0.8211596608161926, 0.8240655064582825, 0.8302733898162842, 0.8387266993522644, 0.8393871188163757, 0.8376700282096863, 0.8348963260650635, 0.8409721255302429, 0.8376700282096863, 0.8506141901016235, 0.8551049828529358, 0.8574824929237366, 0.8413683772087097, 0.8594637513160706, 0.8574824929237366, 0.8533879518508911, 0.8541803956031799, 0.8647470474243164, 0.8639545440673828, 0.8581429123878479, 0.8656716346740723, 0.8747853636741638, 0.8746532797813416, 0.8706908226013184, 0.8758420348167419, 0.8730682730674744, 0.8754457831382751, 0.8790120482444763], "val_loss": [2.246495008468628, 2.0189967155456543, 1.1298511028289795, 0.8492931127548218, 0.7506471872329712, 0.6968894600868225, 0.6482605934143066, 0.6370987296104431, 0.6245080828666687, 0.5843393802642822, 0.5655369758605957, 0.543889582157135, 0.5311446785926819, 0.5269863605499268, 0.5166363716125488, 0.5045313835144043, 0.48875096440315247, 0.4973789155483246, 0.48788565397262573, 0.4912087321281433, 0.4854459762573242, 0.4828328490257263, 0.47499462962150574, 0.46113187074661255, 0.4625034034252167, 0.451994389295578, 0.43752872943878174, 0.4506774842739105, 0.4365125298500061, 0.4328976273536682, 0.42656683921813965, 0.44540560245513916, 0.42284345626831055, 0.4269177317619324, 0.42495784163475037, 0.41536831855773926, 0.4113413393497467, 0.43047159910202026, 0.43180224299430847, 0.4207499921321869, 0.42197421193122864, 0.4415091574192047, 0.42738476395606995, 0.4337339401245117, 0.423132985830307, 0.4128219783306122, 0.4183514714241028, 0.4210217297077179, 0.43090176582336426, 0.4492154121398926, 0.44432398676872253, 0.45771169662475586, 0.4593164920806885, 0.43287479877471924, 0.4349939823150635, 0.44053807854652405], "val_accuracy": [0.414000004529953, 0.49266666173934937, 0.671999990940094, 0.7136666774749756, 0.7269999980926514, 0.7570000290870667, 0.7476666569709778, 0.7670000195503235, 0.7706666588783264, 0.7749999761581421, 0.7820000052452087, 0.7883333563804626, 0.7953333258628845, 0.8019999861717224, 0.8076666593551636, 0.8113333582878113, 0.8233333230018616, 0.8176666498184204, 0.8220000267028809, 0.8186666369438171, 0.8220000267028809, 0.8243333101272583, 0.8309999704360962, 0.8343333601951599, 0.8343333601951599, 0.8460000157356262, 0.8489999771118164, 0.8460000157356262, 0.8523333072662354, 0.8493333458900452, 0.8516666889190674, 0.8429999947547913, 0.8539999723434448, 0.8526666760444641, 0.8606666922569275, 0.8579999804496765, 0.8569999933242798, 0.8566666841506958, 0.859000027179718, 0.8619999885559082, 0.8603333234786987, 0.8586666584014893, 0.8640000224113464, 0.859666645526886, 0.8690000176429749, 0.8726666569709778, 0.8656666874885559, 0.8646666407585144, 0.871999979019165, 0.8740000128746033, 0.874666690826416, 0.8743333220481873, 0.8686666488647461, 0.8666666746139526, 0.8656666874885559, 0.8653333187103271]}, "mapping_values": [1, 10, 5, 5, 3, 39, 24, 15, 5, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 33}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8251428604125977, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5915483236312866, 0.8573504090309143, 0.7139195203781128, 0.6187654733657837, 0.5600234866142273, 0.5537382960319519, 0.5247601270675659, 0.523628294467926, 0.5257294178009033, 0.5258429646492004, 0.49543097615242004, 0.51694256067276, 0.47682666778564453, 0.4723059833049774, 0.45622655749320984, 0.4527758061885834, 0.48206114768981934, 0.45944371819496155, 0.490544855594635, 0.4963173568248749, 0.5084438323974609, 0.5080634951591492, 0.5424965023994446, 0.5166636109352112, 0.5277389287948608, 0.49809741973876953, 0.5687349438667297], "accuracy": [0.4675736427307129, 0.7061154246330261, 0.755118191242218, 0.7675340175628662, 0.7985734939575195, 0.7994980812072754, 0.8107251524925232, 0.8178576231002808, 0.8173292875289917, 0.819970965385437, 0.8232730031013489, 0.8259146809577942, 0.828820526599884, 0.8300092220306396, 0.839519202709198, 0.845859169960022, 0.8267071843147278, 0.8451988101005554, 0.8238013386726379, 0.8486329317092896, 0.8334434032440186, 0.8433496356010437, 0.8385946154594421, 0.8183859586715698, 0.8338396549224854, 0.8338396549224854, 0.8318583965301514], "val_loss": [0.8472970128059387, 0.637308657169342, 0.5738181471824646, 0.5011052489280701, 0.4703958034515381, 0.4857066571712494, 0.5107575058937073, 0.49067243933677673, 0.5035364627838135, 0.5455119013786316, 0.5052202343940735, 0.4749332666397095, 0.5030305981636047, 0.5004808306694031, 0.5008968114852905, 0.5177216529846191, 0.5515367388725281, 0.5111462473869324, 0.5781823992729187, 0.5550340414047241, 0.5504562854766846, 0.6514385342597961, 0.5367065668106079, 0.5312079787254333, 0.5624254941940308, 0.5505208373069763, 0.5535200238227844], "val_accuracy": [0.7096666693687439, 0.7649999856948853, 0.7736666798591614, 0.7950000166893005, 0.8246666789054871, 0.82833331823349, 0.828000009059906, 0.8396666646003723, 0.8429999947547913, 0.8273333311080933, 0.8399999737739563, 0.843999981880188, 0.8349999785423279, 0.8476666808128357, 0.8506666421890259, 0.8370000123977661, 0.8503333330154419, 0.8383333086967468, 0.843999981880188, 0.8523333072662354, 0.8396666646003723, 0.8539999723434448, 0.8363333344459534, 0.843999981880188, 0.8496666550636292, 0.8493333458900452, 0.843999981880188]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 26], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 2, 1, 2, 8], [0, 0, 0, 4, 0, 0, 3, 3, 2, 0], [16, 62, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 7, 4, 3, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha)), tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), sigma), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [8, 2, 3, 0, 2, 5], [0, 2, 0, 3], [16, 32], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [3, 1, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 16, 8, 8, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 4], [0, 1, 2, 2], [39, 23], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [4, 2, 3, 0, 3, 5], [0, 2, 0, 3], [95, 16], [0, 1, 1], [1], [2, 4], [99], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 0, 6, 8, 1, 4, 6, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 8, 4, 4, 2, 3, 1, 2, 0, 17, 9, 8, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)))), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 3, 1, 3], [0, 0, 1, 1, 2], [39, 39, 40], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [0, 82], [0, 1], [0], [0], [0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 0, 9, 5], [0, 3], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.309307098388672, 2.3101093769073486, 2.3108389377593994, 2.308867931365967, 2.309288740158081, 2.308739185333252], "accuracy": [0.09245806187391281, 0.09087307006120682, 0.09298639744520187, 0.09576013684272766, 0.09351472556591034, 0.09179764986038208], "val_loss": [2.3095123767852783, 2.3095123767852783, 2.3095123767852783, 2.3095123767852783, 2.3095123767852783, 2.3095123767852783], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}]