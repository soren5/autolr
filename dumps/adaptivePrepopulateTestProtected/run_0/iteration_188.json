[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8528571724891663, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2231740951538086, 1.8663129806518555, 1.3943387269973755, 1.0955363512039185, 0.9310687184333801, 0.8393416404724121, 0.7733213305473328, 0.7273911833763123, 0.6927030682563782, 0.6628822088241577, 0.6336661577224731, 0.6104039549827576, 0.5961663722991943, 0.5808676481246948, 0.5567004680633545, 0.5439505577087402, 0.5325253009796143, 0.5126059651374817, 0.4998873174190521, 0.48388856649398804, 0.4749297499656677, 0.4726748466491699, 0.4589560627937317, 0.4578621983528137, 0.4422379732131958, 0.43367013335227966, 0.4270068407058716, 0.4172896146774292, 0.409848690032959, 0.40035492181777954, 0.4073314368724823, 0.40494516491889954, 0.38552069664001465, 0.38702672719955444, 0.3716645836830139, 0.37507668137550354, 0.3599083125591278, 0.3570803701877594, 0.3534519672393799, 0.3532240390777588, 0.34751054644584656, 0.3484005630016327, 0.3372734487056732, 0.3335874080657959, 0.32853788137435913, 0.31743067502975464, 0.3174053132534027], "accuracy": [0.2797516882419586, 0.4939902126789093, 0.5690133571624756, 0.6169594526290894, 0.6688680648803711, 0.7030775547027588, 0.7276449799537659, 0.7337207794189453, 0.7481178045272827, 0.76106196641922, 0.7712323069572449, 0.7798177003860474, 0.7849689722061157, 0.7921014428138733, 0.8021397590637207, 0.8090080618858337, 0.809140145778656, 0.8173292875289917, 0.8214238286018372, 0.8256505131721497, 0.8330471515655518, 0.8318583965301514, 0.8385946154594421, 0.8391229510307312, 0.8482366800308228, 0.8510104417800903, 0.8510104417800903, 0.8533879518508911, 0.8577466607093811, 0.8585391640663147, 0.859199583530426, 0.8585391640663147, 0.8660678863525391, 0.863558292388916, 0.8734645247459412, 0.8697662353515625, 0.8745211958885193, 0.8757099509239197, 0.8778232932090759, 0.8758420348167419, 0.878879964351654, 0.8746532797813416, 0.8813894987106323, 0.8819178342819214, 0.8845595121383667, 0.886672854423523, 0.887597382068634], "val_loss": [2.037700891494751, 1.5122137069702148, 1.041483759880066, 0.8343135714530945, 0.7478468418121338, 0.6973170042037964, 0.6582013964653015, 0.6199945211410522, 0.5959740281105042, 0.5807571411132812, 0.5575647950172424, 0.5413444638252258, 0.5372827649116516, 0.5186436176300049, 0.5067912340164185, 0.5026881694793701, 0.4933253526687622, 0.4807402789592743, 0.4688490927219391, 0.4656309485435486, 0.45990535616874695, 0.4496510326862335, 0.4504440128803253, 0.44272851943969727, 0.4402521848678589, 0.4312746524810791, 0.43040525913238525, 0.4220605790615082, 0.4240975081920624, 0.4209042191505432, 0.41440677642822266, 0.41106098890304565, 0.40726807713508606, 0.4039473533630371, 0.4047379493713379, 0.40048688650131226, 0.39309847354888916, 0.3941383361816406, 0.3984459340572357, 0.3883169889450073, 0.3909732401371002, 0.382038950920105, 0.38528943061828613, 0.3813047707080841, 0.3797660171985626, 0.37674659490585327, 0.3792875111103058], "val_accuracy": [0.5513333082199097, 0.6426666378974915, 0.6813333630561829, 0.7099999785423279, 0.7356666922569275, 0.750333309173584, 0.7603333592414856, 0.781000018119812, 0.7870000004768372, 0.7940000295639038, 0.8050000071525574, 0.8063333630561829, 0.8090000152587891, 0.8169999718666077, 0.8206666707992554, 0.8213333487510681, 0.8256666660308838, 0.8326666951179504, 0.8336666822433472, 0.8370000123977661, 0.8399999737739563, 0.8456666469573975, 0.840666651725769, 0.8443333506584167, 0.8503333330154419, 0.8503333330154419, 0.8510000109672546, 0.8533333539962769, 0.8510000109672546, 0.8533333539962769, 0.8556666374206543, 0.8553333282470703, 0.856333315372467, 0.8600000143051147, 0.8600000143051147, 0.8586666584014893, 0.8613333106040955, 0.8643333315849304, 0.8566666841506958, 0.862333357334137, 0.8616666793823242, 0.8690000176429749, 0.8646666407585144, 0.8683333396911621, 0.8663333058357239, 0.8633333444595337, 0.8683333396911621]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 3], [0, 1], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8460000157356262, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2928054332733154, 2.190554618835449, 1.7795262336730957, 1.3604040145874023, 1.102304458618164, 0.9361065030097961, 0.8636944890022278, 0.8093997240066528, 0.7474536895751953, 0.7277979850769043, 0.7065678834915161, 0.6854888796806335, 0.6709992289543152, 0.6367944478988647, 0.6263298392295837, 0.6117008328437805, 0.5940325260162354, 0.5892940163612366, 0.5790903568267822, 0.5496892333030701, 0.5512632727622986, 0.5212094187736511, 0.5193475484848022, 0.502325177192688, 0.5011336803436279, 0.4857110381126404, 0.47091880440711975, 0.4671795070171356, 0.4602634310722351, 0.4509938955307007, 0.43719151616096497, 0.4314284920692444, 0.42718350887298584, 0.42508605122566223, 0.4103468656539917, 0.4038688838481903, 0.3948061168193817], "accuracy": [0.12574297189712524, 0.3234711289405823, 0.4361378848552704, 0.5362567901611328, 0.6248844265937805, 0.656980574131012, 0.6820763349533081, 0.6926429867744446, 0.7071720957756042, 0.7116629481315613, 0.7218332886695862, 0.7387399077415466, 0.7436270117759705, 0.7526086568832397, 0.7602694630622864, 0.7605336308479309, 0.7718927264213562, 0.7786290049552917, 0.7753269076347351, 0.7845727205276489, 0.7872143983840942, 0.7961959838867188, 0.8043851256370544, 0.8013472557067871, 0.8070268034934998, 0.81112140417099, 0.817989706993103, 0.8144234418869019, 0.8230088353157043, 0.8269713521003723, 0.8352925777435303, 0.8273676037788391, 0.8372738361358643, 0.837141752243042, 0.841500461101532, 0.8397833704948425, 0.8475762605667114], "val_loss": [2.245373487472534, 2.01961350440979, 1.1556669473648071, 0.8755432963371277, 0.798058032989502, 0.7201574444770813, 0.6805706024169922, 0.6561285257339478, 0.630999743938446, 0.6151532530784607, 0.5827462077140808, 0.5751503705978394, 0.5728614926338196, 0.5423932075500488, 0.5386605858802795, 0.5310760140419006, 0.5173449516296387, 0.5161789655685425, 0.5011605620384216, 0.494008868932724, 0.4935641288757324, 0.4881279170513153, 0.47076570987701416, 0.4601423442363739, 0.45467546582221985, 0.44915950298309326, 0.45759472250938416, 0.4478033781051636, 0.43880289793014526, 0.4385033845901489, 0.43057236075401306, 0.4342570900917053, 0.4481706917285919, 0.42384853959083557, 0.42292115092277527, 0.423836350440979, 0.4320775270462036], "val_accuracy": [0.4256666600704193, 0.45500001311302185, 0.6353333592414856, 0.6886666417121887, 0.7096666693687439, 0.7289999723434448, 0.7383333444595337, 0.7360000014305115, 0.7483333349227905, 0.7546666860580444, 0.7603333592414856, 0.7703333497047424, 0.7566666603088379, 0.7829999923706055, 0.7866666913032532, 0.7856666445732117, 0.7910000085830688, 0.800000011920929, 0.8050000071525574, 0.8026666641235352, 0.8026666641235352, 0.812333345413208, 0.8176666498184204, 0.8263333439826965, 0.8253333568572998, 0.828000009059906, 0.8323333263397217, 0.8426666855812073, 0.8453333377838135, 0.8403333425521851, 0.8433333039283752, 0.8529999852180481, 0.8460000157356262, 0.8479999899864197, 0.8460000157356262, 0.8523333072662354, 0.8523333072662354]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 0, 1, 0], [0, 7, 7, 9], [0, 7], [0, 68], [1], [0], [2], [0]], "fitness": -0.8305714130401611, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.536752462387085, 0.9101228713989258, 0.7300983667373657, 0.650735080242157, 0.5880741477012634, 0.5622966885566711, 0.5337227582931519, 0.5202180743217468, 0.5417951345443726, 0.5197780132293701, 0.5083154439926147, 0.502521276473999, 0.5289856195449829, 0.5332387685775757, 0.5055856704711914, 0.4943484663963318, 0.5467431545257568, 0.541164219379425, 0.5450820326805115, 0.5534335970878601, 0.548659086227417, 0.5700886845588684], "accuracy": [0.48170650005340576, 0.6948884129524231, 0.7230220437049866, 0.7600052952766418, 0.7753269076347351, 0.7946110367774963, 0.8058380484580994, 0.806630551815033, 0.8038568496704102, 0.8124422430992126, 0.8063663840293884, 0.8117818236351013, 0.8215559124946594, 0.8247259259223938, 0.8224804997444153, 0.8356888294219971, 0.8138951063156128, 0.8236692547798157, 0.8251221776008606, 0.8210275769233704, 0.8127063512802124, 0.8149517774581909], "val_loss": [1.0044429302215576, 0.7030776143074036, 0.5938073992729187, 0.5721491575241089, 0.5492658019065857, 0.5323084592819214, 0.5151210427284241, 0.5139909386634827, 0.5420351028442383, 0.5194918513298035, 0.5887264013290405, 0.6906562447547913, 0.6109229326248169, 0.5795516967773438, 0.6411164402961731, 0.5707208514213562, 0.6132858395576477, 0.6796318888664246, 0.6983867287635803, 0.6641743183135986, 0.7177337408065796, 0.6768837571144104], "val_accuracy": [0.6650000214576721, 0.7396666407585144, 0.781333327293396, 0.7960000038146973, 0.8013333082199097, 0.8119999766349792, 0.8166666626930237, 0.8243333101272583, 0.8169999718666077, 0.8143333196640015, 0.8266666531562805, 0.8199999928474426, 0.8276666402816772, 0.8243333101272583, 0.8289999961853027, 0.8256666660308838, 0.831333339214325, 0.8166666626930237, 0.8286666870117188, 0.8196666836738586, 0.8216666579246521, 0.8186666369438171]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 6, 4, 2, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [8, 2, 6, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 9, 4, 2, 8, 7, 3], [0, 0, 0, 4, 0, 1, 1, 1, 4, 0], [16, 1, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.math.sqrt(grad), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(tf.math.multiply(alpha, alpha), grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1026284471154213, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 23, 13, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 6], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [39, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 6, 8, 8, 4, 1, 2, 2, 0], [0, 3, 3, 3, 4, 0, 3, 1, 2, 0], [6, 99, 96, 99, 61, 56]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3053205013275146, 2.302584648132324, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09430722147226334, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 6, 3, 0, 3], [0, 1, 0, 2], [39, 15], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [3, 2, 8, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [14, 99, 96, 99, 39, 86]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), alpha))), tf.math.add(tf.math.sqrt(beta), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 58], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9, 3, 3, 3, 5], [2, 2, 0, 3], [16, 16], [0, 0, 1], [0, 5], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 9, 3, 6, 8, 1, 4, 1, 0, 8, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 2, 0, 1, 3, 2, 1, 0, 15, 9, 6, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]