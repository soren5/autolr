[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8505714535713196, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223505973815918, 1.8640192747116089, 1.3882334232330322, 1.0905816555023193, 0.949062705039978, 0.8482249975204468, 0.7924442291259766, 0.734833836555481, 0.6945648789405823, 0.6717593669891357, 0.6429508328437805, 0.6146708726882935, 0.5980443954467773, 0.5814648270606995, 0.5664591789245605, 0.5495043992996216, 0.5317938923835754, 0.5196186900138855, 0.5087001919746399, 0.5088880062103271, 0.49116525053977966, 0.47740358114242554, 0.4715830087661743, 0.4542085826396942, 0.4485543370246887, 0.44412901997566223, 0.43568024039268494, 0.4261051416397095, 0.42053085565567017, 0.42206475138664246, 0.4042748808860779, 0.40229490399360657, 0.39899760484695435, 0.3971916139125824, 0.375663161277771], "accuracy": [0.2712983787059784, 0.49465063214302063, 0.5691454410552979, 0.6276581883430481, 0.6626601219177246, 0.6902654767036438, 0.7152291536331177, 0.7374191284179688, 0.7454761862754822, 0.7508915662765503, 0.7666094303131104, 0.7770439982414246, 0.7788931727409363, 0.7854973077774048, 0.7956677079200745, 0.798309326171875, 0.8078193068504333, 0.8055738806724548, 0.8182538747787476, 0.8161405324935913, 0.8230088353157043, 0.8297450542449951, 0.8285563588142395, 0.8367455005645752, 0.8391229510307312, 0.8393871188163757, 0.8425571322441101, 0.8438779711723328, 0.8469158411026001, 0.8461233377456665, 0.8508783578872681, 0.857218325138092, 0.8570862412452698, 0.856689989566803, 0.8668603897094727], "val_loss": [2.0398125648498535, 1.5189599990844727, 1.0490632057189941, 0.8449564576148987, 0.7526652216911316, 0.7032440304756165, 0.6576743125915527, 0.6184937953948975, 0.5864778757095337, 0.5657800436019897, 0.5475002527236938, 0.5318623185157776, 0.5156540274620056, 0.5027375221252441, 0.49015283584594727, 0.4832392930984497, 0.4706810712814331, 0.46104589104652405, 0.4565413296222687, 0.45135822892189026, 0.43872392177581787, 0.4377875030040741, 0.4242434501647949, 0.418850839138031, 0.41906416416168213, 0.41814279556274414, 0.405404269695282, 0.4052862226963043, 0.39566272497177124, 0.38883307576179504, 0.39554059505462646, 0.3844303488731384, 0.3856498897075653, 0.38740837574005127, 0.38212767243385315], "val_accuracy": [0.5350000262260437, 0.6656666398048401, 0.684333324432373, 0.7059999704360962, 0.734666645526886, 0.7429999709129333, 0.7573333382606506, 0.7683333158493042, 0.7806666493415833, 0.7863333225250244, 0.7950000166893005, 0.8046666383743286, 0.8103333115577698, 0.8149999976158142, 0.8243333101272583, 0.8209999799728394, 0.8286666870117188, 0.8343333601951599, 0.8376666903495789, 0.8349999785423279, 0.8426666855812073, 0.8429999947547913, 0.8476666808128357, 0.8463333249092102, 0.8433333039283752, 0.847000002861023, 0.8536666631698608, 0.8529999852180481, 0.8556666374206543, 0.8616666793823242, 0.856333315372467, 0.8613333106040955, 0.859666645526886, 0.8600000143051147, 0.8613333106040955]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0], [0, 9], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8494285941123962, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2934818267822266, 2.1901705265045166, 1.7700809240341187, 1.33710777759552, 1.070879578590393, 0.9090669751167297, 0.8334963917732239, 0.8113000392913818, 0.7722257971763611, 0.7449594140052795, 0.712632417678833, 0.6801387071609497, 0.641082763671875, 0.619876503944397, 0.6048053503036499, 0.6010058522224426, 0.5838451385498047, 0.5760512948036194, 0.545307993888855, 0.5367310643196106, 0.5339844226837158, 0.5132380127906799, 0.5076991319656372, 0.49273166060447693, 0.48674458265304565, 0.48334449529647827, 0.4640786349773407, 0.46139827370643616, 0.4483150541782379, 0.4368191361427307, 0.4428371787071228, 0.42566579580307007, 0.4172953963279724, 0.4189611077308655, 0.41628533601760864, 0.4065971076488495, 0.38418564200401306, 0.39621594548225403, 0.37122198939323425, 0.37450024485588074, 0.372734397649765, 0.3637920320034027, 0.36999809741973877, 0.36031025648117065], "accuracy": [0.13472460210323334, 0.32664114236831665, 0.44591203331947327, 0.5431250929832458, 0.6386210322380066, 0.6684718132019043, 0.695813000202179, 0.6979262828826904, 0.7152291536331177, 0.7121912837028503, 0.7317395210266113, 0.7460044622421265, 0.7559106945991516, 0.767930269241333, 0.7705719470977783, 0.7701756954193115, 0.7726852297782898, 0.7777044177055359, 0.7926297783851624, 0.7927618622779846, 0.791441023349762, 0.8009510040283203, 0.8072909712791443, 0.8156121969223022, 0.8120459914207458, 0.8170651197433472, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8335754871368408, 0.8367455005645752, 0.8338396549224854, 0.8381983637809753, 0.8436138033866882, 0.8388587832450867, 0.8444063067436218, 0.8537842035293579, 0.846387505531311, 0.8551049828529358, 0.8555012345314026, 0.8510104417800903, 0.8577466607093811, 0.8585391640663147, 0.8617091774940491], "val_loss": [2.247711420059204, 2.024860382080078, 1.1626876592636108, 0.9501566290855408, 0.8053562641143799, 0.7193925976753235, 0.7094466686248779, 0.6892340779304504, 0.6524072885513306, 0.6223776936531067, 0.5974170565605164, 0.5819482207298279, 0.5612713098526001, 0.5573920607566833, 0.5487160682678223, 0.5367524027824402, 0.5317605137825012, 0.5217928290367126, 0.515276312828064, 0.5106354355812073, 0.5013720989227295, 0.48519188165664673, 0.48161718249320984, 0.4904373288154602, 0.46269991993904114, 0.4550497531890869, 0.46353068947792053, 0.449322909116745, 0.4575777053833008, 0.4516008198261261, 0.45037832856178284, 0.4399157762527466, 0.4656761884689331, 0.45866039395332336, 0.44065314531326294, 0.435332715511322, 0.45176777243614197, 0.43356063961982727, 0.4261191487312317, 0.44103190302848816, 0.42060381174087524, 0.43658629059791565, 0.45267435908317566, 0.4443131387233734], "val_accuracy": [0.4090000092983246, 0.46000000834465027, 0.6316666603088379, 0.6763333082199097, 0.6909999847412109, 0.7173333168029785, 0.7303333282470703, 0.7363333106040955, 0.7540000081062317, 0.7606666684150696, 0.7593333125114441, 0.7666666507720947, 0.778333306312561, 0.7963333129882812, 0.7976666688919067, 0.7933333516120911, 0.7986666560173035, 0.8036666512489319, 0.8146666884422302, 0.815666675567627, 0.8090000152587891, 0.8136666417121887, 0.8209999799728394, 0.8203333616256714, 0.8356666564941406, 0.8330000042915344, 0.8296666741371155, 0.8386666774749756, 0.8343333601951599, 0.8383333086967468, 0.8360000252723694, 0.8363333344459534, 0.8403333425521851, 0.8433333039283752, 0.8463333249092102, 0.8506666421890259, 0.8493333458900452, 0.8539999723434448, 0.8566666841506958, 0.8506666421890259, 0.8519999980926514, 0.843666672706604, 0.8416666388511658, 0.8510000109672546]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 2, 0, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8294285535812378, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6272718906402588, 0.8684282302856445, 0.6966313719749451, 0.6088387966156006, 0.5758771300315857, 0.5504360198974609, 0.5345760583877563, 0.4827987849712372, 0.4738727807998657, 0.5073794722557068, 0.5229549407958984, 0.519408106803894, 0.490822970867157, 0.5136100649833679, 0.5157288908958435, 0.5100594758987427], "accuracy": [0.46612071990966797, 0.7003037929534912, 0.7450799345970154, 0.7751948237419128, 0.7866860628128052, 0.7984414100646973, 0.8082155585289001, 0.8207634687423706, 0.8261788487434387, 0.8259146809577942, 0.8119139075279236, 0.817989706993103, 0.8210275769233704, 0.8276317715644836, 0.8269713521003723, 0.8248580098152161], "val_loss": [0.8876362442970276, 0.6286869049072266, 0.5359336137771606, 0.5141738653182983, 0.49649807810783386, 0.4810503423213959, 0.48917603492736816, 0.45870450139045715, 0.48930323123931885, 0.5015559196472168, 0.5369682908058167, 0.5002742409706116, 0.5432814359664917, 0.5446369647979736, 0.5742815136909485, 0.5264235138893127], "val_accuracy": [0.6806666851043701, 0.7766666412353516, 0.793666660785675, 0.8033333420753479, 0.8113333582878113, 0.828000009059906, 0.8193333148956299, 0.8326666951179504, 0.8243333101272583, 0.8273333311080933, 0.8403333425521851, 0.8223333358764648, 0.8353333473205566, 0.8289999961853027, 0.8259999752044678, 0.8346666693687439]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 2, 9, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 2, 5, 9], [0, 2, 0, 3], [16, 16, 26], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [3, 3, 8, 6, 8, 1, 4, 1, 4, 2, 8, 3], [0, 0, 2, 3, 0, 2, 3, 1, 2, 0], [16, 99, 96, 99, 61, 89]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 4, 1, 2, 10, 7, 3, 3, 2, 1, 1, 1, 22, 12, 10, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(beta, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, sigma), tf.math.sqrt(tf.math.multiply(alpha, beta)))))), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [7.614101701473075e+16, 1.4609905064974746e+18, 6.760852468973699e+18, 1.8699930815260787e+19, 4.0307520130175205e+19, 7.343962297943772e+19], "accuracy": [0.09747721254825592, 0.10011887550354004, 0.09959053993225098, 0.09760929644107819, 0.09813763201236725, 0.09602430462837219], "val_loss": [3.492364352214794e+17, 2.7944401380740956e+18, 9.450587214246314e+18, 2.2358151136406405e+19, 4.383873366417316e+19, 7.477800570737132e+19], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 8, 3, 0, 3], [0, 0, 1, 0, 2], [39, 39], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 0], [0, 4, 2, 1], [16, 16], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 3, 6, 4, 4, 6, 4, 7, 4, 8, 2, 8, 4, 4, 2, 7, 5, 0], [0, 1, 3, 2, 0, 4, 5, 5, 0, 1, 6, 7, 4, 2], [99, 93, 34], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 7, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 60, 76]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 32, 18, 14, 3, 23, 13, 10, 7], "tree_depth": 39, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(tf.math.sqrt(tf.math.pow(tf.math.pow(sigma, tf.math.add(beta, tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(grad))))), grad)), grad)), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), alpha), grad), grad), grad))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(tf.math.add(alpha, beta))))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 9, 3], [0, 0, 0, 2], [39, 39, 76], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [2, 6, 9, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 0, 6, 6, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 82, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 3, 8, 5, 3, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, alpha))", "other_info": {"loss": [2.303447723388672, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 1], [0, 1, 0, 2, 0], [39, 39, 89], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [5, 3, 3, 6, 8, 1, 4, 1, 4, 2, 2], [0, 0, 0, 3, 0, 0, 3, 3, 2, 0], [16, 99, 96, 99, 61, 11]], "fitness": -0.08885714411735535, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3104400634765625, 2.309282064437866, 2.310178756713867, 2.3101019859313965, 2.3094992637634277, 2.3093717098236084], "accuracy": [0.09787346422672272, 0.09298639744520187, 0.09113723784685135, 0.08638224750757217, 0.0874389111995697, 0.08558975160121918], "val_loss": [2.3088173866271973, 2.308748960494995, 2.3086674213409424, 2.308579921722412, 2.3084805011749268, 2.3083736896514893], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09066666662693024, 0.09000000357627869, 0.08966666460037231]}}]