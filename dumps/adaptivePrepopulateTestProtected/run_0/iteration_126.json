[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8628571629524231, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222881317138672, 1.8652056455612183, 1.387263536453247, 1.0926693677902222, 0.9367849230766296, 0.8395399451255798, 0.771812379360199, 0.722350537776947, 0.6968600749969482, 0.6598337888717651, 0.6350033283233643, 0.6146585941314697, 0.5957152247428894, 0.5710828304290771, 0.5540712475776672, 0.5459828972816467, 0.5291711688041687, 0.5216610431671143, 0.5086932182312012, 0.49551141262054443, 0.48689141869544983, 0.481773316860199, 0.4658522605895996, 0.460121214389801, 0.4497968852519989, 0.4401480555534363, 0.4326135814189911, 0.4243355691432953, 0.41771480441093445, 0.412573903799057, 0.40734949707984924, 0.40149086713790894, 0.39109668135643005, 0.3925674855709076, 0.38600751757621765, 0.38447102904319763, 0.3697221577167511, 0.36754775047302246, 0.3573439419269562, 0.35615894198417664, 0.34607213735580444, 0.3441525399684906, 0.33908236026763916, 0.3381868004798889, 0.33035898208618164, 0.3293963372707367, 0.31766289472579956, 0.3126455247402191, 0.31570371985435486, 0.30800509452819824, 0.2989943325519562, 0.29865700006484985, 0.2978117763996124, 0.29491424560546875, 0.29358553886413574, 0.28169530630111694, 0.2760026156902313, 0.2771534025669098, 0.26660090684890747, 0.27193084359169006], "accuracy": [0.28160083293914795, 0.49385812878608704, 0.5653150081634521, 0.6235635876655579, 0.6608110070228577, 0.7059833407402039, 0.7263241410255432, 0.7403249144554138, 0.7413815855979919, 0.7592127919197083, 0.7738739848136902, 0.7791573405265808, 0.7849689722061157, 0.7931581139564514, 0.8014793395996094, 0.8029322624206543, 0.8098005652427673, 0.8171972036361694, 0.8239334225654602, 0.8219521641731262, 0.8296129703521729, 0.8280280232429504, 0.8392550349235535, 0.8364813327789307, 0.8401796221733093, 0.8449346423149109, 0.844010055065155, 0.8498216867446899, 0.8549728989601135, 0.8539162874221802, 0.8537842035293579, 0.8597279191017151, 0.8628978729248047, 0.8603883385658264, 0.8613129258155823, 0.86553955078125, 0.8691058158874512, 0.8685774803161621, 0.8709549307823181, 0.8742570281028748, 0.878351628780365, 0.8751816153526306, 0.8792761564254761, 0.8776912093162537, 0.8821820020675659, 0.8844274282455444, 0.8885219693183899, 0.886672854423523, 0.884691596031189, 0.8873332738876343, 0.8897107243537903, 0.894069492816925, 0.8952582478523254, 0.8934090733528137, 0.8936732411384583, 0.8993527889251709, 0.8968431949615479, 0.8985602855682373, 0.9033153057098389, 0.900409460067749], "val_loss": [2.031677484512329, 1.5009263753890991, 1.026739478111267, 0.8163577318191528, 0.7392345666885376, 0.6784661412239075, 0.6324118971824646, 0.6051182746887207, 0.577838659286499, 0.5587502717971802, 0.5444003343582153, 0.5285345911979675, 0.5136042833328247, 0.503282904624939, 0.49231550097465515, 0.4819769561290741, 0.4782849848270416, 0.4668026268482208, 0.4614419639110565, 0.4526481032371521, 0.44632577896118164, 0.44135043025016785, 0.43522632122039795, 0.4289878308773041, 0.4212528467178345, 0.41579756140708923, 0.4135063886642456, 0.40981799364089966, 0.4050329327583313, 0.4039980471134186, 0.3971163332462311, 0.39595934748649597, 0.3891943097114563, 0.3897329568862915, 0.39027953147888184, 0.38548627495765686, 0.3864462077617645, 0.37623265385627747, 0.3771073818206787, 0.3719598650932312, 0.3727938234806061, 0.3733215034008026, 0.3684399724006653, 0.3682030439376831, 0.36457014083862305, 0.3650565445423126, 0.3669789731502533, 0.3614366948604584, 0.3635790944099426, 0.35859715938568115, 0.3605863153934479, 0.356626957654953, 0.35825875401496887, 0.3512600064277649, 0.3562423586845398, 0.3536950945854187, 0.3500109910964966, 0.3511616587638855, 0.34849807620048523, 0.3467276990413666], "val_accuracy": [0.5513333082199097, 0.6606666445732117, 0.6899999976158142, 0.7070000171661377, 0.7319999933242798, 0.7523333430290222, 0.7633333206176758, 0.7726666927337646, 0.7866666913032532, 0.7979999780654907, 0.7940000295639038, 0.8013333082199097, 0.8086666464805603, 0.8190000057220459, 0.8166666626930237, 0.8259999752044678, 0.8270000219345093, 0.8293333053588867, 0.8309999704360962, 0.8323333263397217, 0.8379999995231628, 0.8383333086967468, 0.8373333215713501, 0.8386666774749756, 0.8413333296775818, 0.8453333377838135, 0.8496666550636292, 0.8446666598320007, 0.8510000109672546, 0.8500000238418579, 0.8523333072662354, 0.8503333330154419, 0.8543333411216736, 0.8576666712760925, 0.8553333282470703, 0.8543333411216736, 0.8586666584014893, 0.8546666502952576, 0.859666645526886, 0.8619999885559082, 0.862666666507721, 0.8606666922569275, 0.8603333234786987, 0.8650000095367432, 0.8653333187103271, 0.8619999885559082, 0.8650000095367432, 0.8673333525657654, 0.8656666874885559, 0.8686666488647461, 0.8693333268165588, 0.8690000176429749, 0.8673333525657654, 0.8713333606719971, 0.8730000257492065, 0.8696666955947876, 0.8683333396911621, 0.8686666488647461, 0.8713333606719971, 0.8700000047683716]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8342857360839844, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.521793007850647, 0.8025760054588318, 0.6689761281013489, 0.5839550495147705, 0.5614258050918579, 0.5470232963562012, 0.5092255473136902, 0.5061637163162231, 0.4834105968475342, 0.5029635429382324, 0.48598161339759827, 0.4775051474571228, 0.49034687876701355, 0.5029236078262329, 0.5338472723960876, 0.5153936147689819, 0.49447017908096313, 0.5092577934265137], "accuracy": [0.48606523871421814, 0.722229540348053, 0.757099449634552, 0.7814027070999146, 0.7938185334205627, 0.8064984679222107, 0.8177255392074585, 0.8138951063156128, 0.8267071843147278, 0.8273676037788391, 0.8236692547798157, 0.8315942287445068, 0.8341038227081299, 0.8300092220306396, 0.8186501264572144, 0.8224804997444153, 0.8363492488861084, 0.8162726163864136], "val_loss": [0.8406122326850891, 0.6120936870574951, 0.5351792573928833, 0.48602327704429626, 0.49887943267822266, 0.4885384142398834, 0.47413602471351624, 0.4981459081172943, 0.614602267742157, 0.5017734169960022, 0.5183619856834412, 0.5521446466445923, 0.5549414753913879, 0.5155121088027954, 0.5262472033500671, 0.554441511631012, 0.6270912289619446, 0.5883820056915283], "val_accuracy": [0.7279999852180481, 0.7713333368301392, 0.8133333325386047, 0.8259999752044678, 0.8356666564941406, 0.8393333554267883, 0.8429999947547913, 0.8533333539962769, 0.8523333072662354, 0.8493333458900452, 0.8393333554267883, 0.8413333296775818, 0.8543333411216736, 0.8433333039283752, 0.8443333506584167, 0.8463333249092102, 0.8426666855812073, 0.8293333053588867]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 1, 5, 2, 0, 1, 7, 7, 4, 2, 5, 0, 2, 5, 4, 9], [0, 2, 1, 3, 1, 2, 2, 2, 4], [0, 34], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8145714402198792, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(beta, tf.math.add(tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(grad, alpha)))), tf.math.square(beta)), tf.math.pow(beta, beta)), grad))))), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292090892791748, 2.189764976501465, 1.7680689096450806, 1.3582286834716797, 1.0900019407272339, 0.9173901081085205, 0.8445423245429993, 0.8322921991348267, 0.7680003046989441, 0.7411690950393677, 0.7162328958511353, 0.6819077730178833, 0.6472095847129822, 0.6436135172843933, 0.6091859936714172, 0.6109444499015808, 0.592664361000061, 0.567780613899231, 0.565960705280304, 0.5434982776641846, 0.5309581160545349, 0.5295140147209167, 0.5281047224998474, 0.5089096426963806, 0.4940139353275299, 0.47460898756980896, 0.4783784747123718, 0.46765071153640747, 0.46871963143348694, 0.4436822831630707, 0.4446365535259247, 0.4216364622116089, 0.4199851155281067, 0.42489951848983765, 0.40448886156082153, 0.4023146629333496, 0.3949824571609497, 0.39127352833747864, 0.39069607853889465, 0.37748685479164124, 0.36723750829696655, 0.3504769504070282, 0.35921815037727356, 0.35324472188949585, 0.34101244807243347, 0.3462212085723877, 0.3425147831439972, 0.3503230810165405, 0.3356398344039917, 0.3228294849395752, 0.33082443475723267, 0.32851022481918335, 0.319869726896286, 0.3149281442165375, 0.32251477241516113], "accuracy": [0.12930920720100403, 0.32399946451187134, 0.4411570429801941, 0.5433892607688904, 0.6325452327728271, 0.6744155287742615, 0.6944921612739563, 0.7069079279899597, 0.7074362635612488, 0.7125874757766724, 0.7326641082763672, 0.7409853339195251, 0.7535332441329956, 0.7630431652069092, 0.7670056819915771, 0.7655527591705322, 0.77677983045578, 0.7857614755630493, 0.7832518815994263, 0.7969884872436523, 0.7932901978492737, 0.7969884872436523, 0.7967243194580078, 0.8063663840293884, 0.8107251524925232, 0.8191784620285034, 0.8162726163864136, 0.8216879963874817, 0.8210275769233704, 0.8293488025665283, 0.8339717388153076, 0.8392550349235535, 0.837537944316864, 0.837537944316864, 0.8474441766738892, 0.844010055065155, 0.8450667262077332, 0.8486329317092896, 0.8498216867446899, 0.852331280708313, 0.859199583530426, 0.8692378997802734, 0.8582749962806702, 0.8647470474243164, 0.8683133125305176, 0.8667283058166504, 0.8661999702453613, 0.8613129258155823, 0.8705587387084961, 0.8714832663536072, 0.8640866279602051, 0.8716153502464294, 0.872407853603363, 0.8732003569602966, 0.8749174475669861], "val_loss": [2.246199607849121, 2.0178842544555664, 1.155127763748169, 0.8865107297897339, 0.7703726291656494, 0.7164304852485657, 0.6715070009231567, 0.6465762257575989, 0.6469078063964844, 0.6076782941818237, 0.5828237533569336, 0.5660861134529114, 0.5515493750572205, 0.5479580163955688, 0.5443955659866333, 0.528109610080719, 0.5229519605636597, 0.5083323121070862, 0.5009503364562988, 0.4955383241176605, 0.4932740032672882, 0.4837522804737091, 0.4766833186149597, 0.47315073013305664, 0.4634597599506378, 0.44807010889053345, 0.4527062177658081, 0.45034635066986084, 0.4368028938770294, 0.43609631061553955, 0.43156591057777405, 0.42291364073753357, 0.43350958824157715, 0.4336956739425659, 0.42695361375808716, 0.424564927816391, 0.42221251130104065, 0.4202888607978821, 0.42157185077667236, 0.41326382756233215, 0.39720451831817627, 0.40986767411231995, 0.40258553624153137, 0.4043308198451996, 0.4188874065876007, 0.4136134386062622, 0.4108198583126068, 0.42389369010925293, 0.43021664023399353, 0.4203951954841614, 0.4336931109428406, 0.4237513542175293, 0.44281005859375, 0.4575437307357788, 0.44338175654411316], "val_accuracy": [0.3869999945163727, 0.4976666569709778, 0.640666663646698, 0.6903333067893982, 0.7266666889190674, 0.7350000143051147, 0.7423333525657654, 0.7516666650772095, 0.7599999904632568, 0.7670000195503235, 0.7749999761581421, 0.7796666622161865, 0.7923333048820496, 0.7846666574478149, 0.7946666479110718, 0.7916666865348816, 0.7910000085830688, 0.8066666722297668, 0.8113333582878113, 0.8066666722297668, 0.8166666626930237, 0.8106666803359985, 0.8180000185966492, 0.8256666660308838, 0.8309999704360962, 0.8410000205039978, 0.8379999995231628, 0.8403333425521851, 0.8446666598320007, 0.843999981880188, 0.8443333506584167, 0.8396666646003723, 0.8426666855812073, 0.8453333377838135, 0.8506666421890259, 0.8506666421890259, 0.8453333377838135, 0.8496666550636292, 0.8489999771118164, 0.8533333539962769, 0.8586666584014893, 0.8529999852180481, 0.856333315372467, 0.8606666922569275, 0.8600000143051147, 0.8553333282470703, 0.8579999804496765, 0.8583333492279053, 0.8610000014305115, 0.8643333315849304, 0.859333336353302, 0.8610000014305115, 0.8536666631698608, 0.8550000190734863, 0.862666666507721]}, "mapping_values": [1, 10, 5, 5, 3, 25, 16, 9, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 29}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1], [0, 2, 3, 0, 3, 5, 0, 5, 6, 3, 9], [0, 2, 0, 3, 0], [16, 16, 57, 91], [0, 1], [0], [1], [51], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 0, 6, 8, 1, 4, 1, 4, 2, 1], [0, 0, 0, 3, 0, 0, 4, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 16, 11, 5, 4, 2, 1, 1, 0, 17, 9, 8, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(tf.math.square(tf.math.divide_no_nan(grad, tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad)), grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876, 0.10466666519641876]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3, 1, 5, 5], [0, 1, 0, 2, 0], [39, 39, 82], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], [0, 2, 3, 0, 3, 1, 0, 7, 0, 3, 6, 2, 3, 0, 8, 9, 5, 4, 8, 2, 8, 1, 0, 5, 2, 8, 7, 9], [0, 2, 0, 3, 3, 4, 1, 4, 1, 1, 1, 0, 2], [16, 16, 56, 31, 48], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 2, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.math.square(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.negative(tf.math.add(tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(grad, tf.math.multiply(tf.math.negative(tf.math.sqrt(grad)), alpha)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), tf.math.pow(tf.math.sqrt(tf.math.add(tf.math.sqrt(alpha), tf.math.subtract(tf.math.negative(alpha), tf.math.square(alpha)))), tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}, "mapping_values": [1, 13, 8, 5, 3, 41, 28, 13, 5, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 29}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3], [0, 0, 1, 0, 2], [94, 39, 39], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 9, 2], [0, 1, 0, 5, 5, 0, 0], [0, 27, 16, 0], [0, 1], [0], [0], [99], [1], [0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0]], "fitness": -0.09342857450246811, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3108580112457275, 2.31020188331604, 2.3096365928649902, 2.3087663650512695, 2.309464931488037, 2.3098719120025635], "accuracy": [0.09628847241401672, 0.09285431355237961, 0.09325055778026581, 0.09126931428909302, 0.09100515395402908, 0.09734513610601425], "val_loss": [2.3081986904144287, 2.3081986904144287, 2.3081986904144287, 2.3081986904144287, 2.3081986904144287, 2.3081986904144287], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 3, 4, 2, 3, 6, 9, 3, 5, 1, 2, 2, 9], [0, 2, 0, 3, 5, 0, 2, 1, 5], [16, 16, 54, 75, 4, 87], [0, 0, 0], [0, 8, 9], [0], [0], [0, 1, 1], [8, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0, 2]], "fitness": -0.0917142853140831, "mapping_values": [1, 6, 3, 3, 2, 23, 14, 9, 5, 3, 3, 0, 1, 2, 1, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.pow(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), grad), tf.math.multiply(grad, tf.math.square(tf.math.subtract(tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3101840019226074, 2.3115577697753906, 2.3109865188598633, 2.309708833694458, 2.3092639446258545, 2.3100647926330566], "accuracy": [0.08915598690509796, 0.08928807079792023, 0.09140139818191528, 0.0956280529499054, 0.09272222965955734, 0.08968432247638702], "val_loss": [2.3091187477111816, 2.3091187477111816, 2.3091187477111816, 2.3091187477111816, 2.3091187477111816, 2.3091187477111816], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}]