[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.87028568983078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2206838130950928, 1.8603179454803467, 1.380111813545227, 1.0910658836364746, 0.9361883401870728, 0.8357797861099243, 0.7675373554229736, 0.7387441992759705, 0.6956050992012024, 0.6643403768539429, 0.6380757093429565, 0.6222434043884277, 0.5946942567825317, 0.5752519369125366, 0.5696383118629456, 0.5506364107131958, 0.5422848463058472, 0.5255445241928101, 0.5057341456413269, 0.5015520453453064, 0.495157927274704, 0.48085060715675354, 0.47617971897125244, 0.4646246135234833, 0.45962396264076233, 0.45195794105529785, 0.44474172592163086, 0.4368385076522827, 0.4256424605846405, 0.4218142330646515, 0.4146985709667206, 0.4086938798427582, 0.40143442153930664, 0.39309680461883545, 0.38718023896217346, 0.3817306160926819, 0.3813267648220062, 0.3667122721672058, 0.364319771528244, 0.3597981035709381, 0.34978678822517395, 0.34934794902801514, 0.34990015625953674, 0.34315481781959534], "accuracy": [0.27658170461654663, 0.48514068126678467, 0.5769383311271667, 0.614317774772644, 0.6667547225952148, 0.7012283802032471, 0.7244749665260315, 0.726192057132721, 0.7428345084190369, 0.7600052952766418, 0.767401933670044, 0.7709681391716003, 0.7819310426712036, 0.7903843522071838, 0.7932901978492737, 0.8059701323509216, 0.800818920135498, 0.8121780753135681, 0.8206313848495483, 0.8169330358505249, 0.824329674243927, 0.828292191028595, 0.8330471515655518, 0.8354246616363525, 0.8370096683502197, 0.8356888294219971, 0.8421608805656433, 0.8477083444595337, 0.8519350290298462, 0.8461233377456665, 0.8498216867446899, 0.8539162874221802, 0.8605204224586487, 0.8584070801734924, 0.8652753829956055, 0.8684453964233398, 0.8668603897094727, 0.8689737319946289, 0.8702945709228516, 0.870030403137207, 0.8782195448875427, 0.8767666220664978, 0.8775591254234314, 0.8772949576377869], "val_loss": [2.0351779460906982, 1.5136845111846924, 1.0408210754394531, 0.8341400027275085, 0.744907557964325, 0.6899725794792175, 0.6468532085418701, 0.6183452606201172, 0.5906699299812317, 0.5684471726417542, 0.5508028268814087, 0.5448076128959656, 0.5209450125694275, 0.5084529519081116, 0.49720099568367004, 0.48568490147590637, 0.4752843379974365, 0.4737437665462494, 0.4587036073207855, 0.4490087926387787, 0.4429059624671936, 0.4380362629890442, 0.4343833327293396, 0.4290790259838104, 0.4202438294887543, 0.42131754755973816, 0.4151211082935333, 0.40501073002815247, 0.40426650643348694, 0.39942827820777893, 0.39668628573417664, 0.3914019465446472, 0.39121460914611816, 0.384634405374527, 0.3800446391105652, 0.3805508613586426, 0.37760916352272034, 0.3765254020690918, 0.3707692325115204, 0.37005534768104553, 0.3692694902420044, 0.36775633692741394, 0.35937055945396423, 0.36716875433921814], "val_accuracy": [0.5379999876022339, 0.6603333353996277, 0.6830000281333923, 0.7086666822433472, 0.7316666841506958, 0.7476666569709778, 0.7590000033378601, 0.7743333578109741, 0.7850000262260437, 0.7926666736602783, 0.7993333339691162, 0.7963333129882812, 0.8109999895095825, 0.8196666836738586, 0.8240000009536743, 0.8309999704360962, 0.8320000171661377, 0.8336666822433472, 0.8373333215713501, 0.8450000286102295, 0.843999981880188, 0.8450000286102295, 0.8476666808128357, 0.8506666421890259, 0.8529999852180481, 0.8560000061988831, 0.8560000061988831, 0.8550000190734863, 0.859333336353302, 0.8600000143051147, 0.8610000014305115, 0.8610000014305115, 0.8629999756813049, 0.8646666407585144, 0.8673333525657654, 0.8650000095367432, 0.8666666746139526, 0.8653333187103271, 0.8713333606719971, 0.8693333268165588, 0.8679999709129333, 0.8673333525657654, 0.8683333396911621, 0.8706666827201843]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 4, 4, 6, 2], [0, 1, 0, 2, 3, 5], [0, 30], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8514285683631897, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(beta, tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2939560413360596, 2.1917240619659424, 1.7818278074264526, 1.3588616847991943, 1.0797183513641357, 0.9290192127227783, 0.8663913011550903, 0.8191182613372803, 0.760760486125946, 0.7262643575668335, 0.70353102684021, 0.6725757122039795, 0.6434794664382935, 0.6337836980819702, 0.5938198566436768, 0.5889397263526917, 0.5741491317749023, 0.5683467984199524, 0.5600121021270752, 0.5441656112670898, 0.5228577852249146, 0.5246332883834839, 0.5116544961929321, 0.49496182799339294, 0.49225518107414246, 0.4662385582923889, 0.46369245648384094, 0.4554610550403595, 0.44750335812568665, 0.4523749053478241, 0.42912229895591736, 0.43407949805259705, 0.43010827898979187, 0.4120161533355713, 0.40459519624710083, 0.39812570810317993, 0.3802878260612488], "accuracy": [0.12455421686172485, 0.32479196786880493, 0.42464667558670044, 0.544181764125824, 0.633469820022583, 0.6664905548095703, 0.6848500967025757, 0.6951525807380676, 0.707568347454071, 0.715889573097229, 0.7338528633117676, 0.7362303733825684, 0.7568352818489075, 0.7557786107063293, 0.7672698497772217, 0.774798572063446, 0.7816668748855591, 0.7839123010635376, 0.7814027070999146, 0.791969358921051, 0.7923656105995178, 0.8017435073852539, 0.800290584564209, 0.8105930685997009, 0.8123101592063904, 0.8195747137069702, 0.8206313848495483, 0.8222163319587708, 0.8267071843147278, 0.8358209133148193, 0.8399154543876648, 0.8368775844573975, 0.8396512866020203, 0.843481719493866, 0.8466516733169556, 0.8551049828529358, 0.8548408150672913], "val_loss": [2.2476966381073, 2.027132749557495, 1.1627686023712158, 0.9208157658576965, 0.7824687361717224, 0.7099397778511047, 0.6585459113121033, 0.6370236277580261, 0.6311474442481995, 0.5834378004074097, 0.5462846755981445, 0.5180877447128296, 0.5017167329788208, 0.49188631772994995, 0.48268046975135803, 0.47185102105140686, 0.46792951226234436, 0.4587832987308502, 0.4576911926269531, 0.45955175161361694, 0.45360082387924194, 0.43875956535339355, 0.4289732277393341, 0.4140424430370331, 0.417270302772522, 0.4064541161060333, 0.40627050399780273, 0.39377057552337646, 0.39611339569091797, 0.3875926434993744, 0.38543277978897095, 0.37717944383621216, 0.37282225489616394, 0.3746248781681061, 0.37465864419937134, 0.38166138529777527, 0.3777702748775482], "val_accuracy": [0.4283333420753479, 0.4320000112056732, 0.6386666893959045, 0.6963333487510681, 0.7076666951179504, 0.75, 0.7486666440963745, 0.7549999952316284, 0.7433333396911621, 0.777999997138977, 0.7796666622161865, 0.7986666560173035, 0.8016666769981384, 0.8076666593551636, 0.8113333582878113, 0.8143333196640015, 0.8240000009536743, 0.8163333535194397, 0.8109999895095825, 0.8169999718666077, 0.8213333487510681, 0.8286666870117188, 0.8323333263397217, 0.8416666388511658, 0.8393333554267883, 0.8463333249092102, 0.8429999947547913, 0.8546666502952576, 0.8500000238418579, 0.8566666841506958, 0.8579999804496765, 0.8633333444595337, 0.862666666507721, 0.8566666841506958, 0.8610000014305115, 0.8619999885559082, 0.8613333106040955]}, "mapping_values": [1, 10, 5, 5, 3, 12, 6, 6, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 1, 1], [0, 5, 0, 4], [0, 6], [0], [1], [0], [2], [0]], "fitness": -0.8265714049339294, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.588886022567749, 0.8348324298858643, 0.6812607049942017, 0.6188093423843384, 0.5942712426185608, 0.5432658791542053, 0.5283578634262085, 0.5085166692733765, 0.4931838810443878, 0.49820592999458313, 0.4761522114276886, 0.46890246868133545, 0.42279013991355896, 0.43686676025390625, 0.45486196875572205, 0.4662392735481262, 0.5167747735977173, 0.5129956007003784], "accuracy": [0.474970281124115, 0.7066437602043152, 0.7485140562057495, 0.76542067527771, 0.774270236492157, 0.7946110367774963, 0.8095363974571228, 0.8169330358505249, 0.8247259259223938, 0.824329674243927, 0.8235371708869934, 0.8236692547798157, 0.839519202709198, 0.8368775844573975, 0.8391229510307312, 0.8389908671379089, 0.8227446675300598, 0.8141592741012573], "val_loss": [0.8166635632514954, 0.656938910484314, 0.5860287547111511, 0.5691641569137573, 0.5445916652679443, 0.5360472798347473, 0.519743800163269, 0.5430333018302917, 0.5413813591003418, 0.5769891142845154, 0.5207207202911377, 0.5184234976768494, 0.5300455093383789, 0.5572181940078735, 0.5353271961212158, 0.5436441898345947, 0.5797039866447449, 0.6248012781143188], "val_accuracy": [0.7279999852180481, 0.7706666588783264, 0.7786666750907898, 0.7879999876022339, 0.800000011920929, 0.8180000185966492, 0.812666654586792, 0.8243333101272583, 0.8206666707992554, 0.8230000138282776, 0.8183333277702332, 0.8323333263397217, 0.8416666388511658, 0.8303333520889282, 0.8360000252723694, 0.8303333520889282, 0.8169999718666077, 0.8270000219345093]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 1, 4, 1, 4, 2, 1], [4, 0, 0, 3, 0, 0, 3, 1, 1, 0], [16, 99, 96, 99, 61, 51]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 3, 1, 3, 3, 0, 9, 8, 8, 4, 2], [0, 1, 0, 2, 3, 0, 1], [83, 99, 27, 14], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 5, 3, 4, 3, 0], [0, 2, 3, 0], [43, 39], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 6, 8, 1, 4, 9, 4, 2, 8], [4, 0, 1, 5, 7, 0, 3, 2, 3, 7], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 12, 7, 4, 10, 6, 4, 2, 2, 1, 1, 1, 16, 9, 7, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.sqrt(tf.math.pow(grad, tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), alpha))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), beta), tf.math.multiply(grad, tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, grad))), tf.constant(1.0, shape=shape, dtype=tf.float32))), grad), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 0, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 9], [0, 2, 0, 3], [16, 16], [0, 1], [0], [1], [99], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 3, 8, 1, 4, 6, 4, 2, 6], [0, 0, 0, 3, 4, 0, 1, 1, 2, 0], [16, 94, 49, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 7, 4, 3, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3034145832061768, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [6, 8, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [1, 1], [0], [3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 8, 6, 2], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0, 5, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 6, 3, 3, 1, 1, 0, 1, 0, 26, 14, 12, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.math.negative(grad), alpha)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), tf.math.add(tf.math.sqrt(tf.math.sqrt(alpha)), grad)), tf.math.divide_no_nan(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}]