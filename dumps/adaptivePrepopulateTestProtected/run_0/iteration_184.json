[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8657143115997314, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223175525665283, 1.866458773612976, 1.3976444005966187, 1.0943355560302734, 0.9428198933601379, 0.8467740416526794, 0.7870509624481201, 0.736948549747467, 0.6914054155349731, 0.6610926985740662, 0.6343559622764587, 0.6087154150009155, 0.5903645753860474, 0.5825016498565674, 0.5612332820892334, 0.5479016900062561, 0.5336958169937134, 0.515137791633606, 0.5034283995628357, 0.492786705493927, 0.492156445980072, 0.47537919878959656, 0.4652080237865448, 0.4608909487724304, 0.4525330066680908, 0.43996158242225647, 0.43348410725593567, 0.4338250160217285, 0.4189339876174927, 0.41648757457733154, 0.40688857436180115, 0.40278956294059753, 0.39494556188583374, 0.3890865445137024, 0.38467085361480713, 0.38183721899986267, 0.36737924814224243, 0.3686496317386627], "accuracy": [0.26865673065185547, 0.49306565523147583, 0.5686171054840088, 0.6242240071296692, 0.6672830581665039, 0.6970016956329346, 0.7123233675956726, 0.733588695526123, 0.7490423917770386, 0.7577598690986633, 0.7689869403839111, 0.7835160493850708, 0.7828556299209595, 0.7909126877784729, 0.8004226684570312, 0.8017435073852539, 0.8072909712791443, 0.8123101592063904, 0.8162726163864136, 0.8238013386726379, 0.8198388814926147, 0.830669641494751, 0.8378021121025085, 0.8378021121025085, 0.8411042094230652, 0.8388587832450867, 0.8454629778862, 0.8426892161369324, 0.8514066934585571, 0.8518029451370239, 0.8556333184242249, 0.8557654023170471, 0.8577466607093811, 0.8584070801734924, 0.8634262084960938, 0.8599920868873596, 0.868049144744873, 0.8681812286376953], "val_loss": [2.03708553314209, 1.5047060251235962, 1.0192104578018188, 0.8047398924827576, 0.7243556380271912, 0.6656216382980347, 0.61984783411026, 0.5819873213768005, 0.5592769384384155, 0.5356525182723999, 0.5154860615730286, 0.4990861415863037, 0.48599955439567566, 0.47176235914230347, 0.45843830704689026, 0.4521588683128357, 0.44293293356895447, 0.43009862303733826, 0.4246770739555359, 0.41579869389533997, 0.4092109501361847, 0.40488338470458984, 0.3959355056285858, 0.3919038474559784, 0.38594767451286316, 0.37885743379592896, 0.3761395812034607, 0.37219253182411194, 0.37848126888275146, 0.3639056384563446, 0.36324575543403625, 0.35956019163131714, 0.35431811213493347, 0.35602906346321106, 0.3509691655635834, 0.3501967787742615, 0.348807692527771, 0.34142789244651794], "val_accuracy": [0.5569999814033508, 0.6673333048820496, 0.6970000267028809, 0.7229999899864197, 0.7386666536331177, 0.7609999775886536, 0.7720000147819519, 0.7833333611488342, 0.7879999876022339, 0.7926666736602783, 0.8096666932106018, 0.8169999718666077, 0.8169999718666077, 0.8270000219345093, 0.8346666693687439, 0.8330000042915344, 0.8410000205039978, 0.8433333039283752, 0.8479999899864197, 0.8486666679382324, 0.8513333201408386, 0.8523333072662354, 0.8536666631698608, 0.8560000061988831, 0.859666645526886, 0.8629999756813049, 0.8610000014305115, 0.8656666874885559, 0.8603333234786987, 0.8686666488647461, 0.8646666407585144, 0.8696666955947876, 0.8733333349227905, 0.8686666488647461, 0.8703333139419556, 0.8679999709129333, 0.8696666955947876, 0.8726666569709778]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 5, 2, 7, 0, 0], [0, 3, 4], [0], [0, 1], [0], [1], [0]], "fitness": -0.8597142696380615, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(sigma), tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2941396236419678, 2.190295457839966, 1.7786438465118408, 1.3555150032043457, 1.0665611028671265, 0.9082504510879517, 0.8150442838668823, 0.824855387210846, 0.7587733268737793, 0.7307252287864685, 0.7082071900367737, 0.6817254424095154, 0.6466535329818726, 0.6250075697898865, 0.5936360359191895, 0.5913195013999939, 0.5900568962097168, 0.5679051280021667, 0.5623261332511902, 0.5474568605422974, 0.5348929166793823, 0.5232131481170654, 0.5164496302604675, 0.5034918785095215, 0.5096774697303772, 0.49594739079475403, 0.4764414429664612, 0.47006720304489136, 0.46324393153190613, 0.4464896321296692, 0.4401395618915558, 0.4378451108932495, 0.42539528012275696, 0.4143647253513336, 0.4116256833076477, 0.4063159227371216, 0.39508676528930664, 0.38563287258148193, 0.3716107904911041, 0.357048898935318, 0.3564856946468353, 0.3545319736003876, 0.3429812788963318, 0.3451426029205322, 0.3396010100841522, 0.3246711194515228, 0.3323802947998047, 0.3169468939304352], "accuracy": [0.1224408894777298, 0.33166027069091797, 0.4325716495513916, 0.5391625761985779, 0.6284506916999817, 0.6643772125244141, 0.6975300312042236, 0.7014925479888916, 0.7154933214187622, 0.7125874757766724, 0.7289658188819885, 0.7337207794189453, 0.7556465268135071, 0.7643640041351318, 0.7693831920623779, 0.7755910754203796, 0.7759873270988464, 0.7775723338127136, 0.7854973077774048, 0.7902522683143616, 0.7957997918128967, 0.7987055778503418, 0.8029322624206543, 0.8029322624206543, 0.8029322624206543, 0.8050455451011658, 0.8211596608161926, 0.8207634687423706, 0.8193105459213257, 0.819970965385437, 0.8314621448516846, 0.8286884427070618, 0.8315942287445068, 0.8391229510307312, 0.8389908671379089, 0.8411042094230652, 0.845859169960022, 0.8515387773513794, 0.8527275323867798, 0.854708731174469, 0.8574824929237366, 0.8626337051391602, 0.8618412613868713, 0.8646149635314941, 0.8634262084960938, 0.8716153502464294, 0.8761062026023865, 0.8742570281028748], "val_loss": [2.247486114501953, 2.029759645462036, 1.1685547828674316, 0.9252607226371765, 0.7789620757102966, 0.7184388041496277, 0.6998398303985596, 0.6996738314628601, 0.6499080657958984, 0.6307527422904968, 0.5949916839599609, 0.5855016112327576, 0.5691713094711304, 0.5388843417167664, 0.5426436066627502, 0.5435437560081482, 0.5278266668319702, 0.5157345533370972, 0.5092499256134033, 0.5175520181655884, 0.5006585717201233, 0.5014939904212952, 0.5062828660011292, 0.5028115510940552, 0.49210867285728455, 0.4747615456581116, 0.4674699008464813, 0.46210652589797974, 0.4581715166568756, 0.4567495882511139, 0.45408594608306885, 0.44935140013694763, 0.454219251871109, 0.45796048641204834, 0.4360099136829376, 0.4325716197490692, 0.4383177161216736, 0.4237394332885742, 0.4105425179004669, 0.4145359992980957, 0.4156652092933655, 0.4058411419391632, 0.4057666063308716, 0.4071331322193146, 0.42045858502388, 0.42500829696655273, 0.4128817617893219, 0.41219010949134827], "val_accuracy": [0.41066667437553406, 0.41999998688697815, 0.6303333044052124, 0.6796666383743286, 0.7120000123977661, 0.7160000205039978, 0.7403333187103271, 0.746666669845581, 0.7573333382606506, 0.7580000162124634, 0.7703333497047424, 0.7670000195503235, 0.7873333096504211, 0.7913333177566528, 0.7883333563804626, 0.7963333129882812, 0.8053333163261414, 0.8053333163261414, 0.8043333292007446, 0.8033333420753479, 0.8050000071525574, 0.8073333501815796, 0.8096666932106018, 0.8159999847412109, 0.815666675567627, 0.8226666450500488, 0.8303333520889282, 0.8299999833106995, 0.8353333473205566, 0.8373333215713501, 0.8433333039283752, 0.8426666855812073, 0.8429999947547913, 0.843999981880188, 0.8526666760444641, 0.8529999852180481, 0.8503333330154419, 0.8553333282470703, 0.8613333106040955, 0.8646666407585144, 0.8640000224113464, 0.8643333315849304, 0.8686666488647461, 0.8633333444595337, 0.859333336353302, 0.8619999885559082, 0.8686666488647461, 0.8659999966621399]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 9, 6, 3, 1, 2, 1, 1, 0], "tree_depth": 13}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 4, 7], [0, 4, 5, 4], [0], [1], [0], [2], [0]], "fitness": -0.8320000171661377, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5107656717300415, 0.7809169292449951, 0.6665155291557312, 0.6064571738243103, 0.564957857131958, 0.5394781827926636, 0.4918968081474304, 0.507560670375824, 0.5253008008003235, 0.48701706528663635, 0.49691706895828247, 0.5120100378990173, 0.5076459050178528, 0.5478243827819824, 0.5406630635261536, 0.5728822946548462, 0.5328307747840881], "accuracy": [0.4939902126789093, 0.7244749665260315, 0.7515519857406616, 0.7683265209197998, 0.793950617313385, 0.7975168228149414, 0.8175934553146362, 0.8127063512802124, 0.8100647330284119, 0.8150838613510132, 0.8236692547798157, 0.817989706993103, 0.8300092220306396, 0.8117818236351013, 0.8120459914207458, 0.817461371421814, 0.809140145778656], "val_loss": [0.8034440279006958, 0.6230469346046448, 0.5287048816680908, 0.5159182548522949, 0.49374809861183167, 0.4798654019832611, 0.4607146382331848, 0.4838811159133911, 0.468435674905777, 0.4875378906726837, 0.49662694334983826, 0.4655311703681946, 0.48200446367263794, 0.5142387747764587, 0.5609633922576904, 0.5305926203727722, 0.5330966114997864], "val_accuracy": [0.7276666760444641, 0.7553333044052124, 0.7876666784286499, 0.8059999942779541, 0.8119999766349792, 0.8199999928474426, 0.8316666483879089, 0.8230000138282776, 0.8266666531562805, 0.8259999752044678, 0.8333333134651184, 0.8446666598320007, 0.8393333554267883, 0.8263333439826965, 0.8243333101272583, 0.8240000009536743, 0.8236666917800903]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 8, 4, 4, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [0, 2, 3, 0, 6, 6, 8, 2, 8, 4, 2, 9, 2, 9, 7, 7, 4, 5, 0, 8, 6, 4, 4], [0, 1, 0, 2, 1, 2, 0, 1, 0, 0, 3, 2, 2], [39, 45, 19, 51, 76, 71, 76], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 8, 0, 5, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 2, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4, 3], [16, 99, 96, 99, 50, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 36, 23, 13, 7, 6, 4, 2, 1, 2, 1, 1, 1, 21, 10, 11, 5], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.sqrt(tf.math.pow(alpha, tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.pow(tf.math.square(grad), tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), alpha)))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.pow(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), grad), grad))))))))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), sigma))), alpha)), beta), tf.math.add(grad, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [9, 16], [0, 1], [0], [0], [99], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [6, 2, 3, 9, 8, 1, 4, 1, 4, 2, 8], [0, 4, 1, 1, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3033411502838135, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 3, 0, 3, 8, 0], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 4, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [68], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 9, 3, 6, 4, 1, 4, 1, 4, 2, 8], [0, 3, 0, 3, 4, 0, 3, 1, 4, 0], [16, 96, 96, 99, 12, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 1, 10, 6, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.math.multiply(tf.math.sqrt(alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3033812046051025, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5, 2, 8, 1, 0], [0, 2, 1, 3, 3, 1], [8, 60], [0, 1], [0], [3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 4, 3, 1, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.09200000017881393, "mapping_values": [1, 9, 5, 4, 2, 16, 10, 6, 1, 2, 1, 1, 0, 16, 8, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.add(alpha, grad)), tf.math.sqrt(tf.math.subtract(tf.math.negative(grad), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), grad), tf.math.subtract(sigma, alpha))", "other_info": {"loss": [2.309370517730713, 2.3095006942749023, 2.310049295425415, 2.310458183288574, 2.3099992275238037, 2.309654712677002], "accuracy": [0.09457138925790787, 0.09153348207473755, 0.09338264167308807, 0.09311848133802414, 0.09140139818191528, 0.0936468094587326], "val_loss": [2.3099586963653564, 2.3099586963653564, 2.3099586963653564, 2.3099586963653564, 2.3099586963653564, 2.3099586963653564], "val_accuracy": [0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129, 0.08733333647251129]}}]