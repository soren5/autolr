[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8637142777442932, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2223222255706787, 1.8700023889541626, 1.4010323286056519, 1.0999207496643066, 0.9427507519721985, 0.8461613059043884, 0.7825731635093689, 0.730741560459137, 0.6946266889572144, 0.6741638779640198, 0.6522360444068909, 0.6238125562667847, 0.6106301546096802, 0.5759838819503784, 0.5688420534133911, 0.5508900880813599, 0.5342627763748169, 0.5254738926887512, 0.5232605934143066, 0.5135027766227722, 0.5003814101219177, 0.493152916431427, 0.4792892336845398, 0.47430652379989624, 0.46476706862449646, 0.4570784568786621, 0.44448918104171753, 0.44341200590133667, 0.4377652406692505, 0.42443710565567017, 0.41253137588500977, 0.4145941138267517, 0.4086790978908539, 0.39641204476356506, 0.3903873860836029, 0.39421942830085754, 0.379959374666214, 0.37671852111816406, 0.3693073093891144, 0.36302655935287476, 0.36459794640541077, 0.3532175123691559, 0.34804123640060425, 0.35094788670539856, 0.3422376215457916, 0.33156508207321167, 0.3321129083633423, 0.3212558627128601, 0.32183775305747986, 0.3236747980117798, 0.3119097352027893, 0.3120885491371155, 0.3044126331806183, 0.3073292672634125, 0.2969788908958435, 0.3017641305923462, 0.29357773065567017, 0.2847455143928528, 0.2826854884624481, 0.2708444893360138, 0.26490917801856995, 0.26744186878204346, 0.27029097080230713, 0.2617190480232239, 0.2530212998390198, 0.2520279586315155, 0.2525651454925537], "accuracy": [0.2825254201889038, 0.4819706678390503, 0.5606921315193176, 0.6139215230941772, 0.6654338836669922, 0.6950204968452454, 0.720380425453186, 0.7298903465270996, 0.7523444890975952, 0.7585523724555969, 0.7651565074920654, 0.7720248103141785, 0.7794214487075806, 0.7946110367774963, 0.7897239327430725, 0.8020076751708984, 0.8109893202781677, 0.8121780753135681, 0.8136309385299683, 0.8117818236351013, 0.8201030492782593, 0.824329674243927, 0.8245938420295715, 0.8300092220306396, 0.8383304476737976, 0.8409721255302429, 0.8388587832450867, 0.8411042094230652, 0.842028796672821, 0.8449346423149109, 0.8516708612442017, 0.8506141901016235, 0.858671247959137, 0.8574824929237366, 0.8603883385658264, 0.8533879518508911, 0.8651432991027832, 0.8594637513160706, 0.8673887252807617, 0.8681812286376953, 0.8721436858177185, 0.869502067565918, 0.8746532797813416, 0.8704266548156738, 0.874389111995697, 0.8771628737449646, 0.8775591254234314, 0.886672854423523, 0.886672854423523, 0.8815215826034546, 0.8858803510665894, 0.8862766027450562, 0.8902390599250793, 0.8861445188522339, 0.893541157245636, 0.889050304889679, 0.89552241563797, 0.8967111110687256, 0.8981640338897705, 0.9034473896026611, 0.9066173434257507, 0.9055606722831726, 0.9027869701385498, 0.9074098467826843, 0.9079381823539734, 0.9101836085319519, 0.904768168926239], "val_loss": [2.0385797023773193, 1.5163174867630005, 1.0436049699783325, 0.834883451461792, 0.7458821535110474, 0.684751033782959, 0.6370335817337036, 0.6059186458587646, 0.5789890885353088, 0.562958836555481, 0.5411383509635925, 0.5226590633392334, 0.5104507803916931, 0.5010221600532532, 0.4857761561870575, 0.4737657904624939, 0.4655689299106598, 0.46370360255241394, 0.45280933380126953, 0.44497576355934143, 0.4405362904071808, 0.43393468856811523, 0.4287078380584717, 0.4230630695819855, 0.42437541484832764, 0.4109348952770233, 0.40699589252471924, 0.4032267928123474, 0.3985162079334259, 0.3915237486362457, 0.3884997069835663, 0.38747766613960266, 0.3819032907485962, 0.3815594017505646, 0.3825324773788452, 0.37577295303344727, 0.37250491976737976, 0.36890965700149536, 0.36934521794319153, 0.3620947301387787, 0.35844287276268005, 0.35960131883621216, 0.3592519164085388, 0.3620290160179138, 0.35318106412887573, 0.3600096106529236, 0.34727054834365845, 0.3490274250507355, 0.3502538204193115, 0.34237173199653625, 0.3445926904678345, 0.34018591046333313, 0.3393458127975464, 0.3411373198032379, 0.3401111364364624, 0.33638086915016174, 0.3354290723800659, 0.3339008688926697, 0.3333810269832611, 0.3316989243030548, 0.3302827477455139, 0.33225002884864807, 0.3317316174507141, 0.32952627539634705, 0.32941505312919617, 0.32895755767822266, 0.32718777656555176], "val_accuracy": [0.5256666541099548, 0.6493333578109741, 0.6846666932106018, 0.7103333473205566, 0.7239999771118164, 0.7536666393280029, 0.7649999856948853, 0.7676666378974915, 0.7806666493415833, 0.7836666703224182, 0.8009999990463257, 0.8076666593551636, 0.8149999976158142, 0.8143333196640015, 0.8233333230018616, 0.8270000219345093, 0.8316666483879089, 0.824999988079071, 0.8330000042915344, 0.8420000076293945, 0.8383333086967468, 0.8403333425521851, 0.843999981880188, 0.8453333377838135, 0.8453333377838135, 0.8489999771118164, 0.8513333201408386, 0.8566666841506958, 0.8543333411216736, 0.8576666712760925, 0.8569999933242798, 0.8600000143051147, 0.862666666507721, 0.8573333621025085, 0.8546666502952576, 0.8606666922569275, 0.8636666536331177, 0.8633333444595337, 0.862666666507721, 0.8683333396911621, 0.8673333525657654, 0.8673333525657654, 0.8666666746139526, 0.8633333444595337, 0.8706666827201843, 0.8693333268165588, 0.8723333477973938, 0.8740000128746033, 0.871666669845581, 0.8763333559036255, 0.874666690826416, 0.8703333139419556, 0.875, 0.8766666650772095, 0.8766666650772095, 0.8796666860580444, 0.878000020980835, 0.8759999871253967, 0.8786666393280029, 0.8809999823570251, 0.8806666731834412, 0.8823333382606506, 0.8773333430290222, 0.8776666522026062, 0.8799999952316284, 0.8796666860580444, 0.8816666603088379]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.843999981880188, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2930197715759277, 2.189286708831787, 1.7732948064804077, 1.3490625619888306, 1.0808359384536743, 0.9251000285148621, 0.865534782409668, 0.8125820755958557, 0.78424471616745, 0.7476760149002075, 0.7042691707611084, 0.6844674348831177, 0.6549142003059387, 0.6284847855567932, 0.6093448996543884, 0.6078423857688904, 0.5807958245277405, 0.5713722109794617, 0.5668421387672424, 0.5464984774589539, 0.5286628007888794, 0.5213989019393921, 0.5186634063720703, 0.4911239445209503, 0.4744724631309509, 0.47434377670288086, 0.4722980856895447, 0.46890121698379517, 0.4526841640472412, 0.4434208273887634, 0.4322003424167633, 0.4172777831554413, 0.42089247703552246, 0.41383829712867737, 0.4033219814300537, 0.3964730203151703, 0.39763060212135315, 0.37613022327423096, 0.3812071681022644, 0.3738911747932434, 0.36131367087364197], "accuracy": [0.1340641975402832, 0.3333773612976074, 0.4325716495513916, 0.538237988948822, 0.6267336010932922, 0.6588297486305237, 0.6770572066307068, 0.6954167485237122, 0.7047945857048035, 0.7176066637039185, 0.7329282760620117, 0.7314753532409668, 0.7567031979560852, 0.7623828053474426, 0.7677981853485107, 0.7745344042778015, 0.7819310426712036, 0.7819310426712036, 0.7848368883132935, 0.7906485199928284, 0.7969884872436523, 0.8006868362426758, 0.8035926818847656, 0.8141592741012573, 0.8182538747787476, 0.8191784620285034, 0.821820080280304, 0.8247259259223938, 0.8259146809577942, 0.8315942287445068, 0.8409721255302429, 0.8400475382804871, 0.8379341959953308, 0.839519202709198, 0.8465195894241333, 0.8486329317092896, 0.8459912538528442, 0.8536521196365356, 0.8552370667457581, 0.8536521196365356, 0.8610487580299377], "val_loss": [2.246612310409546, 2.018570899963379, 1.1531540155410767, 0.9098038673400879, 0.7814041972160339, 0.7390564680099487, 0.6756899356842041, 0.677040696144104, 0.6391661763191223, 0.616398274898529, 0.5881813168525696, 0.5546162724494934, 0.5382599234580994, 0.5235974788665771, 0.508531391620636, 0.4993874132633209, 0.4982609152793884, 0.4878505766391754, 0.5010071992874146, 0.47632211446762085, 0.4763612151145935, 0.46671903133392334, 0.45883822441101074, 0.44912606477737427, 0.4478526711463928, 0.45278921723365784, 0.4287772476673126, 0.4241267144680023, 0.4385138750076294, 0.4268400967121124, 0.4126981198787689, 0.4146662950515747, 0.4138732850551605, 0.414228230714798, 0.41183486580848694, 0.40978357195854187, 0.4138248562812805, 0.41946670413017273, 0.4234362840652466, 0.42426323890686035, 0.42494988441467285], "val_accuracy": [0.42933332920074463, 0.46299999952316284, 0.6380000114440918, 0.6850000023841858, 0.7123333215713501, 0.7283333539962769, 0.7369999885559082, 0.7590000033378601, 0.7596666812896729, 0.7643333077430725, 0.7680000066757202, 0.7876666784286499, 0.7803333401679993, 0.8016666769981384, 0.8013333082199097, 0.8050000071525574, 0.8043333292007446, 0.809333324432373, 0.8130000233650208, 0.8230000138282776, 0.8220000267028809, 0.8296666741371155, 0.8333333134651184, 0.8366666436195374, 0.8356666564941406, 0.8363333344459534, 0.843666672706604, 0.8433333039283752, 0.8420000076293945, 0.8410000205039978, 0.8489999771118164, 0.8476666808128357, 0.8500000238418579, 0.8513333201408386, 0.8553333282470703, 0.8600000143051147, 0.859000027179718, 0.8583333492279053, 0.8600000143051147, 0.859000027179718, 0.859000027179718]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 2, 4, 1, 0, 6, 9], [0, 7, 5, 7], [0, 75], [1], [0], [2], [0]], "fitness": -0.8382856845855713, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.subtract(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(grad, grad)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.586944818496704, 0.9778223633766174, 0.7302314639091492, 0.6843640208244324, 0.6197525262832642, 0.6048134565353394, 0.5599114298820496, 0.5556383728981018, 0.5185094475746155, 0.5151868462562561, 0.5175720453262329, 0.5029852986335754, 0.4849511682987213, 0.5063582062721252], "accuracy": [0.4682340621948242, 0.6847180128097534, 0.7343811988830566, 0.7604015469551086, 0.7709681391716003, 0.7823272943496704, 0.7891955971717834, 0.8035926818847656, 0.811649739742279, 0.8158763647079468, 0.8101968169212341, 0.8212917447090149, 0.8204993009567261, 0.8337075710296631], "val_loss": [1.080969214439392, 0.6701154708862305, 0.6028260588645935, 0.5669276714324951, 0.554400622844696, 0.5301508903503418, 0.5114136338233948, 0.5135267972946167, 0.4757353961467743, 0.5228018164634705, 0.5099533200263977, 0.5167968273162842, 0.5402369499206543, 0.5173324942588806], "val_accuracy": [0.6466666460037231, 0.7523333430290222, 0.7979999780654907, 0.8036666512489319, 0.8013333082199097, 0.809333324432373, 0.8259999752044678, 0.8273333311080933, 0.8360000252723694, 0.8320000171661377, 0.8240000009536743, 0.8206666707992554, 0.831333339214325, 0.828000009059906]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 11, 7, 4, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 1, 0, 2, 3], [30, 99, 27], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1], [0, 3, 1, 5, 6, 0, 6, 0, 0, 8, 7, 7, 2, 8, 8], [0, 0, 2, 1, 2, 2, 0, 4], [68, 16, 63], [0, 0, 0, 1, 1, 0, 1, 1], [0, 4, 7, 2], [3, 1, 2, 6], [0], [0, 0, 0, 0, 1, 1], [0, 7, 9, 7], [1, 5], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 2, 1, 1, 1, 8, 4, 4, 0, 6, 4, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), alpha), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.add(sigma, alpha), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))", "other_info": {"loss": [117.36553955078125, 2.5640103816986084, 3.7367281913757324, 5.350830078125, 6.836955547332764, 8.299983024597168], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3918161392211914, 3.0490689277648926, 4.681118011474609, 6.198238372802734, 7.650274753570557, 9.085087776184082], "val_accuracy": [0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3], [0, 0, 1, 0, 2], [0, 38, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1], [0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303723096847534, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 3, 1, 4, 9, 0, 0, 4], [0, 3, 1, 0, 2, 1, 1], [39, 39, 14], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 1, 5, 6, 0, 6, 0, 0, 5, 7, 7, 4, 8, 8], [0, 0, 1, 1, 2, 1, 0, 4], [0, 77, 46], [0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 5, 5, 7], [0, 5, 2], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 8, 0, 2, 6, 4, 0, 4, 9, 2], [1, 1, 0, 2, 1, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 8, 4, 3, 10, 6, 4, 2, 8, 5, 3, 1, 16, 10, 6, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.negative(tf.math.negative(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.negative(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.add(grad, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.negative(alpha), tf.math.pow(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32)), beta))), tf.math.add(alpha, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [2, 1, 3, 4, 3, 4, 4, 3], [0, 1, 0, 2, 2, 2, 2, 2, 1], [39, 39], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1], [2, 2, 3, 0, 3, 5, 4, 5, 2, 5, 2, 7, 1, 3, 6, 3, 7, 9, 6, 2, 5], [0, 2, 0, 3, 0, 1, 2, 1, 1, 4, 1, 3, 3, 5, 0, 3], [16, 50, 90, 29, 71], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 5, 0, 5, 5, 0], [1, 0, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 8, 9, 2, 33, 19, 14, 4, 2, 1, 1, 1, 6, 4, 2, 1], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad)), tf.math.pow(tf.math.pow(grad, tf.math.multiply(grad, grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.negative(tf.math.multiply(tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.square(tf.math.add(tf.math.square(tf.math.add(tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, beta)), tf.math.multiply(tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), alpha), grad)), alpha))), tf.math.divide_no_nan(grad, grad))))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.square(alpha), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]