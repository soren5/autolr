[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8740000128746033, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2250373363494873, 1.8724535703659058, 1.4050054550170898, 1.1017189025878906, 0.9446187615394592, 0.8350489735603333, 0.7743775844573975, 0.7302069067955017, 0.6889051795005798, 0.6639502644538879, 0.6354672908782959, 0.613053560256958, 0.5933428406715393, 0.5780360102653503, 0.5555294752120972, 0.5451780557632446, 0.5315383076667786, 0.5208982825279236, 0.5129455327987671, 0.49795085191726685, 0.4819415211677551, 0.47493550181388855, 0.46175438165664673, 0.45341718196868896, 0.45240604877471924, 0.44795283675193787, 0.4301031529903412, 0.4284544885158539, 0.4215427339076996, 0.41275981068611145, 0.4049699604511261, 0.39763346314430237, 0.387097030878067, 0.3908294439315796, 0.3853655755519867, 0.37645700573921204, 0.37603914737701416, 0.3675810694694519, 0.3629764914512634, 0.3544355630874634, 0.3541162610054016, 0.34779489040374756, 0.34481653571128845, 0.3348058760166168, 0.33827200531959534, 0.32714173197746277, 0.31943872570991516, 0.3145214915275574, 0.31878402829170227, 0.30581411719322205, 0.3065059185028076, 0.31388822197914124, 0.3017772436141968, 0.2915903627872467, 0.2960346043109894, 0.2849483788013458, 0.2792501151561737, 0.27962639927864075, 0.27600857615470886, 0.2679331302642822, 0.2621065080165863, 0.2659391164779663], "accuracy": [0.27539294958114624, 0.48646149039268494, 0.5550125241279602, 0.6153744459152222, 0.6630563735961914, 0.6979262828826904, 0.7190595865249634, 0.7351737022399902, 0.7471932172775269, 0.752212405204773, 0.770439863204956, 0.7759873270988464, 0.7833839654922485, 0.791969358921051, 0.8009510040283203, 0.8038568496704102, 0.8112534880638123, 0.8117818236351013, 0.8157442808151245, 0.8214238286018372, 0.8281601071357727, 0.8319904804229736, 0.8359529972076416, 0.842028796672821, 0.8404437899589539, 0.8396512866020203, 0.8459912538528442, 0.8500858545303345, 0.8479725122451782, 0.8519350290298462, 0.8564258217811584, 0.8584070801734924, 0.8650112152099609, 0.8638224601745605, 0.8632941246032715, 0.8661999702453613, 0.8671245574951172, 0.8692378997802734, 0.8706908226013184, 0.8747853636741638, 0.8729361891746521, 0.8739928603172302, 0.8776912093162537, 0.8820499181747437, 0.8811253309249878, 0.8803328275680542, 0.8861445188522339, 0.8902390599250793, 0.8864086866378784, 0.8893144726753235, 0.8903711438179016, 0.8889182209968567, 0.8897107243537903, 0.8936732411384583, 0.8928807377815247, 0.8976356983184814, 0.8976356983184814, 0.897899866104126, 0.9009377956390381, 0.9008057117462158, 0.9068815112113953, 0.9001452922821045], "val_loss": [2.0393402576446533, 1.5108981132507324, 1.04119074344635, 0.8375522494316101, 0.7500026822090149, 0.6909021735191345, 0.6501427292823792, 0.6195367574691772, 0.5881683826446533, 0.5765181183815002, 0.5560248494148254, 0.5345938205718994, 0.5220025181770325, 0.5107996463775635, 0.4919772446155548, 0.4848445653915405, 0.4764118194580078, 0.46654751896858215, 0.4582430124282837, 0.4512968361377716, 0.4460892677307129, 0.4351535141468048, 0.4315175712108612, 0.4256611466407776, 0.4286785423755646, 0.4166332185268402, 0.4182930588722229, 0.4130191206932068, 0.4073934257030487, 0.40369075536727905, 0.39999493956565857, 0.39693957567214966, 0.40299665927886963, 0.38999679684638977, 0.38994279503822327, 0.3833649456501007, 0.3873929977416992, 0.37968680262565613, 0.3778267800807953, 0.37895405292510986, 0.37475255131721497, 0.37167203426361084, 0.3674418032169342, 0.3679729402065277, 0.3707776963710785, 0.3703424334526062, 0.3674992620944977, 0.3608136475086212, 0.3617475628852844, 0.3593924939632416, 0.3588413894176483, 0.3503378927707672, 0.3562344014644623, 0.3539271354675293, 0.34995245933532715, 0.3500179052352905, 0.3462674915790558, 0.3449159860610962, 0.3413594961166382, 0.3481627106666565, 0.34068822860717773, 0.34485411643981934], "val_accuracy": [0.5523333549499512, 0.6656666398048401, 0.6919999718666077, 0.7070000171661377, 0.7323333621025085, 0.753000020980835, 0.7616666555404663, 0.7720000147819519, 0.7823333144187927, 0.7836666703224182, 0.79666668176651, 0.8073333501815796, 0.812666654586792, 0.8180000185966492, 0.8289999961853027, 0.8256666660308838, 0.8339999914169312, 0.8353333473205566, 0.8396666646003723, 0.8410000205039978, 0.8453333377838135, 0.8456666469573975, 0.8450000286102295, 0.8503333330154419, 0.8433333039283752, 0.8546666502952576, 0.8513333201408386, 0.8553333282470703, 0.8536666631698608, 0.8533333539962769, 0.8539999723434448, 0.859333336353302, 0.856333315372467, 0.8636666536331177, 0.8613333106040955, 0.8619999885559082, 0.8616666793823242, 0.8633333444595337, 0.8666666746139526, 0.8629999756813049, 0.8619999885559082, 0.8666666746139526, 0.8683333396911621, 0.8673333525657654, 0.8669999837875366, 0.8666666746139526, 0.8679999709129333, 0.8703333139419556, 0.8703333139419556, 0.8723333477973938, 0.8713333606719971, 0.8736666440963745, 0.8686666488647461, 0.8723333477973938, 0.8706666827201843, 0.875, 0.8799999952316284, 0.8756666779518127, 0.8776666522026062, 0.8759999871253967, 0.8759999871253967, 0.875333309173584]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 5], [0], [0], [1], [0], [2], [0]], "fitness": -0.8291428685188293, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5244635343551636, 0.8159793615341187, 0.649950385093689, 0.5791609883308411, 0.5492752194404602, 0.5160679221153259, 0.483249694108963, 0.4554672837257385, 0.45232370495796204, 0.4352482557296753, 0.45414406061172485, 0.4525645971298218, 0.4869808852672577, 0.47409844398498535, 0.5053415298461914, 0.5013507008552551, 0.5549980998039246, 0.519601583480835, 0.5679934024810791], "accuracy": [0.5112931132316589, 0.7193237543106079, 0.767401933670044, 0.7897239327430725, 0.802271842956543, 0.8148196935653687, 0.8240655064582825, 0.8358209133148193, 0.8380662798881531, 0.8403117060661316, 0.8383304476737976, 0.8338396549224854, 0.8341038227081299, 0.8383304476737976, 0.8403117060661316, 0.8281601071357727, 0.8149517774581909, 0.8304054737091064, 0.8190463781356812], "val_loss": [0.8326502442359924, 0.6083774566650391, 0.5536374449729919, 0.5125421285629272, 0.4848525822162628, 0.48911434412002563, 0.4749611020088196, 0.474537193775177, 0.47513240575790405, 0.4728969633579254, 0.53550785779953, 0.5502434968948364, 0.5731531977653503, 0.6137381792068481, 0.5875887274742126, 0.6345520615577698, 0.6113993525505066, 0.6015070676803589, 0.5665080547332764], "val_accuracy": [0.7089999914169312, 0.7713333368301392, 0.7913333177566528, 0.8103333115577698, 0.8243333101272583, 0.8270000219345093, 0.8363333344459534, 0.8326666951179504, 0.8363333344459534, 0.8410000205039978, 0.831333339214325, 0.8270000219345093, 0.8356666564941406, 0.8413333296775818, 0.8263333439826965, 0.8140000104904175, 0.8299999833106995, 0.8353333473205566, 0.8240000009536743]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 0], [0, 6, 5, 7, 8, 9], [0, 1], [0, 96], [0, 0, 1], [0, 5], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8188571333885193, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2932307720184326, 2.187962770462036, 1.760251760482788, 1.350496768951416, 1.0692451000213623, 0.9319000840187073, 0.866792619228363, 0.8232888579368591, 0.7750997543334961, 0.7713843584060669, 0.7059044241905212, 0.6942302584648132, 0.6486189365386963, 0.6392841339111328, 0.6150318384170532, 0.5946407914161682, 0.5983983874320984, 0.5634377598762512, 0.5594140887260437, 0.5587666034698486, 0.5360724329948425, 0.5416094660758972, 0.5320554971694946, 0.515519917011261, 0.4962735176086426, 0.49458011984825134, 0.48183420300483704, 0.4842347502708435, 0.4727939963340759, 0.45709729194641113, 0.4591307044029236, 0.4591714143753052, 0.42264100909233093, 0.42612892389297485, 0.42872753739356995, 0.407320111989975, 0.41489723324775696, 0.404898077249527, 0.40911865234375, 0.39040035009384155, 0.39061832427978516, 0.3827863931655884, 0.37746453285217285, 0.381470263004303, 0.3559376895427704, 0.3591896593570709, 0.360482394695282, 0.3519088327884674, 0.34965944290161133, 0.3502613604068756, 0.33748412132263184, 0.33613187074661255, 0.3398679792881012, 0.32547417283058167, 0.31470775604248047, 0.3137854039669037, 0.31179147958755493], "accuracy": [0.12561088800430298, 0.3273015320301056, 0.44670453667640686, 0.5521067380905151, 0.640338122844696, 0.6629242897033691, 0.687887966632843, 0.7037379741668701, 0.7077004313468933, 0.7057191729545593, 0.7387399077415466, 0.7434949278831482, 0.7541936039924622, 0.7573636174201965, 0.7621186375617981, 0.7667415142059326, 0.7755910754203796, 0.7836481332778931, 0.7902522683143616, 0.7909126877784729, 0.7964601516723633, 0.7942147850990295, 0.7936864495277405, 0.802271842956543, 0.8132346868515015, 0.8109893202781677, 0.8206313848495483, 0.8083476424217224, 0.8215559124946594, 0.8269713521003723, 0.8277638554573059, 0.8267071843147278, 0.8399154543876648, 0.8345000743865967, 0.8400475382804871, 0.8473120927810669, 0.8507462739944458, 0.8502179384231567, 0.8422929644584656, 0.8562937378883362, 0.8556333184242249, 0.8593316674232483, 0.8527275323867798, 0.8536521196365356, 0.8588033318519592, 0.8601241707801819, 0.867520809173584, 0.8754457831382751, 0.8691058158874512, 0.8673887252807617, 0.8761062026023865, 0.8776912093162537, 0.8721436858177185, 0.8780874609947205, 0.8798044919967651, 0.8829745054244995, 0.8802007436752319], "val_loss": [2.245033025741577, 2.0177040100097656, 1.1263219118118286, 0.8611363768577576, 0.7719213962554932, 0.7170107960700989, 0.6683696508407593, 0.6585572957992554, 0.6535054445266724, 0.6277827024459839, 0.6067395210266113, 0.5789414644241333, 0.5605676174163818, 0.5504627823829651, 0.5449258089065552, 0.5302206873893738, 0.513325572013855, 0.5051172375679016, 0.5135501027107239, 0.4928441643714905, 0.5039207339286804, 0.48246070742607117, 0.4844270348548889, 0.4637877345085144, 0.47301286458969116, 0.4642809331417084, 0.4552680253982544, 0.45035892724990845, 0.448508620262146, 0.4428007900714874, 0.44796907901763916, 0.42989280819892883, 0.4348422884941101, 0.4215009808540344, 0.41306787729263306, 0.4257190227508545, 0.4208541214466095, 0.41085588932037354, 0.4191041588783264, 0.42843374609947205, 0.42078930139541626, 0.4101566970348358, 0.4129931628704071, 0.4144497513771057, 0.3981671929359436, 0.4160570204257965, 0.44342896342277527, 0.41963931918144226, 0.4125918745994568, 0.4206901490688324, 0.4439587891101837, 0.4124528765678406, 0.4073732793331146, 0.4166298806667328, 0.44946229457855225, 0.45211201906204224, 0.4424484074115753], "val_accuracy": [0.4026666581630707, 0.4749999940395355, 0.6466666460037231, 0.6853333115577698, 0.7226666808128357, 0.7356666922569275, 0.7383333444595337, 0.7450000047683716, 0.7423333525657654, 0.7593333125114441, 0.7676666378974915, 0.7760000228881836, 0.7866666913032532, 0.7829999923706055, 0.7993333339691162, 0.7933333516120911, 0.7993333339691162, 0.8053333163261414, 0.809333324432373, 0.8146666884422302, 0.8040000200271606, 0.8176666498184204, 0.8149999976158142, 0.8323333263397217, 0.8216666579246521, 0.8263333439826965, 0.8346666693687439, 0.8353333473205566, 0.8403333425521851, 0.8399999737739563, 0.8373333215713501, 0.843999981880188, 0.846666693687439, 0.8546666502952576, 0.8503333330154419, 0.856333315372467, 0.8573333621025085, 0.8506666421890259, 0.859333336353302, 0.8543333411216736, 0.8583333492279053, 0.8569999933242798, 0.8619999885559082, 0.8613333106040955, 0.8583333492279053, 0.862333357334137, 0.8610000014305115, 0.8613333106040955, 0.8550000190734863, 0.8629999756813049, 0.8633333444595337, 0.8653333187103271, 0.8560000061988831, 0.8586666584014893, 0.8650000095367432, 0.8653333187103271, 0.8616666793823242]}, "mapping_values": [1, 10, 5, 5, 3, 8, 6, 2, 2, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 1, 2, 3], [0, 1, 0, 2], [39, 39], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [9, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 3, 8, 8, 5, 4, 1, 1, 2, 8], [4, 0, 0, 3, 0, 3, 3, 1, 2, 0], [16, 99, 2, 99, 61, 1]], "fitness": -0.21314285695552826, "mapping_values": [1, 8, 4, 4, 2, 1, 0, 1, 0, 2, 1, 1, 0, 16, 9, 7, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(grad, tf.math.sqrt(tf.math.sqrt(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, sigma)))", "other_info": {"loss": [2.300025463104248, 2.3007965087890625, 2.3024768829345703, 2.3025918006896973, 2.302600145339966, 2.3025994300842285], "accuracy": [0.12349755316972733, 0.1340641975402832, 0.09470347315073013, 0.0952318087220192, 0.09985470771789551, 0.0940430611371994], "val_loss": [2.3001325130462646, 2.3024649620056152, 2.302584409713745, 2.3025856018066406, 2.302586555480957, 2.3025870323181152], "val_accuracy": [0.21899999678134918, 0.09933333098888397, 0.10066666454076767, 0.10166666656732559, 0.10066666454076767, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1], [0, 2, 3, 0, 3, 4, 0, 8, 8, 5], [0, 1, 0, 2, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 9, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [6, 3, 3, 6, 3, 1, 4, 1, 4, 2, 8, 3, 2, 5], [0, 0, 0, 3, 3, 0, 3, 1, 2, 0, 3, 6, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 10, 5, 2, 6, 4, 2, 1, 2, 1, 1, 1, 27, 14, 13, 5], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.square(grad)))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(sigma, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(sigma, tf.math.add(grad, tf.math.square(sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 4], [1, 2, 0, 2, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 3, 0, 3, 5], [0, 2, 2, 2], [0], [0, 1], [0], [0], [94], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 2, 9], [1, 0, 0, 3, 0, 0, 4, 4, 2, 0], [0, 89, 26, 95, 35, 81]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 1, 10, 6, 4, 1, 2, 1, 1, 1, 22, 12, 10, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(alpha, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(beta, tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), grad)))))), beta), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [9, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 1, 0, 3, 5], [1, 2, 0, 3], [97, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 4, 2, 4], [0, 99, 96, 99, 67, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 10, 6, 4, 1, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(alpha), beta), tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.subtract(sigma, grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]