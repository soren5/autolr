[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8725714087486267, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222219228744507, 1.8684407472610474, 1.3943599462509155, 1.0909380912780762, 0.9265064001083374, 0.8379276394844055, 0.7679641842842102, 0.726475715637207, 0.6833878755569458, 0.6562824845314026, 0.6261808276176453, 0.6155441999435425, 0.5874103903770447, 0.5669353008270264, 0.5641866326332092, 0.5504627823829651, 0.5260981917381287, 0.5146647095680237, 0.5060379505157471, 0.4994499385356903, 0.48501044511795044, 0.4810183346271515, 0.47472861409187317, 0.45698922872543335, 0.45963573455810547, 0.4516115188598633, 0.4427996277809143, 0.4297177195549011, 0.417522668838501, 0.41334059834480286, 0.4138546884059906, 0.39782074093818665, 0.3936651349067688, 0.3914618492126465, 0.38642415404319763, 0.37714365124702454, 0.38127267360687256, 0.3664630055427551, 0.3685053288936615, 0.3480347990989685, 0.35394465923309326, 0.3477880656719208, 0.3414435386657715, 0.33977189660072327, 0.32817357778549194], "accuracy": [0.28318583965301514, 0.48831066489219666, 0.5663716793060303, 0.6209219098091125, 0.6720380187034607, 0.7024171352386475, 0.7206445932388306, 0.7420420050621033, 0.7506273984909058, 0.7623828053474426, 0.7749306559562683, 0.7759873270988464, 0.7872143983840942, 0.7955356240272522, 0.7936864495277405, 0.8017435073852539, 0.8090080618858337, 0.8124422430992126, 0.8164047002792358, 0.8208954930305481, 0.8247259259223938, 0.8265751004219055, 0.8300092220306396, 0.8380662798881531, 0.8310658931732178, 0.8355567455291748, 0.8405758738517761, 0.8461233377456665, 0.852859616279602, 0.8515387773513794, 0.8524633646011353, 0.8590674996376038, 0.8582749962806702, 0.8558974862098694, 0.8594637513160706, 0.86553955078125, 0.8638224601745605, 0.869502067565918, 0.8687095642089844, 0.8733324408531189, 0.8735966086387634, 0.8713511824607849, 0.8765024542808533, 0.8734645247459412, 0.8808611631393433], "val_loss": [2.040698528289795, 1.5141841173171997, 1.038947582244873, 0.8315446972846985, 0.7380146384239197, 0.6832226514816284, 0.6387103796005249, 0.6071189045906067, 0.5840251445770264, 0.5591353178024292, 0.5412004590034485, 0.5310669541358948, 0.5141347646713257, 0.5070039629936218, 0.49288249015808105, 0.48869311809539795, 0.48003581166267395, 0.4718056619167328, 0.4594457745552063, 0.4539077877998352, 0.4527542293071747, 0.4468453824520111, 0.43871480226516724, 0.42845141887664795, 0.43018755316734314, 0.4222787320613861, 0.41462570428848267, 0.4158898890018463, 0.407359778881073, 0.407764732837677, 0.3986426293849945, 0.3951365649700165, 0.39407864212989807, 0.38820207118988037, 0.38681331276893616, 0.3919152021408081, 0.38212576508522034, 0.37794962525367737, 0.37397655844688416, 0.3705521523952484, 0.37157827615737915, 0.3700220584869385, 0.36857813596725464, 0.36880695819854736, 0.36104321479797363], "val_accuracy": [0.5386666655540466, 0.6573333144187927, 0.6913333535194397, 0.7123333215713501, 0.7300000190734863, 0.7506666779518127, 0.7663333415985107, 0.7696666717529297, 0.781000018119812, 0.7926666736602783, 0.8033333420753479, 0.8033333420753479, 0.8116666674613953, 0.8183333277702332, 0.8220000267028809, 0.8206666707992554, 0.8273333311080933, 0.8296666741371155, 0.8353333473205566, 0.8360000252723694, 0.8356666564941406, 0.840666651725769, 0.8429999947547913, 0.846666693687439, 0.847000002861023, 0.8460000157356262, 0.8526666760444641, 0.8493333458900452, 0.8539999723434448, 0.8539999723434448, 0.862333357334137, 0.8579999804496765, 0.859000027179718, 0.8673333525657654, 0.8666666746139526, 0.8613333106040955, 0.8673333525657654, 0.8693333268165588, 0.8690000176429749, 0.8740000128746033, 0.8683333396911621, 0.8709999918937683, 0.8679999709129333, 0.8676666617393494, 0.8723333477973938]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 8], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8537142872810364, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293273687362671, 2.1894915103912354, 1.7752861976623535, 1.3409383296966553, 1.0874005556106567, 0.9289147853851318, 0.8533814549446106, 0.8117967844009399, 0.7629165649414062, 0.7474918365478516, 0.7033505439758301, 0.6745389103889465, 0.6468892097473145, 0.6308147311210632, 0.6108304262161255, 0.5938780903816223, 0.5706132054328918, 0.5713136792182922, 0.5577216744422913, 0.5445936322212219, 0.5245872139930725, 0.5171034932136536, 0.5151281952857971, 0.4904803931713104, 0.4813865125179291, 0.47857680916786194, 0.4850122630596161, 0.4578050971031189, 0.46251794695854187, 0.44229450821876526, 0.43828850984573364, 0.43768057227134705, 0.4160148501396179, 0.4207405745983124, 0.4190758764743805, 0.40562474727630615, 0.4036598801612854, 0.39865022897720337, 0.38282978534698486, 0.3896992802619934, 0.3791411817073822, 0.363723486661911, 0.3608092665672302, 0.35940927267074585], "accuracy": [0.1220446452498436, 0.32201823592185974, 0.42583543062210083, 0.5469554662704468, 0.6239598393440247, 0.6516972780227661, 0.6847180128097534, 0.7018887996673584, 0.7057191729545593, 0.7107383608818054, 0.7239466309547424, 0.7395324110984802, 0.7524765729904175, 0.7613261342048645, 0.7601373791694641, 0.770439863204956, 0.7774402499198914, 0.7854973077774048, 0.7864218950271606, 0.7897239327430725, 0.796328067779541, 0.798309326171875, 0.7975168228149414, 0.8181217908859253, 0.8175934553146362, 0.8193105459213257, 0.8148196935653687, 0.8224804997444153, 0.8219521641731262, 0.8321225643157959, 0.8293488025665283, 0.8315942287445068, 0.8360850811004639, 0.837537944316864, 0.8412362933158875, 0.8502179384231567, 0.8450667262077332, 0.8446704745292664, 0.8511425256729126, 0.8519350290298462, 0.8518029451370239, 0.8552370667457581, 0.8553691506385803, 0.8588033318519592], "val_loss": [2.2471375465393066, 2.024538516998291, 1.1530017852783203, 0.8844936490058899, 0.7735501527786255, 0.7251161336898804, 0.6894341111183167, 0.6481797695159912, 0.6155173182487488, 0.6091588139533997, 0.5670250654220581, 0.5461286902427673, 0.5299859642982483, 0.5220450758934021, 0.5164315700531006, 0.512809693813324, 0.5149341225624084, 0.5032349228858948, 0.5094090700149536, 0.4979742169380188, 0.4922201633453369, 0.4808458983898163, 0.4740099608898163, 0.4621697664260864, 0.46335604786872864, 0.4676531255245209, 0.47063541412353516, 0.4732661247253418, 0.4533790349960327, 0.455254465341568, 0.4617444574832916, 0.4567071795463562, 0.4559447467327118, 0.4505172669887543, 0.44584131240844727, 0.43721479177474976, 0.42867687344551086, 0.4285810589790344, 0.45057976245880127, 0.4409744441509247, 0.42639264464378357, 0.42892786860466003, 0.4261848032474518, 0.4363630414009094], "val_accuracy": [0.3813333213329315, 0.41999998688697815, 0.6439999938011169, 0.6726666688919067, 0.699999988079071, 0.7239999771118164, 0.7200000286102295, 0.7456666827201843, 0.7536666393280029, 0.7736666798591614, 0.7730000019073486, 0.7916666865348816, 0.7886666655540466, 0.7923333048820496, 0.8019999861717224, 0.8016666769981384, 0.8029999732971191, 0.8076666593551636, 0.8023333549499512, 0.8069999814033508, 0.8186666369438171, 0.8226666450500488, 0.8309999704360962, 0.8289999961853027, 0.8320000171661377, 0.8230000138282776, 0.8330000042915344, 0.8299999833106995, 0.8413333296775818, 0.8363333344459534, 0.8299999833106995, 0.8383333086967468, 0.8483333587646484, 0.8410000205039978, 0.8486666679382324, 0.8450000286102295, 0.840666651725769, 0.8523333072662354, 0.859000027179718, 0.8529999852180481, 0.8456666469573975, 0.8476666808128357, 0.856333315372467, 0.8510000109672546]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1], [0, 2, 9], [0], [0, 39], [1], [0], [2], [0]], "fitness": -0.8377143144607544, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5487457513809204, 0.8153225779533386, 0.6859302520751953, 0.6346604228019714, 0.5816750526428223, 0.5619803071022034, 0.5391230583190918, 0.5359984040260315, 0.5083072185516357, 0.47733446955680847, 0.47479915618896484, 0.47532930970191956, 0.47705790400505066, 0.45634904503822327, 0.488612562417984, 0.467928409576416, 0.4512389302253723, 0.5045727491378784], "accuracy": [0.4547615945339203, 0.7186633348464966, 0.7441553473472595, 0.7633073329925537, 0.7841764688491821, 0.7938185334205627, 0.7959318161010742, 0.8038568496704102, 0.8141592741012573, 0.8207634687423706, 0.8261788487434387, 0.8372738361358643, 0.8247259259223938, 0.8416325449943542, 0.8241975903511047, 0.8368775844573975, 0.8459912538528442, 0.8269713521003723], "val_loss": [0.8098127245903015, 0.616314709186554, 0.5793129205703735, 0.5689376592636108, 0.528957188129425, 0.5347322821617126, 0.5320250391960144, 0.5471801161766052, 0.5164875388145447, 0.5225727558135986, 0.5389828085899353, 0.5926463007926941, 0.5562186241149902, 0.5976805686950684, 0.5697347521781921, 0.6029518842697144, 0.6579734683036804, 0.6321176886558533], "val_accuracy": [0.7200000286102295, 0.7716666460037231, 0.7993333339691162, 0.7743333578109741, 0.8223333358764648, 0.815666675567627, 0.8059999942779541, 0.8320000171661377, 0.8276666402816772, 0.8243333101272583, 0.8270000219345093, 0.8299999833106995, 0.8376666903495789, 0.8136666417121887, 0.824999988079071, 0.8366666436195374, 0.8343333601951599, 0.8216666579246521]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 3, 1, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 9, 3, 5, 8, 1, 1, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 7, 5, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0], [3, 2, 3, 5, 3], [0, 1, 0, 2], [76, 68], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 0, 0, 3], [16, 16, 91], [1, 1], [0], [0], [73], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 6, 3, 3, 3, 1, 0, 1, 1, 12, 6, 6, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [226.75099182128906, 20615.080078125, 311863.71875, 2018685.0, 8531912.0, 27360206.0], "accuracy": [0.09377889335155487, 0.10276053100824356, 0.09826971590518951, 0.09826971590518951, 0.09972262382507324, 0.09945846349000931], "val_loss": [1807.836669921875, 70212.25, 674236.1875, 3471159.25, 12554625.0, 36166944.0], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 9, 3], [0, 0, 1, 0, 2], [39, 39, 53], [0, 1], [0], [0], [16, 16], [0, 1], [0], [0], [0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 8, 3, 7, 9, 0, 7, 1, 2, 4], [5, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 16, 10, 6, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.add(sigma, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 2, 3, 0, 3], [0, 1, 0, 2, 3], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [8, 2, 3, 0, 3, 5], [2, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 1], [0, 0, 2, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 94, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 6, 3, 3, 1, 2, 1, 1, 0, 16, 8, 8, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(beta, beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(beta), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}]