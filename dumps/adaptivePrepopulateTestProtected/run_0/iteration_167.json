[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8788571357727051, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223778247833252, 1.869816780090332, 1.3854763507843018, 1.0877859592437744, 0.9313703775405884, 0.8305619955062866, 0.7596983313560486, 0.7178841233253479, 0.678885817527771, 0.6427952647209167, 0.6314711570739746, 0.6065253019332886, 0.5803450345993042, 0.5689871311187744, 0.5544987320899963, 0.5336046814918518, 0.5189152956008911, 0.5142802596092224, 0.4972553849220276, 0.48589378595352173, 0.4789123237133026, 0.47044631838798523, 0.45680922269821167, 0.4485171139240265, 0.45258986949920654, 0.44318363070487976, 0.4277282655239105, 0.42588117718696594, 0.4205707907676697, 0.4097837805747986, 0.4017646610736847, 0.3997235894203186, 0.39143604040145874, 0.3813983201980591, 0.3799765408039093, 0.3789656162261963, 0.36794283986091614, 0.3624574840068817, 0.35929128527641296, 0.35348811745643616, 0.3508596420288086, 0.34113216400146484, 0.3462033271789551, 0.33102670311927795, 0.330086886882782, 0.32165828347206116, 0.3163209855556488, 0.31816115975379944, 0.30683767795562744, 0.30308493971824646, 0.3014288544654846, 0.2991333305835724, 0.3007844388484955, 0.29286450147628784, 0.28524908423423767, 0.28070855140686035, 0.2784059941768646, 0.26981455087661743, 0.2657836079597473, 0.26673373579978943, 0.2612868845462799, 0.2518042027950287, 0.25471100211143494, 0.24872227013111115, 0.2470250278711319, 0.2423699051141739, 0.2363964468240738, 0.2331322431564331, 0.2366485893726349, 0.22393356263637543, 0.22837325930595398, 0.218330517411232, 0.21717983484268188, 0.21057762205600739, 0.20735885202884674, 0.2054237574338913, 0.20540645718574524, 0.19891852140426636, 0.19594213366508484, 0.20225878059864044, 0.1904907077550888, 0.18262125551700592, 0.18921315670013428, 0.18402932584285736, 0.18388424813747406, 0.18099281191825867, 0.17825645208358765, 0.1715107411146164], "accuracy": [0.2751287817955017, 0.47906485199928284, 0.5712587237358093, 0.6231673359870911, 0.6653017997741699, 0.7033417224884033, 0.7341170310974121, 0.7374191284179688, 0.7518161535263062, 0.7711002230644226, 0.7761194109916687, 0.783119797706604, 0.7940827012062073, 0.7932901978492737, 0.8016114234924316, 0.8078193068504333, 0.8191784620285034, 0.8201030492782593, 0.8281601071357727, 0.8253863453865051, 0.8310658931732178, 0.8338396549224854, 0.8387266993522644, 0.8429533839225769, 0.8429533839225769, 0.8430854678153992, 0.8474441766738892, 0.8525954484939575, 0.8488970994949341, 0.8557654023170471, 0.8605204224586487, 0.8562937378883362, 0.8647470474243164, 0.8679170608520508, 0.8650112152099609, 0.867520809173584, 0.870030403137207, 0.8725399374961853, 0.8734645247459412, 0.8730682730674744, 0.8811253309249878, 0.8813894987106323, 0.8728041052818298, 0.8854840993881226, 0.8800686597824097, 0.885219931602478, 0.8873332738876343, 0.8868049383163452, 0.8886540532112122, 0.8912957310676575, 0.8923524022102356, 0.8920882344245911, 0.8905032277107239, 0.8961827754974365, 0.895918607711792, 0.8968431949615479, 0.8986923694610596, 0.9041078090667725, 0.9021265506744385, 0.902390718460083, 0.9058248400688171, 0.9096552729606628, 0.908730685710907, 0.9115044474601746, 0.9109761118888855, 0.9133535623550415, 0.9162594079971313, 0.9157310724258423, 0.9140139818191528, 0.9169198274612427, 0.9167877435684204, 0.9225993752479553, 0.9235239624977112, 0.9220710396766663, 0.9252410531044006, 0.9272223114967346, 0.9260335564613342, 0.9299960136413574, 0.9298639297485352, 0.9265618920326233, 0.9314489364624023, 0.9351472854614258, 0.930788516998291, 0.9344868659973145, 0.9322414398193359, 0.935279369354248, 0.9355435371398926, 0.9375247359275818], "val_loss": [2.043229818344116, 1.5252792835235596, 1.059319019317627, 0.8622859120368958, 0.7739511728286743, 0.712826669216156, 0.6653242111206055, 0.6353532075881958, 0.6145880818367004, 0.588234007358551, 0.5718778371810913, 0.5557640790939331, 0.5459425449371338, 0.525135338306427, 0.5168591141700745, 0.5053482055664062, 0.4997932016849518, 0.48488402366638184, 0.47919487953186035, 0.4703822433948517, 0.47141027450561523, 0.46116748452186584, 0.453118234872818, 0.44784554839134216, 0.44718751311302185, 0.43445050716400146, 0.4359551668167114, 0.42782077193260193, 0.42837169766426086, 0.4202001988887787, 0.41962215304374695, 0.41002556681632996, 0.40663206577301025, 0.40764692425727844, 0.40263956785202026, 0.3989400267601013, 0.3960455060005188, 0.39371103048324585, 0.3923947811126709, 0.3929206430912018, 0.3917257487773895, 0.3840952217578888, 0.3808329403400421, 0.3817606270313263, 0.37890157103538513, 0.37521520256996155, 0.3746592700481415, 0.3713971674442291, 0.3694106936454773, 0.36994099617004395, 0.36911842226982117, 0.3693079352378845, 0.36807316541671753, 0.3690676987171173, 0.36612769961357117, 0.36626964807510376, 0.36125749349594116, 0.3628350496292114, 0.36928442120552063, 0.3606704771518707, 0.35772624611854553, 0.3617168664932251, 0.3560544550418854, 0.3591160476207733, 0.35777518153190613, 0.35627302527427673, 0.3584086000919342, 0.3570273518562317, 0.3526735305786133, 0.35380101203918457, 0.3530525863170624, 0.35500773787498474, 0.35798314213752747, 0.3571338653564453, 0.35494470596313477, 0.35568180680274963, 0.3550068438053131, 0.35418087244033813, 0.3578505516052246, 0.3490322232246399, 0.35165348649024963, 0.3594669997692108, 0.3573257327079773, 0.35076624155044556, 0.35436558723449707, 0.35485583543777466, 0.35399290919303894, 0.3549942970275879], "val_accuracy": [0.5046666860580444, 0.6439999938011169, 0.6753333210945129, 0.6893333196640015, 0.7256666421890259, 0.7400000095367432, 0.7566666603088379, 0.7670000195503235, 0.7730000019073486, 0.7876666784286499, 0.7906666398048401, 0.7986666560173035, 0.8033333420753479, 0.8163333535194397, 0.8180000185966492, 0.8203333616256714, 0.8183333277702332, 0.82833331823349, 0.8303333520889282, 0.8323333263397217, 0.8263333439826965, 0.8370000123977661, 0.8410000205039978, 0.8399999737739563, 0.8399999737739563, 0.847000002861023, 0.843666672706604, 0.8476666808128357, 0.8493333458900452, 0.8533333539962769, 0.8493333458900452, 0.8579999804496765, 0.859000027179718, 0.8556666374206543, 0.8600000143051147, 0.862333357334137, 0.8613333106040955, 0.8606666922569275, 0.8610000014305115, 0.8673333525657654, 0.8650000095367432, 0.8603333234786987, 0.8673333525657654, 0.8690000176429749, 0.8700000047683716, 0.8703333139419556, 0.8726666569709778, 0.8713333606719971, 0.8700000047683716, 0.871666669845581, 0.874666690826416, 0.8733333349227905, 0.8733333349227905, 0.871666669845581, 0.8756666779518127, 0.874666690826416, 0.8759999871253967, 0.878000020980835, 0.8740000128746033, 0.8766666650772095, 0.8790000081062317, 0.8813333511352539, 0.8849999904632568, 0.8820000290870667, 0.8849999904632568, 0.8823333382606506, 0.8833333253860474, 0.8853333592414856, 0.8853333592414856, 0.8856666684150696, 0.8846666812896729, 0.8889999985694885, 0.8843333125114441, 0.8866666555404663, 0.887333333492279, 0.890999972820282, 0.8893333077430725, 0.8859999775886536, 0.8886666893959045, 0.8926666378974915, 0.890333354473114, 0.887333333492279, 0.8933333158493042, 0.8920000195503235, 0.8913333415985107, 0.890999972820282, 0.8916666507720947, 0.890666663646698]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8517143130302429, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2213523387908936, 1.8618197441101074, 1.3817379474639893, 1.0819791555404663, 0.9190255403518677, 0.8307855725288391, 0.764765739440918, 0.7212563157081604, 0.680809497833252, 0.6594803929328918, 0.6331166625022888, 0.612804651260376, 0.5965583324432373, 0.5713850259780884, 0.5641068816184998, 0.5466464161872864, 0.527001142501831, 0.5112705826759338, 0.503432035446167, 0.49640169739723206, 0.4836547076702118, 0.4659367799758911, 0.46333372592926025, 0.4535379409790039, 0.4490756392478943, 0.4403356909751892, 0.432637482881546, 0.4220966100692749, 0.4203578531742096, 0.4157288670539856, 0.41045236587524414, 0.39798593521118164, 0.3898122310638428, 0.3841405510902405, 0.3773694336414337, 0.37566661834716797, 0.3619382381439209, 0.34930044412612915, 0.3556665778160095, 0.3472042977809906, 0.3422797918319702, 0.333827942609787, 0.33016514778137207, 0.3269318640232086, 0.32501813769340515, 0.3191981017589569, 0.3174036741256714, 0.3159677982330322, 0.3081781566143036, 0.29935091733932495, 0.29592347145080566, 0.29416969418525696, 0.29063859581947327, 0.2900084853172302, 0.2843160331249237, 0.27827364206314087, 0.27597764134407043], "accuracy": [0.26799631118774414, 0.4859331548213959, 0.5723153948783875, 0.6244881749153137, 0.6664905548095703, 0.698190450668335, 0.7232862114906311, 0.7351737022399902, 0.7483819723129272, 0.7510236501693726, 0.7711002230644226, 0.7736098170280457, 0.7816668748855591, 0.7868181467056274, 0.785629391670227, 0.7997622489929199, 0.8064984679222107, 0.8096684813499451, 0.8156121969223022, 0.8189142942428589, 0.822348415851593, 0.8281601071357727, 0.8256505131721497, 0.83119797706604, 0.8334434032440186, 0.837141752243042, 0.8433496356010437, 0.8422929644584656, 0.844010055065155, 0.8504821062088013, 0.8512746095657349, 0.8541803956031799, 0.8593316674232483, 0.8584070801734924, 0.86553955078125, 0.8639545440673828, 0.8697662353515625, 0.8762382864952087, 0.8732003569602966, 0.8713511824607849, 0.8710870146751404, 0.8796724081039429, 0.8831065893173218, 0.8815215826034546, 0.8828424215316772, 0.8853520154953003, 0.8857482671737671, 0.8887861371040344, 0.8882578015327454, 0.8916919827461243, 0.895918607711792, 0.8961827754974365, 0.8961827754974365, 0.8934090733528137, 0.8976356983184814, 0.8972394466400146, 0.8994848728179932], "val_loss": [2.0336904525756836, 1.5056232213974, 1.0242376327514648, 0.8175133466720581, 0.7317996621131897, 0.6779625415802002, 0.6360369324684143, 0.6075547337532043, 0.5765396952629089, 0.5545700788497925, 0.5375462174415588, 0.5212447643280029, 0.5098440647125244, 0.4890403747558594, 0.4865165948867798, 0.46477237343788147, 0.45893388986587524, 0.44615820050239563, 0.4379527270793915, 0.4333275258541107, 0.42547160387039185, 0.4192871153354645, 0.4158865511417389, 0.40224072337150574, 0.4010910987854004, 0.39106324315071106, 0.39302653074264526, 0.38604411482810974, 0.3850655257701874, 0.3813035190105438, 0.37325143814086914, 0.37232840061187744, 0.36509814858436584, 0.3659920394420624, 0.36477357149124146, 0.3570179045200348, 0.3528749942779541, 0.3526189923286438, 0.354739248752594, 0.3473083972930908, 0.3516403138637543, 0.34052905440330505, 0.3484143018722534, 0.3390772342681885, 0.3394702970981598, 0.33775225281715393, 0.3422348201274872, 0.32963797450065613, 0.33256927132606506, 0.3296501040458679, 0.32981574535369873, 0.3244522213935852, 0.32613405585289, 0.3288674056529999, 0.32072240114212036, 0.3207050859928131, 0.3206900954246521], "val_accuracy": [0.5389999747276306, 0.6539999842643738, 0.6823333501815796, 0.7026666402816772, 0.7279999852180481, 0.7400000095367432, 0.7516666650772095, 0.7636666893959045, 0.7789999842643738, 0.7833333611488342, 0.7946666479110718, 0.8103333115577698, 0.8080000281333923, 0.8176666498184204, 0.8183333277702332, 0.8306666612625122, 0.8326666951179504, 0.8349999785423279, 0.8410000205039978, 0.846666693687439, 0.843666672706604, 0.8403333425521851, 0.8416666388511658, 0.8546666502952576, 0.8550000190734863, 0.8576666712760925, 0.8526666760444641, 0.8576666712760925, 0.8573333621025085, 0.8550000190734863, 0.8643333315849304, 0.8633333444595337, 0.8636666536331177, 0.862333357334137, 0.8650000095367432, 0.8669999837875366, 0.8666666746139526, 0.8683333396911621, 0.8650000095367432, 0.8726666569709778, 0.8740000128746033, 0.874666690826416, 0.8693333268165588, 0.8726666569709778, 0.8736666440963745, 0.8769999742507935, 0.8759999871253967, 0.8766666650772095, 0.875, 0.8786666393280029, 0.8790000081062317, 0.8820000290870667, 0.8820000290870667, 0.8806666731834412, 0.8816666603088379, 0.8796666860580444, 0.8796666860580444]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0], [0, 4, 9], [0], [0, 89], [0, 0, 0, 1, 1], [0, 1, 0], [0, 1], [0], [0, 1], [0], [1], [0]], "fitness": -0.8479999899864197, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292701005935669, 2.186978816986084, 1.7540769577026367, 1.3378351926803589, 1.0509790182113647, 0.9232080578804016, 0.8476287126541138, 0.8196851015090942, 0.7736127972602844, 0.7432469725608826, 0.7027074694633484, 0.6888405680656433, 0.6568574905395508, 0.6366047859191895, 0.6213995218276978, 0.6041831970214844, 0.5868359208106995, 0.5876039266586304, 0.582030177116394, 0.5618211030960083, 0.5475385785102844, 0.5281798243522644, 0.5315216779708862, 0.5178471803665161, 0.5201334953308105, 0.500260055065155, 0.48183420300483704, 0.4748343527317047, 0.47183263301849365, 0.46231675148010254, 0.46257200837135315, 0.4537088871002197, 0.4497239887714386, 0.43188148736953735, 0.42297080159187317, 0.4158805012702942, 0.3958962857723236, 0.39087727665901184, 0.3926204741001129, 0.39496728777885437, 0.39289402961730957, 0.3803706765174866, 0.37654832005500793, 0.3609934151172638, 0.3605978488922119, 0.35412395000457764, 0.3478449583053589, 0.36288145184516907], "accuracy": [0.13181878626346588, 0.33324527740478516, 0.43970412015914917, 0.5474838018417358, 0.637828528881073, 0.661471426486969, 0.6959450244903564, 0.6948884129524231, 0.6964733600616455, 0.7107383608818054, 0.7337207794189453, 0.7386078238487244, 0.7454761862754822, 0.7602694630622864, 0.7569673657417297, 0.7684586048126221, 0.7755910754203796, 0.7726852297782898, 0.7692511081695557, 0.7841764688491821, 0.789459764957428, 0.7944789528846741, 0.7967243194580078, 0.7976489067077637, 0.7927618622779846, 0.800290584564209, 0.8131026029586792, 0.817461371421814, 0.819970965385437, 0.8235371708869934, 0.8193105459213257, 0.8197067975997925, 0.821820080280304, 0.8317263126373291, 0.8354246616363525, 0.8418967127799988, 0.8430854678153992, 0.8448025584220886, 0.8467837572097778, 0.8429533839225769, 0.8482366800308228, 0.8498216867446899, 0.854708731174469, 0.8593316674232483, 0.8582749962806702, 0.8610487580299377, 0.8650112152099609, 0.856689989566803], "val_loss": [2.245730400085449, 2.0162808895111084, 1.1183189153671265, 0.8652194142341614, 0.7695724368095398, 0.7071168422698975, 0.6897448897361755, 0.6631057858467102, 0.6463584899902344, 0.6165638566017151, 0.588607907295227, 0.5687875151634216, 0.5620713829994202, 0.5595183968544006, 0.5470560193061829, 0.5417348742485046, 0.5408754348754883, 0.5323468446731567, 0.5209905505180359, 0.5282798409461975, 0.5109555721282959, 0.5012227892875671, 0.5012510418891907, 0.5060121417045593, 0.5067933201789856, 0.4998109042644501, 0.4846873879432678, 0.4758841097354889, 0.46949681639671326, 0.47007492184638977, 0.4685625433921814, 0.44758141040802, 0.44208312034606934, 0.4439389109611511, 0.44911280274391174, 0.43938136100769043, 0.4339388310909271, 0.4339894950389862, 0.4333798289299011, 0.4356829822063446, 0.425038605928421, 0.42241281270980835, 0.42727425694465637, 0.4464399516582489, 0.4439013600349426, 0.4435279965400696, 0.44412094354629517, 0.44186824560165405], "val_accuracy": [0.4156666696071625, 0.46799999475479126, 0.6499999761581421, 0.7073333263397217, 0.7296666502952576, 0.7383333444595337, 0.7419999837875366, 0.7450000047683716, 0.7616666555404663, 0.7680000066757202, 0.7703333497047424, 0.781333327293396, 0.7826666831970215, 0.7896666526794434, 0.7876666784286499, 0.7906666398048401, 0.7933333516120911, 0.7990000247955322, 0.7950000166893005, 0.8043333292007446, 0.8063333630561829, 0.8163333535194397, 0.8153333067893982, 0.8206666707992554, 0.8256666660308838, 0.8240000009536743, 0.8220000267028809, 0.8256666660308838, 0.8286666870117188, 0.831333339214325, 0.8299999833106995, 0.8396666646003723, 0.843666672706604, 0.8456666469573975, 0.847000002861023, 0.8496666550636292, 0.8526666760444641, 0.8523333072662354, 0.8536666631698608, 0.8479999899864197, 0.8503333330154419, 0.8546666502952576, 0.8566666841506958, 0.8500000238418579, 0.8519999980926514, 0.8486666679382324, 0.8529999852180481, 0.8510000109672546]}, "mapping_values": [1, 10, 5, 5, 3, 4, 3, 1, 2, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.821142852306366, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5380189418792725, 0.8681574463844299, 0.7009848356246948, 0.603776752948761, 0.5603616237640381, 0.5473674535751343, 0.5134957432746887, 0.5020473599433899, 0.49778005480766296, 0.48467880487442017, 0.5029734969139099, 0.5048630237579346, 0.516161322593689], "accuracy": [0.4909523129463196, 0.7071720957756042, 0.7470611333847046, 0.7792893648147583, 0.7951393723487854, 0.8006868362426758, 0.8109893202781677, 0.819442629814148, 0.8190463781356812, 0.8230088353157043, 0.816008448600769, 0.8267071843147278, 0.8183859586715698], "val_loss": [0.879763126373291, 0.6553767323493958, 0.5551878213882446, 0.4968218207359314, 0.49217888712882996, 0.48884838819503784, 0.5014832615852356, 0.45417097210884094, 0.48897209763526917, 0.5004498958587646, 0.5550035834312439, 0.49700602889060974, 0.49534520506858826], "val_accuracy": [0.6980000138282776, 0.7616666555404663, 0.7886666655540466, 0.8180000185966492, 0.8193333148956299, 0.8296666741371155, 0.8243333101272583, 0.8360000252723694, 0.8236666917800903, 0.8216666579246521, 0.8296666741371155, 0.8263333439826965, 0.8316666483879089]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 52], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 3, 3, 0, 3, 5], [0, 2, 0, 3], [16, 65], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 6, 6, 8, 1, 4, 2, 4, 2, 8], [0, 0, 2, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.19542856514453888, "mapping_values": [1, 9, 5, 4, 3, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(beta, sigma))), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3173511028289795, 2.674365758895874, 2.4466400146484375, 2.3031423091888428, 2.30483341217041, 2.3648200035095215, 2.320411205291748, 2.3214290142059326], "accuracy": [0.09430722147226334, 0.108440101146698, 0.10910051316022873, 0.10434553027153015, 0.1022322028875351, 0.11398758739233017, 0.1010434553027153, 0.1018359512090683], "val_loss": [2.3305904865264893, 2.400817632675171, 2.3004515171051025, 2.3045780658721924, 2.3091506958007812, 2.3260247707366943, 2.318269729614258, 2.3287956714630127], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.19699999690055847, 0.09833333641290665, 0.10700000077486038, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 2, 4, 8, 3, 9], [0, 2, 0, 3], [52, 16, 11], [0, 1, 1, 1], [0, 6], [0, 5], [0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 0, 7, 0, 1, 9, 4, 5, 9, 7, 0, 2, 7, 2, 3, 1], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 9, 6, 3, 3, 2, 1, 1, 1, 25, 16, 9, 7], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), sigma)))), alpha)))))), beta)", "other_info": {"loss": [320447184896.0, 131501807108096.0, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09391097724437714, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3051276730368.0, 1.6703219106594454e+21, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [2, 2, 3, 0, 8], [0, 1, 1, 2], [20, 61], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 4, 8, 6, 3, 9, 7, 2, 7, 9, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 7, 0, 1], [79, 99, 96, 99, 61, 41, 56, 89, 83, 71]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 1, 9, 5, 4, 2, 2, 1, 1, 1, 34, 21, 13, 10], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, alpha)), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.math.sqrt(sigma), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.sqrt(sigma), alpha)))), tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [0, 2, 3, 0, 3, 0, 5, 5, 2], [0, 1, 0, 2, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 14], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [6, 4, 7, 2, 8, 7, 4, 7, 5], [0, 6, 5, 2, 6, 3, 1, 3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [1, 3, 3, 6, 9, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 1, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 9, 5, 2, 10, 6, 4, 1, 17, 9, 8, 1, 17, 9, 8, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(tf.math.add(grad, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.add(grad, grad)), beta), grad), tf.math.pow(tf.math.add(sigma, tf.math.square(alpha)), sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}}]