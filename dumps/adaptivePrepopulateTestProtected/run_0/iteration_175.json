[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 1, 0], [0, 2, 6, 9], [0, 0], [0, 8, 35], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8577142953872681, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2922933101654053, 2.186976909637451, 1.7653560638427734, 1.3511778116226196, 1.0785900354385376, 0.9236494898796082, 0.8469668030738831, 0.816448450088501, 0.7486955523490906, 0.7206659317016602, 0.7090152502059937, 0.6894028186798096, 0.6465926170349121, 0.6284292340278625, 0.6061185598373413, 0.5998053550720215, 0.576012134552002, 0.5655806064605713, 0.5481865406036377, 0.5361625552177429, 0.5420068502426147, 0.5267860889434814, 0.5231813788414001, 0.5142211318016052, 0.5008716583251953, 0.49782127141952515, 0.48122385144233704, 0.46771734952926636, 0.4598759114742279, 0.4497273862361908, 0.44722312688827515, 0.43940943479537964, 0.4291706085205078, 0.42434751987457275, 0.43433746695518494, 0.4159248173236847, 0.40762096643447876, 0.4095394015312195, 0.39900344610214233, 0.38267433643341064, 0.3914293050765991, 0.38384008407592773], "accuracy": [0.13274335861206055, 0.3327169418334961, 0.4309866726398468, 0.5412759184837341, 0.6222427487373352, 0.655527651309967, 0.6826046705245972, 0.7010962963104248, 0.7117950320243835, 0.7236824631690979, 0.7238145470619202, 0.7378153204917908, 0.7564390301704407, 0.755118191242218, 0.7724210619926453, 0.7692511081695557, 0.7773081660270691, 0.7857614755630493, 0.7882710099220276, 0.7956677079200745, 0.7931581139564514, 0.7940827012062073, 0.7961959838867188, 0.8000264167785645, 0.8061022162437439, 0.8074230551719666, 0.8173292875289917, 0.8187822103500366, 0.8249900937080383, 0.8265751004219055, 0.8274996876716614, 0.8298771381378174, 0.8347642421722412, 0.8376700282096863, 0.8392550349235535, 0.839519202709198, 0.8432175517082214, 0.8429533839225769, 0.8473120927810669, 0.8485008478164673, 0.8540483713150024, 0.852331280708313], "val_loss": [2.2462074756622314, 2.0168521404266357, 1.1504863500595093, 0.8788120746612549, 0.7899650931358337, 0.7082595229148865, 0.6830491423606873, 0.638261079788208, 0.6338965892791748, 0.6033405065536499, 0.5809869170188904, 0.5749501585960388, 0.5523678660392761, 0.5460956692695618, 0.5419354438781738, 0.5331964492797852, 0.5182543396949768, 0.5038703083992004, 0.49689042568206787, 0.49281787872314453, 0.48853611946105957, 0.48661544919013977, 0.4919792413711548, 0.4896514117717743, 0.47192373871803284, 0.45607754588127136, 0.45156168937683105, 0.4458259344100952, 0.43701034784317017, 0.4340040683746338, 0.4370230734348297, 0.4308752715587616, 0.4248120188713074, 0.4260144829750061, 0.4221230447292328, 0.41227710247039795, 0.4283774495124817, 0.4168247878551483, 0.4056393504142761, 0.4136715829372406, 0.42940640449523926, 0.4080486595630646], "val_accuracy": [0.41466665267944336, 0.43166667222976685, 0.6413333415985107, 0.687333345413208, 0.7133333086967468, 0.7353333234786987, 0.7429999709129333, 0.7526666522026062, 0.7570000290870667, 0.7633333206176758, 0.7736666798591614, 0.7713333368301392, 0.7883333563804626, 0.7876666784286499, 0.7919999957084656, 0.7943333387374878, 0.8056666851043701, 0.8149999976158142, 0.812666654586792, 0.8173333406448364, 0.8213333487510681, 0.8140000104904175, 0.8109999895095825, 0.8209999799728394, 0.8253333568572998, 0.8309999704360962, 0.831333339214325, 0.8320000171661377, 0.8383333086967468, 0.8356666564941406, 0.8379999995231628, 0.8386666774749756, 0.8416666388511658, 0.8456666469573975, 0.8479999899864197, 0.8483333587646484, 0.8543333411216736, 0.8536666631698608, 0.8519999980926514, 0.8519999980926514, 0.8533333539962769, 0.8496666550636292]}, "mapping_values": [1, 10, 5, 5, 3, 6, 4, 2, 3, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8557142615318298, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2225723266601562, 1.8632105588912964, 1.4001983404159546, 1.0993160009384155, 0.9478352069854736, 0.8499854803085327, 0.7856510877609253, 0.733588695526123, 0.7006533741950989, 0.6658382415771484, 0.6457587480545044, 0.6251043081283569, 0.6012674570083618, 0.5862119793891907, 0.5732002854347229, 0.5578742027282715, 0.5474795699119568, 0.5245615243911743, 0.5162709355354309, 0.5056819319725037, 0.4964625835418701, 0.49063241481781006, 0.4778707027435303, 0.47998279333114624, 0.46898970007896423, 0.45843514800071716, 0.45379412174224854, 0.45452627539634705, 0.4325515925884247, 0.43003785610198975, 0.4270625710487366, 0.4173373878002167, 0.4195357859134674, 0.41090846061706543, 0.3960801661014557, 0.38836050033569336, 0.3844844698905945, 0.3841891586780548, 0.37583425641059875, 0.37528565526008606, 0.3677724301815033, 0.3685154318809509, 0.35949984192848206, 0.3490884304046631, 0.34788036346435547], "accuracy": [0.27077004313468933, 0.5066701769828796, 0.5617488026618958, 0.6168273687362671, 0.6621318459510803, 0.6973979473114014, 0.7160216569900513, 0.7320036888122559, 0.7452120184898376, 0.7589486241340637, 0.7666094303131104, 0.7705719470977783, 0.7821952104568481, 0.7885351777076721, 0.7926297783851624, 0.7987055778503418, 0.805177628993988, 0.8149517774581909, 0.8142913579940796, 0.8195747137069702, 0.8226125836372375, 0.824329674243927, 0.8293488025665283, 0.8260467648506165, 0.8341038227081299, 0.8376700282096863, 0.8374059200286865, 0.8372738361358643, 0.8436138033866882, 0.8465195894241333, 0.8490291833877563, 0.8516708612442017, 0.8504821062088013, 0.8520671129226685, 0.8564258217811584, 0.8618412613868713, 0.8648791313171387, 0.8618412613868713, 0.8659358024597168, 0.8684453964233398, 0.8696341514587402, 0.8705587387084961, 0.870030403137207, 0.8758420348167419, 0.8747853636741638], "val_loss": [2.039320230484009, 1.5129858255386353, 1.0501819849014282, 0.8467531204223633, 0.7557886838912964, 0.6954773664474487, 0.6485164761543274, 0.6114475131034851, 0.587621808052063, 0.5609949231147766, 0.5419579744338989, 0.5236209034919739, 0.5090087652206421, 0.4978010952472687, 0.48089689016342163, 0.4725956320762634, 0.4577471911907196, 0.4538073241710663, 0.44168058037757874, 0.44070035219192505, 0.4291406273841858, 0.42698022723197937, 0.41553279757499695, 0.4085320234298706, 0.40642020106315613, 0.39948445558547974, 0.39578694105148315, 0.3984472155570984, 0.39340123534202576, 0.38630419969558716, 0.3790949583053589, 0.377118319272995, 0.38400769233703613, 0.37240156531333923, 0.3696012496948242, 0.3646264672279358, 0.36434146761894226, 0.36033931374549866, 0.356621652841568, 0.35749438405036926, 0.35959652066230774, 0.35638460516929626, 0.354170560836792, 0.35214370489120483, 0.3504595458507538], "val_accuracy": [0.5376666784286499, 0.6426666378974915, 0.6816666722297668, 0.7089999914169312, 0.7250000238418579, 0.7443333268165588, 0.7586666941642761, 0.7756666541099548, 0.7753333449363708, 0.7906666398048401, 0.8029999732971191, 0.8086666464805603, 0.8140000104904175, 0.815666675567627, 0.8253333568572998, 0.8309999704360962, 0.8339999914169312, 0.831333339214325, 0.8410000205039978, 0.8410000205039978, 0.8510000109672546, 0.8493333458900452, 0.8526666760444641, 0.8569999933242798, 0.856333315372467, 0.859333336353302, 0.8629999756813049, 0.8613333106040955, 0.8566666841506958, 0.8636666536331177, 0.8653333187103271, 0.8640000224113464, 0.862333357334137, 0.8703333139419556, 0.8693333268165588, 0.871999979019165, 0.8706666827201843, 0.8723333477973938, 0.8740000128746033, 0.8756666779518127, 0.8703333139419556, 0.871999979019165, 0.875333309173584, 0.875, 0.875333309173584]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8337143063545227, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.607427716255188, 0.837105929851532, 0.6781455874443054, 0.6132007837295532, 0.5474366545677185, 0.525587260723114, 0.495532363653183, 0.4867255985736847, 0.5062129497528076, 0.4616395831108093, 0.46497637033462524, 0.4394519031047821, 0.45735785365104675, 0.43194058537483215, 0.48191186785697937, 0.4480604827404022, 0.4930201768875122], "accuracy": [0.4699511229991913, 0.6989829540252686, 0.7494386434555054, 0.7652885913848877, 0.7882710099220276, 0.8018755912780762, 0.8206313848495483, 0.8113855719566345, 0.8198388814926147, 0.8259146809577942, 0.8337075710296631, 0.8442742228507996, 0.8457271456718445, 0.8421608805656433, 0.8329150676727295, 0.8358209133148193, 0.8401796221733093], "val_loss": [0.8020486831665039, 0.6571474075317383, 0.5805259346961975, 0.5274266600608826, 0.490386039018631, 0.4827831983566284, 0.520696759223938, 0.502909243106842, 0.5008664131164551, 0.5012632012367249, 0.5131819844245911, 0.5749991536140442, 0.5147786736488342, 0.5117196440696716, 0.4986582100391388, 0.5360510945320129, 0.5830597877502441], "val_accuracy": [0.7059999704360962, 0.7666666507720947, 0.7786666750907898, 0.815666675567627, 0.8199999928474426, 0.8323333263397217, 0.8289999961853027, 0.8356666564941406, 0.8346666693687439, 0.8473333120346069, 0.8460000157356262, 0.8553333282470703, 0.8463333249092102, 0.8393333554267883, 0.8533333539962769, 0.847000002861023, 0.8539999723434448]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 2, 0, 0, 3, 6, 2, 7, 3, 2, 6, 5, 9, 3, 2, 0, 8, 4, 9], [0, 0, 1, 0, 2, 2, 0, 2, 2, 0], [0, 39, 39, 25, 36, 84, 34], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 2, 2, 1, 1, 3, 4], [16, 16, 30], [1, 1], [0, 3, 5, 6, 2], [0], [0, 8], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 8, 7, 2, 8, 9, 3, 4, 1], [4, 7, 0, 0, 2, 5, 1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 19, 10, 7, 12, 6, 6, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), grad)))), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), tf.math.multiply(grad, tf.math.add(grad, tf.math.negative(tf.math.sqrt(tf.math.pow(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(beta, tf.math.multiply(beta, alpha))), alpha), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0874389111995697, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 2, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [6, 5, 3, 6, 8, 1, 4, 1, 4, 2, 8, 6, 4, 8, 2], [0, 0, 4, 3, 0, 4, 3, 1, 2, 0, 2, 7], [94, 99, 34, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1, 27, 15, 12, 4], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(grad, tf.math.pow(tf.math.add(tf.math.sqrt(sigma), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), grad)), tf.math.divide_no_nan(tf.math.pow(sigma, alpha), beta)))), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(beta, grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 2, 5], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5, 5], [3, 2, 3, 3], [16, 16], [0, 1, 1], [3], [0, 4], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 1, 1, 4, 8, 8, 1, 0, 2, 8, 4], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 6, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 11, 7, 4, 0, 3, 1, 2, 1, 28, 16, 12, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.math.square(tf.math.square(grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma)))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.negative(sigma), alpha)), beta), tf.math.add(tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.pow(grad, sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 2, 3, 0, 3, 0, 9], [0, 1, 0, 2], [45, 39, 45], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 0, 0, 3], [16, 7, 65], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 3, 3, 6, 6, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 7], [10, 99, 96, 99, 61, 1]], "fitness": -0.09200000017881393, "mapping_values": [1, 10, 7, 3, 3, 9, 5, 4, 3, 2, 1, 1, 1, 21, 10, 11, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha)), beta), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))", "other_info": {"loss": [2.310058355331421, 2.3111417293548584, 2.310014486312866, 2.30949330329895, 2.3104989528656006, 2.310032844543457], "accuracy": [0.09206181764602661, 0.09021265059709549, 0.08677849918603897, 0.09179764986038208, 0.09351472556591034, 0.08836349099874496], "val_loss": [2.308769702911377, 2.308769702911377, 2.308769941329956, 2.3087704181671143, 2.3087708950042725, 2.308771848678589], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]