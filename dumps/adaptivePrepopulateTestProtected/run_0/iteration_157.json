[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8788571357727051, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223778247833252, 1.869816780090332, 1.3854763507843018, 1.0877859592437744, 0.9313703775405884, 0.8305619955062866, 0.7596983313560486, 0.7178841233253479, 0.678885817527771, 0.6427952647209167, 0.6314711570739746, 0.6065253019332886, 0.5803450345993042, 0.5689871311187744, 0.5544987320899963, 0.5336046814918518, 0.5189152956008911, 0.5142802596092224, 0.4972553849220276, 0.48589378595352173, 0.4789123237133026, 0.47044631838798523, 0.45680922269821167, 0.4485171139240265, 0.45258986949920654, 0.44318363070487976, 0.4277282655239105, 0.42588117718696594, 0.4205707907676697, 0.4097837805747986, 0.4017646610736847, 0.3997235894203186, 0.39143604040145874, 0.3813983201980591, 0.3799765408039093, 0.3789656162261963, 0.36794283986091614, 0.3624574840068817, 0.35929128527641296, 0.35348811745643616, 0.3508596420288086, 0.34113216400146484, 0.3462033271789551, 0.33102670311927795, 0.330086886882782, 0.32165828347206116, 0.3163209855556488, 0.31816115975379944, 0.30683767795562744, 0.30308493971824646, 0.3014288544654846, 0.2991333305835724, 0.3007844388484955, 0.29286450147628784, 0.28524908423423767, 0.28070855140686035, 0.2784059941768646, 0.26981455087661743, 0.2657836079597473, 0.26673373579978943, 0.2612868845462799, 0.2518042027950287, 0.25471100211143494, 0.24872227013111115, 0.2470250278711319, 0.2423699051141739, 0.2363964468240738, 0.2331322431564331, 0.2366485893726349, 0.22393356263637543, 0.22837325930595398, 0.218330517411232, 0.21717983484268188, 0.21057762205600739, 0.20735885202884674, 0.2054237574338913, 0.20540645718574524, 0.19891852140426636, 0.19594213366508484, 0.20225878059864044, 0.1904907077550888, 0.18262125551700592, 0.18921315670013428, 0.18402932584285736, 0.18388424813747406, 0.18099281191825867, 0.17825645208358765, 0.1715107411146164], "accuracy": [0.2751287817955017, 0.47906485199928284, 0.5712587237358093, 0.6231673359870911, 0.6653017997741699, 0.7033417224884033, 0.7341170310974121, 0.7374191284179688, 0.7518161535263062, 0.7711002230644226, 0.7761194109916687, 0.783119797706604, 0.7940827012062073, 0.7932901978492737, 0.8016114234924316, 0.8078193068504333, 0.8191784620285034, 0.8201030492782593, 0.8281601071357727, 0.8253863453865051, 0.8310658931732178, 0.8338396549224854, 0.8387266993522644, 0.8429533839225769, 0.8429533839225769, 0.8430854678153992, 0.8474441766738892, 0.8525954484939575, 0.8488970994949341, 0.8557654023170471, 0.8605204224586487, 0.8562937378883362, 0.8647470474243164, 0.8679170608520508, 0.8650112152099609, 0.867520809173584, 0.870030403137207, 0.8725399374961853, 0.8734645247459412, 0.8730682730674744, 0.8811253309249878, 0.8813894987106323, 0.8728041052818298, 0.8854840993881226, 0.8800686597824097, 0.885219931602478, 0.8873332738876343, 0.8868049383163452, 0.8886540532112122, 0.8912957310676575, 0.8923524022102356, 0.8920882344245911, 0.8905032277107239, 0.8961827754974365, 0.895918607711792, 0.8968431949615479, 0.8986923694610596, 0.9041078090667725, 0.9021265506744385, 0.902390718460083, 0.9058248400688171, 0.9096552729606628, 0.908730685710907, 0.9115044474601746, 0.9109761118888855, 0.9133535623550415, 0.9162594079971313, 0.9157310724258423, 0.9140139818191528, 0.9169198274612427, 0.9167877435684204, 0.9225993752479553, 0.9235239624977112, 0.9220710396766663, 0.9252410531044006, 0.9272223114967346, 0.9260335564613342, 0.9299960136413574, 0.9298639297485352, 0.9265618920326233, 0.9314489364624023, 0.9351472854614258, 0.930788516998291, 0.9344868659973145, 0.9322414398193359, 0.935279369354248, 0.9355435371398926, 0.9375247359275818], "val_loss": [2.043229818344116, 1.5252792835235596, 1.059319019317627, 0.8622859120368958, 0.7739511728286743, 0.712826669216156, 0.6653242111206055, 0.6353532075881958, 0.6145880818367004, 0.588234007358551, 0.5718778371810913, 0.5557640790939331, 0.5459425449371338, 0.525135338306427, 0.5168591141700745, 0.5053482055664062, 0.4997932016849518, 0.48488402366638184, 0.47919487953186035, 0.4703822433948517, 0.47141027450561523, 0.46116748452186584, 0.453118234872818, 0.44784554839134216, 0.44718751311302185, 0.43445050716400146, 0.4359551668167114, 0.42782077193260193, 0.42837169766426086, 0.4202001988887787, 0.41962215304374695, 0.41002556681632996, 0.40663206577301025, 0.40764692425727844, 0.40263956785202026, 0.3989400267601013, 0.3960455060005188, 0.39371103048324585, 0.3923947811126709, 0.3929206430912018, 0.3917257487773895, 0.3840952217578888, 0.3808329403400421, 0.3817606270313263, 0.37890157103538513, 0.37521520256996155, 0.3746592700481415, 0.3713971674442291, 0.3694106936454773, 0.36994099617004395, 0.36911842226982117, 0.3693079352378845, 0.36807316541671753, 0.3690676987171173, 0.36612769961357117, 0.36626964807510376, 0.36125749349594116, 0.3628350496292114, 0.36928442120552063, 0.3606704771518707, 0.35772624611854553, 0.3617168664932251, 0.3560544550418854, 0.3591160476207733, 0.35777518153190613, 0.35627302527427673, 0.3584086000919342, 0.3570273518562317, 0.3526735305786133, 0.35380101203918457, 0.3530525863170624, 0.35500773787498474, 0.35798314213752747, 0.3571338653564453, 0.35494470596313477, 0.35568180680274963, 0.3550068438053131, 0.35418087244033813, 0.3578505516052246, 0.3490322232246399, 0.35165348649024963, 0.3594669997692108, 0.3573257327079773, 0.35076624155044556, 0.35436558723449707, 0.35485583543777466, 0.35399290919303894, 0.3549942970275879], "val_accuracy": [0.5046666860580444, 0.6439999938011169, 0.6753333210945129, 0.6893333196640015, 0.7256666421890259, 0.7400000095367432, 0.7566666603088379, 0.7670000195503235, 0.7730000019073486, 0.7876666784286499, 0.7906666398048401, 0.7986666560173035, 0.8033333420753479, 0.8163333535194397, 0.8180000185966492, 0.8203333616256714, 0.8183333277702332, 0.82833331823349, 0.8303333520889282, 0.8323333263397217, 0.8263333439826965, 0.8370000123977661, 0.8410000205039978, 0.8399999737739563, 0.8399999737739563, 0.847000002861023, 0.843666672706604, 0.8476666808128357, 0.8493333458900452, 0.8533333539962769, 0.8493333458900452, 0.8579999804496765, 0.859000027179718, 0.8556666374206543, 0.8600000143051147, 0.862333357334137, 0.8613333106040955, 0.8606666922569275, 0.8610000014305115, 0.8673333525657654, 0.8650000095367432, 0.8603333234786987, 0.8673333525657654, 0.8690000176429749, 0.8700000047683716, 0.8703333139419556, 0.8726666569709778, 0.8713333606719971, 0.8700000047683716, 0.871666669845581, 0.874666690826416, 0.8733333349227905, 0.8733333349227905, 0.871666669845581, 0.8756666779518127, 0.874666690826416, 0.8759999871253967, 0.878000020980835, 0.8740000128746033, 0.8766666650772095, 0.8790000081062317, 0.8813333511352539, 0.8849999904632568, 0.8820000290870667, 0.8849999904632568, 0.8823333382606506, 0.8833333253860474, 0.8853333592414856, 0.8853333592414856, 0.8856666684150696, 0.8846666812896729, 0.8889999985694885, 0.8843333125114441, 0.8866666555404663, 0.887333333492279, 0.890999972820282, 0.8893333077430725, 0.8859999775886536, 0.8886666893959045, 0.8926666378974915, 0.890333354473114, 0.887333333492279, 0.8933333158493042, 0.8920000195503235, 0.8913333415985107, 0.890999972820282, 0.8916666507720947, 0.890666663646698]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8668571710586548, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224076509475708, 1.8662477731704712, 1.3994128704071045, 1.110975980758667, 0.9596434831619263, 0.8592697381973267, 0.7999312281608582, 0.7439769506454468, 0.7065120935440063, 0.6879182457923889, 0.6455358266830444, 0.6307534575462341, 0.604732096195221, 0.5885390043258667, 0.5805143117904663, 0.5552443265914917, 0.5449209809303284, 0.5243839621543884, 0.5201671123504639, 0.49504947662353516, 0.49866291880607605, 0.48518097400665283, 0.4813854694366455, 0.47024238109588623, 0.4656006395816803, 0.4585471749305725, 0.44758012890815735, 0.43351468443870544, 0.423415869474411, 0.4267767369747162, 0.4097515642642975, 0.4072526693344116, 0.4059772789478302, 0.39613476395606995, 0.3940797746181488, 0.3855721056461334, 0.3751704692840576, 0.37677815556526184, 0.36540302634239197, 0.3608092963695526, 0.357217401266098, 0.3457654118537903, 0.3459770679473877, 0.34752771258354187, 0.34089791774749756, 0.33666563034057617, 0.32985278964042664, 0.31938454508781433, 0.3235141932964325], "accuracy": [0.26495838165283203, 0.4822348356246948, 0.5556729435920715, 0.6053361296653748, 0.6567164063453674, 0.6868313550949097, 0.7127195596694946, 0.7252674698829651, 0.7400607466697693, 0.7490423917770386, 0.7685906887054443, 0.7695152759552002, 0.778761088848114, 0.7898560166358948, 0.7928939461708069, 0.8014793395996094, 0.8029322624206543, 0.8113855719566345, 0.8166688680648804, 0.824329674243927, 0.8240655064582825, 0.8317263126373291, 0.8239334225654602, 0.8354246616363525, 0.8378021121025085, 0.8314621448516846, 0.842028796672821, 0.8446704745292664, 0.8479725122451782, 0.8430854678153992, 0.8537842035293579, 0.8549728989601135, 0.8498216867446899, 0.8590674996376038, 0.8621054291725159, 0.8631620407104492, 0.8660678863525391, 0.8648791313171387, 0.8676528930664062, 0.8692378997802734, 0.871879518032074, 0.8775591254234314, 0.8729361891746521, 0.8767666220664978, 0.8745211958885193, 0.8774270415306091, 0.8792761564254761, 0.8819178342819214, 0.8809932470321655], "val_loss": [2.0315842628479004, 1.5030375719070435, 1.0283005237579346, 0.8203051686286926, 0.7301586270332336, 0.6736265420913696, 0.6281481981277466, 0.5947765707969666, 0.571313202381134, 0.5506278276443481, 0.527930498123169, 0.517828106880188, 0.5018317699432373, 0.4899626076221466, 0.4781859517097473, 0.46899178624153137, 0.46363142132759094, 0.4516892433166504, 0.4454597234725952, 0.4380200207233429, 0.4343234598636627, 0.42363646626472473, 0.4182382822036743, 0.4146116077899933, 0.4079141318798065, 0.4126708507537842, 0.40413784980773926, 0.3965570330619812, 0.39444413781166077, 0.3916007876396179, 0.3946095407009125, 0.38934212923049927, 0.38063472509384155, 0.38197627663612366, 0.37903109192848206, 0.37347012758255005, 0.37497568130493164, 0.37557506561279297, 0.37089771032333374, 0.3631487190723419, 0.36384251713752747, 0.3629554808139801, 0.369598388671875, 0.3572016656398773, 0.35894086956977844, 0.3538030982017517, 0.36288315057754517, 0.3591490089893341, 0.3513948619365692], "val_accuracy": [0.5346666574478149, 0.6596666574478149, 0.6936666369438171, 0.7229999899864197, 0.7490000128746033, 0.765999972820282, 0.778333306312561, 0.7896666526794434, 0.7946666479110718, 0.8083333373069763, 0.8173333406448364, 0.8180000185966492, 0.8193333148956299, 0.8349999785423279, 0.8333333134651184, 0.8399999737739563, 0.8333333134651184, 0.846666693687439, 0.8460000157356262, 0.8479999899864197, 0.8513333201408386, 0.8506666421890259, 0.8560000061988831, 0.8539999723434448, 0.859666645526886, 0.8553333282470703, 0.859333336353302, 0.862666666507721, 0.8610000014305115, 0.8643333315849304, 0.8629999756813049, 0.8666666746139526, 0.8683333396911621, 0.8659999966621399, 0.871666669845581, 0.8726666569709778, 0.871999979019165, 0.8679999709129333, 0.8706666827201843, 0.875, 0.8733333349227905, 0.8769999742507935, 0.8730000257492065, 0.8796666860580444, 0.8726666569709778, 0.875333309173584, 0.8723333477973938, 0.8769999742507935, 0.8773333430290222]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 7, 8, 2], [0, 2, 2], [0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 4, 2, 1, 2, 0, 4, 1, 1, 4, 1, 1, 3, 7], [0, 6, 6, 3, 2, 7, 2, 0, 2, 1, 1, 7, 1], [0, 69], [0, 1], [0], [1], [0]], "fitness": -0.8637142777442932, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.math.add(tf.math.negative(grad), tf.math.pow(sigma, tf.math.subtract(beta, tf.math.subtract(tf.math.pow(grad, tf.math.subtract(beta, tf.math.subtract(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), beta))), tf.math.multiply(tf.math.add(alpha, alpha), grad))))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.291822910308838, 2.185582399368286, 1.7581416368484497, 1.3195465803146362, 1.091072916984558, 0.9429874420166016, 0.847906768321991, 0.8377198576927185, 0.7771797180175781, 0.7649875283241272, 0.7074697017669678, 0.6970006227493286, 0.6660059690475464, 0.647548258304596, 0.6189471483230591, 0.605388879776001, 0.6060401201248169, 0.5782487988471985, 0.5694860219955444, 0.5641725063323975, 0.5328867435455322, 0.5366404056549072, 0.5185924768447876, 0.5226110219955444, 0.5148723125457764, 0.49378982186317444, 0.4884718358516693, 0.4761559069156647, 0.4684022068977356, 0.4720151722431183, 0.4528879225254059, 0.4404596984386444, 0.441937655210495, 0.43766674399375916, 0.4186961352825165, 0.4150014817714691, 0.41580575704574585, 0.4109894931316376, 0.3925444781780243, 0.39316266775131226, 0.38355353474617004, 0.3953043222427368, 0.3806587755680084, 0.3706667721271515, 0.3650949001312256, 0.3606349527835846, 0.33677735924720764, 0.3345896005630493, 0.3401220440864563, 0.3311653733253479, 0.32435283064842224, 0.32221874594688416, 0.31578007340431213, 0.3164946734905243, 0.30752941966056824], "accuracy": [0.12838461995124817, 0.3337736129760742, 0.44023245573043823, 0.5555408596992493, 0.6419231295585632, 0.6510368585586548, 0.6933034062385559, 0.6927750706672668, 0.6936996579170227, 0.7086250185966492, 0.7281733155250549, 0.735041618347168, 0.748778223991394, 0.7470611333847046, 0.7588165402412415, 0.7693831920623779, 0.7660810947418213, 0.7734777331352234, 0.7774402499198914, 0.7821952104568481, 0.7906485199928284, 0.7928939461708069, 0.8018755912780762, 0.8004226684570312, 0.800290584564209, 0.8101968169212341, 0.8161405324935913, 0.8132346868515015, 0.8171972036361694, 0.8190463781356812, 0.8261788487434387, 0.8300092220306396, 0.8271034359931946, 0.8343679904937744, 0.8391229510307312, 0.8359529972076416, 0.8404437899589539, 0.8495575189590454, 0.8518029451370239, 0.8461233377456665, 0.8516708612442017, 0.8479725122451782, 0.8537842035293579, 0.8516708612442017, 0.8562937378883362, 0.8582749962806702, 0.870030403137207, 0.8735966086387634, 0.8640866279602051, 0.8689737319946289, 0.8750495314598083, 0.8720116019248962, 0.8794082403182983, 0.8762382864952087, 0.8819178342819214], "val_loss": [2.244346857070923, 2.0064640045166016, 1.1012427806854248, 0.8457203507423401, 0.7380378246307373, 0.708078145980835, 0.6735653281211853, 0.6384113430976868, 0.6330235004425049, 0.6286117434501648, 0.5689288377761841, 0.5458636283874512, 0.5375221967697144, 0.5156068801879883, 0.5143488645553589, 0.500636637210846, 0.5012632608413696, 0.4961378872394562, 0.4952036440372467, 0.47778746485710144, 0.49627217650413513, 0.4756445288658142, 0.46623310446739197, 0.4698118567466736, 0.4474678635597229, 0.4566792845726013, 0.44162654876708984, 0.44953814148902893, 0.438100665807724, 0.4390712082386017, 0.43068164587020874, 0.41606199741363525, 0.43714118003845215, 0.42080172896385193, 0.41294026374816895, 0.4210366904735565, 0.4009147882461548, 0.41576310992240906, 0.40296000242233276, 0.39336588978767395, 0.39617007970809937, 0.39867085218429565, 0.3858591318130493, 0.3816439211368561, 0.4014435112476349, 0.40720781683921814, 0.4065173268318176, 0.3902828097343445, 0.38858354091644287, 0.39094167947769165, 0.3953653573989868, 0.3948020339012146, 0.39696237444877625, 0.40927159786224365, 0.4196508824825287], "val_accuracy": [0.43799999356269836, 0.5006666779518127, 0.6499999761581421, 0.690666675567627, 0.7236666679382324, 0.7406666874885559, 0.7379999756813049, 0.7563333511352539, 0.7566666603088379, 0.7593333125114441, 0.778333306312561, 0.7763333320617676, 0.7876666784286499, 0.8013333082199097, 0.796999990940094, 0.8026666641235352, 0.815666675567627, 0.8090000152587891, 0.8180000185966492, 0.8263333439826965, 0.8140000104904175, 0.8203333616256714, 0.8253333568572998, 0.8273333311080933, 0.8396666646003723, 0.8230000138282776, 0.8360000252723694, 0.840666651725769, 0.843999981880188, 0.8450000286102295, 0.8506666421890259, 0.8529999852180481, 0.8403333425521851, 0.8463333249092102, 0.8510000109672546, 0.8493333458900452, 0.8619999885559082, 0.8610000014305115, 0.8583333492279053, 0.8616666793823242, 0.8576666712760925, 0.862333357334137, 0.8646666407585144, 0.8653333187103271, 0.8600000143051147, 0.8656666874885559, 0.8656666874885559, 0.8703333139419556, 0.871999979019165, 0.878333330154419, 0.8709999918937683, 0.8709999918937683, 0.8713333606719971, 0.8643333315849304, 0.8740000128746033]}, "mapping_values": [1, 10, 5, 5, 3, 8, 5, 3, 1, 27, 14, 13, 2, 2, 1, 1, 0], "tree_depth": 24}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8334285616874695, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5282589197158813, 0.8036402463912964, 0.6491835117340088, 0.623669445514679, 0.5805093050003052, 0.549017071723938, 0.5324016213417053, 0.5464087128639221, 0.5286443829536438, 0.5408434271812439, 0.5893177390098572, 0.5829457640647888], "accuracy": [0.48989564180374146, 0.7150970697402954, 0.7630431652069092, 0.7680623531341553, 0.7884030938148499, 0.8021397590637207, 0.8117818236351013, 0.8062343001365662, 0.8037247657775879, 0.8131026029586792, 0.8029322624206543, 0.798309326171875], "val_loss": [0.8840105533599854, 0.6100488901138306, 0.5577139258384705, 0.5310035347938538, 0.5121980309486389, 0.5163325071334839, 0.5391774773597717, 0.5559927225112915, 0.5397924780845642, 0.5662766098976135, 0.523039698600769, 0.5746671557426453], "val_accuracy": [0.6990000009536743, 0.7799999713897705, 0.7979999780654907, 0.8080000281333923, 0.8090000152587891, 0.8153333067893982, 0.8296666741371155, 0.8090000152587891, 0.8180000185966492, 0.8086666464805603, 0.8090000152587891, 0.8289999961853027]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [62, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 4, 2, 3, 5], [0, 0, 0, 3, 5], [16, 16, 32], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [1, 3, 3, 6, 8, 1, 4, 1, 4, 2, 5], [0, 4, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 11, 6, 5, 3, 2, 1, 1, 1, 16, 8, 8, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.square(grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.subtract(sigma, alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 3, 3], [2, 1, 0, 2, 2], [64, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 2, 3], [16, 16], [0, 1], [0], [0], [8], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(grad, alpha), tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}, "mapping_values": [1, 10, 5, 5, 1, 10, 6, 4, 1, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 2, 2, 7, 7, 2, 0, 5, 4, 3, 8, 4, 7, 9, 8], [0, 2, 3, 3, 4, 4, 3, 3, 5, 3, 4, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 9, 1, 3, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 49, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, tf.math.add(grad, grad)), grad)), tf.math.add(grad, tf.math.add(tf.math.add(tf.math.negative(grad), grad), tf.math.square(tf.math.pow(tf.math.multiply(tf.math.sqrt(grad), tf.math.pow(tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3039305210113525, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}, "mapping_values": [1, 6, 3, 3, 2, 31, 19, 12, 2, 2, 1, 1, 1, 9, 5, 4, 4], "tree_depth": 22}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 2, 3, 5, 3, 5], [1, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [8, 8, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 4, 1, 2, 0], [62, 99, 69, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 7, 4, 3, 1, 2, 1, 1, 1, 8, 5, 3, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(alpha), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.sqrt(tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]