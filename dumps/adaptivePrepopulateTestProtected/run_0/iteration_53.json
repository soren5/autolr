[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8731428384780884, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2225704193115234, 1.8610665798187256, 1.3842476606369019, 1.0861549377441406, 0.9385121464729309, 0.8327341675758362, 0.7777761220932007, 0.7276793122291565, 0.6878910064697266, 0.6572999358177185, 0.6344352960586548, 0.6068961024284363, 0.5999765992164612, 0.5776060819625854, 0.5582082271575928, 0.546576738357544, 0.5361414551734924, 0.5195000767707825, 0.5109263062477112, 0.48686668276786804, 0.4880911409854889, 0.4756658673286438, 0.46912914514541626, 0.4638688564300537, 0.45950791239738464, 0.44711360335350037, 0.44354769587516785, 0.43402132391929626, 0.4263194501399994, 0.4097980856895447, 0.4104958772659302, 0.40011289715766907, 0.39147353172302246, 0.3915761411190033, 0.3923921287059784, 0.37530750036239624, 0.3804079592227936, 0.36905425786972046, 0.3659040033817291, 0.36877304315567017, 0.3570078909397125, 0.35313111543655396, 0.34675341844558716, 0.33896464109420776, 0.3389827013015747, 0.33871176838874817, 0.33350706100463867, 0.3283250033855438, 0.31323564052581787, 0.3116283714771271, 0.3151623606681824, 0.31202390789985657, 0.3050598204135895, 0.3003765642642975, 0.30118778347969055, 0.29280513525009155, 0.28688523173332214, 0.28650298714637756, 0.28035402297973633, 0.28374749422073364, 0.2724553942680359, 0.26732996106147766, 0.25973406434059143], "accuracy": [0.2806762754917145, 0.4950468838214874, 0.5663716793060303, 0.6218464970588684, 0.6680755615234375, 0.6983225345611572, 0.7182670831680298, 0.7371549606323242, 0.7471932172775269, 0.7635715007781982, 0.7617223858833313, 0.7832518815994263, 0.7854973077774048, 0.7915731072425842, 0.7952714562416077, 0.800290584564209, 0.8029322624206543, 0.8140271902084351, 0.8094043135643005, 0.8211596608161926, 0.8234050869941711, 0.8264430165290833, 0.8245938420295715, 0.8327829837799072, 0.8360850811004639, 0.8366134166717529, 0.8348963260650635, 0.8422929644584656, 0.8465195894241333, 0.8521991968154907, 0.8471800088882446, 0.8496896028518677, 0.8551049828529358, 0.8569541573524475, 0.8558974862098694, 0.8609166741371155, 0.8594637513160706, 0.8643507957458496, 0.868049144744873, 0.8625016212463379, 0.8714832663536072, 0.8669924736022949, 0.8766345381736755, 0.8761062026023865, 0.8739928603172302, 0.8753136992454529, 0.8750495314598083, 0.8833707571029663, 0.8828424215316772, 0.8837670087814331, 0.8849557638168335, 0.8877294659614563, 0.8841632604598999, 0.8885219693183899, 0.8894465565681458, 0.8916919827461243, 0.8936732411384583, 0.89552241563797, 0.8924844861030579, 0.8969752788543701, 0.9025228023529053, 0.9027869701385498, 0.9030511379241943], "val_loss": [2.040776252746582, 1.5186010599136353, 1.0568256378173828, 0.8569442629814148, 0.765770673751831, 0.7047602534294128, 0.668488621711731, 0.6292599439620972, 0.604632556438446, 0.5831167101860046, 0.5644158720970154, 0.5474201440811157, 0.5374219417572021, 0.5215351581573486, 0.5143963098526001, 0.49888429045677185, 0.4918160140514374, 0.48043909668922424, 0.4748194217681885, 0.4661966562271118, 0.4584631025791168, 0.45675283670425415, 0.4473205506801605, 0.44607633352279663, 0.436654269695282, 0.4327740967273712, 0.4357436001300812, 0.42010676860809326, 0.42191797494888306, 0.41469424962997437, 0.41400569677352905, 0.4091733396053314, 0.40677422285079956, 0.3998660445213318, 0.4000561833381653, 0.4013848602771759, 0.39268553256988525, 0.38751116394996643, 0.39089590311050415, 0.3845612108707428, 0.38673505187034607, 0.37776753306388855, 0.3789902627468109, 0.38107746839523315, 0.37814822793006897, 0.37636345624923706, 0.37458208203315735, 0.37639087438583374, 0.3689737021923065, 0.37175479531288147, 0.3700505495071411, 0.36756861209869385, 0.37106287479400635, 0.36433809995651245, 0.3610912263393402, 0.3613794445991516, 0.35912442207336426, 0.36111369729042053, 0.3580871522426605, 0.3554951846599579, 0.3552034795284271, 0.36194103956222534, 0.3595460057258606], "val_accuracy": [0.5379999876022339, 0.6446666717529297, 0.6769999861717224, 0.7026666402816772, 0.718999981880188, 0.7480000257492065, 0.749666690826416, 0.7680000066757202, 0.7710000276565552, 0.7786666750907898, 0.7879999876022339, 0.79666668176651, 0.7973333597183228, 0.8076666593551636, 0.8056666851043701, 0.8196666836738586, 0.8273333311080933, 0.8270000219345093, 0.8253333568572998, 0.8333333134651184, 0.8410000205039978, 0.8330000042915344, 0.840666651725769, 0.840666651725769, 0.8486666679382324, 0.8489999771118164, 0.8433333039283752, 0.8489999771118164, 0.8483333587646484, 0.8603333234786987, 0.8553333282470703, 0.8550000190734863, 0.8569999933242798, 0.8610000014305115, 0.8586666584014893, 0.8556666374206543, 0.8600000143051147, 0.8653333187103271, 0.8606666922569275, 0.8629999756813049, 0.8636666536331177, 0.8673333525657654, 0.8659999966621399, 0.8629999756813049, 0.8683333396911621, 0.8723333477973938, 0.8673333525657654, 0.8690000176429749, 0.871666669845581, 0.8726666569709778, 0.8690000176429749, 0.8706666827201843, 0.8690000176429749, 0.8706666827201843, 0.8740000128746033, 0.8743333220481873, 0.875, 0.8769999742507935, 0.8736666440963745, 0.8730000257492065, 0.8756666779518127, 0.8726666569709778, 0.8730000257492065]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 2, 5, 2, 0, 2, 6, 2, 8, 3, 5, 2, 7, 4, 4, 4, 9, 9, 0, 3, 8, 8, 6], [0, 2, 4, 5, 7, 5, 3, 0, 3, 5, 7, 6], [0, 26, 57, 9], [0, 1], [0], [1], [0]], "fitness": -0.8465714454650879, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(tf.math.multiply(beta, tf.math.square(grad))), tf.math.add(grad, tf.math.add(tf.math.pow(tf.math.pow(tf.math.pow(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), tf.math.multiply(sigma, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))))), sigma))), tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(grad, grad))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2926535606384277, 2.1894686222076416, 1.760343313217163, 1.3561121225357056, 1.043173909187317, 0.897820770740509, 0.8311798572540283, 0.8008074760437012, 0.7672170400619507, 0.7234934568405151, 0.6999431848526001, 0.6899250745773315, 0.6470955610275269, 0.6297319531440735, 0.6054887175559998, 0.6020010113716125, 0.5951958894729614, 0.5750716924667358, 0.562343418598175, 0.5465149283409119, 0.5280464291572571, 0.5216953158378601, 0.5151590704917908, 0.5057463645935059, 0.498279869556427, 0.4899252653121948, 0.48337844014167786, 0.47465091943740845, 0.4717099368572235, 0.44399258494377136, 0.449391633272171, 0.43222007155418396, 0.42515963315963745, 0.42283084988594055, 0.42094048857688904, 0.3940633535385132, 0.3923815190792084, 0.3807021975517273, 0.3800855278968811, 0.3855586051940918, 0.36704742908477783, 0.3605214059352875], "accuracy": [0.13155461847782135, 0.31779158115386963, 0.43508124351501465, 0.542728841304779, 0.6469422578811646, 0.6756042838096619, 0.6963412761688232, 0.7077004313468933, 0.7047945857048035, 0.720380425453186, 0.7363624572753906, 0.7323999404907227, 0.7548540234565735, 0.7625148296356201, 0.76542067527771, 0.7676661014556885, 0.7763835787773132, 0.7758552432060242, 0.7828556299209595, 0.7936864495277405, 0.7930260300636292, 0.7886672616004944, 0.7975168228149414, 0.8021397590637207, 0.8010830879211426, 0.8062343001365662, 0.8120459914207458, 0.8103289008140564, 0.8082155585289001, 0.8274996876716614, 0.8245938420295715, 0.824329674243927, 0.832650899887085, 0.835160493850708, 0.8385946154594421, 0.8466516733169556, 0.8475762605667114, 0.8469158411026001, 0.8514066934585571, 0.8479725122451782, 0.8578787446022034, 0.8588033318519592], "val_loss": [2.2463643550872803, 2.0181851387023926, 1.1486719846725464, 0.9062851667404175, 0.7811729907989502, 0.7088196873664856, 0.7123811841011047, 0.7150919437408447, 0.668483316898346, 0.6308196783065796, 0.6016309261322021, 0.5907307267189026, 0.5738702416419983, 0.5562134385108948, 0.5741084218025208, 0.5569723844528198, 0.5457041263580322, 0.5348594188690186, 0.5364090800285339, 0.52541184425354, 0.5080795884132385, 0.5010986328125, 0.5084722638130188, 0.49477455019950867, 0.4821201264858246, 0.4883170425891876, 0.484466552734375, 0.4831407964229584, 0.4756603240966797, 0.46585148572921753, 0.46172118186950684, 0.4517313241958618, 0.4600140452384949, 0.4530213177204132, 0.4436224102973938, 0.44065597653388977, 0.4442179501056671, 0.43929216265678406, 0.43666133284568787, 0.4332379996776581, 0.4254002273082733, 0.4189683496952057], "val_accuracy": [0.4163333475589752, 0.40833333134651184, 0.637333333492279, 0.6826666593551636, 0.7166666388511658, 0.7333333492279053, 0.7269999980926514, 0.715666651725769, 0.7333333492279053, 0.7509999871253967, 0.765333354473114, 0.7699999809265137, 0.7806666493415833, 0.7886666655540466, 0.7896666526794434, 0.7876666784286499, 0.7960000038146973, 0.7953333258628845, 0.796999990940094, 0.8046666383743286, 0.8096666932106018, 0.8166666626930237, 0.8053333163261414, 0.8213333487510681, 0.8240000009536743, 0.8190000057220459, 0.8173333406448364, 0.8213333487510681, 0.8339999914169312, 0.8396666646003723, 0.8346666693687439, 0.8316666483879089, 0.8393333554267883, 0.8433333039283752, 0.8486666679382324, 0.8539999723434448, 0.859666645526886, 0.859000027179718, 0.8553333282470703, 0.856333315372467, 0.8569999933242798, 0.856333315372467]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 35, 23, 12, 4, 2, 1, 1, 0], "tree_depth": 30}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8199999928474426, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5428260564804077, 0.8393544554710388, 0.6874544620513916, 0.616787314414978, 0.585111141204834, 0.547642171382904, 0.49602943658828735, 0.4866209328174591, 0.47158369421958923, 0.49713778495788574, 0.47688281536102295, 0.5107083320617676], "accuracy": [0.48064985871315, 0.7091533541679382, 0.7478536367416382, 0.778761088848114, 0.7910447716712952, 0.7991018295288086, 0.8164047002792358, 0.8289526104927063, 0.8272355198860168, 0.8276317715644836, 0.8278959393501282, 0.8335754871368408], "val_loss": [0.764840841293335, 0.6045330166816711, 0.47509199380874634, 0.4798635244369507, 0.45530545711517334, 0.45170459151268005, 0.4378940165042877, 0.430321604013443, 0.454363077878952, 0.4318855404853821, 0.45087558031082153, 0.45760175585746765], "val_accuracy": [0.737666666507721, 0.7776666879653931, 0.8299999833106995, 0.8299999833106995, 0.8379999995231628, 0.8276666402816772, 0.8610000014305115, 0.8579999804496765, 0.843666672706604, 0.8513333201408386, 0.8583333492279053, 0.8493333458900452]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 1, 0, 2], [39, 88], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 3, 5, 8, 2], [0, 2, 0, 3, 2, 5], [16, 43], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 3, 3, 9, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 39, 99, 66, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 14, 8, 6, 2, 2, 1, 1, 1, 17, 10, 7, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3, 3, 0], [0, 1, 0, 2, 0], [86, 99, 27], [0, 1], [0, 2, 3, 0, 3, 5], [5, 2, 0, 3], [16, 16], [0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 3, 8, 9], [0, 2, 5, 0], [25, 48], [0, 1], [0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 2, 1, 1, 0, 2, 1, 1, 1, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [7.517428874969482, 58.55196762084961, 199.8439483642578, 487.0129699707031, 993.7847900390625, 1796.5198974609375], "accuracy": [0.09932637959718704, 0.09972262382507324, 0.10328886657953262, 0.10302469879388809, 0.10051512718200684, 0.09813763201236725], "val_loss": [20.4660701751709, 95.72470092773438, 265.2243957519531, 577.8748168945312, 1082.19287109375, 1827.13232421875], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 7, 3, 0], [0, 1, 0, 2, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 1, 3], [16, 16], [0, 1], [0], [0], [63], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 9, 4, 8, 4, 2, 4, 7, 7, 2], [0, 3, 0, 3, 0, 0, 3, 1, 2, 0, 1], [16, 30, 96, 99, 59, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 2, 10, 6, 4, 1, 2, 1, 1, 1, 25, 14, 11, 6], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.multiply(tf.math.negative(alpha), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.sqrt(sigma), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(sigma, tf.math.add(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(sigma, alpha), beta)))), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3, 3, 0, 3, 3, 0, 3, 4, 7, 9], [0, 1, 0, 2, 0, 1, 3, 3, 3], [82, 39, 39, 29], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 6, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 2, 4, 1, 4, 2, 8, 1, 6, 5, 2, 1, 4, 6, 3, 3, 2, 9, 1, 5], [0, 0, 0, 0, 0, 0, 3, 1, 2, 0, 5, 5, 1, 5, 4, 7, 7, 3, 2], [16, 99, 34, 99, 40, 1, 8, 54]], "fitness": -0.09285714477300644, "mapping_values": [1, 23, 14, 9, 4, 10, 6, 4, 2, 2, 1, 1, 1, 43, 24, 19, 8], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(alpha), tf.math.multiply(tf.math.pow(grad, grad), tf.math.add(grad, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma)))), tf.math.add(tf.math.sqrt(tf.math.subtract(alpha, beta)), tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(tf.math.pow(tf.math.divide_no_nan(tf.math.multiply(grad, alpha), tf.math.multiply(grad, tf.math.add(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), grad))), grad), tf.math.subtract(tf.math.square(grad), sigma))))), beta)", "other_info": {"loss": [2.31001877784729, 2.3103549480438232, 2.311276912689209, 2.3103487491607666, 2.3109683990478516, 2.3096094131469727], "accuracy": [0.08942015469074249, 0.09219389408826828, 0.08942015469074249, 0.09668471664190292, 0.08717474341392517, 0.09272222965955734], "val_loss": [2.308931589126587, 2.308931589126587, 2.308931589126587, 2.308931589126587, 2.308931589126587, 2.308931589126587], "val_accuracy": [0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076, 0.08900000154972076]}}]