[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8782857060432434, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2223408222198486, 1.8677294254302979, 1.3900049924850464, 1.0884743928909302, 0.9382309913635254, 0.8343884944915771, 0.7743937969207764, 0.730867326259613, 0.6884957551956177, 0.6672142148017883, 0.642200767993927, 0.613347589969635, 0.5957196950912476, 0.5831290483474731, 0.5716698169708252, 0.5557010173797607, 0.5349936485290527, 0.5240837335586548, 0.5115310549736023, 0.5003352761268616, 0.49724429845809937, 0.47983673214912415, 0.47730857133865356, 0.47088995575904846, 0.45563217997550964, 0.4461422860622406, 0.4437936544418335, 0.44179022312164307, 0.4299921989440918, 0.42832890152931213, 0.41618862748146057, 0.40886640548706055, 0.3976075053215027, 0.3972945511341095, 0.38849130272865295, 0.38491305708885193, 0.37701430916786194, 0.3801710903644562, 0.36222967505455017, 0.36256077885627747, 0.3540521264076233, 0.35707831382751465, 0.3479187786579132, 0.3510046899318695, 0.3410279154777527, 0.3374386429786682, 0.3362584412097931, 0.3302253782749176, 0.32478758692741394, 0.31896230578422546, 0.3178652226924896, 0.3157532811164856, 0.3120698034763336, 0.30494531989097595, 0.29787060618400574, 0.2962137460708618, 0.294748991727829], "accuracy": [0.28239333629608154, 0.4764232039451599, 0.5614846348762512, 0.6227710843086243, 0.6679434776306152, 0.7030775547027588, 0.7160216569900513, 0.7368907928466797, 0.7432307600975037, 0.7540615797042847, 0.7691190242767334, 0.7758552432060242, 0.7829877138137817, 0.7891955971717834, 0.7931581139564514, 0.7993659973144531, 0.8038568496704102, 0.811649739742279, 0.8119139075279236, 0.816008448600769, 0.8210275769233704, 0.828820526599884, 0.8251221776008606, 0.832650899887085, 0.8387266993522644, 0.8425571322441101, 0.8366134166717529, 0.8385946154594421, 0.847840428352356, 0.8469158411026001, 0.8462554216384888, 0.8535200357437134, 0.8585391640663147, 0.8582749962806702, 0.8585391640663147, 0.8623695969581604, 0.8627657890319824, 0.8667283058166504, 0.8673887252807617, 0.8668603897094727, 0.8741249442100525, 0.8669924736022949, 0.8747853636741638, 0.8725399374961853, 0.8792761564254761, 0.8772949576377869, 0.8753136992454529, 0.8771628737449646, 0.8798044919967651, 0.8885219693183899, 0.8842953443527222, 0.880729079246521, 0.8861445188522339, 0.889050304889679, 0.8910315632820129, 0.891559898853302, 0.8898428082466125], "val_loss": [2.0389366149902344, 1.510907530784607, 1.039465069770813, 0.8369835019111633, 0.7514064311981201, 0.6922153234481812, 0.6465779542922974, 0.6178603768348694, 0.5883480906486511, 0.5688018202781677, 0.5460255146026611, 0.5292177796363831, 0.5169075727462769, 0.5024429559707642, 0.5007627010345459, 0.4818570613861084, 0.4693952202796936, 0.46280109882354736, 0.4575287401676178, 0.44991442561149597, 0.4404064118862152, 0.4340532720088959, 0.43426331877708435, 0.4252937138080597, 0.4180137515068054, 0.4135172963142395, 0.4139823019504547, 0.4036295711994171, 0.40913477540016174, 0.4035274386405945, 0.39989086985588074, 0.38978976011276245, 0.3948156237602234, 0.3860726058483124, 0.380942165851593, 0.3802822530269623, 0.3802536725997925, 0.37585702538490295, 0.37401729822158813, 0.3728947341442108, 0.3702889680862427, 0.3698953092098236, 0.3638521432876587, 0.3605959117412567, 0.3606213927268982, 0.36103594303131104, 0.3631775677204132, 0.35764485597610474, 0.3585265278816223, 0.35911986231803894, 0.3606799244880676, 0.35029757022857666, 0.35330501198768616, 0.3545980751514435, 0.35659152269363403, 0.3495968282222748, 0.35182881355285645], "val_accuracy": [0.5389999747276306, 0.6553333401679993, 0.687666654586792, 0.7039999961853027, 0.7306666374206543, 0.7519999742507935, 0.7603333592414856, 0.7699999809265137, 0.7826666831970215, 0.7896666526794434, 0.7950000166893005, 0.8063333630561829, 0.8146666884422302, 0.8153333067893982, 0.8199999928474426, 0.8236666917800903, 0.8273333311080933, 0.8393333554267883, 0.8370000123977661, 0.8396666646003723, 0.8473333120346069, 0.8483333587646484, 0.8460000157356262, 0.8533333539962769, 0.8516666889190674, 0.8550000190734863, 0.8483333587646484, 0.8579999804496765, 0.856333315372467, 0.8603333234786987, 0.8550000190734863, 0.8636666536331177, 0.8606666922569275, 0.8629999756813049, 0.8663333058357239, 0.8656666874885559, 0.8643333315849304, 0.8669999837875366, 0.8693333268165588, 0.8669999837875366, 0.8666666746139526, 0.8713333606719971, 0.8723333477973938, 0.8733333349227905, 0.874666690826416, 0.871999979019165, 0.871999979019165, 0.875333309173584, 0.8743333220481873, 0.875, 0.871999979019165, 0.8769999742507935, 0.875, 0.8709999918937683, 0.875, 0.8766666650772095, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 6], [0, 2], [0], [0, 0, 1, 1], [0, 6], [0, 3], [0], [0, 1], [0], [1], [0]], "fitness": -0.8557142615318298, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.291417121887207, 2.1844615936279297, 1.7567051649093628, 1.3290634155273438, 1.052567958831787, 0.9179531931877136, 0.8524484038352966, 0.8184598088264465, 0.7550196051597595, 0.7443311810493469, 0.7115487456321716, 0.6716890931129456, 0.6502248644828796, 0.6275657415390015, 0.6127213835716248, 0.6009201407432556, 0.5816505551338196, 0.5743243098258972, 0.5539616942405701, 0.5401142239570618, 0.5398293733596802, 0.5230919718742371, 0.49612492322921753, 0.4875648021697998, 0.489040732383728, 0.4801299571990967, 0.4639711380004883, 0.4575931131839752, 0.44404518604278564, 0.44471031427383423, 0.4287247657775879, 0.4270797073841095, 0.4228604733943939, 0.4145263433456421, 0.4053071141242981, 0.4053499400615692, 0.3925706744194031, 0.3795062005519867, 0.3774564266204834, 0.3652406334877014, 0.36967015266418457, 0.3638242483139038, 0.3548963665962219, 0.3344578146934509, 0.3328286111354828, 0.33279892802238464, 0.3219490349292755, 0.3249698877334595, 0.31384801864624023], "accuracy": [0.12772421538829803, 0.3319244384765625, 0.44445911049842834, 0.555408775806427, 0.6441685557365417, 0.6696605682373047, 0.6979262828826904, 0.7004358768463135, 0.7125874757766724, 0.7160216569900513, 0.7360982894897461, 0.7471932172775269, 0.7547219395637512, 0.7609298825263977, 0.7700436115264893, 0.7741381525993347, 0.7755910754203796, 0.7802139520645142, 0.7960638999938965, 0.8005547523498535, 0.7975168228149414, 0.8016114234924316, 0.8203672170639038, 0.8169330358505249, 0.8187822103500366, 0.8210275769233704, 0.8269713521003723, 0.8244617581367493, 0.8310658931732178, 0.833179235458374, 0.8348963260650635, 0.8363492488861084, 0.844010055065155, 0.8433496356010437, 0.8455950617790222, 0.8498216867446899, 0.8514066934585571, 0.8518029451370239, 0.8577466607093811, 0.8667283058166504, 0.8588033318519592, 0.8558974862098694, 0.8631620407104492, 0.8692378997802734, 0.8712190985679626, 0.8753136992454529, 0.8774270415306091, 0.8770307898521423, 0.8753136992454529], "val_loss": [2.2446162700653076, 2.0054707527160645, 1.1137628555297852, 0.8608432412147522, 0.7792498469352722, 0.7125177383422852, 0.6740847826004028, 0.6555597186088562, 0.6456418633460999, 0.6127916574478149, 0.5661669373512268, 0.5582661032676697, 0.5493831634521484, 0.5334668159484863, 0.5229251980781555, 0.5050938129425049, 0.4964168667793274, 0.49184855818748474, 0.4835779666900635, 0.4658902883529663, 0.4628385305404663, 0.4555523693561554, 0.44363370537757874, 0.4378642141819, 0.4386829435825348, 0.43495413661003113, 0.4258045256137848, 0.4192979335784912, 0.4199264347553253, 0.4249774217605591, 0.4099063575267792, 0.4150058925151825, 0.4041327238082886, 0.4048312306404114, 0.4016856253147125, 0.4000345766544342, 0.3837769031524658, 0.3832240402698517, 0.3878183662891388, 0.3903043270111084, 0.38175973296165466, 0.37351179122924805, 0.36460790038108826, 0.36892709136009216, 0.3783835172653198, 0.38288459181785583, 0.381852388381958, 0.3729247748851776, 0.37720558047294617], "val_accuracy": [0.4449999928474426, 0.4803333282470703, 0.643666684627533, 0.6913333535194397, 0.706333339214325, 0.7279999852180481, 0.7366666793823242, 0.750333309173584, 0.7360000014305115, 0.7753333449363708, 0.7726666927337646, 0.7826666831970215, 0.7870000004768372, 0.7996666431427002, 0.7953333258628845, 0.8033333420753479, 0.8090000152587891, 0.812666654586792, 0.8116666674613953, 0.8259999752044678, 0.8226666450500488, 0.8306666612625122, 0.8370000123977661, 0.8423333168029785, 0.8416666388511658, 0.8420000076293945, 0.8453333377838135, 0.8460000157356262, 0.8453333377838135, 0.8386666774749756, 0.8486666679382324, 0.8493333458900452, 0.8443333506584167, 0.8423333168029785, 0.8503333330154419, 0.8566666841506958, 0.8573333621025085, 0.8610000014305115, 0.8603333234786987, 0.8579999804496765, 0.8569999933242798, 0.8666666746139526, 0.8690000176429749, 0.8703333139419556, 0.8676666617393494, 0.8673333525657654, 0.8633333444595337, 0.8643333315849304, 0.8633333444595337]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8274285793304443, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.640487551689148, 0.9977599382400513, 0.7949290871620178, 0.7180929183959961, 0.6857426166534424, 0.6447042226791382, 0.6183746457099915, 0.5781282186508179, 0.568742036819458, 0.5479539632797241, 0.5452543497085571, 0.5297572016716003, 0.49510514736175537, 0.50906902551651, 0.5086840391159058, 0.5175979137420654, 0.4840750992298126, 0.5168508887290955, 0.4826572835445404, 0.4936503469944, 0.4832077920436859, 0.5083760619163513, 0.5233055949211121, 0.5486024618148804, 0.5539618730545044, 0.5861831307411194, 0.592083215713501], "accuracy": [0.47629112005233765, 0.6704530715942383, 0.7127195596694946, 0.7339849472045898, 0.7483819723129272, 0.7618544697761536, 0.7744023203849792, 0.7876105904579163, 0.7865539789199829, 0.7957997918128967, 0.8026680946350098, 0.7987055778503418, 0.8177255392074585, 0.8053097128868103, 0.8182538747787476, 0.8164047002792358, 0.8253863453865051, 0.824329674243927, 0.8265751004219055, 0.8203672170639038, 0.8252542614936829, 0.822348415851593, 0.8257825970649719, 0.8128384351730347, 0.8215559124946594, 0.8092722296714783, 0.7946110367774963], "val_loss": [1.0070725679397583, 0.7142409086227417, 0.6380484104156494, 0.6368220448493958, 0.5984699726104736, 0.5713762044906616, 0.5568572878837585, 0.5910899043083191, 0.544093906879425, 0.5279396176338196, 0.5082882046699524, 0.5372744798660278, 0.5631471872329712, 0.5533841252326965, 0.5042157173156738, 0.5284415483474731, 0.5907420516014099, 0.5581048130989075, 0.6570433974266052, 0.5696815848350525, 0.5898234248161316, 0.5744282007217407, 0.6065068244934082, 0.6281288862228394, 0.6067139506340027, 0.7036754488945007, 0.6787154674530029], "val_accuracy": [0.6389999985694885, 0.7423333525657654, 0.7683333158493042, 0.765333354473114, 0.7760000228881836, 0.781000018119812, 0.8059999942779541, 0.7933333516120911, 0.8096666932106018, 0.8183333277702332, 0.8086666464805603, 0.8226666450500488, 0.8046666383743286, 0.8226666450500488, 0.8303333520889282, 0.8223333358764648, 0.8316666483879089, 0.8360000252723694, 0.8246666789054871, 0.8163333535194397, 0.8296666741371155, 0.8379999995231628, 0.8259999752044678, 0.8203333616256714, 0.8206666707992554, 0.8256666660308838, 0.8209999799728394]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [78, 88], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 2, 3, 0, 3, 4, 3, 0, 7, 5, 7, 8, 7, 0, 3, 8, 2, 2, 5, 7, 5, 7, 5, 6, 8, 3, 3, 0], [0, 2, 0, 3, 4, 3, 0, 3, 2, 0, 1, 0, 5, 0, 1, 5, 5], [16, 16, 4, 24, 54, 79], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0], [6, 8, 4, 6, 6, 2, 4, 1, 5, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.11428571492433548, "mapping_values": [1, 9, 5, 4, 2, 45, 28, 17, 6, 2, 1, 1, 1, 14, 7, 7, 4], "tree_depth": 36, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.multiply(grad, tf.math.sqrt(tf.math.add(tf.math.add(grad, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), grad)))), beta)), tf.math.square(tf.math.add(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.math.square(alpha), tf.math.divide_no_nan(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))))))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.multiply(alpha, grad), tf.math.negative(grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(grad, sigma)))", "other_info": {"loss": [2.299459934234619, 2.297626495361328, 2.297426700592041, 2.2983884811401367, 2.2980916500091553, 2.298255443572998], "accuracy": [0.10685510188341141, 0.11649715900421143, 0.10751552134752274, 0.1138555034995079, 0.1150442510843277, 0.10342095047235489], "val_loss": [2.29516339302063, 2.29516339302063, 2.29516339302063, 2.29516339302063, 2.29516339302063, 2.29516339302063], "val_accuracy": [0.11599999666213989, 0.11599999666213989, 0.11599999666213989, 0.11599999666213989, 0.11599999666213989, 0.11599999666213989]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 89], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 1], [16, 16], [0, 1], [9], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 6, 8, 1], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 0, 5], [16, 99, 96, 99, 61, 1, 95]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 1, 1, 0, 1, 26, 14, 12, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.subtract(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), grad)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 4, 3, 5, 3, 9], [0, 1, 0, 2], [83, 99, 27], [0, 1], [0, 2, 3, 0, 3, 5], [0], [16, 16], [0, 0, 1, 0, 0, 1, 0], [2, 7, 9, 4, 9], [0, 2], [0, 34, 0], [1, 1], [3], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 1, 7, 5, 2, 3, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.pow(beta, tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303687334060669, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 2, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 3, 3, 5, 3, 7], [0, 3, 1, 3, 1, 0, 4], [16, 54], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [1, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 0, 4, 1, 1, 2, 0], [16, 99, 96, 35, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 0, 15, 8, 7, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.multiply(tf.math.add(alpha, grad), alpha)), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.subtract(alpha, alpha))))", "other_info": {"loss": [24.149457931518555, 82.28559875488281, 138.61917114257812, 194.96922302246094, 251.68983459472656, 307.99041748046875], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [59.08414077758789, 115.612060546875, 172.1983184814453, 228.83216857910156, 285.3742370605469, 341.9132995605469], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}]