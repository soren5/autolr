[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8614285588264465, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223365306854248, 1.8686076402664185, 1.3968247175216675, 1.0814350843429565, 0.9247242212295532, 0.8247053027153015, 0.760830283164978, 0.7046745419502258, 0.666841447353363, 0.6423100829124451, 0.6167311072349548, 0.5994877219200134, 0.5823672413825989, 0.5559051632881165, 0.535780131816864, 0.5232861638069153, 0.5099491477012634, 0.49698957800865173, 0.4891127347946167, 0.48739680647850037, 0.47731614112854004, 0.45573511719703674, 0.4517419636249542, 0.43929585814476013, 0.4334186315536499, 0.432251513004303, 0.4214300215244293, 0.4110141098499298, 0.4013286530971527, 0.39879563450813293, 0.3844473361968994, 0.38610562682151794, 0.37907642126083374, 0.3746238946914673, 0.3701205849647522, 0.3592768907546997, 0.3608953356742859, 0.3518226742744446, 0.35325735807418823, 0.3430250883102417, 0.33228275179862976, 0.32814428210258484, 0.32126688957214355, 0.3231589198112488, 0.31953009963035583, 0.31755706667900085, 0.3135208487510681, 0.3090682327747345, 0.3092804253101349, 0.30230069160461426, 0.29302898049354553], "accuracy": [0.27077004313468933, 0.4931977391242981, 0.5649187564849854, 0.6240919232368469, 0.6717738509178162, 0.7083608508110046, 0.7317395210266113, 0.739400327205658, 0.7560427784919739, 0.7685906887054443, 0.7819310426712036, 0.7810064554214478, 0.7906485199928284, 0.8010830879211426, 0.8067626357078552, 0.8090080618858337, 0.8161405324935913, 0.8247259259223938, 0.8317263126373291, 0.8261788487434387, 0.8339717388153076, 0.8391229510307312, 0.8418967127799988, 0.8466516733169556, 0.8453308939933777, 0.8449346423149109, 0.848368763923645, 0.8529917001724243, 0.8601241707801819, 0.8593316674232483, 0.8623695969581604, 0.8590674996376038, 0.8652753829956055, 0.8683133125305176, 0.867520809173584, 0.8733324408531189, 0.8741249442100525, 0.873860776424408, 0.8735966086387634, 0.8774270415306091, 0.8825782537460327, 0.8837670087814331, 0.889050304889679, 0.8805969953536987, 0.884691596031189, 0.8887861371040344, 0.8861445188522339, 0.8874653577804565, 0.8908994793891907, 0.8939374089241028, 0.8971073627471924], "val_loss": [2.041306972503662, 1.5225026607513428, 1.0483242273330688, 0.836743950843811, 0.7480577230453491, 0.6904337406158447, 0.6479244232177734, 0.611953854560852, 0.588022768497467, 0.5661346316337585, 0.5513529181480408, 0.5454238057136536, 0.5211511254310608, 0.5130083560943604, 0.4972548484802246, 0.4898284077644348, 0.4835229516029358, 0.47397005558013916, 0.47786930203437805, 0.46403923630714417, 0.45635488629341125, 0.4522162973880768, 0.44339215755462646, 0.44028565287590027, 0.4324561357498169, 0.43904295563697815, 0.4389598071575165, 0.4265936315059662, 0.41872045397758484, 0.4201734960079193, 0.4147512912750244, 0.41452962160110474, 0.408430814743042, 0.40665528178215027, 0.403239369392395, 0.40738368034362793, 0.39911726117134094, 0.4077276885509491, 0.40040844678878784, 0.3953380584716797, 0.39474210143089294, 0.39175984263420105, 0.3944968283176422, 0.3877584636211395, 0.39019879698753357, 0.38511204719543457, 0.38802433013916016, 0.3911374509334564, 0.3869479298591614, 0.38599178194999695, 0.38635489344596863], "val_accuracy": [0.5386666655540466, 0.6613333225250244, 0.687666654586792, 0.7149999737739563, 0.7323333621025085, 0.7536666393280029, 0.7649999856948853, 0.7746666669845581, 0.7856666445732117, 0.7979999780654907, 0.8066666722297668, 0.8009999990463257, 0.8163333535194397, 0.8216666579246521, 0.8253333568572998, 0.8276666402816772, 0.8273333311080933, 0.831333339214325, 0.8320000171661377, 0.8376666903495789, 0.8366666436195374, 0.8379999995231628, 0.8433333039283752, 0.8429999947547913, 0.8493333458900452, 0.8413333296775818, 0.840666651725769, 0.8506666421890259, 0.8479999899864197, 0.847000002861023, 0.8493333458900452, 0.8479999899864197, 0.8519999980926514, 0.8539999723434448, 0.8573333621025085, 0.8529999852180481, 0.8539999723434448, 0.8533333539962769, 0.8526666760444641, 0.8600000143051147, 0.859000027179718, 0.8569999933242798, 0.8586666584014893, 0.8603333234786987, 0.862333357334137, 0.8629999756813049, 0.8586666584014893, 0.8560000061988831, 0.8606666922569275, 0.8583333492279053, 0.8619999885559082]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8471428751945496, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293558120727539, 2.193251609802246, 1.77861487865448, 1.3591796159744263, 1.087485909461975, 0.9520561695098877, 0.8740308284759521, 0.842495322227478, 0.7870168089866638, 0.7628797292709351, 0.7142848372459412, 0.7045832276344299, 0.6584433913230896, 0.641375720500946, 0.6312400102615356, 0.6014358997344971, 0.6002132296562195, 0.591953694820404, 0.5704952478408813, 0.5542289614677429, 0.5464403033256531, 0.5470190048217773, 0.5363654494285583, 0.5227910280227661, 0.5125855207443237, 0.4980677366256714, 0.47337043285369873, 0.4818574786186218, 0.47192278504371643, 0.45563966035842896, 0.45845192670822144], "accuracy": [0.12772421538829803, 0.30986660718917847, 0.43243956565856934, 0.5406154990196228, 0.6296393871307373, 0.6502443552017212, 0.6806234121322632, 0.6848500967025757, 0.6956809163093567, 0.6975300312042236, 0.7201162576675415, 0.7230220437049866, 0.7401928305625916, 0.7541936039924622, 0.7511557340621948, 0.7660810947418213, 0.7791573405265808, 0.7730814814567566, 0.7799497842788696, 0.7858935594558716, 0.7897239327430725, 0.7903843522071838, 0.7979130744934082, 0.8006868362426758, 0.8016114234924316, 0.8124422430992126, 0.8207634687423706, 0.8133667707443237, 0.8169330358505249, 0.8260467648506165, 0.822348415851593], "val_loss": [2.24580717086792, 2.02316951751709, 1.1362239122390747, 0.8386375308036804, 0.728847324848175, 0.6926962733268738, 0.6489545106887817, 0.6310969591140747, 0.6274482011795044, 0.6016169190406799, 0.5801741480827332, 0.5463933348655701, 0.5344405770301819, 0.5221442580223083, 0.5053287744522095, 0.5019066333770752, 0.49142682552337646, 0.47858545184135437, 0.4814372658729553, 0.4744611084461212, 0.4757857322692871, 0.46404972672462463, 0.46390795707702637, 0.45211076736450195, 0.44595417380332947, 0.4331802427768707, 0.4341413974761963, 0.4259231686592102, 0.4213293492794037, 0.42366185784339905, 0.4203701913356781], "val_accuracy": [0.42133334279060364, 0.4399999976158142, 0.6536666750907898, 0.7023333311080933, 0.7296666502952576, 0.7450000047683716, 0.7400000095367432, 0.7633333206176758, 0.7573333382606506, 0.7573333382606506, 0.7699999809265137, 0.7823333144187927, 0.7933333516120911, 0.8050000071525574, 0.8103333115577698, 0.8083333373069763, 0.812666654586792, 0.8209999799728394, 0.8153333067893982, 0.8166666626930237, 0.8203333616256714, 0.828000009059906, 0.8246666789054871, 0.8293333053588867, 0.8289999961853027, 0.8453333377838135, 0.8383333086967468, 0.8410000205039978, 0.8413333296775818, 0.8389999866485596, 0.8393333554267883]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 1, 5, 1, 3, 9, 9, 3, 8, 4, 0, 7], [0, 5, 7, 0, 7], [0, 99, 53, 92], [1], [0], [2], [0]], "fitness": -0.8259999752044678, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.square(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.math.sqrt(tf.math.pow(tf.math.negative(tf.math.add(grad, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.477057933807373, 0.7684032917022705, 0.6408406496047974, 0.5950960516929626, 0.6007362604141235, 0.5424894690513611, 0.5225788354873657, 0.5152396559715271, 0.48247820138931274, 0.5013040900230408, 0.48542121052742004, 0.5028625726699829, 0.5415771007537842], "accuracy": [0.4920089840888977, 0.7349095344543457, 0.7648923397064209, 0.787082314491272, 0.7926297783851624, 0.8104609847068787, 0.813498854637146, 0.8168009519577026, 0.829216718673706, 0.8278959393501282, 0.8252542614936829, 0.8321225643157959, 0.8166688680648804], "val_loss": [0.7343959808349609, 0.6007294654846191, 0.5448587536811829, 0.5091347098350525, 0.4780336022377014, 0.46656444668769836, 0.46403446793556213, 0.4769045412540436, 0.49792903661727905, 0.4961649477481842, 0.5484879612922668, 0.5291347503662109, 0.4871818721294403], "val_accuracy": [0.7316666841506958, 0.7863333225250244, 0.8009999990463257, 0.809333324432373, 0.8293333053588867, 0.8336666822433472, 0.8303333520889282, 0.8396666646003723, 0.8316666483879089, 0.8366666436195374, 0.8266666531562805, 0.8379999995231628, 0.8360000252723694]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 17, 12, 5, 4, 1, 0, 1, 0], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 2, 0, 3], [0, 3, 0, 3, 3, 0], [89, 16, 13], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 9, 8, 0, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 0, 2, 0], [16, 99, 96, 99, 61, 98]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 14, 8, 6, 3, 2, 1, 1, 1, 11, 7, 4, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.negative(tf.math.multiply(grad, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0], [0, 2, 3, 2, 2, 2, 9], [0, 1, 0, 2, 0], [39, 86, 21, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 2, 3, 0, 3, 1], [0, 2, 0, 3], [88, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 8, 8], [2, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 4, 9, 5, 4, 2, 2, 1, 1, 1, 20, 11, 9, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.sqrt(tf.math.sqrt(beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0948355570435524, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 1, 3], [16, 16], [0, 1], [0], [0], [64], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [4, 3, 3, 6, 8, 8, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 0, 2, 1, 1, 1, 7, 3, 4, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.303632974624634, 2.302584648132324, 2.3025851249694824, 2.3025851249694824, 2.3025853633880615, 2.3025851249694824], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 3, 1, 9], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [0, 80], [0, 1], [0, 6, 3, 5, 8, 3, 4, 5, 7], [1, 7, 0, 4, 1, 1], [65, 18], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 9, 4, 7, 4, 9, 6, 9], [1, 7, 2, 6], [0, 96]], "fitness": -0.0925714299082756, "mapping_values": [1, 8, 5, 3, 3, 10, 6, 4, 2, 2, 1, 1, 0, 2, 2, 0, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3102481365203857, 2.3106539249420166, 2.309995174407959, 2.3092823028564453, 2.310654401779175, 2.3095901012420654], "accuracy": [0.08928807079792023, 0.09219389408826828, 0.09179764986038208, 0.09642054885625839, 0.09311848133802414, 0.08836349099874496], "val_loss": [2.3087399005889893, 2.3087399005889893, 2.3087399005889893, 2.3087399005889893, 2.3087399005889893, 2.3087399005889893], "val_accuracy": [0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}]