[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8697142601013184, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2213802337646484, 1.8623462915420532, 1.3967033624649048, 1.0953247547149658, 0.9447097778320312, 0.8352645635604858, 0.7782888412475586, 0.7223109602928162, 0.6877205967903137, 0.6705871820449829, 0.638787031173706, 0.620011031627655, 0.5956602096557617, 0.5756835341453552, 0.563016414642334, 0.5539435148239136, 0.5337815284729004, 0.5222817063331604, 0.5144350528717041, 0.5053791403770447, 0.48726341128349304, 0.48814329504966736, 0.4739106297492981, 0.47146689891815186, 0.4636262357234955, 0.4487249255180359, 0.43989017605781555, 0.43810123205184937, 0.4300936758518219, 0.422832190990448, 0.42197251319885254, 0.40963998436927795, 0.4011319875717163, 0.4039742648601532, 0.3911106288433075, 0.3820650577545166, 0.3704169988632202, 0.36595019698143005, 0.3631504476070404, 0.3654817044734955, 0.3599950671195984, 0.3605976104736328, 0.34751006960868835, 0.34673434495925903, 0.33604758977890015, 0.33490070700645447, 0.3261689841747284, 0.32280388474464417, 0.325305700302124, 0.3083690404891968, 0.3121154010295868, 0.3062214255332947, 0.30665862560272217, 0.30327272415161133, 0.29317912459373474, 0.29112017154693604, 0.2835189700126648, 0.286672443151474, 0.2839948534965515, 0.27480456233024597], "accuracy": [0.2782987654209137, 0.49029189348220825, 0.5588429570198059, 0.6165632009506226, 0.663848876953125, 0.6971337795257568, 0.718399167060852, 0.7374191284179688, 0.752740740776062, 0.7537974119186401, 0.7693831920623779, 0.7740060687065125, 0.7840443849563599, 0.7923656105995178, 0.7967243194580078, 0.8017435073852539, 0.802271842956543, 0.8070268034934998, 0.8140271902084351, 0.8165367841720581, 0.8271034359931946, 0.8247259259223938, 0.8294808864593506, 0.8269713521003723, 0.8335754871368408, 0.8401796221733093, 0.8367455005645752, 0.8387266993522644, 0.8444063067436218, 0.8502179384231567, 0.8445383906364441, 0.8496896028518677, 0.852331280708313, 0.8510104417800903, 0.8619733452796936, 0.8570862412452698, 0.8664641380310059, 0.8648791313171387, 0.872407853603363, 0.8687095642089844, 0.8677849769592285, 0.8681812286376953, 0.8725399374961853, 0.8714832663536072, 0.878879964351654, 0.8725399374961853, 0.8800686597824097, 0.8799365758895874, 0.8776912093162537, 0.8879936337471008, 0.883238673210144, 0.8865407705307007, 0.8865407705307007, 0.8877294659614563, 0.8912957310676575, 0.8934090733528137, 0.8944657444953918, 0.8960506916046143, 0.8953903317451477, 0.9012019634246826], "val_loss": [2.036346912384033, 1.5131560564041138, 1.052426815032959, 0.8472468852996826, 0.755150556564331, 0.6947779655456543, 0.6500601172447205, 0.6140934228897095, 0.5904690623283386, 0.5710721611976624, 0.5495188236236572, 0.5308367609977722, 0.5180416107177734, 0.5027792453765869, 0.49325060844421387, 0.4839431047439575, 0.47692325711250305, 0.46431344747543335, 0.4586063325405121, 0.4507174789905548, 0.44197916984558105, 0.4365563988685608, 0.4314616024494171, 0.4234326183795929, 0.42243555188179016, 0.417631596326828, 0.4147646427154541, 0.4093591570854187, 0.404459685087204, 0.39985325932502747, 0.39282670617103577, 0.3867913484573364, 0.38627734780311584, 0.38189828395843506, 0.3789679706096649, 0.37404513359069824, 0.3692847788333893, 0.3686869442462921, 0.3697282373905182, 0.3666084408760071, 0.36376020312309265, 0.3613426089286804, 0.3610290586948395, 0.3583112359046936, 0.3575139045715332, 0.356682687997818, 0.3514915704727173, 0.3519105613231659, 0.3479926884174347, 0.34987708926200867, 0.3427897095680237, 0.3439500331878662, 0.341099351644516, 0.34252384305000305, 0.34204748272895813, 0.34044304490089417, 0.332248717546463, 0.33608800172805786, 0.3350429832935333, 0.33776870369911194], "val_accuracy": [0.5393333435058594, 0.6586666703224182, 0.6840000152587891, 0.7126666903495789, 0.7379999756813049, 0.7580000162124634, 0.7630000114440918, 0.7806666493415833, 0.781333327293396, 0.7973333597183228, 0.8056666851043701, 0.8059999942779541, 0.8149999976158142, 0.8203333616256714, 0.8276666402816772, 0.8289999961853027, 0.8246666789054871, 0.8343333601951599, 0.8386666774749756, 0.8420000076293945, 0.8456666469573975, 0.8516666889190674, 0.8426666855812073, 0.8516666889190674, 0.8556666374206543, 0.8526666760444641, 0.8560000061988831, 0.8556666374206543, 0.8603333234786987, 0.8600000143051147, 0.8643333315849304, 0.862333357334137, 0.8676666617393494, 0.8656666874885559, 0.8700000047683716, 0.8679999709129333, 0.8690000176429749, 0.8706666827201843, 0.871666669845581, 0.871666669845581, 0.8773333430290222, 0.8743333220481873, 0.8740000128746033, 0.8730000257492065, 0.875, 0.8799999952316284, 0.8733333349227905, 0.8799999952316284, 0.8786666393280029, 0.8786666393280029, 0.8813333511352539, 0.8776666522026062, 0.8826666474342346, 0.8840000033378601, 0.8853333592414856, 0.8846666812896729, 0.8833333253860474, 0.8820000290870667, 0.8830000162124634, 0.8849999904632568]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 3, 8, 6, 6, 2, 3, 2, 2, 0, 2, 6, 7, 3, 6, 1, 2, 1], [0, 6, 7, 3, 0, 7, 7, 0, 3, 5, 3, 6, 5, 3, 0, 6], [0, 78, 47, 90], [0, 1], [0], [1], [0]], "fitness": -0.8437142968177795, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.multiply(tf.math.add(grad, sigma), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.negative(tf.math.add(grad, grad)), tf.math.divide_no_nan(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), sigma), tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.add(sigma, tf.math.subtract(grad, grad))), sigma), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292448043823242, 2.1866087913513184, 1.7649420499801636, 1.3597313165664673, 1.0716445446014404, 0.9276178479194641, 0.8416564464569092, 0.8089603185653687, 0.7550836205482483, 0.7240805625915527, 0.6978575587272644, 0.6618530750274658, 0.6395550966262817, 0.6307885646820068, 0.6182162165641785, 0.5909184813499451, 0.587896466255188, 0.5668407082557678, 0.5581836700439453, 0.5477091073989868, 0.5213207006454468, 0.5277989506721497, 0.4994021952152252, 0.5007104277610779, 0.48161110281944275, 0.47625282406806946, 0.4773745536804199, 0.45187440514564514, 0.4548487961292267, 0.44176340103149414, 0.4361152946949005, 0.43144506216049194, 0.4215714931488037, 0.41066232323646545, 0.39578744769096375, 0.3891178369522095, 0.3821517527103424, 0.39699387550354004, 0.38780704140663147, 0.3690502643585205, 0.37043318152427673, 0.3655162751674652, 0.35570040345191956, 0.3485219180583954, 0.3505568504333496, 0.33577510714530945, 0.33063510060310364, 0.3378554582595825, 0.3419128954410553, 0.3315539062023163, 0.3212100565433502, 0.3239037096500397, 0.3146442174911499], "accuracy": [0.13300752639770508, 0.3292827904224396, 0.4278166592121124, 0.5370492935180664, 0.6357152462005615, 0.6655659675598145, 0.6963412761688232, 0.700171709060669, 0.7199841737747192, 0.7224937081336975, 0.7376832365989685, 0.746268630027771, 0.752740740776062, 0.7580240368843079, 0.7662131786346436, 0.7749306559562683, 0.7798177003860474, 0.7807422876358032, 0.7861577272415161, 0.7947431206703186, 0.8041210174560547, 0.8045172095298767, 0.8039889335632324, 0.8033285140991211, 0.8161405324935913, 0.8161405324935913, 0.8178576231002808, 0.8276317715644836, 0.8235371708869934, 0.8298771381378174, 0.8327829837799072, 0.8345000743865967, 0.837537944316864, 0.8409721255302429, 0.8481045961380005, 0.8500858545303345, 0.8502179384231567, 0.8454629778862, 0.8495575189590454, 0.8556333184242249, 0.859199583530426, 0.8558974862098694, 0.8693699836730957, 0.8647470474243164, 0.863029956817627, 0.8687095642089844, 0.8716153502464294, 0.8689737319946289, 0.8722757697105408, 0.8689737319946289, 0.8750495314598083, 0.8730682730674744, 0.8730682730674744], "val_loss": [2.245124578475952, 2.011461019515991, 1.138827919960022, 0.9156902432441711, 0.7930790781974792, 0.7461130619049072, 0.7027608752250671, 0.6799135208129883, 0.6431280374526978, 0.6243349313735962, 0.6029672026634216, 0.5827646255493164, 0.5605130791664124, 0.5521864295005798, 0.5302009582519531, 0.5373812317848206, 0.5228672027587891, 0.5103635191917419, 0.494549959897995, 0.49196550250053406, 0.5190178155899048, 0.4969257712364197, 0.48580461740493774, 0.49206405878067017, 0.4860140085220337, 0.47004708647727966, 0.47211575508117676, 0.46318578720092773, 0.45526888966560364, 0.4462997317314148, 0.44211408495903015, 0.44989392161369324, 0.46176278591156006, 0.43724608421325684, 0.4440865218639374, 0.4482535421848297, 0.4452314078807831, 0.44304710626602173, 0.42637649178504944, 0.4193134009838104, 0.41632935404777527, 0.4335194528102875, 0.42712417244911194, 0.4364854395389557, 0.4461458623409271, 0.42971453070640564, 0.42763322591781616, 0.4569791257381439, 0.427064448595047, 0.4276598393917084, 0.46357569098472595, 0.44984671473503113, 0.45127370953559875], "val_accuracy": [0.4113333225250244, 0.43433332443237305, 0.6453333497047424, 0.6840000152587891, 0.7116666436195374, 0.7263333201408386, 0.7409999966621399, 0.7483333349227905, 0.7536666393280029, 0.765333354473114, 0.7636666893959045, 0.7833333611488342, 0.7856666445732117, 0.796999990940094, 0.8040000200271606, 0.7993333339691162, 0.8146666884422302, 0.8140000104904175, 0.8259999752044678, 0.8270000219345093, 0.8169999718666077, 0.8273333311080933, 0.8253333568572998, 0.828000009059906, 0.8393333554267883, 0.8376666903495789, 0.8353333473205566, 0.8450000286102295, 0.8456666469573975, 0.846666693687439, 0.8500000238418579, 0.847000002861023, 0.8423333168029785, 0.8510000109672546, 0.8576666712760925, 0.859000027179718, 0.856333315372467, 0.8560000061988831, 0.859333336353302, 0.862333357334137, 0.8656666874885559, 0.8690000176429749, 0.8629999756813049, 0.8693333268165588, 0.8600000143051147, 0.8713333606719971, 0.8600000143051147, 0.874666690826416, 0.8636666536331177, 0.8636666536331177, 0.8683333396911621, 0.8610000014305115, 0.8693333268165588]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 34, 18, 16, 4, 2, 1, 1, 0], "tree_depth": 25}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0], [0, 9], [0], [0], [1], [0], [2], [0]], "fitness": -0.8168571591377258, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.545393943786621, 0.8003291487693787, 0.6603769063949585, 0.5886800289154053, 0.5360819101333618, 0.5038393139839172, 0.504482090473175, 0.5042649507522583, 0.4716019034385681, 0.49184778332710266, 0.5369717478752136, 0.5371416807174683], "accuracy": [0.48012152314186096, 0.7191916704177856, 0.7613261342048645, 0.7880068421363831, 0.8084797263145447, 0.8240655064582825, 0.8247259259223938, 0.8245938420295715, 0.8342359066009521, 0.8345000743865967, 0.8290846943855286, 0.817989706993103], "val_loss": [0.7706152200698853, 0.6537542343139648, 0.5398340821266174, 0.5069143176078796, 0.4952011704444885, 0.5145079493522644, 0.5084286332130432, 0.49979472160339355, 0.5415830016136169, 0.5808149576187134, 0.6184020042419434, 0.5819362998008728], "val_accuracy": [0.7166666388511658, 0.7689999938011169, 0.8009999990463257, 0.8100000023841858, 0.8339999914169312, 0.8213333487510681, 0.8363333344459534, 0.8286666870117188, 0.8226666450500488, 0.8193333148956299, 0.8199999928474426, 0.8213333487510681]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [58, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 8, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 3, 1, 4, 1, 8], [0, 0, 0, 3, 0, 4, 3, 1, 4, 0], [68, 99, 96, 99, 61, 1]], "fitness": -0.1071428582072258, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [1.862340072028398e+28, 2.6180573107438135e+28, 2.5298236709045805e+28, 2.6610018031840577e+28, 2.627851262710961e+28, 2.6238823498004332e+28], "accuracy": [0.09140139818191528, 0.09906221181154251, 0.08942015469074249, 0.09206181764602661, 0.09034473448991776, 0.09272222965955734], "val_loss": [2.4967576607915273e+28, 2.4967576607915273e+28, 2.4967576607915273e+28, 2.4967576607915273e+28, 2.4967576607915273e+28, 2.4967576607915273e+28], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 9, 6, 8, 1, 4, 1, 4, 2, 8], [1, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 58, 99, 61, 39]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3050150871276855, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}, "mapping_values": [1, 7, 4, 3, 2, 10, 6, 4, 2, 2, 1, 1, 1, 8, 5, 3, 3], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 9], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [4, 2, 3, 0, 3, 5], [1, 2, 0, 1, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 0, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(alpha), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(grad, tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))))), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [41.72749328613281, 67.35961151123047, 78.93475341796875, 87.49971771240234, 94.012939453125, 99.79863739013672], "accuracy": [0.09800554811954498, 0.09945846349000931, 0.09985470771789551, 0.09932637959718704, 0.09998679161071777, 0.10011887550354004], "val_loss": [60.958824157714844, 74.38035583496094, 83.72212982177734, 91.16925811767578, 97.485107421875, 103.02962493896484], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}, "mapping_values": [1, 7, 5, 2, 2, 11, 6, 5, 1, 2, 1, 1, 1, 11, 6, 5, 3], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 1, 3, 1, 3, 6, 6, 5, 6, 9], [0, 0, 1, 1, 2, 3, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1, 1], [0, 2], [0, 5], [0], [0, 1], [8], [4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 10, 7, 3, 2, 1, 1, 1, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, alpha)), grad), tf.math.divide_no_nan(tf.math.square(tf.math.divide_no_nan(grad, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]