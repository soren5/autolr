[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8688571453094482, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222011089324951, 1.863661289215088, 1.3843926191329956, 1.0957657098770142, 0.9364048838615417, 0.8306562900543213, 0.7677940726280212, 0.7257496118545532, 0.6945669054985046, 0.6553487777709961, 0.6271522045135498, 0.610968291759491, 0.5810785889625549, 0.5801180005073547, 0.5627800822257996, 0.5483220815658569, 0.5225193500518799, 0.5138949155807495, 0.5016251802444458, 0.4902700185775757, 0.4868725538253784, 0.47825315594673157, 0.4645010232925415, 0.4586222171783447, 0.44690173864364624, 0.43843337893486023, 0.42986243963241577, 0.43106499314308167, 0.4151700437068939, 0.4090231657028198, 0.3980614244937897, 0.4041615128517151, 0.39496180415153503, 0.379332035779953, 0.372211754322052, 0.370331734418869, 0.3663797080516815, 0.3597513735294342, 0.35133203864097595, 0.35116109251976013, 0.34496042132377625, 0.3428637385368347, 0.33860111236572266, 0.33237963914871216, 0.3212513327598572, 0.3143567740917206, 0.3162190914154053, 0.30962222814559937, 0.3106881082057953, 0.2975759208202362, 0.2962828278541565, 0.29153525829315186, 0.28885728120803833, 0.2894112765789032, 0.27887558937072754, 0.2766675353050232, 0.27564987540245056, 0.2741490602493286], "accuracy": [0.2731475234031677, 0.48751816153526306, 0.5651829242706299, 0.617751955986023, 0.6557918190956116, 0.7058512568473816, 0.7230220437049866, 0.7397965788841248, 0.7427024245262146, 0.7580240368843079, 0.7712323069572449, 0.7781006693840027, 0.7847048044204712, 0.7903843522071838, 0.7942147850990295, 0.7955356240272522, 0.8090080618858337, 0.8146876096725464, 0.816008448600769, 0.8187822103500366, 0.8264430165290833, 0.8244617581367493, 0.8378021121025085, 0.8296129703521729, 0.8385946154594421, 0.8404437899589539, 0.8467837572097778, 0.8429533839225769, 0.8491612672805786, 0.8516708612442017, 0.8577466607093811, 0.8558974862098694, 0.8580108284950256, 0.8632941246032715, 0.8665962219238281, 0.8689737319946289, 0.8709549307823181, 0.8673887252807617, 0.8720116019248962, 0.8733324408531189, 0.8746532797813416, 0.8776912093162537, 0.8809932470321655, 0.8804649114608765, 0.8862766027450562, 0.8883898854255676, 0.8874653577804565, 0.8891823887825012, 0.8878615498542786, 0.8957865834236145, 0.8924844861030579, 0.8943336606025696, 0.89552241563797, 0.8980319499969482, 0.9001452922821045, 0.8980319499969482, 0.9012019634246826, 0.8993527889251709], "val_loss": [2.036442518234253, 1.5127884149551392, 1.0382729768753052, 0.8329195380210876, 0.7466498017311096, 0.6884111166000366, 0.6454476714134216, 0.6099539995193481, 0.5866585373878479, 0.5735398530960083, 0.5472217798233032, 0.5312226414680481, 0.5173277258872986, 0.5051016807556152, 0.4938026964664459, 0.49005627632141113, 0.4760041832923889, 0.4691659212112427, 0.4629938006401062, 0.45519670844078064, 0.4531117379665375, 0.4426218569278717, 0.4360572099685669, 0.4304744005203247, 0.42585253715515137, 0.4205421209335327, 0.41595929861068726, 0.41208016872406006, 0.4056050479412079, 0.40359407663345337, 0.4008312523365021, 0.3952426612377167, 0.39338597655296326, 0.38807031512260437, 0.39149463176727295, 0.3857143223285675, 0.38595935702323914, 0.38258397579193115, 0.37985673546791077, 0.3807752728462219, 0.3780614137649536, 0.3756527900695801, 0.3785170912742615, 0.370936781167984, 0.3681606352329254, 0.36740735173225403, 0.3652191162109375, 0.36199429631233215, 0.3615157902240753, 0.3613308072090149, 0.358763724565506, 0.36057665944099426, 0.35836148262023926, 0.36184537410736084, 0.356468141078949, 0.3566686511039734, 0.3541375994682312, 0.3582117557525635], "val_accuracy": [0.5189999938011169, 0.6523333191871643, 0.6813333630561829, 0.7086666822433472, 0.734000027179718, 0.7480000257492065, 0.7603333592414856, 0.7730000019073486, 0.7826666831970215, 0.7839999794960022, 0.7953333258628845, 0.8046666383743286, 0.809333324432373, 0.8176666498184204, 0.824999988079071, 0.8199999928474426, 0.8273333311080933, 0.8243333101272583, 0.8333333134651184, 0.8333333134651184, 0.8303333520889282, 0.8413333296775818, 0.8399999737739563, 0.8450000286102295, 0.8473333120346069, 0.8496666550636292, 0.8506666421890259, 0.8533333539962769, 0.8560000061988831, 0.859666645526886, 0.8529999852180481, 0.859000027179718, 0.859000027179718, 0.862666666507721, 0.8606666922569275, 0.8610000014305115, 0.8636666536331177, 0.8613333106040955, 0.8650000095367432, 0.8616666793823242, 0.859666645526886, 0.8663333058357239, 0.8619999885559082, 0.8633333444595337, 0.8683333396911621, 0.8713333606719971, 0.871666669845581, 0.8663333058357239, 0.8723333477973938, 0.8703333139419556, 0.8736666440963745, 0.871666669845581, 0.8740000128746033, 0.8650000095367432, 0.871999979019165, 0.8679999709129333, 0.8730000257492065, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 5, 8, 2, 2, 3, 2, 5, 9, 6, 7, 1, 3, 6, 3, 0], [0, 3, 5, 3, 1, 0, 5, 3, 1, 1], [0, 32, 92], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 4, 5, 3, 8, 6, 5, 7], [0, 6, 7, 0, 0, 4], [0, 37, 23], [0, 1], [0], [1], [0]], "fitness": -0.8514285683631897, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.add(tf.math.add(tf.math.multiply(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.subtract(grad, grad)), grad)), alpha), tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.negative(grad))), alpha)), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(grad), tf.math.divide_no_nan(tf.math.square(tf.math.add(grad, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2932519912719727, 2.186542510986328, 1.764596700668335, 1.3402788639068604, 1.070426344871521, 0.9148833751678467, 0.8411931395530701, 0.8032159209251404, 0.7572743892669678, 0.7385594248771667, 0.7078974843025208, 0.6778845191001892, 0.6548137664794922, 0.6266794204711914, 0.6073294281959534, 0.6023149490356445, 0.5861825346946716, 0.56891930103302, 0.5562992095947266, 0.5463141798973083, 0.5296041369438171, 0.5214840769767761, 0.5151463747024536, 0.4920952022075653, 0.49157819151878357, 0.48116737604141235, 0.4844405949115753, 0.465122252702713, 0.45459017157554626, 0.4484846591949463, 0.4434211552143097, 0.4269062876701355, 0.42517900466918945, 0.4070759117603302, 0.40081921219825745, 0.39892685413360596, 0.38382405042648315, 0.3914961814880371, 0.3896331489086151, 0.37131738662719727, 0.3687264919281006, 0.3622298836708069, 0.3537123203277588, 0.3570602834224701, 0.3478662967681885, 0.3481214940547943, 0.347773939371109, 0.33707815408706665, 0.32419636845588684, 0.3294038772583008, 0.312023401260376, 0.31827375292778015, 0.31045567989349365, 0.30804410576820374, 0.3029216527938843, 0.3171732723712921, 0.29388973116874695, 0.29723015427589417, 0.3051888048648834, 0.27625206112861633, 0.2715091407299042], "accuracy": [0.12759213149547577, 0.33205652236938477, 0.44908201694488525, 0.5439175963401794, 0.6365077495574951, 0.6580372452735901, 0.69673752784729, 0.7030775547027588, 0.7103421092033386, 0.7112666964530945, 0.7309470176696777, 0.7380794882774353, 0.7537974119186401, 0.7594769597053528, 0.759609043598175, 0.7716285586357117, 0.7758552432060242, 0.7755910754203796, 0.7907806038856506, 0.7957997918128967, 0.7928939461708069, 0.8016114234924316, 0.805177628993988, 0.816008448600769, 0.8076872229576111, 0.8165367841720581, 0.8228767514228821, 0.824329674243927, 0.8278959393501282, 0.8236692547798157, 0.8259146809577942, 0.8363492488861084, 0.8391229510307312, 0.8430854678153992, 0.8465195894241333, 0.8459912538528442, 0.8561616539955139, 0.8496896028518677, 0.8524633646011353, 0.863029956817627, 0.8574824929237366, 0.8574824929237366, 0.8684453964233398, 0.8687095642089844, 0.8659358024597168, 0.8650112152099609, 0.8631620407104492, 0.8683133125305176, 0.8732003569602966, 0.8730682730674744, 0.8811253309249878, 0.874389111995697, 0.8804649114608765, 0.8791441321372986, 0.8824461698532104, 0.8817857503890991, 0.8831065893173218, 0.8853520154953003, 0.8861445188522339, 0.8914278149604797, 0.8901069760322571], "val_loss": [2.245957612991333, 2.0183284282684326, 1.1315842866897583, 0.8756972551345825, 0.7941288948059082, 0.7237434983253479, 0.7117304801940918, 0.6855399012565613, 0.6598145365715027, 0.625826895236969, 0.5931536555290222, 0.572340726852417, 0.5497615337371826, 0.535693347454071, 0.5302149057388306, 0.5239812135696411, 0.5046420097351074, 0.5031887888908386, 0.5045769810676575, 0.4898312985897064, 0.4824705421924591, 0.4827747941017151, 0.4807090759277344, 0.4660496115684509, 0.45945483446121216, 0.4551827013492584, 0.4687010645866394, 0.4492253065109253, 0.44024181365966797, 0.4443514049053192, 0.4481998383998871, 0.4408144950866699, 0.42696866393089294, 0.4300362169742584, 0.43657827377319336, 0.4274698793888092, 0.4182896614074707, 0.430365651845932, 0.41948992013931274, 0.4034082889556885, 0.4014846086502075, 0.41006794571876526, 0.43213969469070435, 0.43258586525917053, 0.43384110927581787, 0.4183891713619232, 0.425041139125824, 0.4276568293571472, 0.43030494451522827, 0.4202899634838104, 0.4290408492088318, 0.4140767455101013, 0.4159473776817322, 0.4068552255630493, 0.4461800158023834, 0.4133012592792511, 0.4244736433029175, 0.4588267505168915, 0.46123266220092773, 0.4436184763908386, 0.43676772713661194], "val_accuracy": [0.4203333258628845, 0.47566667199134827, 0.653333306312561, 0.6930000185966492, 0.7089999914169312, 0.7316666841506958, 0.7350000143051147, 0.7406666874885559, 0.7296666502952576, 0.7609999775886536, 0.7720000147819519, 0.7766666412353516, 0.7839999794960022, 0.8013333082199097, 0.7946666479110718, 0.7833333611488342, 0.8086666464805603, 0.8113333582878113, 0.8056666851043701, 0.8173333406448364, 0.8226666450500488, 0.8223333358764648, 0.8236666917800903, 0.8256666660308838, 0.8339999914169312, 0.8266666531562805, 0.8306666612625122, 0.8393333554267883, 0.8473333120346069, 0.8429999947547913, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8513333201408386, 0.8456666469573975, 0.8526666760444641, 0.8603333234786987, 0.8543333411216736, 0.8566666841506958, 0.8576666712760925, 0.859333336353302, 0.8613333106040955, 0.8640000224113464, 0.8569999933242798, 0.859333336353302, 0.8633333444595337, 0.8643333315849304, 0.8669999837875366, 0.8633333444595337, 0.8666666746139526, 0.8673333525657654, 0.8666666746139526, 0.8696666955947876, 0.8679999709129333, 0.8709999918937683, 0.8740000128746033, 0.8733333349227905, 0.8709999918937683, 0.8676666617393494, 0.8690000176429749, 0.8676666617393494]}, "mapping_values": [1, 10, 5, 5, 3, 26, 16, 10, 3, 15, 9, 6, 3, 2, 1, 1, 0], "tree_depth": 23}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0], [0, 9], [0], [0], [1], [0], [2], [0]], "fitness": -0.836571455001831, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5065529346466064, 0.7796489000320435, 0.7038925290107727, 0.6235043406486511, 0.5828125476837158, 0.5390071272850037, 0.534054696559906, 0.5371758937835693, 0.5119934678077698, 0.5177708268165588, 0.5008435845375061, 0.48372575640678406, 0.4643757939338684, 0.4712459444999695, 0.4436779022216797, 0.45078134536743164, 0.4864215850830078, 0.47409912943840027, 0.4683361053466797, 0.4933715760707855, 0.5205097198486328, 0.49131470918655396, 0.49736422300338745, 0.5447834134101868], "accuracy": [0.4827631711959839, 0.7170783281326294, 0.7441553473472595, 0.78113853931427, 0.7869502305984497, 0.8041210174560547, 0.8057059645652771, 0.8128384351730347, 0.8187822103500366, 0.8112534880638123, 0.8201030492782593, 0.8304054737091064, 0.8383304476737976, 0.8330471515655518, 0.8481045961380005, 0.8510104417800903, 0.8294808864593506, 0.8451988101005554, 0.8508783578872681, 0.8474441766738892, 0.830669641494751, 0.8359529972076416, 0.8388587832450867, 0.8278959393501282], "val_loss": [0.7692626714706421, 0.6305503845214844, 0.5779886245727539, 0.522998571395874, 0.4945434033870697, 0.5039526224136353, 0.49449944496154785, 0.5358859300613403, 0.49472394585609436, 0.5169287323951721, 0.48432502150535583, 0.5132503509521484, 0.5553465485572815, 0.525026798248291, 0.5082400441169739, 0.551992654800415, 0.5768498778343201, 0.48649656772613525, 0.5986297726631165, 0.5494472980499268, 0.5067582130432129, 0.5534783601760864, 0.6034039258956909, 0.5527225732803345], "val_accuracy": [0.7316666841506958, 0.7699999809265137, 0.7979999780654907, 0.8066666722297668, 0.8056666851043701, 0.8209999799728394, 0.8273333311080933, 0.8176666498184204, 0.8159999847412109, 0.8240000009536743, 0.8306666612625122, 0.8289999961853027, 0.843666672706604, 0.8379999995231628, 0.8450000286102295, 0.8376666903495789, 0.8420000076293945, 0.8453333377838135, 0.8473333120346069, 0.843999981880188, 0.8413333296775818, 0.8420000076293945, 0.8330000042915344, 0.8236666917800903]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 3, 3, 1, 2, 0], [96, 99, 96, 58, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.divide_no_nan(sigma, tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [9.404428158103808e+27, 3.097758780818993e+27, 1.7631386179735382e+28, 1.8328565671884118e+28, 9.083273590407482e+27, 2.0691036938777143e+28], "accuracy": [0.1006472036242485, 0.09840179979801178, 0.09853387624025345, 0.09800554811954498, 0.09840179979801178, 0.09840179979801178], "val_loss": [3.3534192609714677e+28, 3.3534192609714677e+28, 3.3534192609714677e+28, 3.3534192609714677e+28, 3.3534192609714677e+28, 3.3534192609714677e+28], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}, "mapping_values": [1, 7, 4, 3, 2, 2, 1, 1, 1, 2, 1, 1, 0, 10, 5, 5, 3], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 1, 5], [0, 1, 0, 2], [65, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [4, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 1, 0, 4, 0, 0, 3, 1, 2, 0], [81, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32))), grad)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 3, 3], [0, 2, 0, 2, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [90], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 4, 4, 1, 4, 2, 8, 1, 2, 1, 2, 7, 8, 4, 0, 7, 5, 5, 2], [0, 3, 1, 4, 0, 0, 3, 1, 2, 3, 6, 4, 5, 4, 2, 7, 5, 2], [16, 99, 29, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 10, 6, 4, 2, 2, 1, 1, 0, 41, 23, 18, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(sigma, tf.math.pow(alpha, grad))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.sqrt(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(sigma, alpha), beta)), tf.math.subtract(tf.math.add(tf.math.add(sigma, tf.math.sqrt(grad)), grad), tf.math.pow(grad, tf.math.negative(grad))))))), beta), tf.math.add(grad, tf.math.square(tf.math.square(tf.math.add(grad, beta)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 2, 4], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 4, 0, 0, 3, 1, 2, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 1, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}]