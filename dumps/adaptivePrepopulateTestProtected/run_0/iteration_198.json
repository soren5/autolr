[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8591428399085999, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.225693941116333, 1.8715931177139282, 1.3901252746582031, 1.105686068534851, 0.9412869811058044, 0.8435462117195129, 0.7809896469116211, 0.7269909381866455, 0.6968371868133545, 0.6643785834312439, 0.6343765258789062, 0.6205251216888428, 0.6046508550643921, 0.5856723189353943, 0.5725235342979431, 0.556382417678833, 0.5369280576705933, 0.5148938298225403, 0.5112279653549194, 0.5020564198493958, 0.49385446310043335, 0.48496606945991516, 0.47531095147132874, 0.4650140106678009, 0.45684516429901123, 0.4514419138431549, 0.4422515034675598, 0.4305611252784729, 0.424645334482193, 0.42379188537597656, 0.40870580077171326, 0.40505456924438477, 0.40360912680625916, 0.4006115198135376, 0.3920608162879944, 0.38175392150878906, 0.37882134318351746, 0.3776606023311615, 0.36333009600639343, 0.3671020567417145, 0.36130452156066895, 0.35495975613594055, 0.34519311785697937, 0.35310661792755127, 0.33339908719062805, 0.33544301986694336, 0.33343133330345154, 0.33234748244285583, 0.3217969536781311, 0.32123416662216187, 0.31288477778434753, 0.2998918294906616], "accuracy": [0.2693171203136444, 0.4908202290534973, 0.561880886554718, 0.6136573553085327, 0.6700568199157715, 0.69673752784729, 0.7194558382034302, 0.7338528633117676, 0.7474573850631714, 0.7586844563484192, 0.772288978099823, 0.7732135653495789, 0.7824593782424927, 0.7877426743507385, 0.7935543656349182, 0.7968564033508301, 0.8090080618858337, 0.8123101592063904, 0.8186501264572144, 0.8235371708869934, 0.8201030492782593, 0.8215559124946594, 0.8318583965301514, 0.832650899887085, 0.8426892161369324, 0.8418967127799988, 0.842028796672821, 0.8454629778862, 0.8529917001724243, 0.8467837572097778, 0.8561616539955139, 0.8549728989601135, 0.8594637513160706, 0.8562937378883362, 0.8585391640663147, 0.8610487580299377, 0.86553955078125, 0.8665962219238281, 0.8720116019248962, 0.867520809173584, 0.871879518032074, 0.8766345381736755, 0.874389111995697, 0.8746532797813416, 0.8850878477096558, 0.8813894987106323, 0.8828424215316772, 0.8823140859603882, 0.8874653577804565, 0.8862766027450562, 0.8865407705307007, 0.893541157245636], "val_loss": [2.045325994491577, 1.522538423538208, 1.054008960723877, 0.8497561812400818, 0.7615755796432495, 0.7090495824813843, 0.6626870036125183, 0.6282297372817993, 0.6017641425132751, 0.5874376893043518, 0.5589283108711243, 0.5505669713020325, 0.5314708948135376, 0.5336197018623352, 0.5130086541175842, 0.4988676905632019, 0.48795628547668457, 0.4733771085739136, 0.4703598618507385, 0.46643388271331787, 0.45367932319641113, 0.45464789867401123, 0.44643911719322205, 0.441120445728302, 0.4363727271556854, 0.429675817489624, 0.4262388050556183, 0.41685694456100464, 0.4174184501171112, 0.41417479515075684, 0.40948477387428284, 0.4082503318786621, 0.4015013873577118, 0.400840163230896, 0.39488619565963745, 0.3936147391796112, 0.3964993357658386, 0.3913173973560333, 0.38851937651634216, 0.3814413547515869, 0.38259756565093994, 0.3865891396999359, 0.38090723752975464, 0.3798570930957794, 0.37894466519355774, 0.3797738552093506, 0.3709322214126587, 0.36886340379714966, 0.37914159893989563, 0.36514419317245483, 0.3659432828426361, 0.3644140660762787], "val_accuracy": [0.5206666588783264, 0.6543333530426025, 0.6740000247955322, 0.6940000057220459, 0.7239999771118164, 0.7416666746139526, 0.7516666650772095, 0.7609999775886536, 0.777999997138977, 0.7743333578109741, 0.7913333177566528, 0.7986666560173035, 0.8046666383743286, 0.7950000166893005, 0.8196666836738586, 0.8243333101272583, 0.8196666836738586, 0.8306666612625122, 0.8309999704360962, 0.8346666693687439, 0.8333333134651184, 0.8403333425521851, 0.8386666774749756, 0.8443333506584167, 0.847000002861023, 0.843666672706604, 0.8516666889190674, 0.856333315372467, 0.856333315372467, 0.8543333411216736, 0.8566666841506958, 0.8579999804496765, 0.8619999885559082, 0.8606666922569275, 0.8636666536331177, 0.8606666922569275, 0.8566666841506958, 0.8583333492279053, 0.8616666793823242, 0.8663333058357239, 0.8666666746139526, 0.8633333444595337, 0.8693333268165588, 0.8643333315849304, 0.8666666746139526, 0.8646666407585144, 0.8713333606719971, 0.8696666955947876, 0.8610000014305115, 0.8636666536331177, 0.8700000047683716, 0.8706666827201843]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 0, 1, 1], [0, 7, 5, 0], [0, 3], [0], [0, 1], [0], [1], [0]], "fitness": -0.850857138633728, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293605327606201, 2.1910696029663086, 1.7980412244796753, 1.3354785442352295, 1.0760525465011597, 0.9380756616592407, 0.84273761510849, 0.8164989948272705, 0.789696216583252, 0.7392473816871643, 0.714540421962738, 0.6962215304374695, 0.668868899345398, 0.6522907614707947, 0.623912513256073, 0.6098116636276245, 0.5990692973136902, 0.5852654576301575, 0.5717587471008301, 0.5721628665924072, 0.5632792711257935, 0.5410937666893005, 0.54254150390625, 0.5250664949417114, 0.532568633556366, 0.5103374719619751, 0.49506714940071106, 0.49044957756996155, 0.4850831925868988, 0.4730857014656067, 0.45590347051620483, 0.4565485119819641, 0.45800668001174927, 0.4439111649990082, 0.43600988388061523, 0.4390069842338562, 0.4255577027797699, 0.42561250925064087, 0.4117971360683441, 0.4180530309677124, 0.40837720036506653, 0.38810575008392334, 0.38569876551628113, 0.37731197476387024, 0.3849884867668152, 0.3681219518184662, 0.36889371275901794, 0.36553409695625305, 0.3627786636352539, 0.3685271739959717], "accuracy": [0.12561088800430298, 0.3218861520290375, 0.4201558530330658, 0.5385021567344666, 0.6373002529144287, 0.6556597352027893, 0.6827367544174194, 0.7003037929534912, 0.7005679607391357, 0.7129837274551392, 0.7346453666687012, 0.7288337349891663, 0.7483819723129272, 0.7497028112411499, 0.7598732113838196, 0.7662131786346436, 0.772288978099823, 0.7802139520645142, 0.7887993454933167, 0.78113853931427, 0.789988100528717, 0.8006868362426758, 0.7989697456359863, 0.8004226684570312, 0.7984414100646973, 0.8099326491355896, 0.8153480291366577, 0.817461371421814, 0.8215559124946594, 0.8293488025665283, 0.8318583965301514, 0.8345000743865967, 0.8360850811004639, 0.8327829837799072, 0.8318583965301514, 0.8442742228507996, 0.8446704745292664, 0.8418967127799988, 0.8405758738517761, 0.8471800088882446, 0.8487650156021118, 0.8569541573524475, 0.8533879518508911, 0.8578787446022034, 0.8584070801734924, 0.86118084192276, 0.8607845902442932, 0.8646149635314941, 0.8564258217811584, 0.8565579056739807], "val_loss": [2.2460882663726807, 2.021914005279541, 1.14836585521698, 0.8924036622047424, 0.7589924335479736, 0.7228079438209534, 0.6787461042404175, 0.6660143136978149, 0.632104218006134, 0.6316247582435608, 0.5886688232421875, 0.5724404454231262, 0.5611781477928162, 0.5411367416381836, 0.5410603880882263, 0.5406602621078491, 0.5192070603370667, 0.5200139284133911, 0.512679934501648, 0.5059047937393188, 0.4995022118091583, 0.5053924322128296, 0.49319523572921753, 0.46655967831611633, 0.4706099331378937, 0.46040910482406616, 0.46236035227775574, 0.4539163410663605, 0.4448571801185608, 0.44150400161743164, 0.4324885308742523, 0.4367004930973053, 0.429066002368927, 0.42784082889556885, 0.4415338635444641, 0.4501211643218994, 0.4250715374946594, 0.414022296667099, 0.4138011038303375, 0.4254171550273895, 0.4254755973815918, 0.4086402952671051, 0.4175531268119812, 0.428291916847229, 0.44237950444221497, 0.42894458770751953, 0.4109267294406891, 0.4028843641281128, 0.4077279567718506, 0.3983260989189148], "val_accuracy": [0.4333333373069763, 0.42933332920074463, 0.6470000147819519, 0.6926666498184204, 0.7269999980926514, 0.7413333058357239, 0.7300000190734863, 0.7509999871253967, 0.7486666440963745, 0.7609999775886536, 0.7699999809265137, 0.7776666879653931, 0.793666660785675, 0.796999990940094, 0.7919999957084656, 0.7963333129882812, 0.8096666932106018, 0.8086666464805603, 0.8063333630561829, 0.815666675567627, 0.815666675567627, 0.8140000104904175, 0.815666675567627, 0.8233333230018616, 0.8243333101272583, 0.8323333263397217, 0.8376666903495789, 0.8339999914169312, 0.8379999995231628, 0.8336666822433472, 0.8423333168029785, 0.8389999866485596, 0.8399999737739563, 0.843666672706604, 0.8473333120346069, 0.8483333587646484, 0.8503333330154419, 0.8433333039283752, 0.8516666889190674, 0.8489999771118164, 0.8489999771118164, 0.8536666631698608, 0.8500000238418579, 0.856333315372467, 0.862666666507721, 0.8610000014305115, 0.8573333621025085, 0.856333315372467, 0.8450000286102295, 0.8529999852180481]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 6, 4, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0], [0, 9], [0], [0], [1], [0], [2], [0]], "fitness": -0.8420000076293945, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.61492121219635, 0.8870149850845337, 0.7070091962814331, 0.6317683458328247, 0.5715514421463013, 0.5565558671951294, 0.5213590860366821, 0.48730963468551636, 0.48392024636268616, 0.45777279138565063, 0.4911276698112488, 0.45838841795921326, 0.4684571325778961, 0.4531603455543518, 0.5168620347976685, 0.5640072226524353, 0.5342354774475098], "accuracy": [0.4690265357494354, 0.6896050572395325, 0.7407211661338806, 0.7584202885627747, 0.7753269076347351, 0.7935543656349182, 0.8068947196006775, 0.8125742673873901, 0.8207634687423706, 0.8278959393501282, 0.8240655064582825, 0.8269713521003723, 0.8327829837799072, 0.8449346423149109, 0.819970965385437, 0.821820080280304, 0.8271034359931946], "val_loss": [0.8905439376831055, 0.6315985918045044, 0.5797035098075867, 0.5281389355659485, 0.5055245161056519, 0.5157533288002014, 0.5050554871559143, 0.5178336501121521, 0.480139821767807, 0.5267502665519714, 0.4951828718185425, 0.5070949792861938, 0.5766787528991699, 0.5190100073814392, 0.5637272596359253, 0.5753178596496582, 0.6036527752876282], "val_accuracy": [0.6990000009536743, 0.7630000114440918, 0.7670000195503235, 0.8003333210945129, 0.8190000057220459, 0.8130000233650208, 0.8230000138282776, 0.8236666917800903, 0.8453333377838135, 0.8393333554267883, 0.8456666469573975, 0.8483333587646484, 0.840666651725769, 0.840666651725769, 0.8393333554267883, 0.8446666598320007, 0.8373333215713501]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 7], [0, 3, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [2, 2, 8, 1, 6, 3, 8, 2], [0, 0, 2, 3, 2, 3, 0], [16, 16, 85], [0, 1], [9], [0], [99], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 6, 3, 3, 4, 8, 8, 3, 8], [2, 5, 4, 3, 2, 0], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 2, 1, 1, 0, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303659439086914, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 34], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [4, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 3, 2, 8, 2, 3, 6, 9], [0, 4, 0, 3, 2, 0, 3, 1, 2, 0, 3, 1], [16, 85, 96, 99, 61, 69]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 8, 4, 4, 2, 2, 1, 1, 1, 27, 15, 12, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.multiply(sigma, alpha), beta)), tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma), tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 9, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 2, 3], [16, 17], [1, 0], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 9, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 3, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 10, 6, 4, 1, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303825616836548, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 2, 3, 8, 3, 5], [0, 0, 1, 0, 2], [39, 39, 8], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 2, 3, 1, 6, 3, 7, 2, 4, 9, 5, 5, 8], [4, 2, 0, 3, 5, 2, 2, 5], [0, 27, 16, 0], [0, 1], [0], [0], [99], [1], [0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0]], "fitness": -0.09200000017881393, "mapping_values": [1, 7, 4, 3, 2, 21, 13, 8, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(grad, beta), tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(tf.math.add(tf.math.pow(grad, beta), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.square(beta))), tf.math.square(tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3093440532684326, 2.3106470108032227, 2.311065912246704, 2.310340642929077, 2.3097050189971924, 2.309617757797241], "accuracy": [0.09417514503002167, 0.08902391046285629, 0.08928807079792023, 0.08757099509239197, 0.09351472556591034, 0.09259014576673508], "val_loss": [2.3083672523498535, 2.3083672523498535, 2.3083672523498535, 2.3083672523498535, 2.3083672523498535, 2.3083672523498535], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]