[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2232577800750732, 1.8683713674545288, 1.3909039497375488, 1.0885505676269531, 0.9325019121170044, 0.8381845951080322, 0.7749615907669067, 0.7230215668678284, 0.6914158463478088, 0.6574979424476624, 0.6404489278793335, 0.6031500101089478, 0.5884645581245422, 0.5749733448028564, 0.5602027177810669, 0.5464247465133667, 0.5323486924171448, 0.5212522745132446, 0.5104420781135559, 0.49926164746284485, 0.4893052875995636, 0.4799790680408478, 0.47382548451423645, 0.4668574631214142, 0.45086196064949036, 0.449615478515625, 0.4425220787525177, 0.43339797854423523, 0.4219944179058075, 0.4175056219100952, 0.4139348864555359, 0.4119637906551361, 0.4017915427684784, 0.4024088978767395, 0.3921946585178375, 0.38031432032585144, 0.3785443902015686, 0.37616655230522156, 0.3698992133140564, 0.3623926639556885, 0.3624546229839325, 0.35916510224342346, 0.3505108058452606, 0.34674668312072754, 0.3383950889110565, 0.3351767659187317, 0.3326762616634369, 0.3295612037181854, 0.32245156168937683, 0.3235240876674652, 0.31377944350242615, 0.30497461557388306, 0.30505654215812683, 0.3019163906574249, 0.29702267050743103, 0.2941344082355499, 0.28115949034690857, 0.2870464026927948, 0.2783043384552002, 0.27901434898376465, 0.2719046175479889, 0.2717432379722595], "accuracy": [0.27341169118881226, 0.47906485199928284, 0.566239595413208, 0.6188086271286011, 0.6625280380249023, 0.7009642124176025, 0.7206445932388306, 0.7390040755271912, 0.7478536367416382, 0.7623828053474426, 0.7720248103141785, 0.7814027070999146, 0.7827235460281372, 0.7930260300636292, 0.7976489067077637, 0.8072909712791443, 0.8095363974571228, 0.8165367841720581, 0.8169330358505249, 0.8259146809577942, 0.8235371708869934, 0.8319904804229736, 0.8315942287445068, 0.8384625315666199, 0.8421608805656433, 0.8392550349235535, 0.8391229510307312, 0.8436138033866882, 0.850350022315979, 0.8502179384231567, 0.8537842035293579, 0.8536521196365356, 0.8585391640663147, 0.8565579056739807, 0.8601241707801819, 0.8659358024597168, 0.8632941246032715, 0.8625016212463379, 0.8697662353515625, 0.873860776424408, 0.8679170608520508, 0.8733324408531189, 0.8750495314598083, 0.876370370388031, 0.8774270415306091, 0.8790120482444763, 0.8808611631393433, 0.8841632604598999, 0.8854840993881226, 0.8837670087814331, 0.8874653577804565, 0.8908994793891907, 0.8878615498542786, 0.8926165699958801, 0.891559898853302, 0.8919561505317688, 0.8986923694610596, 0.8928807377815247, 0.8985602855682373, 0.8980319499969482, 0.9009377956390381, 0.9002773761749268], "val_loss": [2.034954786300659, 1.5102976560592651, 1.0375664234161377, 0.8332169055938721, 0.7586173415184021, 0.6960490942001343, 0.6543759703636169, 0.6207343935966492, 0.604860782623291, 0.5758394598960876, 0.5564833283424377, 0.5423628687858582, 0.5245044827461243, 0.516785740852356, 0.505858838558197, 0.4933469593524933, 0.48290616273880005, 0.4780406057834625, 0.4736289083957672, 0.4667108952999115, 0.4547964632511139, 0.45190495252609253, 0.4510738253593445, 0.4337068796157837, 0.4353885054588318, 0.43033114075660706, 0.4230926036834717, 0.4176921248435974, 0.414183109998703, 0.4088519215583801, 0.406796395778656, 0.4030624330043793, 0.39934805035591125, 0.3959849774837494, 0.3936961591243744, 0.39414912462234497, 0.3953377604484558, 0.38816386461257935, 0.3825201690196991, 0.38707324862480164, 0.3835698962211609, 0.3787166476249695, 0.3740202784538269, 0.37357306480407715, 0.37608301639556885, 0.3721776008605957, 0.37521302700042725, 0.3737257122993469, 0.37074020504951477, 0.364646852016449, 0.3636268377304077, 0.3662469983100891, 0.3632115125656128, 0.36097627878189087, 0.3557220995426178, 0.3622669279575348, 0.3583602011203766, 0.3597984313964844, 0.36368390917778015, 0.3592796325683594, 0.3568941354751587, 0.35282161831855774], "val_accuracy": [0.5099999904632568, 0.6499999761581421, 0.6766666769981384, 0.7053333520889282, 0.7206666469573975, 0.7480000257492065, 0.7509999871253967, 0.7630000114440918, 0.7756666541099548, 0.7760000228881836, 0.7903333306312561, 0.7973333597183228, 0.8036666512489319, 0.7986666560173035, 0.815666675567627, 0.8169999718666077, 0.8173333406448364, 0.8206666707992554, 0.8246666789054871, 0.8266666531562805, 0.8296666741371155, 0.82833331823349, 0.8339999914169312, 0.8423333168029785, 0.8383333086967468, 0.8366666436195374, 0.8396666646003723, 0.8493333458900452, 0.8506666421890259, 0.8523333072662354, 0.8486666679382324, 0.8529999852180481, 0.856333315372467, 0.8553333282470703, 0.8569999933242798, 0.8550000190734863, 0.8516666889190674, 0.8566666841506958, 0.8610000014305115, 0.859000027179718, 0.8610000014305115, 0.8640000224113464, 0.8610000014305115, 0.8643333315849304, 0.8629999756813049, 0.8676666617393494, 0.8636666536331177, 0.8619999885559082, 0.8686666488647461, 0.8686666488647461, 0.8686666488647461, 0.8690000176429749, 0.8693333268165588, 0.8673333525657654, 0.8700000047683716, 0.8669999837875366, 0.8723333477973938, 0.8700000047683716, 0.8713333606719971, 0.8693333268165588, 0.8709999918937683, 0.8713333606719971]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8602856993675232, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.29366397857666, 2.190652847290039, 1.769599199295044, 1.3432402610778809, 1.0718220472335815, 0.9154346585273743, 0.8555389046669006, 0.8142452239990234, 0.7684624195098877, 0.7337854504585266, 0.6996235251426697, 0.6758653521537781, 0.6316609382629395, 0.6128823161125183, 0.6065561175346375, 0.5955231785774231, 0.5846073031425476, 0.5654305219650269, 0.5521727800369263, 0.5464953780174255, 0.5359264612197876, 0.5253324508666992, 0.5164812803268433, 0.5149757266044617, 0.49941179156303406, 0.49636951088905334, 0.49331700801849365, 0.4707808792591095, 0.4730977714061737, 0.47241634130477905, 0.46195662021636963, 0.44470468163490295, 0.4301956593990326, 0.43867287039756775, 0.4320064187049866, 0.4215363562107086, 0.4116348922252655, 0.4066053330898285, 0.39544767141342163, 0.4029502868652344, 0.3976120352745056, 0.38113316893577576, 0.3766435980796814, 0.3778057098388672, 0.36796653270721436, 0.3667130768299103, 0.35333433747291565, 0.3447491526603699, 0.3485507071018219, 0.3343062698841095, 0.330262154340744, 0.33432847261428833, 0.3323085308074951, 0.324739933013916, 0.31518587470054626, 0.3132057189941406, 0.2995019853115082, 0.3062092363834381, 0.30650705099105835, 0.28981393575668335, 0.30238011479377747], "accuracy": [0.13538502156734467, 0.33099988102912903, 0.4341566562652588, 0.5499933958053589, 0.639809787273407, 0.6629242897033691, 0.6915863156318665, 0.6923788189888, 0.7148329019546509, 0.720380425453186, 0.7342491149902344, 0.7528728246688843, 0.7553823590278625, 0.7738739848136902, 0.7696473598480225, 0.7736098170280457, 0.7798177003860474, 0.7878747582435608, 0.7955356240272522, 0.7898560166358948, 0.7991018295288086, 0.8010830879211426, 0.8021397590637207, 0.7992339134216309, 0.8128384351730347, 0.8108572363853455, 0.8127063512802124, 0.8215559124946594, 0.8162726163864136, 0.8189142942428589, 0.8201030492782593, 0.8281601071357727, 0.8432175517082214, 0.8355567455291748, 0.8333113193511963, 0.8426892161369324, 0.8436138033866882, 0.846387505531311, 0.847840428352356, 0.8436138033866882, 0.8498216867446899, 0.8510104417800903, 0.8521991968154907, 0.8555012345314026, 0.8553691506385803, 0.8599920868873596, 0.8656716346740723, 0.8658037185668945, 0.86118084192276, 0.8685774803161621, 0.8685774803161621, 0.8702945709228516, 0.8692378997802734, 0.8669924736022949, 0.8702945709228516, 0.8754457831382751, 0.8820499181747437, 0.8805969953536987, 0.8754457831382751, 0.885219931602478, 0.8786157965660095], "val_loss": [2.246593475341797, 2.021963357925415, 1.14899480342865, 0.8856195211410522, 0.7787726521492004, 0.7217574715614319, 0.6876630783081055, 0.6598265767097473, 0.6294942498207092, 0.6208452582359314, 0.5797865986824036, 0.551792323589325, 0.5363905429840088, 0.5237675309181213, 0.5134141445159912, 0.5027238726615906, 0.5108130574226379, 0.48178938031196594, 0.4898812770843506, 0.47343018651008606, 0.4712546467781067, 0.4678576588630676, 0.46351465582847595, 0.4550809860229492, 0.4457184970378876, 0.44750654697418213, 0.44003215432167053, 0.4459979236125946, 0.4542241096496582, 0.42716413736343384, 0.419908732175827, 0.430483877658844, 0.4162319004535675, 0.4181462824344635, 0.4126126170158386, 0.4152287244796753, 0.4091336131095886, 0.4052574038505554, 0.4059295356273651, 0.40194523334503174, 0.38555416464805603, 0.3847922682762146, 0.4029850363731384, 0.38328999280929565, 0.38435807824134827, 0.38995450735092163, 0.39329108595848083, 0.3839358389377594, 0.3767222464084625, 0.3720400035381317, 0.3810406029224396, 0.3988240957260132, 0.39188894629478455, 0.3835601508617401, 0.37536096572875977, 0.3890438675880432, 0.377892404794693, 0.38510677218437195, 0.3802525997161865, 0.3921806514263153, 0.3847165107727051], "val_accuracy": [0.4033333361148834, 0.4390000104904175, 0.6489999890327454, 0.7003333568572998, 0.7133333086967468, 0.7260000109672546, 0.7493333220481873, 0.7436666488647461, 0.7566666603088379, 0.7526666522026062, 0.7676666378974915, 0.7863333225250244, 0.7973333597183228, 0.8023333549499512, 0.800000011920929, 0.8076666593551636, 0.8003333210945129, 0.815666675567627, 0.8116666674613953, 0.8163333535194397, 0.8173333406448364, 0.8233333230018616, 0.8303333520889282, 0.8293333053588867, 0.8320000171661377, 0.8309999704360962, 0.840666651725769, 0.8339999914169312, 0.8410000205039978, 0.8403333425521851, 0.8420000076293945, 0.8423333168029785, 0.8443333506584167, 0.8410000205039978, 0.8486666679382324, 0.8489999771118164, 0.8533333539962769, 0.8553333282470703, 0.8519999980926514, 0.8613333106040955, 0.859666645526886, 0.8576666712760925, 0.862333357334137, 0.8616666793823242, 0.859000027179718, 0.8706666827201843, 0.8690000176429749, 0.8676666617393494, 0.8700000047683716, 0.8723333477973938, 0.8706666827201843, 0.875333309173584, 0.871999979019165, 0.871666669845581, 0.8769999742507935, 0.8813333511352539, 0.8796666860580444, 0.8759999871253967, 0.8799999952316284, 0.8790000081062317, 0.878000020980835]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8468571305274963, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2202255725860596, 1.8640801906585693, 1.3905926942825317, 1.0954272747039795, 0.9377164244651794, 0.8427716493606567, 0.7683882713317871, 0.7236109972000122, 0.6902679800987244, 0.6623107194900513, 0.632284939289093, 0.6128911375999451, 0.5941797494888306, 0.5839760303497314, 0.5605572462081909, 0.554426372051239, 0.5313124060630798, 0.5325033664703369, 0.5141240358352661, 0.5142927169799805, 0.4849710166454315, 0.48123064637184143, 0.47324326634407043, 0.46344688534736633, 0.4548301696777344, 0.4460739493370056, 0.4394299387931824, 0.4409899413585663, 0.428616464138031, 0.41860824823379517, 0.41367867588996887, 0.39560288190841675, 0.4025942087173462, 0.3884882926940918, 0.38554617762565613, 0.37823325395584106, 0.3718873858451843, 0.3719691038131714, 0.36048394441604614, 0.3657362759113312, 0.3514831066131592], "accuracy": [0.2727513015270233, 0.4842160940170288, 0.5661075115203857, 0.615770697593689, 0.666358470916748, 0.6970016956329346, 0.720380425453186, 0.733060359954834, 0.746268630027771, 0.7593448758125305, 0.7670056819915771, 0.7759873270988464, 0.7891955971717834, 0.7906485199928284, 0.7987055778503418, 0.8009510040283203, 0.8107251524925232, 0.8104609847068787, 0.8156121969223022, 0.8140271902084351, 0.8265751004219055, 0.829216718673706, 0.8314621448516846, 0.8404437899589539, 0.8364813327789307, 0.8454629778862, 0.8450667262077332, 0.8421608805656433, 0.8469158411026001, 0.8516708612442017, 0.8536521196365356, 0.8577466607093811, 0.8558974862098694, 0.8622375130653381, 0.8618412613868713, 0.86553955078125, 0.8698983192443848, 0.8671245574951172, 0.8746532797813416, 0.8659358024597168, 0.8770307898521423], "val_loss": [2.038471221923828, 1.514532446861267, 1.0387336015701294, 0.8268620371818542, 0.7371954917907715, 0.6781729459762573, 0.6359454393386841, 0.599669337272644, 0.5775149464607239, 0.5518746972084045, 0.5328620076179504, 0.5171487927436829, 0.5035435557365417, 0.4899447560310364, 0.4900279939174652, 0.4662436544895172, 0.45928889513015747, 0.4486861526966095, 0.4390043020248413, 0.43834468722343445, 0.42865198850631714, 0.42241767048835754, 0.4158390164375305, 0.4097021222114563, 0.4079928696155548, 0.39564990997314453, 0.4052542448043823, 0.3904167413711548, 0.3872954845428467, 0.38497745990753174, 0.38190463185310364, 0.37656888365745544, 0.37371790409088135, 0.37389126420021057, 0.3697635233402252, 0.3673539161682129, 0.3634607195854187, 0.35987338423728943, 0.3601020574569702, 0.3592394292354584, 0.35744670033454895], "val_accuracy": [0.5559999942779541, 0.6623333096504211, 0.6790000200271606, 0.703000009059906, 0.7269999980926514, 0.7440000176429749, 0.7620000243186951, 0.7703333497047424, 0.7889999747276306, 0.7870000004768372, 0.8023333549499512, 0.8036666512489319, 0.8223333358764648, 0.8223333358764648, 0.8203333616256714, 0.8336666822433472, 0.8356666564941406, 0.8379999995231628, 0.840666651725769, 0.843999981880188, 0.8446666598320007, 0.8456666469573975, 0.8493333458900452, 0.8523333072662354, 0.8539999723434448, 0.8539999723434448, 0.8503333330154419, 0.8600000143051147, 0.8586666584014893, 0.8613333106040955, 0.8633333444595337, 0.8569999933242798, 0.8666666746139526, 0.8659999966621399, 0.8636666536331177, 0.8713333606719971, 0.8700000047683716, 0.8669999837875366, 0.8673333525657654, 0.8703333139419556, 0.8696666955947876]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8277142643928528, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.560409426689148, 0.8361347317695618, 0.6897780299186707, 0.6335715055465698, 0.5853742361068726, 0.5484233498573303, 0.512173056602478, 0.4888751208782196, 0.48498886823654175, 0.4956705570220947, 0.4825204908847809, 0.4954606294631958, 0.48528537154197693, 0.4984394609928131, 0.5173652172088623, 0.5378653407096863, 0.5369216799736023, 0.5273926854133606, 0.5743327736854553, 0.5359249114990234], "accuracy": [0.4842160940170288, 0.7169462442398071, 0.7519482374191284, 0.7613261342048645, 0.7853652238845825, 0.802271842956543, 0.8175934553146362, 0.8215559124946594, 0.8241975903511047, 0.8240655064582825, 0.8214238286018372, 0.8224804997444153, 0.8318583965301514, 0.8224804997444153, 0.8198388814926147, 0.8239334225654602, 0.8166688680648804, 0.8187822103500366, 0.816008448600769, 0.8128384351730347], "val_loss": [0.8396787643432617, 0.6063936948776245, 0.5458893179893494, 0.5110316872596741, 0.4966561198234558, 0.4603781998157501, 0.4663674235343933, 0.4945090413093567, 0.48485180735588074, 0.5050424933433533, 0.5083107352256775, 0.5401087403297424, 0.5248290300369263, 0.556742787361145, 0.5640527606010437, 0.5364725589752197, 0.624017596244812, 0.5761107206344604, 0.6085100173950195, 0.5371221303939819], "val_accuracy": [0.7379999756813049, 0.777999997138977, 0.7866666913032532, 0.8076666593551636, 0.8109999895095825, 0.8289999961853027, 0.8240000009536743, 0.8230000138282776, 0.8320000171661377, 0.8240000009536743, 0.8186666369438171, 0.8330000042915344, 0.8169999718666077, 0.8273333311080933, 0.8370000123977661, 0.8333333134651184, 0.8166666626930237, 0.8299999833106995, 0.8209999799728394, 0.8190000057220459]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 67], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [2, 3, 3, 6, 8, 1, 6, 1, 4, 2, 2, 1, 2, 6, 7, 5, 9, 5], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0, 6, 2, 6, 2], [16, 99, 96, 99, 61, 1, 36]], "fitness": -0.12142857164144516, "mapping_values": [1, 6, 3, 3, 2, 6, 4, 2, 1, 2, 1, 1, 1, 32, 18, 14, 7], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma))), tf.math.add(tf.math.subtract(grad, beta), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(grad))))))), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.square(beta))", "other_info": {"loss": [2.3106689453125, 2.3094820976257324, 2.308948278427124, 2.3098366260528564, 2.309619903564453, 2.308600902557373, 2.3086345195770264, 2.308748483657837, 2.306234359741211, 2.3060429096221924, 2.3034918308258057, 2.3043572902679443, 2.3051178455352783, 2.305373430252075], "accuracy": [0.09074098616838455, 0.09166556596755981, 0.09747721254825592, 0.0948355570435524, 0.0870426595211029, 0.09179764986038208, 0.09351472556591034, 0.09166556596755981, 0.10328886657953262, 0.10962884873151779, 0.11081759631633759, 0.10513802617788315, 0.09945846349000931, 0.09166556596755981], "val_loss": [2.308790922164917, 2.3088014125823975, 2.308727264404297, 2.3088698387145996, 2.30838942527771, 2.3084137439727783, 2.3087527751922607, 2.3071305751800537, 2.3062732219696045, 2.305110216140747, 2.303208112716675, 2.304046630859375, 2.3049087524414062, 2.30526065826416], "val_accuracy": [0.08900000154972076, 0.08866667002439499, 0.09000000357627869, 0.09000000357627869, 0.09533333033323288, 0.09733333438634872, 0.10433333367109299, 0.11533333361148834, 0.12666666507720947, 0.11766666918992996, 0.11033333092927933, 0.09933333098888397, 0.09133332967758179, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0], [0, 2, 3, 0, 3, 8, 2, 2, 9, 7, 3, 3, 6, 6, 2, 6, 2, 0, 1, 2, 2, 6, 6, 7, 9], [2, 1, 2, 2, 0, 2, 1, 2, 0, 0, 2, 1, 0, 2, 1, 3, 0, 2], [39, 39, 4, 53, 16, 32, 78], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 5], [0, 2, 0, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], [6, 3, 0, 6, 8, 1, 4, 1, 4, 2, 8, 7, 4, 9], [0, 0, 0, 3, 0, 0, 4, 0, 2, 0], [27, 99, 39, 99, 61, 1, 41, 80]], "fitness": -0.10000000149011612, "mapping_values": [1, 43, 25, 18, 7, 10, 6, 4, 2, 2, 1, 1, 1, 24, 14, 10, 8], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(grad, tf.math.sqrt(tf.math.add(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.multiply(alpha, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad), tf.math.divide_no_nan(alpha, grad)), tf.math.divide_no_nan(tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), grad), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), grad))), tf.math.sqrt(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), beta)))), tf.math.pow(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 9], [0], [0], [0, 1], [0], [0], [99], [0, 1, 1], [2], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0, 98]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 3, 3, 0, 1, 2, 1, 1, 1, 3, 1, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3031673431396484, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [74, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 1, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [43], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 1, 5, 6, 1, 4, 2, 4, 2, 8], [0, 0, 0, 3, 0, 0, 1, 1, 4, 0], [16, 66, 96, 99, 48, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 4, 2, 0, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.math.negative(grad), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), alpha))))), alpha), tf.math.add(tf.math.sqrt(grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}]