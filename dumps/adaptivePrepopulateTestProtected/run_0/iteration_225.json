[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8605714440345764, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221614122390747, 1.866286039352417, 1.385839819908142, 1.0920559167861938, 0.953921377658844, 0.8446283936500549, 0.7772813439369202, 0.7257686853408813, 0.6873136758804321, 0.6488090753555298, 0.6319097280502319, 0.611762285232544, 0.5985080003738403, 0.5719925165176392, 0.5543302297592163, 0.5495477318763733, 0.5241429209709167, 0.5172610878944397, 0.5126535892486572, 0.49610716104507446, 0.47918903827667236, 0.4697834253311157, 0.46475404500961304, 0.45565083622932434, 0.4518953263759613, 0.43965214490890503, 0.43546029925346375, 0.4253557622432709, 0.42292124032974243, 0.40806278586387634, 0.40605396032333374, 0.4010094106197357, 0.3933704197406769, 0.38307997584342957, 0.3818453848361969, 0.3763915002346039, 0.3730338513851166, 0.36568859219551086, 0.3666483759880066, 0.36042484641075134, 0.35450679063796997, 0.34021395444869995, 0.3447567820549011, 0.3356531858444214, 0.32851412892341614, 0.32429105043411255, 0.31815028190612793, 0.31931543350219727, 0.31499361991882324, 0.31365305185317993, 0.3029116988182068, 0.30413639545440674, 0.2929953634738922, 0.2857372760772705, 0.2835303843021393, 0.287054181098938, 0.27532729506492615, 0.28041204810142517, 0.26728564500808716, 0.2670608460903168, 0.26018381118774414, 0.25406330823898315, 0.253583163022995, 0.25182226300239563, 0.24303755164146423, 0.24752621352672577, 0.23702776432037354, 0.24027389287948608], "accuracy": [0.2775062620639801, 0.49372607469558716, 0.5704662799835205, 0.6197332143783569, 0.6650376319885254, 0.6960771083831787, 0.7253995537757874, 0.7364945411682129, 0.7495707273483276, 0.7638356685638428, 0.7693831920623779, 0.7803460359573364, 0.7880068421363831, 0.7968564033508301, 0.8014793395996094, 0.8038568496704102, 0.816008448600769, 0.8165367841720581, 0.8162726163864136, 0.8257825970649719, 0.8286884427070618, 0.8327829837799072, 0.8384625315666199, 0.8404437899589539, 0.8409721255302429, 0.845859169960022, 0.8473120927810669, 0.8467837572097778, 0.8486329317092896, 0.8535200357437134, 0.8573504090309143, 0.858671247959137, 0.8581429123878479, 0.8618412613868713, 0.8605204224586487, 0.8640866279602051, 0.868049144744873, 0.8692378997802734, 0.8696341514587402, 0.872407853603363, 0.8771628737449646, 0.8751816153526306, 0.8766345381736755, 0.8787478804588318, 0.8844274282455444, 0.8817857503890991, 0.8861445188522339, 0.8825782537460327, 0.8870691061019897, 0.8877294659614563, 0.8906353116035461, 0.8934090733528137, 0.8956544995307922, 0.8975036144256592, 0.8969752788543701, 0.8961827754974365, 0.8993527889251709, 0.89988112449646, 0.9029190540313721, 0.9046360850334167, 0.9058248400688171, 0.9097873568534851, 0.9100515246391296, 0.9099194407463074, 0.9121648669242859, 0.9140139818191528, 0.9132214784622192, 0.910711944103241], "val_loss": [2.0359010696411133, 1.5060192346572876, 1.0304880142211914, 0.8188973665237427, 0.7302640676498413, 0.6752803921699524, 0.6316477656364441, 0.5943368077278137, 0.56880784034729, 0.5478776097297668, 0.526640772819519, 0.5159904360771179, 0.5009493231773376, 0.49447494745254517, 0.47621941566467285, 0.47063326835632324, 0.4555234909057617, 0.4490533769130707, 0.4495561420917511, 0.4338933229446411, 0.42608898878097534, 0.42448025941848755, 0.4205496907234192, 0.41377556324005127, 0.4079766571521759, 0.4070340692996979, 0.39437052607536316, 0.3945733308792114, 0.3902333676815033, 0.38250601291656494, 0.38315317034721375, 0.37728384137153625, 0.3732350170612335, 0.36934155225753784, 0.36320939660072327, 0.364523321390152, 0.36076611280441284, 0.3624430000782013, 0.3577965497970581, 0.34724435210227966, 0.34942400455474854, 0.3517187535762787, 0.3449007570743561, 0.34340551495552063, 0.3378438353538513, 0.33881980180740356, 0.3399898409843445, 0.33507809042930603, 0.3338085412979126, 0.32932767271995544, 0.3278157413005829, 0.3285425305366516, 0.3242993950843811, 0.3252564072608948, 0.3223066031932831, 0.3203763961791992, 0.32280540466308594, 0.31981518864631653, 0.3186926543712616, 0.319291353225708, 0.3159336447715759, 0.31330937147140503, 0.3159061074256897, 0.31290608644485474, 0.31398823857307434, 0.31186172366142273, 0.31455501914024353, 0.3120546042919159], "val_accuracy": [0.5746666789054871, 0.6576666831970215, 0.6926666498184204, 0.7203333377838135, 0.7429999709129333, 0.7549999952316284, 0.7720000147819519, 0.7763333320617676, 0.7929999828338623, 0.7950000166893005, 0.7996666431427002, 0.8109999895095825, 0.8166666626930237, 0.8116666674613953, 0.8226666450500488, 0.8256666660308838, 0.8306666612625122, 0.8320000171661377, 0.8286666870117188, 0.8373333215713501, 0.8416666388511658, 0.8420000076293945, 0.8396666646003723, 0.843999981880188, 0.8453333377838135, 0.8493333458900452, 0.8533333539962769, 0.8526666760444641, 0.8546666502952576, 0.8573333621025085, 0.8569999933242798, 0.8610000014305115, 0.8650000095367432, 0.8656666874885559, 0.8669999837875366, 0.8673333525657654, 0.8690000176429749, 0.8669999837875366, 0.871999979019165, 0.8723333477973938, 0.8756666779518127, 0.871666669845581, 0.8756666779518127, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8766666650772095, 0.8796666860580444, 0.8796666860580444, 0.8820000290870667, 0.8853333592414856, 0.8809999823570251, 0.8856666684150696, 0.8806666731834412, 0.8853333592414856, 0.8849999904632568, 0.8846666812896729, 0.8863333463668823, 0.8883333206176758, 0.8853333592414856, 0.8870000243186951, 0.8899999856948853, 0.8913333415985107, 0.8880000114440918, 0.8899999856948853, 0.890999972820282, 0.890333354473114, 0.8913333415985107]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 1, 0], [0, 6, 6, 9], [0, 2], [0, 85], [0, 0, 1], [0, 8], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8545714020729065, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2940590381622314, 2.1903507709503174, 1.7736334800720215, 1.361683964729309, 1.0868030786514282, 0.9213982224464417, 0.8434089422225952, 0.820064902305603, 0.7421602606773376, 0.7269604206085205, 0.6995549201965332, 0.6806653141975403, 0.646080493927002, 0.6245929002761841, 0.6013021469116211, 0.5753872394561768, 0.5606960654258728, 0.5496154427528381, 0.5411291122436523, 0.5245826840400696, 0.5221790075302124, 0.5073463320732117, 0.4996364712715149, 0.48850977420806885, 0.4775583744049072, 0.4773606061935425, 0.4525507688522339, 0.4442748725414276, 0.44586461782455444, 0.4175027906894684, 0.41870445013046265, 0.42183879017829895, 0.40269044041633606, 0.40484413504600525, 0.402756929397583, 0.4006073474884033, 0.3812856376171112, 0.376569926738739, 0.3748472034931183, 0.3669653534889221, 0.3699132204055786, 0.35381633043289185, 0.3514389395713806, 0.3446615934371948], "accuracy": [0.12732796370983124, 0.33562275767326355, 0.4329679012298584, 0.5406154990196228, 0.6235635876655579, 0.6612072587013245, 0.6877558827400208, 0.6970016956329346, 0.7121912837028503, 0.7281733155250549, 0.7320036888122559, 0.7375511527061462, 0.7457403540611267, 0.7532690763473511, 0.7655527591705322, 0.7750627398490906, 0.778761088848114, 0.7852331399917603, 0.7880068421363831, 0.7905164361000061, 0.791969358921051, 0.8043851256370544, 0.8054417967796326, 0.8124422430992126, 0.8138951063156128, 0.8178576231002808, 0.8248580098152161, 0.8273676037788391, 0.8284242749214172, 0.8301413059234619, 0.8383304476737976, 0.8393871188163757, 0.8433496356010437, 0.8421608805656433, 0.8437458872795105, 0.8467837572097778, 0.8506141901016235, 0.8539162874221802, 0.8536521196365356, 0.8535200357437134, 0.8535200357437134, 0.8619733452796936, 0.863558292388916, 0.8672566413879395], "val_loss": [2.246734619140625, 2.0228378772735596, 1.1344115734100342, 0.8552336692810059, 0.7416458129882812, 0.7008947134017944, 0.639150857925415, 0.6319760680198669, 0.6159862279891968, 0.5966184735298157, 0.5738425254821777, 0.5556799173355103, 0.5432291030883789, 0.54426109790802, 0.5317128300666809, 0.5218650102615356, 0.5125070214271545, 0.5027901530265808, 0.5055562257766724, 0.5002003312110901, 0.5025286078453064, 0.4908190071582794, 0.48650431632995605, 0.4882867932319641, 0.4817822277545929, 0.4766402542591095, 0.4791908264160156, 0.48255932331085205, 0.4736591875553131, 0.4708642065525055, 0.4855591356754303, 0.478873074054718, 0.47717732191085815, 0.48014363646507263, 0.49042394757270813, 0.46738147735595703, 0.4627505838871002, 0.4579988718032837, 0.4679891765117645, 0.45855265855789185, 0.46500009298324585, 0.47568628191947937, 0.48531389236450195, 0.47432947158813477], "val_accuracy": [0.42533332109451294, 0.4490000009536743, 0.652999997138977, 0.6946666836738586, 0.737333357334137, 0.7426666617393494, 0.7590000033378601, 0.7509999871253967, 0.7710000276565552, 0.7753333449363708, 0.7789999842643738, 0.7856666445732117, 0.796999990940094, 0.7956666946411133, 0.7986666560173035, 0.8040000200271606, 0.8059999942779541, 0.8180000185966492, 0.8140000104904175, 0.815666675567627, 0.8253333568572998, 0.8240000009536743, 0.8356666564941406, 0.8276666402816772, 0.8360000252723694, 0.840666651725769, 0.8416666388511658, 0.847000002861023, 0.843666672706604, 0.8506666421890259, 0.8486666679382324, 0.8516666889190674, 0.8550000190734863, 0.8526666760444641, 0.8546666502952576, 0.8600000143051147, 0.8553333282470703, 0.8616666793823242, 0.8679999709129333, 0.8636666536331177, 0.8646666407585144, 0.862333357334137, 0.8663333058357239, 0.8600000143051147]}, "mapping_values": [1, 10, 5, 5, 3, 6, 4, 2, 2, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8294285535812378, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.499507188796997, 0.8381370902061462, 0.6892786026000977, 0.6058676838874817, 0.5603334307670593, 0.5506531000137329, 0.5394420623779297, 0.5100723505020142, 0.4904536008834839, 0.46191808581352234, 0.4703752398490906, 0.4999356269836426, 0.49516043066978455, 0.5132155418395996, 0.5305960774421692, 0.5044873952865601, 0.5175340175628662, 0.5037453174591064, 0.5492234826087952, 0.5438669323921204, 0.5414392948150635, 0.580297589302063], "accuracy": [0.4971602261066437, 0.7201162576675415, 0.7464007139205933, 0.780610203742981, 0.7877426743507385, 0.8012151718139648, 0.8037247657775879, 0.8157442808151245, 0.8222163319587708, 0.8314621448516846, 0.8323867321014404, 0.822348415851593, 0.8366134166717529, 0.8265751004219055, 0.8204993009567261, 0.8252542614936829, 0.8272355198860168, 0.816008448600769, 0.8150838613510132, 0.8244617581367493, 0.821820080280304, 0.8220842480659485], "val_loss": [0.7029170989990234, 0.648445725440979, 0.5600641965866089, 0.5161566734313965, 0.5072264075279236, 0.45474356412887573, 0.4717310667037964, 0.4774090051651001, 0.4530390202999115, 0.4768991768360138, 0.45387858152389526, 0.5177658200263977, 0.5132270455360413, 0.5587348341941833, 0.5230486392974854, 0.5352061986923218, 0.48464253544807434, 0.5607392191886902, 0.53873610496521, 0.5911819934844971, 0.5801312923431396, 0.585027813911438], "val_accuracy": [0.7369999885559082, 0.7723333239555359, 0.7876666784286499, 0.8029999732971191, 0.8136666417121887, 0.8333333134651184, 0.8316666483879089, 0.8316666483879089, 0.8379999995231628, 0.8386666774749756, 0.8363333344459534, 0.8296666741371155, 0.8423333168029785, 0.8386666774749756, 0.8370000123977661, 0.8396666646003723, 0.8543333411216736, 0.8293333053588867, 0.8399999737739563, 0.8366666436195374, 0.8420000076293945, 0.8256666660308838]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 3, 0, 3], [0, 2, 0, 1, 2], [39, 39], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5], [0, 2, 0, 3], [16, 50], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [8, 7, 4, 4, 7, 9, 4, 2, 7, 0, 7, 6, 2, 4, 9], [0, 1, 5, 6, 1, 7, 2, 4, 4, 0], [99, 7, 70, 60], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 9, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [96, 99, 96, 99, 10, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), grad), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(tf.math.add(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(grad, alpha))), tf.math.negative(grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.pow(grad, grad), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}, "mapping_values": [1, 10, 5, 5, 2, 1, 0, 1, 1, 25, 15, 10, 4, 16, 9, 7, 6], "tree_depth": 17}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 9, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [0], [0, 1], [0], [0], [0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 4, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 4, 0, 3, 7, 7, 7, 3, 6, 5], [37, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 21, 11, 10, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(grad, grad)))), sigma), tf.math.add(tf.math.sqrt(grad), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 3, 1, 0, 4, 0, 7, 7, 9], [0, 0, 1, 0, 2, 0], [41, 99, 27, 59, 15], [0, 1], [0], [1], [16, 16], [0, 1], [0], [0], [86], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 9, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 98]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 10, 6, 5, 2, 1, 1, 0, 2, 1, 1, 1, 16, 9, 7, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha)), tf.math.negative(tf.math.pow(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.add(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 3, 3, 5], [0, 2, 0, 3], [53, 16], [0, 1], [0], [0], [30], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 6, 4, 1, 9, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 16, 1]], "fitness": -0.09114285558462143, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 16, 9, 7, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.309856653213501, 2.3096673488616943, 2.3100664615631104, 2.308821201324463, 2.309445381164551, 2.3088538646698], "accuracy": [0.09430722147226334, 0.09430722147226334, 0.0936468094587326, 0.09509972482919693, 0.09391097724437714, 0.09338264167308807], "val_loss": [2.3082683086395264, 2.308255910873413, 2.3082492351531982, 2.308244228363037, 2.3082401752471924, 2.308237075805664], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08833333104848862, 0.08833333104848862, 0.08866667002439499, 0.08866667002439499]}}]