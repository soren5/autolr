[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8694285750389099, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220571279525757, 1.8593875169754028, 1.378383755683899, 1.0716533660888672, 0.9321810603141785, 0.8219260573387146, 0.7655020952224731, 0.7262478470802307, 0.6885641813278198, 0.6600136160850525, 0.6277936697006226, 0.6064080595970154, 0.5957822203636169, 0.5772786736488342, 0.5651305913925171, 0.5498299598693848, 0.537337601184845, 0.5280646681785583, 0.5088419914245605, 0.4994290769100189, 0.4885294735431671, 0.47711777687072754, 0.47397279739379883, 0.4640399217605591, 0.4520784318447113, 0.44439592957496643, 0.44454246759414673, 0.4279204308986664, 0.42011433839797974, 0.40752363204956055, 0.4005427658557892, 0.40128928422927856, 0.3960624635219574, 0.3886079490184784, 0.38698920607566833, 0.38226816058158875, 0.37385839223861694, 0.3653338849544525, 0.3618980646133423, 0.35071897506713867, 0.35484549403190613, 0.34140411019325256, 0.3390454053878784, 0.33736762404441833, 0.331767737865448, 0.3270060122013092, 0.321320503950119, 0.31766244769096375, 0.3174940049648285, 0.30971628427505493, 0.304440975189209, 0.30228257179260254, 0.2962360978126526, 0.28748804330825806], "accuracy": [0.27816668152809143, 0.4943864643573761, 0.566239595413208, 0.6243560910224915, 0.6618676781654358, 0.7049266695976257, 0.7186633348464966, 0.739400327205658, 0.7475894689559937, 0.7631752490997314, 0.7680623531341553, 0.7726852297782898, 0.7823272943496704, 0.789459764957428, 0.7947431206703186, 0.7992339134216309, 0.8059701323509216, 0.8090080618858337, 0.8149517774581909, 0.8222163319587708, 0.8248580098152161, 0.8284242749214172, 0.8285563588142395, 0.8354246616363525, 0.8354246616363525, 0.8378021121025085, 0.8380662798881531, 0.8469158411026001, 0.8467837572097778, 0.8518029451370239, 0.8576145768165588, 0.8552370667457581, 0.8573504090309143, 0.8609166741371155, 0.8643507957458496, 0.8647470474243164, 0.8631620407104492, 0.870030403137207, 0.8673887252807617, 0.8772949576377869, 0.873860776424408, 0.8780874609947205, 0.8792761564254761, 0.880729079246521, 0.8828424215316772, 0.8819178342819214, 0.8831065893173218, 0.8842953443527222, 0.8850878477096558, 0.8879936337471008, 0.8905032277107239, 0.891559898853302, 0.8918240666389465, 0.8976356983184814], "val_loss": [2.0368542671203613, 1.5101406574249268, 1.043432593345642, 0.8430512547492981, 0.7487667798995972, 0.6914940476417542, 0.644360363483429, 0.6129720211029053, 0.5910462737083435, 0.5662010908126831, 0.5449523329734802, 0.5339802503585815, 0.521700382232666, 0.5118544697761536, 0.4956168532371521, 0.49512800574302673, 0.48544660210609436, 0.4735208749771118, 0.4647493064403534, 0.45808011293411255, 0.45184627175331116, 0.4430241286754608, 0.4431271255016327, 0.43497326970100403, 0.43445447087287903, 0.4365116357803345, 0.4278634488582611, 0.41758570075035095, 0.41514620184898376, 0.41068321466445923, 0.4050767421722412, 0.4070804715156555, 0.4022774398326874, 0.3969152867794037, 0.40106722712516785, 0.39476948976516724, 0.3916372060775757, 0.38839077949523926, 0.38348808884620667, 0.38558122515678406, 0.38093051314353943, 0.3816608190536499, 0.37887898087501526, 0.3761863112449646, 0.37441304326057434, 0.38134855031967163, 0.37083420157432556, 0.37368080019950867, 0.36805570125579834, 0.3720816373825073, 0.36518651247024536, 0.3679604232311249, 0.36154988408088684, 0.3612072765827179], "val_accuracy": [0.5573333501815796, 0.6526666879653931, 0.6880000233650208, 0.7129999995231628, 0.7366666793823242, 0.7473333477973938, 0.7593333125114441, 0.7756666541099548, 0.7789999842643738, 0.7929999828338623, 0.8036666512489319, 0.8006666898727417, 0.8109999895095825, 0.8183333277702332, 0.8243333101272583, 0.8173333406448364, 0.8259999752044678, 0.8366666436195374, 0.8366666436195374, 0.8376666903495789, 0.8416666388511658, 0.8453333377838135, 0.8429999947547913, 0.8473333120346069, 0.8453333377838135, 0.8456666469573975, 0.8523333072662354, 0.8506666421890259, 0.8553333282470703, 0.8536666631698608, 0.8536666631698608, 0.8576666712760925, 0.8556666374206543, 0.8586666584014893, 0.8543333411216736, 0.856333315372467, 0.859333336353302, 0.8603333234786987, 0.8629999756813049, 0.8606666922569275, 0.8629999756813049, 0.8606666922569275, 0.8636666536331177, 0.8666666746139526, 0.8673333525657654, 0.859666645526886, 0.8690000176429749, 0.8669999837875366, 0.871999979019165, 0.8700000047683716, 0.8700000047683716, 0.8706666827201843, 0.8703333139419556, 0.871999979019165]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8602856993675232, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293872833251953, 2.1935393810272217, 1.784727931022644, 1.3380317687988281, 1.0817861557006836, 0.9164723753929138, 0.8440700173377991, 0.7877627611160278, 0.7597489356994629, 0.729136049747467, 0.706524133682251, 0.6669622659683228, 0.644192099571228, 0.6263537406921387, 0.5996330380439758, 0.5938489437103271, 0.576794445514679, 0.5626869201660156, 0.5569517016410828, 0.5440433621406555, 0.5333470106124878, 0.5229277014732361, 0.5178783535957336, 0.5069050192832947, 0.4837215840816498, 0.47376370429992676, 0.4765784442424774, 0.46238279342651367, 0.455106258392334, 0.45374658703804016, 0.44742491841316223, 0.43121233582496643, 0.42825090885162354, 0.41883572936058044, 0.40102025866508484, 0.39924386143684387, 0.3931335508823395, 0.378248006105423, 0.3827386796474457, 0.37270036339759827, 0.36981216073036194, 0.36622023582458496, 0.3651854991912842, 0.35541996359825134, 0.3608199656009674, 0.3558870851993561, 0.3450999855995178, 0.34054508805274963, 0.3269718885421753, 0.32511332631111145, 0.32313185930252075], "accuracy": [0.12415797263383865, 0.3237352967262268, 0.442609965801239, 0.5546162724494934, 0.6326773166656494, 0.6568484902381897, 0.6902654767036438, 0.7033417224884033, 0.7206445932388306, 0.7182670831680298, 0.7400607466697693, 0.7404569983482361, 0.7520803213119507, 0.7617223858833313, 0.7683265209197998, 0.7770439982414246, 0.7786290049552917, 0.7843085527420044, 0.789988100528717, 0.7922335267066956, 0.7952714562416077, 0.8041210174560547, 0.8043851256370544, 0.8092722296714783, 0.8210275769233704, 0.8228767514228821, 0.8164047002792358, 0.817989706993103, 0.8265751004219055, 0.8278959393501282, 0.8343679904937744, 0.8389908671379089, 0.8408400416374207, 0.8404437899589539, 0.8466516733169556, 0.8471800088882446, 0.8515387773513794, 0.8502179384231567, 0.8537842035293579, 0.8578787446022034, 0.860652506351471, 0.8617091774940491, 0.8560295701026917, 0.8658037185668945, 0.8617091774940491, 0.8610487580299377, 0.8652753829956055, 0.8684453964233398, 0.8716153502464294, 0.8737286925315857, 0.8742570281028748], "val_loss": [2.2481822967529297, 2.029623031616211, 1.1509737968444824, 0.8831802606582642, 0.7642764449119568, 0.7291117310523987, 0.6764569282531738, 0.6724632382392883, 0.626659095287323, 0.6216604709625244, 0.5817975401878357, 0.5617653131484985, 0.5398790836334229, 0.5347788333892822, 0.5290343165397644, 0.5193492770195007, 0.5128101110458374, 0.5018734931945801, 0.5000197887420654, 0.4925975203514099, 0.4825068414211273, 0.4759848117828369, 0.47270283102989197, 0.4593997299671173, 0.462130606174469, 0.4416552782058716, 0.44312623143196106, 0.43832120299339294, 0.4306698441505432, 0.4241451919078827, 0.4273870885372162, 0.418745756149292, 0.4162343740463257, 0.41133740544319153, 0.41428738832473755, 0.4179318845272064, 0.4070073962211609, 0.4026215374469757, 0.41219982504844666, 0.40826937556266785, 0.40017399191856384, 0.4127144515514374, 0.42211923003196716, 0.4221876561641693, 0.416706919670105, 0.40422725677490234, 0.41214048862457275, 0.4158617854118347, 0.4038783311843872, 0.40874186158180237, 0.41863107681274414], "val_accuracy": [0.4233333468437195, 0.4723333418369293, 0.6453333497047424, 0.6919999718666077, 0.7269999980926514, 0.7456666827201843, 0.7436666488647461, 0.7570000290870667, 0.7553333044052124, 0.7730000019073486, 0.7836666703224182, 0.7916666865348816, 0.7946666479110718, 0.7973333597183228, 0.793666660785675, 0.7996666431427002, 0.812333345413208, 0.8140000104904175, 0.8176666498184204, 0.8223333358764648, 0.8236666917800903, 0.8273333311080933, 0.8199999928474426, 0.8286666870117188, 0.8259999752044678, 0.8346666693687439, 0.8366666436195374, 0.8386666774749756, 0.8370000123977661, 0.843999981880188, 0.843999981880188, 0.8486666679382324, 0.846666693687439, 0.8479999899864197, 0.8543333411216736, 0.8553333282470703, 0.8633333444595337, 0.8606666922569275, 0.8610000014305115, 0.8616666793823242, 0.8640000224113464, 0.859000027179718, 0.8576666712760925, 0.8679999709129333, 0.8693333268165588, 0.8766666650772095, 0.8696666955947876, 0.8643333315849304, 0.8696666955947876, 0.8763333559036255, 0.8756666779518127]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8342857360839844, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5824460983276367, 0.8479938507080078, 0.7096246480941772, 0.6626484394073486, 0.5922998785972595, 0.571254551410675, 0.5881443619728088, 0.5691429376602173, 0.5560511350631714, 0.5609516501426697, 0.56270831823349, 0.5378983020782471, 0.5699609518051147, 0.5486161112785339, 0.5583557486534119, 0.5099487900733948, 0.5170319080352783], "accuracy": [0.4810461103916168, 0.7106062769889832, 0.7434949278831482, 0.7589486241340637, 0.7823272943496704, 0.7973847389221191, 0.7878747582435608, 0.7944789528846741, 0.8016114234924316, 0.8006868362426758, 0.8142913579940796, 0.8177255392074585, 0.8169330358505249, 0.8104609847068787, 0.8083476424217224, 0.8156121969223022, 0.8265751004219055], "val_loss": [0.8923624753952026, 0.6175628900527954, 0.5442566871643066, 0.556408703327179, 0.5005048513412476, 0.5018792152404785, 0.5314034223556519, 0.5296385884284973, 0.5488913059234619, 0.5771797299385071, 0.535097062587738, 0.5744973421096802, 0.5979141592979431, 0.5524824857711792, 0.535484254360199, 0.5241644978523254, 0.5262091755867004], "val_accuracy": [0.7170000076293945, 0.7789999842643738, 0.809333324432373, 0.8029999732971191, 0.8240000009536743, 0.8276666402816772, 0.8036666512489319, 0.8256666660308838, 0.8109999895095825, 0.8303333520889282, 0.8166666626930237, 0.8393333554267883, 0.8376666903495789, 0.8106666803359985, 0.8316666483879089, 0.8323333263397217, 0.8320000171661377]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1], [4, 2, 9, 0, 3, 5], [0, 0, 1, 2, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 0, 2, 0, 3, 1, 0], [16, 16, 70], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1], [2, 7, 5, 6, 3, 1, 2, 7, 3], [0, 7, 4, 4, 2, 6, 0, 0], [0, 9, 54], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 0, 1, 6, 9, 7], [0, 0, 3, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 3, 7, 4, 3, 2, 10, 5, 5, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.math.multiply(grad, grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303098678588867, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 7, 6], [0, 1, 0, 2, 1, 1], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 2, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(grad, alpha), alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3033480644226074, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}, "mapping_values": [1, 13, 7, 6, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 13}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 5, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 8, 3, 0, 3, 5], [0, 3, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [6, 1, 3, 2, 8, 1, 2, 1, 4, 3, 8, 7, 1, 6, 9, 2, 1, 8, 7, 4, 7, 2, 7, 7, 2, 0, 8, 8, 8, 0, 5, 6, 6, 3, 3, 2, 6, 6, 7, 8, 0, 3, 5, 2, 4, 3, 3, 4, 2, 4, 6, 1, 1, 1, 1, 9, 0, 6, 5, 9, 7, 3, 4, 2, 6, 2, 4, 8, 3, 6, 9, 5, 5, 8, 2, 6, 6, 2, 7, 5, 6, 1, 3, 1], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0, 5, 0, 4, 7, 5, 0, 3, 5, 1, 4, 3, 1, 0, 3, 4, 3, 1, 4, 4, 5, 7, 4, 3, 4, 5, 5, 3, 4, 1, 1, 7, 6, 0, 4, 0, 4, 5, 3, 2, 0, 1, 7, 6, 7, 4, 5, 7, 4], [16, 99, 96, 99, 61, 1, 29, 21, 73, 8, 89, 49, 45, 31, 72]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 5, 3, 2, 1, 2, 1, 1, 1, 142, 84, 58, 15], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(grad, tf.math.pow(sigma, tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(tf.math.subtract(sigma, alpha), tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))))), tf.math.subtract(grad, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(tf.math.pow(tf.math.add(tf.math.add(tf.math.add(tf.math.add(tf.math.add(tf.math.negative(grad), grad), tf.math.sqrt(grad)), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(tf.math.sqrt(tf.math.negative(grad)))), alpha), tf.math.square(grad)))), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.add(sigma, tf.math.divide_no_nan(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), sigma), grad), tf.math.divide_no_nan(sigma, tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.multiply(tf.math.square(alpha), tf.math.add(tf.math.pow(tf.math.multiply(grad, tf.math.multiply(tf.math.pow(tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(grad, tf.math.subtract(grad, tf.math.subtract(grad, grad))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.divide_no_nan(sigma, tf.math.square(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), tf.math.add(grad, tf.math.multiply(tf.math.pow(tf.math.add(grad, grad), tf.math.divide_no_nan(sigma, grad)), alpha))), alpha), tf.math.add(tf.math.pow(tf.math.sqrt(grad), tf.math.multiply(tf.math.divide_no_nan(grad, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.square(grad))), tf.math.square(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), grad), grad)))), sigma))), tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, grad), grad)), tf.math.square(tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(grad, tf.math.subtract(grad, grad)), grad), grad)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 3, 9, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 2, 3, 0, 3, 5], [0, 2, 0, 3, 5], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 5, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, alpha)))", "other_info": {"loss": [2.305361747741699, 2.3025856018066406, 2.302586078643799, 2.302586317062378, 2.302586555480957, 2.3025870323181152], "accuracy": [0.09113723784685135, 0.09351472556591034, 0.0944393053650856, 0.09681680053472519, 0.09457138925790787, 0.09576013684272766], "val_loss": [2.3025853633880615, 2.3025848865509033, 2.3025851249694824, 2.3025848865509033, 2.3025848865509033, 2.3025848865509033], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 5, 4, 1, 2, 11, 6, 5, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14}]