[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8619999885559082, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223297119140625, 1.870379090309143, 1.395784854888916, 1.090775966644287, 0.9377961754798889, 0.8435882925987244, 0.765214204788208, 0.7236588001251221, 0.693475067615509, 0.6581549644470215, 0.6379360556602478, 0.6108599901199341, 0.6006796360015869, 0.5766056776046753, 0.5575733184814453, 0.5454161167144775, 0.5346356630325317, 0.5148822069168091, 0.5075196623802185, 0.4881531298160553, 0.49030420184135437, 0.4833918511867523, 0.4707328677177429, 0.46946534514427185, 0.4546855092048645, 0.456048846244812, 0.4409254193305969, 0.4357035756111145, 0.4328753650188446, 0.4232689142227173, 0.41305673122406006, 0.40966978669166565, 0.40532782673835754, 0.39319857954978943, 0.3924257457256317, 0.384189635515213, 0.38298019766807556, 0.3751055896282196, 0.36833304166793823, 0.36463215947151184, 0.36084797978401184, 0.35006940364837646, 0.35084304213523865, 0.3436426818370819, 0.33888357877731323, 0.33049750328063965], "accuracy": [0.27644962072372437, 0.4884427487850189, 0.5676925182342529, 0.6227710843086243, 0.6643772125244141, 0.7053229212760925, 0.722229540348053, 0.7349095344543457, 0.7497028112411499, 0.7604015469551086, 0.7663452625274658, 0.7732135653495789, 0.7821952104568481, 0.7913089394569397, 0.7946110367774963, 0.8030643463134766, 0.804649293422699, 0.8144234418869019, 0.8137630224227905, 0.8251221776008606, 0.8238013386726379, 0.8289526104927063, 0.832650899887085, 0.828820526599884, 0.8362171649932861, 0.8343679904937744, 0.8416325449943542, 0.8445383906364441, 0.8495575189590454, 0.8481045961380005, 0.8545766472816467, 0.8573504090309143, 0.8544445633888245, 0.858671247959137, 0.859199583530426, 0.8648791313171387, 0.8631620407104492, 0.8626337051391602, 0.8733324408531189, 0.8689737319946289, 0.8732003569602966, 0.8771628737449646, 0.8750495314598083, 0.8772949576377869, 0.8824461698532104, 0.8804649114608765], "val_loss": [2.041708469390869, 1.5216025114059448, 1.0521289110183716, 0.8376771807670593, 0.740607738494873, 0.6777036786079407, 0.6363288760185242, 0.6033763885498047, 0.5727450251579285, 0.5516659617424011, 0.5357410907745361, 0.5215427279472351, 0.5107359886169434, 0.4922967255115509, 0.48362284898757935, 0.471384733915329, 0.46064868569374084, 0.45212024450302124, 0.44033902883529663, 0.43587711453437805, 0.4329816401004791, 0.42257386445999146, 0.4179728627204895, 0.4089295268058777, 0.40631574392318726, 0.40118342638015747, 0.39390745759010315, 0.39546629786491394, 0.3862566649913788, 0.3807045817375183, 0.3788924217224121, 0.37869516015052795, 0.37328654527664185, 0.3712998926639557, 0.36292940378189087, 0.3610425591468811, 0.35815051198005676, 0.35613101720809937, 0.3529227375984192, 0.3482505679130554, 0.3461449444293976, 0.34371328353881836, 0.3414897322654724, 0.34293651580810547, 0.34004881978034973, 0.33816269040107727], "val_accuracy": [0.5233333110809326, 0.6606666445732117, 0.6899999976158142, 0.7176666855812073, 0.7413333058357239, 0.7606666684150696, 0.7693333625793457, 0.7756666541099548, 0.7873333096504211, 0.7956666946411133, 0.8023333549499512, 0.8086666464805603, 0.8063333630561829, 0.8136666417121887, 0.8206666707992554, 0.8306666612625122, 0.8389999866485596, 0.8396666646003723, 0.8453333377838135, 0.8456666469573975, 0.8386666774749756, 0.8533333539962769, 0.8463333249092102, 0.8513333201408386, 0.8523333072662354, 0.8539999723434448, 0.8603333234786987, 0.8516666889190674, 0.8610000014305115, 0.8659999966621399, 0.8666666746139526, 0.8666666746139526, 0.8666666746139526, 0.8653333187103271, 0.8713333606719971, 0.8709999918937683, 0.8696666955947876, 0.875, 0.8723333477973938, 0.8763333559036255, 0.878000020980835, 0.8759999871253967, 0.878000020980835, 0.8769999742507935, 0.875333309173584, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 7], [0, 0], [0, 14], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 6, 7, 2, 8, 1, 4, 0, 6, 1, 3, 1, 0], [0, 6, 0, 0, 2, 5, 0, 1, 0, 2, 2], [0, 90, 26, 29, 97], [0, 1], [0], [1], [0]], "fitness": -0.8579999804496765, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.sqrt(grad), tf.math.subtract(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.pow(beta, grad))), tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), alpha), tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), beta)), tf.math.negative(beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2935540676116943, 2.1897735595703125, 1.7744821310043335, 1.3678038120269775, 1.0658025741577148, 0.9001916646957397, 0.8491445183753967, 0.8208048939704895, 0.7624915242195129, 0.7558495998382568, 0.7073671221733093, 0.6678071022033691, 0.6475776433944702, 0.6240924596786499, 0.6238718032836914, 0.5980584025382996, 0.5816894769668579, 0.5708811283111572, 0.5652292370796204, 0.5566423535346985, 0.5334868431091309, 0.5365118980407715, 0.5152928829193115, 0.5095647573471069, 0.4954962134361267, 0.49292829632759094, 0.49339810013771057, 0.4828122556209564, 0.46704912185668945, 0.45390161871910095, 0.4465070068836212, 0.45288869738578796, 0.43499311804771423, 0.43598195910453796, 0.41110917925834656, 0.4119260907173157, 0.4093066155910492, 0.4083070158958435, 0.3844369053840637, 0.3931293487548828, 0.3793065547943115, 0.3868957757949829, 0.36270755529403687, 0.3653663098812103, 0.3662612736225128, 0.3463393747806549, 0.3450455069541931, 0.332320898771286, 0.33382290601730347, 0.34792622923851013, 0.32166123390197754, 0.33144286274909973, 0.3280735909938812, 0.32577788829803467, 0.31912434101104736, 0.30656668543815613, 0.32249343395233154, 0.32309290766716003, 0.30292120575904846, 0.29912692308425903, 0.30096200108528137, 0.3053978979587555, 0.28647205233573914], "accuracy": [0.12732796370983124, 0.32703739404678345, 0.4294016659259796, 0.5379738211631775, 0.6277902722358704, 0.668339729309082, 0.683529257774353, 0.6970016956329346, 0.7107383608818054, 0.7066437602043152, 0.7347774505615234, 0.7359662055969238, 0.7531369924545288, 0.7631752490997314, 0.7589486241340637, 0.7724210619926453, 0.7769119143486023, 0.7840443849563599, 0.783119797706604, 0.7865539789199829, 0.7971205711364746, 0.7984414100646973, 0.7996301651000977, 0.7993659973144531, 0.8053097128868103, 0.8070268034934998, 0.8030643463134766, 0.8112534880638123, 0.8207634687423706, 0.8210275769233704, 0.8256505131721497, 0.822348415851593, 0.8294808864593506, 0.8323867321014404, 0.8392550349235535, 0.8358209133148193, 0.839519202709198, 0.8379341959953308, 0.846387505531311, 0.8485008478164673, 0.8507462739944458, 0.850350022315979, 0.854708731174469, 0.8540483713150024, 0.8516708612442017, 0.8647470474243164, 0.8602562546730042, 0.8683133125305176, 0.8696341514587402, 0.8623695969581604, 0.8721436858177185, 0.8705587387084961, 0.8691058158874512, 0.8692378997802734, 0.8734645247459412, 0.8767666220664978, 0.8705587387084961, 0.8730682730674744, 0.8778232932090759, 0.8813894987106323, 0.8802007436752319, 0.8803328275680542, 0.8877294659614563], "val_loss": [2.245981454849243, 2.019333600997925, 1.1245830059051514, 0.7986880540847778, 0.7243127226829529, 0.6852011680603027, 0.6447562575340271, 0.6350302696228027, 0.6223571300506592, 0.5866288542747498, 0.5575070977210999, 0.5310840010643005, 0.5193006992340088, 0.5253816843032837, 0.5106855034828186, 0.49778711795806885, 0.4961925446987152, 0.4909837245941162, 0.4779030680656433, 0.4715305268764496, 0.4675871729850769, 0.4669426381587982, 0.46561384201049805, 0.4702073633670807, 0.4611843228340149, 0.45414042472839355, 0.43602442741394043, 0.4373595118522644, 0.4418646991252899, 0.44127506017684937, 0.43106934428215027, 0.43154197931289673, 0.4291967749595642, 0.4260008633136749, 0.4259563684463501, 0.41516828536987305, 0.4287683963775635, 0.415048211812973, 0.4215584993362427, 0.4186283349990845, 0.4171932339668274, 0.4163340926170349, 0.40691816806793213, 0.41059795022010803, 0.41304126381874084, 0.4226621389389038, 0.4085928499698639, 0.3992679715156555, 0.42914867401123047, 0.41151854395866394, 0.4005613327026367, 0.3975827991962433, 0.4105032980442047, 0.4183652400970459, 0.426239550113678, 0.4208342432975769, 0.41832658648490906, 0.41249731183052063, 0.4189431965351105, 0.46017488837242126, 0.44718655943870544, 0.4227842688560486, 0.43439024686813354], "val_accuracy": [0.4090000092983246, 0.4569999873638153, 0.6433333158493042, 0.703000009059906, 0.7526666522026062, 0.7436666488647461, 0.7400000095367432, 0.762666642665863, 0.7673333287239075, 0.7900000214576721, 0.7850000262260437, 0.8043333292007446, 0.7996666431427002, 0.7903333306312561, 0.8056666851043701, 0.8116666674613953, 0.8083333373069763, 0.8176666498184204, 0.812666654586792, 0.8169999718666077, 0.8180000185966492, 0.8266666531562805, 0.8206666707992554, 0.8133333325386047, 0.8216666579246521, 0.8386666774749756, 0.8486666679382324, 0.8423333168029785, 0.8416666388511658, 0.8456666469573975, 0.8529999852180481, 0.8519999980926514, 0.8513333201408386, 0.8539999723434448, 0.8536666631698608, 0.8573333621025085, 0.8500000238418579, 0.8546666502952576, 0.8553333282470703, 0.8633333444595337, 0.8619999885559082, 0.8616666793823242, 0.8659999966621399, 0.8659999966621399, 0.8650000095367432, 0.8666666746139526, 0.8666666746139526, 0.871666669845581, 0.8650000095367432, 0.871666669845581, 0.8776666522026062, 0.8759999871253967, 0.8693333268165588, 0.8769999742507935, 0.8803333044052124, 0.8766666650772095, 0.8743333220481873, 0.8813333511352539, 0.8803333044052124, 0.8766666650772095, 0.8776666522026062, 0.8786666393280029, 0.8796666860580444]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 2, 25, 14, 11, 5, 2, 1, 1, 0], "tree_depth": 16}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8431428670883179, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5522122383117676, 0.8253813982009888, 0.70902419090271, 0.611766517162323, 0.5810136198997498, 0.534941554069519, 0.523628830909729, 0.507489800453186, 0.519365131855011, 0.510516345500946, 0.5867955088615417, 0.5507357120513916, 0.5539873838424683, 0.5648640990257263, 0.5299614071846008, 0.5148261189460754, 0.5461017489433289, 0.5519899129867554, 0.5851346254348755, 0.5914332866668701, 0.679924726486206, 0.7108078002929688], "accuracy": [0.46268656849861145, 0.7047945857048035, 0.7479857206344604, 0.7621186375617981, 0.7765156626701355, 0.7955356240272522, 0.8064984679222107, 0.8150838613510132, 0.8169330358505249, 0.8138951063156128, 0.7972526550292969, 0.8133667707443237, 0.802271842956543, 0.8076872229576111, 0.817989706993103, 0.8161405324935913, 0.81112140417099, 0.8244617581367493, 0.8041210174560547, 0.8039889335632324, 0.8004226684570312, 0.7701756954193115], "val_loss": [0.8065224885940552, 0.7260851263999939, 0.5674940943717957, 0.5254428386688232, 0.514650285243988, 0.4772687256336212, 0.4961473047733307, 0.5133498907089233, 0.5020807981491089, 0.5459427833557129, 0.5742601752281189, 0.5711954236030579, 0.5734484195709229, 0.5961514711380005, 0.5556253790855408, 0.5264729261398315, 0.6319243311882019, 0.5932862758636475, 0.6045092940330505, 0.6048828363418579, 0.6767579913139343, 0.7050325274467468], "val_accuracy": [0.7149999737739563, 0.734333336353302, 0.7889999747276306, 0.7993333339691162, 0.8106666803359985, 0.8199999928474426, 0.8289999961853027, 0.8186666369438171, 0.8266666531562805, 0.8326666951179504, 0.8343333601951599, 0.8236666917800903, 0.8299999833106995, 0.824999988079071, 0.8370000123977661, 0.8259999752044678, 0.8450000286102295, 0.8176666498184204, 0.8273333311080933, 0.8346666693687439, 0.8199999928474426, 0.812666654586792]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 2, 0, 3, 5], [0, 2, 0, 1], [83, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 4, 8], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 0, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 7, 4, 3, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3036601543426514, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 6, 0, 3], [2, 1, 0, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [4, 2, 2, 0, 3, 5], [0, 2, 0, 3, 4], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 4, 0, 9, 0, 2, 4, 0, 8], [0, 0, 0, 3, 0, 0, 3, 1, 0, 4, 6, 2], [16, 99, 96, 99, 61, 1, 16]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.negative(sigma))), alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), grad))), tf.math.negative(tf.math.sqrt(beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}, "mapping_values": [1, 9, 5, 4, 1, 11, 6, 5, 2, 2, 1, 1, 1, 31, 19, 12, 7], "tree_depth": 26}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [4, 2, 3, 0, 3], [0, 2, 0, 2, 3], [39, 50], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [32], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 0, 3, 0, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 17, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 10, 6, 4, 2, 2, 1, 1, 1, 3, 1, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3037452697753906, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [2, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [1, 6, 3, 8, 3, 5], [0, 0, 2, 0, 3, 1, 0], [16, 16], [0, 0, 0, 0, 1, 1], [0, 1, 9, 6], [0, 6], [99, 95], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 1, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 1, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 2, 3, 1, 1, 0, 1, 1, 6, 4, 2, 2, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), grad), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]