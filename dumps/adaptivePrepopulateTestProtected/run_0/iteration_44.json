[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8662857413291931, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2233924865722656, 1.8640308380126953, 1.381143569946289, 1.085985541343689, 0.926398754119873, 0.8413717746734619, 0.7732906937599182, 0.7289998531341553, 0.6883757710456848, 0.6610706448554993, 0.6400284171104431, 0.6221516132354736, 0.5976607203483582, 0.582449197769165, 0.5703917145729065, 0.5591195821762085, 0.5379368662834167, 0.5282425880432129, 0.5181694626808167, 0.5117353200912476, 0.5008803009986877, 0.49140945076942444, 0.4823559820652008, 0.46902158856391907, 0.4630849063396454, 0.45195356011390686, 0.4444292485713959, 0.4486427307128906, 0.43916797637939453, 0.4241633117198944, 0.4263659417629242, 0.4171948730945587, 0.41032910346984863, 0.3953915536403656, 0.3914757966995239, 0.3945150375366211, 0.37930211424827576, 0.3816557228565216, 0.36995694041252136, 0.37166425585746765, 0.36488497257232666, 0.3606613874435425, 0.34471288323402405, 0.35501280426979065, 0.34627845883369446, 0.34190723299980164, 0.33437976241111755], "accuracy": [0.27684587240219116, 0.4951789677143097, 0.5732399821281433, 0.6225069165229797, 0.672170102596283, 0.7038700580596924, 0.7230220437049866, 0.7301545143127441, 0.7477215528488159, 0.7640998363494873, 0.7705719470977783, 0.7761194109916687, 0.7874785661697388, 0.7884030938148499, 0.7957997918128967, 0.8001585006713867, 0.8086118102073669, 0.8141592741012573, 0.816008448600769, 0.8203672170639038, 0.8202351331710815, 0.8241975903511047, 0.8286884427070618, 0.8345000743865967, 0.8362171649932861, 0.8407079577445984, 0.8457271456718445, 0.8436138033866882, 0.8446704745292664, 0.8519350290298462, 0.8487650156021118, 0.8525954484939575, 0.8520671129226685, 0.8595958352088928, 0.8646149635314941, 0.8619733452796936, 0.8688416481018066, 0.8623695969581604, 0.8661999702453613, 0.8677849769592285, 0.8683133125305176, 0.8733324408531189, 0.8791441321372986, 0.8747853636741638, 0.8728041052818298, 0.8780874609947205, 0.8824461698532104], "val_loss": [2.0369184017181396, 1.513396978378296, 1.0463635921478271, 0.8410130739212036, 0.7521557807922363, 0.6980737447738647, 0.6504852175712585, 0.6199531555175781, 0.5907264947891235, 0.5716404914855957, 0.5550066828727722, 0.5378820896148682, 0.5241279006004333, 0.517853856086731, 0.5051512122154236, 0.4941982328891754, 0.48493054509162903, 0.47527605295181274, 0.4701848030090332, 0.45829126238822937, 0.4591442346572876, 0.45088672637939453, 0.44430863857269287, 0.4362609386444092, 0.4302181899547577, 0.424967497587204, 0.4194806218147278, 0.41754740476608276, 0.4124467074871063, 0.4122042655944824, 0.41009023785591125, 0.40542545914649963, 0.4034293591976166, 0.392462819814682, 0.38974130153656006, 0.3849080801010132, 0.3809632658958435, 0.38092589378356934, 0.37768229842185974, 0.3799361288547516, 0.37641552090644836, 0.3661634624004364, 0.3729186952114105, 0.3678075671195984, 0.36688387393951416, 0.36231663823127747, 0.3638288676738739], "val_accuracy": [0.5463333129882812, 0.6483333110809326, 0.6796666383743286, 0.699999988079071, 0.715666651725769, 0.7379999756813049, 0.7480000257492065, 0.7633333206176758, 0.7746666669845581, 0.784333348274231, 0.7906666398048401, 0.7990000247955322, 0.8046666383743286, 0.8083333373069763, 0.8186666369438171, 0.8196666836738586, 0.8199999928474426, 0.8256666660308838, 0.8299999833106995, 0.8330000042915344, 0.8316666483879089, 0.8433333039283752, 0.8416666388511658, 0.843666672706604, 0.8483333587646484, 0.8506666421890259, 0.8510000109672546, 0.8539999723434448, 0.8513333201408386, 0.8526666760444641, 0.8560000061988831, 0.8536666631698608, 0.8529999852180481, 0.8606666922569275, 0.8603333234786987, 0.8619999885559082, 0.8613333106040955, 0.8619999885559082, 0.8666666746139526, 0.862666666507721, 0.8636666536331177, 0.8723333477973938, 0.8669999837875366, 0.8703333139419556, 0.8696666955947876, 0.8690000176429749, 0.8696666955947876]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 1, 0], [0, 2, 1, 9], [0, 1], [0, 86], [1], [0], [2], [0]], "fitness": -0.8377143144607544, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5342395305633545, 0.828004002571106, 0.6869094371795654, 0.6015323996543884, 0.5548182725906372, 0.55105060338974, 0.5237334370613098, 0.48834341764450073, 0.5135351419448853, 0.48498213291168213, 0.4830351173877716, 0.47094178199768066, 0.48054760694503784, 0.4664030075073242, 0.49128928780555725, 0.49978360533714294, 0.4958389103412628, 0.5070096254348755, 0.5730260014533997], "accuracy": [0.47325319051742554, 0.71100252866745, 0.7512878179550171, 0.7740060687065125, 0.7928939461708069, 0.7972526550292969, 0.8104609847068787, 0.817989706993103, 0.8157442808151245, 0.8203672170639038, 0.8297450542449951, 0.8294808864593506, 0.8304054737091064, 0.8442742228507996, 0.8348963260650635, 0.8185180425643921, 0.8409721255302429, 0.8381983637809753, 0.8239334225654602], "val_loss": [0.864313542842865, 0.6351432204246521, 0.5434809327125549, 0.5106695890426636, 0.507098376750946, 0.4893176257610321, 0.5126400589942932, 0.5693933963775635, 0.5247563123703003, 0.5190950632095337, 0.5658940672874451, 0.5555747747421265, 0.6053410172462463, 0.6573832035064697, 0.5551377534866333, 0.60410076379776, 0.7006136775016785, 0.6936004757881165, 0.5729240775108337], "val_accuracy": [0.7110000252723694, 0.7756666541099548, 0.7903333306312561, 0.8059999942779541, 0.8193333148956299, 0.8240000009536743, 0.831333339214325, 0.8153333067893982, 0.8233333230018616, 0.82833331823349, 0.8299999833106995, 0.8356666564941406, 0.8366666436195374, 0.8456666469573975, 0.8286666870117188, 0.8410000205039978, 0.8346666693687439, 0.8349999785423279, 0.8346666693687439]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 6, 4, 2, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0], [0, 1, 9], [0], [0, 90], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8357142806053162, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2930877208709717, 2.191359043121338, 1.7770839929580688, 1.3493623733520508, 1.102971076965332, 0.9445587992668152, 0.8662934303283691, 0.8323299288749695, 0.7987238764762878, 0.7587763071060181, 0.7222782373428345, 0.6914353370666504, 0.6465261578559875, 0.6350997090339661, 0.6230327486991882, 0.601567804813385, 0.5872237682342529, 0.5662593245506287, 0.5650120377540588, 0.5666375160217285, 0.5442154407501221, 0.5301849246025085, 0.5260928869247437, 0.5035794377326965, 0.49078279733657837, 0.49105092883110046, 0.48994046449661255, 0.4753069281578064, 0.4782092571258545], "accuracy": [0.12534672021865845, 0.32465988397598267, 0.43283581733703613, 0.5412759184837341, 0.6347906589508057, 0.6532822847366333, 0.6790384650230408, 0.6935675740242004, 0.6947563290596008, 0.7116629481315613, 0.7279091477394104, 0.7452120184898376, 0.7504953145980835, 0.7658169269561768, 0.7627789974212646, 0.767401933670044, 0.7771760821342468, 0.7816668748855591, 0.780610203742981, 0.7803460359573364, 0.7895918488502502, 0.7987055778503418, 0.8026680946350098, 0.8070268034934998, 0.8079513907432556, 0.8113855719566345, 0.8187822103500366, 0.819970965385437, 0.817989706993103], "val_loss": [2.2467381954193115, 2.023139476776123, 1.1368910074234009, 0.8803439140319824, 0.7988280653953552, 0.734893798828125, 0.7040407657623291, 0.6762444972991943, 0.6613226532936096, 0.6443657279014587, 0.5930042862892151, 0.5723268389701843, 0.5509151220321655, 0.5468748211860657, 0.5404691696166992, 0.5149285197257996, 0.5173152089118958, 0.5134258270263672, 0.4921908676624298, 0.4854271709918976, 0.4846917390823364, 0.4723227918148041, 0.46192342042922974, 0.4589555561542511, 0.44952473044395447, 0.44669491052627563, 0.4440712034702301, 0.4449399411678314, 0.4605197012424469], "val_accuracy": [0.4103333353996277, 0.49533334374427795, 0.6516666412353516, 0.6863333582878113, 0.7073333263397217, 0.7333333492279053, 0.7360000014305115, 0.7323333621025085, 0.7586666941642761, 0.765999972820282, 0.7726666927337646, 0.781000018119812, 0.7910000085830688, 0.7910000085830688, 0.8019999861717224, 0.8100000023841858, 0.815666675567627, 0.8023333549499512, 0.8169999718666077, 0.8253333568572998, 0.8223333358764648, 0.8306666612625122, 0.8396666646003723, 0.8443333506584167, 0.8393333554267883, 0.8423333168029785, 0.8433333039283752, 0.8363333344459534, 0.8393333554267883]}, "mapping_values": [1, 10, 5, 5, 3, 4, 3, 1, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 1, 8, 4, 5, 6, 9, 3, 2, 0, 3, 6, 1, 8, 2, 6, 1, 9, 3, 4, 0, 2, 5, 0, 6, 7, 2, 3, 2, 4, 0, 4, 4, 4, 6, 2, 5, 5, 8, 0, 8, 2], [0, 2, 0, 3, 4, 2, 3, 0, 5, 1, 4, 1, 4, 4, 5, 4, 3, 5, 0, 0, 3, 0, 2, 5, 0, 2, 4, 4], [16, 16, 86, 21, 22, 92, 82, 81, 3], [1, 1], [0], [0], [87], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 3, 6], [0, 0, 0, 2, 0, 0, 3, 1, 2, 0, 3, 6], [16, 99, 96, 86, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 74, 46, 28, 9, 1, 0, 1, 1, 24, 12, 12, 6], "tree_depth": 45, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.sqrt(tf.math.pow(grad, tf.math.square(tf.math.divide_no_nan(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(beta, grad), tf.math.subtract(tf.math.sqrt(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), grad))), tf.math.add(tf.math.divide_no_nan(tf.math.subtract(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.pow(tf.math.negative(tf.math.add(tf.math.square(alpha), tf.math.negative(grad))), tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(grad, grad)), tf.math.multiply(grad, grad))))), tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(tf.math.pow(tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.square(grad)), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), beta), tf.math.sqrt(tf.math.negative(grad))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, grad)))))))), grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(beta, tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.multiply(tf.math.divide_no_nan(alpha, beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), sigma), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 9, 3, 4, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [3, 3, 9, 2, 8, 1, 4, 1, 4, 2, 8, 8, 8], [0, 0, 0, 3, 0, 0, 3, 1, 3, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 10, 6, 4, 2, 2, 1, 1, 1, 21, 13, 8, 6], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.sqrt(tf.math.sqrt(alpha))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 4, 2, 4, 3], [0, 1, 0, 2, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 6, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 0, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 10, 6, 4, 2, 2, 1, 1, 0, 21, 11, 10, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.add(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma))), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), beta), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 97], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 6, 8, 8, 8], [0, 2, 0, 3, 4], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 30]], "fitness": -0.09200000017881393, "mapping_values": [1, 9, 5, 4, 1, 15, 10, 5, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(beta)), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.3100972175598145, 2.30898380279541, 2.3074700832366943, 2.3086798191070557, 2.3080215454101562, 2.3064424991607666], "accuracy": [0.08506141602993011, 0.09470347315073013, 0.09708096832036972, 0.09377889335155487, 0.08585391938686371, 0.09021265059709549], "val_loss": [2.3090758323669434, 2.3088457584381104, 2.3085641860961914, 2.308098554611206, 2.307262659072876, 2.305650472640991], "val_accuracy": [0.09000000357627869, 0.08766666799783707, 0.08699999749660492, 0.08866667002439499, 0.08133333176374435, 0.07566666603088379]}}]