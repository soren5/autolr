[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8614285588264465, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2236690521240234, 1.8702725172042847, 1.3917484283447266, 1.0957194566726685, 0.9402173161506653, 0.8405441045761108, 0.7787622213363647, 0.7284445762634277, 0.6939506530761719, 0.6610146760940552, 0.6258238554000854, 0.6112678647041321, 0.5935540795326233, 0.577707827091217, 0.563359260559082, 0.55029296875, 0.5360174179077148, 0.5215006470680237, 0.5158041715621948, 0.49728527665138245, 0.48166021704673767, 0.47718092799186707, 0.46839889883995056, 0.4609590768814087, 0.45188993215560913, 0.44807955622673035, 0.43741941452026367, 0.43638619780540466, 0.4261617064476013, 0.4158598482608795, 0.40522873401641846, 0.4074377119541168, 0.39857813715934753, 0.4004683494567871, 0.3894512951374054, 0.38065090775489807, 0.37641581892967224, 0.36880332231521606, 0.36513590812683105, 0.3690105080604553, 0.354522705078125, 0.35032281279563904, 0.34533554315567017, 0.34362608194351196, 0.33184385299682617, 0.33121898770332336, 0.32781291007995605, 0.3216482400894165, 0.3182162642478943, 0.31983861327171326, 0.3129797577857971, 0.31035351753234863, 0.29283663630485535, 0.29269734025001526, 0.2939954102039337, 0.2936055660247803, 0.2886032164096832, 0.28108537197113037, 0.28148123621940613, 0.2727906405925751, 0.2686321437358856, 0.2654954791069031, 0.27138182520866394, 0.26345953345298767], "accuracy": [0.26720380783081055, 0.48514068126678467, 0.5650508403778076, 0.6170915365219116, 0.6666226387023926, 0.6995112895965576, 0.7160216569900513, 0.735569953918457, 0.7445515990257263, 0.7642319202423096, 0.7757231593132019, 0.7853652238845825, 0.7895918488502502, 0.7973847389221191, 0.7977809906005859, 0.8034605979919434, 0.8095363974571228, 0.8181217908859253, 0.8193105459213257, 0.8220842480659485, 0.829216718673706, 0.8310658931732178, 0.8343679904937744, 0.8389908671379089, 0.8399154543876648, 0.8421608805656433, 0.8426892161369324, 0.8466516733169556, 0.8490291833877563, 0.8514066934585571, 0.8533879518508911, 0.852331280708313, 0.8590674996376038, 0.8605204224586487, 0.8597279191017151, 0.8671245574951172, 0.8667283058166504, 0.8663320541381836, 0.8677849769592285, 0.8660678863525391, 0.8734645247459412, 0.878351628780365, 0.8765024542808533, 0.8709549307823181, 0.8856161832809448, 0.8837670087814331, 0.8821820020675659, 0.8831065893173218, 0.8813894987106323, 0.8860124349594116, 0.8862766027450562, 0.887201189994812, 0.8939374089241028, 0.8972394466400146, 0.8951261639595032, 0.8957865834236145, 0.895918607711792, 0.8972394466400146, 0.8968431949615479, 0.8981640338897705, 0.901862382888794, 0.9078060984611511, 0.8990886211395264, 0.90423983335495], "val_loss": [2.0387649536132812, 1.511621117591858, 1.0427525043487549, 0.838377058506012, 0.7521966099739075, 0.6931606531143188, 0.6478660702705383, 0.6166454553604126, 0.5856010913848877, 0.5641247034072876, 0.5411655902862549, 0.5255736112594604, 0.5135176777839661, 0.5011249780654907, 0.48959246277809143, 0.4790512025356293, 0.4682675004005432, 0.45921623706817627, 0.45216813683509827, 0.4444165527820587, 0.43571507930755615, 0.43520596623420715, 0.4280111789703369, 0.4221380650997162, 0.4166063368320465, 0.4113641381263733, 0.40549910068511963, 0.40293359756469727, 0.39987292885780334, 0.3928315341472626, 0.3976302444934845, 0.3853520154953003, 0.3835945725440979, 0.3813122510910034, 0.382933646440506, 0.3782168924808502, 0.3714769780635834, 0.3701355755329132, 0.37170735001564026, 0.36846768856048584, 0.36285266280174255, 0.3573492169380188, 0.3570416271686554, 0.360269695520401, 0.3548245131969452, 0.35045430064201355, 0.35374540090560913, 0.3528929054737091, 0.34952765703201294, 0.34308063983917236, 0.3418864607810974, 0.3369712829589844, 0.33821386098861694, 0.3444397449493408, 0.3337462842464447, 0.3351130485534668, 0.33566832542419434, 0.3342117369174957, 0.3274998664855957, 0.33040690422058105, 0.3291567265987396, 0.33809709548950195, 0.324614554643631, 0.3354310393333435], "val_accuracy": [0.5496666431427002, 0.6600000262260437, 0.6853333115577698, 0.7123333215713501, 0.7329999804496765, 0.7473333477973938, 0.7673333287239075, 0.7756666541099548, 0.7883333563804626, 0.796999990940094, 0.8036666512489319, 0.8106666803359985, 0.8143333196640015, 0.8186666369438171, 0.8203333616256714, 0.8236666917800903, 0.8296666741371155, 0.8330000042915344, 0.8330000042915344, 0.8389999866485596, 0.8416666388511658, 0.8403333425521851, 0.8473333120346069, 0.8450000286102295, 0.8483333587646484, 0.8510000109672546, 0.8506666421890259, 0.8566666841506958, 0.8546666502952576, 0.8579999804496765, 0.8543333411216736, 0.8566666841506958, 0.8629999756813049, 0.8616666793823242, 0.8616666793823242, 0.859000027179718, 0.8659999966621399, 0.8669999837875366, 0.8640000224113464, 0.8683333396911621, 0.8703333139419556, 0.8709999918937683, 0.8686666488647461, 0.8629999756813049, 0.8726666569709778, 0.8696666955947876, 0.8673333525657654, 0.8726666569709778, 0.8736666440963745, 0.874666690826416, 0.8733333349227905, 0.875333309173584, 0.878333330154419, 0.875333309173584, 0.878333330154419, 0.8790000081062317, 0.8756666779518127, 0.8816666603088379, 0.8820000290870667, 0.8763333559036255, 0.8793333172798157, 0.8756666779518127, 0.8786666393280029, 0.875]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 1, 1], [0, 2, 0], [0, 0], [0, 0], [0, 1], [0], [1], [0]], "fitness": -0.8602856993675232, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2928805351257324, 2.1889255046844482, 1.7655961513519287, 1.3356207609176636, 1.0671213865280151, 0.9118269085884094, 0.84782475233078, 0.8062794804573059, 0.773014485836029, 0.730099081993103, 0.6946032047271729, 0.6883797645568848, 0.6330194473266602, 0.6147628426551819, 0.6093633770942688, 0.5952305197715759, 0.5684270858764648, 0.5631195306777954, 0.5549480319023132, 0.5398302674293518, 0.5276559591293335, 0.5095317363739014, 0.4936679005622864, 0.4944210350513458, 0.4738359749317169, 0.4614804983139038, 0.4515319764614105, 0.44088315963745117, 0.446071982383728, 0.4328173100948334, 0.4233015477657318, 0.4210147261619568, 0.40646010637283325, 0.4023049473762512, 0.3941310942173004, 0.3820655643939972, 0.38707098364830017, 0.3735065460205078, 0.3657599687576294, 0.36874645948410034, 0.35294586420059204, 0.34120282530784607, 0.34373030066490173, 0.34304144978523254, 0.3382423520088196, 0.3336324095726013], "accuracy": [0.12600713968276978, 0.32967904210090637, 0.44604411721229553, 0.5525029897689819, 0.6386210322380066, 0.6745476126670837, 0.6851142644882202, 0.7092854380607605, 0.7041342258453369, 0.733588695526123, 0.7412495017051697, 0.7466648817062378, 0.7573636174201965, 0.7648923397064209, 0.7680623531341553, 0.7763835787773132, 0.7833839654922485, 0.7991018295288086, 0.7931581139564514, 0.8024039268493652, 0.8076872229576111, 0.811649739742279, 0.8165367841720581, 0.8207634687423706, 0.8210275769233704, 0.83119797706604, 0.8314621448516846, 0.8362171649932861, 0.8362171649932861, 0.8409721255302429, 0.8392550349235535, 0.8462554216384888, 0.8541803956031799, 0.8532558679580688, 0.850350022315979, 0.8570862412452698, 0.8647470474243164, 0.8594637513160706, 0.863558292388916, 0.8610487580299377, 0.8720116019248962, 0.8753136992454529, 0.8741249442100525, 0.8749174475669861, 0.8716153502464294, 0.8767666220664978], "val_loss": [2.246062755584717, 2.022200345993042, 1.151963472366333, 0.9267870187759399, 0.7973527908325195, 0.7260258793830872, 0.7259671092033386, 0.7018283009529114, 0.662161648273468, 0.6309757232666016, 0.5901856422424316, 0.5700409412384033, 0.5472702980041504, 0.5442640781402588, 0.5496695041656494, 0.5288509726524353, 0.5349657535552979, 0.5327578783035278, 0.5236462354660034, 0.5194410681724548, 0.5083791017532349, 0.504164457321167, 0.4982233941555023, 0.4922518730163574, 0.47458431124687195, 0.46217280626296997, 0.45729321241378784, 0.4548676609992981, 0.460114061832428, 0.4563140571117401, 0.44084733724594116, 0.43816128373146057, 0.44123977422714233, 0.4348095655441284, 0.44373658299446106, 0.4595166742801666, 0.44936656951904297, 0.44515660405158997, 0.45251086354255676, 0.4409908950328827, 0.44373348355293274, 0.4662800431251526, 0.4842914938926697, 0.46157434582710266, 0.4576656222343445, 0.49498283863067627], "val_accuracy": [0.4090000092983246, 0.460999995470047, 0.6453333497047424, 0.6883333325386047, 0.7070000171661377, 0.737666666507721, 0.7456666827201843, 0.7319999933242798, 0.7573333382606506, 0.765666663646698, 0.7746666669845581, 0.7860000133514404, 0.7993333339691162, 0.8053333163261414, 0.8026666641235352, 0.8083333373069763, 0.8046666383743286, 0.8090000152587891, 0.812333345413208, 0.8100000023841858, 0.8163333535194397, 0.8220000267028809, 0.8223333358764648, 0.8273333311080933, 0.8339999914169312, 0.8360000252723694, 0.8383333086967468, 0.8416666388511658, 0.8456666469573975, 0.8450000286102295, 0.8519999980926514, 0.8506666421890259, 0.8523333072662354, 0.8553333282470703, 0.8523333072662354, 0.8566666841506958, 0.8560000061988831, 0.8573333621025085, 0.8603333234786987, 0.8619999885559082, 0.862333357334137, 0.8573333621025085, 0.8616666793823242, 0.8576666712760925, 0.859666645526886, 0.8619999885559082]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 5, 3, 2, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8337143063545227, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4765814542770386, 0.7809467911720276, 0.6860023736953735, 0.616693913936615, 0.5665088295936584, 0.5620126128196716, 0.5513913631439209, 0.5683795809745789, 0.5773521661758423, 0.570259153842926, 0.5325744152069092, 0.5184979438781738, 0.5219689607620239, 0.5362673997879028], "accuracy": [0.49148064851760864, 0.7289658188819885, 0.7520803213119507, 0.7810064554214478, 0.7943468689918518, 0.8055738806724548, 0.809140145778656, 0.807158887386322, 0.8080834746360779, 0.8105930685997009, 0.8124422430992126, 0.8162726163864136, 0.8220842480659485, 0.8128384351730347], "val_loss": [0.780031144618988, 0.6538228392601013, 0.5434943437576294, 0.5048210024833679, 0.47804737091064453, 0.49272623658180237, 0.551264226436615, 0.5455482602119446, 0.5082095265388489, 0.5038763284683228, 0.5055664777755737, 0.5299751162528992, 0.5348103046417236, 0.572123110294342], "val_accuracy": [0.7093333601951599, 0.7570000290870667, 0.800000011920929, 0.812333345413208, 0.82833331823349, 0.8233333230018616, 0.8226666450500488, 0.8199999928474426, 0.8423333168029785, 0.8333333134651184, 0.8360000252723694, 0.8289999961853027, 0.828000009059906, 0.8289999961853027]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 1, 1, 3], [0, 0, 0, 0, 2], [39, 39, 22], [0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 5, 8, 1, 2, 1, 6, 2, 8], [1, 0, 4, 4, 7, 2, 2, 1, 7, 7], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [56920420.0, 8390064128.0, 149668495360.0, 1031673413632.0, 4556589629440.0, 14978310471680.0], "accuracy": [0.09853387624025345, 0.1002509593963623, 0.10394927859306335, 0.10091137140989304, 0.10196803510189056, 0.1026284471154213], "val_loss": [582663296.0, 31402407936.0, 337036771328.0, 1837387218944.0, 6882338537472.0, 20301014368256.0], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [9, 2, 3, 7, 3], [0, 0, 1, 0, 2], [83, 33, 27], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 7, 3, 7, 4], [0, 2, 0, 4, 0], [93, 16, 99], [0, 1], [0], [7], [66], [0, 1], [0], [1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 2, 1, 1, 1, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3042986392974854, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 4, 1], [0, 50], [0, 1], [0], [0], [0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 7, 0, 0, 4, 8, 3, 9], [1, 1, 1, 7], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.math.negative(tf.math.multiply(grad, tf.math.square(alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 3, 3, 1, 3], [0, 0, 1, 3, 2], [83, 99, 27], [0, 1], [5], [4], [10], [0, 0, 0, 1], [0, 0, 0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 0, 4, 3, 1, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.310199022293091, 2.3092172145843506, 2.308969736099243, 2.3093698024749756, 2.3099772930145264, 2.309647560119629], "accuracy": [0.09747721254825592, 0.09391097724437714, 0.09721305221319199, 0.0948355570435524, 0.09219389408826828, 0.09642054885625839], "val_loss": [2.309049367904663, 2.309049367904663, 2.309049367904663, 2.309049367904663, 2.309049367904663, 2.309049367904663], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]