[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8611428737640381, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2224464416503906, 1.8571935892105103, 1.3786225318908691, 1.092869520187378, 0.9353209137916565, 0.8408749103546143, 0.7769072651863098, 0.7315475344657898, 0.6884539723396301, 0.6651389598846436, 0.6338360905647278, 0.6103944778442383, 0.5965192317962646, 0.5795673131942749, 0.5539901256561279, 0.551196277141571, 0.5394515991210938, 0.5246537923812866, 0.5145368576049805, 0.4971069097518921, 0.4930224120616913, 0.4859716594219208, 0.4733749032020569, 0.4596708416938782, 0.4468623101711273, 0.4387921094894409, 0.4322715103626251, 0.43499141931533813, 0.42978090047836304, 0.42218711972236633, 0.4070974588394165, 0.405583918094635, 0.40044286847114563, 0.38993772864341736, 0.382865846157074, 0.3834599554538727, 0.37562206387519836, 0.37290170788764954, 0.366964727640152, 0.3590858280658722, 0.3491133153438568, 0.3507227301597595, 0.34938621520996094, 0.33915844559669495, 0.3372558653354645, 0.3246459364891052, 0.32729393243789673, 0.31918081641197205, 0.31615832448005676, 0.313594251871109, 0.30354756116867065, 0.3052513301372528, 0.295058935880661, 0.2922704219818115, 0.2904014587402344, 0.2886190116405487, 0.2798508405685425, 0.2817789316177368, 0.2793361246585846], "accuracy": [0.27843084931373596, 0.5004622936248779, 0.5661075115203857, 0.6205257177352905, 0.6688680648803711, 0.7012283802032471, 0.7177387475967407, 0.7346453666687012, 0.7530049085617065, 0.7589486241340637, 0.7720248103141785, 0.7819310426712036, 0.7817989587783813, 0.7903843522071838, 0.798309326171875, 0.8016114234924316, 0.8084797263145447, 0.8141592741012573, 0.816008448600769, 0.8232730031013489, 0.8249900937080383, 0.8277638554573059, 0.8285563588142395, 0.837141752243042, 0.8407079577445984, 0.8424250483512878, 0.8465195894241333, 0.8438779711723328, 0.843481719493866, 0.8485008478164673, 0.852859616279602, 0.8557654023170471, 0.8580108284950256, 0.8578787446022034, 0.8625016212463379, 0.8618412613868713, 0.8621054291725159, 0.8644828796386719, 0.8668603897094727, 0.8730682730674744, 0.8741249442100525, 0.8710870146751404, 0.8739928603172302, 0.8771628737449646, 0.8774270415306091, 0.8833707571029663, 0.8803328275680542, 0.8799365758895874, 0.8838990926742554, 0.8833707571029663, 0.8845595121383667, 0.8881257176399231, 0.8949940800666809, 0.8952582478523254, 0.89552241563797, 0.8942015767097473, 0.8977677822113037, 0.89552241563797, 0.8976356983184814], "val_loss": [2.035781145095825, 1.5041413307189941, 1.0296227931976318, 0.825065016746521, 0.7349552512168884, 0.6848177909851074, 0.64077228307724, 0.606991171836853, 0.5768592953681946, 0.5668198466300964, 0.5434035658836365, 0.5286049842834473, 0.5217410922050476, 0.49719730019569397, 0.4894475042819977, 0.47969725728034973, 0.4701921343803406, 0.46230459213256836, 0.45242276787757874, 0.4459618628025055, 0.43827205896377563, 0.4349950850009918, 0.4305110275745392, 0.42209121584892273, 0.4143046736717224, 0.41192904114723206, 0.40833941102027893, 0.40498897433280945, 0.39691728353500366, 0.3929072320461273, 0.3940856158733368, 0.3909989297389984, 0.3806653618812561, 0.3830479383468628, 0.377314954996109, 0.3741224706172943, 0.3712001442909241, 0.3727072775363922, 0.36930644512176514, 0.3625463843345642, 0.35714372992515564, 0.35912182927131653, 0.35897672176361084, 0.3516818583011627, 0.35819998383522034, 0.35239502787590027, 0.35168442130088806, 0.3539072275161743, 0.3448975384235382, 0.34214502573013306, 0.34311383962631226, 0.3398912250995636, 0.3416060507297516, 0.33692851662635803, 0.3365286588668823, 0.34149959683418274, 0.33227330446243286, 0.33677908778190613, 0.33522337675094604], "val_accuracy": [0.5583333373069763, 0.6620000004768372, 0.6926666498184204, 0.7149999737739563, 0.7269999980926514, 0.7566666603088379, 0.7620000243186951, 0.7713333368301392, 0.784333348274231, 0.7806666493415833, 0.79666668176651, 0.8073333501815796, 0.8043333292007446, 0.815666675567627, 0.8163333535194397, 0.8233333230018616, 0.8296666741371155, 0.8353333473205566, 0.831333339214325, 0.8349999785423279, 0.8370000123977661, 0.8383333086967468, 0.8379999995231628, 0.8489999771118164, 0.8479999899864197, 0.846666693687439, 0.847000002861023, 0.8489999771118164, 0.8533333539962769, 0.8586666584014893, 0.8516666889190674, 0.8560000061988831, 0.859333336353302, 0.8579999804496765, 0.859333336353302, 0.859333336353302, 0.8616666793823242, 0.862333357334137, 0.8613333106040955, 0.8656666874885559, 0.8646666407585144, 0.8673333525657654, 0.8640000224113464, 0.8643333315849304, 0.8656666874885559, 0.8656666874885559, 0.8676666617393494, 0.8679999709129333, 0.8703333139419556, 0.8679999709129333, 0.8730000257492065, 0.8743333220481873, 0.8726666569709778, 0.8756666779518127, 0.8713333606719971, 0.871999979019165, 0.875333309173584, 0.875333309173584, 0.8736666440963745]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1, 0, 1, 0], [0, 4, 1, 9], [0, 1], [0, 92], [0, 1], [0], [1], [0]], "fitness": -0.8551428318023682, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2930564880371094, 2.188810348510742, 1.7678924798965454, 1.3214216232299805, 1.0695438385009766, 0.8993200063705444, 0.8285351991653442, 0.77946537733078, 0.7351999282836914, 0.7087053060531616, 0.6842098832130432, 0.6611782908439636, 0.6287943124771118, 0.6142523884773254, 0.5768001675605774, 0.5799440145492554, 0.5492756366729736, 0.5282050371170044, 0.5300659537315369, 0.5244505405426025, 0.5082371234893799, 0.5030691623687744, 0.4878522455692291, 0.4852578341960907, 0.47617456316947937, 0.4630569815635681, 0.44939684867858887, 0.44496890902519226, 0.4319833219051361, 0.43215498328208923, 0.4253450930118561, 0.4177784323692322, 0.4074205160140991, 0.39329996705055237, 0.393270343542099, 0.3886730372905731, 0.3867426812648773, 0.3787137269973755, 0.3691694140434265, 0.367515504360199, 0.3672538101673126, 0.3445024788379669, 0.35100865364074707, 0.3463897705078125, 0.34528443217277527, 0.3295964002609253, 0.31850358843803406, 0.33583688735961914, 0.32700636982917786, 0.3224182426929474, 0.3184266984462738, 0.30941492319107056, 0.3041892647743225, 0.3078767955303192, 0.30327877402305603, 0.3039012551307678, 0.29118794202804565], "accuracy": [0.13129045069217682, 0.3319244384765625, 0.4357416331768036, 0.5546162724494934, 0.6420552134513855, 0.6719059348106384, 0.6977941989898682, 0.7096816897392273, 0.7201162576675415, 0.7279091477394104, 0.741909921169281, 0.752212405204773, 0.7613261342048645, 0.7650244235992432, 0.778761088848114, 0.7777044177055359, 0.7902522683143616, 0.8020076751708984, 0.798309326171875, 0.802271842956543, 0.8095363974571228, 0.8096684813499451, 0.8133667707443237, 0.8175934553146362, 0.8171972036361694, 0.8247259259223938, 0.8296129703521729, 0.8329150676727295, 0.8363492488861084, 0.8372738361358643, 0.839519202709198, 0.8421608805656433, 0.8474441766738892, 0.8499537706375122, 0.8498216867446899, 0.8518029451370239, 0.8569541573524475, 0.8573504090309143, 0.8602562546730042, 0.8602562546730042, 0.8593316674232483, 0.8720116019248962, 0.8717474341392517, 0.8704266548156738, 0.8677849769592285, 0.8728041052818298, 0.8805969953536987, 0.8745211958885193, 0.8693699836730957, 0.8720116019248962, 0.8780874609947205, 0.8831065893173218, 0.880729079246521, 0.8817857503890991, 0.882710337638855, 0.8768987059593201, 0.8882578015327454], "val_loss": [2.246978282928467, 2.0196356773376465, 1.1421838998794556, 0.884721040725708, 0.7711477875709534, 0.7214322686195374, 0.6818313598632812, 0.6684706807136536, 0.6308196783065796, 0.6200147867202759, 0.59872967004776, 0.5858094692230225, 0.5554889440536499, 0.5446204543113708, 0.5401418805122375, 0.5205653309822083, 0.5184789299964905, 0.5081407427787781, 0.510508120059967, 0.4990721046924591, 0.49176403880119324, 0.4979606866836548, 0.47745606303215027, 0.47621089220046997, 0.47539302706718445, 0.4739835560321808, 0.47075116634368896, 0.4621173143386841, 0.4661644697189331, 0.4662398397922516, 0.4577198624610901, 0.4584634602069855, 0.4526863694190979, 0.4601275324821472, 0.48131975531578064, 0.4721788763999939, 0.46001186966896057, 0.4607178568840027, 0.4505496919155121, 0.4396994113922119, 0.43755048513412476, 0.4462490379810333, 0.45371687412261963, 0.4355390667915344, 0.4464866518974304, 0.46528321504592896, 0.46170490980148315, 0.4554907977581024, 0.4483047425746918, 0.45778194069862366, 0.4725467264652252, 0.4713381230831146, 0.4681580364704132, 0.48175081610679626, 0.46855705976486206, 0.471900075674057, 0.4805235266685486], "val_accuracy": [0.4176666736602783, 0.46666666865348816, 0.637333333492279, 0.6933333277702332, 0.7213333249092102, 0.7236666679382324, 0.7416666746139526, 0.7416666746139526, 0.7553333044052124, 0.7730000019073486, 0.7710000276565552, 0.7866666913032532, 0.7940000295639038, 0.7906666398048401, 0.8006666898727417, 0.8096666932106018, 0.8113333582878113, 0.8226666450500488, 0.8276666402816772, 0.8149999976158142, 0.8216666579246521, 0.8299999833106995, 0.8379999995231628, 0.8353333473205566, 0.8376666903495789, 0.8420000076293945, 0.8366666436195374, 0.8386666774749756, 0.8450000286102295, 0.8460000157356262, 0.840666651725769, 0.8416666388511658, 0.8463333249092102, 0.8443333506584167, 0.8486666679382324, 0.8516666889190674, 0.8600000143051147, 0.8579999804496765, 0.8566666841506958, 0.8573333621025085, 0.8586666584014893, 0.862333357334137, 0.8629999756813049, 0.8600000143051147, 0.859000027179718, 0.8656666874885559, 0.8646666407585144, 0.8676666617393494, 0.8656666874885559, 0.8640000224113464, 0.871999979019165, 0.8726666569709778, 0.8690000176429749, 0.8673333525657654, 0.8693333268165588, 0.8656666874885559, 0.8673333525657654]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 6, 4, 2, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8342857360839844, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5811783075332642, 0.8493314981460571, 0.7051165103912354, 0.6073589324951172, 0.5669182538986206, 0.5457377433776855, 0.5507979989051819, 0.544050395488739, 0.5084491968154907, 0.5182621479034424, 0.5241974592208862, 0.4854446351528168, 0.47016438841819763, 0.4737449586391449, 0.5004105567932129, 0.511275589466095, 0.4641572833061218, 0.4977065324783325, 0.4655538499355316], "accuracy": [0.48791441321372986, 0.6907938122749329, 0.7511557340621948, 0.7775723338127136, 0.7940827012062073, 0.8010830879211426, 0.7957997918128967, 0.8079513907432556, 0.8227446675300598, 0.8148196935653687, 0.8210275769233704, 0.8253863453865051, 0.8345000743865967, 0.8322546482086182, 0.8341038227081299, 0.817989706993103, 0.8448025584220886, 0.8284242749214172, 0.835160493850708], "val_loss": [0.875071108341217, 0.6381320953369141, 0.536352813243866, 0.49667784571647644, 0.48955705761909485, 0.4832310378551483, 0.49196332693099976, 0.4461127817630768, 0.49578410387039185, 0.48491206765174866, 0.4543863534927368, 0.4493838846683502, 0.48041409254074097, 0.4824037253856659, 0.4596341550350189, 0.45931297540664673, 0.48272696137428284, 0.4791449308395386, 0.4857846200466156], "val_accuracy": [0.6930000185966492, 0.7666666507720947, 0.7996666431427002, 0.8230000138282776, 0.8169999718666077, 0.8213333487510681, 0.8349999785423279, 0.8333333134651184, 0.8230000138282776, 0.8360000252723694, 0.8393333554267883, 0.8403333425521851, 0.8453333377838135, 0.8523333072662354, 0.8513333201408386, 0.8479999899864197, 0.8479999899864197, 0.8486666679382324, 0.8506666421890259]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], [0, 2, 3, 0, 3, 5, 8, 9], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0, 0, 4, 7, 7], [99], [0, 1], [0], [1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 8, 3, 2, 2, 2, 0, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), grad), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2802169856.0, 2.405714273452759, 2.365520477294922, 2.392860174179077, 2.426669120788574, 2.425652503967285, 7.877268314361572], "accuracy": [0.09285431355237961, 0.10038304328918457, 0.09879804402589798, 0.09919429570436478, 0.09840179979801178, 0.10289261490106583, 0.09800554811954498], "val_loss": [2.3177053928375244, 2.389817714691162, 2.440197467803955, 2.449517011642456, 2.371501922607422, 2.9649388790130615, 32.269474029541016], "val_accuracy": [0.1003333330154419, 0.10300000011920929, 0.09833333641290665, 0.0976666659116745, 0.09700000286102295, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 9, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 1, 0, 3, 0, 0, 0, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 6, 4, 2, 2, 2, 1, 1, 0, 12, 6, 6, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3034629821777344, 2.302583694458008, 2.302584409713745, 2.302584648132324, 2.302584648132324, 2.302584648132324], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025848865509033, 2.3025848865509033, 2.3025851249694824, 2.3025848865509033, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 6, 0, 3], [0, 1, 0, 2], [74, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 2, 3, 0, 3, 5], [0, 2, 0, 3, 5], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 4, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 3, 3, 3, 1, 2, 0], [16, 99, 96, 99, 56, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 11, 6, 5, 2, 2, 1, 1, 1, 21, 11, 10, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(sigma, tf.math.pow(sigma, sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [6, 39], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 5, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 3, 8, 1, 4, 1, 8, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [49, 99, 96, 99, 61, 1]], "fitness": -0.087714284658432, "mapping_values": [1, 9, 5, 4, 2, 5, 3, 2, 1, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma), alpha)", "other_info": {"loss": [546203842379776.0, 644706266513408.0, 652374595076096.0, 893937246011392.0, 638520641191936.0, 633222530596864.0], "accuracy": [0.09140139818191528, 0.08968432247638702, 0.09060890227556229, 0.08968432247638702, 0.08532558381557465, 0.08730682730674744], "val_loss": [568658233393152.0, 568660783529984.0, 568734737498112.0, 568744736718848.0, 568833924399104.0, 568818623578112.0], "val_accuracy": [0.0833333358168602, 0.0833333358168602, 0.0833333358168602, 0.0833333358168602, 0.0833333358168602, 0.0833333358168602]}}]