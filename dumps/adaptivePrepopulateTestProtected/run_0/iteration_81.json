[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8628571629524231, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.29337739944458, 2.1912636756896973, 1.7884140014648438, 1.3695162534713745, 1.0962388515472412, 0.9188711643218994, 0.8408477902412415, 0.813759446144104, 0.7684704065322876, 0.7425728440284729, 0.7001354098320007, 0.6879519820213318, 0.6540654301643372, 0.6345269083976746, 0.6156823039054871, 0.5977648496627808, 0.5780174136161804, 0.5725940465927124, 0.561816930770874, 0.5314220786094666, 0.5286805629730225, 0.5206835269927979, 0.5050551891326904, 0.5004644393920898, 0.4888593256473541, 0.4690038561820984, 0.46004241704940796, 0.4589903950691223, 0.4538639485836029, 0.437245637178421, 0.4294041395187378, 0.4193572700023651, 0.41480496525764465, 0.411702960729599, 0.4114804267883301, 0.40484052896499634, 0.3785509765148163, 0.38287079334259033, 0.36957794427871704, 0.37530019879341125, 0.35928916931152344, 0.3546018898487091, 0.35779234766960144, 0.3461441993713379, 0.34168702363967896, 0.334476500749588, 0.3287663757801056], "accuracy": [0.1328754425048828, 0.3195086419582367, 0.43904373049736023, 0.5370492935180664, 0.6221106648445129, 0.6646413803100586, 0.6864351034164429, 0.6944921612739563, 0.7077004313468933, 0.7096816897392273, 0.7334566116333008, 0.7353057861328125, 0.7464007139205933, 0.7605336308479309, 0.7614582180976868, 0.769911527633667, 0.7717606425285339, 0.7775723338127136, 0.787082314491272, 0.7946110367774963, 0.7956677079200745, 0.8074230551719666, 0.8064984679222107, 0.8141592741012573, 0.8098005652427673, 0.821820080280304, 0.8298771381378174, 0.8261788487434387, 0.8224804997444153, 0.8327829837799072, 0.8407079577445984, 0.8384625315666199, 0.8380662798881531, 0.8425571322441101, 0.8399154543876648, 0.8400475382804871, 0.8597279191017151, 0.8561616539955139, 0.8622375130653381, 0.8585391640663147, 0.86553955078125, 0.8658037185668945, 0.8631620407104492, 0.8709549307823181, 0.8722757697105408, 0.872407853603363, 0.8714832663536072], "val_loss": [2.246102809906006, 2.0241706371307373, 1.1512880325317383, 0.8824580311775208, 0.7646450400352478, 0.6740061044692993, 0.6619939804077148, 0.6312484741210938, 0.6244451999664307, 0.5912032127380371, 0.5544912815093994, 0.5311285257339478, 0.5061056017875671, 0.497152179479599, 0.48851466178894043, 0.47549954056739807, 0.46594101190567017, 0.4586377739906311, 0.44433289766311646, 0.43956613540649414, 0.43574944138526917, 0.43363094329833984, 0.43527278304100037, 0.41995570063591003, 0.4171799421310425, 0.41080448031425476, 0.4092041850090027, 0.41266894340515137, 0.4034867286682129, 0.39820629358291626, 0.3951475918292999, 0.3970060646533966, 0.39684587717056274, 0.39752987027168274, 0.3912126421928406, 0.38191545009613037, 0.38795095682144165, 0.39296263456344604, 0.39118292927742004, 0.3857516646385193, 0.3862212002277374, 0.37433648109436035, 0.38225609064102173, 0.37601009011268616, 0.37375983595848083, 0.3725345730781555, 0.3690854012966156], "val_accuracy": [0.4273333251476288, 0.4646666646003723, 0.6510000228881836, 0.6893333196640015, 0.7133333086967468, 0.7480000257492065, 0.7573333382606506, 0.7643333077430725, 0.7723333239555359, 0.7703333497047424, 0.7820000052452087, 0.7906666398048401, 0.8040000200271606, 0.812333345413208, 0.8116666674613953, 0.8113333582878113, 0.8163333535194397, 0.8236666917800903, 0.8263333439826965, 0.8356666564941406, 0.8383333086967468, 0.8383333086967468, 0.8326666951179504, 0.8423333168029785, 0.8429999947547913, 0.8506666421890259, 0.8526666760444641, 0.8443333506584167, 0.8513333201408386, 0.856333315372467, 0.859333336353302, 0.8556666374206543, 0.8610000014305115, 0.856333315372467, 0.8556666374206543, 0.8633333444595337, 0.8643333315849304, 0.8646666407585144, 0.8600000143051147, 0.8646666407585144, 0.8703333139419556, 0.871666669845581, 0.8690000176429749, 0.8650000095367432, 0.8650000095367432, 0.8603333234786987, 0.8703333139419556]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8625714182853699, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2244367599487305, 1.8778022527694702, 1.4001812934875488, 1.0908349752426147, 0.928570032119751, 0.8308914303779602, 0.7715042233467102, 0.7131959795951843, 0.6846325397491455, 0.6449302434921265, 0.6245347857475281, 0.5973443388938904, 0.5817952752113342, 0.566986083984375, 0.5478194952011108, 0.5368832945823669, 0.5203107595443726, 0.5007369518280029, 0.49882984161376953, 0.4907887578010559, 0.47490230202674866, 0.45996609330177307, 0.45295479893684387, 0.44798511266708374, 0.44150564074516296, 0.4270910620689392, 0.4312465488910675, 0.41947072744369507, 0.40593165159225464, 0.3964433968067169, 0.39682653546333313, 0.3864419758319855, 0.38456353545188904, 0.3726859986782074, 0.37430813908576965, 0.36688464879989624, 0.3627295196056366, 0.3550218939781189, 0.3555528521537781, 0.350469708442688, 0.3422095477581024, 0.34006693959236145, 0.33337482810020447], "accuracy": [0.2719587981700897, 0.4826310873031616, 0.5634658336639404, 0.6166952848434448, 0.6651697158813477, 0.7025492191314697, 0.7206445932388306, 0.7383436560630798, 0.7448157668113708, 0.7582882046699524, 0.769911527633667, 0.7819310426712036, 0.7868181467056274, 0.7927618622779846, 0.8043851256370544, 0.7989697456359863, 0.8094043135643005, 0.8219521641731262, 0.8210275769233704, 0.8222163319587708, 0.8277638554573059, 0.8325188159942627, 0.8385946154594421, 0.8408400416374207, 0.8393871188163757, 0.8491612672805786, 0.8469158411026001, 0.8482366800308228, 0.8541803956031799, 0.8553691506385803, 0.858671247959137, 0.8634262084960938, 0.8636903762817383, 0.8664641380310059, 0.8648791313171387, 0.8705587387084961, 0.8745211958885193, 0.8734645247459412, 0.8728041052818298, 0.872407853603363, 0.8800686597824097, 0.8772949576377869, 0.8796724081039429], "val_loss": [2.043132781982422, 1.5212630033493042, 1.0504671335220337, 0.8447386622428894, 0.7650430798530579, 0.7083421349525452, 0.6642309427261353, 0.6297900676727295, 0.6104989647865295, 0.579811692237854, 0.5596786141395569, 0.5432632565498352, 0.5289614200592041, 0.5228762030601501, 0.5082092881202698, 0.49817904829978943, 0.48162662982940674, 0.47570720314979553, 0.47181013226509094, 0.4589100778102875, 0.4550209939479828, 0.4468691349029541, 0.44158145785331726, 0.43659326434135437, 0.42945346236228943, 0.4244316816329956, 0.42373836040496826, 0.4187678098678589, 0.41672664880752563, 0.4128686189651489, 0.4042915105819702, 0.4037465751171112, 0.40145421028137207, 0.3980654776096344, 0.39400407671928406, 0.39498063921928406, 0.3890690207481384, 0.390723317861557, 0.3899040222167969, 0.3848503828048706, 0.3825910687446594, 0.38043126463890076, 0.37728604674339294], "val_accuracy": [0.5346666574478149, 0.6606666445732117, 0.6836666464805603, 0.7023333311080933, 0.7213333249092102, 0.7393333315849304, 0.7549999952316284, 0.7556666731834412, 0.7739999890327454, 0.7839999794960022, 0.7926666736602783, 0.8023333549499512, 0.8119999766349792, 0.812666654586792, 0.8206666707992554, 0.8259999752044678, 0.8296666741371155, 0.8353333473205566, 0.8349999785423279, 0.8446666598320007, 0.8383333086967468, 0.8429999947547913, 0.8460000157356262, 0.8513333201408386, 0.8519999980926514, 0.8546666502952576, 0.8560000061988831, 0.8539999723434448, 0.859000027179718, 0.856333315372467, 0.8610000014305115, 0.8633333444595337, 0.8653333187103271, 0.8633333444595337, 0.8673333525657654, 0.8659999966621399, 0.8653333187103271, 0.871666669845581, 0.8696666955947876, 0.8653333187103271, 0.8703333139419556, 0.8706666827201843, 0.8713333606719971]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 1], [0, 3], [0], [1], [0], [2], [0]], "fitness": -0.8305714130401611, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6171597242355347, 0.8972835540771484, 0.726454496383667, 0.6911776661872864, 0.680519700050354, 0.6343246102333069, 0.5878354907035828, 0.5919892191886902, 0.5912421941757202, 0.5541757345199585, 0.5264354348182678, 0.5319023132324219, 0.4996366798877716, 0.4983704090118408, 0.5206468105316162], "accuracy": [0.4699511229991913, 0.6859067678451538, 0.7386078238487244, 0.7397965788841248, 0.7643640041351318, 0.7640998363494873, 0.7849689722061157, 0.7928939461708069, 0.7827235460281372, 0.8031964302062988, 0.8088759779930115, 0.8156121969223022, 0.8253863453865051, 0.8158763647079468, 0.8212917447090149], "val_loss": [0.9184038043022156, 0.6543599367141724, 0.6174941658973694, 0.5878629684448242, 0.5860324501991272, 0.5720078349113464, 0.5349358320236206, 0.5874144434928894, 0.5659250617027283, 0.5510759353637695, 0.5547103881835938, 0.5692782998085022, 0.5623303055763245, 0.5820483565330505, 0.5842235684394836], "val_accuracy": [0.6776666641235352, 0.7630000114440918, 0.7816666960716248, 0.7960000038146973, 0.7720000147819519, 0.7996666431427002, 0.8103333115577698, 0.8046666383743286, 0.8203333616256714, 0.8309999704360962, 0.8236666917800903, 0.8306666612625122, 0.8173333406448364, 0.8296666741371155, 0.8186666369438171]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 5, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [9, 2, 3, 0, 3, 8], [0, 2, 1, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 2, 3, 0], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0, 2, 3], [76, 99, 18, 69, 61, 1]], "fitness": -0.5897142887115479, "mapping_values": [1, 9, 5, 4, 2, 1, 1, 0, 1, 2, 1, 1, 1, 26, 14, 12, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), sigma), grad)), tf.math.pow(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), sigma))), alpha), tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(beta, tf.math.negative(sigma))))", "other_info": {"loss": [2.06512451171875, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2973187267780304, 0.201294407248497, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.1290868520736694, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.5946666598320007, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 4, 0, 3, 2, 0, 0, 6, 8, 2, 8, 6, 9], [0, 2, 0, 3, 0, 2, 0], [16, 16, 98, 58, 49], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 3, 6, 8, 1, 2, 1, 4, 2, 8], [1, 0, 0, 3, 0, 0, 4, 1, 4, 0], [16, 99, 96, 89, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 21, 14, 7, 5, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(grad, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.divide_no_nan(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), beta))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), grad)))), alpha), tf.math.add(tf.math.sqrt(grad), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 2, 0, 3], [0, 1, 0, 1], [94, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [4, 2, 3, 0, 3, 5, 1, 9, 4, 5, 8, 8], [1, 2, 0, 3, 3, 0], [16, 16, 6], [0, 1], [0], [0], [45], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 6], [0, 0, 0, 2, 0, 0, 0, 1, 2, 0], [16, 99, 96, 99, 61, 20]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 18, 12, 6, 3, 2, 1, 1, 1, 16, 8, 8, 6], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(alpha, tf.math.square(beta))), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.sqrt(grad))))), grad), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(beta, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 3, 3, 1, 3, 0, 3], [0, 2, 0, 2, 0, 0], [39, 39, 91, 72], [0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [68, 16], [0, 1], [0, 9], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 2, 5, 1, 4, 2, 8], [0, 0, 0, 3, 2, 0, 3, 1, 2, 0], [0, 73, 77, 89, 36, 26]], "fitness": -0.09314285963773727, "mapping_values": [1, 13, 7, 6, 4, 2, 1, 1, 1, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.subtract(beta, tf.math.pow(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), sigma))), alpha)", "other_info": {"loss": [2.308519124984741, 2.31109619140625, 2.310054302215576, 2.3104248046875, 2.3095548152923584, 2.311150550842285], "accuracy": [0.09245806187391281, 0.08981640636920929, 0.09021265059709549, 0.08994849026203156, 0.08809932321310043, 0.08849557489156723], "val_loss": [2.308760166168213, 2.308760166168213, 2.308760166168213, 2.308760166168213, 2.308760166168213, 2.308760166168213], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}]