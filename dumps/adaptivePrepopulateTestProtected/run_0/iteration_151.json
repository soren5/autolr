[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8788571357727051, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223778247833252, 1.869816780090332, 1.3854763507843018, 1.0877859592437744, 0.9313703775405884, 0.8305619955062866, 0.7596983313560486, 0.7178841233253479, 0.678885817527771, 0.6427952647209167, 0.6314711570739746, 0.6065253019332886, 0.5803450345993042, 0.5689871311187744, 0.5544987320899963, 0.5336046814918518, 0.5189152956008911, 0.5142802596092224, 0.4972553849220276, 0.48589378595352173, 0.4789123237133026, 0.47044631838798523, 0.45680922269821167, 0.4485171139240265, 0.45258986949920654, 0.44318363070487976, 0.4277282655239105, 0.42588117718696594, 0.4205707907676697, 0.4097837805747986, 0.4017646610736847, 0.3997235894203186, 0.39143604040145874, 0.3813983201980591, 0.3799765408039093, 0.3789656162261963, 0.36794283986091614, 0.3624574840068817, 0.35929128527641296, 0.35348811745643616, 0.3508596420288086, 0.34113216400146484, 0.3462033271789551, 0.33102670311927795, 0.330086886882782, 0.32165828347206116, 0.3163209855556488, 0.31816115975379944, 0.30683767795562744, 0.30308493971824646, 0.3014288544654846, 0.2991333305835724, 0.3007844388484955, 0.29286450147628784, 0.28524908423423767, 0.28070855140686035, 0.2784059941768646, 0.26981455087661743, 0.2657836079597473, 0.26673373579978943, 0.2612868845462799, 0.2518042027950287, 0.25471100211143494, 0.24872227013111115, 0.2470250278711319, 0.2423699051141739, 0.2363964468240738, 0.2331322431564331, 0.2366485893726349, 0.22393356263637543, 0.22837325930595398, 0.218330517411232, 0.21717983484268188, 0.21057762205600739, 0.20735885202884674, 0.2054237574338913, 0.20540645718574524, 0.19891852140426636, 0.19594213366508484, 0.20225878059864044, 0.1904907077550888, 0.18262125551700592, 0.18921315670013428, 0.18402932584285736, 0.18388424813747406, 0.18099281191825867, 0.17825645208358765, 0.1715107411146164], "accuracy": [0.2751287817955017, 0.47906485199928284, 0.5712587237358093, 0.6231673359870911, 0.6653017997741699, 0.7033417224884033, 0.7341170310974121, 0.7374191284179688, 0.7518161535263062, 0.7711002230644226, 0.7761194109916687, 0.783119797706604, 0.7940827012062073, 0.7932901978492737, 0.8016114234924316, 0.8078193068504333, 0.8191784620285034, 0.8201030492782593, 0.8281601071357727, 0.8253863453865051, 0.8310658931732178, 0.8338396549224854, 0.8387266993522644, 0.8429533839225769, 0.8429533839225769, 0.8430854678153992, 0.8474441766738892, 0.8525954484939575, 0.8488970994949341, 0.8557654023170471, 0.8605204224586487, 0.8562937378883362, 0.8647470474243164, 0.8679170608520508, 0.8650112152099609, 0.867520809173584, 0.870030403137207, 0.8725399374961853, 0.8734645247459412, 0.8730682730674744, 0.8811253309249878, 0.8813894987106323, 0.8728041052818298, 0.8854840993881226, 0.8800686597824097, 0.885219931602478, 0.8873332738876343, 0.8868049383163452, 0.8886540532112122, 0.8912957310676575, 0.8923524022102356, 0.8920882344245911, 0.8905032277107239, 0.8961827754974365, 0.895918607711792, 0.8968431949615479, 0.8986923694610596, 0.9041078090667725, 0.9021265506744385, 0.902390718460083, 0.9058248400688171, 0.9096552729606628, 0.908730685710907, 0.9115044474601746, 0.9109761118888855, 0.9133535623550415, 0.9162594079971313, 0.9157310724258423, 0.9140139818191528, 0.9169198274612427, 0.9167877435684204, 0.9225993752479553, 0.9235239624977112, 0.9220710396766663, 0.9252410531044006, 0.9272223114967346, 0.9260335564613342, 0.9299960136413574, 0.9298639297485352, 0.9265618920326233, 0.9314489364624023, 0.9351472854614258, 0.930788516998291, 0.9344868659973145, 0.9322414398193359, 0.935279369354248, 0.9355435371398926, 0.9375247359275818], "val_loss": [2.043229818344116, 1.5252792835235596, 1.059319019317627, 0.8622859120368958, 0.7739511728286743, 0.712826669216156, 0.6653242111206055, 0.6353532075881958, 0.6145880818367004, 0.588234007358551, 0.5718778371810913, 0.5557640790939331, 0.5459425449371338, 0.525135338306427, 0.5168591141700745, 0.5053482055664062, 0.4997932016849518, 0.48488402366638184, 0.47919487953186035, 0.4703822433948517, 0.47141027450561523, 0.46116748452186584, 0.453118234872818, 0.44784554839134216, 0.44718751311302185, 0.43445050716400146, 0.4359551668167114, 0.42782077193260193, 0.42837169766426086, 0.4202001988887787, 0.41962215304374695, 0.41002556681632996, 0.40663206577301025, 0.40764692425727844, 0.40263956785202026, 0.3989400267601013, 0.3960455060005188, 0.39371103048324585, 0.3923947811126709, 0.3929206430912018, 0.3917257487773895, 0.3840952217578888, 0.3808329403400421, 0.3817606270313263, 0.37890157103538513, 0.37521520256996155, 0.3746592700481415, 0.3713971674442291, 0.3694106936454773, 0.36994099617004395, 0.36911842226982117, 0.3693079352378845, 0.36807316541671753, 0.3690676987171173, 0.36612769961357117, 0.36626964807510376, 0.36125749349594116, 0.3628350496292114, 0.36928442120552063, 0.3606704771518707, 0.35772624611854553, 0.3617168664932251, 0.3560544550418854, 0.3591160476207733, 0.35777518153190613, 0.35627302527427673, 0.3584086000919342, 0.3570273518562317, 0.3526735305786133, 0.35380101203918457, 0.3530525863170624, 0.35500773787498474, 0.35798314213752747, 0.3571338653564453, 0.35494470596313477, 0.35568180680274963, 0.3550068438053131, 0.35418087244033813, 0.3578505516052246, 0.3490322232246399, 0.35165348649024963, 0.3594669997692108, 0.3573257327079773, 0.35076624155044556, 0.35436558723449707, 0.35485583543777466, 0.35399290919303894, 0.3549942970275879], "val_accuracy": [0.5046666860580444, 0.6439999938011169, 0.6753333210945129, 0.6893333196640015, 0.7256666421890259, 0.7400000095367432, 0.7566666603088379, 0.7670000195503235, 0.7730000019073486, 0.7876666784286499, 0.7906666398048401, 0.7986666560173035, 0.8033333420753479, 0.8163333535194397, 0.8180000185966492, 0.8203333616256714, 0.8183333277702332, 0.82833331823349, 0.8303333520889282, 0.8323333263397217, 0.8263333439826965, 0.8370000123977661, 0.8410000205039978, 0.8399999737739563, 0.8399999737739563, 0.847000002861023, 0.843666672706604, 0.8476666808128357, 0.8493333458900452, 0.8533333539962769, 0.8493333458900452, 0.8579999804496765, 0.859000027179718, 0.8556666374206543, 0.8600000143051147, 0.862333357334137, 0.8613333106040955, 0.8606666922569275, 0.8610000014305115, 0.8673333525657654, 0.8650000095367432, 0.8603333234786987, 0.8673333525657654, 0.8690000176429749, 0.8700000047683716, 0.8703333139419556, 0.8726666569709778, 0.8713333606719971, 0.8700000047683716, 0.871666669845581, 0.874666690826416, 0.8733333349227905, 0.8733333349227905, 0.871666669845581, 0.8756666779518127, 0.874666690826416, 0.8759999871253967, 0.878000020980835, 0.8740000128746033, 0.8766666650772095, 0.8790000081062317, 0.8813333511352539, 0.8849999904632568, 0.8820000290870667, 0.8849999904632568, 0.8823333382606506, 0.8833333253860474, 0.8853333592414856, 0.8853333592414856, 0.8856666684150696, 0.8846666812896729, 0.8889999985694885, 0.8843333125114441, 0.8866666555404663, 0.887333333492279, 0.890999972820282, 0.8893333077430725, 0.8859999775886536, 0.8886666893959045, 0.8926666378974915, 0.890333354473114, 0.887333333492279, 0.8933333158493042, 0.8920000195503235, 0.8913333415985107, 0.890999972820282, 0.8916666507720947, 0.890666663646698]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8531428575515747, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223029613494873, 1.8650227785110474, 1.384871006011963, 1.0822877883911133, 0.9180870056152344, 0.8208470940589905, 0.7589573860168457, 0.7015186548233032, 0.6662169098854065, 0.6358440518379211, 0.6112645268440247, 0.5881830453872681, 0.5712924003601074, 0.5548579096794128, 0.5373643636703491, 0.5204564332962036, 0.5046034455299377, 0.5029260516166687, 0.4880995750427246, 0.48122861981391907, 0.472070574760437, 0.4653909206390381, 0.4532184302806854, 0.44322076439857483, 0.43479761481285095, 0.4320567846298218, 0.4145335555076599, 0.42133828997612, 0.4000006914138794, 0.3921956419944763, 0.40068498253822327, 0.3879235088825226, 0.38831526041030884, 0.3743058145046234, 0.370347797870636, 0.36596056818962097, 0.35517874360084534, 0.35914346575737, 0.3517250120639801, 0.3403928577899933, 0.3432413339614868, 0.33836057782173157, 0.3315271735191345, 0.32230982184410095, 0.3256832957267761, 0.31887465715408325, 0.3113291561603546, 0.3099842369556427, 0.3025244474411011, 0.30468833446502686, 0.2962742745876312], "accuracy": [0.2810725271701813, 0.49253731966018677, 0.5709945559501648, 0.6240919232368469, 0.6741513609886169, 0.709021270275116, 0.7309470176696777, 0.7471932172775269, 0.7602694630622864, 0.7672698497772217, 0.774798572063446, 0.7906485199928284, 0.7950072884559631, 0.7965922355651855, 0.8054417967796326, 0.8190463781356812, 0.819442629814148, 0.819442629814148, 0.8214238286018372, 0.8265751004219055, 0.8329150676727295, 0.8337075710296631, 0.8388587832450867, 0.8388587832450867, 0.8436138033866882, 0.8467837572097778, 0.8533879518508911, 0.8504821062088013, 0.8577466607093811, 0.8581429123878479, 0.8556333184242249, 0.8613129258155823, 0.8605204224586487, 0.8696341514587402, 0.8668603897094727, 0.872407853603363, 0.8755778670310974, 0.8676528930664062, 0.873860776424408, 0.8776912093162537, 0.8770307898521423, 0.8787478804588318, 0.8844274282455444, 0.883238673210144, 0.8809932470321655, 0.8848236799240112, 0.8894465565681458, 0.8870691061019897, 0.889578640460968, 0.8893144726753235, 0.89552241563797], "val_loss": [2.0387349128723145, 1.5188313722610474, 1.0495718717575073, 0.8318098187446594, 0.7421505451202393, 0.6828176975250244, 0.6362233757972717, 0.595180094242096, 0.5739313364028931, 0.5470575094223022, 0.5352774262428284, 0.5110835433006287, 0.5067821741104126, 0.48634061217308044, 0.4749903976917267, 0.4625096917152405, 0.4584660530090332, 0.452610582113266, 0.4408930540084839, 0.4379560947418213, 0.42710521817207336, 0.42211422324180603, 0.42404070496559143, 0.4111129641532898, 0.4102364778518677, 0.40220823884010315, 0.39879316091537476, 0.3942461609840393, 0.38857367634773254, 0.38564997911453247, 0.3862072825431824, 0.3781679570674896, 0.3834623694419861, 0.37964823842048645, 0.3722364902496338, 0.3696821331977844, 0.3639942705631256, 0.36395734548568726, 0.3622320294380188, 0.35961881279945374, 0.3584318459033966, 0.35527074337005615, 0.3546445369720459, 0.35720929503440857, 0.35158777236938477, 0.3484756350517273, 0.35357001423835754, 0.3499715030193329, 0.3439444303512573, 0.3454650044441223, 0.34450772404670715], "val_accuracy": [0.5350000262260437, 0.6536666750907898, 0.684333324432373, 0.7096666693687439, 0.7243333458900452, 0.7490000128746033, 0.7666666507720947, 0.7823333144187927, 0.7816666960716248, 0.8009999990463257, 0.8003333210945129, 0.8159999847412109, 0.8176666498184204, 0.8330000042915344, 0.8293333053588867, 0.8386666774749756, 0.8426666855812073, 0.840666651725769, 0.8456666469573975, 0.8500000238418579, 0.8503333330154419, 0.8556666374206543, 0.8560000061988831, 0.8610000014305115, 0.8576666712760925, 0.8690000176429749, 0.8643333315849304, 0.8643333315849304, 0.8676666617393494, 0.8709999918937683, 0.871999979019165, 0.8740000128746033, 0.871666669845581, 0.8673333525657654, 0.8756666779518127, 0.8723333477973938, 0.874666690826416, 0.8773333430290222, 0.8759999871253967, 0.878000020980835, 0.8793333172798157, 0.8769999742507935, 0.878333330154419, 0.8790000081062317, 0.8793333172798157, 0.8823333382606506, 0.8793333172798157, 0.8793333172798157, 0.8799999952316284, 0.8813333511352539, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 7], [0, 1], [0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 2, 2, 8, 4, 3, 1, 3, 1, 2, 8, 4, 8, 1, 4, 0, 7, 4, 7, 4, 2, 7, 0, 7, 0, 9, 5, 2, 8], [0, 0, 0, 1, 0, 0, 3, 4, 5, 4, 7, 1, 0, 5, 2, 4, 4, 4, 7], [0, 61, 61, 81, 39, 88, 32], [0, 1], [0], [1], [0]], "fitness": -0.8374285697937012, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.sqrt(tf.math.pow(alpha, tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), sigma))), grad)))), tf.math.pow(grad, grad)), tf.math.add(tf.math.pow(tf.math.add(tf.math.add(grad, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), beta), grad)), grad))), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2926721572875977, 2.1880264282226562, 1.7616684436798096, 1.3737295866012573, 1.0791529417037964, 0.9626024961471558, 0.850520133972168, 0.8365114331245422, 0.76981520652771, 0.7537961602210999, 0.7154389023780823, 0.6970160603523254, 0.6535962820053101, 0.6229671239852905, 0.6239117383956909, 0.6106426119804382, 0.5865863561630249, 0.5798463821411133, 0.559126079082489, 0.5496823787689209, 0.5309126377105713, 0.5269439816474915, 0.5115132927894592, 0.5074294805526733, 0.49154382944107056, 0.47127673029899597, 0.4691908061504364, 0.4561561644077301, 0.45707252621650696, 0.44562312960624695, 0.4401407837867737, 0.4253586232662201, 0.42184367775917053, 0.41245853900909424, 0.3991731107234955, 0.3996601402759552, 0.3787524402141571, 0.36385220289230347, 0.3656851351261139, 0.368953138589859, 0.34042513370513916, 0.3534032106399536, 0.35297104716300964, 0.3467055559158325, 0.3258785903453827, 0.3327934443950653, 0.32490578293800354, 0.31657248735427856, 0.3140581548213959, 0.3136482536792755, 0.2982894778251648, 0.28872963786125183, 0.2898957431316376, 0.28685739636421204, 0.2799730896949768, 0.29463157057762146, 0.2942180335521698, 0.279706746339798, 0.28720182180404663, 0.26027029752731323, 0.27488037943840027, 0.2610366940498352, 0.2776501774787903, 0.25360241532325745], "accuracy": [0.12653546035289764, 0.3257165551185608, 0.4377228915691376, 0.5375775694847107, 0.6341302394866943, 0.6513010263442993, 0.6861709356307983, 0.6952846646308899, 0.7077004313468933, 0.7054550051689148, 0.7246070504188538, 0.7337207794189453, 0.7445515990257263, 0.7617223858833313, 0.7532690763473511, 0.7617223858833313, 0.7745344042778015, 0.7729493975639343, 0.7814027070999146, 0.7882710099220276, 0.8030643463134766, 0.7917051911354065, 0.8099326491355896, 0.8061022162437439, 0.8142913579940796, 0.8181217908859253, 0.8157442808151245, 0.8220842480659485, 0.8208954930305481, 0.8272355198860168, 0.8277638554573059, 0.8383304476737976, 0.837141752243042, 0.8374059200286865, 0.8473120927810669, 0.8469158411026001, 0.850350022315979, 0.8617091774940491, 0.8607845902442932, 0.857218325138092, 0.8659358024597168, 0.8640866279602051, 0.8610487580299377, 0.8623695969581604, 0.8729361891746521, 0.8717474341392517, 0.8714832663536072, 0.8767666220664978, 0.8816536664962769, 0.8770307898521423, 0.882710337638855, 0.887597382068634, 0.8882578015327454, 0.8857482671737671, 0.8914278149604797, 0.8868049383163452, 0.8854840993881226, 0.8931449055671692, 0.8898428082466125, 0.8944657444953918, 0.8868049383163452, 0.9021265506744385, 0.8912957310676575, 0.9013340473175049], "val_loss": [2.245180606842041, 2.0119855403900146, 1.1337547302246094, 0.8892740607261658, 0.7799221873283386, 0.7091476321220398, 0.6490164399147034, 0.6270480155944824, 0.6311180591583252, 0.5978314876556396, 0.5447516441345215, 0.5380523800849915, 0.539968729019165, 0.5438635349273682, 0.5129509568214417, 0.5188060402870178, 0.5085067749023438, 0.4777534306049347, 0.48300719261169434, 0.48206689953804016, 0.4689203202724457, 0.46563366055488586, 0.4612502455711365, 0.4625850021839142, 0.4486110508441925, 0.43319734930992126, 0.43093037605285645, 0.42767953872680664, 0.42105382680892944, 0.4129634201526642, 0.4072591960430145, 0.39998194575309753, 0.3976248502731323, 0.38983097672462463, 0.3954298496246338, 0.3881698548793793, 0.3882290720939636, 0.39996516704559326, 0.39499878883361816, 0.3830758333206177, 0.38826844096183777, 0.38406696915626526, 0.3756149411201477, 0.3705272674560547, 0.3807816207408905, 0.38079336285591125, 0.37278735637664795, 0.37017083168029785, 0.36568400263786316, 0.3697952926158905, 0.386077880859375, 0.3825755715370178, 0.3745497167110443, 0.39495792984962463, 0.404774010181427, 0.40198400616645813, 0.409548819065094, 0.45474547147750854, 0.42166081070899963, 0.4248642921447754, 0.42698290944099426, 0.4663733243942261, 0.4232080578804016, 0.43258947134017944], "val_accuracy": [0.38733333349227905, 0.4463333189487457, 0.6570000052452087, 0.6970000267028809, 0.7276666760444641, 0.7409999966621399, 0.7543333172798157, 0.7613333463668823, 0.7379999756813049, 0.7770000100135803, 0.7823333144187927, 0.7799999713897705, 0.7903333306312561, 0.7723333239555359, 0.796999990940094, 0.7900000214576721, 0.7953333258628845, 0.812333345413208, 0.8066666722297668, 0.8130000233650208, 0.8199999928474426, 0.8203333616256714, 0.8166666626930237, 0.8193333148956299, 0.82833331823349, 0.8343333601951599, 0.8326666951179504, 0.8323333263397217, 0.8360000252723694, 0.8463333249092102, 0.8453333377838135, 0.8456666469573975, 0.8503333330154419, 0.8553333282470703, 0.8573333621025085, 0.8579999804496765, 0.8603333234786987, 0.8610000014305115, 0.8603333234786987, 0.8579999804496765, 0.8656666874885559, 0.8616666793823242, 0.8663333058357239, 0.8659999966621399, 0.871666669845581, 0.8653333187103271, 0.8663333058357239, 0.8759999871253967, 0.875333309173584, 0.8743333220481873, 0.8769999742507935, 0.8756666779518127, 0.8730000257492065, 0.874666690826416, 0.8736666440963745, 0.878000020980835, 0.8756666779518127, 0.8776666522026062, 0.8823333382606506, 0.8676666617393494, 0.878000020980835, 0.875, 0.8759999871253967, 0.874666690826416]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 48, 29, 19, 7, 2, 1, 1, 0], "tree_depth": 34}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8339999914169312, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5350704193115234, 0.8402515649795532, 0.689397394657135, 0.6290345191955566, 0.5738806128501892, 0.5510522723197937, 0.5248019695281982, 0.5023568272590637, 0.5015473365783691, 0.47362855076789856, 0.4791514277458191, 0.46804577112197876, 0.46935656666755676, 0.47225168347358704, 0.4722433388233185, 0.4564816951751709, 0.4722093641757965, 0.47119221091270447, 0.47301435470581055], "accuracy": [0.4839519262313843, 0.7009642124176025, 0.7532690763473511, 0.7738739848136902, 0.793950617313385, 0.7976489067077637, 0.8132346868515015, 0.8203672170639038, 0.8132346868515015, 0.8271034359931946, 0.829216718673706, 0.8286884427070618, 0.8352925777435303, 0.828820526599884, 0.8376700282096863, 0.841500461101532, 0.8317263126373291, 0.8491612672805786, 0.8389908671379089], "val_loss": [0.8065913915634155, 0.6437857151031494, 0.5646605491638184, 0.5242528319358826, 0.4963948428630829, 0.48379161953926086, 0.4705248177051544, 0.4827209413051605, 0.4492085874080658, 0.47898387908935547, 0.4788641333580017, 0.4547592103481293, 0.5108239054679871, 0.46918272972106934, 0.47142094373703003, 0.47663623094558716, 0.5058789849281311, 0.526361346244812, 0.4965705871582031], "val_accuracy": [0.7073333263397217, 0.7710000276565552, 0.7853333353996277, 0.8066666722297668, 0.8113333582878113, 0.8270000219345093, 0.8259999752044678, 0.8326666951179504, 0.8386666774749756, 0.8376666903495789, 0.8463333249092102, 0.8453333377838135, 0.8426666855812073, 0.8529999852180481, 0.8453333377838135, 0.843999981880188, 0.847000002861023, 0.843999981880188, 0.8306666612625122]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [1, 1], [0], [0], [60], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [6, 3, 6, 6, 8, 1, 4, 6, 4, 2, 8, 4, 3, 0, 8, 4, 0, 6, 2, 7, 1, 8, 8, 5, 5, 6, 9, 3, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 5, 7, 1, 2, 3, 3, 1, 2], [16, 94, 18, 99, 61, 96, 92]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.pow(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma)), tf.math.sqrt(alpha)), tf.math.pow(beta, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.divide_no_nan(grad, grad)))), tf.math.add(tf.math.add(alpha, beta), sigma)), tf.math.subtract(sigma, tf.math.sqrt(tf.math.sqrt(tf.math.square(tf.math.square(tf.math.divide_no_nan(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.square(beta)))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 1, 1, 0, 1, 1, 47, 29, 18, 7], "tree_depth": 28}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 6, 3, 0, 3], [1, 1, 0, 2], [39, 51], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [4, 2, 3, 2, 3, 5], [3, 2, 0, 3, 0, 2], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 1, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 74, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 12, 6, 6, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.multiply(grad, beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [3, 2, 3, 4, 3, 5], [0, 2, 0, 3, 3, 3], [46, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 0, 3, 6, 1, 1, 4, 3, 0, 2, 8, 0], [0, 4, 0, 3, 0, 0, 3, 1, 4, 0], [16, 93, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 11, 5, 6, 2, 2, 1, 1, 1, 21, 12, 9, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(grad, tf.math.pow(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.multiply(tf.math.negative(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma)), tf.math.sqrt(tf.math.negative(alpha))))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 3, 0, 3, 8, 4], [0, 5, 3, 4, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 3, 8, 1, 4, 1, 4, 5, 8], [1, 4, 0, 2, 7, 2, 6, 2, 4, 0], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 8, 5, 3, 1, 2, 1, 1, 1, 20, 11, 9, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), grad)), tf.math.pow(beta, grad))), beta), tf.math.square(tf.math.sqrt(grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]