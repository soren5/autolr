[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8765714168548584, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223011016845703, 1.865624189376831, 1.3909275531768799, 1.0906970500946045, 0.9346197843551636, 0.8316051959991455, 0.7765270471572876, 0.7175954580307007, 0.689998984336853, 0.6539434790611267, 0.6345682740211487, 0.6125860214233398, 0.5929545760154724, 0.5741943120956421, 0.5605514049530029, 0.5450935363769531, 0.5290834307670593, 0.5135375261306763, 0.5038453936576843, 0.49123626947402954, 0.4824116826057434, 0.47230637073516846, 0.46095383167266846, 0.45251646637916565, 0.4567464590072632, 0.44120994210243225, 0.42931798100471497, 0.4283377230167389, 0.41460976004600525, 0.403716117143631, 0.39799705147743225, 0.38751497864723206, 0.39453190565109253, 0.3867490887641907, 0.3738558888435364, 0.37420085072517395, 0.36704206466674805, 0.35887202620506287, 0.3570341169834137, 0.35280492901802063, 0.34396079182624817, 0.3353290259838104, 0.3330399990081787, 0.33638864755630493, 0.33185482025146484, 0.31505221128463745, 0.3144376277923584, 0.31331920623779297, 0.30786311626434326, 0.30375027656555176, 0.3012574315071106, 0.2957165539264679, 0.29118576645851135, 0.28823795914649963, 0.2842210531234741, 0.2840941250324249, 0.27437901496887207, 0.27262750267982483, 0.2716067135334015, 0.27041494846343994, 0.2598229944705963, 0.251598984003067, 0.2570091187953949, 0.24883396923542023, 0.24945122003555298, 0.23872071504592896, 0.23352831602096558, 0.2393052726984024, 0.23676493763923645, 0.22705252468585968, 0.22216331958770752, 0.2274605929851532, 0.21139736473560333, 0.21167641878128052, 0.21031971275806427, 0.21228449046611786, 0.21343117952346802, 0.20817655324935913], "accuracy": [0.26337340474128723, 0.4963677227497101, 0.5735041499137878, 0.6207898855209351, 0.6701889038085938, 0.7073041796684265, 0.7268524765968323, 0.737947404384613, 0.7526086568832397, 0.7652885913848877, 0.7687227725982666, 0.7729493975639343, 0.7816668748855591, 0.7891955971717834, 0.7973847389221191, 0.802800178527832, 0.8125742673873901, 0.816008448600769, 0.8175934553146362, 0.8210275769233704, 0.826310932636261, 0.8241975903511047, 0.8359529972076416, 0.8367455005645752, 0.8352925777435303, 0.8426892161369324, 0.8450667262077332, 0.8467837572097778, 0.854708731174469, 0.8551049828529358, 0.8584070801734924, 0.8615770936012268, 0.8576145768165588, 0.8610487580299377, 0.8651432991027832, 0.867520809173584, 0.8697662353515625, 0.8708229064941406, 0.8702945709228516, 0.8689737319946289, 0.8737286925315857, 0.8767666220664978, 0.8813894987106323, 0.8805969953536987, 0.883238673210144, 0.889578640460968, 0.884691596031189, 0.8878615498542786, 0.8891823887825012, 0.8905032277107239, 0.8893144726753235, 0.8951261639595032, 0.8968431949615479, 0.896446943283081, 0.8953903317451477, 0.8988244533538818, 0.900409460067749, 0.9006736278533936, 0.902390718460083, 0.9026548862457275, 0.9056927561759949, 0.9101836085319519, 0.9038436412811279, 0.9076740145683289, 0.906749427318573, 0.9137498140335083, 0.9177123308181763, 0.9158631563186646, 0.9129573106765747, 0.9161273241043091, 0.9207502603530884, 0.9183727502822876, 0.9251089692115784, 0.9240522980690002, 0.9294676780700684, 0.9216747879981995, 0.9225993752479553, 0.9266939759254456], "val_loss": [2.0393662452697754, 1.5163432359695435, 1.052855372428894, 0.84853595495224, 0.7553724646568298, 0.7027198672294617, 0.6598775386810303, 0.623932957649231, 0.5951581597328186, 0.575713574886322, 0.5536686778068542, 0.5429341793060303, 0.5218592286109924, 0.5090736746788025, 0.4945620000362396, 0.4894779324531555, 0.4822985827922821, 0.47780728340148926, 0.4668852686882019, 0.4535849690437317, 0.45237162709236145, 0.44523975253105164, 0.44240477681159973, 0.4442044198513031, 0.43248072266578674, 0.43423476815223694, 0.4240863025188446, 0.41704243421554565, 0.4154031574726105, 0.41071370244026184, 0.4096387028694153, 0.4056234061717987, 0.406754732131958, 0.3978225886821747, 0.40128466486930847, 0.39493536949157715, 0.39047834277153015, 0.3979533016681671, 0.38745030760765076, 0.3896806538105011, 0.3836043179035187, 0.38053128123283386, 0.3809419870376587, 0.3778983950614929, 0.3761148154735565, 0.3765009343624115, 0.37689653038978577, 0.3764803409576416, 0.3714219927787781, 0.37403666973114014, 0.36849063634872437, 0.3699629008769989, 0.3696681261062622, 0.3686944246292114, 0.36859026551246643, 0.36190205812454224, 0.3709731996059418, 0.3621075749397278, 0.36187833547592163, 0.36555323004722595, 0.35909056663513184, 0.35743677616119385, 0.3601115345954895, 0.3594057261943817, 0.36111798882484436, 0.3632054030895233, 0.3720882833003998, 0.35455289483070374, 0.3622690737247467, 0.3586713969707489, 0.36113065481185913, 0.3577309548854828, 0.3616664707660675, 0.3606627881526947, 0.3581937551498413, 0.37010177969932556, 0.3561130464076996, 0.35808277130126953], "val_accuracy": [0.5336666703224182, 0.6470000147819519, 0.6696666479110718, 0.6926666498184204, 0.7243333458900452, 0.737666666507721, 0.7490000128746033, 0.765333354473114, 0.7696666717529297, 0.7803333401679993, 0.7933333516120911, 0.7979999780654907, 0.8009999990463257, 0.8119999766349792, 0.8183333277702332, 0.812666654586792, 0.8213333487510681, 0.8226666450500488, 0.8293333053588867, 0.831333339214325, 0.8293333053588867, 0.8366666436195374, 0.8349999785423279, 0.8330000042915344, 0.8363333344459534, 0.8376666903495789, 0.8433333039283752, 0.8446666598320007, 0.8473333120346069, 0.8526666760444641, 0.8496666550636292, 0.8496666550636292, 0.8489999771118164, 0.8539999723434448, 0.8533333539962769, 0.8576666712760925, 0.8576666712760925, 0.8550000190734863, 0.859666645526886, 0.8569999933242798, 0.8606666922569275, 0.8619999885559082, 0.8610000014305115, 0.8650000095367432, 0.8646666407585144, 0.862333357334137, 0.8659999966621399, 0.8666666746139526, 0.8650000095367432, 0.8629999756813049, 0.8659999966621399, 0.8686666488647461, 0.8673333525657654, 0.8666666746139526, 0.8683333396911621, 0.8723333477973938, 0.871666669845581, 0.8696666955947876, 0.8723333477973938, 0.8686666488647461, 0.8730000257492065, 0.8766666650772095, 0.8736666440963745, 0.8736666440963745, 0.8733333349227905, 0.8769999742507935, 0.8683333396911621, 0.8773333430290222, 0.878000020980835, 0.8769999742507935, 0.8796666860580444, 0.8809999823570251, 0.8820000290870667, 0.8773333430290222, 0.8773333430290222, 0.8736666440963745, 0.8820000290870667, 0.8806666731834412]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2214932441711426, 1.8608897924423218, 1.39826238155365, 1.0999555587768555, 0.932354748249054, 0.8448699712753296, 0.778682291507721, 0.7322292327880859, 0.7046854496002197, 0.6599020957946777, 0.637157142162323, 0.6255218386650085, 0.601752519607544, 0.5795660614967346, 0.559593141078949, 0.5481395721435547, 0.5314313173294067, 0.5215159058570862, 0.5159187912940979, 0.4986853301525116, 0.48994699120521545, 0.4788638651371002, 0.47348734736442566, 0.4709387421607971, 0.45610928535461426, 0.4516722857952118, 0.4421216547489166, 0.4324728548526764, 0.4248689115047455, 0.42967766523361206, 0.4162563383579254, 0.4080352783203125, 0.4019434154033661, 0.39459729194641113, 0.3919728100299835, 0.3875662684440613, 0.37849491834640503, 0.3691261112689972, 0.3655169606208801, 0.3567858338356018, 0.3548259437084198, 0.3519657254219055, 0.3456379473209381, 0.33535104990005493, 0.33431151509284973, 0.3326577842235565, 0.3363384008407593, 0.3218238353729248, 0.31567859649658203, 0.3091956675052643, 0.30592775344848633, 0.30434954166412354, 0.30623364448547363], "accuracy": [0.27882710099220276, 0.49029189348220825, 0.5659754276275635, 0.620261549949646, 0.663848876953125, 0.6976621150970459, 0.7201162576675415, 0.7349095344543457, 0.7454761862754822, 0.7605336308479309, 0.7621186375617981, 0.7714964747428894, 0.7820631265640259, 0.7923656105995178, 0.8047813773155212, 0.8018755912780762, 0.8094043135643005, 0.8120459914207458, 0.8112534880638123, 0.8187822103500366, 0.8264430165290833, 0.8323867321014404, 0.8301413059234619, 0.8383304476737976, 0.8368775844573975, 0.8421608805656433, 0.8428213000297546, 0.8475762605667114, 0.8519350290298462, 0.8498216867446899, 0.8560295701026917, 0.8548408150672913, 0.856689989566803, 0.8642187118530273, 0.8593316674232483, 0.8644828796386719, 0.8648791313171387, 0.8677849769592285, 0.8681812286376953, 0.8713511824607849, 0.8730682730674744, 0.8768987059593201, 0.8775591254234314, 0.8798044919967651, 0.884691596031189, 0.8820499181747437, 0.8815215826034546, 0.8828424215316772, 0.8840311765670776, 0.8860124349594116, 0.8887861371040344, 0.8908994793891907, 0.8883898854255676], "val_loss": [2.031705617904663, 1.4985145330429077, 1.0323351621627808, 0.830509603023529, 0.7417277097702026, 0.685570240020752, 0.6437662839889526, 0.6080025434494019, 0.584220826625824, 0.5637567639350891, 0.5367006659507751, 0.5248884558677673, 0.5130652785301208, 0.4990520477294922, 0.48387110233306885, 0.47543570399284363, 0.468295693397522, 0.4573138952255249, 0.45047709345817566, 0.45184585452079773, 0.4387381970882416, 0.43133780360221863, 0.42592015862464905, 0.42299577593803406, 0.41302064061164856, 0.41087454557418823, 0.40678828954696655, 0.40119051933288574, 0.4017881155014038, 0.39466676115989685, 0.3935604989528656, 0.39194270968437195, 0.38423287868499756, 0.3776693642139435, 0.3760567903518677, 0.37155377864837646, 0.37721237540245056, 0.36704036593437195, 0.3662364184856415, 0.36079728603363037, 0.36208122968673706, 0.36421307921409607, 0.3563743829727173, 0.35545438528060913, 0.35615599155426025, 0.3488122224807739, 0.35135263204574585, 0.34804314374923706, 0.34315821528434753, 0.346638023853302, 0.3432350754737854, 0.34659135341644287, 0.34771728515625], "val_accuracy": [0.5339999794960022, 0.6713333129882812, 0.6859999895095825, 0.7120000123977661, 0.7253333330154419, 0.746999979019165, 0.7603333592414856, 0.777999997138977, 0.781000018119812, 0.7760000228881836, 0.8019999861717224, 0.8040000200271606, 0.8063333630561829, 0.8146666884422302, 0.8203333616256714, 0.8230000138282776, 0.8306666612625122, 0.8323333263397217, 0.8339999914169312, 0.8326666951179504, 0.8363333344459534, 0.8376666903495789, 0.8450000286102295, 0.8423333168029785, 0.8443333506584167, 0.8486666679382324, 0.8460000157356262, 0.8546666502952576, 0.8489999771118164, 0.8536666631698608, 0.8536666631698608, 0.8473333120346069, 0.8573333621025085, 0.8553333282470703, 0.8586666584014893, 0.8610000014305115, 0.8523333072662354, 0.8616666793823242, 0.8613333106040955, 0.8629999756813049, 0.8629999756813049, 0.862666666507721, 0.8659999966621399, 0.8619999885559082, 0.8676666617393494, 0.8709999918937683, 0.8636666536331177, 0.8736666440963745, 0.8700000047683716, 0.8726666569709778, 0.8706666827201843, 0.8726666569709778, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 1, 1, 0, 1, 1], [0, 6, 3, 2], [0, 6, 6, 3], [0], [0, 1], [0], [1], [0]], "fitness": -0.8551428318023682, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.add(grad, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293186902999878, 2.194127321243286, 1.7870993614196777, 1.360977053642273, 1.085256814956665, 0.9456960558891296, 0.866473913192749, 0.8286413550376892, 0.7803524136543274, 0.7419642210006714, 0.7137230634689331, 0.6793771982192993, 0.6394405961036682, 0.6209590435028076, 0.6143773198127747, 0.5998404622077942, 0.5833383798599243, 0.5791905522346497, 0.548792839050293, 0.5336549282073975, 0.5302846431732178, 0.513556182384491, 0.5067334175109863, 0.5140230059623718, 0.4845395088195801, 0.47266387939453125, 0.4701905846595764, 0.4591980278491974, 0.4561404585838318, 0.4405288100242615, 0.43680185079574585, 0.4257892072200775, 0.4205298125743866, 0.4111658036708832, 0.40818843245506287, 0.40079227089881897, 0.40448927879333496, 0.3893960416316986, 0.3794897794723511, 0.38226547837257385, 0.36255088448524475, 0.37273716926574707, 0.3645727038383484, 0.35195907950401306, 0.35004347562789917, 0.3514167070388794, 0.3406340479850769, 0.3316470980644226], "accuracy": [0.12970545887947083, 0.3167349100112915, 0.4399682879447937, 0.5378417372703552, 0.6293752193450928, 0.656980574131012, 0.6824725866317749, 0.6968696117401123, 0.7073041796684265, 0.7220974564552307, 0.7296261787414551, 0.7404569983482361, 0.7541936039924622, 0.763967752456665, 0.76106196641922, 0.7684586048126221, 0.780610203742981, 0.7770439982414246, 0.7918372750282288, 0.800818920135498, 0.791441023349762, 0.8042530417442322, 0.807158887386322, 0.8079513907432556, 0.8131026029586792, 0.8166688680648804, 0.8189142942428589, 0.8226125836372375, 0.8228767514228821, 0.833179235458374, 0.829216718673706, 0.8364813327789307, 0.8391229510307312, 0.843481719493866, 0.8450667262077332, 0.8449346423149109, 0.8495575189590454, 0.8461233377456665, 0.8548408150672913, 0.8568220734596252, 0.858671247959137, 0.8625016212463379, 0.8593316674232483, 0.8615770936012268, 0.8605204224586487, 0.8607845902442932, 0.867520809173584, 0.8656716346740723], "val_loss": [2.247209072113037, 2.0291810035705566, 1.1811068058013916, 0.9084243774414062, 0.7890647649765015, 0.7357757687568665, 0.6976907849311829, 0.6770324110984802, 0.6537349820137024, 0.6148483753204346, 0.5819101333618164, 0.557191014289856, 0.5399272441864014, 0.5375750064849854, 0.5345162153244019, 0.5317175388336182, 0.5101110935211182, 0.5015156269073486, 0.49896004796028137, 0.4977926015853882, 0.48477697372436523, 0.4775829613208771, 0.4731009602546692, 0.4590646028518677, 0.4558963477611542, 0.4589635729789734, 0.4475233554840088, 0.4345475137233734, 0.43899300694465637, 0.4332030415534973, 0.43126001954078674, 0.4257308840751648, 0.4289747178554535, 0.42744681239128113, 0.4220736622810364, 0.43690332770347595, 0.4226374626159668, 0.42036592960357666, 0.41958528757095337, 0.42186641693115234, 0.4088681638240814, 0.41217634081840515, 0.41755056381225586, 0.40562760829925537, 0.4015730023384094, 0.4250434935092926, 0.42674189805984497, 0.4137561023235321], "val_accuracy": [0.4126666784286499, 0.44433334469795227, 0.637666642665863, 0.6700000166893005, 0.70333331823349, 0.7289999723434448, 0.7300000190734863, 0.7393333315849304, 0.7426666617393494, 0.7699999809265137, 0.7636666893959045, 0.7889999747276306, 0.7853333353996277, 0.7903333306312561, 0.7916666865348816, 0.7883333563804626, 0.8036666512489319, 0.8066666722297668, 0.8063333630561829, 0.8073333501815796, 0.8153333067893982, 0.8159999847412109, 0.8169999718666077, 0.824999988079071, 0.8353333473205566, 0.8336666822433472, 0.8323333263397217, 0.8363333344459534, 0.8386666774749756, 0.8420000076293945, 0.8373333215713501, 0.8396666646003723, 0.8483333587646484, 0.8479999899864197, 0.8473333120346069, 0.8429999947547913, 0.8513333201408386, 0.8539999723434448, 0.8536666631698608, 0.8529999852180481, 0.8523333072662354, 0.8496666550636292, 0.8579999804496765, 0.8573333621025085, 0.8566666841506958, 0.8513333201408386, 0.8489999771118164, 0.8579999804496765]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 8, 4, 4, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8371428847312927, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4955697059631348, 0.8231605887413025, 0.6875576972961426, 0.6066445708274841, 0.5572490692138672, 0.5193742513656616, 0.49720606207847595, 0.4770582616329193, 0.47761696577072144, 0.4678564667701721, 0.48200950026512146, 0.4576624929904938, 0.4922334551811218, 0.4819745719432831, 0.48749932646751404, 0.5064930319786072], "accuracy": [0.47932901978492737, 0.7174745798110962, 0.7567031979560852, 0.7819310426712036, 0.793422281742096, 0.8064984679222107, 0.822348415851593, 0.8256505131721497, 0.8265751004219055, 0.8197067975997925, 0.8367455005645752, 0.8267071843147278, 0.8388587832450867, 0.8241975903511047, 0.8278959393501282, 0.8342359066009521], "val_loss": [0.8110785484313965, 0.6217951774597168, 0.5040097236633301, 0.4803505837917328, 0.4685211181640625, 0.46659547090530396, 0.47683507204055786, 0.4788840711116791, 0.47341516613960266, 0.521134614944458, 0.5002472400665283, 0.4914371073246002, 0.49450552463531494, 0.5199143290519714, 0.5490155220031738, 0.6658931374549866], "val_accuracy": [0.7113333344459534, 0.7816666960716248, 0.8190000057220459, 0.8209999799728394, 0.8356666564941406, 0.828000009059906, 0.8346666693687439, 0.8309999704360962, 0.8333333134651184, 0.8433333039283752, 0.8446666598320007, 0.8363333344459534, 0.8376666903495789, 0.8386666774749756, 0.8316666483879089, 0.8389999866485596]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 4, 3, 0, 3, 9, 8, 0, 7], [0, 1, 0, 2], [15, 39, 75], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [56, 80], [0, 1], [0], [0], [99], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 2, 4, 2, 8], [0, 0, 0, 3, 0, 0, 1, 1, 2, 0], [16, 99, 96, 57, 42, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha), tf.math.sqrt(tf.math.negative(tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303463935852051, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}, "mapping_values": [1, 13, 9, 4, 3, 10, 6, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [0, 1, 1, 1], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 5, 0], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 5, 1, 4, 1, 1, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 12, 8, 4, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.square(grad)), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 5, 3, 0, 8], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5], [0, 2, 0, 3, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 5, 8, 4, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 77, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 11, 6, 5, 2, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.sqrt(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3033571243286133, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 2, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 1, 8, 1, 4, 1, 4, 8, 8, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 15, 10, 61, 1]], "fitness": -0.0925714299082756, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 21, 12, 9, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.sqrt(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), sigma)), tf.math.sqrt(tf.math.square(alpha))), beta)", "other_info": {"loss": [2.310393810272217, 2.3104207515716553, 2.310267686843872, 2.310434341430664, 2.3088290691375732, 2.311666488647461], "accuracy": [0.09034473448991776, 0.09034473448991776, 0.0956280529499054, 0.09192973375320435, 0.09377889335155487, 0.09008057415485382], "val_loss": [2.3086397647857666, 2.3086397647857666, 2.3086397647857666, 2.3086397647857666, 2.3086397647857666, 2.3086397647857666], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]