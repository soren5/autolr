[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8631428480148315, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2214012145996094, 1.8670562505722046, 1.3954050540924072, 1.1033828258514404, 0.943503201007843, 0.844280481338501, 0.7821881771087646, 0.742505669593811, 0.7010452747344971, 0.6637706756591797, 0.6502166390419006, 0.6204227805137634, 0.6055878400802612, 0.582301914691925, 0.5710981488227844, 0.5482110381126404, 0.5354140996932983, 0.5252544283866882, 0.5164673924446106, 0.5068424940109253, 0.49425607919692993, 0.4830588400363922, 0.4760909676551819, 0.46602511405944824, 0.4548608660697937, 0.4557192027568817, 0.44216787815093994, 0.432290256023407, 0.4266410768032074, 0.41825467348098755, 0.41585829854011536, 0.4112178087234497, 0.3992372751235962, 0.4012465178966522, 0.3960809111595154, 0.3877944052219391, 0.37805986404418945, 0.374133825302124, 0.3678010404109955, 0.36713796854019165, 0.35231661796569824, 0.3539673388004303, 0.345872163772583, 0.3472963869571686, 0.34262967109680176, 0.32878342270851135, 0.3317332863807678, 0.3229438364505768, 0.32238274812698364, 0.3169349133968353, 0.3141092360019684, 0.3088344633579254, 0.3051752746105194, 0.3007661700248718, 0.2979851961135864, 0.29948660731315613, 0.29280707240104675, 0.2875705659389496, 0.28352090716362, 0.27800431847572327, 0.2751234173774719], "accuracy": [0.28556331992149353, 0.48566898703575134, 0.5639941692352295, 0.6127327680587769, 0.6622639298439026, 0.6989829540252686, 0.7172104120254517, 0.7346453666687012, 0.7473253011703491, 0.7553823590278625, 0.7635715007781982, 0.769911527633667, 0.7795535326004028, 0.7876105904579163, 0.7869502305984497, 0.800290584564209, 0.8025360107421875, 0.81112140417099, 0.8171972036361694, 0.8212917447090149, 0.8257825970649719, 0.8297450542449951, 0.832650899887085, 0.8310658931732178, 0.8384625315666199, 0.8399154543876648, 0.8446704745292664, 0.8502179384231567, 0.8479725122451782, 0.8511425256729126, 0.8477083444595337, 0.8573504090309143, 0.8588033318519592, 0.8570862412452698, 0.8561616539955139, 0.8593316674232483, 0.8677849769592285, 0.8663320541381836, 0.8688416481018066, 0.8679170608520508, 0.8774270415306091, 0.8776912093162537, 0.8768987059593201, 0.8745211958885193, 0.8774270415306091, 0.8835028409957886, 0.8824461698532104, 0.8856161832809448, 0.8857482671737671, 0.8853520154953003, 0.8853520154953003, 0.8889182209968567, 0.8957865834236145, 0.8944657444953918, 0.8952582478523254, 0.8914278149604797, 0.8944657444953918, 0.8997490406036377, 0.8977677822113037, 0.8980319499969482, 0.9002773761749268], "val_loss": [2.03983211517334, 1.5143367052078247, 1.034490942955017, 0.822534441947937, 0.7339485883712769, 0.6772282719612122, 0.6317721009254456, 0.5994060635566711, 0.5722651481628418, 0.5556003451347351, 0.5406777262687683, 0.5174164772033691, 0.5061855912208557, 0.49308061599731445, 0.4855557084083557, 0.47126805782318115, 0.4623773694038391, 0.4579409062862396, 0.4493579864501953, 0.44870463013648987, 0.4338719844818115, 0.43731844425201416, 0.4295895993709564, 0.42285123467445374, 0.4142855107784271, 0.4122759699821472, 0.4098239839076996, 0.4021436274051666, 0.4019361436367035, 0.4037380814552307, 0.3976735472679138, 0.3916139304637909, 0.3900033235549927, 0.39111384749412537, 0.38548532128334045, 0.3837546408176422, 0.37957563996315, 0.3803398907184601, 0.37557247281074524, 0.3720043897628784, 0.375587522983551, 0.37079522013664246, 0.37045052647590637, 0.3657350540161133, 0.3645300269126892, 0.3684600293636322, 0.35954102873802185, 0.364418089389801, 0.3643116056919098, 0.36297285556793213, 0.36171606183052063, 0.35767388343811035, 0.355473130941391, 0.360465407371521, 0.3623492121696472, 0.3584907352924347, 0.35358887910842896, 0.35510897636413574, 0.35814937949180603, 0.3488186299800873, 0.3545778691768646], "val_accuracy": [0.515666663646698, 0.6620000004768372, 0.6943333148956299, 0.7226666808128357, 0.7393333315849304, 0.7516666650772095, 0.7639999985694885, 0.7746666669845581, 0.7789999842643738, 0.79666668176651, 0.7946666479110718, 0.809333324432373, 0.8159999847412109, 0.8209999799728394, 0.8223333358764648, 0.8263333439826965, 0.831333339214325, 0.8349999785423279, 0.8396666646003723, 0.8346666693687439, 0.847000002861023, 0.8403333425521851, 0.8429999947547913, 0.843666672706604, 0.8500000238418579, 0.8493333458900452, 0.8523333072662354, 0.8550000190734863, 0.8539999723434448, 0.8526666760444641, 0.8569999933242798, 0.8579999804496765, 0.859333336353302, 0.859000027179718, 0.8600000143051147, 0.859666645526886, 0.8606666922569275, 0.862333357334137, 0.8643333315849304, 0.8650000095367432, 0.8666666746139526, 0.8669999837875366, 0.8646666407585144, 0.8663333058357239, 0.8646666407585144, 0.8653333187103271, 0.8683333396911621, 0.8666666746139526, 0.8690000176429749, 0.8690000176429749, 0.8706666827201843, 0.8703333139419556, 0.8736666440963745, 0.871666669845581, 0.8700000047683716, 0.8743333220481873, 0.8666666746139526, 0.8706666827201843, 0.871999979019165, 0.8730000257492065, 0.8730000257492065]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1, 1], [0, 1], [0, 1], [0], [0, 1], [0], [1], [0]], "fitness": -0.8537142872810364, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2930445671081543, 2.189707040786743, 1.7711366415023804, 1.3400949239730835, 1.0748536586761475, 0.9334865808486938, 0.8500332236289978, 0.8060677647590637, 0.7727544903755188, 0.7564982771873474, 0.695311427116394, 0.6951479911804199, 0.6580308079719543, 0.6236215233802795, 0.6220191717147827, 0.6013100743293762, 0.5753051042556763, 0.5657470226287842, 0.5634150505065918, 0.5469485521316528, 0.5414230823516846, 0.5305055379867554, 0.5097052454948425, 0.4964921772480011, 0.49746668338775635, 0.4906461238861084, 0.4782252013683319, 0.46022722125053406, 0.4538504481315613, 0.4477830231189728, 0.43928903341293335, 0.4379843473434448, 0.42790281772613525, 0.42900145053863525, 0.4244809150695801, 0.4172205328941345, 0.41549208760261536, 0.4123366177082062, 0.3887266516685486, 0.39856070280075073, 0.3858228623867035, 0.3802538514137268, 0.37364840507507324, 0.3749288022518158, 0.3687904477119446, 0.3543313443660736, 0.3543386459350586, 0.34651193022727966, 0.33747240900993347, 0.3329586982727051, 0.33453434705734253], "accuracy": [0.13115836679935455, 0.33139610290527344, 0.43811914324760437, 0.5443138480186462, 0.6391493678092957, 0.6563201546669006, 0.6889446377754211, 0.7074362635612488, 0.694360077381134, 0.7071720957756042, 0.7302865982055664, 0.7334566116333008, 0.7519482374191284, 0.759609043598175, 0.7637035846710205, 0.7721568942070007, 0.7791573405265808, 0.7845727205276489, 0.7835160493850708, 0.7857614755630493, 0.7976489067077637, 0.7959318161010742, 0.8072909712791443, 0.8129705190658569, 0.811649739742279, 0.8113855719566345, 0.8162726163864136, 0.819442629814148, 0.8260467648506165, 0.8260467648506165, 0.832650899887085, 0.8322546482086182, 0.8471800088882446, 0.8347642421722412, 0.8405758738517761, 0.8385946154594421, 0.8428213000297546, 0.8422929644584656, 0.852331280708313, 0.8499537706375122, 0.8551049828529358, 0.8529917001724243, 0.860652506351471, 0.8577466607093811, 0.854708731174469, 0.8636903762817383, 0.8638224601745605, 0.8683133125305176, 0.8665962219238281, 0.8689737319946289, 0.8710870146751404], "val_loss": [2.246269464492798, 2.019242286682129, 1.1395928859710693, 0.8750380277633667, 0.762993335723877, 0.7060883641242981, 0.6587005853652954, 0.6616564393043518, 0.6549085974693298, 0.6129307150840759, 0.5697899460792542, 0.5547347664833069, 0.5469768047332764, 0.5434091091156006, 0.532438337802887, 0.5144942998886108, 0.497819185256958, 0.4981764256954193, 0.49080973863601685, 0.47787052392959595, 0.47073474526405334, 0.47827962040901184, 0.4716845154762268, 0.45616137981414795, 0.4560431241989136, 0.454244464635849, 0.45496687293052673, 0.44104668498039246, 0.44035592675209045, 0.42933574318885803, 0.43079179525375366, 0.4284428358078003, 0.42196279764175415, 0.42198827862739563, 0.4250158369541168, 0.42358824610710144, 0.4274851381778717, 0.4120750427246094, 0.40755632519721985, 0.40938839316368103, 0.4178013205528259, 0.4153302013874054, 0.40769413113594055, 0.3956429362297058, 0.39094510674476624, 0.39322805404663086, 0.38898053765296936, 0.39918258786201477, 0.39556729793548584, 0.3981379270553589, 0.4053807258605957], "val_accuracy": [0.4346666634082794, 0.4763333201408386, 0.6446666717529297, 0.6959999799728394, 0.7256666421890259, 0.7369999885559082, 0.7516666650772095, 0.7350000143051147, 0.7620000243186951, 0.7689999938011169, 0.7749999761581421, 0.7860000133514404, 0.7993333339691162, 0.8006666898727417, 0.7990000247955322, 0.8086666464805603, 0.812666654586792, 0.8146666884422302, 0.8106666803359985, 0.8270000219345093, 0.8243333101272583, 0.82833331823349, 0.8316666483879089, 0.8353333473205566, 0.8389999866485596, 0.8336666822433472, 0.8396666646003723, 0.8399999737739563, 0.8429999947547913, 0.847000002861023, 0.8453333377838135, 0.8516666889190674, 0.8510000109672546, 0.8539999723434448, 0.8529999852180481, 0.8536666631698608, 0.8550000190734863, 0.862666666507721, 0.8583333492279053, 0.8546666502952576, 0.859333336353302, 0.8616666793823242, 0.8653333187103271, 0.8606666922569275, 0.8643333315849304, 0.8663333058357239, 0.8663333058357239, 0.8656666874885559, 0.859000027179718, 0.8633333444595337, 0.8653333187103271]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.8010642528533936, 0.9901918172836304, 0.8362221717834473, 0.7416168451309204, 0.6862200498580933, 0.66750568151474, 0.6418642401695251, 0.6069501042366028, 0.5735166072845459, 0.6109013557434082, 0.5707643032073975, 0.5836249589920044, 0.5510401129722595, 0.5592560172080994, 0.5317122340202332, 0.585307776927948, 0.5412018895149231, 0.5577347874641418, 0.518846333026886, 0.5172556042671204], "accuracy": [0.46030908823013306, 0.6627922058105469, 0.7135120630264282, 0.7260599732398987, 0.7498348951339722, 0.7638356685638428, 0.7668735980987549, 0.7897239327430725, 0.793422281742096, 0.7819310426712036, 0.8061022162437439, 0.8047813773155212, 0.7981772422790527, 0.8138951063156128, 0.821820080280304, 0.8183859586715698, 0.8128384351730347, 0.8029322624206543, 0.8187822103500366, 0.8195747137069702], "val_loss": [1.017743468284607, 0.7153648138046265, 0.5893987417221069, 0.6082513928413391, 0.5386263728141785, 0.5392153263092041, 0.5492731332778931, 0.471620112657547, 0.5018290281295776, 0.49352148175239563, 0.493854820728302, 0.48077550530433655, 0.49338746070861816, 0.49555158615112305, 0.5032117366790771, 0.5270673632621765, 0.5178514719009399, 0.5293157696723938, 0.5348910093307495, 0.4918673038482666], "val_accuracy": [0.5843333601951599, 0.7319999933242798, 0.7850000262260437, 0.778333306312561, 0.7896666526794434, 0.796999990940094, 0.7996666431427002, 0.8199999928474426, 0.8103333115577698, 0.8199999928474426, 0.8376666903495789, 0.8246666789054871, 0.8253333568572998, 0.8253333568572998, 0.8396666646003723, 0.8253333568572998, 0.8270000219345093, 0.8203333616256714, 0.8293333053588867, 0.8326666951179504]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 3, 0, 3, 7, 3, 6, 1, 5, 2, 3, 4, 6, 6, 1, 8, 5, 3, 1, 1, 7, 0, 6, 9, 1, 6, 0], [0, 1, 1, 2, 0, 0, 1, 1, 2, 0, 2, 3, 2, 2, 0, 3, 1, 0, 2, 3, 2, 1], [39, 39, 17, 20, 39, 27, 34], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [2, 3, 3, 0, 3, 5, 3, 2, 0, 0, 5, 4, 6, 8, 2, 7, 2, 1, 1], [0, 2, 0, 3, 3, 3, 0, 3, 1, 4, 3, 0, 2, 3], [37, 16, 17, 51], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 8, 4, 2, 8], [0, 0, 0, 3, 0, 1, 3, 4, 2, 1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 53, 31, 22, 7, 33, 19, 14, 4, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(alpha, alpha), tf.math.negative(tf.math.multiply(tf.math.add(tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha)), alpha)), tf.math.add(grad, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))))), tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.sqrt(grad)), grad), tf.math.square(tf.math.multiply(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), grad), tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.negative(grad)), alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.multiply(grad, tf.math.add(tf.math.negative(tf.math.negative(tf.math.square(tf.math.pow(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.math.add(grad, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, grad)), tf.math.subtract(tf.math.subtract(grad, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), beta))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(alpha, sigma)), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 7], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 6, 2, 5], [0, 2, 0, 3, 2, 5], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(grad, tf.math.square(beta)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.338963270187378, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}, "mapping_values": [1, 9, 5, 4, 3, 14, 8, 6, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 2, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [6, 2, 3, 0, 3, 9], [0, 2, 0, 2], [16, 99, 76], [0, 1], [0], [3], [99], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 6, 3, 6, 8, 1, 2, 1, 4, 2, 8], [0, 4, 0, 3, 3, 0, 3, 1, 3, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 10, 6, 4, 3, 2, 1, 1, 0, 21, 11, 10, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(sigma, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.sqrt(sigma), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 5, 3, 0, 3], [1, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 0, 0, 1, 1], [0, 2, 5], [0, 7], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 3, 6, 8, 1, 4, 1, 0, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 56]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 0, 9, 5, 4, 2, 5, 3, 2, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(alpha), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma), alpha)", "other_info": {"loss": [2.3085777759552, 2.302946090698242, 2.3025851249694824, 2.3025851249694824, 2.3025856018066406, 2.3025853633880615, 2.3025853633880615], "accuracy": [0.09430722147226334, 0.09166556596755981, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09694888442754745, 0.09681680053472519], "val_loss": [2.304213762283325, 2.3025848865509033, 2.3025848865509033, 2.3025853633880615, 2.3025851249694824, 2.3025853633880615, 2.3025851249694824], "val_accuracy": [0.07666666805744171, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.1003333330154419, 0.10199999809265137]}}]