[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8765714168548584, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223011016845703, 1.865624189376831, 1.3909275531768799, 1.0906970500946045, 0.9346197843551636, 0.8316051959991455, 0.7765270471572876, 0.7175954580307007, 0.689998984336853, 0.6539434790611267, 0.6345682740211487, 0.6125860214233398, 0.5929545760154724, 0.5741943120956421, 0.5605514049530029, 0.5450935363769531, 0.5290834307670593, 0.5135375261306763, 0.5038453936576843, 0.49123626947402954, 0.4824116826057434, 0.47230637073516846, 0.46095383167266846, 0.45251646637916565, 0.4567464590072632, 0.44120994210243225, 0.42931798100471497, 0.4283377230167389, 0.41460976004600525, 0.403716117143631, 0.39799705147743225, 0.38751497864723206, 0.39453190565109253, 0.3867490887641907, 0.3738558888435364, 0.37420085072517395, 0.36704206466674805, 0.35887202620506287, 0.3570341169834137, 0.35280492901802063, 0.34396079182624817, 0.3353290259838104, 0.3330399990081787, 0.33638864755630493, 0.33185482025146484, 0.31505221128463745, 0.3144376277923584, 0.31331920623779297, 0.30786311626434326, 0.30375027656555176, 0.3012574315071106, 0.2957165539264679, 0.29118576645851135, 0.28823795914649963, 0.2842210531234741, 0.2840941250324249, 0.27437901496887207, 0.27262750267982483, 0.2716067135334015, 0.27041494846343994, 0.2598229944705963, 0.251598984003067, 0.2570091187953949, 0.24883396923542023, 0.24945122003555298, 0.23872071504592896, 0.23352831602096558, 0.2393052726984024, 0.23676493763923645, 0.22705252468585968, 0.22216331958770752, 0.2274605929851532, 0.21139736473560333, 0.21167641878128052, 0.21031971275806427, 0.21228449046611786, 0.21343117952346802, 0.20817655324935913], "accuracy": [0.26337340474128723, 0.4963677227497101, 0.5735041499137878, 0.6207898855209351, 0.6701889038085938, 0.7073041796684265, 0.7268524765968323, 0.737947404384613, 0.7526086568832397, 0.7652885913848877, 0.7687227725982666, 0.7729493975639343, 0.7816668748855591, 0.7891955971717834, 0.7973847389221191, 0.802800178527832, 0.8125742673873901, 0.816008448600769, 0.8175934553146362, 0.8210275769233704, 0.826310932636261, 0.8241975903511047, 0.8359529972076416, 0.8367455005645752, 0.8352925777435303, 0.8426892161369324, 0.8450667262077332, 0.8467837572097778, 0.854708731174469, 0.8551049828529358, 0.8584070801734924, 0.8615770936012268, 0.8576145768165588, 0.8610487580299377, 0.8651432991027832, 0.867520809173584, 0.8697662353515625, 0.8708229064941406, 0.8702945709228516, 0.8689737319946289, 0.8737286925315857, 0.8767666220664978, 0.8813894987106323, 0.8805969953536987, 0.883238673210144, 0.889578640460968, 0.884691596031189, 0.8878615498542786, 0.8891823887825012, 0.8905032277107239, 0.8893144726753235, 0.8951261639595032, 0.8968431949615479, 0.896446943283081, 0.8953903317451477, 0.8988244533538818, 0.900409460067749, 0.9006736278533936, 0.902390718460083, 0.9026548862457275, 0.9056927561759949, 0.9101836085319519, 0.9038436412811279, 0.9076740145683289, 0.906749427318573, 0.9137498140335083, 0.9177123308181763, 0.9158631563186646, 0.9129573106765747, 0.9161273241043091, 0.9207502603530884, 0.9183727502822876, 0.9251089692115784, 0.9240522980690002, 0.9294676780700684, 0.9216747879981995, 0.9225993752479553, 0.9266939759254456], "val_loss": [2.0393662452697754, 1.5163432359695435, 1.052855372428894, 0.84853595495224, 0.7553724646568298, 0.7027198672294617, 0.6598775386810303, 0.623932957649231, 0.5951581597328186, 0.575713574886322, 0.5536686778068542, 0.5429341793060303, 0.5218592286109924, 0.5090736746788025, 0.4945620000362396, 0.4894779324531555, 0.4822985827922821, 0.47780728340148926, 0.4668852686882019, 0.4535849690437317, 0.45237162709236145, 0.44523975253105164, 0.44240477681159973, 0.4442044198513031, 0.43248072266578674, 0.43423476815223694, 0.4240863025188446, 0.41704243421554565, 0.4154031574726105, 0.41071370244026184, 0.4096387028694153, 0.4056234061717987, 0.406754732131958, 0.3978225886821747, 0.40128466486930847, 0.39493536949157715, 0.39047834277153015, 0.3979533016681671, 0.38745030760765076, 0.3896806538105011, 0.3836043179035187, 0.38053128123283386, 0.3809419870376587, 0.3778983950614929, 0.3761148154735565, 0.3765009343624115, 0.37689653038978577, 0.3764803409576416, 0.3714219927787781, 0.37403666973114014, 0.36849063634872437, 0.3699629008769989, 0.3696681261062622, 0.3686944246292114, 0.36859026551246643, 0.36190205812454224, 0.3709731996059418, 0.3621075749397278, 0.36187833547592163, 0.36555323004722595, 0.35909056663513184, 0.35743677616119385, 0.3601115345954895, 0.3594057261943817, 0.36111798882484436, 0.3632054030895233, 0.3720882833003998, 0.35455289483070374, 0.3622690737247467, 0.3586713969707489, 0.36113065481185913, 0.3577309548854828, 0.3616664707660675, 0.3606627881526947, 0.3581937551498413, 0.37010177969932556, 0.3561130464076996, 0.35808277130126953], "val_accuracy": [0.5336666703224182, 0.6470000147819519, 0.6696666479110718, 0.6926666498184204, 0.7243333458900452, 0.737666666507721, 0.7490000128746033, 0.765333354473114, 0.7696666717529297, 0.7803333401679993, 0.7933333516120911, 0.7979999780654907, 0.8009999990463257, 0.8119999766349792, 0.8183333277702332, 0.812666654586792, 0.8213333487510681, 0.8226666450500488, 0.8293333053588867, 0.831333339214325, 0.8293333053588867, 0.8366666436195374, 0.8349999785423279, 0.8330000042915344, 0.8363333344459534, 0.8376666903495789, 0.8433333039283752, 0.8446666598320007, 0.8473333120346069, 0.8526666760444641, 0.8496666550636292, 0.8496666550636292, 0.8489999771118164, 0.8539999723434448, 0.8533333539962769, 0.8576666712760925, 0.8576666712760925, 0.8550000190734863, 0.859666645526886, 0.8569999933242798, 0.8606666922569275, 0.8619999885559082, 0.8610000014305115, 0.8650000095367432, 0.8646666407585144, 0.862333357334137, 0.8659999966621399, 0.8666666746139526, 0.8650000095367432, 0.8629999756813049, 0.8659999966621399, 0.8686666488647461, 0.8673333525657654, 0.8666666746139526, 0.8683333396911621, 0.8723333477973938, 0.871666669845581, 0.8696666955947876, 0.8723333477973938, 0.8686666488647461, 0.8730000257492065, 0.8766666650772095, 0.8736666440963745, 0.8736666440963745, 0.8733333349227905, 0.8769999742507935, 0.8683333396911621, 0.8773333430290222, 0.878000020980835, 0.8769999742507935, 0.8796666860580444, 0.8809999823570251, 0.8820000290870667, 0.8773333430290222, 0.8773333430290222, 0.8736666440963745, 0.8820000290870667, 0.8806666731834412]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8731428384780884, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2214159965515137, 1.8653420209884644, 1.390349268913269, 1.0854756832122803, 0.9276468753814697, 0.8357542157173157, 0.7757578492164612, 0.7324855923652649, 0.6969779133796692, 0.660283088684082, 0.6375523209571838, 0.6145392656326294, 0.5950531363487244, 0.5843110084533691, 0.5713052153587341, 0.5538296103477478, 0.5376481413841248, 0.5265383720397949, 0.5118186473846436, 0.5018989443778992, 0.48866111040115356, 0.4756920635700226, 0.474395215511322, 0.46033352613449097, 0.4499987065792084, 0.44531527161598206, 0.4354721009731293, 0.4273168742656708, 0.4199998378753662, 0.41764363646507263, 0.4107518792152405, 0.4076443910598755, 0.39658913016319275, 0.39671406149864197, 0.386381059885025, 0.37558555603027344, 0.3707076907157898, 0.37245818972587585, 0.35842835903167725, 0.3581797182559967, 0.3563208281993866, 0.3495453894138336, 0.34570425748825073, 0.33877032995224, 0.33606401085853577, 0.32904836535453796, 0.3234263062477112, 0.3253690302371979, 0.32288113236427307, 0.3048383891582489, 0.3060087263584137, 0.30381372570991516, 0.30051353573799133, 0.2947186529636383, 0.29233744740486145, 0.2797291874885559, 0.2811684012413025, 0.27956563234329224, 0.27664119005203247, 0.2725542485713959, 0.2656502425670624], "accuracy": [0.26997753977775574, 0.4954431354999542, 0.5688812732696533, 0.6199973821640015, 0.6688680648803711, 0.7013604640960693, 0.7182670831680298, 0.7288337349891663, 0.7454761862754822, 0.757099449634552, 0.765949010848999, 0.7721568942070007, 0.7825914621353149, 0.7922335267066956, 0.7935543656349182, 0.7979130744934082, 0.8004226684570312, 0.806630551815033, 0.816008448600769, 0.819442629814148, 0.822348415851593, 0.8310658931732178, 0.8290846943855286, 0.8329150676727295, 0.8426892161369324, 0.8408400416374207, 0.8499537706375122, 0.8455950617790222, 0.8459912538528442, 0.8492933511734009, 0.8553691506385803, 0.8544445633888245, 0.8585391640663147, 0.8613129258155823, 0.8627657890319824, 0.8663320541381836, 0.8647470474243164, 0.8676528930664062, 0.8734645247459412, 0.8710870146751404, 0.8704266548156738, 0.874389111995697, 0.8775591254234314, 0.8819178342819214, 0.8791441321372986, 0.8829745054244995, 0.8854840993881226, 0.886672854423523, 0.8815215826034546, 0.8903711438179016, 0.891559898853302, 0.8897107243537903, 0.8919561505317688, 0.8942015767097473, 0.8957865834236145, 0.9012019634246826, 0.8990886211395264, 0.8934090733528137, 0.89988112449646, 0.9017302989959717, 0.9051644206047058], "val_loss": [2.0304336547851562, 1.4895843267440796, 1.0041171312332153, 0.7926777601242065, 0.7112774848937988, 0.6542755365371704, 0.6143805980682373, 0.583827555179596, 0.5594462156295776, 0.5391362309455872, 0.5190533995628357, 0.506476640701294, 0.49297159910202026, 0.47722405195236206, 0.4698593020439148, 0.4650666117668152, 0.4526527225971222, 0.44343045353889465, 0.4372868537902832, 0.424984872341156, 0.4174768924713135, 0.41162264347076416, 0.40939033031463623, 0.39828869700431824, 0.39336130023002625, 0.3890143930912018, 0.3842765688896179, 0.37868034839630127, 0.381318598985672, 0.37312304973602295, 0.3689006268978119, 0.3693394362926483, 0.37203264236450195, 0.357699990272522, 0.36008137464523315, 0.35523363947868347, 0.35365527868270874, 0.3499930799007416, 0.35078519582748413, 0.3466326594352722, 0.3420828580856323, 0.34150487184524536, 0.34369394183158875, 0.3400338888168335, 0.33875733613967896, 0.3365878760814667, 0.333451509475708, 0.33084073662757874, 0.32973119616508484, 0.3321903944015503, 0.33065810799598694, 0.3267420828342438, 0.32798898220062256, 0.32919296622276306, 0.32467445731163025, 0.32049819827079773, 0.3240695297718048, 0.32173779606819153, 0.32020604610443115, 0.32082635164260864, 0.3214988708496094], "val_accuracy": [0.5690000057220459, 0.6743333339691162, 0.6919999718666077, 0.7203333377838135, 0.7463333606719971, 0.7616666555404663, 0.7756666541099548, 0.7820000052452087, 0.7956666946411133, 0.8036666512489319, 0.8090000152587891, 0.8186666369438171, 0.8276666402816772, 0.8316666483879089, 0.8243333101272583, 0.8286666870117188, 0.8410000205039978, 0.8416666388511658, 0.840666651725769, 0.8476666808128357, 0.8519999980926514, 0.8536666631698608, 0.8533333539962769, 0.8616666793823242, 0.8579999804496765, 0.8636666536331177, 0.8653333187103271, 0.8679999709129333, 0.859666645526886, 0.8696666955947876, 0.8679999709129333, 0.8669999837875366, 0.8669999837875366, 0.8726666569709778, 0.8709999918937683, 0.8733333349227905, 0.878333330154419, 0.8743333220481873, 0.8740000128746033, 0.8740000128746033, 0.8793333172798157, 0.8769999742507935, 0.875333309173584, 0.8813333511352539, 0.8786666393280029, 0.8790000081062317, 0.8790000081062317, 0.8816666603088379, 0.8826666474342346, 0.8836666941642761, 0.8816666603088379, 0.8833333253860474, 0.8863333463668823, 0.8806666731834412, 0.8826666474342346, 0.887666642665863, 0.8796666860580444, 0.8853333592414856, 0.887666642665863, 0.8853333592414856, 0.887666642665863]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 6], [0, 4], [0], [0, 0, 0, 1, 0, 1], [0, 7, 0, 5], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.847428560256958, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.291609048843384, 2.187926769256592, 1.761549949645996, 1.3473327159881592, 1.0692859888076782, 0.9168682098388672, 0.861505389213562, 0.8161547780036926, 0.7566899061203003, 0.7349827289581299, 0.7018020153045654, 0.6661751866340637, 0.6488797068595886, 0.6304723620414734, 0.6200948357582092, 0.6040478944778442, 0.5791551470756531, 0.5741047263145447, 0.56403648853302, 0.5533037185668945, 0.5427411794662476, 0.5185155272483826, 0.5124812722206116, 0.5059664845466614, 0.49033042788505554, 0.4909030497074127, 0.48332536220550537, 0.46963781118392944, 0.4737556278705597, 0.45734983682632446, 0.4633599817752838, 0.45278677344322205, 0.43334972858428955, 0.43023112416267395, 0.4288816750049591, 0.4099592864513397, 0.41438254714012146, 0.4003009796142578, 0.3858155310153961, 0.39154383540153503, 0.3874877691268921, 0.38025811314582825, 0.3691466450691223, 0.36948782205581665, 0.35410699248313904, 0.3669089376926422, 0.3550264537334442, 0.33634501695632935, 0.34969642758369446, 0.32754090428352356, 0.3429999053478241, 0.33553779125213623], "accuracy": [0.13353586196899414, 0.32664114236831665, 0.4527803361415863, 0.553031325340271, 0.6362435817718506, 0.6629242897033691, 0.683000922203064, 0.6925109028816223, 0.7067758440971375, 0.7145687341690063, 0.7305507659912109, 0.7471932172775269, 0.7510236501693726, 0.7611940503120422, 0.7660810947418213, 0.7676661014556885, 0.7751948237419128, 0.778761088848114, 0.7835160493850708, 0.7833839654922485, 0.7905164361000061, 0.8039889335632324, 0.7980451583862305, 0.8045172095298767, 0.809140145778656, 0.8082155585289001, 0.8100647330284119, 0.8239334225654602, 0.8187822103500366, 0.8265751004219055, 0.8204993009567261, 0.8251221776008606, 0.8318583965301514, 0.835160493850708, 0.8388587832450867, 0.8436138033866882, 0.8411042094230652, 0.847840428352356, 0.8487650156021118, 0.8495575189590454, 0.8512746095657349, 0.8544445633888245, 0.8605204224586487, 0.8565579056739807, 0.8650112152099609, 0.8590674996376038, 0.8664641380310059, 0.8720116019248962, 0.8636903762817383, 0.8717474341392517, 0.8672566413879395, 0.8684453964233398], "val_loss": [2.2453908920288086, 2.0159881114959717, 1.1337023973464966, 0.8862135410308838, 0.7784168124198914, 0.7141875624656677, 0.6634301543235779, 0.6540164947509766, 0.6422342658042908, 0.609899640083313, 0.5673999190330505, 0.5524941682815552, 0.5460180640220642, 0.5213558077812195, 0.508158266544342, 0.51522296667099, 0.4988386631011963, 0.48973730206489563, 0.4936034381389618, 0.4890347123146057, 0.4823589324951172, 0.4747207760810852, 0.47750118374824524, 0.4709639549255371, 0.4574055075645447, 0.46122533082962036, 0.4595786929130554, 0.4679279923439026, 0.4587863087654114, 0.4443380832672119, 0.441327840089798, 0.4422472417354584, 0.43900880217552185, 0.43864622712135315, 0.42992672324180603, 0.4310474097728729, 0.43225833773612976, 0.41761770844459534, 0.4159139096736908, 0.4209098815917969, 0.4184977114200592, 0.4272824823856354, 0.42063573002815247, 0.4143001437187195, 0.41884464025497437, 0.4114011526107788, 0.39886054396629333, 0.41424113512039185, 0.40687283873558044, 0.40783289074897766, 0.42182812094688416, 0.4169808626174927], "val_accuracy": [0.4193333387374878, 0.44699999690055847, 0.6473333239555359, 0.6853333115577698, 0.7229999899864197, 0.7263333201408386, 0.7356666922569275, 0.7446666955947876, 0.753333330154419, 0.7649999856948853, 0.7720000147819519, 0.7796666622161865, 0.7960000038146973, 0.7960000038146973, 0.7990000247955322, 0.7960000038146973, 0.796999990940094, 0.8073333501815796, 0.8153333067893982, 0.8130000233650208, 0.8083333373069763, 0.8193333148956299, 0.8240000009536743, 0.8203333616256714, 0.8289999961853027, 0.8323333263397217, 0.8356666564941406, 0.8383333086967468, 0.828000009059906, 0.8416666388511658, 0.8450000286102295, 0.8330000042915344, 0.8429999947547913, 0.8433333039283752, 0.8420000076293945, 0.846666693687439, 0.843999981880188, 0.8506666421890259, 0.8543333411216736, 0.8529999852180481, 0.8550000190734863, 0.8513333201408386, 0.8539999723434448, 0.862333357334137, 0.8553333282470703, 0.8646666407585144, 0.8686666488647461, 0.8636666536331177, 0.8619999885559082, 0.8619999885559082, 0.8646666407585144, 0.8636666536331177]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 6, 4, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8220000267028809, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.569772481918335, 0.8898243308067322, 0.7283188700675964, 0.6577876806259155, 0.5998702645301819, 0.5742897987365723, 0.5347910523414612, 0.5441293120384216, 0.5327044129371643, 0.5433845520019531, 0.5285589098930359, 0.5044169425964355, 0.5282610058784485, 0.5163906216621399, 0.5434074997901917, 0.577250599861145, 0.5236218571662903, 0.5604792237281799, 0.5093001127243042, 0.4947417676448822, 0.5317910313606262, 0.5844194293022156, 0.5438145399093628], "accuracy": [0.48632940649986267, 0.7049266695976257, 0.7383436560630798, 0.7666094303131104, 0.7798177003860474, 0.7891955971717834, 0.8030643463134766, 0.807158887386322, 0.8068947196006775, 0.8076872229576111, 0.8148196935653687, 0.8232730031013489, 0.8284242749214172, 0.8257825970649719, 0.8108572363853455, 0.8000264167785645, 0.8169330358505249, 0.8125742673873901, 0.8210275769233704, 0.8325188159942627, 0.8191784620285034, 0.8157442808151245, 0.8024039268493652], "val_loss": [1.0302833318710327, 0.6714881658554077, 0.5773060917854309, 0.5276275873184204, 0.5415059328079224, 0.49247193336486816, 0.5075687170028687, 0.5327451229095459, 0.5094876885414124, 0.5089537501335144, 0.5400553941726685, 0.5679916739463806, 0.5443882942199707, 0.5460759401321411, 0.5834588408470154, 0.5522242188453674, 0.6092497706413269, 0.5820278525352478, 0.615195631980896, 0.5485842227935791, 0.5874331593513489, 0.510107696056366, 0.5398902893066406], "val_accuracy": [0.6370000243186951, 0.7576666474342346, 0.7853333353996277, 0.8140000104904175, 0.8130000233650208, 0.8196666836738586, 0.8176666498184204, 0.8203333616256714, 0.8216666579246521, 0.8303333520889282, 0.8240000009536743, 0.8349999785423279, 0.8193333148956299, 0.8410000205039978, 0.8336666822433472, 0.8246666789054871, 0.8256666660308838, 0.8443333506584167, 0.8373333215713501, 0.828000009059906, 0.8349999785423279, 0.8366666436195374, 0.8363333344459534]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 40], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 0, 3, 0], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [6, 1, 3, 6, 4, 1, 4, 1, 4, 2, 8, 4, 2, 9], [3, 0, 0, 3, 0, 0, 3, 1, 4, 0, 6, 3], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 3, 6, 4, 2, 1, 2, 1, 1, 1, 26, 14, 12, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.sqrt(grad), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.add(sigma, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [61, 39], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 0], [0, 3, 2, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 3, 4, 2, 8, 5, 0, 0, 1, 7, 4, 8, 8, 7, 8, 6, 2, 5, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 2, 3, 7, 6, 4], [4, 99, 33, 99, 61, 1, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 1, 2, 1, 1, 1, 40, 25, 15, 7], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), sigma))), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(tf.math.square(beta)), tf.math.negative(tf.math.negative(tf.math.subtract(tf.math.add(tf.math.pow(tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), beta), tf.math.sqrt(tf.math.add(sigma, tf.math.sqrt(grad)))), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), grad), grad))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 8, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 4, 3, 6, 8, 1, 4, 3, 4, 2, 8], [0, 0, 2, 3, 0, 0, 4, 1, 2, 0], [16, 99, 15, 34, 69, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(beta, sigma))), tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), grad), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 6, 3, 0, 3], [2, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [20], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 0, 6, 0, 1, 4, 1, 4, 4, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 2], [99, 99, 96, 99, 8, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 1, 0, 1, 1, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(grad), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1125192960.0, 22850353152.0, 107126693888.0, 308247822336.0, 683942936576.0, 1302159032320.0], "accuracy": [0.10130762308835983, 0.09734513610601425, 0.10117553919553757, 0.10289261490106583, 0.10579843819141388, 0.09417514503002167], "val_loss": [5323470336.0, 43956281344.0, 153220923392.0, 375336468480.0, 758072999936.0, 1355519229952.0], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}]