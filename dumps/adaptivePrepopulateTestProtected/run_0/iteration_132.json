[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8640000224113464, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2249841690063477, 1.8716431856155396, 1.3988096714019775, 1.0920014381408691, 0.9340560436248779, 0.8483646512031555, 0.7804386615753174, 0.7337083220481873, 0.6931939125061035, 0.665264904499054, 0.6404715776443481, 0.6054378747940063, 0.5946952104568481, 0.5734634399414062, 0.5596075057983398, 0.5483259558677673, 0.5342796444892883, 0.5116559267044067, 0.5092598795890808, 0.4896760880947113, 0.4802361726760864, 0.47339487075805664, 0.4641542136669159, 0.4526298940181732, 0.4539587199687958, 0.43951329588890076, 0.4296766519546509, 0.4243623614311218, 0.4136252999305725, 0.4027446508407593, 0.40049800276756287, 0.39932191371917725, 0.3912189304828644, 0.38703158497810364, 0.378486305475235, 0.37075960636138916, 0.3655598759651184, 0.3608848750591278, 0.34769830107688904, 0.3493027687072754, 0.34485703706741333, 0.34579533338546753, 0.3327830135822296, 0.33615395426750183, 0.32810184359550476, 0.32530203461647034, 0.3149315416812897, 0.30478066205978394, 0.31169408559799194, 0.30516743659973145, 0.2970113456249237, 0.2921634912490845, 0.2874930202960968, 0.28622967004776], "accuracy": [0.2847708463668823, 0.48368775844573975, 0.5634658336639404, 0.6222427487373352, 0.6635847091674805, 0.6980583667755127, 0.7180029153823853, 0.7391361594200134, 0.7532690763473511, 0.7630431652069092, 0.7648923397064209, 0.789988100528717, 0.7893276810646057, 0.791969358921051, 0.8009510040283203, 0.8035926818847656, 0.8088759779930115, 0.82683926820755, 0.8165367841720581, 0.8239334225654602, 0.8342359066009521, 0.8338396549224854, 0.837141752243042, 0.8389908671379089, 0.8432175517082214, 0.8482366800308228, 0.8482366800308228, 0.8508783578872681, 0.8558974862098694, 0.8588033318519592, 0.8601241707801819, 0.8614450097084045, 0.86553955078125, 0.8646149635314941, 0.8672566413879395, 0.872407853603363, 0.8712190985679626, 0.8732003569602966, 0.8759741187095642, 0.8776912093162537, 0.8815215826034546, 0.8820499181747437, 0.8877294659614563, 0.8829745054244995, 0.8840311765670776, 0.886672854423523, 0.887597382068634, 0.8906353116035461, 0.8914278149604797, 0.893541157245636, 0.8971073627471924, 0.896446943283081, 0.9021265506744385, 0.9031832218170166], "val_loss": [2.0446581840515137, 1.5227431058883667, 1.050666093826294, 0.8485884070396423, 0.7622654438018799, 0.7024303674697876, 0.6597996950149536, 0.6257994771003723, 0.5999225378036499, 0.5745882391929626, 0.556613028049469, 0.5391742587089539, 0.5311980247497559, 0.5143740773200989, 0.5118983387947083, 0.4948514401912689, 0.4882877469062805, 0.4771154522895813, 0.4746275246143341, 0.46332263946533203, 0.4539635479450226, 0.45437881350517273, 0.44492286443710327, 0.4379465878009796, 0.4375077188014984, 0.426917165517807, 0.424912691116333, 0.42153996229171753, 0.4175800085067749, 0.41109082102775574, 0.40884658694267273, 0.4089083671569824, 0.4054718315601349, 0.40287134051322937, 0.39805498719215393, 0.3963478207588196, 0.39022842049598694, 0.3896810710430145, 0.39457032084465027, 0.38745370507240295, 0.38627758622169495, 0.3830607831478119, 0.38273394107818604, 0.38604021072387695, 0.37790852785110474, 0.375124990940094, 0.3774445056915283, 0.37614545226097107, 0.3698594272136688, 0.37137117981910706, 0.37230396270751953, 0.3696538805961609, 0.36933520436286926, 0.3674863576889038], "val_accuracy": [0.5276666879653931, 0.6683333516120911, 0.6803333163261414, 0.7106666564941406, 0.7293333411216736, 0.7436666488647461, 0.7526666522026062, 0.765666663646698, 0.7853333353996277, 0.7893333435058594, 0.7986666560173035, 0.8050000071525574, 0.8046666383743286, 0.8159999847412109, 0.8153333067893982, 0.8246666789054871, 0.8293333053588867, 0.8356666564941406, 0.8366666436195374, 0.8366666436195374, 0.8413333296775818, 0.8433333039283752, 0.8486666679382324, 0.8510000109672546, 0.847000002861023, 0.8523333072662354, 0.8503333330154419, 0.8550000190734863, 0.8576666712760925, 0.8573333621025085, 0.862333357334137, 0.8600000143051147, 0.8616666793823242, 0.8613333106040955, 0.8633333444595337, 0.8653333187103271, 0.8663333058357239, 0.8633333444595337, 0.8619999885559082, 0.8643333315849304, 0.8633333444595337, 0.8683333396911621, 0.8673333525657654, 0.8636666536331177, 0.8673333525657654, 0.8683333396911621, 0.8696666955947876, 0.8690000176429749, 0.8703333139419556, 0.8686666488647461, 0.8676666617393494, 0.8703333139419556, 0.8703333139419556, 0.8683333396911621]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0], [0, 9], [0], [0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 7, 9, 5, 8], [0, 3, 0], [0, 52, 67], [0, 1], [0], [1], [0]], "fitness": -0.8514285683631897, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(sigma)), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2939839363098145, 2.191788673400879, 1.7786674499511719, 1.3604751825332642, 1.0763691663742065, 0.9174321889877319, 0.8518204689025879, 0.7978553771972656, 0.7701758742332458, 0.7306750416755676, 0.6914522051811218, 0.6792461276054382, 0.6518963575363159, 0.613856852054596, 0.6017144322395325, 0.5854767560958862, 0.5740692615509033, 0.5725404620170593, 0.5602287650108337, 0.5385861992835999, 0.5344449877738953, 0.5208083987236023, 0.5153399109840393, 0.49734213948249817, 0.48308083415031433, 0.4764614701271057, 0.4571007490158081, 0.45262420177459717, 0.4473229944705963, 0.43776702880859375, 0.43791455030441284, 0.4195517599582672, 0.418206125497818, 0.4085850119590759, 0.4158787429332733, 0.39322924613952637, 0.3812862038612366, 0.3872484862804413, 0.3865959644317627, 0.36261609196662903, 0.37438085675239563, 0.36133062839508057, 0.349730908870697, 0.35727015137672424, 0.35688260197639465, 0.34388092160224915, 0.3320387601852417, 0.3309715688228607, 0.32528606057167053, 0.31652432680130005, 0.3134545683860779, 0.3102714419364929, 0.31855204701423645, 0.3071596026420593, 0.307598739862442], "accuracy": [0.12481838464736938, 0.3287544548511505, 0.43323206901550293, 0.5456346869468689, 0.6342623233795166, 0.6604147553443909, 0.6807554960250854, 0.6947563290596008, 0.69673752784729, 0.7136441469192505, 0.7409853339195251, 0.7380794882774353, 0.7565711140632629, 0.7601373791694641, 0.7660810947418213, 0.7732135653495789, 0.7761194109916687, 0.7757231593132019, 0.7874785661697388, 0.7935543656349182, 0.7902522683143616, 0.8042530417442322, 0.8042530417442322, 0.8034605979919434, 0.8084797263145447, 0.819970965385437, 0.8259146809577942, 0.8257825970649719, 0.8256505131721497, 0.8286884427070618, 0.8290846943855286, 0.8413683772087097, 0.8405758738517761, 0.8396512866020203, 0.8376700282096863, 0.8473120927810669, 0.8520671129226685, 0.8518029451370239, 0.8482366800308228, 0.8582749962806702, 0.8549728989601135, 0.86118084192276, 0.8627657890319824, 0.8593316674232483, 0.8634262084960938, 0.863029956817627, 0.8717474341392517, 0.8671245574951172, 0.8688416481018066, 0.8753136992454529, 0.880729079246521, 0.8786157965660095, 0.8774270415306091, 0.8802007436752319, 0.8794082403182983], "val_loss": [2.2464101314544678, 2.024109363555908, 1.1453267335891724, 0.8789793252944946, 0.7751224040985107, 0.7209778428077698, 0.6658262014389038, 0.6534462571144104, 0.6555201411247253, 0.5993381142616272, 0.5582523345947266, 0.5426062941551208, 0.5418595671653748, 0.5263926386833191, 0.5102142095565796, 0.512846827507019, 0.5075941681861877, 0.4945432245731354, 0.49275675415992737, 0.47868770360946655, 0.47642597556114197, 0.4833530783653259, 0.47701093554496765, 0.469346284866333, 0.4594000577926636, 0.45929181575775146, 0.44866129755973816, 0.44101762771606445, 0.4395686089992523, 0.44222989678382874, 0.4317719340324402, 0.4231266379356384, 0.42677053809165955, 0.4193474054336548, 0.41010987758636475, 0.4102073609828949, 0.4122123122215271, 0.42705249786376953, 0.411968469619751, 0.4148467481136322, 0.4320248067378998, 0.4162313938140869, 0.4109305441379547, 0.4245474338531494, 0.43282946944236755, 0.42780575156211853, 0.4000236392021179, 0.39327776432037354, 0.40535375475883484, 0.40780866146087646, 0.4314633905887604, 0.46722543239593506, 0.4509347379207611, 0.43987059593200684, 0.43530744314193726], "val_accuracy": [0.42899999022483826, 0.49033331871032715, 0.6496666669845581, 0.7020000219345093, 0.7083333134651184, 0.7210000157356262, 0.7329999804496765, 0.746666669845581, 0.7540000081062317, 0.7736666798591614, 0.7870000004768372, 0.7950000166893005, 0.7876666784286499, 0.8026666641235352, 0.8029999732971191, 0.8066666722297668, 0.8216666579246521, 0.8199999928474426, 0.8203333616256714, 0.831333339214325, 0.8270000219345093, 0.8213333487510681, 0.8289999961853027, 0.8389999866485596, 0.8453333377838135, 0.8516666889190674, 0.8513333201408386, 0.8426666855812073, 0.8500000238418579, 0.8536666631698608, 0.8506666421890259, 0.8516666889190674, 0.8566666841506958, 0.8600000143051147, 0.8579999804496765, 0.862666666507721, 0.8556666374206543, 0.8539999723434448, 0.8573333621025085, 0.8616666793823242, 0.8656666874885559, 0.8659999966621399, 0.8576666712760925, 0.859000027179718, 0.8666666746139526, 0.8646666407585144, 0.8669999837875366, 0.8646666407585144, 0.8656666874885559, 0.8706666827201843, 0.8666666746139526, 0.8650000095367432, 0.8636666536331177, 0.862333357334137, 0.8669999837875366]}, "mapping_values": [1, 10, 5, 5, 3, 2, 2, 0, 1, 10, 7, 3, 3, 2, 1, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8385714292526245, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5396298170089722, 0.7876054048538208, 0.6547054648399353, 0.5799090266227722, 0.5409122109413147, 0.5107191205024719, 0.5078814029693604, 0.496181458234787, 0.4925890266895294, 0.5070818662643433, 0.48836180567741394, 0.48997217416763306, 0.5294561982154846, 0.5114369988441467, 0.4762614071369171, 0.5147801637649536, 0.5348918437957764, 0.534146785736084, 0.5523053407669067, 0.5437706708908081], "accuracy": [0.46189406514167786, 0.7185312509536743, 0.7604015469551086, 0.7847048044204712, 0.8014793395996094, 0.8144234418869019, 0.8161405324935913, 0.8251221776008606, 0.8232730031013489, 0.8241975903511047, 0.8210275769233704, 0.821820080280304, 0.8142913579940796, 0.8364813327789307, 0.8322546482086182, 0.8318583965301514, 0.822348415851593, 0.8234050869941711, 0.8162726163864136, 0.8197067975997925], "val_loss": [0.820749819278717, 0.6137739419937134, 0.49834144115448, 0.4846131205558777, 0.4805758595466614, 0.4602949917316437, 0.5058687925338745, 0.47332972288131714, 0.4902966320514679, 0.5154645442962646, 0.5346903800964355, 0.5166565179824829, 0.5263785123825073, 0.5803743004798889, 0.5494286417961121, 0.5617932081222534, 0.5960173606872559, 0.56013423204422, 0.6327858567237854, 0.579234778881073], "val_accuracy": [0.7126666903495789, 0.7720000147819519, 0.8153333067893982, 0.8143333196640015, 0.8206666707992554, 0.8346666693687439, 0.8243333101272583, 0.8323333263397217, 0.8373333215713501, 0.8293333053588867, 0.8383333086967468, 0.8270000219345093, 0.8296666741371155, 0.82833331823349, 0.8429999947547913, 0.8336666822433472, 0.8339999914169312, 0.8299999833106995, 0.8389999866485596, 0.8259999752044678]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [9, 2, 3, 0, 3, 5], [1, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 8, 6, 8, 1, 4, 1, 4, 2, 8], [4, 2, 2, 3, 0, 0, 1, 1, 2, 0], [16, 99, 38, 93, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 17, 9, 8, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(grad), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(beta, tf.math.pow(beta, sigma))), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha)))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [59, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 2, 3, 6, 3, 3, 8, 5, 9], [0, 2, 0, 3, 4], [16, 16, 49], [0, 1], [0], [0], [83], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 0, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 1, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.sqrt(grad)))), tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.303400754928589, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}, "mapping_values": [1, 9, 5, 4, 2, 14, 9, 5, 3, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 15}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 2, 3, 0, 0, 0], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 2, 5, 4], [0, 2, 0, 3, 1], [16, 15], [1, 1], [5], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 2, 8, 1, 4, 1, 4, 2, 8, 8], [0, 0, 0, 4, 0, 0, 3, 1, 1, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 2, 12, 7, 5, 2, 1, 0, 1, 1, 22, 12, 10, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.pow(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma), tf.math.sqrt(tf.math.sqrt(alpha))), alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 2, 3, 0, 3, 5], [0, 2, 0, 3, 2], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 9, 8, 1, 4, 8, 4, 2, 8], [0, 0, 1, 3, 0, 0, 2, 1, 1, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 11, 6, 5, 2, 2, 1, 1, 1, 12, 7, 5, 4], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, sigma)))), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}]