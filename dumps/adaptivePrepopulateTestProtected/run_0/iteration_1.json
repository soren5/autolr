[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2232577800750732, 1.8683713674545288, 1.3909039497375488, 1.0885505676269531, 0.9325019121170044, 0.8381845951080322, 0.7749615907669067, 0.7230215668678284, 0.6914158463478088, 0.6574979424476624, 0.6404489278793335, 0.6031500101089478, 0.5884645581245422, 0.5749733448028564, 0.5602027177810669, 0.5464247465133667, 0.5323486924171448, 0.5212522745132446, 0.5104420781135559, 0.49926164746284485, 0.4893052875995636, 0.4799790680408478, 0.47382548451423645, 0.4668574631214142, 0.45086196064949036, 0.449615478515625, 0.4425220787525177, 0.43339797854423523, 0.4219944179058075, 0.4175056219100952, 0.4139348864555359, 0.4119637906551361, 0.4017915427684784, 0.4024088978767395, 0.3921946585178375, 0.38031432032585144, 0.3785443902015686, 0.37616655230522156, 0.3698992133140564, 0.3623926639556885, 0.3624546229839325, 0.35916510224342346, 0.3505108058452606, 0.34674668312072754, 0.3383950889110565, 0.3351767659187317, 0.3326762616634369, 0.3295612037181854, 0.32245156168937683, 0.3235240876674652, 0.31377944350242615, 0.30497461557388306, 0.30505654215812683, 0.3019163906574249, 0.29702267050743103, 0.2941344082355499, 0.28115949034690857, 0.2870464026927948, 0.2783043384552002, 0.27901434898376465, 0.2719046175479889, 0.2717432379722595], "accuracy": [0.27341169118881226, 0.47906485199928284, 0.566239595413208, 0.6188086271286011, 0.6625280380249023, 0.7009642124176025, 0.7206445932388306, 0.7390040755271912, 0.7478536367416382, 0.7623828053474426, 0.7720248103141785, 0.7814027070999146, 0.7827235460281372, 0.7930260300636292, 0.7976489067077637, 0.8072909712791443, 0.8095363974571228, 0.8165367841720581, 0.8169330358505249, 0.8259146809577942, 0.8235371708869934, 0.8319904804229736, 0.8315942287445068, 0.8384625315666199, 0.8421608805656433, 0.8392550349235535, 0.8391229510307312, 0.8436138033866882, 0.850350022315979, 0.8502179384231567, 0.8537842035293579, 0.8536521196365356, 0.8585391640663147, 0.8565579056739807, 0.8601241707801819, 0.8659358024597168, 0.8632941246032715, 0.8625016212463379, 0.8697662353515625, 0.873860776424408, 0.8679170608520508, 0.8733324408531189, 0.8750495314598083, 0.876370370388031, 0.8774270415306091, 0.8790120482444763, 0.8808611631393433, 0.8841632604598999, 0.8854840993881226, 0.8837670087814331, 0.8874653577804565, 0.8908994793891907, 0.8878615498542786, 0.8926165699958801, 0.891559898853302, 0.8919561505317688, 0.8986923694610596, 0.8928807377815247, 0.8985602855682373, 0.8980319499969482, 0.9009377956390381, 0.9002773761749268], "val_loss": [2.034954786300659, 1.5102976560592651, 1.0375664234161377, 0.8332169055938721, 0.7586173415184021, 0.6960490942001343, 0.6543759703636169, 0.6207343935966492, 0.604860782623291, 0.5758394598960876, 0.5564833283424377, 0.5423628687858582, 0.5245044827461243, 0.516785740852356, 0.505858838558197, 0.4933469593524933, 0.48290616273880005, 0.4780406057834625, 0.4736289083957672, 0.4667108952999115, 0.4547964632511139, 0.45190495252609253, 0.4510738253593445, 0.4337068796157837, 0.4353885054588318, 0.43033114075660706, 0.4230926036834717, 0.4176921248435974, 0.414183109998703, 0.4088519215583801, 0.406796395778656, 0.4030624330043793, 0.39934805035591125, 0.3959849774837494, 0.3936961591243744, 0.39414912462234497, 0.3953377604484558, 0.38816386461257935, 0.3825201690196991, 0.38707324862480164, 0.3835698962211609, 0.3787166476249695, 0.3740202784538269, 0.37357306480407715, 0.37608301639556885, 0.3721776008605957, 0.37521302700042725, 0.3737257122993469, 0.37074020504951477, 0.364646852016449, 0.3636268377304077, 0.3662469983100891, 0.3632115125656128, 0.36097627878189087, 0.3557220995426178, 0.3622669279575348, 0.3583602011203766, 0.3597984313964844, 0.36368390917778015, 0.3592796325683594, 0.3568941354751587, 0.35282161831855774], "val_accuracy": [0.5099999904632568, 0.6499999761581421, 0.6766666769981384, 0.7053333520889282, 0.7206666469573975, 0.7480000257492065, 0.7509999871253967, 0.7630000114440918, 0.7756666541099548, 0.7760000228881836, 0.7903333306312561, 0.7973333597183228, 0.8036666512489319, 0.7986666560173035, 0.815666675567627, 0.8169999718666077, 0.8173333406448364, 0.8206666707992554, 0.8246666789054871, 0.8266666531562805, 0.8296666741371155, 0.82833331823349, 0.8339999914169312, 0.8423333168029785, 0.8383333086967468, 0.8366666436195374, 0.8396666646003723, 0.8493333458900452, 0.8506666421890259, 0.8523333072662354, 0.8486666679382324, 0.8529999852180481, 0.856333315372467, 0.8553333282470703, 0.8569999933242798, 0.8550000190734863, 0.8516666889190674, 0.8566666841506958, 0.8610000014305115, 0.859000027179718, 0.8610000014305115, 0.8640000224113464, 0.8610000014305115, 0.8643333315849304, 0.8629999756813049, 0.8676666617393494, 0.8636666536331177, 0.8619999885559082, 0.8686666488647461, 0.8686666488647461, 0.8686666488647461, 0.8690000176429749, 0.8693333268165588, 0.8673333525657654, 0.8700000047683716, 0.8669999837875366, 0.8723333477973938, 0.8700000047683716, 0.8713333606719971, 0.8693333268165588, 0.8709999918937683, 0.8713333606719971]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8642857074737549, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223083734512329, 1.8681925535202026, 1.3896485567092896, 1.0935472249984741, 0.9331216216087341, 0.8298344016075134, 0.7829821705818176, 0.7210912704467773, 0.6846739053726196, 0.6647998690605164, 0.6371023654937744, 0.6179097890853882, 0.6007981896400452, 0.5837210416793823, 0.5552120208740234, 0.542453944683075, 0.5353143215179443, 0.5243962407112122, 0.5153590440750122, 0.49369534850120544, 0.4795035123825073, 0.4846958518028259, 0.47361403703689575, 0.45916786789894104, 0.45627668499946594, 0.44660085439682007, 0.44019970297813416, 0.427044540643692, 0.4238254427909851, 0.4194221496582031, 0.40696775913238525, 0.40098151564598083, 0.3943200409412384, 0.3945320248603821, 0.38281628489494324, 0.3837232291698456, 0.37534910440444946, 0.3694142699241638, 0.36506202816963196, 0.35880979895591736, 0.35233816504478455, 0.35052743554115295, 0.3451622724533081, 0.34422436356544495, 0.3359600901603699, 0.33199378848075867, 0.3236808478832245, 0.31984370946884155, 0.32209691405296326, 0.31361743807792664, 0.30394721031188965, 0.3059763014316559], "accuracy": [0.2740721106529236, 0.4831594228744507, 0.5670320987701416, 0.6180161237716675, 0.6719059348106384, 0.7016246318817139, 0.718399167060852, 0.7427024245262146, 0.7486461400985718, 0.7574957013130188, 0.7689869403839111, 0.7761194109916687, 0.7810064554214478, 0.7898560166358948, 0.8021397590637207, 0.8000264167785645, 0.8075551390647888, 0.8123101592063904, 0.8138951063156128, 0.8186501264572144, 0.8261788487434387, 0.8203672170639038, 0.8264430165290833, 0.8359529972076416, 0.8334434032440186, 0.8397833704948425, 0.8422929644584656, 0.8446704745292664, 0.8510104417800903, 0.8474441766738892, 0.8552370667457581, 0.8564258217811584, 0.8558974862098694, 0.8581429123878479, 0.8669924736022949, 0.8582749962806702, 0.8668603897094727, 0.8646149635314941, 0.8644828796386719, 0.8728041052818298, 0.8739928603172302, 0.872407853603363, 0.878879964351654, 0.8771628737449646, 0.8787478804588318, 0.8815215826034546, 0.8842953443527222, 0.8844274282455444, 0.8820499181747437, 0.8862766027450562, 0.8882578015327454, 0.8870691061019897], "val_loss": [2.041069269180298, 1.5249245166778564, 1.053230881690979, 0.8458061814308167, 0.762861430644989, 0.6989692449569702, 0.6573376655578613, 0.6249581575393677, 0.5941774249076843, 0.5708796977996826, 0.5574895143508911, 0.5375532507896423, 0.5201783180236816, 0.5085510611534119, 0.4976479411125183, 0.4923049807548523, 0.4831508696079254, 0.4748324751853943, 0.4604288339614868, 0.452462375164032, 0.4521617293357849, 0.44122302532196045, 0.43289706110954285, 0.4291357696056366, 0.4214577376842499, 0.41565585136413574, 0.41809138655662537, 0.4105187952518463, 0.4052777886390686, 0.4031234681606293, 0.3998953402042389, 0.3982190489768982, 0.394606351852417, 0.3925071656703949, 0.38956010341644287, 0.3925541043281555, 0.3827025592327118, 0.37954768538475037, 0.37458130717277527, 0.3768799602985382, 0.37854406237602234, 0.37288159132003784, 0.3675251603126526, 0.3698245584964752, 0.37067025899887085, 0.3683188557624817, 0.36141541600227356, 0.3676031827926636, 0.36610424518585205, 0.3605784773826599, 0.3622207045555115, 0.35773175954818726], "val_accuracy": [0.5223333239555359, 0.6499999761581421, 0.6769999861717224, 0.7016666531562805, 0.7203333377838135, 0.7459999918937683, 0.7590000033378601, 0.7670000195503235, 0.7856666445732117, 0.7900000214576721, 0.8009999990463257, 0.8019999861717224, 0.8136666417121887, 0.8199999928474426, 0.8209999799728394, 0.8343333601951599, 0.8286666870117188, 0.8326666951179504, 0.8426666855812073, 0.8420000076293945, 0.8410000205039978, 0.8506666421890259, 0.8519999980926514, 0.8546666502952576, 0.8576666712760925, 0.8610000014305115, 0.8500000238418579, 0.859000027179718, 0.8613333106040955, 0.8643333315849304, 0.8676666617393494, 0.862333357334137, 0.8653333187103271, 0.8659999966621399, 0.8700000047683716, 0.8669999837875366, 0.8690000176429749, 0.871999979019165, 0.8743333220481873, 0.8740000128746033, 0.8700000047683716, 0.8740000128746033, 0.8759999871253967, 0.875333309173584, 0.8730000257492065, 0.871999979019165, 0.8820000290870667, 0.8709999918937683, 0.8730000257492065, 0.8756666779518127, 0.8793333172798157, 0.8813333511352539]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8414285778999329, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2932865619659424, 2.190063238143921, 1.7747652530670166, 1.3414684534072876, 1.0898323059082031, 0.9250660538673401, 0.8162888884544373, 0.8197575211524963, 0.75356125831604, 0.7429763674736023, 0.697952151298523, 0.6801212430000305, 0.6566393971443176, 0.6380775570869446, 0.6230443120002747, 0.6017763614654541, 0.5872620344161987, 0.5611099004745483, 0.5534033179283142, 0.550473153591156, 0.5262863636016846, 0.5202128291130066, 0.507923424243927, 0.5000683665275574, 0.48739245533943176, 0.47950711846351624, 0.4591120779514313, 0.45511168241500854, 0.45432934165000916, 0.4475417137145996, 0.4348090887069702, 0.42220401763916016, 0.41401225328445435, 0.40856072306632996, 0.3981705605983734, 0.4020358622074127, 0.3889901638031006, 0.3765091300010681, 0.3794274926185608, 0.3778981566429138, 0.36709150671958923, 0.37072503566741943, 0.35670244693756104, 0.34724119305610657, 0.3516969680786133, 0.3546278178691864, 0.3487565517425537, 0.33011171221733093, 0.3334144353866577, 0.32628268003463745, 0.32129013538360596, 0.31223422288894653, 0.3133469521999359], "accuracy": [0.12415797263383865, 0.32862237095832825, 0.43164706230163574, 0.5419363379478455, 0.6276581883430481, 0.6581693291664124, 0.6995112895965576, 0.7078325152397156, 0.713379979133606, 0.7202483415603638, 0.7413815855979919, 0.7388719916343689, 0.7526086568832397, 0.7625148296356201, 0.7622507214546204, 0.7736098170280457, 0.776251494884491, 0.7844406366348267, 0.7915731072425842, 0.7862898111343384, 0.8009510040283203, 0.7988376617431641, 0.8057059645652771, 0.8083476424217224, 0.817461371421814, 0.8211596608161926, 0.82683926820755, 0.8215559124946594, 0.8304054737091064, 0.8271034359931946, 0.8362171649932861, 0.8411042094230652, 0.8418967127799988, 0.8459912538528442, 0.8499537706375122, 0.8510104417800903, 0.8518029451370239, 0.8549728989601135, 0.8541803956031799, 0.854708731174469, 0.8555012345314026, 0.8560295701026917, 0.8647470474243164, 0.8705587387084961, 0.8634262084960938, 0.8654074668884277, 0.8634262084960938, 0.872407853603363, 0.8753136992454529, 0.8741249442100525, 0.8761062026023865, 0.8804649114608765, 0.8770307898521423], "val_loss": [2.245814800262451, 2.0200843811035156, 1.1368563175201416, 0.8517296314239502, 0.7489140629768372, 0.7039746046066284, 0.6720319986343384, 0.6324459910392761, 0.6186010837554932, 0.5908187627792358, 0.5539215207099915, 0.5421490669250488, 0.5418325066566467, 0.5235305428504944, 0.5050316452980042, 0.49510180950164795, 0.4920576214790344, 0.47707515954971313, 0.46828368306159973, 0.4570414125919342, 0.44979235529899597, 0.4560600221157074, 0.44005364179611206, 0.43168872594833374, 0.42951667308807373, 0.41981491446495056, 0.4218529462814331, 0.41879358887672424, 0.4135484993457794, 0.404987633228302, 0.40245166420936584, 0.40844547748565674, 0.4055889844894409, 0.3961958885192871, 0.3929274380207062, 0.3904697299003601, 0.3862452805042267, 0.38140153884887695, 0.3855759799480438, 0.3763161897659302, 0.37846240401268005, 0.38801050186157227, 0.38155150413513184, 0.38679149746894836, 0.3824654519557953, 0.3824091851711273, 0.3786083161830902, 0.3800307512283325, 0.38975992798805237, 0.40519994497299194, 0.39643165469169617, 0.39318591356277466, 0.4083958864212036], "val_accuracy": [0.4169999957084656, 0.48133334517478943, 0.6420000195503235, 0.703000009059906, 0.7276666760444641, 0.7446666955947876, 0.7379999756813049, 0.7590000033378601, 0.7633333206176758, 0.7636666893959045, 0.7820000052452087, 0.7866666913032532, 0.7876666784286499, 0.8003333210945129, 0.7993333339691162, 0.8033333420753479, 0.8136666417121887, 0.8056666851043701, 0.8173333406448364, 0.8276666402816772, 0.8286666870117188, 0.8196666836738586, 0.8339999914169312, 0.8330000042915344, 0.8373333215713501, 0.8429999947547913, 0.8376666903495789, 0.8450000286102295, 0.8420000076293945, 0.8433333039283752, 0.8453333377838135, 0.843666672706604, 0.8476666808128357, 0.8500000238418579, 0.8519999980926514, 0.8553333282470703, 0.8610000014305115, 0.8619999885559082, 0.8603333234786987, 0.8650000095367432, 0.8679999709129333, 0.8653333187103271, 0.8690000176429749, 0.8600000143051147, 0.8676666617393494, 0.8683333396911621, 0.8633333444595337, 0.8709999918937683, 0.8653333187103271, 0.8613333106040955, 0.8676666617393494, 0.8700000047683716, 0.8643333315849304]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8242856860160828, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5072640180587769, 0.8078964352607727, 0.6798909902572632, 0.6162009835243225, 0.5484846830368042, 0.5151437520980835, 0.49784937500953674, 0.4923144280910492, 0.4937152564525604, 0.47695720195770264, 0.4580360949039459, 0.4479195773601532, 0.4362829923629761, 0.4545060396194458, 0.4486510455608368, 0.44099152088165283], "accuracy": [0.4909523129463196, 0.7170783281326294, 0.7552502751350403, 0.7733456492424011, 0.8010830879211426, 0.8105930685997009, 0.8164047002792358, 0.8215559124946594, 0.8251221776008606, 0.8281601071357727, 0.8354246616363525, 0.8404437899589539, 0.8426892161369324, 0.8451988101005554, 0.8457271456718445, 0.8391229510307312], "val_loss": [0.8085197806358337, 0.6298026442527771, 0.5382221937179565, 0.4982168674468994, 0.47797834873199463, 0.4701177477836609, 0.49239641427993774, 0.48192110657691956, 0.5037705898284912, 0.49582257866859436, 0.5069997310638428, 0.4643518030643463, 0.5132483839988708, 0.5139466524124146, 0.5346222519874573, 0.7191269397735596], "val_accuracy": [0.721666693687439, 0.7820000052452087, 0.812666654586792, 0.8119999766349792, 0.824999988079071, 0.8376666903495789, 0.8423333168029785, 0.8379999995231628, 0.8289999961853027, 0.8393333554267883, 0.8529999852180481, 0.8386666774749756, 0.8423333168029785, 0.843999981880188, 0.8386666774749756, 0.8413333296775818]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [9, 2, 3, 0, 3, 5], [0, 1, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 0, 4, 2, 8, 0], [4, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 51, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 21, 12, 9, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.negative(tf.math.pow(tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad)))), tf.math.sqrt(tf.math.negative(alpha))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 8, 3, 3, 4], [0, 2, 0, 3, 1, 2, 2], [16, 77], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 0], [0, 4, 0, 3, 0, 0, 3, 4, 2, 0], [72, 99, 13, 99, 99, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 17, 10, 7, 2, 2, 1, 1, 1, 10, 5, 5, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.sqrt(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.math.multiply(alpha, tf.math.pow(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [1.7911006707800736e+29, 179.8318328857422, 328.3843688964844, 479.2251281738281, 614.4341430664062, 759.2031860351562, 883.724609375, 1044.91455078125], "accuracy": [0.09708096832036972, 0.10011887550354004, 0.09959053993225098, 0.09430722147226334, 0.09959053993225098, 0.09972262382507324, 0.10553427785634995, 0.09760929644107819], "val_loss": [107.0757064819336, 283.0044860839844, 433.7602233886719, 546.2679443359375, 706.6865234375, 813.6183471679688, 990.6728515625, 1163.3365478515625], "val_accuracy": [0.0989999994635582, 0.10199999809265137, 0.10333333164453506, 0.10066666454076767, 0.10199999809265137, 0.0989999994635582, 0.10199999809265137, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 7, 0], [0, 1, 0, 2, 0], [39, 39, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 9, 5], [0, 1, 0, 3], [16, 16], [0, 1, 1], [2], [0, 7], [99], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 2, 2, 3], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30373215675354, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 12, 7, 5, 3, 2, 1, 1, 1, 3, 1, 2, 1, 5, 2, 3, 3], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 4], [0, 1, 0, 2], [39, 39], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [6, 0, 0, 0, 3, 5], [0, 2, 0, 3], [58, 16], [0, 1], [0], [0], [90], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 8, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 0, 4, 0, 3, 1, 2, 0], [16, 10, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 3, 1, 2, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303593873977661, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}]