[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8765714168548584, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223011016845703, 1.865624189376831, 1.3909275531768799, 1.0906970500946045, 0.9346197843551636, 0.8316051959991455, 0.7765270471572876, 0.7175954580307007, 0.689998984336853, 0.6539434790611267, 0.6345682740211487, 0.6125860214233398, 0.5929545760154724, 0.5741943120956421, 0.5605514049530029, 0.5450935363769531, 0.5290834307670593, 0.5135375261306763, 0.5038453936576843, 0.49123626947402954, 0.4824116826057434, 0.47230637073516846, 0.46095383167266846, 0.45251646637916565, 0.4567464590072632, 0.44120994210243225, 0.42931798100471497, 0.4283377230167389, 0.41460976004600525, 0.403716117143631, 0.39799705147743225, 0.38751497864723206, 0.39453190565109253, 0.3867490887641907, 0.3738558888435364, 0.37420085072517395, 0.36704206466674805, 0.35887202620506287, 0.3570341169834137, 0.35280492901802063, 0.34396079182624817, 0.3353290259838104, 0.3330399990081787, 0.33638864755630493, 0.33185482025146484, 0.31505221128463745, 0.3144376277923584, 0.31331920623779297, 0.30786311626434326, 0.30375027656555176, 0.3012574315071106, 0.2957165539264679, 0.29118576645851135, 0.28823795914649963, 0.2842210531234741, 0.2840941250324249, 0.27437901496887207, 0.27262750267982483, 0.2716067135334015, 0.27041494846343994, 0.2598229944705963, 0.251598984003067, 0.2570091187953949, 0.24883396923542023, 0.24945122003555298, 0.23872071504592896, 0.23352831602096558, 0.2393052726984024, 0.23676493763923645, 0.22705252468585968, 0.22216331958770752, 0.2274605929851532, 0.21139736473560333, 0.21167641878128052, 0.21031971275806427, 0.21228449046611786, 0.21343117952346802, 0.20817655324935913], "accuracy": [0.26337340474128723, 0.4963677227497101, 0.5735041499137878, 0.6207898855209351, 0.6701889038085938, 0.7073041796684265, 0.7268524765968323, 0.737947404384613, 0.7526086568832397, 0.7652885913848877, 0.7687227725982666, 0.7729493975639343, 0.7816668748855591, 0.7891955971717834, 0.7973847389221191, 0.802800178527832, 0.8125742673873901, 0.816008448600769, 0.8175934553146362, 0.8210275769233704, 0.826310932636261, 0.8241975903511047, 0.8359529972076416, 0.8367455005645752, 0.8352925777435303, 0.8426892161369324, 0.8450667262077332, 0.8467837572097778, 0.854708731174469, 0.8551049828529358, 0.8584070801734924, 0.8615770936012268, 0.8576145768165588, 0.8610487580299377, 0.8651432991027832, 0.867520809173584, 0.8697662353515625, 0.8708229064941406, 0.8702945709228516, 0.8689737319946289, 0.8737286925315857, 0.8767666220664978, 0.8813894987106323, 0.8805969953536987, 0.883238673210144, 0.889578640460968, 0.884691596031189, 0.8878615498542786, 0.8891823887825012, 0.8905032277107239, 0.8893144726753235, 0.8951261639595032, 0.8968431949615479, 0.896446943283081, 0.8953903317451477, 0.8988244533538818, 0.900409460067749, 0.9006736278533936, 0.902390718460083, 0.9026548862457275, 0.9056927561759949, 0.9101836085319519, 0.9038436412811279, 0.9076740145683289, 0.906749427318573, 0.9137498140335083, 0.9177123308181763, 0.9158631563186646, 0.9129573106765747, 0.9161273241043091, 0.9207502603530884, 0.9183727502822876, 0.9251089692115784, 0.9240522980690002, 0.9294676780700684, 0.9216747879981995, 0.9225993752479553, 0.9266939759254456], "val_loss": [2.0393662452697754, 1.5163432359695435, 1.052855372428894, 0.84853595495224, 0.7553724646568298, 0.7027198672294617, 0.6598775386810303, 0.623932957649231, 0.5951581597328186, 0.575713574886322, 0.5536686778068542, 0.5429341793060303, 0.5218592286109924, 0.5090736746788025, 0.4945620000362396, 0.4894779324531555, 0.4822985827922821, 0.47780728340148926, 0.4668852686882019, 0.4535849690437317, 0.45237162709236145, 0.44523975253105164, 0.44240477681159973, 0.4442044198513031, 0.43248072266578674, 0.43423476815223694, 0.4240863025188446, 0.41704243421554565, 0.4154031574726105, 0.41071370244026184, 0.4096387028694153, 0.4056234061717987, 0.406754732131958, 0.3978225886821747, 0.40128466486930847, 0.39493536949157715, 0.39047834277153015, 0.3979533016681671, 0.38745030760765076, 0.3896806538105011, 0.3836043179035187, 0.38053128123283386, 0.3809419870376587, 0.3778983950614929, 0.3761148154735565, 0.3765009343624115, 0.37689653038978577, 0.3764803409576416, 0.3714219927787781, 0.37403666973114014, 0.36849063634872437, 0.3699629008769989, 0.3696681261062622, 0.3686944246292114, 0.36859026551246643, 0.36190205812454224, 0.3709731996059418, 0.3621075749397278, 0.36187833547592163, 0.36555323004722595, 0.35909056663513184, 0.35743677616119385, 0.3601115345954895, 0.3594057261943817, 0.36111798882484436, 0.3632054030895233, 0.3720882833003998, 0.35455289483070374, 0.3622690737247467, 0.3586713969707489, 0.36113065481185913, 0.3577309548854828, 0.3616664707660675, 0.3606627881526947, 0.3581937551498413, 0.37010177969932556, 0.3561130464076996, 0.35808277130126953], "val_accuracy": [0.5336666703224182, 0.6470000147819519, 0.6696666479110718, 0.6926666498184204, 0.7243333458900452, 0.737666666507721, 0.7490000128746033, 0.765333354473114, 0.7696666717529297, 0.7803333401679993, 0.7933333516120911, 0.7979999780654907, 0.8009999990463257, 0.8119999766349792, 0.8183333277702332, 0.812666654586792, 0.8213333487510681, 0.8226666450500488, 0.8293333053588867, 0.831333339214325, 0.8293333053588867, 0.8366666436195374, 0.8349999785423279, 0.8330000042915344, 0.8363333344459534, 0.8376666903495789, 0.8433333039283752, 0.8446666598320007, 0.8473333120346069, 0.8526666760444641, 0.8496666550636292, 0.8496666550636292, 0.8489999771118164, 0.8539999723434448, 0.8533333539962769, 0.8576666712760925, 0.8576666712760925, 0.8550000190734863, 0.859666645526886, 0.8569999933242798, 0.8606666922569275, 0.8619999885559082, 0.8610000014305115, 0.8650000095367432, 0.8646666407585144, 0.862333357334137, 0.8659999966621399, 0.8666666746139526, 0.8650000095367432, 0.8629999756813049, 0.8659999966621399, 0.8686666488647461, 0.8673333525657654, 0.8666666746139526, 0.8683333396911621, 0.8723333477973938, 0.871666669845581, 0.8696666955947876, 0.8723333477973938, 0.8686666488647461, 0.8730000257492065, 0.8766666650772095, 0.8736666440963745, 0.8736666440963745, 0.8733333349227905, 0.8769999742507935, 0.8683333396911621, 0.8773333430290222, 0.878000020980835, 0.8769999742507935, 0.8796666860580444, 0.8809999823570251, 0.8820000290870667, 0.8773333430290222, 0.8773333430290222, 0.8736666440963745, 0.8820000290870667, 0.8806666731834412]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8502857089042664, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2225613594055176, 1.8686965703964233, 1.3907008171081543, 1.093298316001892, 0.9406567215919495, 0.8373833894729614, 0.773023247718811, 0.7290557026863098, 0.691024899482727, 0.6612024307250977, 0.6388065218925476, 0.6239433288574219, 0.593984067440033, 0.5805842876434326, 0.5680420398712158, 0.5495119094848633, 0.5330280661582947, 0.5181065201759338, 0.5163214802742004, 0.4947870969772339, 0.4918898046016693, 0.4780745804309845, 0.4708366394042969, 0.4630518853664398, 0.4525579810142517, 0.44611886143684387, 0.4325806200504303, 0.4264499545097351, 0.4278828799724579, 0.4176499545574188, 0.41288116574287415, 0.3975006341934204, 0.39780932664871216], "accuracy": [0.26865673065185547, 0.4909523129463196, 0.5741645693778992, 0.6206578016281128, 0.6642451286315918, 0.6976621150970459, 0.7185312509536743, 0.7359662055969238, 0.7523444890975952, 0.7544577717781067, 0.765949010848999, 0.7720248103141785, 0.7803460359573364, 0.7926297783851624, 0.7987055778503418, 0.8050455451011658, 0.8063663840293884, 0.8150838613510132, 0.8171972036361694, 0.8249900937080383, 0.8300092220306396, 0.8305375576019287, 0.8304054737091064, 0.8407079577445984, 0.8426892161369324, 0.8491612672805786, 0.8519350290298462, 0.8543124794960022, 0.8498216867446899, 0.8512746095657349, 0.8500858545303345, 0.8638224601745605, 0.8601241707801819], "val_loss": [2.041745662689209, 1.5212104320526123, 1.0567476749420166, 0.856935441493988, 0.7676022052764893, 0.7080550193786621, 0.6566534042358398, 0.6331298351287842, 0.6001100540161133, 0.579940676689148, 0.5637990236282349, 0.5493708252906799, 0.5344288945198059, 0.5246084332466125, 0.5100755095481873, 0.501711905002594, 0.48854896426200867, 0.4880566895008087, 0.4767126142978668, 0.4714963734149933, 0.46151280403137207, 0.45663192868232727, 0.4519527852535248, 0.44455093145370483, 0.44532811641693115, 0.4370169937610626, 0.4323095679283142, 0.42743363976478577, 0.4235413372516632, 0.4192395508289337, 0.4154605567455292, 0.4166312515735626, 0.4097440242767334], "val_accuracy": [0.5289999842643738, 0.6579999923706055, 0.6803333163261414, 0.7043333053588867, 0.7236666679382324, 0.7486666440963745, 0.7553333044052124, 0.7630000114440918, 0.7796666622161865, 0.793666660785675, 0.796999990940094, 0.8066666722297668, 0.8136666417121887, 0.8159999847412109, 0.8236666917800903, 0.8216666579246521, 0.8320000171661377, 0.8376666903495789, 0.8336666822433472, 0.8336666822433472, 0.8386666774749756, 0.8423333168029785, 0.8383333086967468, 0.8450000286102295, 0.8443333506584167, 0.8456666469573975, 0.8493333458900452, 0.8550000190734863, 0.8523333072662354, 0.8533333539962769, 0.8550000190734863, 0.8523333072662354, 0.8539999723434448]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8342857360839844, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2917423248291016, 2.1894781589508057, 1.7661594152450562, 1.3529855012893677, 1.107707142829895, 0.9453102946281433, 0.8574779033660889, 0.8398368954658508, 0.7802273631095886, 0.763734757900238, 0.7131359577178955, 0.6939407587051392, 0.6687996983528137, 0.646923840045929, 0.6259913444519043, 0.6182878613471985, 0.5992546081542969, 0.582707405090332, 0.5729435086250305, 0.5681481957435608, 0.5577825307846069, 0.5397607088088989, 0.539544403553009, 0.5057215094566345, 0.5056450366973877, 0.4986787438392639, 0.49200648069381714, 0.48900604248046875, 0.4695930480957031, 0.4540882408618927, 0.4593064486980438, 0.4472876787185669, 0.4276253879070282, 0.42389824986457825, 0.4196465015411377, 0.408955842256546, 0.39421549439430237, 0.3976016044616699, 0.3724595606327057, 0.3777155578136444, 0.37984153628349304, 0.35963502526283264, 0.36573246121406555, 0.35870733857154846, 0.359327495098114, 0.34125274419784546], "accuracy": [0.1306300312280655, 0.32426363229751587, 0.4373266398906708, 0.5443138480186462, 0.6325452327728271, 0.6635847091674805, 0.6836613416671753, 0.6964733600616455, 0.7102100253105164, 0.7157574892044067, 0.7243428826332092, 0.7375511527061462, 0.7450799345970154, 0.7539294958114624, 0.7626469135284424, 0.7724210619926453, 0.7716285586357117, 0.7814027070999146, 0.7766477465629578, 0.7824593782424927, 0.789459764957428, 0.7976489067077637, 0.7996301651000977, 0.8128384351730347, 0.8113855719566345, 0.8082155585289001, 0.8095363974571228, 0.8232730031013489, 0.8245938420295715, 0.82683926820755, 0.8236692547798157, 0.8345000743865967, 0.8350284099578857, 0.8397833704948425, 0.845859169960022, 0.8433496356010437, 0.8525954484939575, 0.8507462739944458, 0.8576145768165588, 0.8593316674232483, 0.857218325138092, 0.8634262084960938, 0.8619733452796936, 0.8595958352088928, 0.8626337051391602, 0.8702945709228516], "val_loss": [2.244408369064331, 2.011281728744507, 1.1212105751037598, 0.8765844702720642, 0.7651694416999817, 0.7188594341278076, 0.6965107321739197, 0.6674323678016663, 0.6567061543464661, 0.6314351558685303, 0.5958577394485474, 0.5780648589134216, 0.5636666417121887, 0.5560855865478516, 0.548101007938385, 0.520959734916687, 0.5274428129196167, 0.5270045399665833, 0.5158724188804626, 0.5146969556808472, 0.5041171908378601, 0.4970676302909851, 0.49536213278770447, 0.4839722216129303, 0.4769439697265625, 0.4613970220088959, 0.4670080244541168, 0.45989298820495605, 0.441986620426178, 0.4343723952770233, 0.43575039505958557, 0.4388576149940491, 0.4343640208244324, 0.42260754108428955, 0.41687077283859253, 0.41915926337242126, 0.4152151644229889, 0.4066321551799774, 0.4016893804073334, 0.39446988701820374, 0.3869086802005768, 0.39197319746017456, 0.39432528614997864, 0.4046332538127899, 0.4032032787799835, 0.40137484669685364], "val_accuracy": [0.4339999854564667, 0.4713333249092102, 0.6526666879653931, 0.6953333616256714, 0.715666651725769, 0.7283333539962769, 0.7329999804496765, 0.7516666650772095, 0.7516666650772095, 0.7556666731834412, 0.7730000019073486, 0.7693333625793457, 0.7953333258628845, 0.7929999828338623, 0.8050000071525574, 0.812333345413208, 0.8009999990463257, 0.8040000200271606, 0.8133333325386047, 0.8036666512489319, 0.8140000104904175, 0.8273333311080933, 0.8220000267028809, 0.8243333101272583, 0.8333333134651184, 0.8420000076293945, 0.8376666903495789, 0.8426666855812073, 0.8496666550636292, 0.8529999852180481, 0.8456666469573975, 0.8569999933242798, 0.8536666631698608, 0.8546666502952576, 0.8586666584014893, 0.8600000143051147, 0.8579999804496765, 0.8646666407585144, 0.8686666488647461, 0.8686666488647461, 0.8730000257492065, 0.8696666955947876, 0.871666669845581, 0.8636666536331177, 0.8690000176429749, 0.8646666407585144]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 6], [0, 1], [0], [1], [0], [2], [0]], "fitness": -0.8217142820358276, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5294694900512695, 0.8508153557777405, 0.7127344012260437, 0.6330602765083313, 0.5991745591163635, 0.5532553791999817, 0.5251418352127075, 0.5119464993476868, 0.4977746903896332, 0.5025585889816284, 0.515189528465271, 0.5214675068855286], "accuracy": [0.4831594228744507, 0.7153612375259399, 0.7430986762046814, 0.7627789974212646, 0.7868181467056274, 0.7965922355651855, 0.809140145778656, 0.8140271902084351, 0.8230088353157043, 0.8105930685997009, 0.819442629814148, 0.8216879963874817], "val_loss": [0.8685600757598877, 0.6574788689613342, 0.5952457785606384, 0.5134719014167786, 0.4971972703933716, 0.47416427731513977, 0.46360912919044495, 0.4628055691719055, 0.48323795199394226, 0.5251653790473938, 0.5188945531845093, 0.5257202386856079], "val_accuracy": [0.718999981880188, 0.7646666765213013, 0.7839999794960022, 0.8090000152587891, 0.8203333616256714, 0.8256666660308838, 0.8370000123977661, 0.8346666693687439, 0.8240000009536743, 0.8143333196640015, 0.8276666402816772, 0.8263333439826965]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [9, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 0, 2, 0], [16, 99, 96, 99, 61, 54, 17]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 1, 0, 1, 2, 1, 1, 1, 21, 11, 10, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(beta), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 2, 3, 0, 9], [0, 1, 0, 2], [39, 38], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 2, 0, 0, 3, 1, 2, 0], [16, 99, 96, 64, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 5, 2, 2, 10, 6, 4, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [13.75451374053955, 373.4546813964844, 3035.29736328125, 1081.4365234375, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.10117553919553757, 0.09866596013307571, 0.10210011899471283, 0.10289261490106583, 0.09998679161071777, 0.09998679161071777], "val_loss": [55.11453628540039, 919.9659423828125, 4427.29833984375, 176.15908813476562, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 4, 9, 3], [3, 0, 1, 0, 2], [39, 39, 86], [0, 0, 1, 0, 1, 1, 1, 1, 1], [9, 2, 3, 0, 9, 5], [0, 0, 3, 0], [0, 76, 42], [0, 1], [0], [0], [99], [0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 1, 1, 0, 1, 2, 1, 1, 1, 5, 2, 3, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303457260131836, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], [0, 2, 3, 0, 3, 8, 5, 9], [0, 1, 0, 2], [6, 39, 21], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 2], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 9, 8, 5], [0, 0, 0, 3, 0, 0, 2, 4, 2, 0], [16, 99, 28, 99, 61, 1]], "fitness": -0.08714285492897034, "mapping_values": [1, 11, 8, 3, 3, 9, 5, 4, 2, 2, 1, 1, 0, 20, 12, 8, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), beta)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.square(grad)))", "other_info": {"loss": [2.3091275691986084, 2.3093197345733643, 2.310455083847046, 2.3091084957122803, 2.310645341873169, 2.3097708225250244], "accuracy": [0.09060890227556229, 0.09259014576673508, 0.09430722147226334, 0.09272222965955734, 0.09232597798109055, 0.09470347315073013], "val_loss": [2.3083763122558594, 2.3083763122558594, 2.3083763122558594, 2.3083763122558594, 2.3083763122558594, 2.3083763122558594], "val_accuracy": [0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}]