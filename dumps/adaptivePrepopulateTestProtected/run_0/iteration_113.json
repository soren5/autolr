[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8614285588264465, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224914312362671, 1.8733214139938354, 1.398512363433838, 1.093751072883606, 0.9369521737098694, 0.834924042224884, 0.7730701565742493, 0.7251940369606018, 0.6834148168563843, 0.6503481864929199, 0.6306256651878357, 0.6047568917274475, 0.5915466547012329, 0.5753405094146729, 0.5643135905265808, 0.5568233132362366, 0.5290917754173279, 0.5162424445152283, 0.5070703029632568, 0.4977659583091736, 0.4855650067329407, 0.475924551486969, 0.4715389907360077, 0.46699240803718567, 0.45353150367736816, 0.4361382722854614, 0.43675780296325684, 0.42662477493286133, 0.42497873306274414, 0.4089602828025818, 0.4003806710243225, 0.40748533606529236, 0.39860114455223083, 0.3926079571247101, 0.38451242446899414, 0.37459319829940796, 0.37022799253463745, 0.3681356608867645, 0.3541252315044403, 0.3555658161640167, 0.35400837659835815, 0.3480297327041626, 0.3427448570728302, 0.33489638566970825, 0.33038702607154846, 0.327402800321579, 0.3238302767276764, 0.3143913149833679, 0.31294476985931396, 0.31252914667129517, 0.3143202066421509], "accuracy": [0.26561880111694336, 0.4884427487850189, 0.5622771382331848, 0.6172236204147339, 0.6639809608459473, 0.7018887996673584, 0.7240787148475647, 0.7384757399559021, 0.748249888420105, 0.7605336308479309, 0.7711002230644226, 0.7841764688491821, 0.7843085527420044, 0.7821952104568481, 0.7948752045631409, 0.800290584564209, 0.8033285140991211, 0.8127063512802124, 0.8166688680648804, 0.8202351331710815, 0.8281601071357727, 0.8290846943855286, 0.8325188159942627, 0.8314621448516846, 0.8384625315666199, 0.8429533839225769, 0.8446704745292664, 0.8474441766738892, 0.8441421389579773, 0.8539162874221802, 0.8590674996376038, 0.8533879518508911, 0.8556333184242249, 0.8574824929237366, 0.8647470474243164, 0.8632941246032715, 0.870030403137207, 0.8689737319946289, 0.8759741187095642, 0.873860776424408, 0.8728041052818298, 0.8767666220664978, 0.8746532797813416, 0.885219931602478, 0.8812574148178101, 0.882710337638855, 0.8838990926742554, 0.8881257176399231, 0.8885219693183899, 0.8845595121383667, 0.8824461698532104], "val_loss": [2.0397722721099854, 1.5187855958938599, 1.045901894569397, 0.8389838933944702, 0.7473271489143372, 0.688973605632782, 0.6467514038085938, 0.6104840636253357, 0.5830513834953308, 0.5621789693832397, 0.5378222465515137, 0.5236050486564636, 0.511420726776123, 0.501161515712738, 0.49051913619041443, 0.47288304567337036, 0.4666457176208496, 0.46113085746765137, 0.4516655206680298, 0.449133962392807, 0.43453431129455566, 0.42647093534469604, 0.4278334081172943, 0.42184144258499146, 0.41219615936279297, 0.4111991822719574, 0.41147685050964355, 0.39962369203567505, 0.39731860160827637, 0.4011192321777344, 0.3988707363605499, 0.385840505361557, 0.3889968991279602, 0.37752851843833923, 0.3761131167411804, 0.3739003837108612, 0.3724920153617859, 0.3684086203575134, 0.36464905738830566, 0.3668072521686554, 0.3607146143913269, 0.36221247911453247, 0.3582918345928192, 0.357815682888031, 0.35585692524909973, 0.3547356426715851, 0.35306110978126526, 0.3555043637752533, 0.35155272483825684, 0.34924307465553284, 0.3530248999595642], "val_accuracy": [0.5176666378974915, 0.6463333368301392, 0.6773333549499512, 0.7076666951179504, 0.7293333411216736, 0.7443333268165588, 0.7556666731834412, 0.7649999856948853, 0.7726666927337646, 0.7879999876022339, 0.8003333210945129, 0.8083333373069763, 0.8140000104904175, 0.8196666836738586, 0.8216666579246521, 0.8266666531562805, 0.8303333520889282, 0.8336666822433472, 0.8399999737739563, 0.8363333344459534, 0.8443333506584167, 0.8450000286102295, 0.846666693687439, 0.8510000109672546, 0.8516666889190674, 0.8533333539962769, 0.8510000109672546, 0.856333315372467, 0.859333336353302, 0.8533333539962769, 0.8583333492279053, 0.8610000014305115, 0.8666666746139526, 0.8663333058357239, 0.8700000047683716, 0.8690000176429749, 0.8679999709129333, 0.8743333220481873, 0.8726666569709778, 0.8730000257492065, 0.875333309173584, 0.874666690826416, 0.8786666393280029, 0.878333330154419, 0.8776666522026062, 0.8799999952316284, 0.8776666522026062, 0.8773333430290222, 0.8790000081062317, 0.8799999952316284, 0.8759999871253967]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 3, 8, 0, 3, 5, 2, 2, 2, 5, 8], [0, 1, 1, 2, 5, 3], [0], [0, 1], [0], [1], [0]], "fitness": -0.8465714454650879, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.math.multiply(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(alpha, beta)))), tf.math.square(grad)))), tf.math.sqrt(sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293266534805298, 2.1904430389404297, 1.7698986530303955, 1.33719801902771, 1.0852035284042358, 0.9160921573638916, 0.8285896182060242, 0.8023910522460938, 0.7524933218955994, 0.7286660075187683, 0.6882220506668091, 0.6846017837524414, 0.6508752703666687, 0.6178206205368042, 0.5885558128356934, 0.5817086100578308, 0.5624724626541138, 0.5542001724243164, 0.5586168169975281, 0.5347883105278015, 0.5208948850631714, 0.5178169012069702, 0.5013895630836487, 0.49564996361732483, 0.48484674096107483, 0.4753877520561218, 0.48370540142059326, 0.46455690264701843, 0.4670751988887787, 0.44296321272850037, 0.4431588649749756, 0.434428870677948, 0.4369752109050751, 0.41668567061424255, 0.4081578254699707, 0.40487441420555115, 0.3903430700302124, 0.3938317596912384, 0.37222984433174133, 0.37094736099243164, 0.3665560483932495, 0.35496985912323, 0.3642303943634033, 0.36307990550994873, 0.35224083065986633, 0.3372719883918762, 0.34283357858657837, 0.3331388831138611, 0.33102306723594666, 0.33477702736854553, 0.33679381012916565, 0.3339628577232361, 0.3256286382675171], "accuracy": [0.1286487877368927, 0.32505613565444946, 0.44010037183761597, 0.5548804402351379, 0.6383568644523621, 0.6693964004516602, 0.7008321285247803, 0.7078325152397156, 0.7083608508110046, 0.7302865982055664, 0.7382115721702576, 0.739928662776947, 0.7494386434555054, 0.7614582180976868, 0.7775723338127136, 0.7781006693840027, 0.7858935594558716, 0.7954035401344299, 0.7886672616004944, 0.7928939461708069, 0.8058380484580994, 0.8057059645652771, 0.8105930685997009, 0.8128384351730347, 0.8181217908859253, 0.8182538747787476, 0.8226125836372375, 0.8231409192085266, 0.8240655064582825, 0.8356888294219971, 0.835160493850708, 0.8342359066009521, 0.8310658931732178, 0.8437458872795105, 0.8486329317092896, 0.8479725122451782, 0.8555012345314026, 0.8531237840652466, 0.8564258217811584, 0.8618412613868713, 0.8602562546730042, 0.8652753829956055, 0.8622375130653381, 0.8602562546730042, 0.8615770936012268, 0.8671245574951172, 0.8688416481018066, 0.869502067565918, 0.8734645247459412, 0.8713511824607849, 0.876370370388031, 0.8689737319946289, 0.869502067565918], "val_loss": [2.246387004852295, 2.0224132537841797, 1.1448181867599487, 0.8717635869979858, 0.7576212286949158, 0.7167336344718933, 0.6790168285369873, 0.667962908744812, 0.6402407288551331, 0.6182591319084167, 0.5868211388587952, 0.5656712055206299, 0.5479345917701721, 0.5382092595100403, 0.5264034271240234, 0.5064243078231812, 0.4962104856967926, 0.5020182132720947, 0.4940430223941803, 0.48258623480796814, 0.484995037317276, 0.4739327132701874, 0.47025367617607117, 0.47971874475479126, 0.473432332277298, 0.4607504904270172, 0.45414039492607117, 0.46528059244155884, 0.45576220750808716, 0.45736393332481384, 0.45236271619796753, 0.43352895975112915, 0.42691338062286377, 0.4405880272388458, 0.4380819797515869, 0.43369799852371216, 0.43875324726104736, 0.43170735239982605, 0.43317943811416626, 0.43204012513160706, 0.4386807084083557, 0.45254260301589966, 0.43816885352134705, 0.42079833149909973, 0.4202767312526703, 0.42978140711784363, 0.42578378319740295, 0.4207412004470825, 0.44036275148391724, 0.4684079885482788, 0.4640001952648163, 0.4478425681591034, 0.45617610216140747], "val_accuracy": [0.41999998688697815, 0.48399999737739563, 0.6473333239555359, 0.6930000185966492, 0.7193333506584167, 0.7453333139419556, 0.7546666860580444, 0.7490000128746033, 0.7609999775886536, 0.7789999842643738, 0.7696666717529297, 0.7876666784286499, 0.793666660785675, 0.7963333129882812, 0.7956666946411133, 0.8046666383743286, 0.8119999766349792, 0.8136666417121887, 0.8203333616256714, 0.8203333616256714, 0.8146666884422302, 0.8226666450500488, 0.8316666483879089, 0.8259999752044678, 0.8256666660308838, 0.8370000123977661, 0.8393333554267883, 0.8266666531562805, 0.828000009059906, 0.8320000171661377, 0.8379999995231628, 0.843999981880188, 0.8453333377838135, 0.8489999771118164, 0.8489999771118164, 0.8516666889190674, 0.8453333377838135, 0.8519999980926514, 0.8533333539962769, 0.856333315372467, 0.8600000143051147, 0.8569999933242798, 0.8543333411216736, 0.8569999933242798, 0.8610000014305115, 0.8600000143051147, 0.8576666712760925, 0.8666666746139526, 0.8629999756813049, 0.8659999966621399, 0.859333336353302, 0.8619999885559082, 0.8606666922569275]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 17, 11, 6, 1, 2, 1, 1, 0], "tree_depth": 21}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 8], [0], [0], [1], [0], [2], [0]], "fitness": -0.8185714483261108, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5372483730316162, 0.8669832944869995, 0.7140856385231018, 0.6493900418281555, 0.6099642515182495, 0.5823360085487366, 0.5664282441139221, 0.5498297214508057, 0.5454450845718384, 0.5266265869140625, 0.5630319714546204, 0.5234013199806213, 0.5024245381355286, 0.5370751023292542, 0.5177119374275208], "accuracy": [0.47232863306999207, 0.7059833407402039, 0.7467969655990601, 0.7494386434555054, 0.767401933670044, 0.7808743715286255, 0.7890635132789612, 0.7989697456359863, 0.800290584564209, 0.8094043135643005, 0.8067626357078552, 0.8078193068504333, 0.819442629814148, 0.81548011302948, 0.8211596608161926], "val_loss": [0.9208686351776123, 0.6642656326293945, 0.6216168403625488, 0.5598372220993042, 0.5282911062240601, 0.5182503461837769, 0.5344802141189575, 0.5124821662902832, 0.5019999146461487, 0.5667769312858582, 0.5734729766845703, 0.5250155925750732, 0.5598639249801636, 0.566999614238739, 0.5588860511779785], "val_accuracy": [0.6973333358764648, 0.7646666765213013, 0.781000018119812, 0.79666668176651, 0.8023333549499512, 0.8029999732971191, 0.812333345413208, 0.8230000138282776, 0.8240000009536743, 0.8343333601951599, 0.8246666789054871, 0.8146666884422302, 0.8339999914169312, 0.8183333277702332, 0.8316666483879089]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 5, 4, 5, 3, 4], [0, 3, 2, 1], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 3, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 1, 0, 1, 1, 10, 6, 4, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), grad)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.pow(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(sigma, tf.math.pow(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [35, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 5, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 2, 1, 4, 1, 4, 2, 8, 3, 0], [0, 3, 0, 4, 0, 0, 3, 1, 2, 0, 6, 6], [16, 47, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 6, 4, 2, 1, 2, 1, 1, 0, 25, 13, 12, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.multiply(sigma, alpha))), beta), tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), grad), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [2, 1, 3, 2, 3, 2, 4, 2, 3, 6, 8, 6, 8, 3, 3, 7, 2, 6, 0], [0, 0, 1, 0, 2, 0, 0, 1, 3, 1, 3, 3, 2, 1, 1, 0, 2], [83, 30, 27, 13, 89, 31], [0, 1], [0], [0], [0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 2, 4, 8, 6, 7, 0, 8, 3, 1, 4, 2, 6, 9], [0, 5, 4, 2, 6, 4, 3, 4, 4, 6, 3], [0, 32], [0, 0, 1], [0, 8], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 36, 19, 17, 6, 2, 1, 1, 1, 23, 14, 9, 2, 3, 2, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(grad, tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(grad, grad)), tf.math.divide_no_nan(alpha, alpha))), tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(grad, grad), tf.math.negative(beta))), tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.math.pow(tf.math.add(grad, tf.math.divide_no_nan(grad, sigma)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [23, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [1, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 4, 6, 8, 1, 4, 1, 4, 2, 8, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 9, 5, 4, 2, 2, 1, 1, 1, 21, 12, 9, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}]