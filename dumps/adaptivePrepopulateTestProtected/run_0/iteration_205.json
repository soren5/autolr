[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8554285764694214, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293389081954956, 2.190077066421509, 1.7676280736923218, 1.3532984256744385, 1.0778645277023315, 0.9042539596557617, 0.8449417352676392, 0.8076485395431519, 0.7787533402442932, 0.7457874417304993, 0.7210672497749329, 0.6786737442016602, 0.6578590273857117, 0.6305369138717651, 0.6111933588981628, 0.6018425226211548, 0.5831708908081055, 0.5769901275634766, 0.5589550137519836, 0.5584314465522766, 0.5423819422721863, 0.5186780691146851, 0.5066593289375305, 0.4890420138835907, 0.49074286222457886, 0.4783065617084503, 0.46581169962882996, 0.4528549015522003, 0.44855135679244995, 0.4373089671134949, 0.42923372983932495, 0.42400646209716797, 0.42721831798553467, 0.4232005178928375, 0.4128613770008087, 0.40056541562080383, 0.39096760749816895, 0.3872838020324707, 0.37265342473983765, 0.3632901906967163, 0.3679070770740509, 0.36314907670021057, 0.3513728678226471, 0.34402745962142944, 0.3454456627368927], "accuracy": [0.12508255243301392, 0.32584863901138306, 0.4345529079437256, 0.5395588278770447, 0.6289790272712708, 0.6659622192382812, 0.6856426000595093, 0.6991150379180908, 0.6975300312042236, 0.7080966830253601, 0.720380425453186, 0.7397965788841248, 0.7500990629196167, 0.7499669790267944, 0.7650244235992432, 0.7647602558135986, 0.7740060687065125, 0.7733456492424011, 0.7728173136711121, 0.7803460359573364, 0.7853652238845825, 0.7959318161010742, 0.7988376617431641, 0.8084797263145447, 0.8101968169212341, 0.8189142942428589, 0.8195747137069702, 0.8210275769233704, 0.8273676037788391, 0.8314621448516846, 0.8343679904937744, 0.8387266993522644, 0.8411042094230652, 0.8329150676727295, 0.8367455005645752, 0.846387505531311, 0.8512746095657349, 0.8492933511734009, 0.854708731174469, 0.8607845902442932, 0.8610487580299377, 0.856689989566803, 0.858671247959137, 0.8656716346740723, 0.8652753829956055], "val_loss": [2.2466671466827393, 2.019866943359375, 1.1503634452819824, 0.8724813461303711, 0.7549449801445007, 0.7049837112426758, 0.6629301905632019, 0.6261088848114014, 0.6165662407875061, 0.5870122313499451, 0.5659007430076599, 0.5392864346504211, 0.5237024426460266, 0.5219383239746094, 0.5067248344421387, 0.5059720277786255, 0.49574756622314453, 0.4852513074874878, 0.49198856949806213, 0.4880318343639374, 0.48122429847717285, 0.47571778297424316, 0.46856334805488586, 0.4640353322029114, 0.4580029845237732, 0.4513632357120514, 0.4447285830974579, 0.44405946135520935, 0.45011597871780396, 0.4422702491283417, 0.4359530508518219, 0.43627798557281494, 0.43255215883255005, 0.4274616241455078, 0.430338591337204, 0.42686954140663147, 0.4186801612377167, 0.41400936245918274, 0.4173605442047119, 0.40568482875823975, 0.40000593662261963, 0.40194544196128845, 0.41794711351394653, 0.41380736231803894, 0.39810502529144287], "val_accuracy": [0.4313333332538605, 0.4323333203792572, 0.6346666812896729, 0.6893333196640015, 0.7243333458900452, 0.734333336353302, 0.7426666617393494, 0.7526666522026062, 0.7673333287239075, 0.7693333625793457, 0.7680000066757202, 0.7793333530426025, 0.7983333468437195, 0.7836666703224182, 0.8006666898727417, 0.7940000295639038, 0.8009999990463257, 0.8026666641235352, 0.7979999780654907, 0.8016666769981384, 0.8026666641235352, 0.8083333373069763, 0.8186666369438171, 0.8196666836738586, 0.8253333568572998, 0.8296666741371155, 0.8333333134651184, 0.8303333520889282, 0.8336666822433472, 0.8373333215713501, 0.8413333296775818, 0.8429999947547913, 0.8423333168029785, 0.840666651725769, 0.8426666855812073, 0.8493333458900452, 0.8496666550636292, 0.8516666889190674, 0.8543333411216736, 0.859000027179718, 0.8579999804496765, 0.8566666841506958, 0.856333315372467, 0.8513333201408386, 0.8493333458900452]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.852571427822113, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224256992340088, 1.868786334991455, 1.3933706283569336, 1.0953254699707031, 0.9316335916519165, 0.8355776071548462, 0.7707633376121521, 0.7238108515739441, 0.6842966079711914, 0.6524834036827087, 0.6308048963546753, 0.6065933108329773, 0.5906268954277039, 0.5745260715484619, 0.5578171610832214, 0.5346728563308716, 0.5228556394577026, 0.5074161291122437, 0.49632349610328674, 0.4842095673084259, 0.47685182094573975, 0.4698295593261719, 0.46163445711135864, 0.4583708941936493, 0.4441835582256317, 0.4344630539417267, 0.430498868227005, 0.4235324263572693, 0.40803346037864685, 0.40165916085243225, 0.39773377776145935, 0.3907049298286438, 0.38968539237976074, 0.38709017634391785, 0.3786422312259674, 0.36707425117492676, 0.3747362196445465, 0.36135223507881165, 0.3553507328033447, 0.3508414030075073, 0.3418912887573242, 0.3385045528411865, 0.3318740129470825], "accuracy": [0.2794875204563141, 0.4835556745529175, 0.5634658336639404, 0.6194690465927124, 0.6716417670249939, 0.7014925479888916, 0.7210407853126526, 0.7383436560630798, 0.7465327978134155, 0.7605336308479309, 0.7708360552787781, 0.7753269076347351, 0.789459764957428, 0.7971205711364746, 0.7948752045631409, 0.8092722296714783, 0.8096684813499451, 0.8178576231002808, 0.8201030492782593, 0.8236692547798157, 0.830669641494751, 0.8317263126373291, 0.8379341959953308, 0.8403117060661316, 0.8403117060661316, 0.8426892161369324, 0.8469158411026001, 0.8450667262077332, 0.8581429123878479, 0.8551049828529358, 0.8621054291725159, 0.86118084192276, 0.8658037185668945, 0.8603883385658264, 0.8640866279602051, 0.8683133125305176, 0.8642187118530273, 0.8732003569602966, 0.8706908226013184, 0.8757099509239197, 0.8772949576377869, 0.8799365758895874, 0.880729079246521], "val_loss": [2.045058250427246, 1.521031379699707, 1.0463844537734985, 0.8461695909500122, 0.7515401840209961, 0.7007125616073608, 0.6589404940605164, 0.6253604888916016, 0.5960586071014404, 0.5759732127189636, 0.5603383183479309, 0.5427144169807434, 0.5340076088905334, 0.5148576498031616, 0.5095866918563843, 0.500062108039856, 0.4843694269657135, 0.47641927003860474, 0.46765169501304626, 0.4640207588672638, 0.46040570735931396, 0.45023128390312195, 0.45384106040000916, 0.4395388960838318, 0.4340882897377014, 0.42585888504981995, 0.42217719554901123, 0.42574459314346313, 0.41577714681625366, 0.41669929027557373, 0.4058973789215088, 0.407134473323822, 0.4022456109523773, 0.4019034802913666, 0.3942694067955017, 0.3930942416191101, 0.39333975315093994, 0.3895227015018463, 0.3882262408733368, 0.38301241397857666, 0.3815024495124817, 0.3778035342693329, 0.38033097982406616], "val_accuracy": [0.5263333320617676, 0.6476666927337646, 0.6790000200271606, 0.6996666789054871, 0.7276666760444641, 0.7459999918937683, 0.750333309173584, 0.7609999775886536, 0.7833333611488342, 0.7926666736602783, 0.7916666865348816, 0.7993333339691162, 0.8023333549499512, 0.8083333373069763, 0.8159999847412109, 0.8183333277702332, 0.8263333439826965, 0.8293333053588867, 0.8360000252723694, 0.8320000171661377, 0.8363333344459534, 0.8403333425521851, 0.8379999995231628, 0.843666672706604, 0.8453333377838135, 0.846666693687439, 0.8496666550636292, 0.8463333249092102, 0.8519999980926514, 0.8536666631698608, 0.8556666374206543, 0.8573333621025085, 0.8560000061988831, 0.859666645526886, 0.8619999885559082, 0.8629999756813049, 0.8600000143051147, 0.8640000224113464, 0.8569999933242798, 0.8616666793823242, 0.8613333106040955, 0.8633333444595337, 0.8629999756813049]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 0, 1, 1], [0, 6, 2], [0, 7, 7], [0], [1], [0], [2], [0]], "fitness": -0.8382856845855713, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5948257446289062, 0.8866299390792847, 0.7363249659538269, 0.6509311199188232, 0.6173561215400696, 0.5935935378074646, 0.5362754464149475, 0.5129208564758301, 0.5200532674789429, 0.4977460503578186, 0.5040762424468994, 0.5615428686141968, 0.5550528764724731, 0.5413094162940979, 0.5628013014793396, 0.5813676118850708, 0.6191932559013367, 0.6679614186286926, 0.6279342174530029, 0.6514875888824463, 0.6023732423782349], "accuracy": [0.4745740294456482, 0.69673752784729, 0.7430986762046814, 0.7524765729904175, 0.7712323069572449, 0.7814027070999146, 0.806630551815033, 0.8138951063156128, 0.8120459914207458, 0.8178576231002808, 0.8203672170639038, 0.8206313848495483, 0.8076872229576111, 0.8062343001365662, 0.813498854637146, 0.8136309385299683, 0.8062343001365662, 0.780610203742981, 0.7952714562416077, 0.8084797263145447, 0.8018755912780762], "val_loss": [1.118905782699585, 0.6633735299110413, 0.5784938931465149, 0.5584701299667358, 0.5384653806686401, 0.5263943672180176, 0.5212591886520386, 0.5116397738456726, 0.4955282509326935, 0.5257847309112549, 0.5379797220230103, 0.5620213150978088, 0.5603551864624023, 0.5810456871986389, 0.5766317248344421, 0.6388501524925232, 0.5865414142608643, 0.6016292572021484, 0.6873354315757751, 0.7103744149208069, 0.6699963808059692], "val_accuracy": [0.5976666808128357, 0.7636666893959045, 0.7866666913032532, 0.7856666445732117, 0.7873333096504211, 0.8080000281333923, 0.8103333115577698, 0.8176666498184204, 0.8140000104904175, 0.8230000138282776, 0.8233333230018616, 0.8109999895095825, 0.8159999847412109, 0.828000009059906, 0.8073333501815796, 0.8323333263397217, 0.8136666417121887, 0.8109999895095825, 0.8080000281333923, 0.8046666383743286, 0.8063333630561829]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 34], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 9], [0, 2, 0, 3], [16, 16, 10], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 6, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 2, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 7, 3, 3, 2, 1, 1, 0, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(beta, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5, 0], [0, 2, 3, 3], [16, 29], [0, 1], [0], [0], [46], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 11, 7, 4, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.negative(grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3035006523132324, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3], [0, 0, 1, 0, 2], [39, 39, 35], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 7, 7, 5, 6, 0, 4, 7], [0, 2, 0, 3, 0, 2, 4, 5, 0], [0, 50, 73, 22], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 4, 0, 6, 1, 2, 7, 3, 7, 0], [0, 6, 4, 7, 7, 1, 3, 5], [0, 84], [0, 1, 1], [8, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 21, 12, 9, 4, 18, 10, 8, 1, 2, 1, 1, 0], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), grad)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.negative(beta), tf.math.pow(tf.math.add(grad, grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, grad))), tf.math.add(grad, tf.math.add(tf.math.multiply(tf.math.add(grad, tf.math.negative(alpha)), sigma), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [2.303356647491455, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 1, 0, 1], [0, 1, 0, 2], [39, 97], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [1, 3, 0, 3], [16, 16], [0, 0, 1, 1], [0, 2], [0, 1], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 9, 4, 2, 2], [0, 0, 0, 3, 0, 4, 3, 1, 4, 0], [31, 99, 96, 99, 61, 21]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 9, 5, 4, 1, 4, 2, 2, 1, 14, 8, 6, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(grad, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}]