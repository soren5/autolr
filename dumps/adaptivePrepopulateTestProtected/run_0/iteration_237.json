[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 0], [0], [0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 4, 5, 2, 9, 5, 1, 4, 2], [0, 2, 1, 6, 2], [0, 83], [0, 1], [0], [1], [0]], "fitness": -0.8634285926818848, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(beta, tf.math.pow(tf.math.add(alpha, grad), beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2928152084350586, 2.190105438232422, 1.7723628282546997, 1.3450217247009277, 1.0763914585113525, 0.910732090473175, 0.8402560353279114, 0.8299058079719543, 0.7932822108268738, 0.7446120381355286, 0.7108029723167419, 0.6840411424636841, 0.6511228680610657, 0.6336556673049927, 0.6187412142753601, 0.6039483547210693, 0.5853869318962097, 0.5569227933883667, 0.5643388628959656, 0.5594581961631775, 0.5446719527244568, 0.5252052545547485, 0.5401065349578857, 0.5122538805007935, 0.5057167410850525, 0.49988430738449097, 0.4779367446899414, 0.48685574531555176, 0.46994447708129883, 0.4669269919395447, 0.46051809191703796, 0.44558030366897583, 0.44327276945114136, 0.4314035475254059, 0.42755016684532166, 0.42065873742103577, 0.40984198451042175, 0.4022606313228607, 0.40771734714508057, 0.3884100914001465, 0.39269953966140747, 0.38278719782829285, 0.37934383749961853, 0.3690037131309509, 0.3629816770553589, 0.35637253522872925], "accuracy": [0.13076211512088776, 0.3335094451904297, 0.4371945559978485, 0.5416721701622009, 0.633469820022583, 0.6667547225952148, 0.6922467350959778, 0.6966054439544678, 0.6950204968452454, 0.7099458575248718, 0.7301545143127441, 0.7357020378112793, 0.7556465268135071, 0.7598732113838196, 0.7648923397064209, 0.7754589915275574, 0.7802139520645142, 0.7878747582435608, 0.7854973077774048, 0.7901201844215393, 0.7915731072425842, 0.8006868362426758, 0.7915731072425842, 0.8034605979919434, 0.8074230551719666, 0.8096684813499451, 0.8100647330284119, 0.8112534880638123, 0.8183859586715698, 0.8214238286018372, 0.8228767514228821, 0.8327829837799072, 0.8298771381378174, 0.8318583965301514, 0.8348963260650635, 0.841500461101532, 0.8454629778862, 0.8450667262077332, 0.846387505531311, 0.8515387773513794, 0.8485008478164673, 0.8469158411026001, 0.8540483713150024, 0.857218325138092, 0.8626337051391602, 0.8599920868873596], "val_loss": [2.246163845062256, 2.015407085418701, 1.142378807067871, 0.9220680594444275, 0.7745255827903748, 0.6969823241233826, 0.6940670609474182, 0.6850380897521973, 0.6632431745529175, 0.6161630153656006, 0.5930213928222656, 0.5796310901641846, 0.571770191192627, 0.5556918382644653, 0.5505280494689941, 0.5354030132293701, 0.5195499062538147, 0.5083622336387634, 0.5065628290176392, 0.49872806668281555, 0.4934460520744324, 0.5093412399291992, 0.4908144176006317, 0.49124854803085327, 0.49377408623695374, 0.4851874113082886, 0.48754796385765076, 0.46892204880714417, 0.4709365665912628, 0.4715816378593445, 0.4696686267852783, 0.4758109152317047, 0.4694618880748749, 0.45592764019966125, 0.4542562663555145, 0.4517195522785187, 0.44165024161338806, 0.44441211223602295, 0.43560612201690674, 0.44184935092926025, 0.436332106590271, 0.44004374742507935, 0.4529484808444977, 0.4331650733947754, 0.43573886156082153, 0.4357762336730957], "val_accuracy": [0.4103333353996277, 0.47966668009757996, 0.6330000162124634, 0.6713333129882812, 0.7236666679382324, 0.7306666374206543, 0.7333333492279053, 0.7336666584014893, 0.7416666746139526, 0.7609999775886536, 0.7553333044052124, 0.7743333578109741, 0.7763333320617676, 0.7873333096504211, 0.7876666784286499, 0.7896666526794434, 0.79666668176651, 0.8029999732971191, 0.8059999942779541, 0.8106666803359985, 0.8153333067893982, 0.812333345413208, 0.8166666626930237, 0.8173333406448364, 0.8183333277702332, 0.8203333616256714, 0.8270000219345093, 0.831333339214325, 0.8206666707992554, 0.824999988079071, 0.8346666693687439, 0.8339999914169312, 0.8399999737739563, 0.8396666646003723, 0.8360000252723694, 0.8473333120346069, 0.843666672706604, 0.8483333587646484, 0.8500000238418579, 0.8536666631698608, 0.8556666374206543, 0.8539999723434448, 0.8510000109672546, 0.8513333201408386, 0.8486666679382324, 0.8476666808128357]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 14, 9, 5, 2, 2, 1, 1, 0], "tree_depth": 19}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8562856912612915, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2254457473754883, 1.8710986375808716, 1.4077143669128418, 1.1049890518188477, 0.9480537176132202, 0.8495208024978638, 0.7943375706672668, 0.7451927661895752, 0.7058318257331848, 0.6787599325180054, 0.6552925109863281, 0.6265846490859985, 0.5962990522384644, 0.5813299417495728, 0.5576210618019104, 0.551796555519104, 0.5337836146354675, 0.5214377641677856, 0.5089625120162964, 0.5000594854354858, 0.48965370655059814, 0.47718191146850586, 0.4761577844619751, 0.4583917558193207, 0.45178747177124023, 0.4446631669998169, 0.4269534945487976, 0.4347147047519684, 0.41836926341056824, 0.4103820025920868, 0.41287878155708313, 0.3978050947189331, 0.39634940028190613, 0.39132630825042725, 0.38777536153793335, 0.3806811273097992, 0.3730091154575348, 0.3671618402004242, 0.35932955145835876, 0.3525685966014862, 0.34819385409355164, 0.34407564997673035, 0.33897578716278076, 0.33864590525627136, 0.33319494128227234, 0.3225710093975067, 0.3201889991760254, 0.31817638874053955, 0.31226590275764465, 0.3048185408115387, 0.2996896207332611, 0.29757094383239746, 0.29472923278808594, 0.2857167422771454, 0.2912959158420563, 0.2918982207775116, 0.2822108268737793, 0.2742338478565216, 0.2743960916996002, 0.27355438470840454, 0.26413780450820923, 0.26112863421440125, 0.25629571080207825, 0.2563103437423706, 0.25226157903671265, 0.2506783604621887, 0.24270348250865936], "accuracy": [0.27063795924186707, 0.48725399374961853, 0.5518425703048706, 0.6192048788070679, 0.6649055480957031, 0.6936996579170227, 0.7086250185966492, 0.7309470176696777, 0.7372870445251465, 0.7523444890975952, 0.7619865536689758, 0.7667415142059326, 0.7843085527420044, 0.7843085527420044, 0.7984414100646973, 0.800818920135498, 0.8088759779930115, 0.8107251524925232, 0.8166688680648804, 0.8240655064582825, 0.8219521641731262, 0.8355567455291748, 0.8323867321014404, 0.837537944316864, 0.8389908671379089, 0.8372738361358643, 0.8450667262077332, 0.8466516733169556, 0.8518029451370239, 0.8549728989601135, 0.8557654023170471, 0.8607845902442932, 0.8597279191017151, 0.8638224601745605, 0.8618412613868713, 0.8669924736022949, 0.8668603897094727, 0.8732003569602966, 0.8726720213890076, 0.8741249442100525, 0.8821820020675659, 0.8778232932090759, 0.878351628780365, 0.8796724081039429, 0.8809932470321655, 0.884691596031189, 0.887201189994812, 0.8883898854255676, 0.8881257176399231, 0.8945978283882141, 0.8956544995307922, 0.893541157245636, 0.8944657444953918, 0.898428201675415, 0.8982961177825928, 0.8990886211395264, 0.9002773761749268, 0.900409460067749, 0.9054285883903503, 0.9026548862457275, 0.9068815112113953, 0.9070135951042175, 0.9072777628898621, 0.9080702662467957, 0.9072777628898621, 0.9101836085319519, 0.9126931428909302], "val_loss": [2.041017532348633, 1.5084712505340576, 1.0235487222671509, 0.8178601264953613, 0.7273399829864502, 0.6758585572242737, 0.6335690021514893, 0.5938168168067932, 0.572192370891571, 0.5550680160522461, 0.528928816318512, 0.5101994276046753, 0.4940452575683594, 0.48927173018455505, 0.4705054461956024, 0.4634169936180115, 0.4531784653663635, 0.444731205701828, 0.43342188000679016, 0.4269295930862427, 0.42365190386772156, 0.41570231318473816, 0.41200754046440125, 0.40558451414108276, 0.3981742262840271, 0.40006551146507263, 0.3898284435272217, 0.39525580406188965, 0.3894173204898834, 0.37817034125328064, 0.37591004371643066, 0.3759782314300537, 0.37175947427749634, 0.3735816776752472, 0.3703901469707489, 0.3654324412345886, 0.3661273717880249, 0.36272290349006653, 0.3597719669342041, 0.3584630489349365, 0.35790371894836426, 0.35459235310554504, 0.357295423746109, 0.3486330509185791, 0.34441885352134705, 0.3505892753601074, 0.34406375885009766, 0.34116610884666443, 0.3423071801662445, 0.3407737612724304, 0.34287476539611816, 0.33923959732055664, 0.33784711360931396, 0.33878397941589355, 0.3393423557281494, 0.332358181476593, 0.33448371291160583, 0.33136868476867676, 0.3325307071208954, 0.3278399705886841, 0.3310987055301666, 0.3265973925590515, 0.32602789998054504, 0.3314225673675537, 0.33656594157218933, 0.32880932092666626, 0.3242819905281067], "val_accuracy": [0.5590000152587891, 0.6729999780654907, 0.7043333053588867, 0.7246666550636292, 0.7443333268165588, 0.7673333287239075, 0.7736666798591614, 0.7896666526794434, 0.7979999780654907, 0.8009999990463257, 0.812333345413208, 0.8193333148956299, 0.8270000219345093, 0.8273333311080933, 0.831333339214325, 0.8360000252723694, 0.8376666903495789, 0.8386666774749756, 0.8446666598320007, 0.8446666598320007, 0.8473333120346069, 0.8513333201408386, 0.8543333411216736, 0.8539999723434448, 0.8586666584014893, 0.8573333621025085, 0.862666666507721, 0.8600000143051147, 0.8613333106040955, 0.8640000224113464, 0.8643333315849304, 0.8646666407585144, 0.8679999709129333, 0.8646666407585144, 0.8683333396911621, 0.8703333139419556, 0.8686666488647461, 0.8683333396911621, 0.8679999709129333, 0.8723333477973938, 0.871666669845581, 0.8713333606719971, 0.8686666488647461, 0.8723333477973938, 0.8740000128746033, 0.8740000128746033, 0.874666690826416, 0.8730000257492065, 0.8759999871253967, 0.8733333349227905, 0.8773333430290222, 0.8766666650772095, 0.8763333559036255, 0.8766666650772095, 0.8790000081062317, 0.8799999952316284, 0.8809999823570251, 0.8790000081062317, 0.8830000162124634, 0.8843333125114441, 0.8816666603088379, 0.8856666684150696, 0.8816666603088379, 0.8799999952316284, 0.8826666474342346, 0.8830000162124634, 0.8813333511352539]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 4, 4, 6, 7, 4, 4, 4, 7, 6, 1, 8, 1, 9, 0, 4, 9, 4, 0, 0, 8, 5, 2, 2, 3, 0, 3, 5, 9, 1, 6, 1, 7], [0, 6, 4, 6, 6, 3, 0, 3, 4, 6, 3, 4, 6, 7, 5, 5, 7, 5, 0], [0, 0, 60, 69, 46, 64], [1], [0], [2], [0]], "fitness": -0.8345714211463928, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.pow(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.pow(tf.math.pow(tf.math.add(grad, tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.square(tf.math.add(tf.math.add(grad, grad), sigma))))), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))))), sigma))), grad), tf.math.multiply(grad, sigma)), tf.math.negative(grad)), tf.math.multiply(tf.math.square(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), grad))), grad), tf.math.subtract(grad, tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.add(grad, grad), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4989553689956665, 0.7960864305496216, 0.6865000128746033, 0.5966095924377441, 0.5615280866622925, 0.5051871538162231, 0.511553168296814, 0.5071364641189575, 0.4726378321647644, 0.4845871329307556, 0.48419755697250366, 0.48684075474739075, 0.4733298122882843, 0.4829968810081482, 0.46458402276039124, 0.486627995967865, 0.5197544693946838, 0.4979346692562103, 0.5395139455795288], "accuracy": [0.47985735535621643, 0.7235503792762756, 0.7541936039924622, 0.7802139520645142, 0.7981772422790527, 0.8067626357078552, 0.817989706993103, 0.8244617581367493, 0.8252542614936829, 0.8253863453865051, 0.8277638554573059, 0.835160493850708, 0.8284242749214172, 0.8411042094230652, 0.8329150676727295, 0.8370096683502197, 0.8267071843147278, 0.8255184292793274, 0.8244617581367493], "val_loss": [0.7816358804702759, 0.6927926540374756, 0.5578169822692871, 0.5117241144180298, 0.494462251663208, 0.4782636761665344, 0.46545085310935974, 0.4963516891002655, 0.4891771972179413, 0.5081244707107544, 0.5939924120903015, 0.5234858393669128, 0.5313223600387573, 0.5096983313560486, 0.533955454826355, 0.5509427785873413, 0.5719056725502014, 0.5764625668525696, 0.5863665342330933], "val_accuracy": [0.7193333506584167, 0.7490000128746033, 0.7886666655540466, 0.8173333406448364, 0.8169999718666077, 0.828000009059906, 0.8373333215713501, 0.8306666612625122, 0.8360000252723694, 0.8363333344459534, 0.8346666693687439, 0.843999981880188, 0.840666651725769, 0.8460000157356262, 0.8393333554267883, 0.8360000252723694, 0.8346666693687439, 0.8349999785423279, 0.8353333473205566]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 52, 33, 19, 6, 1, 0, 1, 0], "tree_depth": 47}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 1], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 3, 2, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 11, 10, 78, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 0, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.3113956451416016, 2.3159260749816895, 2.3264005184173584, 2.337674379348755, 2.373300552368164, 2.406702995300293], "accuracy": [0.0940430611371994, 0.09060890227556229, 0.09496764093637466, 0.09972262382507324, 0.10566636174917221, 0.09959053993225098], "val_loss": [2.309328317642212, 2.3111159801483154, 2.3166890144348145, 2.326756238937378, 2.340350866317749, 2.3567163944244385], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 3, 0, 3, 8, 3, 1, 4, 6, 8, 3, 4, 2, 1], [0, 1, 0, 2, 3, 2, 1, 3, 2, 3, 0, 1, 3], [45, 39, 50], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 4, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 1], [3], [0, 3], [40], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 5, 6, 8, 1, 4, 1, 4, 2, 1], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 36, 53, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 28, 15, 13, 3, 1, 0, 1, 1, 3, 1, 2, 1, 17, 9, 8, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(tf.math.multiply(grad, tf.math.subtract(tf.math.pow(tf.math.divide_no_nan(grad, tf.math.sqrt(alpha)), tf.math.multiply(grad, tf.math.pow(tf.math.add(grad, tf.math.subtract(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), alpha))), grad)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), sigma)))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 3, 3, 8, 5, 1], [1, 1, 0, 2, 0, 3], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 8, 5], [0, 2, 0, 3], [16, 16], [0, 1], [5], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 6, 1, 4, 2, 8], [0, 4, 2, 3, 0, 0, 3, 1, 2, 0], [74, 99, 82, 99, 61, 89]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 2, 8, 5, 3, 2, 2, 1, 1, 1, 16, 8, 8, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(alpha, alpha), tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(beta), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0], [2, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], [6, 4, 3, 6, 8, 2, 4, 1, 4, 2, 8, 4, 0, 8, 1, 2, 4, 8, 5, 2, 2, 8, 5], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0, 6, 0, 2, 0, 2, 1], [16, 99, 96, 99, 61, 1, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 9, 5, 4, 2, 2, 1, 1, 1, 39, 23, 16, 7], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(grad, tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma)))), tf.math.sqrt(tf.math.pow(alpha, beta)))), tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.pow(tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), beta)))), tf.math.add(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.square(alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]