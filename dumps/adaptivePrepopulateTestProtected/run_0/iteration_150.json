[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8788571357727051, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223778247833252, 1.869816780090332, 1.3854763507843018, 1.0877859592437744, 0.9313703775405884, 0.8305619955062866, 0.7596983313560486, 0.7178841233253479, 0.678885817527771, 0.6427952647209167, 0.6314711570739746, 0.6065253019332886, 0.5803450345993042, 0.5689871311187744, 0.5544987320899963, 0.5336046814918518, 0.5189152956008911, 0.5142802596092224, 0.4972553849220276, 0.48589378595352173, 0.4789123237133026, 0.47044631838798523, 0.45680922269821167, 0.4485171139240265, 0.45258986949920654, 0.44318363070487976, 0.4277282655239105, 0.42588117718696594, 0.4205707907676697, 0.4097837805747986, 0.4017646610736847, 0.3997235894203186, 0.39143604040145874, 0.3813983201980591, 0.3799765408039093, 0.3789656162261963, 0.36794283986091614, 0.3624574840068817, 0.35929128527641296, 0.35348811745643616, 0.3508596420288086, 0.34113216400146484, 0.3462033271789551, 0.33102670311927795, 0.330086886882782, 0.32165828347206116, 0.3163209855556488, 0.31816115975379944, 0.30683767795562744, 0.30308493971824646, 0.3014288544654846, 0.2991333305835724, 0.3007844388484955, 0.29286450147628784, 0.28524908423423767, 0.28070855140686035, 0.2784059941768646, 0.26981455087661743, 0.2657836079597473, 0.26673373579978943, 0.2612868845462799, 0.2518042027950287, 0.25471100211143494, 0.24872227013111115, 0.2470250278711319, 0.2423699051141739, 0.2363964468240738, 0.2331322431564331, 0.2366485893726349, 0.22393356263637543, 0.22837325930595398, 0.218330517411232, 0.21717983484268188, 0.21057762205600739, 0.20735885202884674, 0.2054237574338913, 0.20540645718574524, 0.19891852140426636, 0.19594213366508484, 0.20225878059864044, 0.1904907077550888, 0.18262125551700592, 0.18921315670013428, 0.18402932584285736, 0.18388424813747406, 0.18099281191825867, 0.17825645208358765, 0.1715107411146164], "accuracy": [0.2751287817955017, 0.47906485199928284, 0.5712587237358093, 0.6231673359870911, 0.6653017997741699, 0.7033417224884033, 0.7341170310974121, 0.7374191284179688, 0.7518161535263062, 0.7711002230644226, 0.7761194109916687, 0.783119797706604, 0.7940827012062073, 0.7932901978492737, 0.8016114234924316, 0.8078193068504333, 0.8191784620285034, 0.8201030492782593, 0.8281601071357727, 0.8253863453865051, 0.8310658931732178, 0.8338396549224854, 0.8387266993522644, 0.8429533839225769, 0.8429533839225769, 0.8430854678153992, 0.8474441766738892, 0.8525954484939575, 0.8488970994949341, 0.8557654023170471, 0.8605204224586487, 0.8562937378883362, 0.8647470474243164, 0.8679170608520508, 0.8650112152099609, 0.867520809173584, 0.870030403137207, 0.8725399374961853, 0.8734645247459412, 0.8730682730674744, 0.8811253309249878, 0.8813894987106323, 0.8728041052818298, 0.8854840993881226, 0.8800686597824097, 0.885219931602478, 0.8873332738876343, 0.8868049383163452, 0.8886540532112122, 0.8912957310676575, 0.8923524022102356, 0.8920882344245911, 0.8905032277107239, 0.8961827754974365, 0.895918607711792, 0.8968431949615479, 0.8986923694610596, 0.9041078090667725, 0.9021265506744385, 0.902390718460083, 0.9058248400688171, 0.9096552729606628, 0.908730685710907, 0.9115044474601746, 0.9109761118888855, 0.9133535623550415, 0.9162594079971313, 0.9157310724258423, 0.9140139818191528, 0.9169198274612427, 0.9167877435684204, 0.9225993752479553, 0.9235239624977112, 0.9220710396766663, 0.9252410531044006, 0.9272223114967346, 0.9260335564613342, 0.9299960136413574, 0.9298639297485352, 0.9265618920326233, 0.9314489364624023, 0.9351472854614258, 0.930788516998291, 0.9344868659973145, 0.9322414398193359, 0.935279369354248, 0.9355435371398926, 0.9375247359275818], "val_loss": [2.043229818344116, 1.5252792835235596, 1.059319019317627, 0.8622859120368958, 0.7739511728286743, 0.712826669216156, 0.6653242111206055, 0.6353532075881958, 0.6145880818367004, 0.588234007358551, 0.5718778371810913, 0.5557640790939331, 0.5459425449371338, 0.525135338306427, 0.5168591141700745, 0.5053482055664062, 0.4997932016849518, 0.48488402366638184, 0.47919487953186035, 0.4703822433948517, 0.47141027450561523, 0.46116748452186584, 0.453118234872818, 0.44784554839134216, 0.44718751311302185, 0.43445050716400146, 0.4359551668167114, 0.42782077193260193, 0.42837169766426086, 0.4202001988887787, 0.41962215304374695, 0.41002556681632996, 0.40663206577301025, 0.40764692425727844, 0.40263956785202026, 0.3989400267601013, 0.3960455060005188, 0.39371103048324585, 0.3923947811126709, 0.3929206430912018, 0.3917257487773895, 0.3840952217578888, 0.3808329403400421, 0.3817606270313263, 0.37890157103538513, 0.37521520256996155, 0.3746592700481415, 0.3713971674442291, 0.3694106936454773, 0.36994099617004395, 0.36911842226982117, 0.3693079352378845, 0.36807316541671753, 0.3690676987171173, 0.36612769961357117, 0.36626964807510376, 0.36125749349594116, 0.3628350496292114, 0.36928442120552063, 0.3606704771518707, 0.35772624611854553, 0.3617168664932251, 0.3560544550418854, 0.3591160476207733, 0.35777518153190613, 0.35627302527427673, 0.3584086000919342, 0.3570273518562317, 0.3526735305786133, 0.35380101203918457, 0.3530525863170624, 0.35500773787498474, 0.35798314213752747, 0.3571338653564453, 0.35494470596313477, 0.35568180680274963, 0.3550068438053131, 0.35418087244033813, 0.3578505516052246, 0.3490322232246399, 0.35165348649024963, 0.3594669997692108, 0.3573257327079773, 0.35076624155044556, 0.35436558723449707, 0.35485583543777466, 0.35399290919303894, 0.3549942970275879], "val_accuracy": [0.5046666860580444, 0.6439999938011169, 0.6753333210945129, 0.6893333196640015, 0.7256666421890259, 0.7400000095367432, 0.7566666603088379, 0.7670000195503235, 0.7730000019073486, 0.7876666784286499, 0.7906666398048401, 0.7986666560173035, 0.8033333420753479, 0.8163333535194397, 0.8180000185966492, 0.8203333616256714, 0.8183333277702332, 0.82833331823349, 0.8303333520889282, 0.8323333263397217, 0.8263333439826965, 0.8370000123977661, 0.8410000205039978, 0.8399999737739563, 0.8399999737739563, 0.847000002861023, 0.843666672706604, 0.8476666808128357, 0.8493333458900452, 0.8533333539962769, 0.8493333458900452, 0.8579999804496765, 0.859000027179718, 0.8556666374206543, 0.8600000143051147, 0.862333357334137, 0.8613333106040955, 0.8606666922569275, 0.8610000014305115, 0.8673333525657654, 0.8650000095367432, 0.8603333234786987, 0.8673333525657654, 0.8690000176429749, 0.8700000047683716, 0.8703333139419556, 0.8726666569709778, 0.8713333606719971, 0.8700000047683716, 0.871666669845581, 0.874666690826416, 0.8733333349227905, 0.8733333349227905, 0.871666669845581, 0.8756666779518127, 0.874666690826416, 0.8759999871253967, 0.878000020980835, 0.8740000128746033, 0.8766666650772095, 0.8790000081062317, 0.8813333511352539, 0.8849999904632568, 0.8820000290870667, 0.8849999904632568, 0.8823333382606506, 0.8833333253860474, 0.8853333592414856, 0.8853333592414856, 0.8856666684150696, 0.8846666812896729, 0.8889999985694885, 0.8843333125114441, 0.8866666555404663, 0.887333333492279, 0.890999972820282, 0.8893333077430725, 0.8859999775886536, 0.8886666893959045, 0.8926666378974915, 0.890333354473114, 0.887333333492279, 0.8933333158493042, 0.8920000195503235, 0.8913333415985107, 0.890999972820282, 0.8916666507720947, 0.890666663646698]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8637142777442932, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2254488468170166, 1.883687138557434, 1.4207961559295654, 1.1122138500213623, 0.9428792595863342, 0.8484524488449097, 0.7851271629333496, 0.7388545274734497, 0.6974237561225891, 0.6663976311683655, 0.6428900361061096, 0.6145114302635193, 0.6030942797660828, 0.5919032096862793, 0.5606124997138977, 0.5471487045288086, 0.5318986773490906, 0.5217255353927612, 0.5199330449104309, 0.5028039813041687, 0.4899359941482544, 0.4848316013813019, 0.46955570578575134, 0.4624860882759094, 0.45295071601867676, 0.4483715295791626, 0.4497793912887573, 0.4362683594226837, 0.43202152848243713, 0.4145846664905548, 0.4101978540420532, 0.4043416976928711, 0.39807748794555664, 0.3912260830402374, 0.3910398781299591, 0.38112059235572815, 0.37492287158966064, 0.37604930996894836, 0.36697056889533997, 0.36600273847579956, 0.35497552156448364, 0.35081228613853455, 0.35346096754074097, 0.3397446572780609, 0.34288695454597473, 0.33210980892181396, 0.33100253343582153, 0.3348415195941925, 0.3197759985923767, 0.32109183073043823, 0.31296366453170776, 0.3069952726364136, 0.3073436915874481, 0.29322969913482666, 0.29482853412628174, 0.29214274883270264, 0.28224772214889526, 0.28361618518829346, 0.2792209982872009, 0.2771223187446594, 0.2793061435222626, 0.2629978656768799, 0.27803754806518555, 0.26679953932762146, 0.2549971044063568], "accuracy": [0.275260865688324, 0.483819842338562, 0.5608242154121399, 0.6136573553085327, 0.6625280380249023, 0.6944921612739563, 0.7243428826332092, 0.7300224304199219, 0.7506273984909058, 0.7586844563484192, 0.7734777331352234, 0.7786290049552917, 0.7814027070999146, 0.7852331399917603, 0.7987055778503418, 0.8033285140991211, 0.8064984679222107, 0.811649739742279, 0.8104609847068787, 0.8210275769233704, 0.8181217908859253, 0.8228767514228821, 0.8327829837799072, 0.832650899887085, 0.8380662798881531, 0.8366134166717529, 0.8421608805656433, 0.8455950617790222, 0.8466516733169556, 0.8535200357437134, 0.8540483713150024, 0.8561616539955139, 0.8590674996376038, 0.8569541573524475, 0.8582749962806702, 0.8638224601745605, 0.8691058158874512, 0.8643507957458496, 0.8697662353515625, 0.8687095642089844, 0.8733324408531189, 0.8739928603172302, 0.8746532797813416, 0.8796724081039429, 0.8755778670310974, 0.8817857503890991, 0.8816536664962769, 0.8771628737449646, 0.8865407705307007, 0.8836349248886108, 0.8848236799240112, 0.889050304889679, 0.8877294659614563, 0.8939374089241028, 0.889050304889679, 0.8938053250312805, 0.8949940800666809, 0.8961827754974365, 0.9000132083892822, 0.8975036144256592, 0.8992207050323486, 0.9052965044975281, 0.8992207050323486, 0.9058248400688171, 0.9038436412811279], "val_loss": [2.0455493927001953, 1.5309033393859863, 1.0470656156539917, 0.827492892742157, 0.7391700744628906, 0.6783829927444458, 0.6340118646621704, 0.6026612520217896, 0.574217677116394, 0.549151599407196, 0.5302870869636536, 0.5192075967788696, 0.5054469704627991, 0.49019962549209595, 0.47950196266174316, 0.46739789843559265, 0.4596809148788452, 0.4531788229942322, 0.44454699754714966, 0.44142642617225647, 0.42797932028770447, 0.4251572787761688, 0.41862690448760986, 0.41099047660827637, 0.40709659457206726, 0.40777719020843506, 0.40003374218940735, 0.3999672830104828, 0.3937515914440155, 0.38742509484291077, 0.38731715083122253, 0.38465261459350586, 0.37887418270111084, 0.37522852420806885, 0.3718162477016449, 0.37588921189308167, 0.36989328265190125, 0.3641549348831177, 0.36290469765663147, 0.36053892970085144, 0.3626132011413574, 0.3627556264400482, 0.35758182406425476, 0.3556588590145111, 0.35044679045677185, 0.35055941343307495, 0.3575202226638794, 0.3480267822742462, 0.3476731479167938, 0.3482511043548584, 0.3444654047489166, 0.3431166112422943, 0.34304019808769226, 0.34158945083618164, 0.3398577570915222, 0.3403758108615875, 0.3393736779689789, 0.34424763917922974, 0.33775243163108826, 0.3375178277492523, 0.3339211046695709, 0.3472023010253906, 0.3350597023963928, 0.33400630950927734, 0.33211177587509155], "val_accuracy": [0.54666668176651, 0.653333306312561, 0.6793333292007446, 0.7096666693687439, 0.7360000014305115, 0.7570000290870667, 0.7696666717529297, 0.7710000276565552, 0.7879999876022339, 0.7916666865348816, 0.7976666688919067, 0.7940000295639038, 0.8009999990463257, 0.8190000057220459, 0.8143333196640015, 0.8213333487510681, 0.8220000267028809, 0.8289999961853027, 0.8253333568572998, 0.8356666564941406, 0.8376666903495789, 0.8379999995231628, 0.8413333296775818, 0.8443333506584167, 0.8493333458900452, 0.8443333506584167, 0.8493333458900452, 0.8519999980926514, 0.8526666760444641, 0.8546666502952576, 0.8583333492279053, 0.8579999804496765, 0.8603333234786987, 0.8619999885559082, 0.8656666874885559, 0.8579999804496765, 0.8669999837875366, 0.8666666746139526, 0.8679999709129333, 0.8723333477973938, 0.8686666488647461, 0.8696666955947876, 0.8733333349227905, 0.8733333349227905, 0.8743333220481873, 0.8740000128746033, 0.8693333268165588, 0.8766666650772095, 0.8773333430290222, 0.878333330154419, 0.8769999742507935, 0.8796666860580444, 0.8793333172798157, 0.8799999952316284, 0.8809999823570251, 0.8790000081062317, 0.8799999952316284, 0.8809999823570251, 0.8799999952316284, 0.8849999904632568, 0.8830000162124634, 0.8823333382606506, 0.8806666731834412, 0.8830000162124634, 0.8840000033378601]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 1], [0, 3, 0], [0, 5], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8562856912612915, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292842388153076, 2.1909830570220947, 1.769689679145813, 1.3649061918258667, 1.0882956981658936, 0.9373819828033447, 0.8576772809028625, 0.8306333422660828, 0.7780513763427734, 0.754158616065979, 0.7147209048271179, 0.6816707253456116, 0.6608191132545471, 0.6306391358375549, 0.6191653609275818, 0.5943979024887085, 0.584019660949707, 0.5648477077484131, 0.5567664504051208, 0.5429844856262207, 0.5317502021789551, 0.5346956849098206, 0.5082542896270752, 0.5085054039955139, 0.4806012213230133, 0.478721559047699, 0.47306546568870544, 0.46006259322166443, 0.46178683638572693, 0.446024626493454, 0.4412077069282532, 0.42503106594085693, 0.4227730631828308, 0.4146800935268402, 0.406648188829422, 0.40003257989883423, 0.38673830032348633, 0.38991275429725647, 0.3766342103481293, 0.3736933171749115, 0.3663194477558136, 0.34396031498908997], "accuracy": [0.12957337498664856, 0.32043322920799255, 0.4418174624443054, 0.5406154990196228, 0.632941484451294, 0.6576409935951233, 0.6869634389877319, 0.6971337795257568, 0.7024171352386475, 0.7127195596694946, 0.7281733155250549, 0.739928662776947, 0.7474573850631714, 0.7601373791694641, 0.7643640041351318, 0.7716285586357117, 0.7766477465629578, 0.7841764688491821, 0.7921014428138733, 0.787082314491272, 0.7917051911354065, 0.7964601516723633, 0.8053097128868103, 0.8025360107421875, 0.8103289008140564, 0.8181217908859253, 0.8219521641731262, 0.8224804997444153, 0.82683926820755, 0.8296129703521729, 0.833179235458374, 0.8360850811004639, 0.8417646288871765, 0.8461233377456665, 0.8442742228507996, 0.8473120927810669, 0.8525954484939575, 0.8506141901016235, 0.8577466607093811, 0.8552370667457581, 0.8607845902442932, 0.8654074668884277], "val_loss": [2.246774673461914, 2.024902582168579, 1.1568477153778076, 0.9002940058708191, 0.7694529891014099, 0.728794515132904, 0.6779958605766296, 0.6468431949615479, 0.6518163084983826, 0.6171861290931702, 0.5808376669883728, 0.5517142415046692, 0.544569730758667, 0.5332365036010742, 0.5185741186141968, 0.5114354491233826, 0.5052839517593384, 0.5031934976577759, 0.49786508083343506, 0.49566876888275146, 0.497446209192276, 0.4775600731372833, 0.4726305603981018, 0.4624130427837372, 0.4587329030036926, 0.44834834337234497, 0.4451112747192383, 0.44830891489982605, 0.44171544909477234, 0.4362003207206726, 0.43806758522987366, 0.4310886263847351, 0.4277407228946686, 0.43017441034317017, 0.43273624777793884, 0.42103177309036255, 0.43394437432289124, 0.4342576563358307, 0.4159263074398041, 0.41713687777519226, 0.4261757731437683, 0.4372800290584564], "val_accuracy": [0.4129999876022339, 0.4740000069141388, 0.6423333287239075, 0.6896666884422302, 0.7203333377838135, 0.7263333201408386, 0.734666645526886, 0.7636666893959045, 0.753000020980835, 0.7673333287239075, 0.7670000195503235, 0.781333327293396, 0.7886666655540466, 0.7903333306312561, 0.7973333597183228, 0.8026666641235352, 0.8033333420753479, 0.7983333468437195, 0.8033333420753479, 0.812333345413208, 0.8033333420753479, 0.8146666884422302, 0.8240000009536743, 0.8286666870117188, 0.828000009059906, 0.8323333263397217, 0.8389999866485596, 0.8393333554267883, 0.8420000076293945, 0.8376666903495789, 0.8489999771118164, 0.8519999980926514, 0.8496666550636292, 0.8489999771118164, 0.8479999899864197, 0.8519999980926514, 0.8583333492279053, 0.8566666841506958, 0.8546666502952576, 0.8516666889190674, 0.8556666374206543, 0.8550000190734863]}, "mapping_values": [1, 10, 5, 5, 3, 5, 3, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8231428861618042, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5100607872009277, 0.773825466632843, 0.6348584890365601, 0.5922908186912537, 0.5485206842422485, 0.5323390960693359, 0.5213147401809692, 0.49277547001838684, 0.4769040644168854, 0.5030663013458252, 0.4816068112850189, 0.4842150807380676, 0.46134528517723083, 0.4533695876598358, 0.5151183009147644, 0.5436233878135681, 0.5514383912086487, 0.5402026772499084, 0.5419026613235474], "accuracy": [0.49332982301712036, 0.7253995537757874, 0.7598732113838196, 0.7758552432060242, 0.7973847389221191, 0.8079513907432556, 0.8117818236351013, 0.8232730031013489, 0.8265751004219055, 0.8290846943855286, 0.8169330358505249, 0.8343679904937744, 0.8322546482086182, 0.8409721255302429, 0.8313300609588623, 0.8265751004219055, 0.8047813773155212, 0.8103289008140564, 0.8186501264572144], "val_loss": [0.8250206708908081, 0.6330152750015259, 0.5519641041755676, 0.5213311314582825, 0.5130050182342529, 0.5093255043029785, 0.5068594217300415, 0.5072090029716492, 0.6002086400985718, 0.5226255059242249, 0.5415475964546204, 0.536218523979187, 0.5519275069236755, 0.6026133894920349, 0.626712441444397, 0.6010535359382629, 0.5170842409133911, 0.5386461019515991, 0.5408585071563721], "val_accuracy": [0.7293333411216736, 0.7710000276565552, 0.7963333129882812, 0.8136666417121887, 0.8196666836738586, 0.8220000267028809, 0.8416666388511658, 0.831333339214325, 0.8276666402816772, 0.8259999752044678, 0.8393333554267883, 0.8420000076293945, 0.8426666855812073, 0.8493333458900452, 0.8423333168029785, 0.8336666822433472, 0.8336666822433472, 0.8429999947547913, 0.840666651725769]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 3, 3, 2, 6, 1, 4, 1, 4, 1, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), grad)), beta), tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 10, 11, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 9], [2, 2, 0, 3], [87, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], [6, 4, 8, 6, 8, 1, 4, 6, 4, 2, 8, 2, 9, 6], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1, 75]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(beta), tf.math.multiply(tf.math.square(beta), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, alpha))))), beta)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745]}, "mapping_values": [1, 7, 4, 3, 2, 10, 7, 3, 2, 2, 1, 1, 1, 24, 14, 10, 7], "tree_depth": 20}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3, 2, 7, 2], [0, 0, 0, 0, 2, 3, 0], [39, 39, 45, 61, 67], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 5, 7, 1, 4, 4, 1, 2, 0], [0, 2, 0, 3], [0, 66], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 3, 3, 6, 8, 4, 2, 6, 8], [3, 2, 1, 4, 6, 6], [16, 99, 96, 99, 61, 1]], "fitness": -0.09371428936719894, "mapping_values": [1, 15, 8, 7, 5, 6, 4, 2, 1, 2, 1, 1, 1, 11, 6, 5, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(grad, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(beta, alpha)), grad)), grad))", "other_info": {"loss": [2.309779167175293, 2.3101370334625244, 2.310596227645874, 2.30926251411438, 2.3086349964141846, 2.310275077819824], "accuracy": [0.09087307006120682, 0.08955223858356476, 0.09166556596755981, 0.09311848133802414, 0.09642054885625839, 0.09391097724437714], "val_loss": [2.308166742324829, 2.308166742324829, 2.308166742324829, 2.308166742324829, 2.308166742324829, 2.308166742324829], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 0, 8], [0, 3, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 56, 81]], "fitness": -0.09114285558462143, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 20, 11, 9, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(sigma, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.negative(tf.math.sqrt(beta)))", "other_info": {"loss": [2.309459686279297, 2.3110435009002686, 2.3088629245758057, 2.3098151683807373, 2.3099703788757324, 2.309584379196167], "accuracy": [0.09140139818191528, 0.09470347315073013, 0.09245806187391281, 0.08796724677085876, 0.09140139818191528, 0.09311848133802414], "val_loss": [2.308856964111328, 2.308856964111328, 2.308856964111328, 2.308856964111328, 2.308856964111328, 2.308856964111328], "val_accuracy": [0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971, 0.09233333170413971]}}]