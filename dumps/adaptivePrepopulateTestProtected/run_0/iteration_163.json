[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8788571357727051, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223778247833252, 1.869816780090332, 1.3854763507843018, 1.0877859592437744, 0.9313703775405884, 0.8305619955062866, 0.7596983313560486, 0.7178841233253479, 0.678885817527771, 0.6427952647209167, 0.6314711570739746, 0.6065253019332886, 0.5803450345993042, 0.5689871311187744, 0.5544987320899963, 0.5336046814918518, 0.5189152956008911, 0.5142802596092224, 0.4972553849220276, 0.48589378595352173, 0.4789123237133026, 0.47044631838798523, 0.45680922269821167, 0.4485171139240265, 0.45258986949920654, 0.44318363070487976, 0.4277282655239105, 0.42588117718696594, 0.4205707907676697, 0.4097837805747986, 0.4017646610736847, 0.3997235894203186, 0.39143604040145874, 0.3813983201980591, 0.3799765408039093, 0.3789656162261963, 0.36794283986091614, 0.3624574840068817, 0.35929128527641296, 0.35348811745643616, 0.3508596420288086, 0.34113216400146484, 0.3462033271789551, 0.33102670311927795, 0.330086886882782, 0.32165828347206116, 0.3163209855556488, 0.31816115975379944, 0.30683767795562744, 0.30308493971824646, 0.3014288544654846, 0.2991333305835724, 0.3007844388484955, 0.29286450147628784, 0.28524908423423767, 0.28070855140686035, 0.2784059941768646, 0.26981455087661743, 0.2657836079597473, 0.26673373579978943, 0.2612868845462799, 0.2518042027950287, 0.25471100211143494, 0.24872227013111115, 0.2470250278711319, 0.2423699051141739, 0.2363964468240738, 0.2331322431564331, 0.2366485893726349, 0.22393356263637543, 0.22837325930595398, 0.218330517411232, 0.21717983484268188, 0.21057762205600739, 0.20735885202884674, 0.2054237574338913, 0.20540645718574524, 0.19891852140426636, 0.19594213366508484, 0.20225878059864044, 0.1904907077550888, 0.18262125551700592, 0.18921315670013428, 0.18402932584285736, 0.18388424813747406, 0.18099281191825867, 0.17825645208358765, 0.1715107411146164], "accuracy": [0.2751287817955017, 0.47906485199928284, 0.5712587237358093, 0.6231673359870911, 0.6653017997741699, 0.7033417224884033, 0.7341170310974121, 0.7374191284179688, 0.7518161535263062, 0.7711002230644226, 0.7761194109916687, 0.783119797706604, 0.7940827012062073, 0.7932901978492737, 0.8016114234924316, 0.8078193068504333, 0.8191784620285034, 0.8201030492782593, 0.8281601071357727, 0.8253863453865051, 0.8310658931732178, 0.8338396549224854, 0.8387266993522644, 0.8429533839225769, 0.8429533839225769, 0.8430854678153992, 0.8474441766738892, 0.8525954484939575, 0.8488970994949341, 0.8557654023170471, 0.8605204224586487, 0.8562937378883362, 0.8647470474243164, 0.8679170608520508, 0.8650112152099609, 0.867520809173584, 0.870030403137207, 0.8725399374961853, 0.8734645247459412, 0.8730682730674744, 0.8811253309249878, 0.8813894987106323, 0.8728041052818298, 0.8854840993881226, 0.8800686597824097, 0.885219931602478, 0.8873332738876343, 0.8868049383163452, 0.8886540532112122, 0.8912957310676575, 0.8923524022102356, 0.8920882344245911, 0.8905032277107239, 0.8961827754974365, 0.895918607711792, 0.8968431949615479, 0.8986923694610596, 0.9041078090667725, 0.9021265506744385, 0.902390718460083, 0.9058248400688171, 0.9096552729606628, 0.908730685710907, 0.9115044474601746, 0.9109761118888855, 0.9133535623550415, 0.9162594079971313, 0.9157310724258423, 0.9140139818191528, 0.9169198274612427, 0.9167877435684204, 0.9225993752479553, 0.9235239624977112, 0.9220710396766663, 0.9252410531044006, 0.9272223114967346, 0.9260335564613342, 0.9299960136413574, 0.9298639297485352, 0.9265618920326233, 0.9314489364624023, 0.9351472854614258, 0.930788516998291, 0.9344868659973145, 0.9322414398193359, 0.935279369354248, 0.9355435371398926, 0.9375247359275818], "val_loss": [2.043229818344116, 1.5252792835235596, 1.059319019317627, 0.8622859120368958, 0.7739511728286743, 0.712826669216156, 0.6653242111206055, 0.6353532075881958, 0.6145880818367004, 0.588234007358551, 0.5718778371810913, 0.5557640790939331, 0.5459425449371338, 0.525135338306427, 0.5168591141700745, 0.5053482055664062, 0.4997932016849518, 0.48488402366638184, 0.47919487953186035, 0.4703822433948517, 0.47141027450561523, 0.46116748452186584, 0.453118234872818, 0.44784554839134216, 0.44718751311302185, 0.43445050716400146, 0.4359551668167114, 0.42782077193260193, 0.42837169766426086, 0.4202001988887787, 0.41962215304374695, 0.41002556681632996, 0.40663206577301025, 0.40764692425727844, 0.40263956785202026, 0.3989400267601013, 0.3960455060005188, 0.39371103048324585, 0.3923947811126709, 0.3929206430912018, 0.3917257487773895, 0.3840952217578888, 0.3808329403400421, 0.3817606270313263, 0.37890157103538513, 0.37521520256996155, 0.3746592700481415, 0.3713971674442291, 0.3694106936454773, 0.36994099617004395, 0.36911842226982117, 0.3693079352378845, 0.36807316541671753, 0.3690676987171173, 0.36612769961357117, 0.36626964807510376, 0.36125749349594116, 0.3628350496292114, 0.36928442120552063, 0.3606704771518707, 0.35772624611854553, 0.3617168664932251, 0.3560544550418854, 0.3591160476207733, 0.35777518153190613, 0.35627302527427673, 0.3584086000919342, 0.3570273518562317, 0.3526735305786133, 0.35380101203918457, 0.3530525863170624, 0.35500773787498474, 0.35798314213752747, 0.3571338653564453, 0.35494470596313477, 0.35568180680274963, 0.3550068438053131, 0.35418087244033813, 0.3578505516052246, 0.3490322232246399, 0.35165348649024963, 0.3594669997692108, 0.3573257327079773, 0.35076624155044556, 0.35436558723449707, 0.35485583543777466, 0.35399290919303894, 0.3549942970275879], "val_accuracy": [0.5046666860580444, 0.6439999938011169, 0.6753333210945129, 0.6893333196640015, 0.7256666421890259, 0.7400000095367432, 0.7566666603088379, 0.7670000195503235, 0.7730000019073486, 0.7876666784286499, 0.7906666398048401, 0.7986666560173035, 0.8033333420753479, 0.8163333535194397, 0.8180000185966492, 0.8203333616256714, 0.8183333277702332, 0.82833331823349, 0.8303333520889282, 0.8323333263397217, 0.8263333439826965, 0.8370000123977661, 0.8410000205039978, 0.8399999737739563, 0.8399999737739563, 0.847000002861023, 0.843666672706604, 0.8476666808128357, 0.8493333458900452, 0.8533333539962769, 0.8493333458900452, 0.8579999804496765, 0.859000027179718, 0.8556666374206543, 0.8600000143051147, 0.862333357334137, 0.8613333106040955, 0.8606666922569275, 0.8610000014305115, 0.8673333525657654, 0.8650000095367432, 0.8603333234786987, 0.8673333525657654, 0.8690000176429749, 0.8700000047683716, 0.8703333139419556, 0.8726666569709778, 0.8713333606719971, 0.8700000047683716, 0.871666669845581, 0.874666690826416, 0.8733333349227905, 0.8733333349227905, 0.871666669845581, 0.8756666779518127, 0.874666690826416, 0.8759999871253967, 0.878000020980835, 0.8740000128746033, 0.8766666650772095, 0.8790000081062317, 0.8813333511352539, 0.8849999904632568, 0.8820000290870667, 0.8849999904632568, 0.8823333382606506, 0.8833333253860474, 0.8853333592414856, 0.8853333592414856, 0.8856666684150696, 0.8846666812896729, 0.8889999985694885, 0.8843333125114441, 0.8866666555404663, 0.887333333492279, 0.890999972820282, 0.8893333077430725, 0.8859999775886536, 0.8886666893959045, 0.8926666378974915, 0.890333354473114, 0.887333333492279, 0.8933333158493042, 0.8920000195503235, 0.8913333415985107, 0.890999972820282, 0.8916666507720947, 0.890666663646698]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8585714101791382, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2231388092041016, 1.8667587041854858, 1.3890444040298462, 1.0848157405853271, 0.9242092370986938, 0.8328345417976379, 0.7608217000961304, 0.7191876769065857, 0.6786907315254211, 0.6510717868804932, 0.6175515055656433, 0.5990180373191833, 0.5847591161727905, 0.5687898993492126, 0.5546818375587463, 0.5396816730499268, 0.5235346555709839, 0.5062138438224792, 0.5014623999595642, 0.48843222856521606, 0.48024699091911316, 0.46587222814559937, 0.4600776433944702, 0.44962188601493835, 0.4432254731655121, 0.4402211010456085, 0.4330795705318451, 0.42986196279525757, 0.41736364364624023, 0.40526679158210754, 0.40651458501815796, 0.3974136710166931, 0.38827043771743774, 0.39018580317497253, 0.3745970129966736, 0.37630218267440796, 0.3698447346687317, 0.3599036633968353, 0.3559250831604004, 0.3516426086425781, 0.3511198163032532, 0.3395523726940155, 0.3356110453605652, 0.33577609062194824, 0.3312661051750183, 0.32295241951942444, 0.32457536458969116, 0.32105913758277893, 0.3141811490058899, 0.30815932154655457, 0.3010603189468384, 0.29856786131858826], "accuracy": [0.280940443277359, 0.5041606426239014, 0.5723153948783875, 0.6318848133087158, 0.6728305220603943, 0.705058753490448, 0.7326641082763672, 0.7404569983482361, 0.7537974119186401, 0.7629110813140869, 0.7751948237419128, 0.7827235460281372, 0.7903843522071838, 0.7961959838867188, 0.7968564033508301, 0.8053097128868103, 0.8113855719566345, 0.8178576231002808, 0.8169330358505249, 0.8276317715644836, 0.8317263126373291, 0.8341038227081299, 0.8352925777435303, 0.839519202709198, 0.8441421389579773, 0.8442742228507996, 0.8499537706375122, 0.8475762605667114, 0.8498216867446899, 0.859199583530426, 0.8556333184242249, 0.8602562546730042, 0.8623695969581604, 0.8601241707801819, 0.8672566413879395, 0.86553955078125, 0.8693699836730957, 0.874389111995697, 0.8751816153526306, 0.873860776424408, 0.8779553771018982, 0.8812574148178101, 0.8811253309249878, 0.8836349248886108, 0.8840311765670776, 0.8828424215316772, 0.8840311765670776, 0.8865407705307007, 0.887597382068634, 0.8924844861030579, 0.8961827754974365, 0.8934090733528137], "val_loss": [2.03780460357666, 1.5115211009979248, 1.0443601608276367, 0.8407944440841675, 0.7510016560554504, 0.6926279067993164, 0.6449958682060242, 0.6108607053756714, 0.58367919921875, 0.5636293888092041, 0.5376967191696167, 0.5260604619979858, 0.5144383311271667, 0.49633312225341797, 0.4850395917892456, 0.4803902208805084, 0.46571484208106995, 0.4576954245567322, 0.45649486780166626, 0.4409095048904419, 0.4397059381008148, 0.4256177246570587, 0.4261559545993805, 0.4198600947856903, 0.40866491198539734, 0.4116867780685425, 0.4064628481864929, 0.3967757523059845, 0.39858773350715637, 0.39538776874542236, 0.39155787229537964, 0.38314560055732727, 0.38692301511764526, 0.37983858585357666, 0.37699732184410095, 0.37334874272346497, 0.3739759027957916, 0.36707478761672974, 0.36854711174964905, 0.3653580844402313, 0.35826513171195984, 0.3612561821937561, 0.3601868450641632, 0.3552128076553345, 0.35470813512802124, 0.3529057502746582, 0.34764447808265686, 0.3516528308391571, 0.34747985005378723, 0.3452087342739105, 0.35051432251930237, 0.3417724072933197], "val_accuracy": [0.5506666898727417, 0.6566666960716248, 0.6796666383743286, 0.6990000009536743, 0.7283333539962769, 0.7543333172798157, 0.7670000195503235, 0.7676666378974915, 0.7860000133514404, 0.7903333306312561, 0.8023333549499512, 0.8163333535194397, 0.812333345413208, 0.8226666450500488, 0.8320000171661377, 0.8343333601951599, 0.8353333473205566, 0.8416666388511658, 0.8386666774749756, 0.8443333506584167, 0.8500000238418579, 0.8536666631698608, 0.8493333458900452, 0.8560000061988831, 0.8566666841506958, 0.856333315372467, 0.859333336353302, 0.8640000224113464, 0.8586666584014893, 0.8583333492279053, 0.8633333444595337, 0.8663333058357239, 0.8629999756813049, 0.8666666746139526, 0.8676666617393494, 0.8683333396911621, 0.8703333139419556, 0.8703333139419556, 0.8659999966621399, 0.8723333477973938, 0.875, 0.8740000128746033, 0.874666690826416, 0.8759999871253967, 0.8713333606719971, 0.8730000257492065, 0.8799999952316284, 0.8723333477973938, 0.8769999742507935, 0.878000020980835, 0.8769999742507935, 0.8793333172798157]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 3], [0, 5], [0], [0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 9, 7, 3], [0, 6, 1], [0, 86], [0, 1], [0], [1], [0]], "fitness": -0.8311428427696228, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2939772605895996, 2.1912808418273926, 1.7782055139541626, 1.3436024188995361, 1.064300537109375, 0.9215432405471802, 0.8340858221054077, 0.806329607963562, 0.7659701704978943, 0.7444906234741211, 0.6849370002746582, 0.6736016869544983, 0.6412584185600281, 0.6233705878257751, 0.6096794605255127, 0.5991030931472778, 0.5643727779388428, 0.5681389570236206, 0.5574300289154053, 0.5496957302093506, 0.5387869477272034, 0.5290451049804688, 0.5175695419311523, 0.5152265429496765, 0.49604618549346924, 0.4951060712337494, 0.48467573523521423, 0.47489336133003235, 0.46308836340904236], "accuracy": [0.12415797263383865, 0.3222824037075043, 0.436930388212204, 0.5462950468063354, 0.6406022906303406, 0.6634526252746582, 0.6876237988471985, 0.6963412761688232, 0.6959450244903564, 0.7111346125602722, 0.7353057861328125, 0.737947404384613, 0.7569673657417297, 0.7646281719207764, 0.7606657147407532, 0.7677981853485107, 0.7862898111343384, 0.7835160493850708, 0.7843085527420044, 0.7909126877784729, 0.7942147850990295, 0.7975168228149414, 0.8030643463134766, 0.804649293422699, 0.8124422430992126, 0.8125742673873901, 0.8197067975997925, 0.8166688680648804, 0.8226125836372375], "val_loss": [2.2453882694244385, 2.022580623626709, 1.137965440750122, 0.8880354762077332, 0.766258955001831, 0.7049704790115356, 0.6550300121307373, 0.6302790641784668, 0.6224269270896912, 0.6110318899154663, 0.5593059062957764, 0.5467737913131714, 0.5522714853286743, 0.5316025018692017, 0.5255950689315796, 0.5012528300285339, 0.49324148893356323, 0.49664437770843506, 0.4796089231967926, 0.47401219606399536, 0.4807417094707489, 0.4812328815460205, 0.457017183303833, 0.44889533519744873, 0.46193191409111023, 0.4625590145587921, 0.4545486271381378, 0.4430505335330963, 0.4571997821331024], "val_accuracy": [0.4143333435058594, 0.4650000035762787, 0.656000018119812, 0.6833333373069763, 0.7056666612625122, 0.7296666502952576, 0.7473333477973938, 0.7549999952316284, 0.7739999890327454, 0.7616666555404663, 0.7693333625793457, 0.7786666750907898, 0.784333348274231, 0.7846666574478149, 0.7996666431427002, 0.8053333163261414, 0.8050000071525574, 0.8143333196640015, 0.8159999847412109, 0.8203333616256714, 0.8109999895095825, 0.8266666531562805, 0.8316666483879089, 0.8389999866485596, 0.8346666693687439, 0.8346666693687439, 0.8330000042915344, 0.8333333134651184, 0.8353333473205566]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 8, 5, 3, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8234285712242126, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5739250183105469, 0.8550077676773071, 0.6835246086120605, 0.627702534198761, 0.5826359391212463, 0.544048547744751, 0.5062130093574524, 0.48696938157081604, 0.49290233850479126, 0.5028758645057678, 0.4794582426548004, 0.4591245949268341, 0.45924487709999084, 0.4437548816204071, 0.47449547052383423, 0.4643653333187103, 0.47844329476356506, 0.4716176986694336, 0.5132803916931152, 0.4988614320755005, 0.48331475257873535, 0.5144851803779602, 0.510302722454071, 0.5690068006515503, 0.5910268425941467, 0.5762621164321899], "accuracy": [0.4625544846057892, 0.7069079279899597, 0.7524765729904175, 0.7651565074920654, 0.7876105904579163, 0.8053097128868103, 0.8144234418869019, 0.8230088353157043, 0.8247259259223938, 0.8145555257797241, 0.8249900937080383, 0.8355567455291748, 0.8286884427070618, 0.8404437899589539, 0.8302733898162842, 0.8338396549224854, 0.828292191028595, 0.8367455005645752, 0.8309338092803955, 0.829216718673706, 0.8301413059234619, 0.8281601071357727, 0.8169330358505249, 0.8133667707443237, 0.8186501264572144, 0.8153480291366577], "val_loss": [0.8837701678276062, 0.6045701503753662, 0.5413004755973816, 0.5411863327026367, 0.4926973581314087, 0.4776327610015869, 0.48979127407073975, 0.4785306751728058, 0.4931500256061554, 0.5056406855583191, 0.5290641188621521, 0.5223450660705566, 0.4885169267654419, 0.522490918636322, 0.5157743096351624, 0.5164015889167786, 0.5116307735443115, 0.6587539911270142, 0.5560365915298462, 0.5477292537689209, 0.551343560218811, 0.5264021158218384, 0.5362461805343628, 0.5886169672012329, 0.6294956803321838, 0.598597526550293], "val_accuracy": [0.6930000185966492, 0.7806666493415833, 0.793666660785675, 0.8040000200271606, 0.812333345413208, 0.8259999752044678, 0.8326666951179504, 0.8309999704360962, 0.8346666693687439, 0.831333339214325, 0.8349999785423279, 0.828000009059906, 0.8316666483879089, 0.8360000252723694, 0.8333333134651184, 0.8303333520889282, 0.8363333344459534, 0.8336666822433472, 0.8273333311080933, 0.8360000252723694, 0.8379999995231628, 0.8379999995231628, 0.8289999961853027, 0.8349999785423279, 0.8289999961853027, 0.8203333616256714]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 3, 3, 1, 3, 3, 4, 2, 9, 2, 9], [0, 1, 0, 2, 2, 0, 2], [39, 39, 47, 60, 29], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 2], [0, 2, 1, 3, 0], [16, 51], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 8, 3, 6, 2, 1, 6, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 92, 61, 24]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 11, 7, 5, 11, 6, 5, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(grad, tf.math.pow(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(alpha, tf.math.add(grad, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 0, 4, 2, 8], [0, 1, 0, 2, 0, 0], [39, 96, 73, 62], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [21, 16], [0, 1], [8], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 8, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 1], [16, 99, 96, 2, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 9, 6, 4, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.add(tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 4, 3, 1], [0, 1, 0, 2, 0, 0], [39, 39, 15, 24], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 2, 3, 4, 3, 5, 0, 6, 0, 4, 9], [0, 2, 2, 3, 1, 1], [16, 16], [1, 1], [0], [0], [99], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 3, 8, 1, 4, 1, 4, 8, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 4, 17, 11, 6, 2, 1, 0, 1, 1, 20, 11, 9, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(beta, tf.math.square(grad))), tf.math.negative(tf.math.divide_no_nan(tf.math.negative(alpha), tf.math.pow(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), alpha), tf.math.sqrt(tf.math.sqrt(beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 8, 5], [0, 1, 0, 2], [39, 92], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 4, 3, 0, 3, 5, 9], [0, 2, 0, 3], [16, 16, 48], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha))", "other_info": {"loss": [2.3059756755828857, 2.3067173957824707, 2.306702136993408, 2.3067562580108643, 2.3101887702941895, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.10447761416435242, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.306516408920288, 2.3065149784088135, 2.3062753677368164, 2.3075127601623535, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09966666996479034, 0.09966666996479034, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}, "mapping_values": [1, 8, 5, 3, 2, 10, 7, 3, 3, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 17}]