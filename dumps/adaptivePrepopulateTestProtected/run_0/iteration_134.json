[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8622857332229614, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222688674926758, 1.8682695627212524, 1.3974685668945312, 1.1049305200576782, 0.9287591576576233, 0.8512231707572937, 0.7878789901733398, 0.7420560717582703, 0.6971122026443481, 0.6697486639022827, 0.651984691619873, 0.6248204708099365, 0.6004263758659363, 0.5888521671295166, 0.5730875134468079, 0.5548357963562012, 0.5427778959274292, 0.5298504829406738, 0.5126451253890991, 0.5066171288490295, 0.4981497526168823, 0.49091795086860657, 0.48267748951911926, 0.4685821533203125, 0.4649832844734192, 0.44994741678237915, 0.4452129006385803, 0.43903064727783203, 0.42875412106513977, 0.42366570234298706, 0.4150831699371338, 0.4182511270046234, 0.40230998396873474, 0.40077170729637146, 0.395232230424881, 0.39304134249687195, 0.3893691897392273, 0.381783664226532, 0.38025736808776855, 0.36824244260787964, 0.36575761437416077, 0.3625594973564148, 0.3538585305213928, 0.347380667924881, 0.345125675201416, 0.34131836891174316, 0.33215782046318054, 0.33006852865219116, 0.3222068250179291, 0.3184628486633301, 0.3157510459423065, 0.30805036425590515, 0.30334070324897766, 0.30428287386894226, 0.296275794506073, 0.29222533106803894, 0.286525160074234, 0.2837313413619995, 0.28143206238746643, 0.27796807885169983], "accuracy": [0.2748646140098572, 0.4888390004634857, 0.5597675442695618, 0.6147140264511108, 0.6654338836669922, 0.6966054439544678, 0.7235503792762756, 0.7294940948486328, 0.7467969655990601, 0.7652885913848877, 0.7607977986335754, 0.7751948237419128, 0.785629391670227, 0.7874785661697388, 0.7930260300636292, 0.802800178527832, 0.8012151718139648, 0.8125742673873901, 0.8164047002792358, 0.8158763647079468, 0.8191784620285034, 0.8231409192085266, 0.8248580098152161, 0.8389908671379089, 0.8317263126373291, 0.8350284099578857, 0.8387266993522644, 0.8426892161369324, 0.8471800088882446, 0.8514066934585571, 0.8533879518508911, 0.8514066934585571, 0.8564258217811584, 0.852331280708313, 0.8589354157447815, 0.8582749962806702, 0.8582749962806702, 0.8626337051391602, 0.86118084192276, 0.8663320541381836, 0.8693699836730957, 0.868049144744873, 0.8702945709228516, 0.8768987059593201, 0.8765024542808533, 0.8767666220664978, 0.8774270415306091, 0.8862766027450562, 0.8870691061019897, 0.8845595121383667, 0.8841632604598999, 0.8865407705307007, 0.8899748921394348, 0.8901069760322571, 0.8945978283882141, 0.8949940800666809, 0.8923524022102356, 0.8943336606025696, 0.9010698795318604, 0.897899866104126], "val_loss": [2.0433313846588135, 1.5134892463684082, 1.0349619388580322, 0.8306554555892944, 0.7484988570213318, 0.6957592964172363, 0.6538537740707397, 0.6205182075500488, 0.5947771668434143, 0.5716136693954468, 0.5549831390380859, 0.5385168194770813, 0.5266095995903015, 0.5181800723075867, 0.5034645199775696, 0.495242714881897, 0.48244819045066833, 0.4792911112308502, 0.47067373991012573, 0.46335339546203613, 0.45297738909721375, 0.4535905718803406, 0.4463152587413788, 0.4370954930782318, 0.4398704469203949, 0.4298548102378845, 0.4229060113430023, 0.41771116852760315, 0.4169827103614807, 0.4084535241127014, 0.40550822019577026, 0.4034844636917114, 0.40089407563209534, 0.3940386176109314, 0.3945873975753784, 0.3935297727584839, 0.3909459710121155, 0.3893129527568817, 0.3889560103416443, 0.38024112582206726, 0.37946951389312744, 0.3747313618659973, 0.3670860230922699, 0.37247008085250854, 0.3647313714027405, 0.36855876445770264, 0.36941593885421753, 0.3640834093093872, 0.3552579879760742, 0.3583412170410156, 0.35758692026138306, 0.3580787777900696, 0.35206490755081177, 0.35046353936195374, 0.3499431610107422, 0.3457823097705841, 0.3452317714691162, 0.34265202283859253, 0.34280282258987427, 0.34406059980392456], "val_accuracy": [0.5203333497047424, 0.6639999747276306, 0.6779999732971191, 0.6986666917800903, 0.7206666469573975, 0.734333336353302, 0.7433333396911621, 0.7546666860580444, 0.7616666555404663, 0.7716666460037231, 0.7806666493415833, 0.7919999957084656, 0.7946666479110718, 0.8003333210945129, 0.8013333082199097, 0.8056666851043701, 0.8149999976158142, 0.8173333406448364, 0.8233333230018616, 0.8343333601951599, 0.8323333263397217, 0.8296666741371155, 0.8266666531562805, 0.8373333215713501, 0.8299999833106995, 0.8453333377838135, 0.8373333215713501, 0.8413333296775818, 0.846666693687439, 0.8456666469573975, 0.8516666889190674, 0.846666693687439, 0.8500000238418579, 0.8543333411216736, 0.8576666712760925, 0.8539999723434448, 0.8560000061988831, 0.8500000238418579, 0.8573333621025085, 0.8603333234786987, 0.8586666584014893, 0.8633333444595337, 0.8659999966621399, 0.8603333234786987, 0.8619999885559082, 0.8663333058357239, 0.859666645526886, 0.8663333058357239, 0.8730000257492065, 0.8686666488647461, 0.8703333139419556, 0.8700000047683716, 0.8730000257492065, 0.874666690826416, 0.8776666522026062, 0.8740000128746033, 0.8773333430290222, 0.8773333430290222, 0.8743333220481873, 0.875333309173584]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 1, 2, 6, 1, 8, 7], [0, 5, 3, 5, 4, 0, 5], [0, 61], [1], [0], [2], [0]], "fitness": -0.833142876625061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, sigma)), grad), tf.math.subtract(tf.math.sqrt(grad), tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5346808433532715, 0.7804800271987915, 0.6413708329200745, 0.5669966340065002, 0.5636235475540161, 0.5533714294433594, 0.5520439743995667, 0.5430193543434143, 0.5810843706130981, 0.5578514933586121, 0.5702087879180908, 0.5171275734901428, 0.5114667415618896, 0.5423554182052612, 0.5061484575271606, 0.4914536774158478, 0.5060928463935852, 0.5350997447967529, 0.5082478523254395, 0.5502206087112427, 0.5333142876625061, 0.5519234538078308], "accuracy": [0.4551578462123871, 0.7248712182044983, 0.7650244235992432, 0.7876105904579163, 0.7976489067077637, 0.789988100528717, 0.8030643463134766, 0.8164047002792358, 0.8043851256370544, 0.8068947196006775, 0.8136309385299683, 0.8064984679222107, 0.822348415851593, 0.8248580098152161, 0.8355567455291748, 0.8177255392074585, 0.8212917447090149, 0.8333113193511963, 0.8244617581367493, 0.8152159452438354, 0.8208954930305481, 0.8175934553146362], "val_loss": [0.8234270811080933, 0.5811842679977417, 0.5107317566871643, 0.5394803285598755, 0.5508571863174438, 0.5098932385444641, 0.5120675563812256, 0.5357855558395386, 0.5267264246940613, 0.6029186248779297, 0.5758584141731262, 0.5649417042732239, 0.5629018545150757, 0.6127804517745972, 0.5369533896446228, 0.5308797359466553, 0.6127783060073853, 0.5612282156944275, 0.5767593383789062, 0.5682384967803955, 0.5363869071006775, 0.5828545093536377], "val_accuracy": [0.7426666617393494, 0.7823333144187927, 0.8036666512489319, 0.8019999861717224, 0.8103333115577698, 0.8206666707992554, 0.8213333487510681, 0.8193333148956299, 0.8199999928474426, 0.8133333325386047, 0.8106666803359985, 0.824999988079071, 0.8296666741371155, 0.840666651725769, 0.8320000171661377, 0.8183333277702332, 0.8423333168029785, 0.8399999737739563, 0.8373333215713501, 0.8299999833106995, 0.8386666774749756, 0.8386666774749756]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 15, 8, 7, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1], [0, 0, 8, 0], [0], [0], [0, 0, 1], [0, 8], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.824571430683136, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2927660942077637, 2.1921236515045166, 1.7780314683914185, 1.370647668838501, 1.055007815361023, 0.8917280435562134, 0.8281627297401428, 0.8014809489250183, 0.7588521838188171, 0.7172930836677551, 0.6914069056510925, 0.6712349057197571, 0.6453167796134949, 0.6228007674217224, 0.5954450964927673, 0.5847089886665344, 0.5720484256744385, 0.5574201345443726, 0.545957088470459, 0.5444767475128174, 0.5395574569702148, 0.5244884490966797, 0.513390064239502, 0.5034379363059998, 0.5001791715621948], "accuracy": [0.13115836679935455, 0.32479196786880493, 0.42768457531929016, 0.5381059050559998, 0.6384889483451843, 0.6753401160240173, 0.7059833407402039, 0.698190450668335, 0.7140403985977173, 0.7276449799537659, 0.744419515132904, 0.7453441023826599, 0.7514199018478394, 0.765949010848999, 0.7726852297782898, 0.7749306559562683, 0.7765156626701355, 0.7803460359573364, 0.7882710099220276, 0.7957997918128967, 0.7923656105995178, 0.7988376617431641, 0.8043851256370544, 0.8067626357078552, 0.8059701323509216], "val_loss": [2.2457478046417236, 2.0193564891815186, 1.1368314027786255, 0.8294177055358887, 0.7486292123794556, 0.677449643611908, 0.6519320607185364, 0.6527267694473267, 0.6233081221580505, 0.5949943661689758, 0.5612412095069885, 0.5407785773277283, 0.5273960828781128, 0.5221751928329468, 0.5192028284072876, 0.5095855593681335, 0.4955724775791168, 0.4816748797893524, 0.48249995708465576, 0.47089114785194397, 0.46698808670043945, 0.46373289823532104, 0.46363577246665955, 0.4548221826553345, 0.4483277201652527], "val_accuracy": [0.42766666412353516, 0.43933331966400146, 0.6489999890327454, 0.6930000185966492, 0.7310000061988831, 0.7453333139419556, 0.7400000095367432, 0.7549999952316284, 0.7476666569709778, 0.7796666622161865, 0.777999997138977, 0.7923333048820496, 0.7933333516120911, 0.7996666431427002, 0.7979999780654907, 0.7983333468437195, 0.8100000023841858, 0.8173333406448364, 0.8243333101272583, 0.8376666903495789, 0.8220000267028809, 0.8256666660308838, 0.8303333520889282, 0.831333339214325, 0.8320000171661377]}, "mapping_values": [1, 10, 5, 5, 3, 5, 4, 1, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 6, 3, 0, 3], [0, 1, 0, 2], [39, 4], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 9, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 7, 5, 2, 2, 2, 1, 1, 0, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.negative(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 2], [15, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 8, 0], [0, 2, 0, 1], [16, 33], [0, 1], [9], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 8, 4, 6, 8, 1], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [91, 42, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.sqrt(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.sqrt(tf.math.pow(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma)))), tf.math.sqrt(tf.math.subtract(alpha, beta))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}, "mapping_values": [1, 9, 5, 4, 1, 12, 8, 4, 2, 1, 1, 0, 1, 22, 12, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [21, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 8, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 4, 6, 8, 1, 3, 1, 0, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [3.247418165206909, 5.073802471160889, 6.033959865570068, 6.618795394897461, 7.056607246398926, 7.414240837097168], "accuracy": [0.09721305221319199, 0.09985470771789551, 0.09813763201236725, 0.09681680053472519, 0.09985470771789551, 0.09694888442754745], "val_loss": [3.5870256423950195, 4.384200096130371, 4.853784561157227, 5.164712429046631, 5.382591247558594, 5.541224002838135], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3], [1, 2, 0, 2], [19, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 3, 3, 5], [0, 2, 0, 3, 2], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [33, 99, 96, 99, 61, 1]], "fitness": -0.0925714299082756, "mapping_values": [1, 6, 3, 3, 1, 11, 6, 5, 2, 2, 1, 1, 1, 18, 9, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.multiply(grad, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), beta)", "other_info": {"loss": [2.309011220932007, 2.311948776245117, 2.3096766471862793, 2.308709144592285, 2.308799982070923, 2.3099348545074463], "accuracy": [0.09298639744520187, 0.09140139818191528, 0.09932637959718704, 0.09694888442754745, 0.0936468094587326, 0.09430722147226334], "val_loss": [2.309380292892456, 2.309380292892456, 2.309380292892456, 2.309380292892456, 2.309380292892456, 2.309380292892456], "val_accuracy": [0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499, 0.08866667002439499]}}]