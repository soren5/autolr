[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8708571195602417, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223504066467285, 1.8690873384475708, 1.4035414457321167, 1.1000514030456543, 0.9414883852005005, 0.8498579859733582, 0.7899138331413269, 0.7383627891540527, 0.6963983774185181, 0.6647636294364929, 0.6423156261444092, 0.6181573271751404, 0.6015865206718445, 0.5842608213424683, 0.5650824904441833, 0.5482795238494873, 0.5394976735115051, 0.5225663781166077, 0.5113468766212463, 0.4948083162307739, 0.4862338602542877, 0.4742628037929535, 0.4742538332939148, 0.46268773078918457, 0.4602050185203552, 0.4429270029067993, 0.4430917799472809, 0.4280098080635071, 0.4246971309185028, 0.41350018978118896, 0.40711820125579834, 0.4057006537914276, 0.40315619111061096, 0.3909238278865814, 0.38555437326431274, 0.3884059488773346, 0.3795647621154785], "accuracy": [0.2798837721347809, 0.48632940649986267, 0.5608242154121399, 0.6152423620223999, 0.6650376319885254, 0.6933034062385559, 0.7154933214187622, 0.7374191284179688, 0.7456082701683044, 0.7604015469551086, 0.7689869403839111, 0.7817989587783813, 0.7833839654922485, 0.7917051911354065, 0.7981772422790527, 0.8018755912780762, 0.8037247657775879, 0.8095363974571228, 0.8183859586715698, 0.8240655064582825, 0.8244617581367493, 0.8321225643157959, 0.8315942287445068, 0.8348963260650635, 0.835160493850708, 0.8438779711723328, 0.8421608805656433, 0.8486329317092896, 0.8481045961380005, 0.854708731174469, 0.8539162874221802, 0.8518029451370239, 0.8564258217811584, 0.8580108284950256, 0.8647470474243164, 0.8625016212463379, 0.8656716346740723], "val_loss": [2.035029411315918, 1.5117740631103516, 1.0447754859924316, 0.8441796898841858, 0.7494144439697266, 0.6973625421524048, 0.6477593183517456, 0.6172367930412292, 0.5867523550987244, 0.5632433295249939, 0.5438907146453857, 0.5239144563674927, 0.5148830413818359, 0.5043229460716248, 0.4873908758163452, 0.476884126663208, 0.4735008478164673, 0.46157827973365784, 0.46644094586372375, 0.44969242811203003, 0.4462836980819702, 0.4400990903377533, 0.4308316111564636, 0.4285426437854767, 0.4205305874347687, 0.4193292260169983, 0.4143666923046112, 0.41203466057777405, 0.4104957580566406, 0.4026056230068207, 0.4068063199520111, 0.39488673210144043, 0.39797404408454895, 0.39160075783729553, 0.3901435136795044, 0.3866804242134094, 0.39100009202957153], "val_accuracy": [0.5696666836738586, 0.6589999794960022, 0.6816666722297668, 0.7059999704360962, 0.7246666550636292, 0.7390000224113464, 0.753333330154419, 0.762333333492279, 0.7756666541099548, 0.7833333611488342, 0.7950000166893005, 0.8029999732971191, 0.8059999942779541, 0.815666675567627, 0.8176666498184204, 0.8230000138282776, 0.8220000267028809, 0.8256666660308838, 0.824999988079071, 0.831333339214325, 0.8360000252723694, 0.8376666903495789, 0.8429999947547913, 0.843999981880188, 0.8446666598320007, 0.8489999771118164, 0.8513333201408386, 0.8513333201408386, 0.8536666631698608, 0.8529999852180481, 0.8553333282470703, 0.8613333106040955, 0.8566666841506958, 0.859000027179718, 0.8603333234786987, 0.8613333106040955, 0.8613333106040955]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0], [0, 9], [0], [0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], [0, 8, 1, 0, 2, 8, 1, 5, 4, 2, 9], [0, 0, 4, 7, 7], [0, 45, 9], [0, 1], [0], [1], [0]], "fitness": -0.8471428751945496, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.pow(grad, grad))), tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293327808380127, 2.1895499229431152, 1.7758090496063232, 1.3560688495635986, 1.0672129392623901, 0.9057042598724365, 0.8271067142486572, 0.8169483542442322, 0.7697370052337646, 0.7379742860794067, 0.691119909286499, 0.6883202791213989, 0.6551032662391663, 0.6338775753974915, 0.61819988489151, 0.6084626913070679, 0.5828744173049927, 0.5770007967948914, 0.5540450215339661, 0.5612748861312866, 0.5359020829200745, 0.5318267941474915, 0.5191732048988342, 0.5040502548217773, 0.49974462389945984, 0.4965250492095947, 0.4852807819843292, 0.48256462812423706, 0.46393075585365295, 0.4642474353313446, 0.44350117444992065, 0.4391615092754364, 0.42862656712532043, 0.42922404408454895, 0.41886287927627563, 0.41704994440078735, 0.42089271545410156, 0.3902166187763214, 0.3889216184616089, 0.3901539444923401, 0.3776036500930786, 0.3648849427700043, 0.3680996894836426, 0.3579377830028534, 0.35518699884414673, 0.3505360782146454, 0.34754806756973267, 0.34229159355163574, 0.3386918008327484, 0.3362220525741577], "accuracy": [0.1320829540491104, 0.3222824037075043, 0.43270373344421387, 0.5398229956626892, 0.6312243938446045, 0.6654338836669922, 0.6977941989898682, 0.7033417224884033, 0.6963412761688232, 0.7128516435623169, 0.7357020378112793, 0.7400607466697693, 0.7450799345970154, 0.7559106945991516, 0.7552502751350403, 0.7683265209197998, 0.7775723338127136, 0.7761194109916687, 0.7860256433486938, 0.7869502305984497, 0.7866860628128052, 0.791969358921051, 0.8025360107421875, 0.8059701323509216, 0.8033285140991211, 0.8105930685997009, 0.8169330358505249, 0.81548011302948, 0.8169330358505249, 0.8195747137069702, 0.8260467648506165, 0.8289526104927063, 0.833179235458374, 0.8308017253875732, 0.8388587832450867, 0.8380662798881531, 0.8432175517082214, 0.8543124794960022, 0.8573504090309143, 0.8462554216384888, 0.8519350290298462, 0.8588033318519592, 0.8581429123878479, 0.8614450097084045, 0.8613129258155823, 0.8590674996376038, 0.8646149635314941, 0.8729361891746521, 0.8697662353515625, 0.8696341514587402], "val_loss": [2.2451937198638916, 2.0185744762420654, 1.126513957977295, 0.824522852897644, 0.7335545420646667, 0.67735755443573, 0.6311622858047485, 0.6203375458717346, 0.6125297546386719, 0.5905971527099609, 0.5497556328773499, 0.5285564661026001, 0.5146574974060059, 0.5077149868011475, 0.500823974609375, 0.48105859756469727, 0.46803271770477295, 0.4576282501220703, 0.45170706510543823, 0.4508369266986847, 0.4495095908641815, 0.4419022500514984, 0.43442487716674805, 0.42609503865242004, 0.42585742473602295, 0.42298340797424316, 0.4039360284805298, 0.39729005098342896, 0.39791443943977356, 0.38766568899154663, 0.38740620017051697, 0.38156571984291077, 0.38133683800697327, 0.3762831687927246, 0.37519755959510803, 0.3884142339229584, 0.3805132508277893, 0.3756019175052643, 0.37899264693260193, 0.38582438230514526, 0.37820538878440857, 0.36973583698272705, 0.3762883245944977, 0.37255194783210754, 0.3816668391227722, 0.3858184516429901, 0.37578076124191284, 0.3785392642021179, 0.3829473555088043, 0.37671107053756714], "val_accuracy": [0.4256666600704193, 0.45899999141693115, 0.6633333563804626, 0.6973333358764648, 0.7356666922569275, 0.7543333172798157, 0.7486666440963745, 0.7406666874885559, 0.7639999985694885, 0.7756666541099548, 0.7856666445732117, 0.7876666784286499, 0.7933333516120911, 0.7976666688919067, 0.8043333292007446, 0.8140000104904175, 0.8190000057220459, 0.8226666450500488, 0.8213333487510681, 0.8259999752044678, 0.8303333520889282, 0.8376666903495789, 0.8389999866485596, 0.8460000157356262, 0.8379999995231628, 0.8396666646003723, 0.8476666808128357, 0.8506666421890259, 0.8533333539962769, 0.859666645526886, 0.862666666507721, 0.859666645526886, 0.859333336353302, 0.8600000143051147, 0.8600000143051147, 0.8629999756813049, 0.8690000176429749, 0.8726666569709778, 0.8673333525657654, 0.8663333058357239, 0.8636666536331177, 0.8696666955947876, 0.8730000257492065, 0.8769999742507935, 0.8786666393280029, 0.8733333349227905, 0.8723333477973938, 0.8723333477973938, 0.8709999918937683, 0.874666690826416]}, "mapping_values": [1, 10, 5, 5, 3, 2, 2, 0, 1, 16, 11, 5, 3, 2, 1, 1, 0], "tree_depth": 20}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8322857022285461, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4853936433792114, 0.74985671043396, 0.6430802345275879, 0.5849012136459351, 0.5573446750640869, 0.5293272137641907, 0.4802796542644501, 0.4685036242008209, 0.48722735047340393, 0.48207876086235046, 0.47785624861717224, 0.4797484576702118, 0.4443097710609436, 0.4566008448600769, 0.4804711639881134], "accuracy": [0.47549861669540405, 0.7359662055969238, 0.7675340175628662, 0.7815347909927368, 0.7924976944923401, 0.8079513907432556, 0.8235371708869934, 0.8245938420295715, 0.8255184292793274, 0.8253863453865051, 0.8248580098152161, 0.819442629814148, 0.8366134166717529, 0.8329150676727295, 0.8417646288871765], "val_loss": [0.7383268475532532, 0.5962966084480286, 0.5284723043441772, 0.5050719976425171, 0.47804883122444153, 0.455752968788147, 0.4336438775062561, 0.46068114042282104, 0.495890349149704, 0.5089395642280579, 0.4696270823478699, 0.4921453595161438, 0.4663194715976715, 0.5115863084793091, 0.5451514720916748], "val_accuracy": [0.7506666779518127, 0.8023333549499512, 0.8133333325386047, 0.8143333196640015, 0.8273333311080933, 0.8336666822433472, 0.8463333249092102, 0.8450000286102295, 0.8383333086967468, 0.8506666421890259, 0.8370000123977661, 0.8450000286102295, 0.8410000205039978, 0.8473333120346069, 0.8383333086967468]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0], [5, 2, 3, 0, 9], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [1, 2, 3, 0, 3, 5, 6, 3], [0, 2, 0, 3, 0, 5, 3], [16, 16, 56], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 2, 1, 4, 1, 4, 0, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 67, 61, 1]], "fitness": -0.11857143044471741, "mapping_values": [1, 7, 5, 2, 2, 15, 8, 7, 3, 2, 1, 1, 1, 17, 8, 9, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))), beta)", "other_info": {"loss": [262415904.0, 297751232.0, 306039744.0, 338374592.0, 15789332480.0, 402146688.0, 663039168.0, 2087934208.0, 17315985408.0, 3408411492352.0, 14944419446784.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08691058307886124, 0.0816272646188736, 0.0816272646188736, 0.09008057415485382, 0.08928807079792023, 0.08585391938686371, 0.09417514503002167, 0.08638224750757217, 0.08994849026203156, 0.09853387624025345, 0.10236428678035736, 0.11147800832986832, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [196369232.0, 196471856.0, 196208560.0, 196413024.0, 196947200.0, 306705312.0, 574433536.0, 1916228608.0, 6185063424.0, 5633636864.0, 6492083712.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.07133333384990692, 0.070333331823349, 0.07066666334867477, 0.0716666653752327, 0.07100000232458115, 0.06733333319425583, 0.09399999678134918, 0.06700000166893005, 0.09033333510160446, 0.10133333504199982, 0.11400000005960464, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 2, 3, 0, 3], [0, 1, 0, 2, 3], [39, 55], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], [0, 2, 3, 0, 3, 5, 2, 3, 6, 1, 6, 7, 5, 1, 9, 3, 6, 3, 2, 9], [0, 0, 0, 0, 2, 1, 0, 1, 4, 3, 4, 0, 0], [16, 89, 31, 29, 30, 78, 72, 13, 56], [0, 1], [0], [0], [94], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 2, 0, 0, 3, 4, 2, 0], [16, 99, 96, 53, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 33, 20, 13, 9, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.divide_no_nan(beta, tf.math.subtract(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), alpha))), grad)), grad)), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(grad, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, beta))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), sigma)))), grad), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0], [0, 1, 3, 1, 3, 5], [0, 3, 0, 1, 2], [39, 39], [0, 1], [0], [0], [54], [0, 1], [0], [0], [0], [0, 1], [0], [1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [57224336.0, 8696144896.0, 145595695104.0, 1045127692288.0, 4623473573888.0, 15071909511168.0], "accuracy": [0.09747721254825592, 0.09774138033390045, 0.09496764093637466, 0.09285431355237961, 0.09853387624025345, 0.10011887550354004], "val_loss": [585165504.0, 31537309696.0, 338485149696.0, 1845306589184.0, 6911931449344.0, 20388004233216.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 2, 3, 0, 3, 2, 3, 1, 9], [2, 1, 2, 2, 3, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 3], [0, 2, 0, 3, 3], [83, 16], [0, 1], [0], [0], [10], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 6, 1, 4, 2, 8], [0, 2, 0, 3, 0, 0, 3, 3, 2, 0], [16, 78, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.math.add(grad, tf.math.multiply(grad, tf.math.subtract(grad, grad))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(beta, tf.math.divide_no_nan(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), sigma), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}, "mapping_values": [1, 15, 9, 6, 1, 12, 7, 5, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18}]