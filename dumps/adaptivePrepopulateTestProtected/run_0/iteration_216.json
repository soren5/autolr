[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8611428737640381, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222381830215454, 1.8683485984802246, 1.4013020992279053, 1.0808790922164917, 0.9423559308052063, 0.8242605328559875, 0.774569034576416, 0.7240999341011047, 0.6926891207695007, 0.6655446290969849, 0.6354702115058899, 0.6193032264709473, 0.5861746072769165, 0.5762143135070801, 0.566974401473999, 0.5510894060134888, 0.527341902256012, 0.5236186385154724, 0.5127214193344116, 0.5065909624099731, 0.489377498626709, 0.4879772365093231, 0.47152307629585266, 0.46095243096351624, 0.4595034122467041, 0.4552035927772522, 0.43849238753318787, 0.4301338791847229, 0.423983633518219, 0.4159242510795593, 0.4094432592391968, 0.4095321595668793, 0.4048674404621124, 0.39900529384613037, 0.3924850821495056, 0.39487743377685547, 0.3745991587638855, 0.37766221165657043, 0.3697414696216583, 0.36422908306121826, 0.35979872941970825, 0.3494950532913208, 0.3495294153690338, 0.3451699912548065, 0.3380086421966553, 0.3352991044521332, 0.3279857337474823, 0.3256949782371521, 0.3237229287624359, 0.3144766390323639, 0.30944177508354187, 0.3046080768108368, 0.2914975583553314, 0.2944965660572052, 0.29101577401161194, 0.29031503200531006, 0.27714845538139343, 0.27802956104278564, 0.27675679326057434, 0.2724302411079407, 0.2614242136478424], "accuracy": [0.2794875204563141, 0.48646149039268494, 0.5617488026618958, 0.6221106648445129, 0.6653017997741699, 0.7051908373832703, 0.7224937081336975, 0.7409853339195251, 0.7486461400985718, 0.763439416885376, 0.7745344042778015, 0.7784969210624695, 0.7907806038856506, 0.7902522683143616, 0.8005547523498535, 0.8017435073852539, 0.8059701323509216, 0.8146876096725464, 0.8181217908859253, 0.819442629814148, 0.830669641494751, 0.8265751004219055, 0.834632158279419, 0.8319904804229736, 0.8359529972076416, 0.8380662798881531, 0.8450667262077332, 0.843481719493866, 0.8481045961380005, 0.8531237840652466, 0.8588033318519592, 0.8558974862098694, 0.8540483713150024, 0.8532558679580688, 0.86118084192276, 0.8551049828529358, 0.8663320541381836, 0.8627657890319824, 0.8702945709228516, 0.8701624870300293, 0.8754457831382751, 0.874389111995697, 0.878351628780365, 0.8791441321372986, 0.8829745054244995, 0.8790120482444763, 0.8804649114608765, 0.8856161832809448, 0.8836349248886108, 0.887597382068634, 0.8887861371040344, 0.8920882344245911, 0.8936732411384583, 0.8919561505317688, 0.8963148593902588, 0.8924844861030579, 0.902390718460083, 0.9013340473175049, 0.9045040011405945, 0.9055606722831726, 0.9045040011405945], "val_loss": [2.03798770904541, 1.5119273662567139, 1.0438470840454102, 0.8398767709732056, 0.745607852935791, 0.6894259452819824, 0.6430849432945251, 0.6099511981010437, 0.591993510723114, 0.5664733052253723, 0.5469732284545898, 0.5355550646781921, 0.5203180313110352, 0.5077176690101624, 0.49920690059661865, 0.4876668155193329, 0.47708356380462646, 0.47018489241600037, 0.4642828106880188, 0.45917457342147827, 0.4502963125705719, 0.4467596113681793, 0.4386138916015625, 0.4359062910079956, 0.42967894673347473, 0.4204130172729492, 0.41949352622032166, 0.41615262627601624, 0.4103587567806244, 0.40544888377189636, 0.4051106870174408, 0.4043748378753662, 0.40064412355422974, 0.4029853045940399, 0.4017372727394104, 0.3893258571624756, 0.39197421073913574, 0.38963544368743896, 0.38776901364326477, 0.3826189339160919, 0.3836911916732788, 0.3786660134792328, 0.37842991948127747, 0.3772548735141754, 0.3736536502838135, 0.37952351570129395, 0.36966267228126526, 0.3723013401031494, 0.36949747800827026, 0.37114107608795166, 0.36549466848373413, 0.3664472699165344, 0.36404314637184143, 0.3658592104911804, 0.3650397062301636, 0.3600563108921051, 0.35963329672813416, 0.36042630672454834, 0.35616886615753174, 0.36077478528022766, 0.3593286871910095], "val_accuracy": [0.5529999732971191, 0.656000018119812, 0.6830000281333923, 0.7053333520889282, 0.734333336353302, 0.7436666488647461, 0.7613333463668823, 0.7699999809265137, 0.7789999842643738, 0.7866666913032532, 0.7940000295639038, 0.8006666898727417, 0.8033333420753479, 0.812333345413208, 0.8133333325386047, 0.8173333406448364, 0.8259999752044678, 0.8286666870117188, 0.8330000042915344, 0.8320000171661377, 0.8349999785423279, 0.8393333554267883, 0.8433333039283752, 0.8443333506584167, 0.8460000157356262, 0.8503333330154419, 0.8523333072662354, 0.8500000238418579, 0.8560000061988831, 0.8573333621025085, 0.8553333282470703, 0.856333315372467, 0.8586666584014893, 0.859333336353302, 0.8566666841506958, 0.8619999885559082, 0.8569999933242798, 0.859333336353302, 0.8579999804496765, 0.8646666407585144, 0.8646666407585144, 0.8663333058357239, 0.8676666617393494, 0.8690000176429749, 0.8679999709129333, 0.8640000224113464, 0.8703333139419556, 0.8696666955947876, 0.8723333477973938, 0.8673333525657654, 0.8726666569709778, 0.8730000257492065, 0.875, 0.8723333477973938, 0.8709999918937683, 0.8769999742507935, 0.8743333220481873, 0.8730000257492065, 0.8740000128746033, 0.8740000128746033, 0.875333309173584]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 3, 2, 2, 7, 1, 5, 8, 7, 2], [0, 7, 2, 0, 4, 0, 7, 5, 5], [0, 20, 1], [0, 1], [0], [1], [0]], "fitness": -0.8391428589820862, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.multiply(tf.math.add(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.math.square(beta), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), grad), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2932803630828857, 2.1906015872955322, 1.7815006971359253, 1.3590983152389526, 1.093969464302063, 0.9309185743331909, 0.8507921695709229, 0.8297444581985474, 0.7833663821220398, 0.7645161747932434, 0.7162600159645081, 0.6949360370635986, 0.6675918698310852, 0.6295334696769714, 0.6252847909927368, 0.6094444990158081, 0.5856148600578308, 0.5753189921379089, 0.5643275380134583, 0.5525584816932678, 0.5393547415733337, 0.5263829231262207, 0.5199662446975708, 0.5031986832618713, 0.5038872957229614, 0.4906333386898041, 0.47014325857162476, 0.47281065583229065, 0.4540441930294037, 0.44942981004714966, 0.44635671377182007, 0.4329077899456024, 0.4227556586265564, 0.4261859655380249, 0.4131646156311035, 0.41018998622894287, 0.3914949893951416, 0.3879046142101288, 0.3698931336402893, 0.3778851628303528, 0.355623722076416, 0.3547157943248749, 0.3581516146659851, 0.3617485463619232, 0.362686425447464, 0.3445868194103241, 0.35307231545448303, 0.3323269188404083, 0.3278317153453827, 0.33482465147972107, 0.32259446382522583, 0.31558889150619507, 0.31310081481933594, 0.2982575297355652, 0.29768431186676025, 0.2972418963909149, 0.29021525382995605, 0.2901192605495453], "accuracy": [0.12798838317394257, 0.3214899003505707, 0.43626996874809265, 0.5480121374130249, 0.633469820022583, 0.6645092964172363, 0.6954167485237122, 0.6946242451667786, 0.7071720957756042, 0.7043983340263367, 0.7366266250610352, 0.7374191284179688, 0.7432307600975037, 0.759609043598175, 0.7617223858833313, 0.7705719470977783, 0.780610203742981, 0.7791573405265808, 0.7917051911354065, 0.7965922355651855, 0.7969884872436523, 0.7989697456359863, 0.8067626357078552, 0.8070268034934998, 0.8088759779930115, 0.8164047002792358, 0.8231409192085266, 0.8224804997444153, 0.8315942287445068, 0.8325188159942627, 0.8337075710296631, 0.8412362933158875, 0.8429533839225769, 0.8409721255302429, 0.8421608805656433, 0.8481045961380005, 0.850350022315979, 0.8537842035293579, 0.8582749962806702, 0.8564258217811584, 0.8610487580299377, 0.8622375130653381, 0.8603883385658264, 0.8590674996376038, 0.8642187118530273, 0.86553955078125, 0.8623695969581604, 0.8725399374961853, 0.8749174475669861, 0.8720116019248962, 0.8772949576377869, 0.8815215826034546, 0.8772949576377869, 0.8848236799240112, 0.8864086866378784, 0.8844274282455444, 0.8845595121383667, 0.8842953443527222], "val_loss": [2.245091438293457, 2.017702102661133, 1.1302865743637085, 0.8621035218238831, 0.7532713413238525, 0.696808934211731, 0.6531479954719543, 0.6435433030128479, 0.624262273311615, 0.5833045244216919, 0.5589563846588135, 0.5240179300308228, 0.5229343175888062, 0.5134840607643127, 0.49401310086250305, 0.48235762119293213, 0.48898792266845703, 0.47172635793685913, 0.469666987657547, 0.4567750096321106, 0.4622225761413574, 0.45085078477859497, 0.4471035599708557, 0.43343663215637207, 0.4330223798751831, 0.44136983156204224, 0.4273260533809662, 0.41985297203063965, 0.4199036955833435, 0.4151414930820465, 0.4129199981689453, 0.403450071811676, 0.4043731987476349, 0.39744627475738525, 0.3930785655975342, 0.39717599749565125, 0.3972453474998474, 0.3824881315231323, 0.3812287151813507, 0.3772318661212921, 0.37535685300827026, 0.3759576082229614, 0.3814396560192108, 0.38473477959632874, 0.37030085921287537, 0.3829770088195801, 0.37897661328315735, 0.3900305926799774, 0.40401026606559753, 0.3997306823730469, 0.3877184987068176, 0.3847429156303406, 0.3890215754508972, 0.408928781747818, 0.4155280888080597, 0.40029874444007874, 0.3797902762889862, 0.38181033730506897], "val_accuracy": [0.4286666810512543, 0.453000009059906, 0.6480000019073486, 0.6946666836738586, 0.7223333120346069, 0.7429999709129333, 0.731333315372467, 0.7436666488647461, 0.7546666860580444, 0.7789999842643738, 0.7766666412353516, 0.7940000295639038, 0.793666660785675, 0.7950000166893005, 0.8080000281333923, 0.7993333339691162, 0.8066666722297668, 0.8090000152587891, 0.812666654586792, 0.8190000057220459, 0.8116666674613953, 0.8206666707992554, 0.8193333148956299, 0.8336666822433472, 0.8316666483879089, 0.8233333230018616, 0.8326666951179504, 0.8389999866485596, 0.8420000076293945, 0.8416666388511658, 0.8486666679382324, 0.8493333458900452, 0.8453333377838135, 0.8456666469573975, 0.8500000238418579, 0.8513333201408386, 0.8516666889190674, 0.8569999933242798, 0.859333336353302, 0.8610000014305115, 0.859666645526886, 0.856333315372467, 0.8566666841506958, 0.8569999933242798, 0.8613333106040955, 0.8569999933242798, 0.859333336353302, 0.8640000224113464, 0.8646666407585144, 0.8676666617393494, 0.8636666536331177, 0.8673333525657654, 0.871666669845581, 0.8690000176429749, 0.8633333444595337, 0.8706666827201843, 0.8700000047683716, 0.871666669845581]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 21, 12, 9, 3, 2, 1, 1, 0], "tree_depth": 19}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 0, 1], [0, 3, 5], [0, 0], [0, 55], [1], [0], [2], [0]], "fitness": -0.8328571319580078, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.556180715560913, 0.8261570930480957, 0.6850438117980957, 0.6337521076202393, 0.5731667876243591, 0.5495293140411377, 0.524341881275177, 0.511015772819519, 0.5162012577056885, 0.5126967430114746, 0.5404859185218811], "accuracy": [0.47866860032081604, 0.7082287669181824, 0.750759482383728, 0.772288978099823, 0.7836481332778931, 0.8062343001365662, 0.8074230551719666, 0.8198388814926147, 0.8131026029586792, 0.8201030492782593, 0.8109893202781677], "val_loss": [0.8546504974365234, 0.6086075305938721, 0.5426195859909058, 0.5192239284515381, 0.5254984498023987, 0.49642908573150635, 0.49817052483558655, 0.4797736406326294, 0.5182875394821167, 0.542023241519928, 0.5518931746482849], "val_accuracy": [0.6976666450500488, 0.7789999842643738, 0.8033333420753479, 0.812333345413208, 0.8180000185966492, 0.8299999833106995, 0.8299999833106995, 0.828000009059906, 0.8299999833106995, 0.8276666402816772, 0.8163333535194397]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 5, 3, 2, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [4, 2, 3, 0, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 6, 5], [0, 2, 0, 3], [16, 16], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 8, 9, 4, 1, 0], [0, 5, 1, 3], [99, 71, 25], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 5, 7, 9, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 94, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 6, 4, 2, 1, 3, 3, 0, 1, 4, 2, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), tf.math.negative(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1150839296.0, 21649866752.0, 100410761216.0, 283584790528.0, 603908866048.0, 1087829573632.0], "accuracy": [0.10434553027153015, 0.10342095047235489, 0.09549596905708313, 0.0940430611371994, 0.09655263274908066, 0.10566636174917221], "val_loss": [5340119552.0, 42715799552.0, 144159358976.0, 341706178560.0, 667391688704.0, 1153243152384.0], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [8, 2, 3, 8, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [8, 8], [0], [0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 8, 1, 5, 6], [0, 5, 0, 3], [0, 2], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 1, 3, 6, 8, 8, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 0, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 3, 2, 1, 1, 9, 6, 3, 2, 13, 7, 6, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.math.square(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(sigma, tf.math.sqrt(tf.math.sqrt(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10315678268671036, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0], [8, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 8], [0], [0], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 9, 1, 6, 5, 5], [0, 5, 0, 3], [0, 68], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 3, 2, 1, 1, 2, 2, 0, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3039488792419434, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 3, 7, 3], [0, 1, 0, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 9], [0], [0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 6, 5, 6], [0, 4, 0, 6, 1], [0, 2], [0, 1], [0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0]], "fitness": -0.09000000357627869, "mapping_values": [1, 1, 0, 1, 1, 3, 3, 0, 1, 11, 6, 5, 2, 2, 1, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.subtract(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.divide_no_nan(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.310199737548828, 2.3092215061187744, 2.310389518737793, 2.310981035232544, 2.309497594833374, 2.309767246246338], "accuracy": [0.08915598690509796, 0.09338264167308807, 0.08928807079792023, 0.08598599582910538, 0.09866596013307571, 0.09589222073554993], "val_loss": [2.309312582015991, 2.309312582015991, 2.309312582015991, 2.309312582015991, 2.309312582015991, 2.309312582015991], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}}]