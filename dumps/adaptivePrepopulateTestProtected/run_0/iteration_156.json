[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8788571357727051, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223778247833252, 1.869816780090332, 1.3854763507843018, 1.0877859592437744, 0.9313703775405884, 0.8305619955062866, 0.7596983313560486, 0.7178841233253479, 0.678885817527771, 0.6427952647209167, 0.6314711570739746, 0.6065253019332886, 0.5803450345993042, 0.5689871311187744, 0.5544987320899963, 0.5336046814918518, 0.5189152956008911, 0.5142802596092224, 0.4972553849220276, 0.48589378595352173, 0.4789123237133026, 0.47044631838798523, 0.45680922269821167, 0.4485171139240265, 0.45258986949920654, 0.44318363070487976, 0.4277282655239105, 0.42588117718696594, 0.4205707907676697, 0.4097837805747986, 0.4017646610736847, 0.3997235894203186, 0.39143604040145874, 0.3813983201980591, 0.3799765408039093, 0.3789656162261963, 0.36794283986091614, 0.3624574840068817, 0.35929128527641296, 0.35348811745643616, 0.3508596420288086, 0.34113216400146484, 0.3462033271789551, 0.33102670311927795, 0.330086886882782, 0.32165828347206116, 0.3163209855556488, 0.31816115975379944, 0.30683767795562744, 0.30308493971824646, 0.3014288544654846, 0.2991333305835724, 0.3007844388484955, 0.29286450147628784, 0.28524908423423767, 0.28070855140686035, 0.2784059941768646, 0.26981455087661743, 0.2657836079597473, 0.26673373579978943, 0.2612868845462799, 0.2518042027950287, 0.25471100211143494, 0.24872227013111115, 0.2470250278711319, 0.2423699051141739, 0.2363964468240738, 0.2331322431564331, 0.2366485893726349, 0.22393356263637543, 0.22837325930595398, 0.218330517411232, 0.21717983484268188, 0.21057762205600739, 0.20735885202884674, 0.2054237574338913, 0.20540645718574524, 0.19891852140426636, 0.19594213366508484, 0.20225878059864044, 0.1904907077550888, 0.18262125551700592, 0.18921315670013428, 0.18402932584285736, 0.18388424813747406, 0.18099281191825867, 0.17825645208358765, 0.1715107411146164], "accuracy": [0.2751287817955017, 0.47906485199928284, 0.5712587237358093, 0.6231673359870911, 0.6653017997741699, 0.7033417224884033, 0.7341170310974121, 0.7374191284179688, 0.7518161535263062, 0.7711002230644226, 0.7761194109916687, 0.783119797706604, 0.7940827012062073, 0.7932901978492737, 0.8016114234924316, 0.8078193068504333, 0.8191784620285034, 0.8201030492782593, 0.8281601071357727, 0.8253863453865051, 0.8310658931732178, 0.8338396549224854, 0.8387266993522644, 0.8429533839225769, 0.8429533839225769, 0.8430854678153992, 0.8474441766738892, 0.8525954484939575, 0.8488970994949341, 0.8557654023170471, 0.8605204224586487, 0.8562937378883362, 0.8647470474243164, 0.8679170608520508, 0.8650112152099609, 0.867520809173584, 0.870030403137207, 0.8725399374961853, 0.8734645247459412, 0.8730682730674744, 0.8811253309249878, 0.8813894987106323, 0.8728041052818298, 0.8854840993881226, 0.8800686597824097, 0.885219931602478, 0.8873332738876343, 0.8868049383163452, 0.8886540532112122, 0.8912957310676575, 0.8923524022102356, 0.8920882344245911, 0.8905032277107239, 0.8961827754974365, 0.895918607711792, 0.8968431949615479, 0.8986923694610596, 0.9041078090667725, 0.9021265506744385, 0.902390718460083, 0.9058248400688171, 0.9096552729606628, 0.908730685710907, 0.9115044474601746, 0.9109761118888855, 0.9133535623550415, 0.9162594079971313, 0.9157310724258423, 0.9140139818191528, 0.9169198274612427, 0.9167877435684204, 0.9225993752479553, 0.9235239624977112, 0.9220710396766663, 0.9252410531044006, 0.9272223114967346, 0.9260335564613342, 0.9299960136413574, 0.9298639297485352, 0.9265618920326233, 0.9314489364624023, 0.9351472854614258, 0.930788516998291, 0.9344868659973145, 0.9322414398193359, 0.935279369354248, 0.9355435371398926, 0.9375247359275818], "val_loss": [2.043229818344116, 1.5252792835235596, 1.059319019317627, 0.8622859120368958, 0.7739511728286743, 0.712826669216156, 0.6653242111206055, 0.6353532075881958, 0.6145880818367004, 0.588234007358551, 0.5718778371810913, 0.5557640790939331, 0.5459425449371338, 0.525135338306427, 0.5168591141700745, 0.5053482055664062, 0.4997932016849518, 0.48488402366638184, 0.47919487953186035, 0.4703822433948517, 0.47141027450561523, 0.46116748452186584, 0.453118234872818, 0.44784554839134216, 0.44718751311302185, 0.43445050716400146, 0.4359551668167114, 0.42782077193260193, 0.42837169766426086, 0.4202001988887787, 0.41962215304374695, 0.41002556681632996, 0.40663206577301025, 0.40764692425727844, 0.40263956785202026, 0.3989400267601013, 0.3960455060005188, 0.39371103048324585, 0.3923947811126709, 0.3929206430912018, 0.3917257487773895, 0.3840952217578888, 0.3808329403400421, 0.3817606270313263, 0.37890157103538513, 0.37521520256996155, 0.3746592700481415, 0.3713971674442291, 0.3694106936454773, 0.36994099617004395, 0.36911842226982117, 0.3693079352378845, 0.36807316541671753, 0.3690676987171173, 0.36612769961357117, 0.36626964807510376, 0.36125749349594116, 0.3628350496292114, 0.36928442120552063, 0.3606704771518707, 0.35772624611854553, 0.3617168664932251, 0.3560544550418854, 0.3591160476207733, 0.35777518153190613, 0.35627302527427673, 0.3584086000919342, 0.3570273518562317, 0.3526735305786133, 0.35380101203918457, 0.3530525863170624, 0.35500773787498474, 0.35798314213752747, 0.3571338653564453, 0.35494470596313477, 0.35568180680274963, 0.3550068438053131, 0.35418087244033813, 0.3578505516052246, 0.3490322232246399, 0.35165348649024963, 0.3594669997692108, 0.3573257327079773, 0.35076624155044556, 0.35436558723449707, 0.35485583543777466, 0.35399290919303894, 0.3549942970275879], "val_accuracy": [0.5046666860580444, 0.6439999938011169, 0.6753333210945129, 0.6893333196640015, 0.7256666421890259, 0.7400000095367432, 0.7566666603088379, 0.7670000195503235, 0.7730000019073486, 0.7876666784286499, 0.7906666398048401, 0.7986666560173035, 0.8033333420753479, 0.8163333535194397, 0.8180000185966492, 0.8203333616256714, 0.8183333277702332, 0.82833331823349, 0.8303333520889282, 0.8323333263397217, 0.8263333439826965, 0.8370000123977661, 0.8410000205039978, 0.8399999737739563, 0.8399999737739563, 0.847000002861023, 0.843666672706604, 0.8476666808128357, 0.8493333458900452, 0.8533333539962769, 0.8493333458900452, 0.8579999804496765, 0.859000027179718, 0.8556666374206543, 0.8600000143051147, 0.862333357334137, 0.8613333106040955, 0.8606666922569275, 0.8610000014305115, 0.8673333525657654, 0.8650000095367432, 0.8603333234786987, 0.8673333525657654, 0.8690000176429749, 0.8700000047683716, 0.8703333139419556, 0.8726666569709778, 0.8713333606719971, 0.8700000047683716, 0.871666669845581, 0.874666690826416, 0.8733333349227905, 0.8733333349227905, 0.871666669845581, 0.8756666779518127, 0.874666690826416, 0.8759999871253967, 0.878000020980835, 0.8740000128746033, 0.8766666650772095, 0.8790000081062317, 0.8813333511352539, 0.8849999904632568, 0.8820000290870667, 0.8849999904632568, 0.8823333382606506, 0.8833333253860474, 0.8853333592414856, 0.8853333592414856, 0.8856666684150696, 0.8846666812896729, 0.8889999985694885, 0.8843333125114441, 0.8866666555404663, 0.887333333492279, 0.890999972820282, 0.8893333077430725, 0.8859999775886536, 0.8886666893959045, 0.8926666378974915, 0.890333354473114, 0.887333333492279, 0.8933333158493042, 0.8920000195503235, 0.8913333415985107, 0.890999972820282, 0.8916666507720947, 0.890666663646698]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8651428818702698, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2238893508911133, 1.8656926155090332, 1.3899402618408203, 1.1006041765213013, 0.9413594007492065, 0.8364771008491516, 0.7643929719924927, 0.7304339408874512, 0.6853871941566467, 0.6544379591941833, 0.6328566074371338, 0.6052712798118591, 0.5844812989234924, 0.5683802962303162, 0.5501073598861694, 0.5304660201072693, 0.5146957635879517, 0.5019668340682983, 0.49749115109443665, 0.48142629861831665, 0.47018155455589294, 0.46147769689559937, 0.457275927066803, 0.4530029892921448, 0.44084304571151733, 0.43202441930770874, 0.42867743968963623, 0.4144664704799652, 0.4073227345943451, 0.40207570791244507, 0.39231112599372864, 0.39185839891433716, 0.3853182792663574, 0.3781066834926605, 0.37863266468048096, 0.36966532468795776, 0.3619595170021057, 0.35236266255378723, 0.3493867814540863, 0.3450329899787903, 0.3417207598686218, 0.3342689871788025, 0.3340296149253845, 0.3297678232192993], "accuracy": [0.27724209427833557, 0.5013868808746338, 0.5708624720573425, 0.6148461103439331, 0.6561880707740784, 0.7034738063812256, 0.7170783281326294, 0.7339849472045898, 0.743891179561615, 0.7593448758125305, 0.7644960880279541, 0.7798177003860474, 0.7836481332778931, 0.7918372750282288, 0.7988376617431641, 0.8068947196006775, 0.8137630224227905, 0.8181217908859253, 0.8256505131721497, 0.8259146809577942, 0.8327829837799072, 0.8350284099578857, 0.8397833704948425, 0.8367455005645752, 0.8417646288871765, 0.8438779711723328, 0.8512746095657349, 0.8515387773513794, 0.8578787446022034, 0.8558974862098694, 0.8605204224586487, 0.8636903762817383, 0.8659358024597168, 0.8669924736022949, 0.8643507957458496, 0.8688416481018066, 0.8697662353515625, 0.8745211958885193, 0.8778232932090759, 0.874389111995697, 0.8820499181747437, 0.8824461698532104, 0.883238673210144, 0.8805969953536987], "val_loss": [2.03873872756958, 1.5154914855957031, 1.0432913303375244, 0.8492081165313721, 0.7567237019538879, 0.6993790864944458, 0.6558669209480286, 0.6193912625312805, 0.5986413955688477, 0.5711543560028076, 0.5594512224197388, 0.5346367359161377, 0.5213033556938171, 0.5097807049751282, 0.49987345933914185, 0.48929426074028015, 0.4745348393917084, 0.46747562289237976, 0.4631427824497223, 0.45547807216644287, 0.44768285751342773, 0.4425981342792511, 0.4400489926338196, 0.43436819314956665, 0.4312644302845001, 0.42437368631362915, 0.42079249024391174, 0.4170345962047577, 0.41828662157058716, 0.409891813993454, 0.4042971134185791, 0.40466171503067017, 0.40049952268600464, 0.39714550971984863, 0.3980288803577423, 0.39007803797721863, 0.38608381152153015, 0.38774755597114563, 0.38917139172554016, 0.38611868023872375, 0.38408374786376953, 0.3814258575439453, 0.3843861520290375, 0.37953320145606995], "val_accuracy": [0.5490000247955322, 0.6546666622161865, 0.6833333373069763, 0.7116666436195374, 0.7279999852180481, 0.7400000095367432, 0.762666642665863, 0.7733333110809326, 0.7766666412353516, 0.7893333435058594, 0.8026666641235352, 0.8096666932106018, 0.8173333406448364, 0.815666675567627, 0.8246666789054871, 0.82833331823349, 0.8323333263397217, 0.8349999785423279, 0.8363333344459534, 0.8423333168029785, 0.840666651725769, 0.8423333168029785, 0.8393333554267883, 0.8420000076293945, 0.8476666808128357, 0.8510000109672546, 0.8503333330154419, 0.8493333458900452, 0.8529999852180481, 0.8503333330154419, 0.8566666841506958, 0.8546666502952576, 0.8556666374206543, 0.8569999933242798, 0.8536666631698608, 0.859000027179718, 0.8606666922569275, 0.862666666507721, 0.8640000224113464, 0.859000027179718, 0.862333357334137, 0.859666645526886, 0.8633333444595337, 0.8640000224113464]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0], [0, 9], [0], [0], [1], [0], [2], [0]], "fitness": -0.822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4953886270523071, 0.7901454567909241, 0.6632039546966553, 0.5976269245147705, 0.5423715114593506, 0.5482968688011169, 0.5148762464523315, 0.4989577531814575, 0.4995068907737732, 0.5016079545021057, 0.48847007751464844, 0.48455744981765747, 0.4790474772453308], "accuracy": [0.47232863306999207, 0.7275128960609436, 0.76106196641922, 0.7817989587783813, 0.8029322624206543, 0.8055738806724548, 0.817989706993103, 0.8208954930305481, 0.8211596608161926, 0.8214238286018372, 0.8305375576019287, 0.8296129703521729, 0.8345000743865967], "val_loss": [0.7479238510131836, 0.6527888774871826, 0.5341644883155823, 0.4831778109073639, 0.4958779215812683, 0.4946128726005554, 0.4581958055496216, 0.4394809305667877, 0.5105632543563843, 0.4828539490699768, 0.4787321090698242, 0.47355058789253235, 0.45452043414115906], "val_accuracy": [0.737333357334137, 0.7670000195503235, 0.7979999780654907, 0.8246666789054871, 0.8226666450500488, 0.828000009059906, 0.8333333134651184, 0.8473333120346069, 0.8446666598320007, 0.8446666598320007, 0.8366666436195374, 0.846666693687439, 0.8413333296775818]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 4, 6, 1, 1, 6, 4, 6, 3, 3, 3, 5, 2, 3, 7, 6, 0, 6, 2, 1, 2, 1, 5, 3, 6, 1, 1, 2, 9, 2, 0, 6, 5, 2], [0, 4, 4, 4, 3, 1, 3, 2, 1, 1, 5, 4, 2, 3, 5, 5, 4, 1, 4, 2, 4, 4, 1, 0, 0, 4, 4], [0, 25, 23, 86], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8045714497566223, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(tf.math.divide_no_nan(tf.math.pow(tf.math.divide_no_nan(grad, tf.math.multiply(grad, grad)), grad), tf.math.multiply(alpha, tf.math.multiply(tf.math.square(grad), beta))), alpha), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.divide_no_nan(grad, tf.math.negative(tf.math.divide_no_nan(tf.math.add(grad, tf.math.subtract(tf.math.add(beta, tf.math.subtract(grad, grad)), tf.math.square(tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(tf.math.add(grad, grad), alpha), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.negative(tf.math.divide_no_nan(beta, tf.math.square(tf.math.add(grad, grad)))))), alpha)))), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), grad))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2929794788360596, 2.189120054244995, 1.77341890335083, 1.3465118408203125, 1.0578073263168335, 0.9319468140602112, 0.8578445911407471, 0.8404815196990967, 0.7839179039001465, 0.7527778744697571, 0.7060409784317017, 0.6783422827720642, 0.6588261723518372, 0.6247036457061768, 0.6226473450660706, 0.5942941904067993, 0.5777114033699036, 0.566334068775177, 0.5627346634864807, 0.53738933801651, 0.5268486142158508, 0.514309823513031, 0.49331700801849365, 0.4947274327278137, 0.47647130489349365, 0.4764343798160553, 0.45042961835861206, 0.450869083404541, 0.4354143738746643, 0.44723498821258545, 0.44285809993743896, 0.4207398295402527, 0.42835307121276855, 0.41121503710746765, 0.3992287814617157, 0.3941323161125183, 0.4020245671272278, 0.39584991335868835, 0.3766372799873352, 0.37300190329551697, 0.3690210282802582, 0.3610870838165283, 0.36802974343299866, 0.3476678729057312, 0.3619334399700165, 0.34956228733062744, 0.3379315733909607, 0.33600521087646484, 0.3427467346191406], "accuracy": [0.13195087015628815, 0.32518821954727173, 0.44525161385536194, 0.5492008924484253, 0.6321489810943604, 0.650640606880188, 0.6900013089179993, 0.7016246318817139, 0.7009642124176025, 0.7066437602043152, 0.722229540348053, 0.7360982894897461, 0.748778223991394, 0.763439416885376, 0.759609043598175, 0.7670056819915771, 0.7804781198501587, 0.7777044177055359, 0.7829877138137817, 0.7946110367774963, 0.7946110367774963, 0.7977809906005859, 0.8082155585289001, 0.8100647330284119, 0.8090080618858337, 0.8171972036361694, 0.8236692547798157, 0.8321225643157959, 0.8322546482086182, 0.8274996876716614, 0.8329150676727295, 0.8388587832450867, 0.837141752243042, 0.841500461101532, 0.8449346423149109, 0.8466516733169556, 0.8481045961380005, 0.8470479249954224, 0.857218325138092, 0.857218325138092, 0.8594637513160706, 0.8610487580299377, 0.8621054291725159, 0.8636903762817383, 0.8584070801734924, 0.8594637513160706, 0.8716153502464294, 0.8741249442100525, 0.8705587387084961], "val_loss": [2.246748924255371, 2.021880626678467, 1.1413495540618896, 0.8896816968917847, 0.7798769474029541, 0.7128246426582336, 0.6985267996788025, 0.6504881381988525, 0.6490683555603027, 0.6116432547569275, 0.5858353972434998, 0.5714861750602722, 0.5579221844673157, 0.5586553812026978, 0.5446324348449707, 0.5285184979438782, 0.5330644845962524, 0.5309059619903564, 0.5128247737884521, 0.5176892280578613, 0.5124154686927795, 0.5031494498252869, 0.4933927357196808, 0.48921728134155273, 0.48874276876449585, 0.48063692450523376, 0.47020140290260315, 0.4665737748146057, 0.45979130268096924, 0.4575974941253662, 0.46250128746032715, 0.4619545042514801, 0.4534446597099304, 0.44012215733528137, 0.4378783106803894, 0.43820157647132874, 0.43426522612571716, 0.42493879795074463, 0.4433249831199646, 0.42606690526008606, 0.4161215126514435, 0.4262649416923523, 0.43356558680534363, 0.40647488832473755, 0.4159100651741028, 0.4235559105873108, 0.43549785017967224, 0.4359475374221802, 0.4486311376094818], "val_accuracy": [0.40966665744781494, 0.4676666557788849, 0.6456666588783264, 0.6880000233650208, 0.7049999833106995, 0.7266666889190674, 0.7256666421890259, 0.7526666522026062, 0.7586666941642761, 0.7599999904632568, 0.7683333158493042, 0.7820000052452087, 0.7906666398048401, 0.7943333387374878, 0.7906666398048401, 0.8016666769981384, 0.7993333339691162, 0.8059999942779541, 0.8086666464805603, 0.8083333373069763, 0.8146666884422302, 0.8180000185966492, 0.8213333487510681, 0.824999988079071, 0.8286666870117188, 0.8296666741371155, 0.8360000252723694, 0.8360000252723694, 0.8353333473205566, 0.8393333554267883, 0.840666651725769, 0.8463333249092102, 0.8463333249092102, 0.8506666421890259, 0.8443333506584167, 0.8529999852180481, 0.8516666889190674, 0.8519999980926514, 0.8513333201408386, 0.856333315372467, 0.8569999933242798, 0.8603333234786987, 0.8613333106040955, 0.8659999966621399, 0.8650000095367432, 0.8646666407585144, 0.8636666536331177, 0.8643333315849304, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 61, 34, 27, 4, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 43}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], [3, 3, 3, 0, 3, 8, 3, 0], [0, 2, 0, 2, 2, 0], [39, 39, 41], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 6, 5], [1, 2, 0, 3], [22, 16], [0, 1], [0], [0], [23], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [6, 3, 1, 6, 8, 0, 4, 1, 2, 2, 8], [0, 4, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10599999874830246, "mapping_values": [1, 14, 8, 6, 3, 10, 6, 4, 1, 2, 1, 1, 1, 11, 6, 5, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.math.multiply(grad, tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), beta), tf.math.divide_no_nan(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.subtract(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [6.703834056854248, 81.28800964355469, 208.42088317871094, 379.6676025390625, 588.305419921875, 819.3974609375, 1100.546630859375, 1369.684814453125], "accuracy": [0.10460969805717468, 0.09853387624025345, 0.09668471664190292, 0.10487385839223862, 0.10170386731624603, 0.10091137140989304, 0.10157178342342377, 0.09787346422672272], "val_loss": [24.64607048034668, 90.21747589111328, 173.2565460205078, 288.8882141113281, 423.3427429199219, 591.3325805664062, 747.665771484375, 940.6199951171875], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.11433333158493042, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [2, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 0, 1, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 2, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 0, 6, 4, 2, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(grad), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3041207790374756, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 3], [0, 0, 0, 2, 3], [39, 39, 32], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 5, 3, 5], [3, 0, 0, 3], [16, 83], [0, 1], [0], [4], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 0, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 3, 10, 6, 4, 2, 2, 1, 1, 0, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), grad), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.303556442260742, 2.302586078643799, 2.3025858402252197, 2.3025856018066406, 2.3025856018066406, 2.3025856018066406, 2.3025858402252197], "accuracy": [0.09219389408826828, 0.09430722147226334, 0.09708096832036972, 0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025851249694824, 2.3025848865509033, 2.3025848865509033, 2.3025848865509033, 2.302584648132324, 2.3025848865509033, 2.302584648132324], "val_accuracy": [0.10000000149011612, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 4, 3, 4], [0, 1, 0, 2, 0, 2], [39, 39, 41], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 5, 1, 4, 1, 4, 2, 0, 5], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 28, 61, 1]], "fitness": -0.09314285963773727, "mapping_values": [1, 12, 6, 6, 3, 2, 1, 1, 1, 2, 1, 1, 1, 22, 12, 10, 6], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.pow(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.negative(tf.math.square(alpha))))))), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3098113536834717, 2.3099658489227295, 2.3100993633270264, 2.311156749725342, 2.3104746341705322, 2.310028314590454], "accuracy": [0.09140139818191528, 0.08968432247638702, 0.08836349099874496, 0.09008057415485382, 0.08677849918603897, 0.09391097724437714], "val_loss": [2.3079867362976074, 2.3079867362976074, 2.3079867362976074, 2.3079867362976074, 2.3079867362976074, 2.3079867362976074], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}}]