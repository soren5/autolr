[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8617143034934998, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2244532108306885, 1.8715418577194214, 1.3965545892715454, 1.1080384254455566, 0.940710186958313, 0.852470338344574, 0.7716811299324036, 0.7345935702323914, 0.7122634649276733, 0.668915331363678, 0.6482842564582825, 0.6233841180801392, 0.6036878228187561, 0.583088755607605, 0.5765897035598755, 0.5493291020393372, 0.5371301174163818, 0.5303449630737305, 0.5196543335914612, 0.5093228220939636, 0.49803730845451355, 0.4960802495479584, 0.4826350212097168, 0.47791585326194763, 0.4616798460483551, 0.45295974612236023, 0.4383232593536377, 0.43224582076072693, 0.4262714385986328, 0.42525577545166016, 0.4103640615940094, 0.41096922755241394, 0.4136960208415985, 0.3999144434928894, 0.4000556170940399, 0.38241103291511536, 0.37841320037841797, 0.3729088604450226, 0.3601096570491791, 0.37057292461395264, 0.3637021780014038, 0.3583206236362457, 0.3455030620098114, 0.34211376309394836, 0.3418072462081909, 0.328823059797287, 0.32754260301589966, 0.32705095410346985, 0.31627941131591797, 0.3137439787387848, 0.31002041697502136, 0.3022324740886688, 0.2923826277256012, 0.29557156562805176, 0.29356351494789124, 0.2797606885433197, 0.27763551473617554, 0.270956426858902, 0.2716202735900879, 0.2697315216064453, 0.2641124725341797, 0.26147666573524475, 0.25528448820114136, 0.24622957408428192, 0.2499442994594574], "accuracy": [0.26324132084846497, 0.4888390004634857, 0.5638620853424072, 0.6144498586654663, 0.6616035103797913, 0.6946242451667786, 0.7238145470619202, 0.7349095344543457, 0.7405890822410583, 0.7541936039924622, 0.7580240368843079, 0.7759873270988464, 0.7771760821342468, 0.7878747582435608, 0.7886672616004944, 0.8014793395996094, 0.8029322624206543, 0.81112140417099, 0.8103289008140564, 0.8123101592063904, 0.8186501264572144, 0.8198388814926147, 0.8284242749214172, 0.82683926820755, 0.8329150676727295, 0.8381983637809753, 0.8424250483512878, 0.845859169960022, 0.8495575189590454, 0.845859169960022, 0.8584070801734924, 0.8536521196365356, 0.8541803956031799, 0.8585391640663147, 0.8549728989601135, 0.8665962219238281, 0.8631620407104492, 0.869502067565918, 0.8709549307823181, 0.86553955078125, 0.8693699836730957, 0.8726720213890076, 0.8728041052818298, 0.8747853636741638, 0.8753136992454529, 0.885219931602478, 0.8815215826034546, 0.8795403242111206, 0.8860124349594116, 0.8849557638168335, 0.8887861371040344, 0.8932769894599915, 0.8939374089241028, 0.8948619961738586, 0.8928807377815247, 0.8973715305328369, 0.9005415439605713, 0.9005415439605713, 0.9017302989959717, 0.902390718460083, 0.904768168926239, 0.90423983335495, 0.9055606722831726, 0.9089948534965515, 0.9096552729606628], "val_loss": [2.0417816638946533, 1.5225515365600586, 1.0496028661727905, 0.841412365436554, 0.75081866979599, 0.6958961486816406, 0.6468625664710999, 0.6155422925949097, 0.5870164632797241, 0.5652801394462585, 0.5483462810516357, 0.5311025977134705, 0.5146952271461487, 0.5075015425682068, 0.48950788378715515, 0.47834914922714233, 0.46661654114723206, 0.4622369706630707, 0.45173192024230957, 0.4437921643257141, 0.44020670652389526, 0.4371350109577179, 0.42483505606651306, 0.4299624562263489, 0.416978120803833, 0.406940221786499, 0.4071632921695709, 0.4012734293937683, 0.3995729982852936, 0.3866695165634155, 0.3879198431968689, 0.3817865252494812, 0.3831717073917389, 0.37850332260131836, 0.3735801577568054, 0.37406274676322937, 0.3700617551803589, 0.365139901638031, 0.3641701638698578, 0.3624565899372101, 0.3613831400871277, 0.3556351363658905, 0.3553984761238098, 0.35173577070236206, 0.349003404378891, 0.3432847559452057, 0.3456125557422638, 0.3419504463672638, 0.33931100368499756, 0.33734121918678284, 0.3375266492366791, 0.3324289321899414, 0.33133837580680847, 0.33264291286468506, 0.3341672420501709, 0.3320096433162689, 0.3290035128593445, 0.33220502734184265, 0.3294197916984558, 0.3251056373119354, 0.3280264139175415, 0.3246910572052002, 0.33261528611183167, 0.3247244954109192, 0.32244062423706055], "val_accuracy": [0.5266666412353516, 0.6463333368301392, 0.6733333468437195, 0.7073333263397217, 0.7316666841506958, 0.7473333477973938, 0.7630000114440918, 0.7633333206176758, 0.7796666622161865, 0.7893333435058594, 0.793666660785675, 0.8063333630561829, 0.8159999847412109, 0.8163333535194397, 0.8266666531562805, 0.831333339214325, 0.8413333296775818, 0.840666651725769, 0.8429999947547913, 0.8453333377838135, 0.8460000157356262, 0.8476666808128357, 0.8536666631698608, 0.8486666679382324, 0.8566666841506958, 0.8566666841506958, 0.8586666584014893, 0.859666645526886, 0.8606666922569275, 0.8633333444595337, 0.8640000224113464, 0.8656666874885559, 0.8700000047683716, 0.8686666488647461, 0.8679999709129333, 0.8650000095367432, 0.8709999918937683, 0.8713333606719971, 0.8713333606719971, 0.8733333349227905, 0.871999979019165, 0.8730000257492065, 0.871666669845581, 0.875, 0.8756666779518127, 0.8790000081062317, 0.8769999742507935, 0.8806666731834412, 0.8769999742507935, 0.8806666731834412, 0.8786666393280029, 0.8820000290870667, 0.8806666731834412, 0.8820000290870667, 0.8796666860580444, 0.8813333511352539, 0.8823333382606506, 0.8830000162124634, 0.8833333253860474, 0.8853333592414856, 0.8806666731834412, 0.8843333125114441, 0.8820000290870667, 0.8836666941642761, 0.8823333382606506]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8517143130302429, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2936501502990723, 2.1919164657592773, 1.7731989622116089, 1.3407976627349854, 1.06328284740448, 0.9053372144699097, 0.828042209148407, 0.8136069774627686, 0.7657011151313782, 0.7232468128204346, 0.6886279582977295, 0.6734316945075989, 0.636483371257782, 0.621817946434021, 0.6029490232467651, 0.5819301605224609, 0.5791024565696716, 0.5583694577217102, 0.5586421489715576, 0.5490518808364868, 0.5264245867729187, 0.5284812450408936, 0.5064143538475037, 0.4923247992992401, 0.48730793595314026, 0.4822244644165039, 0.47025108337402344, 0.4657209813594818, 0.4484635293483734, 0.4417206645011902, 0.42761752009391785, 0.4196658730506897, 0.4151207506656647, 0.4036496877670288, 0.40377455949783325, 0.38560187816619873, 0.38285478949546814, 0.3835814595222473, 0.3684655725955963], "accuracy": [0.12693171203136444, 0.3225465714931488, 0.4377228915691376, 0.5449742674827576, 0.6351869106292725, 0.6720380187034607, 0.69673752784729, 0.7028133869171143, 0.7104741930961609, 0.7238145470619202, 0.7458723783493042, 0.7436270117759705, 0.7619865536689758, 0.767401933670044, 0.7662131786346436, 0.7784969210624695, 0.7746664881706238, 0.7844406366348267, 0.7911768555641174, 0.7909126877784729, 0.7967243194580078, 0.7951393723487854, 0.8031964302062988, 0.8152159452438354, 0.8173292875289917, 0.8203672170639038, 0.8214238286018372, 0.8224804997444153, 0.8273676037788391, 0.8347642421722412, 0.8397833704948425, 0.8342359066009521, 0.8428213000297546, 0.8432175517082214, 0.8407079577445984, 0.8512746095657349, 0.8535200357437134, 0.8515387773513794, 0.858671247959137], "val_loss": [2.2461001873016357, 2.0205962657928467, 1.1144181489944458, 0.8414157032966614, 0.7393683195114136, 0.7013077735900879, 0.6727809309959412, 0.638627827167511, 0.5962992906570435, 0.5866291522979736, 0.5535920858383179, 0.5460468530654907, 0.5247789621353149, 0.513846755027771, 0.5033814907073975, 0.4945763051509857, 0.4855094254016876, 0.47020378708839417, 0.46680736541748047, 0.46690359711647034, 0.4651201069355011, 0.4559856355190277, 0.4531187415122986, 0.4393491744995117, 0.4303302466869354, 0.4318373501300812, 0.4290090799331665, 0.4166797995567322, 0.41219377517700195, 0.41722020506858826, 0.4037734270095825, 0.4047583341598511, 0.40991324186325073, 0.3958180248737335, 0.4049515724182129, 0.40949878096580505, 0.41197407245635986, 0.39497897028923035, 0.39590519666671753], "val_accuracy": [0.41333332657814026, 0.4873333275318146, 0.6703333258628845, 0.7053333520889282, 0.7223333120346069, 0.7459999918937683, 0.7559999823570251, 0.7633333206176758, 0.7743333578109741, 0.7799999713897705, 0.7796666622161865, 0.7876666784286499, 0.7866666913032532, 0.809333324432373, 0.8036666512489319, 0.8056666851043701, 0.8176666498184204, 0.8180000185966492, 0.8230000138282776, 0.8186666369438171, 0.8103333115577698, 0.8216666579246521, 0.8259999752044678, 0.8386666774749756, 0.8389999866485596, 0.8416666388511658, 0.8416666388511658, 0.8486666679382324, 0.8523333072662354, 0.8426666855812073, 0.8543333411216736, 0.8539999723434448, 0.8493333458900452, 0.8619999885559082, 0.8579999804496765, 0.859333336353302, 0.8556666374206543, 0.8573333621025085, 0.8606666922569275]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8199999928474426, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6922097206115723, 0.9039291143417358, 0.7713496685028076, 0.8643329739570618, 0.7079297304153442, 0.669403612613678, 0.6320813298225403, 0.5783053040504456, 0.5818737149238586, 0.5896470546722412, 0.576561689376831, 0.5743178129196167, 0.5465276837348938, 0.5656083226203918, 0.5989001989364624, 0.581481397151947, 0.5884507298469543, 0.5700950622558594, 0.5649545192718506, 0.5704281330108643, 0.5483664274215698, 0.5823789238929749, 0.5573034882545471], "accuracy": [0.4714040458202362, 0.6923788189888, 0.7243428826332092, 0.7434949278831482, 0.7598732113838196, 0.7516840696334839, 0.7844406366348267, 0.7889314293861389, 0.7872143983840942, 0.7878747582435608, 0.7928939461708069, 0.8049134612083435, 0.807158887386322, 0.8045172095298767, 0.8053097128868103, 0.8045172095298767, 0.7918372750282288, 0.7998943328857422, 0.8152159452438354, 0.8129705190658569, 0.8138951063156128, 0.8001585006713867, 0.8131026029586792], "val_loss": [0.9453113675117493, 0.6955451369285583, 0.71047443151474, 0.6991942524909973, 0.5831940770149231, 0.5364906191825867, 0.5387380123138428, 0.5205122232437134, 0.5539929866790771, 0.5577488541603088, 0.5526046752929688, 0.52713942527771, 0.5741904973983765, 0.5937603712081909, 0.5526216626167297, 0.5508575439453125, 0.5527435541152954, 0.5311687588691711, 0.563468337059021, 0.560508131980896, 0.5348601937294006, 0.5903272032737732, 0.5873852968215942], "val_accuracy": [0.7003333568572998, 0.7603333592414856, 0.7409999966621399, 0.7820000052452087, 0.7919999957084656, 0.8069999814033508, 0.8133333325386047, 0.812666654586792, 0.8090000152587891, 0.8053333163261414, 0.8209999799728394, 0.82833331823349, 0.8086666464805603, 0.824999988079071, 0.8296666741371155, 0.8163333535194397, 0.8136666417121887, 0.8353333473205566, 0.8259999752044678, 0.8226666450500488, 0.8243333101272583, 0.8140000104904175, 0.8296666741371155]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 5, 3, 2, 3], [2, 1, 0, 2], [83, 99, 27], [1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [0], [1, 0, 1, 1], [9, 8], [4, 4], [0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 21, 11, 10, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 22], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [0, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 2, 4, 2, 8], [0, 4, 0, 4, 3, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), tf.math.add(sigma, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 88], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 9, 5], [3, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [3, 1, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 6, 3, 3, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma), alpha)", "other_info": {"loss": [5543067136.0, 6965544615936.0, 421466952695808.0, 7396933874221056.0, 6.838260956607283e+16, 3.938675363382559e+17], "accuracy": [0.1014397069811821, 0.09919429570436478, 0.10408136248588562, 0.10157178342342377, 0.10157178342342377, 0.09998679161071777], "val_loss": [106270957568.0, 41909376516096.0, 1472595304120320.0, 1.874161807707341e+16, 1.3591174041095373e+17, 6.882281021316792e+17], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 1, 2, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 6, 7, 1], [0, 4, 2, 1, 4], [16, 16], [0, 1, 1, 1], [0, 5], [0], [65], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 5, 6, 8, 7, 1, 1, 6], [1, 4, 4, 1, 1, 0, 5], [16, 99, 96, 99, 61, 1]], "fitness": -0.0965714305639267, "mapping_values": [1, 9, 5, 4, 1, 11, 6, 5, 1, 2, 1, 1, 1, 4, 3, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, tf.math.subtract(alpha, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.square(alpha)))", "other_info": {"loss": [2.3059194087982178, 2.30176043510437, 2.302478313446045, 2.302713394165039, 2.302665948867798, 2.302703857421875], "accuracy": [0.08928807079792023, 0.10157178342342377, 0.11411966383457184, 0.09853387624025345, 0.09787346422672272, 0.09747721254825592], "val_loss": [2.3014562129974365, 2.3021419048309326, 2.3027305603027344, 2.302685499191284, 2.3027048110961914, 2.302760362625122], "val_accuracy": [0.10599999874830246, 0.08633333444595337, 0.09700000286102295, 0.10100000351667404, 0.10199999809265137, 0.10233332961797714]}}]