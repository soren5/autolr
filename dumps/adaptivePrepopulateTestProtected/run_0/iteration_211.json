[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.871999979019165, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2238850593566895, 1.8723580837249756, 1.4079996347427368, 1.1009399890899658, 0.9575326442718506, 0.8496248126029968, 0.7824221849441528, 0.7369057536125183, 0.6991923451423645, 0.6645044088363647, 0.6401814818382263, 0.6228166818618774, 0.6070191860198975, 0.5938854217529297, 0.5650680065155029, 0.5601570010185242, 0.5435335040092468, 0.529330849647522, 0.5182262659072876, 0.514250636100769, 0.49542856216430664, 0.4896085262298584, 0.482065349817276, 0.4733225703239441, 0.4657115340232849, 0.45689260959625244, 0.4473319947719574, 0.4428974986076355, 0.44286248087882996, 0.4294995665550232, 0.4214238226413727, 0.409842848777771, 0.4161968231201172, 0.3987036645412445, 0.3977750539779663, 0.389476478099823, 0.38436028361320496, 0.3810252845287323, 0.37684372067451477, 0.3694140911102295, 0.36659398674964905, 0.35814905166625977, 0.3540383577346802, 0.3464241623878479, 0.3458555042743683, 0.3392466604709625, 0.33494433760643005, 0.3241429924964905, 0.32310789823532104, 0.32176876068115234], "accuracy": [0.2697133719921112, 0.4893673360347748, 0.5567296147346497, 0.6189407110214233, 0.656980574131012, 0.6942279934883118, 0.7181349992752075, 0.7323999404907227, 0.744419515132904, 0.7584202885627747, 0.759609043598175, 0.7729493975639343, 0.77677983045578, 0.7828556299209595, 0.7947431206703186, 0.7960638999938965, 0.8049134612083435, 0.8061022162437439, 0.8117818236351013, 0.81548011302948, 0.8191784620285034, 0.824329674243927, 0.8297450542449951, 0.83119797706604, 0.8352925777435303, 0.837141752243042, 0.8403117060661316, 0.8425571322441101, 0.8401796221733093, 0.8455950617790222, 0.8488970994949341, 0.8515387773513794, 0.8543124794960022, 0.8565579056739807, 0.8605204224586487, 0.8601241707801819, 0.8610487580299377, 0.8590674996376038, 0.8648791313171387, 0.8673887252807617, 0.8696341514587402, 0.8687095642089844, 0.8688416481018066, 0.8757099509239197, 0.8768987059593201, 0.8770307898521423, 0.880729079246521, 0.882710337638855, 0.8831065893173218, 0.8800686597824097], "val_loss": [2.041308641433716, 1.5194841623306274, 1.0491619110107422, 0.8454857468605042, 0.7556413412094116, 0.703645646572113, 0.6627925038337708, 0.6258900761604309, 0.5970441699028015, 0.5753967761993408, 0.5613927245140076, 0.5467779636383057, 0.530472993850708, 0.5144547820091248, 0.5034571886062622, 0.4925905764102936, 0.4811733365058899, 0.4743054509162903, 0.46583569049835205, 0.45920291543006897, 0.4538222551345825, 0.4455544352531433, 0.43745535612106323, 0.4343310594558716, 0.43048831820487976, 0.42360228300094604, 0.4169107973575592, 0.4132663607597351, 0.40863752365112305, 0.40294596552848816, 0.4007836878299713, 0.3961116671562195, 0.3943232297897339, 0.39130327105522156, 0.3906177580356598, 0.39011111855506897, 0.38649797439575195, 0.3813137710094452, 0.3814200162887573, 0.3768673837184906, 0.37775835394859314, 0.36980435252189636, 0.3683391511440277, 0.3720061182975769, 0.3618578612804413, 0.3653384745121002, 0.3654342591762543, 0.3615969121456146, 0.35808444023132324, 0.3591548204421997], "val_accuracy": [0.5529999732971191, 0.6589999794960022, 0.6759999990463257, 0.699999988079071, 0.7193333506584167, 0.7396666407585144, 0.7536666393280029, 0.7606666684150696, 0.765333354473114, 0.7879999876022339, 0.7873333096504211, 0.7946666479110718, 0.7973333597183228, 0.8143333196640015, 0.8163333535194397, 0.8213333487510681, 0.828000009059906, 0.8263333439826965, 0.8326666951179504, 0.8346666693687439, 0.8353333473205566, 0.8376666903495789, 0.8413333296775818, 0.8486666679382324, 0.8453333377838135, 0.8493333458900452, 0.8513333201408386, 0.8489999771118164, 0.8536666631698608, 0.8579999804496765, 0.856333315372467, 0.859000027179718, 0.859333336353302, 0.8613333106040955, 0.8610000014305115, 0.8606666922569275, 0.859333336353302, 0.8669999837875366, 0.8640000224113464, 0.8653333187103271, 0.8709999918937683, 0.8653333187103271, 0.8723333477973938, 0.8690000176429749, 0.874666690826416, 0.8700000047683716, 0.8679999709129333, 0.8743333220481873, 0.871999979019165, 0.8730000257492065]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 3, 4, 2, 2, 3, 4, 3, 4, 4, 0, 1, 1, 6, 0, 6, 6, 8, 2, 7, 3, 6, 5, 6, 5, 8, 2, 4, 4, 4, 2, 4, 1, 0, 0, 6, 5, 5, 1, 1, 9, 6, 3, 1, 6, 4, 2, 8, 5, 3, 8, 8, 8, 5, 0, 3, 3, 4, 3, 3, 2, 4, 6, 9, 4, 9, 9], [0, 2, 4, 1, 3, 1, 3, 3, 1, 0, 5, 2, 2, 0, 4, 4, 1, 2, 4, 0, 0, 4, 2, 5, 3, 4, 1, 5, 4, 5, 5, 3, 4, 3, 1, 5, 3, 4, 0, 3, 2, 1], [0, 91, 46, 8, 18, 51, 73, 43, 72, 44], [0, 0, 1], [0, 0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8485714197158813, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.add(tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(beta, grad)), alpha), tf.math.pow(tf.math.pow(grad, tf.math.negative(tf.math.subtract(tf.math.subtract(tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.add(grad, grad)), tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.square(tf.math.divide_no_nan(beta, tf.math.square(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(tf.math.pow(tf.math.pow(grad, tf.math.pow(tf.math.add(tf.math.pow(grad, tf.math.subtract(tf.math.negative(tf.math.negative(alpha)), beta)), grad), tf.math.divide_no_nan(tf.math.square(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, beta))))))), grad), grad))))), grad))), tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.square(alpha)), grad), tf.math.multiply(tf.math.sqrt(tf.math.sqrt(grad)), tf.math.sqrt(grad))), tf.math.square(grad)), grad), tf.math.negative(grad)))), grad), alpha), tf.math.multiply(grad, tf.math.multiply(tf.math.pow(tf.math.multiply(grad, tf.math.multiply(tf.math.add(grad, tf.math.pow(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), grad))), tf.math.pow(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), beta))), alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2937796115875244, 2.190497636795044, 1.7655495405197144, 1.3402936458587646, 1.0552845001220703, 0.9016672968864441, 0.8314886689186096, 0.8167198300361633, 0.7476704716682434, 0.7315000891685486, 0.6991042494773865, 0.6570042371749878, 0.6372256278991699, 0.617330014705658, 0.6061241626739502, 0.5971189141273499, 0.5854429602622986, 0.5550283193588257, 0.5342720150947571, 0.548630952835083, 0.5262031555175781, 0.5345702171325684, 0.513465166091919, 0.4990762174129486, 0.49324163794517517, 0.4803819954395294, 0.47172725200653076, 0.4697549641132355, 0.46998149156570435, 0.458073228597641, 0.44963955879211426, 0.42854127287864685, 0.43922507762908936, 0.4138215482234955, 0.42299267649650574, 0.41159412264823914, 0.4106045663356781, 0.39039114117622375, 0.3915354311466217, 0.38586992025375366, 0.3767003118991852, 0.3740667998790741, 0.3555521070957184, 0.3543068766593933, 0.3492790460586548, 0.3487356901168823, 0.3438713550567627, 0.33918362855911255, 0.35688990354537964, 0.34001845121383667, 0.3343563973903656, 0.33196109533309937, 0.3178205192089081], "accuracy": [0.12838461995124817, 0.32967904210090637, 0.44445911049842834, 0.5519746541976929, 0.6479989290237427, 0.672170102596283, 0.7022850513458252, 0.7077004313468933, 0.7197200059890747, 0.7217012047767639, 0.7333245277404785, 0.7520803213119507, 0.7607977986335754, 0.7691190242767334, 0.772288978099823, 0.780610203742981, 0.7860256433486938, 0.7885351777076721, 0.7935543656349182, 0.7940827012062073, 0.807158887386322, 0.7979130744934082, 0.8018755912780762, 0.8131026029586792, 0.8156121969223022, 0.8107251524925232, 0.8203672170639038, 0.8231409192085266, 0.8178576231002808, 0.8249900937080383, 0.8317263126373291, 0.8389908671379089, 0.8338396549224854, 0.8428213000297546, 0.8363492488861084, 0.8417646288871765, 0.8470479249954224, 0.8495575189590454, 0.8543124794960022, 0.8552370667457581, 0.8555012345314026, 0.8532558679580688, 0.8643507957458496, 0.870030403137207, 0.8643507957458496, 0.8625016212463379, 0.867520809173584, 0.8721436858177185, 0.867520809173584, 0.8632941246032715, 0.8658037185668945, 0.8722757697105408, 0.871879518032074], "val_loss": [2.247169256210327, 2.0265250205993652, 1.1527891159057617, 0.9038270115852356, 0.7743049263954163, 0.724140465259552, 0.6847347021102905, 0.6652030348777771, 0.641444981098175, 0.6207823753356934, 0.5796750783920288, 0.5605840086936951, 0.5369313359260559, 0.5221642851829529, 0.511152982711792, 0.5044873356819153, 0.49862170219421387, 0.49089694023132324, 0.47829121351242065, 0.4756062924861908, 0.469673752784729, 0.4675711393356323, 0.45809054374694824, 0.4450520873069763, 0.44272199273109436, 0.43887510895729065, 0.44212475419044495, 0.425629198551178, 0.42614132165908813, 0.4176988899707794, 0.41522493958473206, 0.416229784488678, 0.4038720726966858, 0.41684943437576294, 0.40241724252700806, 0.3990781307220459, 0.3970441222190857, 0.39365914463996887, 0.40282243490219116, 0.4006491005420685, 0.3855293393135071, 0.3804137408733368, 0.38843661546707153, 0.39959561824798584, 0.3927043080329895, 0.38946253061294556, 0.38699689507484436, 0.3880085349082947, 0.380841463804245, 0.3877091407775879, 0.3732439875602722, 0.3822149932384491, 0.39124879240989685], "val_accuracy": [0.4169999957084656, 0.46133333444595337, 0.6370000243186951, 0.6893333196640015, 0.7179999947547913, 0.7283333539962769, 0.7396666407585144, 0.7456666827201843, 0.7563333511352539, 0.7606666684150696, 0.7620000243186951, 0.7829999923706055, 0.7856666445732117, 0.79666668176651, 0.8056666851043701, 0.7993333339691162, 0.8069999814033508, 0.8106666803359985, 0.8106666803359985, 0.809333324432373, 0.8169999718666077, 0.8246666789054871, 0.8216666579246521, 0.8339999914169312, 0.8383333086967468, 0.8353333473205566, 0.8289999961853027, 0.8416666388511658, 0.8426666855812073, 0.8443333506584167, 0.8450000286102295, 0.8376666903495789, 0.8556666374206543, 0.8503333330154419, 0.8533333539962769, 0.8569999933242798, 0.859333336353302, 0.8603333234786987, 0.8576666712760925, 0.859000027179718, 0.859333336353302, 0.8653333187103271, 0.8666666746139526, 0.8579999804496765, 0.859000027179718, 0.8613333106040955, 0.8693333268165588, 0.8709999918937683, 0.8690000176429749, 0.8643333315849304, 0.8673333525657654, 0.8669999837875366, 0.8679999709129333]}, "mapping_values": [1, 10, 5, 5, 3, 109, 67, 42, 10, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 47}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 4, 1, 0, 5, 7, 0], [0, 0, 2, 6], [0, 33], [1], [0], [2], [0]], "fitness": -0.8214285969734192, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.subtract(tf.math.negative(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.negative(beta)), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6353728771209717, 0.8574541211128235, 0.7238864302635193, 0.6221404075622559, 0.5843625664710999, 0.5306374430656433, 0.5062652230262756, 0.5099438428878784, 0.5194277167320251, 0.48954781889915466, 0.4527692496776581, 0.45921164751052856, 0.4489474296569824, 0.44696658849716187, 0.461073100566864, 0.4363395869731903, 0.4444354772567749, 0.467780202627182, 0.4632551968097687, 0.45142701268196106, 0.46601760387420654, 0.45461609959602356, 0.45983630418777466], "accuracy": [0.46083739399909973, 0.7025492191314697, 0.7430986762046814, 0.7680623531341553, 0.7837802171707153, 0.8033285140991211, 0.8119139075279236, 0.8166688680648804, 0.8119139075279236, 0.8183859586715698, 0.834632158279419, 0.8315942287445068, 0.8317263126373291, 0.8397833704948425, 0.8417646288871765, 0.8499537706375122, 0.8437458872795105, 0.8396512866020203, 0.8446704745292664, 0.842028796672821, 0.8367455005645752, 0.8438779711723328, 0.8455950617790222], "val_loss": [0.8167893886566162, 0.620297372341156, 0.5405805706977844, 0.5268920660018921, 0.47605469822883606, 0.45215556025505066, 0.4616749584674835, 0.4709841310977936, 0.4656532406806946, 0.4736582040786743, 0.46966585516929626, 0.4769744575023651, 0.47340214252471924, 0.5078150033950806, 0.5752176642417908, 0.5195763111114502, 0.48839086294174194, 0.5197551250457764, 0.5193410515785217, 0.5661807060241699, 0.5087790489196777, 0.49358609318733215, 0.5189146995544434], "val_accuracy": [0.7113333344459534, 0.7836666703224182, 0.8066666722297668, 0.8159999847412109, 0.8263333439826965, 0.8356666564941406, 0.8316666483879089, 0.8323333263397217, 0.8393333554267883, 0.8513333201408386, 0.8456666469573975, 0.8426666855812073, 0.8423333168029785, 0.856333315372467, 0.8510000109672546, 0.8560000061988831, 0.8516666889190674, 0.8579999804496765, 0.846666693687439, 0.8506666421890259, 0.8386666774749756, 0.8460000157356262, 0.8516666889190674]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 11, 7, 4, 2, 1, 0, 1, 0], "tree_depth": 16}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 2, 2, 5, 0], [3, 3, 0, 1, 1], [16, 25], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 9, 3, 6, 3, 1, 4, 1, 4, 2, 2], [0, 1, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 12, 7, 5, 1, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(grad, grad), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [311.989501953125, 11147.431640625, 68992.890625, 219837.203125, 503562.90625, 991503.0625], "accuracy": [0.09681680053472519, 0.10579843819141388, 0.09800554811954498, 0.10302469879388809, 0.10408136248588562, 0.09760929644107819], "val_loss": [1966.6072998046875, 25573.26171875, 104338.3359375, 274195.5625, 571859.875, 1034440.6875], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 3, 1, 9], [0, 0, 1, 0, 2], [39, 39, 31], [1, 1], [9, 2, 3, 0, 3, 5], [0, 2, 0, 3], [0], [0, 1], [0], [0], [0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 1, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3032352924346924, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 2, 3, 0, 3, 2], [0, 2, 0, 3, 5, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 9, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 51, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 9, 5, 4, 1, 12, 6, 6, 2, 2, 1, 1, 1, 12, 7, 5, 5], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 0, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [5, 8, 3, 6, 8, 1, 4, 1, 4, 2, 8], [3, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 1, 2, 1, 1, 1, 2, 1, 1, 1, 19, 11, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.sqrt(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(grad))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}]