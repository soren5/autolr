[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8745714426040649, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2223892211914062, 1.8629920482635498, 1.3870352506637573, 1.0903161764144897, 0.9420208930969238, 0.8441358208656311, 0.7700186371803284, 0.7217291593551636, 0.6767236590385437, 0.6569206118583679, 0.6183496713638306, 0.6107504963874817, 0.588310718536377, 0.5723253488540649, 0.5553921461105347, 0.5430460572242737, 0.5285593271255493, 0.5160848498344421, 0.5020367503166199, 0.4944137930870056, 0.490251362323761, 0.47352543473243713, 0.46481215953826904, 0.46225595474243164, 0.45755869150161743, 0.4394186735153198, 0.4293452203273773, 0.4266563057899475, 0.4151496887207031, 0.4157305657863617, 0.4088342785835266, 0.40741726756095886, 0.39171093702316284, 0.3894343376159668, 0.3788720369338989, 0.3757447898387909, 0.3720443844795227, 0.36881396174430847, 0.3660247325897217, 0.3548370599746704, 0.3433936834335327, 0.34245434403419495, 0.3422749638557434, 0.3315461575984955, 0.3349940776824951, 0.3257698714733124, 0.3197152316570282, 0.31950604915618896, 0.3127707839012146, 0.30908313393592834, 0.29585000872612, 0.3027026653289795, 0.29654213786125183, 0.294964075088501, 0.29153919219970703, 0.28906455636024475], "accuracy": [0.27024170756340027, 0.5005943775177002, 0.5634658336639404, 0.6192048788070679, 0.6621318459510803, 0.6926429867744446, 0.7207766771316528, 0.7320036888122559, 0.7490423917770386, 0.7541936039924622, 0.769911527633667, 0.7707040309906006, 0.7841764688491821, 0.7868181467056274, 0.7956677079200745, 0.8057059645652771, 0.8076872229576111, 0.8096684813499451, 0.8201030492782593, 0.8228767514228821, 0.8247259259223938, 0.8274996876716614, 0.8318583965301514, 0.8374059200286865, 0.8359529972076416, 0.8391229510307312, 0.8404437899589539, 0.8496896028518677, 0.8479725122451782, 0.8518029451370239, 0.8560295701026917, 0.8539162874221802, 0.8634262084960938, 0.8593316674232483, 0.8628978729248047, 0.8643507957458496, 0.8640866279602051, 0.8640866279602051, 0.8684453964233398, 0.8681812286376953, 0.8716153502464294, 0.8730682730674744, 0.8735966086387634, 0.8791441321372986, 0.8775591254234314, 0.8821820020675659, 0.8844274282455444, 0.8893144726753235, 0.8860124349594116, 0.8924844861030579, 0.8923524022102356, 0.8899748921394348, 0.8920882344245911, 0.8927486538887024, 0.8948619961738586, 0.8949940800666809], "val_loss": [2.0379278659820557, 1.510921597480774, 1.040629506111145, 0.8431312441825867, 0.7562941312789917, 0.7013148069381714, 0.649255633354187, 0.6168642044067383, 0.5890552401542664, 0.5658854842185974, 0.5500591397285461, 0.5260148644447327, 0.5168635845184326, 0.5017887949943542, 0.4878098964691162, 0.4787706732749939, 0.4671994149684906, 0.4588356912136078, 0.4516185224056244, 0.440327912569046, 0.4411167800426483, 0.4324004054069519, 0.4209904074668884, 0.41943684220314026, 0.4117386043071747, 0.4045291841030121, 0.4023231565952301, 0.3988792300224304, 0.39312443137168884, 0.3885590732097626, 0.3853495419025421, 0.39713525772094727, 0.3771306276321411, 0.37259331345558167, 0.3699226975440979, 0.3654589056968689, 0.3684462904930115, 0.3621341586112976, 0.3590133786201477, 0.360337495803833, 0.35583508014678955, 0.3548964858055115, 0.3557356894016266, 0.3551085591316223, 0.3487308621406555, 0.34620487689971924, 0.3415662944316864, 0.3420350253582001, 0.34116971492767334, 0.3398154377937317, 0.3387920558452606, 0.34022796154022217, 0.3349306285381317, 0.3357805609703064, 0.3342738747596741, 0.3351483643054962], "val_accuracy": [0.5266666412353516, 0.6423333287239075, 0.6786666512489319, 0.7139999866485596, 0.7333333492279053, 0.7433333396911621, 0.7636666893959045, 0.7680000066757202, 0.7736666798591614, 0.7833333611488342, 0.7933333516120911, 0.8063333630561829, 0.8050000071525574, 0.8183333277702332, 0.8190000057220459, 0.828000009059906, 0.8320000171661377, 0.8276666402816772, 0.8349999785423279, 0.8370000123977661, 0.8379999995231628, 0.8379999995231628, 0.8463333249092102, 0.8486666679382324, 0.8523333072662354, 0.8539999723434448, 0.8569999933242798, 0.8539999723434448, 0.859666645526886, 0.862666666507721, 0.859333336353302, 0.8519999980926514, 0.8653333187103271, 0.8669999837875366, 0.8663333058357239, 0.8706666827201843, 0.8679999709129333, 0.871999979019165, 0.8709999918937683, 0.8736666440963745, 0.8766666650772095, 0.8799999952316284, 0.8730000257492065, 0.8740000128746033, 0.8803333044052124, 0.8776666522026062, 0.8809999823570251, 0.8803333044052124, 0.8833333253860474, 0.8773333430290222, 0.8853333592414856, 0.8806666731834412, 0.8843333125114441, 0.8830000162124634, 0.8843333125114441, 0.8803333044052124]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 1, 3, 4, 2, 3, 6, 9, 3, 5, 4, 2, 9, 9], [0, 2, 2, 4, 4, 3, 5], [0, 92, 20, 11], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8511428833007812, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.pow(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(beta, beta), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), grad), tf.math.multiply(grad, tf.math.square(tf.math.pow(tf.math.add(grad, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), grad)))), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2927536964416504, 2.1909139156341553, 1.773967981338501, 1.343088984489441, 1.0700604915618896, 0.9265941381454468, 0.8398871421813965, 0.8197817206382751, 0.7689323425292969, 0.7437922358512878, 0.7141256928443909, 0.693778932094574, 0.6573904156684875, 0.6267968416213989, 0.6111119389533997, 0.6034833192825317, 0.5796617269515991, 0.5724587440490723, 0.5642431974411011, 0.5334269404411316, 0.53387850522995, 0.5271506905555725, 0.5114207863807678, 0.511940598487854, 0.49086520075798035, 0.4760291874408722, 0.4567251205444336, 0.45845019817352295, 0.4465724229812622, 0.44294309616088867, 0.42826706171035767, 0.42058423161506653, 0.4205387532711029, 0.40881070494651794, 0.40654703974723816, 0.38646814227104187, 0.378585547208786, 0.3923909664154053, 0.3774419128894806, 0.3751268684864044, 0.3604789674282074, 0.35348644852638245, 0.3493737578392029, 0.34653958678245544, 0.3336164653301239, 0.3396419882774353, 0.3298570513725281, 0.31470996141433716, 0.3237237334251404, 0.3042028248310089, 0.3169289827346802, 0.3152288496494293, 0.3049621284008026, 0.31562870740890503, 0.29509666562080383], "accuracy": [0.1298375427722931, 0.32703739404678345, 0.43547746539115906, 0.54220050573349, 0.6387531161308289, 0.6629242897033691, 0.687491774559021, 0.6939638257026672, 0.7024171352386475, 0.7162858247756958, 0.7312111854553223, 0.7309470176696777, 0.7479857206344604, 0.7592127919197083, 0.7629110813140869, 0.7675340175628662, 0.7755910754203796, 0.7798177003860474, 0.7860256433486938, 0.7940827012062073, 0.7959318161010742, 0.8001585006713867, 0.8034605979919434, 0.8017435073852539, 0.8103289008140564, 0.8171972036361694, 0.829216718673706, 0.8220842480659485, 0.826310932636261, 0.8301413059234619, 0.8404437899589539, 0.8370096683502197, 0.839519202709198, 0.848368763923645, 0.8421608805656433, 0.8491612672805786, 0.8545766472816467, 0.8556333184242249, 0.8555012345314026, 0.8569541573524475, 0.8582749962806702, 0.8644828796386719, 0.8650112152099609, 0.868049144744873, 0.8725399374961853, 0.8709549307823181, 0.8726720213890076, 0.8757099509239197, 0.8751816153526306, 0.8805969953536987, 0.8776912093162537, 0.8728041052818298, 0.883238673210144, 0.8759741187095642, 0.8842953443527222], "val_loss": [2.2461719512939453, 2.023144245147705, 1.1440387964248657, 0.8862568140029907, 0.788584291934967, 0.7180768251419067, 0.680207371711731, 0.6686767339706421, 0.6481789350509644, 0.6224985122680664, 0.5884402990341187, 0.5595259666442871, 0.556018054485321, 0.5385857820510864, 0.5312436819076538, 0.5230700969696045, 0.5180457830429077, 0.5175215005874634, 0.5177136063575745, 0.5051931738853455, 0.5000291466712952, 0.5028602480888367, 0.4939253032207489, 0.4858211278915405, 0.4809643626213074, 0.45928964018821716, 0.4470843970775604, 0.44646066427230835, 0.435768723487854, 0.43421387672424316, 0.42366641759872437, 0.4203624725341797, 0.4174565076828003, 0.42688778042793274, 0.4171375036239624, 0.4121575951576233, 0.4116554856300354, 0.42970260977745056, 0.4101070463657379, 0.4137133061885834, 0.4195963442325592, 0.42983007431030273, 0.4344466030597687, 0.42893683910369873, 0.42416390776634216, 0.42818668484687805, 0.41915401816368103, 0.42325857281684875, 0.4227256178855896, 0.43207889795303345, 0.4375537037849426, 0.4378837049007416, 0.4305291771888733, 0.4463725984096527, 0.44456061720848083], "val_accuracy": [0.43566668033599854, 0.4596666693687439, 0.6516666412353516, 0.6893333196640015, 0.6933333277702332, 0.7329999804496765, 0.7360000014305115, 0.7480000257492065, 0.7493333220481873, 0.7689999938011169, 0.7706666588783264, 0.7876666784286499, 0.7950000166893005, 0.7953333258628845, 0.7993333339691162, 0.8026666641235352, 0.8066666722297668, 0.8040000200271606, 0.8066666722297668, 0.8149999976158142, 0.8186666369438171, 0.8153333067893982, 0.8263333439826965, 0.8336666822433472, 0.8320000171661377, 0.8393333554267883, 0.8443333506584167, 0.8486666679382324, 0.8479999899864197, 0.8489999771118164, 0.8483333587646484, 0.8456666469573975, 0.8510000109672546, 0.8556666374206543, 0.8546666502952576, 0.8560000061988831, 0.8576666712760925, 0.8619999885559082, 0.8610000014305115, 0.859333336353302, 0.8586666584014893, 0.862666666507721, 0.8640000224113464, 0.8619999885559082, 0.862666666507721, 0.862666666507721, 0.8676666617393494, 0.8686666488647461, 0.8713333606719971, 0.871999979019165, 0.8693333268165588, 0.8663333058357239, 0.8686666488647461, 0.8683333396911621, 0.8713333606719971]}, "mapping_values": [1, 10, 5, 5, 3, 21, 14, 7, 4, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8311428427696228, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5652594566345215, 0.8476759791374207, 0.7569448947906494, 0.6305316090583801, 0.6046998500823975, 0.5955746173858643, 0.5835919976234436, 0.5253769755363464, 0.5461178421974182, 0.5148456692695618, 0.529780924320221, 0.535452127456665, 0.5861167311668396, 0.6016120314598083], "accuracy": [0.4802536070346832, 0.702681303024292, 0.7265883088111877, 0.7655527591705322, 0.7833839654922485, 0.7824593782424927, 0.7882710099220276, 0.8107251524925232, 0.7993659973144531, 0.8173292875289917, 0.8185180425643921, 0.8203672170639038, 0.8012151718139648, 0.7921014428138733], "val_loss": [0.879673421382904, 0.6365241408348083, 0.5700676441192627, 0.545498788356781, 0.5363202095031738, 0.5316391587257385, 0.5195390582084656, 0.5065779089927673, 0.5197500586509705, 0.5337350368499756, 0.6029987931251526, 0.5809727907180786, 0.6623156070709229, 0.5444304347038269], "val_accuracy": [0.699999988079071, 0.7716666460037231, 0.7883333563804626, 0.7986666560173035, 0.8176666498184204, 0.8216666579246521, 0.8236666917800903, 0.8256666660308838, 0.8266666531562805, 0.8266666531562805, 0.8259999752044678, 0.8216666579246521, 0.8263333439826965, 0.8256666660308838]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 6], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0], [2, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 3, 1, 4, 3, 8], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 22, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 8, 4, 4, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [2.3048548698425293, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071, 0.0949999988079071]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 2, 3, 2, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 0, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 4, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 0, 2, 0], [16, 99, 98, 99, 61, 16]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 6], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.304715394973755, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.0948355570435524, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 4, 3, 2, 3], [0, 1, 0, 2, 0], [29, 39, 77], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [2], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [2, 0, 0, 3, 0, 0, 3, 1, 1, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 7, 4, 3, 2, 2, 1, 1, 0, 17, 9, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 5], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 9, 1, 4, 2, 8], [0, 0, 0, 3, 4, 3, 3, 1, 1, 0], [16, 99, 96, 99, 72, 76]], "fitness": -0.09057142585515976, "mapping_values": [1, 8, 5, 3, 2, 7, 4, 3, 2, 2, 1, 1, 1, 12, 7, 5, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)), grad), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3097071647644043, 2.3110246658325195, 2.310811758041382, 2.310504198074341, 2.311570167541504, 2.309739351272583], "accuracy": [0.09206181764602661, 0.09166556596755981, 0.0948355570435524, 0.09272222965955734, 0.09034473448991776, 0.09351472556591034], "val_loss": [2.308443069458008, 2.3084418773651123, 2.308441400527954, 2.308440923690796, 2.308440923690796, 2.308440685272217], "val_accuracy": [0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179, 0.09133332967758179]}}]