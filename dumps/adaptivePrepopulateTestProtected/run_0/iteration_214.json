[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8640000224113464, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224684000015259, 1.878212809562683, 1.4077742099761963, 1.1032992601394653, 0.950231671333313, 0.8460747003555298, 0.7907558083534241, 0.7331596612930298, 0.7006298899650574, 0.6717504262924194, 0.6492734551429749, 0.6221481561660767, 0.6012305617332458, 0.5869668126106262, 0.5756629109382629, 0.5619030594825745, 0.5469330549240112, 0.5314739942550659, 0.5221460461616516, 0.5081426501274109, 0.4989914298057556, 0.48844048380851746, 0.478431761264801, 0.46551069617271423, 0.45790761709213257, 0.4554693102836609, 0.4337717592716217, 0.434495747089386, 0.43273085355758667, 0.42288729548454285, 0.41794857382774353, 0.40555766224861145, 0.3994769752025604, 0.39414647221565247, 0.39695286750793457, 0.38177070021629333, 0.3814404308795929, 0.37914344668388367, 0.3845193386077881, 0.3592381179332733, 0.3593361973762512, 0.35949406027793884, 0.35461676120758057, 0.3465956449508667, 0.3370841145515442, 0.33834248781204224, 0.34030166268348694, 0.32753223180770874, 0.3251606225967407, 0.3121427893638611, 0.312704473733902, 0.3140270411968231, 0.3027748465538025, 0.3125976324081421, 0.2953881025314331], "accuracy": [0.27143046259880066, 0.47549861669540405, 0.5633337497711182, 0.613789439201355, 0.6618676781654358, 0.6960771083831787, 0.7148329019546509, 0.739928662776947, 0.7449478507041931, 0.7543256878852844, 0.7662131786346436, 0.7749306559562683, 0.7835160493850708, 0.7897239327430725, 0.7927618622779846, 0.7992339134216309, 0.8075551390647888, 0.8104609847068787, 0.8156121969223022, 0.8206313848495483, 0.824329674243927, 0.8241975903511047, 0.8342359066009521, 0.8379341959953308, 0.8374059200286865, 0.8378021121025085, 0.8477083444595337, 0.8454629778862, 0.8437458872795105, 0.8488970994949341, 0.8488970994949341, 0.8580108284950256, 0.8560295701026917, 0.8652753829956055, 0.858671247959137, 0.8676528930664062, 0.8640866279602051, 0.8660678863525391, 0.8615770936012268, 0.8725399374961853, 0.8708229064941406, 0.8732003569602966, 0.8730682730674744, 0.8792761564254761, 0.8828424215316772, 0.8768987059593201, 0.8790120482444763, 0.8844274282455444, 0.8848236799240112, 0.8860124349594116, 0.8882578015327454, 0.8893144726753235, 0.8919561505317688, 0.8877294659614563, 0.8961827754974365], "val_loss": [2.0469162464141846, 1.5332324504852295, 1.0666269063949585, 0.8510639667510986, 0.761599063873291, 0.7013829946517944, 0.6563866138458252, 0.6226860880851746, 0.5923126339912415, 0.5637421011924744, 0.5467243790626526, 0.5240270495414734, 0.5137143731117249, 0.5047503709793091, 0.48336103558540344, 0.47380903363227844, 0.4658264219760895, 0.45572274923324585, 0.45187410712242126, 0.4500276744365692, 0.4333025813102722, 0.4368649125099182, 0.42240703105926514, 0.41852667927742004, 0.41118818521499634, 0.40695053339004517, 0.4018099009990692, 0.401163250207901, 0.3981207311153412, 0.3914318084716797, 0.39236363768577576, 0.3833872079849243, 0.3814966082572937, 0.3761734068393707, 0.3766801655292511, 0.37385132908821106, 0.3745090663433075, 0.37912434339523315, 0.36597171425819397, 0.3732946813106537, 0.3646782636642456, 0.3660351634025574, 0.36143067479133606, 0.3592166304588318, 0.3571520149707794, 0.3637832701206207, 0.35695764422416687, 0.3573131561279297, 0.3535918891429901, 0.35038265585899353, 0.35089632868766785, 0.352555513381958, 0.3518582284450531, 0.348581463098526, 0.34565189480781555], "val_accuracy": [0.5550000071525574, 0.6556666493415833, 0.6740000247955322, 0.7053333520889282, 0.7283333539962769, 0.7490000128746033, 0.7603333592414856, 0.7649999856948853, 0.7799999713897705, 0.7933333516120911, 0.8006666898727417, 0.8133333325386047, 0.8116666674613953, 0.8176666498184204, 0.8323333263397217, 0.831333339214325, 0.8399999737739563, 0.8393333554267883, 0.8383333086967468, 0.8356666564941406, 0.8489999771118164, 0.8446666598320007, 0.8526666760444641, 0.8510000109672546, 0.8503333330154419, 0.856333315372467, 0.8569999933242798, 0.8619999885559082, 0.8603333234786987, 0.859666645526886, 0.8636666536331177, 0.8643333315849304, 0.8633333444595337, 0.8659999966621399, 0.8669999837875366, 0.8659999966621399, 0.8643333315849304, 0.8646666407585144, 0.8713333606719971, 0.8656666874885559, 0.871666669845581, 0.8679999709129333, 0.871999979019165, 0.8726666569709778, 0.8730000257492065, 0.8740000128746033, 0.8690000176429749, 0.8696666955947876, 0.875, 0.8756666779518127, 0.874666690826416, 0.875, 0.875333309173584, 0.875333309173584, 0.8756666779518127]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 1, 1], [0, 4, 8], [0, 4], [0], [0, 1], [0], [1], [0]], "fitness": -0.8479999899864197, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2922232151031494, 2.1894688606262207, 1.7594131231307983, 1.353521704673767, 1.0641343593597412, 0.9029750823974609, 0.827911913394928, 0.7753413915634155, 0.7462223768234253, 0.7317092418670654, 0.6909014582633972, 0.6824604272842407, 0.6309301853179932, 0.6259849667549133, 0.6035402417182922, 0.5737394094467163, 0.569720983505249, 0.5669783353805542, 0.5428422093391418, 0.539287269115448, 0.5231600403785706, 0.5111217498779297, 0.5079782605171204, 0.5074662566184998, 0.4858364760875702, 0.49109742045402527, 0.46955594420433044, 0.4581057131290436, 0.45293283462524414, 0.44715943932533264, 0.4224807918071747, 0.42373260855674744, 0.404616117477417, 0.410246342420578, 0.4040728211402893, 0.3883915841579437, 0.39523544907569885, 0.4002043306827545, 0.39302271604537964, 0.37917235493659973, 0.36738094687461853, 0.3721247911453247], "accuracy": [0.13353586196899414, 0.3292827904224396, 0.44551578164100647, 0.5527671575546265, 0.6409985423088074, 0.669792652130127, 0.7024171352386475, 0.7131158113479614, 0.7131158113479614, 0.7190595865249634, 0.7341170310974121, 0.7322678565979004, 0.7535332441329956, 0.7584202885627747, 0.7617223858833313, 0.778761088848114, 0.7820631265640259, 0.77677983045578, 0.7847048044204712, 0.7961959838867188, 0.7947431206703186, 0.8062343001365662, 0.8108572363853455, 0.8064984679222107, 0.8142913579940796, 0.8061022162437439, 0.8191784620285034, 0.8241975903511047, 0.8289526104927063, 0.8294808864593506, 0.8387266993522644, 0.8430854678153992, 0.8506141901016235, 0.846387505531311, 0.8451988101005554, 0.852331280708313, 0.8521991968154907, 0.8488970994949341, 0.8527275323867798, 0.8584070801734924, 0.8577466607093811, 0.8576145768165588], "val_loss": [2.2458508014678955, 2.016573190689087, 1.1250770092010498, 0.8675236105918884, 0.7630450129508972, 0.6996973752975464, 0.6798080801963806, 0.6447327733039856, 0.6416063904762268, 0.6155369281768799, 0.5864591598510742, 0.5708593726158142, 0.5440306067466736, 0.524625837802887, 0.5134339332580566, 0.5195072293281555, 0.5110911130905151, 0.5084022283554077, 0.49720197916030884, 0.48423007130622864, 0.47962725162506104, 0.46759170293807983, 0.4632692039012909, 0.44770702719688416, 0.44139736890792847, 0.43284061551094055, 0.4295450747013092, 0.42698726058006287, 0.4202364981174469, 0.4175983965396881, 0.4142841696739197, 0.4132027328014374, 0.4171682596206665, 0.41474291682243347, 0.4113771617412567, 0.41037291288375854, 0.41796252131462097, 0.4146817922592163, 0.4057217240333557, 0.4111167788505554, 0.4173460006713867, 0.42940112948417664], "val_accuracy": [0.43166667222976685, 0.46666666865348816, 0.6489999890327454, 0.6973333358764648, 0.7276666760444641, 0.7426666617393494, 0.7476666569709778, 0.7540000081062317, 0.7570000290870667, 0.7593333125114441, 0.765999972820282, 0.7739999890327454, 0.7823333144187927, 0.7919999957084656, 0.8023333549499512, 0.7943333387374878, 0.8009999990463257, 0.8043333292007446, 0.8100000023841858, 0.8203333616256714, 0.8276666402816772, 0.8246666789054871, 0.8226666450500488, 0.8330000042915344, 0.8413333296775818, 0.8399999737739563, 0.8410000205039978, 0.8383333086967468, 0.8420000076293945, 0.8386666774749756, 0.8399999737739563, 0.846666693687439, 0.8500000238418579, 0.8506666421890259, 0.8543333411216736, 0.8506666421890259, 0.8600000143051147, 0.8533333539962769, 0.859666645526886, 0.856333315372467, 0.8529999852180481, 0.856333315372467]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 4, 6, 3, 5, 1, 6, 0, 1, 5, 9, 3], [0, 5, 1, 1, 6, 6, 0], [0, 15, 44], [1], [0], [2], [0]], "fitness": -0.8251428604125977, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.math.subtract(tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(grad, alpha)), alpha), tf.math.square(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), tf.math.multiply(grad, grad))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5748544931411743, 0.8162754774093628, 0.6790888905525208, 0.6062822341918945, 0.5706176161766052, 0.5446268916130066, 0.4963012933731079, 0.4784007668495178, 0.47193050384521484, 0.4591894745826721, 0.46762558817863464, 0.43039748072624207, 0.4496651291847229, 0.4904409348964691, 0.4977063834667206, 0.4968818426132202], "accuracy": [0.47866860032081604, 0.7054550051689148, 0.7441553473472595, 0.7771760821342468, 0.785101056098938, 0.8017435073852539, 0.8248580098152161, 0.8271034359931946, 0.8297450542449951, 0.8322546482086182, 0.844010055065155, 0.8457271456718445, 0.8301413059234619, 0.83119797706604, 0.8412362933158875, 0.8302733898162842], "val_loss": [0.8272215723991394, 0.6057958006858826, 0.5562329888343811, 0.509675920009613, 0.5041389465332031, 0.49983716011047363, 0.4960687756538391, 0.4887021481990814, 0.47704261541366577, 0.533174991607666, 0.5237787365913391, 0.5318819284439087, 0.5183877944946289, 0.6552408933639526, 0.6225749850273132, 0.63124680519104], "val_accuracy": [0.7133333086967468, 0.7743333578109741, 0.7943333387374878, 0.8113333582878113, 0.8199999928474426, 0.8246666789054871, 0.8360000252723694, 0.8426666855812073, 0.840666651725769, 0.8503333330154419, 0.8506666421890259, 0.8433333039283752, 0.8489999771118164, 0.8389999866485596, 0.8476666808128357, 0.8346666693687439]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 19, 12, 7, 3, 1, 0, 1, 0], "tree_depth": 21}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 20], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [9], [0], [32], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [6, 3, 2, 6, 6, 1, 4, 1, 4, 2, 8, 3, 7, 9], [0, 0, 0, 2, 0, 0, 3, 1, 1, 0, 1, 2], [16, 99, 96, 99, 61, 1, 74]], "fitness": -0.10400000214576721, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 1, 1, 0, 1, 26, 14, 12, 7], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(beta, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma), tf.math.sqrt(tf.math.multiply(alpha, alpha))), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha))), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.0549403114480362e+25, 1.886575840657935e+25, 1.9336725688289743e+25, 1.7670066972916103e+25, 4.862748972282186e+25, 9.84694485118525e+25, 9.810510686965266e+25], "accuracy": [0.107647605240345, 0.10368511080741882, 0.10236428678035736, 0.10289261490106583, 0.10170386731624603, 0.10077928751707077, 0.09694888442754745], "val_loss": [1.7765285607060078e+25, 1.8171426418409437e+25, 1.8216788115008193e+25, 1.8241186239888683e+25, 9.985236402157036e+25, 9.985236402157036e+25, 9.985236402157036e+25], "val_accuracy": [0.10400000214576721, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [61, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 9, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 9, 5, 4, 1, 4, 8, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 22, 99, 63, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 1, 0, 1, 1, 2, 1, 1, 1, 16, 9, 7, 6], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.3037216663360596, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [16, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 9, 5, 3, 5], [0, 2, 0, 3], [16, 55], [0, 1, 1], [1], [0, 4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 4, 2, 0], [16, 99, 51, 97, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 5, 4, 1, 2, 3, 1, 2, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), sigma)))), grad), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 9, 1, 4, 1, 6, 2, 8, 7, 4, 0, 5, 6, 5, 7, 1, 1, 8], [0, 4, 4, 3, 0, 0, 0, 1, 2, 0, 2, 0, 1, 7, 1], [16, 99, 96, 99, 61, 1, 3]], "fitness": -0.0925714299082756, "mapping_values": [1, 2, 1, 1, 1, 6, 3, 3, 2, 2, 1, 1, 1, 36, 21, 15, 7], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(tf.math.subtract(grad, grad), tf.math.divide_no_nan(sigma, tf.math.add(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), alpha), beta)))), tf.math.negative(tf.math.square(tf.math.divide_no_nan(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(beta, tf.math.subtract(tf.math.sqrt(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), alpha)), grad))))), alpha)", "other_info": {"loss": [2.3098418712615967, 2.310148000717163, 2.311392068862915, 2.3102567195892334, 2.3096566200256348, 2.3097410202026367], "accuracy": [0.09509972482919693, 0.08479725569486618, 0.09047681838274002, 0.09259014576673508, 0.09153348207473755, 0.09311848133802414], "val_loss": [2.3088760375976562, 2.3088760375976562, 2.3088760375976562, 2.3088760375976562, 2.3088760375976562, 2.3088760375976562], "val_accuracy": [0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601, 0.09099999815225601]}}]