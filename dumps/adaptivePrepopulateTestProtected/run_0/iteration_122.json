[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8485714197158813, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221304416656494, 1.8616414070129395, 1.3872307538986206, 1.0903866291046143, 0.9212985634803772, 0.8319474458694458, 0.7608590126037598, 0.7284959554672241, 0.6826237440109253, 0.6671860814094543, 0.6425153017044067, 0.6073859930038452, 0.5872064828872681, 0.5718632936477661, 0.5616046786308289, 0.544417679309845, 0.537099301815033, 0.5219796895980835, 0.5063129663467407, 0.5005252361297607, 0.49021533131599426, 0.4932599663734436, 0.47133657336235046, 0.46876969933509827, 0.4550287425518036, 0.4444814622402191, 0.44721272587776184, 0.4336276948451996, 0.42728713154792786, 0.42349281907081604, 0.41469359397888184, 0.4081672728061676, 0.40168654918670654, 0.3991334140300751, 0.3857771158218384, 0.38335949182510376, 0.38341811299324036, 0.3797426223754883, 0.3694291412830353, 0.36407214403152466, 0.3582718074321747, 0.34700557589530945, 0.3524630665779114, 0.3416345417499542, 0.3324669301509857, 0.32891568541526794, 0.3326268494129181, 0.3264436423778534, 0.3176661729812622, 0.31791070103645325, 0.31242990493774414, 0.3074731230735779, 0.3015134036540985, 0.303047776222229, 0.29579347372055054, 0.29502663016319275, 0.28047680854797363, 0.28673055768013, 0.277345210313797, 0.27954205870628357, 0.27040937542915344, 0.2662704288959503, 0.26838254928588867, 0.26074111461639404, 0.26188355684280396, 0.2602469325065613, 0.2489212155342102, 0.24366378784179688], "accuracy": [0.28622373938560486, 0.48448026180267334, 0.5752212405204773, 0.6239598393440247, 0.6690001487731934, 0.7004358768463135, 0.72672039270401, 0.7359662055969238, 0.7497028112411499, 0.752212405204773, 0.7647602558135986, 0.7765156626701355, 0.7858935594558716, 0.7868181467056274, 0.7921014428138733, 0.7994980812072754, 0.8039889335632324, 0.8117818236351013, 0.8146876096725464, 0.8208954930305481, 0.8228767514228821, 0.8215559124946594, 0.8264430165290833, 0.8310658931732178, 0.8334434032440186, 0.8391229510307312, 0.8408400416374207, 0.8436138033866882, 0.8441421389579773, 0.8442742228507996, 0.8514066934585571, 0.8514066934585571, 0.8565579056739807, 0.8561616539955139, 0.8622375130653381, 0.8578787446022034, 0.8617091774940491, 0.8574824929237366, 0.8692378997802734, 0.8652753829956055, 0.8708229064941406, 0.8759741187095642, 0.8704266548156738, 0.8775591254234314, 0.8775591254234314, 0.8771628737449646, 0.8772949576377869, 0.8798044919967651, 0.8809932470321655, 0.8854840993881226, 0.8854840993881226, 0.8845595121383667, 0.889050304889679, 0.8883898854255676, 0.8903711438179016, 0.89552241563797, 0.8930128216743469, 0.9010698795318604, 0.896446943283081, 0.897899866104126, 0.9012019634246826, 0.9078060984611511, 0.9000132083892822, 0.9049002528190613, 0.9029190540313721, 0.9046360850334167, 0.9052965044975281, 0.9103156924247742], "val_loss": [2.0409131050109863, 1.5141204595565796, 1.053643822669983, 0.8585352301597595, 0.7698187828063965, 0.7219763994216919, 0.6755800247192383, 0.6373497843742371, 0.6016870737075806, 0.5881253480911255, 0.5661206841468811, 0.5492326021194458, 0.5398789644241333, 0.5229876041412354, 0.5146499276161194, 0.5004119277000427, 0.4881061315536499, 0.4809969365596771, 0.47272932529449463, 0.46595004200935364, 0.4728161692619324, 0.4519055187702179, 0.4466443955898285, 0.44556379318237305, 0.4347483813762665, 0.434935063123703, 0.42986157536506653, 0.4289889335632324, 0.41703954339027405, 0.41355860233306885, 0.41821619868278503, 0.41102302074432373, 0.41282984614372253, 0.40382081270217896, 0.4062108099460602, 0.3953535258769989, 0.4012370705604553, 0.3904291093349457, 0.3949131369590759, 0.3893681764602661, 0.3831062912940979, 0.3842630982398987, 0.38372811675071716, 0.37531477212905884, 0.37541547417640686, 0.3785448372364044, 0.370696097612381, 0.371788889169693, 0.37614110112190247, 0.37140095233917236, 0.3695106506347656, 0.3716772198677063, 0.3648298382759094, 0.36337873339653015, 0.365558922290802, 0.3623066544532776, 0.36332523822784424, 0.36347559094429016, 0.36468416452407837, 0.35732418298721313, 0.3548280894756317, 0.3604688346385956, 0.3577115833759308, 0.35594043135643005, 0.3634210228919983, 0.36173558235168457, 0.35430359840393066, 0.3552763760089874], "val_accuracy": [0.5356666445732117, 0.6366666555404663, 0.6763333082199097, 0.6936666369438171, 0.7203333377838135, 0.7350000143051147, 0.746999979019165, 0.7576666474342346, 0.7739999890327454, 0.784333348274231, 0.7983333468437195, 0.7990000247955322, 0.8016666769981384, 0.8109999895095825, 0.8136666417121887, 0.8169999718666077, 0.8236666917800903, 0.8273333311080933, 0.8266666531562805, 0.8323333263397217, 0.8236666917800903, 0.8353333473205566, 0.8373333215713501, 0.8379999995231628, 0.8433333039283752, 0.8386666774749756, 0.8379999995231628, 0.847000002861023, 0.8510000109672546, 0.8506666421890259, 0.8513333201408386, 0.8513333201408386, 0.8450000286102295, 0.8510000109672546, 0.8513333201408386, 0.8546666502952576, 0.8536666631698608, 0.8583333492279053, 0.8493333458900452, 0.8583333492279053, 0.8629999756813049, 0.856333315372467, 0.8566666841506958, 0.8640000224113464, 0.862666666507721, 0.8636666536331177, 0.8653333187103271, 0.8656666874885559, 0.8663333058357239, 0.8659999966621399, 0.8650000095367432, 0.8676666617393494, 0.8693333268165588, 0.8659999966621399, 0.8703333139419556, 0.8709999918937683, 0.8703333139419556, 0.8696666955947876, 0.8673333525657654, 0.875333309173584, 0.8723333477973938, 0.8703333139419556, 0.8776666522026062, 0.8730000257492065, 0.8679999709129333, 0.8706666827201843, 0.8769999742507935, 0.875333309173584]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 6, 3, 4, 8, 1, 4, 9, 3, 9, 5, 6], [0, 4, 1, 4, 3, 2], [0, 11, 13], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.836571455001831, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(grad), alpha)), tf.math.subtract(grad, tf.math.pow(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(grad, beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294356107711792, 2.1933400630950928, 1.7859090566635132, 1.370020866394043, 1.0754961967468262, 0.9388270974159241, 0.834604799747467, 0.8251570463180542, 0.7743105292320251, 0.760841429233551, 0.7183620929718018, 0.6901558041572571, 0.6662320494651794, 0.627194344997406, 0.63111412525177, 0.6156101226806641, 0.6042927503585815, 0.5879735350608826, 0.5738855004310608, 0.5641238689422607, 0.554693877696991, 0.5460937023162842, 0.5386808514595032, 0.5313902497291565, 0.516733705997467, 0.5121449828147888, 0.48968249559402466, 0.48065733909606934, 0.4848293662071228, 0.4630981683731079, 0.46777939796447754, 0.4496438503265381, 0.4335412085056305, 0.43871834874153137, 0.43470072746276855, 0.4120238125324249, 0.418138325214386, 0.40682271122932434, 0.3999767005443573, 0.3914351463317871], "accuracy": [0.1212521493434906, 0.3222824037075043, 0.43164706230163574, 0.5428609251976013, 0.6358473300933838, 0.6583014130592346, 0.6910579800605774, 0.6948884129524231, 0.7018887996673584, 0.7058512568473816, 0.7253995537757874, 0.7417778372764587, 0.7408532500267029, 0.7559106945991516, 0.7611940503120422, 0.7663452625274658, 0.7741381525993347, 0.7820631265640259, 0.7827235460281372, 0.789459764957428, 0.783119797706604, 0.7874785661697388, 0.7938185334205627, 0.7913089394569397, 0.7985734939575195, 0.804649293422699, 0.8150838613510132, 0.8168009519577026, 0.8133667707443237, 0.8210275769233704, 0.8219521641731262, 0.8265751004219055, 0.8302733898162842, 0.8251221776008606, 0.8334434032440186, 0.8454629778862, 0.8428213000297546, 0.8477083444595337, 0.8470479249954224, 0.8527275323867798], "val_loss": [2.247312068939209, 2.0307884216308594, 1.1636816263198853, 0.903872549533844, 0.7634698748588562, 0.7338851094245911, 0.6974347233772278, 0.6600289940834045, 0.662923276424408, 0.6251371502876282, 0.5955801010131836, 0.5642644166946411, 0.5510730743408203, 0.5441348552703857, 0.5389382243156433, 0.5244691967964172, 0.5191419124603271, 0.5100095868110657, 0.5249925851821899, 0.5193141102790833, 0.5072152614593506, 0.5052298307418823, 0.4864727258682251, 0.47881826758384705, 0.4721081554889679, 0.47922948002815247, 0.4689110815525055, 0.46735501289367676, 0.4539554715156555, 0.44971907138824463, 0.445980966091156, 0.4366784691810608, 0.44059205055236816, 0.4347759485244751, 0.43588370084762573, 0.43166375160217285, 0.4247284233570099, 0.431296706199646, 0.43655097484588623, 0.4412967264652252], "val_accuracy": [0.42899999022483826, 0.4466666579246521, 0.6430000066757202, 0.6790000200271606, 0.7179999947547913, 0.7296666502952576, 0.7316666841506958, 0.7419999837875366, 0.7423333525657654, 0.75, 0.7636666893959045, 0.7680000066757202, 0.7906666398048401, 0.7829999923706055, 0.7799999713897705, 0.7963333129882812, 0.7916666865348816, 0.7946666479110718, 0.79666668176651, 0.7910000085830688, 0.8149999976158142, 0.8083333373069763, 0.812666654586792, 0.8183333277702332, 0.8240000009536743, 0.8213333487510681, 0.8309999704360962, 0.8306666612625122, 0.8349999785423279, 0.8383333086967468, 0.8356666564941406, 0.8396666646003723, 0.843666672706604, 0.843999981880188, 0.8506666421890259, 0.8489999771118164, 0.8429999947547913, 0.8450000286102295, 0.8503333330154419, 0.8483333587646484]}, "mapping_values": [1, 10, 5, 5, 3, 18, 12, 6, 3, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 17}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.826285719871521, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5276786088943481, 0.7665241956710815, 0.6559638381004333, 0.5806406140327454, 0.5364699959754944, 0.5268308520317078, 0.49337586760520935, 0.5347460508346558, 0.5030443072319031, 0.47756311297416687, 0.47286367416381836, 0.46306878328323364, 0.4786995053291321, 0.48184195160865784, 0.458253413438797, 0.49514302611351013, 0.5050413012504578, 0.5096994042396545, 0.5187140107154846, 0.5082138180732727, 0.5372956395149231], "accuracy": [0.47510236501693726, 0.7289658188819885, 0.7565711140632629, 0.7807422876358032, 0.7905164361000061, 0.800818920135498, 0.8165367841720581, 0.8108572363853455, 0.8098005652427673, 0.8231409192085266, 0.8322546482086182, 0.8276317715644836, 0.8319904804229736, 0.8322546482086182, 0.8362171649932861, 0.819442629814148, 0.8310658931732178, 0.8355567455291748, 0.8391229510307312, 0.8278959393501282, 0.8168009519577026], "val_loss": [0.7697107195854187, 0.5831747055053711, 0.5418793559074402, 0.48706746101379395, 0.4829363226890564, 0.4820208251476288, 0.5022261738777161, 0.49973925948143005, 0.5356371998786926, 0.5073003172874451, 0.5505497455596924, 0.5685504674911499, 0.5620082020759583, 0.6154031753540039, 0.5462635159492493, 0.5616671442985535, 0.578980028629303, 0.711270272731781, 0.6156604886054993, 0.6368507742881775, 0.5585695505142212], "val_accuracy": [0.7310000061988831, 0.7856666445732117, 0.800000011920929, 0.812333345413208, 0.8220000267028809, 0.8256666660308838, 0.8263333439826965, 0.8190000057220459, 0.8429999947547913, 0.8236666917800903, 0.8323333263397217, 0.8443333506584167, 0.8226666450500488, 0.8289999961853027, 0.8373333215713501, 0.8476666808128357, 0.8263333439826965, 0.8236666917800903, 0.8370000123977661, 0.8410000205039978, 0.831333339214325]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 9, 9, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [8, 2, 3, 0, 3, 2, 8], [0, 2, 0, 3, 2], [16, 16], [0, 1], [0], [0], [97], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 8, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 1], [83, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 0, 2, 12, 7, 5, 2, 2, 1, 1, 1, 10, 5, 5, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.303942918777466, 2.3025851249694824, 2.3025851249694824, 2.3025853633880615, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09325055778026581, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025848865509033, 2.3025853633880615, 2.3025853633880615, 2.3025848865509033, 2.3025848865509033, 2.3025848865509033, 2.3025848865509033], "val_accuracy": [0.10266666859388351, 0.10366666316986084, 0.10366666316986084, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 9, 1, 0, 5], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 3, 0, 8, 5], [3, 2, 0, 0], [16, 16], [0, 1], [0], [2], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [6, 2, 3, 1, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 81]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 6, 4, 2, 0, 2, 1, 1, 0, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(grad), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), tf.math.add(tf.math.sqrt(alpha), beta)), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3034958839416504, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 3, 1, 3, 1, 7, 6, 2, 6], [0, 0, 1, 0, 2, 2, 3, 2, 0, 2], [0, 39, 39, 61], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 1, 0, 3, 7, 8, 7, 0, 6], [0, 1, 1, 1, 0, 1], [0, 27, 16, 0], [0, 0, 1, 1], [0, 7], [0, 3], [0], [0, 1], [0], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 10, 10, 4, 15, 9, 6, 2, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(grad, grad), grad), grad)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), tf.math.add(tf.math.sqrt(tf.math.add(alpha, alpha)), tf.math.negative(tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 1, 3, 3, 9], [0, 1, 0, 2, 2], [67, 39, 60], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 44], [0, 1], [8], [0], [5], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 5, 2, 8, 4, 8, 3, 3, 3, 3, 9, 0, 0, 5, 6, 4, 2, 6, 7, 2, 7, 5, 5, 7, 3, 7, 5, 0, 2, 8, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 6, 3, 0, 3, 0, 7, 3, 1, 7, 1, 6, 4, 1, 2], [16, 99, 96, 99, 61, 1, 64, 91, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 3, 6, 3, 3, 2, 2, 1, 1, 1, 62, 38, 24, 9], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.multiply(tf.math.multiply(beta, tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.negative(tf.math.square(grad)))))), tf.math.divide_no_nan(sigma, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.add(sigma, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.square(grad))), tf.math.add(sigma, tf.math.multiply(alpha, grad))), tf.math.add(alpha, tf.math.square(grad))), tf.math.negative(tf.math.add(tf.math.sqrt(grad), tf.math.square(alpha)))), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10315678268671036, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}]