[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8714285492897034, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224170207977295, 1.8650661706924438, 1.3872418403625488, 1.0910104513168335, 0.928340494632721, 0.8344709873199463, 0.7661133408546448, 0.7173222899436951, 0.692322850227356, 0.654999852180481, 0.6284563541412354, 0.6124195456504822, 0.582552433013916, 0.573566198348999, 0.5571500062942505, 0.5461612939834595, 0.5419596433639526, 0.5192972421646118, 0.5050115585327148, 0.5058286786079407, 0.48812174797058105, 0.47863060235977173, 0.4714292287826538, 0.4727001190185547, 0.4561349153518677, 0.44693273305892944, 0.4427798092365265, 0.43593376874923706, 0.4267215430736542, 0.42183417081832886, 0.41019880771636963, 0.4115772843360901, 0.4059101641178131, 0.3978593051433563, 0.39606836438179016, 0.39100176095962524, 0.3797147870063782, 0.37436097860336304, 0.36738669872283936, 0.36806434392929077, 0.35669195652008057, 0.35445600748062134, 0.353383868932724, 0.3415481746196747, 0.33609944581985474, 0.33752182126045227, 0.32762953639030457, 0.33054226636886597, 0.3264673948287964, 0.31996867060661316, 0.31391412019729614, 0.3151184022426605, 0.2967292070388794, 0.3038487732410431, 0.29486122727394104, 0.2915985584259033, 0.2901727259159088, 0.28646695613861084, 0.2796177268028259, 0.2811148762702942], "accuracy": [0.2775062620639801, 0.4982168674468994, 0.568220853805542, 0.6180161237716675, 0.6744155287742615, 0.6976621150970459, 0.726192057132721, 0.7412495017051697, 0.748249888420105, 0.7604015469551086, 0.7725531458854675, 0.7750627398490906, 0.7869502305984497, 0.7928939461708069, 0.7964601516723633, 0.8005547523498535, 0.8034605979919434, 0.8153480291366577, 0.8156121969223022, 0.8190463781356812, 0.8247259259223938, 0.8302733898162842, 0.8290846943855286, 0.83119797706604, 0.8370096683502197, 0.8425571322441101, 0.837537944316864, 0.8428213000297546, 0.8467837572097778, 0.8502179384231567, 0.8506141901016235, 0.8466516733169556, 0.8548408150672913, 0.8595958352088928, 0.8564258217811584, 0.8580108284950256, 0.8643507957458496, 0.8673887252807617, 0.8709549307823181, 0.8640866279602051, 0.8701624870300293, 0.8741249442100525, 0.8754457831382751, 0.874389111995697, 0.8790120482444763, 0.8770307898521423, 0.8835028409957886, 0.8820499181747437, 0.8833707571029663, 0.8877294659614563, 0.8864086866378784, 0.8849557638168335, 0.8910315632820129, 0.8911636471748352, 0.8931449055671692, 0.8923524022102356, 0.8973715305328369, 0.8971073627471924, 0.9035794734954834, 0.8981640338897705], "val_loss": [2.040534734725952, 1.5123999118804932, 1.0397671461105347, 0.8318246006965637, 0.7440026998519897, 0.688287615776062, 0.6412486433982849, 0.6077057719230652, 0.5856516361236572, 0.5596574544906616, 0.5442262887954712, 0.5282561779022217, 0.5188499093055725, 0.5035261511802673, 0.49424320459365845, 0.48264193534851074, 0.4760996401309967, 0.46256184577941895, 0.4538291096687317, 0.4522697329521179, 0.44469913840293884, 0.43470823764801025, 0.4325146973133087, 0.43646353483200073, 0.4224707782268524, 0.42234334349632263, 0.4179614186286926, 0.4114173948764801, 0.4073123037815094, 0.397158682346344, 0.3981865346431732, 0.39002925157546997, 0.391679048538208, 0.3878469169139862, 0.3850941061973572, 0.38511744141578674, 0.38134583830833435, 0.3768003284931183, 0.37674787640571594, 0.3679075241088867, 0.3705172538757324, 0.3674684762954712, 0.36418595910072327, 0.3592953383922577, 0.366496741771698, 0.3550788462162018, 0.3594094216823578, 0.3561951518058777, 0.35571223497390747, 0.3509123921394348, 0.34699156880378723, 0.34619295597076416, 0.34341228008270264, 0.3464086949825287, 0.3392179012298584, 0.33642691373825073, 0.3378097414970398, 0.333530992269516, 0.3354698121547699, 0.33711108565330505], "val_accuracy": [0.5173333287239075, 0.6430000066757202, 0.6756666898727417, 0.7043333053588867, 0.7269999980926514, 0.7463333606719971, 0.7603333592414856, 0.7736666798591614, 0.7846666574478149, 0.7903333306312561, 0.800000011920929, 0.8040000200271606, 0.8113333582878113, 0.8190000057220459, 0.8226666450500488, 0.8263333439826965, 0.8349999785423279, 0.8316666483879089, 0.8370000123977661, 0.8453333377838135, 0.8463333249092102, 0.8483333587646484, 0.8523333072662354, 0.8463333249092102, 0.8543333411216736, 0.8543333411216736, 0.8560000061988831, 0.8546666502952576, 0.8569999933242798, 0.8629999756813049, 0.8613333106040955, 0.8656666874885559, 0.8600000143051147, 0.8643333315849304, 0.8656666874885559, 0.8669999837875366, 0.8666666746139526, 0.8693333268165588, 0.8643333315849304, 0.8706666827201843, 0.8736666440963745, 0.8713333606719971, 0.8743333220481873, 0.8763333559036255, 0.8740000128746033, 0.8743333220481873, 0.8766666650772095, 0.874666690826416, 0.8730000257492065, 0.8796666860580444, 0.878000020980835, 0.8776666522026062, 0.8820000290870667, 0.8790000081062317, 0.8849999904632568, 0.8836666941642761, 0.8823333382606506, 0.8823333382606506, 0.8849999904632568, 0.878333330154419]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8568571209907532, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293031930923462, 2.1872642040252686, 1.7621363401412964, 1.330675482749939, 1.0513781309127808, 0.8822400569915771, 0.8254956007003784, 0.7997410893440247, 0.7497432231903076, 0.7294154763221741, 0.704167902469635, 0.6755518317222595, 0.6422145962715149, 0.6148275136947632, 0.6126810908317566, 0.5925149917602539, 0.5848469734191895, 0.5715391635894775, 0.5555720925331116, 0.5367897748947144, 0.5176178812980652, 0.5125412344932556, 0.5113978981971741, 0.4966568052768707, 0.4759393036365509, 0.4816133975982666, 0.45852935314178467, 0.46919122338294983, 0.4416183829307556, 0.44074395298957825, 0.4252289831638336, 0.43464452028274536, 0.42691710591316223, 0.42246299982070923, 0.40535610914230347, 0.40033966302871704, 0.39508211612701416, 0.38659992814064026, 0.38320067524909973, 0.3780060410499573, 0.37596091628074646, 0.36025145649909973, 0.36522606015205383], "accuracy": [0.12930920720100403, 0.33958524465560913, 0.4449874460697174, 0.5456346869468689, 0.640338122844696, 0.6754721999168396, 0.6964733600616455, 0.7143045663833618, 0.7030775547027588, 0.7240787148475647, 0.7313432693481445, 0.7375511527061462, 0.7478536367416382, 0.7580240368843079, 0.7667415142059326, 0.7707040309906006, 0.778232753276825, 0.7798177003860474, 0.7794214487075806, 0.791969358921051, 0.7994980812072754, 0.8029322624206543, 0.806630551815033, 0.8112534880638123, 0.8189142942428589, 0.8189142942428589, 0.8245938420295715, 0.8220842480659485, 0.8315942287445068, 0.8296129703521729, 0.8378021121025085, 0.8342359066009521, 0.839519202709198, 0.8391229510307312, 0.8467837572097778, 0.8520671129226685, 0.8499537706375122, 0.8482366800308228, 0.8569541573524475, 0.8556333184242249, 0.8562937378883362, 0.860652506351471, 0.8709549307823181], "val_loss": [2.246577739715576, 2.0195491313934326, 1.1287068128585815, 0.8834874629974365, 0.7474826574325562, 0.6897153854370117, 0.664499044418335, 0.6369127035140991, 0.6253151893615723, 0.6161643266677856, 0.5792666077613831, 0.5650285482406616, 0.5425540208816528, 0.5269935727119446, 0.5179483294487, 0.5142737627029419, 0.5062441229820251, 0.49867796897888184, 0.49652326107025146, 0.48897334933280945, 0.4760875999927521, 0.4724506437778473, 0.45574918389320374, 0.45405954122543335, 0.4428335726261139, 0.4352419078350067, 0.4325845539569855, 0.4265015125274658, 0.41738733649253845, 0.41081419587135315, 0.41072583198547363, 0.4071987569332123, 0.40993350744247437, 0.40679386258125305, 0.3990732431411743, 0.3910985589027405, 0.3901428282260895, 0.399118036031723, 0.3947974443435669, 0.3881971836090088, 0.3986748456954956, 0.3978308141231537, 0.40531033277511597], "val_accuracy": [0.4273333251476288, 0.49300000071525574, 0.6570000052452087, 0.6913333535194397, 0.7179999947547913, 0.7493333220481873, 0.7473333477973938, 0.7360000014305115, 0.7563333511352539, 0.7513333559036255, 0.765666663646698, 0.7753333449363708, 0.7879999876022339, 0.800000011920929, 0.8016666769981384, 0.8026666641235352, 0.8006666898727417, 0.8090000152587891, 0.8106666803359985, 0.8096666932106018, 0.8213333487510681, 0.8253333568572998, 0.8336666822433472, 0.8363333344459534, 0.8346666693687439, 0.8389999866485596, 0.8410000205039978, 0.8473333120346069, 0.8496666550636292, 0.8516666889190674, 0.8533333539962769, 0.859666645526886, 0.859333336353302, 0.8586666584014893, 0.8650000095367432, 0.8646666407585144, 0.859000027179718, 0.8686666488647461, 0.8640000224113464, 0.8663333058357239, 0.8576666712760925, 0.8616666793823242, 0.8603333234786987]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 0], [0, 1, 9], [0], [0, 84], [1], [0], [2], [0]], "fitness": -0.8225714564323425, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5625349283218384, 0.8686637878417969, 0.7031003832817078, 0.6127634048461914, 0.5705934166908264, 0.5633910894393921, 0.5543029308319092, 0.5269262194633484, 0.5075118541717529, 0.5065221786499023, 0.507891058921814, 0.5249226093292236, 0.5403438806533813], "accuracy": [0.48289525508880615, 0.7084929347038269, 0.7392682433128357, 0.7749306559562683, 0.7841764688491821, 0.796328067779541, 0.8012151718139648, 0.8074230551719666, 0.811649739742279, 0.8240655064582825, 0.8177255392074585, 0.8138951063156128, 0.811649739742279], "val_loss": [0.8344272375106812, 0.610373854637146, 0.5369107127189636, 0.5166140198707581, 0.5062708854675293, 0.5090634226799011, 0.48380160331726074, 0.4731561541557312, 0.5128831267356873, 0.5489040613174438, 0.5125182867050171, 0.5003127455711365, 0.5232545137405396], "val_accuracy": [0.734333336353302, 0.7806666493415833, 0.8130000233650208, 0.8180000185966492, 0.8236666917800903, 0.8180000185966492, 0.8336666822433472, 0.8500000238418579, 0.8286666870117188, 0.8489999771118164, 0.8353333473205566, 0.8483333587646484, 0.8479999899864197]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 3, 1, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 8, 3], [0, 0, 1, 0, 2], [83, 99, 27], [1, 0, 1, 1], [0, 6], [1, 1], [0], [0, 1], [8], [6], [23], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 1, 0, 1, 0, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [48339460096.0, 8035546693632.0, 146691286106112.0, 1137202113282048.0, 5383554137587712.0, 1.964325626655539e+16], "accuracy": [0.10394927859306335, 0.09668471664190292, 0.10011887550354004, 0.09853387624025345, 0.10038304328918457, 0.09721305221319199], "val_loss": [505653297152.0, 29691738062848.0, 347535365373952.0, 2068200833417216.0, 8468323666755584.0, 2.733639524469965e+16], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 0, 0, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 4, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 0, 1, 0, 1, 1], [0, 5, 7, 7], [0, 5, 6], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 0, 1, 5, 1, 4, 2, 8, 0], [0, 0, 0, 3, 0, 0, 3, 1, 4, 2], [16, 99, 96, 99, 99, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 2, 1, 1, 1, 7, 4, 3, 1, 21, 12, 9, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))))))), sigma)), tf.math.sqrt(tf.math.negative(alpha))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [4, 2, 3, 0, 3, 7, 1, 5, 4, 5], [0, 1, 0, 1, 1, 1, 2, 0], [39, 39, 67], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 2, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 3, 8, 1, 4, 1, 4, 2, 8], [0, 1, 0, 3, 0, 0, 3, 1, 2, 0], [16, 71, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 10, 8, 3, 10, 6, 4, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.square(alpha))), alpha)), grad), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303521156311035, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [2, 2, 3, 0, 3], [0, 1, 0, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 4, 1, 8, 1, 5, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 10, 6, 4, 2, 1, 0, 1, 1, 17, 9, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma), alpha)", "other_info": {"loss": [2.318723440170288, 3.36540150642395, 9.170721054077148, 16.525924682617188, 24.426584243774414, 32.977264404296875], "accuracy": [0.10381719470024109, 0.10447761416435242, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.455073833465576, 6.217967987060547, 13.581799507141113, 21.094226837158203, 29.61733627319336, 38.212364196777344], "val_accuracy": [0.09966666996479034, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503, 0.09600000083446503]}}]