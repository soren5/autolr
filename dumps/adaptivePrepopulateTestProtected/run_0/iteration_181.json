[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8634285926818848, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2226243019104004, 1.8659508228302002, 1.3923859596252441, 1.0807034969329834, 0.9250791668891907, 0.8389977812767029, 0.7735288143157959, 0.7241690754890442, 0.684252917766571, 0.6637357473373413, 0.6337171792984009, 0.6082937121391296, 0.5890318155288696, 0.5735699534416199, 0.5525274872779846, 0.5423532724380493, 0.5220008492469788, 0.5182463526725769, 0.4965939521789551, 0.4907338321208954, 0.4799894690513611, 0.4729115664958954, 0.4701245427131653, 0.45293211936950684, 0.44786518812179565, 0.43758296966552734, 0.42582258582115173, 0.4235750436782837, 0.41950738430023193, 0.4073978662490845, 0.40449053049087524, 0.3933861255645752, 0.38706231117248535, 0.38920485973358154, 0.38118696212768555, 0.37024185061454773, 0.35799476504325867, 0.35726311802864075, 0.35061928629875183, 0.3511343002319336, 0.34502825140953064, 0.34374913573265076, 0.32998213171958923, 0.3306896984577179, 0.32607313990592957, 0.3215504586696625, 0.3123735785484314, 0.3107885718345642, 0.3079373240470886, 0.3065863847732544, 0.29955005645751953, 0.2926335036754608, 0.29028376936912537, 0.2846311330795288], "accuracy": [0.2674679756164551, 0.4954431354999542, 0.5675604343414307, 0.6264694333076477, 0.6730946898460388, 0.6964733600616455, 0.7217012047767639, 0.7342491149902344, 0.7506273984909058, 0.7556465268135071, 0.7718927264213562, 0.7827235460281372, 0.7849689722061157, 0.7954035401344299, 0.8009510040283203, 0.8053097128868103, 0.8109893202781677, 0.8128384351730347, 0.8197067975997925, 0.8260467648506165, 0.8267071843147278, 0.828292191028595, 0.8329150676727295, 0.8337075710296631, 0.8374059200286865, 0.843481719493866, 0.848368763923645, 0.845859169960022, 0.8475762605667114, 0.8551049828529358, 0.8549728989601135, 0.858671247959137, 0.8595958352088928, 0.8590674996376038, 0.8651432991027832, 0.8668603897094727, 0.8702945709228516, 0.8714832663536072, 0.8780874609947205, 0.8776912093162537, 0.8745211958885193, 0.8786157965660095, 0.8802007436752319, 0.8836349248886108, 0.8819178342819214, 0.8833707571029663, 0.8861445188522339, 0.887201189994812, 0.8902390599250793, 0.885219931602478, 0.8928807377815247, 0.8920882344245911, 0.8976356983184814, 0.898428201675415], "val_loss": [2.0395591259002686, 1.517002820968628, 1.044041633605957, 0.8365812301635742, 0.7433754801750183, 0.6891544461250305, 0.6445779204368591, 0.6107859015464783, 0.5887289643287659, 0.5624877214431763, 0.5446897745132446, 0.5269272923469543, 0.5129736065864563, 0.504490315914154, 0.48990127444267273, 0.4854239821434021, 0.47346407175064087, 0.4656921327114105, 0.45699137449264526, 0.44877415895462036, 0.4435714781284332, 0.43959376215934753, 0.4371529221534729, 0.4321666359901428, 0.4224912226200104, 0.4144553542137146, 0.4106321334838867, 0.40967854857444763, 0.4158543646335602, 0.4074961245059967, 0.4017174541950226, 0.3965781331062317, 0.3947947919368744, 0.3968673050403595, 0.3895845413208008, 0.3884658217430115, 0.3839629292488098, 0.3771026134490967, 0.37573617696762085, 0.3857637643814087, 0.37445923686027527, 0.38075870275497437, 0.37858283519744873, 0.3728500306606293, 0.3696662485599518, 0.36654964089393616, 0.3664875030517578, 0.3636105954647064, 0.36178311705589294, 0.36321839690208435, 0.36148959398269653, 0.3639189600944519, 0.3636411130428314, 0.35789555311203003], "val_accuracy": [0.5183333158493042, 0.6423333287239075, 0.6790000200271606, 0.6996666789054871, 0.7250000238418579, 0.7476666569709778, 0.7633333206176758, 0.7699999809265137, 0.7776666879653931, 0.7933333516120911, 0.7960000038146973, 0.8053333163261414, 0.8086666464805603, 0.812666654586792, 0.8236666917800903, 0.8306666612625122, 0.8286666870117188, 0.8320000171661377, 0.8320000171661377, 0.8353333473205566, 0.8443333506584167, 0.8403333425521851, 0.840666651725769, 0.8403333425521851, 0.8483333587646484, 0.8486666679382324, 0.8526666760444641, 0.8539999723434448, 0.8533333539962769, 0.856333315372467, 0.8493333458900452, 0.8583333492279053, 0.8606666922569275, 0.8566666841506958, 0.8536666631698608, 0.862333357334137, 0.8606666922569275, 0.862666666507721, 0.8666666746139526, 0.8586666584014893, 0.8666666746139526, 0.8606666922569275, 0.8586666584014893, 0.8683333396911621, 0.8669999837875366, 0.8669999837875366, 0.8690000176429749, 0.8679999709129333, 0.871999979019165, 0.8659999966621399, 0.8709999918937683, 0.8690000176429749, 0.8706666827201843, 0.8696666955947876]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 1], [0, 8, 3], [0, 1], [0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 2, 5, 7, 7, 8, 7], [0, 0, 2, 1, 1], [0, 41], [0, 1], [0], [1], [0]], "fitness": -0.8254285454750061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.add(beta, alpha)), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2923495769500732, 2.1871895790100098, 1.7593964338302612, 1.3173906803131104, 1.0667158365249634, 0.8864428997039795, 0.8025640249252319, 0.781009316444397, 0.7555054426193237, 0.7242497205734253, 0.7036398649215698, 0.6570407748222351, 0.6437487006187439, 0.6202016472816467, 0.5956059694290161, 0.584386944770813, 0.5814944505691528, 0.5635039806365967, 0.5416716933250427, 0.5371996164321899, 0.5374755859375, 0.5212900042533875, 0.5036755204200745, 0.4932495057582855, 0.49556806683540344, 0.4835697412490845, 0.4696260690689087, 0.4603298604488373, 0.4660401940345764, 0.44562214612960815, 0.4313923120498657, 0.4343412220478058, 0.43269750475883484, 0.40708816051483154, 0.41493451595306396, 0.38970640301704407, 0.39140522480010986, 0.38290974497795105, 0.38775455951690674, 0.36494702100753784, 0.3720482587814331, 0.3655521273612976, 0.3523694574832916, 0.3478337824344635, 0.3449907600879669, 0.33783867955207825, 0.3304235637187958, 0.3264806568622589, 0.31859540939331055, 0.32039669156074524, 0.32156676054000854], "accuracy": [0.13221503794193268, 0.32743361592292786, 0.4345529079437256, 0.5555408596992493, 0.6338660717010498, 0.6707172393798828, 0.7088891863822937, 0.7086250185966492, 0.7033417224884033, 0.7177387475967407, 0.7326641082763672, 0.7343811988830566, 0.7520803213119507, 0.7617223858833313, 0.7707040309906006, 0.78113853931427, 0.7766477465629578, 0.7778365015983582, 0.7922335267066956, 0.7901201844215393, 0.7845727205276489, 0.8026680946350098, 0.8057059645652771, 0.811649739742279, 0.8095363974571228, 0.8075551390647888, 0.8240655064582825, 0.8227446675300598, 0.8183859586715698, 0.8228767514228821, 0.8305375576019287, 0.8342359066009521, 0.8305375576019287, 0.8421608805656433, 0.8396512866020203, 0.8426892161369324, 0.8428213000297546, 0.847840428352356, 0.8545766472816467, 0.8544445633888245, 0.8515387773513794, 0.8495575189590454, 0.86118084192276, 0.8577466607093811, 0.8663320541381836, 0.8631620407104492, 0.8647470474243164, 0.8684453964233398, 0.8710870146751404, 0.8753136992454529, 0.872407853603363], "val_loss": [2.246521472930908, 2.015613317489624, 1.1450923681259155, 0.895774245262146, 0.7443530559539795, 0.6968234181404114, 0.6654562950134277, 0.6747741103172302, 0.6610570549964905, 0.6384863257408142, 0.6031147241592407, 0.5881252884864807, 0.5638929009437561, 0.5575432181358337, 0.5397159457206726, 0.5380927920341492, 0.5341181755065918, 0.5101392269134521, 0.5057742595672607, 0.5034321546554565, 0.49336376786231995, 0.497295081615448, 0.48444437980651855, 0.48246175050735474, 0.46693509817123413, 0.4566415548324585, 0.45100489258766174, 0.4527290165424347, 0.4410385191440582, 0.4440474510192871, 0.43727245926856995, 0.4289815127849579, 0.4352285861968994, 0.4391990900039673, 0.4300413131713867, 0.4191291034221649, 0.42139339447021484, 0.43415576219558716, 0.42336443066596985, 0.42565083503723145, 0.4211365878582001, 0.4244333505630493, 0.4297454357147217, 0.4206959903240204, 0.4195573627948761, 0.4164687991142273, 0.4162569046020508, 0.41110050678253174, 0.41932591795921326, 0.434003621339798, 0.4183149039745331], "val_accuracy": [0.40666666626930237, 0.437666654586792, 0.6333333253860474, 0.6796666383743286, 0.734333336353302, 0.7400000095367432, 0.7403333187103271, 0.7473333477973938, 0.7433333396911621, 0.7549999952316284, 0.7636666893959045, 0.7643333077430725, 0.7733333110809326, 0.7870000004768372, 0.7916666865348816, 0.7956666946411133, 0.7993333339691162, 0.8056666851043701, 0.8043333292007446, 0.8169999718666077, 0.824999988079071, 0.8116666674613953, 0.8233333230018616, 0.8303333520889282, 0.8226666450500488, 0.8273333311080933, 0.8346666693687439, 0.8403333425521851, 0.8399999737739563, 0.8330000042915344, 0.8416666388511658, 0.8453333377838135, 0.8463333249092102, 0.843999981880188, 0.8526666760444641, 0.8566666841506958, 0.856333315372467, 0.8533333539962769, 0.8550000190734863, 0.8619999885559082, 0.8600000143051147, 0.8586666584014893, 0.8629999756813049, 0.8650000095367432, 0.8673333525657654, 0.8703333139419556, 0.8669999837875366, 0.8700000047683716, 0.8703333139419556, 0.8676666617393494, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 5, 3, 2, 1, 12, 7, 5, 2, 2, 1, 1, 0], "tree_depth": 15}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0], [0, 3, 9, 9], [0], [0, 32], [1], [0], [2], [0]], "fitness": -0.800000011920929, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5480486154556274, 0.8473115563392639, 0.6967175006866455, 0.632389485836029, 0.591822624206543, 0.5551215410232544, 0.5227654576301575, 0.5230894088745117, 0.5071080923080444, 0.4853672683238983, 0.47839587926864624, 0.47596290707588196, 0.46102383732795715, 0.5265617370605469, 0.5118933916091919, 0.5098588466644287], "accuracy": [0.4776119291782379, 0.7143045663833618, 0.7458723783493042, 0.7836481332778931, 0.7890635132789612, 0.8041210174560547, 0.8086118102073669, 0.8142913579940796, 0.8208954930305481, 0.8185180425643921, 0.8286884427070618, 0.8397833704948425, 0.834632158279419, 0.8156121969223022, 0.8248580098152161, 0.8267071843147278], "val_loss": [0.9194326400756836, 0.5951882004737854, 0.5291153788566589, 0.531117856502533, 0.5026701092720032, 0.49470099806785583, 0.5230038166046143, 0.5167580842971802, 0.49698173999786377, 0.48313501477241516, 0.5699560642242432, 0.4959348142147064, 0.5229679942131042, 0.5602893233299255, 0.5975902080535889, 0.5894227027893066], "val_accuracy": [0.6956666707992554, 0.7763333320617676, 0.812666654586792, 0.8100000023841858, 0.8223333358764648, 0.8199999928474426, 0.8253333568572998, 0.8196666836738586, 0.8220000267028809, 0.8303333520889282, 0.8396666646003723, 0.8320000171661377, 0.8349999785423279, 0.82833331823349, 0.824999988079071, 0.8366666436195374]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 4, 0, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 1, 3, 9, 3], [2, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 7, 6, 6, 8, 3, 3, 4], [0, 5, 3, 5], [93, 63], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.10085714608430862, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [1427.110595703125, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19270901381969452, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5427.11865234375, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}, "mapping_values": [1, 1, 0, 1, 0, 4, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 8}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [0, 2, 3, 0, 3, 2, 9, 2], [0, 1, 0, 2, 1], [39, 75, 40], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 8, 3, 5], [0, 2, 0, 0], [16, 16, 31], [0, 1], [0], [0], [35], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 5, 1, 6, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [64, 3, 96, 99, 74, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 3, 9, 5, 4, 3, 2, 1, 1, 1, 13, 7, 6, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, alpha))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 9, 9, 2, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5, 6, 4, 0, 7, 8, 4, 3, 3, 4, 5, 8, 2, 2, 5], [0, 2, 0, 3, 1, 5, 0, 5, 4, 3, 0, 2, 5, 2], [16, 16, 33, 15], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [1, 3, 3, 6, 0, 4, 4, 1, 4, 2, 8], [0, 3, 0, 3, 0, 0, 3, 1, 2, 0], [23, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 0, 1, 34, 20, 14, 4, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.negative(grad), tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.math.multiply(grad, tf.math.pow(tf.math.square(grad), tf.math.sqrt(tf.math.add(grad, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.square(grad))), beta)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.math.pow(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [1141089792.0, 21989693440.0, 100299735040.0, 278378086400.0, 609195130880.0, 1115643969536.0], "accuracy": [0.09576013684272766, 0.09959053993225098, 0.10328886657953262, 0.09800554811954498, 0.09760929644107819, 0.09932637959718704], "val_loss": [5291406848.0, 42326188032.0, 142845149184.0, 338589417472.0, 661299396608.0, 1142718201856.0], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 9, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 9, 9, 2], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 4, 1, 1, 6, 4, 2, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))))", "other_info": {"loss": [4.084588221998982e+29, 3878.57763671875, 6914.33154296875, 9624.6689453125, 12975.609375, 16118.5625, 19682.390625, 22436.48046875, 25394.978515625], "accuracy": [0.10830801725387573, 0.09866596013307571, 0.10355303436517715, 0.10711926966905594, 0.09959053993225098, 0.10487385839223862, 0.09589222073554993, 0.10276053100824356, 0.10328886657953262], "val_loss": [2411.231689453125, 4895.09033203125, 8468.8330078125, 12791.189453125, 14965.1240234375, 18197.9765625, 20779.4921875, 24853.416015625, 27800.720703125], "val_accuracy": [0.09966666996479034, 0.09933333098888397, 0.1003333330154419, 0.10266666859388351, 0.09866666793823242, 0.09966666996479034, 0.09933333098888397, 0.1003333330154419, 0.10266666859388351]}}]