[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8551428318023682, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222182512283325, 1.8562822341918945, 1.3886562585830688, 1.0820947885513306, 0.9299842119216919, 0.8341085314750671, 0.7698094248771667, 0.7170865535736084, 0.6789863705635071, 0.6478989124298096, 0.6296148896217346, 0.5995807647705078, 0.584128737449646, 0.5654448866844177, 0.5480775833129883, 0.532319962978363, 0.5209539532661438, 0.5127424001693726, 0.4985269010066986, 0.48502156138420105, 0.47439950704574585, 0.4769914746284485, 0.45801788568496704, 0.45741185545921326, 0.44123050570487976, 0.43358999490737915, 0.43217769265174866, 0.415820449590683, 0.41627973318099976, 0.406554639339447, 0.4024215340614319, 0.4054586589336395, 0.39164403080940247, 0.37939053773880005, 0.37811410427093506, 0.3788236677646637, 0.3703058063983917, 0.36735108494758606, 0.3537435531616211, 0.3600139319896698, 0.3503783047199249, 0.34054988622665405, 0.33710944652557373, 0.33569034934043884], "accuracy": [0.27499669790267944, 0.4924052357673645, 0.5617488026618958, 0.6185444593429565, 0.6629242897033691, 0.6993792057037354, 0.7230220437049866, 0.737947404384613, 0.7524765729904175, 0.7611940503120422, 0.7693831920623779, 0.7812706232070923, 0.7874785661697388, 0.7936864495277405, 0.7994980812072754, 0.8072909712791443, 0.8128384351730347, 0.8165367841720581, 0.8214238286018372, 0.8226125836372375, 0.8293488025665283, 0.8296129703521729, 0.8354246616363525, 0.8343679904937744, 0.8453308939933777, 0.8444063067436218, 0.8473120927810669, 0.8508783578872681, 0.8486329317092896, 0.8543124794960022, 0.8553691506385803, 0.8562937378883362, 0.8576145768165588, 0.8652753829956055, 0.863558292388916, 0.8623695969581604, 0.8691058158874512, 0.8705587387084961, 0.8737286925315857, 0.872407853603363, 0.8759741187095642, 0.8817857503890991, 0.8779553771018982, 0.8751816153526306], "val_loss": [2.033989429473877, 1.5056383609771729, 1.0338468551635742, 0.8256410956382751, 0.7408024072647095, 0.6881085634231567, 0.6447283625602722, 0.6084232330322266, 0.5833031535148621, 0.5641508102416992, 0.5428640842437744, 0.5246484875679016, 0.5110364556312561, 0.49839428067207336, 0.4881552457809448, 0.482011079788208, 0.471902996301651, 0.4626849889755249, 0.4600781202316284, 0.4455004930496216, 0.4417198598384857, 0.4359138607978821, 0.42825788259506226, 0.4225201904773712, 0.41791439056396484, 0.4138519763946533, 0.40790894627571106, 0.40358150005340576, 0.4004627764225006, 0.39846256375312805, 0.3987289369106293, 0.39032357931137085, 0.3877178132534027, 0.38529324531555176, 0.3798712491989136, 0.3793965280056, 0.3731682598590851, 0.37514209747314453, 0.36616051197052, 0.36986473202705383, 0.36910298466682434, 0.35987430810928345, 0.3647867441177368, 0.35687801241874695], "val_accuracy": [0.5713333487510681, 0.6596666574478149, 0.6793333292007446, 0.7099999785423279, 0.7296666502952576, 0.7406666874885559, 0.7540000081062317, 0.7703333497047424, 0.7753333449363708, 0.7860000133514404, 0.79666668176651, 0.8050000071525574, 0.8106666803359985, 0.8136666417121887, 0.8186666369438171, 0.8236666917800903, 0.8226666450500488, 0.8343333601951599, 0.831333339214325, 0.8333333134651184, 0.8423333168029785, 0.8393333554267883, 0.8446666598320007, 0.8453333377838135, 0.8506666421890259, 0.8519999980926514, 0.8519999980926514, 0.8579999804496765, 0.8536666631698608, 0.8560000061988831, 0.8553333282470703, 0.8613333106040955, 0.8606666922569275, 0.8610000014305115, 0.859666645526886, 0.862333357334137, 0.8636666536331177, 0.8643333315849304, 0.8726666569709778, 0.8659999966621399, 0.8659999966621399, 0.8700000047683716, 0.8669999837875366, 0.871999979019165]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0], [0, 9], [0], [0], [0, 0, 1, 0, 1], [0, 7, 8], [0, 1], [0], [0, 1], [0], [1], [0]], "fitness": -0.8505714535713196, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292889356613159, 2.1881985664367676, 1.7720226049423218, 1.3428081274032593, 1.0834437608718872, 0.9259891510009766, 0.8361837863922119, 0.8202393651008606, 0.7636025547981262, 0.7280593514442444, 0.6875566244125366, 0.6804461479187012, 0.6230605244636536, 0.6138696670532227, 0.594895601272583, 0.5915718674659729, 0.5779116749763489, 0.5799005627632141, 0.5503241419792175, 0.5403618812561035, 0.5253495573997498, 0.5110105872154236, 0.5034971833229065, 0.5017163753509521, 0.49563872814178467, 0.4828645586967468, 0.4784902036190033, 0.46387457847595215, 0.45332789421081543, 0.447549432516098, 0.43922170996665955, 0.42998000979423523, 0.42130139470100403, 0.4178520739078522, 0.4109621047973633, 0.4197154939174652, 0.3921729624271393, 0.38693156838417053, 0.3825955390930176, 0.3845207989215851, 0.38259586691856384], "accuracy": [0.12468630075454712, 0.32426363229751587, 0.4360058009624481, 0.5453705191612244, 0.6358473300933838, 0.6664905548095703, 0.6972658634185791, 0.7104741930961609, 0.7079645991325378, 0.7296261787414551, 0.7403249144554138, 0.7424382567405701, 0.7563069462776184, 0.7618544697761536, 0.7700436115264893, 0.7770439982414246, 0.7815347909927368, 0.7749306559562683, 0.7853652238845825, 0.7876105904579163, 0.7964601516723633, 0.802800178527832, 0.8045172095298767, 0.8047813773155212, 0.8041210174560547, 0.8152159452438354, 0.8208954930305481, 0.8202351331710815, 0.8277638554573059, 0.8278959393501282, 0.828292191028595, 0.8315942287445068, 0.8391229510307312, 0.8449346423149109, 0.8433496356010437, 0.8345000743865967, 0.8504821062088013, 0.8507462739944458, 0.8551049828529358, 0.8471800088882446, 0.8535200357437134], "val_loss": [2.245169162750244, 2.0149850845336914, 1.1279394626617432, 0.8967223167419434, 0.757297933101654, 0.729213535785675, 0.6825779676437378, 0.6550956964492798, 0.627585232257843, 0.6041117906570435, 0.5743486881256104, 0.5528401732444763, 0.5408548712730408, 0.5247887969017029, 0.5213809609413147, 0.5027565360069275, 0.512010395526886, 0.4968772828578949, 0.4884817600250244, 0.4829459488391876, 0.48462551832199097, 0.4900089204311371, 0.4884400963783264, 0.47346240282058716, 0.46711841225624084, 0.4735616147518158, 0.4601835012435913, 0.4580274224281311, 0.45354214310646057, 0.4488716721534729, 0.4386809766292572, 0.43904009461402893, 0.4470413327217102, 0.4378250241279602, 0.4285169243812561, 0.42868635058403015, 0.4276145100593567, 0.4373546242713928, 0.42549169063568115, 0.4358101487159729, 0.4401421844959259], "val_accuracy": [0.42633333802223206, 0.45233333110809326, 0.6496666669845581, 0.6959999799728394, 0.7166666388511658, 0.7253333330154419, 0.75, 0.7519999742507935, 0.7596666812896729, 0.7723333239555359, 0.7773333191871643, 0.7900000214576721, 0.8029999732971191, 0.8059999942779541, 0.8076666593551636, 0.8159999847412109, 0.8083333373069763, 0.8206666707992554, 0.8153333067893982, 0.8193333148956299, 0.8273333311080933, 0.8220000267028809, 0.8289999961853027, 0.8346666693687439, 0.8316666483879089, 0.8286666870117188, 0.8366666436195374, 0.8379999995231628, 0.8376666903495789, 0.8396666646003723, 0.8493333458900452, 0.8476666808128357, 0.847000002861023, 0.8433333039283752, 0.8513333201408386, 0.859333336353302, 0.8579999804496765, 0.8539999723434448, 0.8526666760444641, 0.8519999980926514, 0.8526666760444641]}, "mapping_values": [1, 10, 5, 5, 3, 2, 2, 0, 1, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8354285955429077, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6137014627456665, 0.9009185433387756, 0.682955265045166, 0.623782753944397, 0.5792568922042847, 0.54847252368927, 0.5256944894790649, 0.5094285011291504, 0.4595871567726135, 0.44061732292175293, 0.4527256488800049, 0.45323827862739563, 0.4459320902824402, 0.4396558403968811, 0.47880998253822327, 0.5008071064949036, 0.5098280310630798, 0.5140313506126404, 0.5537742972373962, 0.5447543859481812, 0.5442771911621094, 0.5323845148086548, 0.547636091709137], "accuracy": [0.4628186523914337, 0.6947563290596008, 0.7519482374191284, 0.7720248103141785, 0.7909126877784729, 0.7968564033508301, 0.8087438941001892, 0.8094043135643005, 0.8327829837799072, 0.8378021121025085, 0.8451988101005554, 0.8457271456718445, 0.8309338092803955, 0.8442742228507996, 0.8451988101005554, 0.830669641494751, 0.8355567455291748, 0.8372738361358643, 0.8195747137069702, 0.8284242749214172, 0.8284242749214172, 0.8245938420295715, 0.8294808864593506], "val_loss": [0.9384010434150696, 0.7002829313278198, 0.6156951785087585, 0.5348953008651733, 0.512928307056427, 0.5259572267532349, 0.49490371346473694, 0.4977450370788574, 0.4712376296520233, 0.5563055276870728, 0.48908257484436035, 0.49785754084587097, 0.5978823304176331, 0.5293582081794739, 0.5895273685455322, 0.6564316749572754, 0.6149506568908691, 0.6166861057281494, 0.6390852332115173, 0.5939885973930359, 0.6445763111114502, 0.6548150181770325, 0.6720978617668152], "val_accuracy": [0.653333306312561, 0.7559999823570251, 0.7756666541099548, 0.7956666946411133, 0.8173333406448364, 0.8086666464805603, 0.8273333311080933, 0.8343333601951599, 0.8323333263397217, 0.8433333039283752, 0.8460000157356262, 0.8399999737739563, 0.8456666469573975, 0.8373333215713501, 0.8473333120346069, 0.843999981880188, 0.8356666564941406, 0.8506666421890259, 0.843666672706604, 0.8346666693687439, 0.8320000171661377, 0.840666651725769, 0.8403333425521851]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 4, 3, 0, 0], [2, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [6, 3, 4, 6, 8, 1, 4, 1, 4, 2, 8, 6, 3, 4, 6, 9, 6, 1, 9, 9, 7], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 1, 7, 0, 1], [53, 99, 96, 99, 61, 1, 24, 79, 38, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 0, 10, 6, 4, 2, 2, 1, 1, 1, 35, 21, 14, 10], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.negative(alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma))), tf.math.sqrt(tf.math.divide_no_nan(alpha, beta)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), alpha), tf.math.divide_no_nan(grad, tf.math.subtract(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 0], [1, 1, 1, 2], [53, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 19], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 41]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), tf.math.multiply(tf.math.negative(alpha), alpha)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}, "mapping_values": [1, 10, 6, 4, 0, 6, 3, 3, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 72], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 6], [0, 0, 0, 3, 0, 1, 3, 1, 2, 0, 0], [16, 99, 96, 2, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 6, 3, 3, 2, 2, 1, 1, 1, 22, 11, 11, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.pow(alpha, sigma)))), alpha), tf.math.add(tf.math.divide_no_nan(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [63.86671829223633, 2.3225958347320557, 2.309368133544922, 2.309724807739258, 2.3091890811920166, 2.3101141452789307], "accuracy": [0.10130762308835983, 0.09192973375320435, 0.09219389408826828, 0.08928807079792023, 0.09470347315073013, 0.0948355570435524], "val_loss": [2.3025853633880615, 2.3083958625793457, 2.308396816253662, 2.308396816253662, 2.308396816253662, 2.308396816253662], "val_accuracy": [0.09799999743700027, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276, 0.0860000029206276]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [4, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 1, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [6, 8, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 6, 4, 2, 1, 2, 1, 1, 1, 4, 2, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]