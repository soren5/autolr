[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.852571427822113, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223749876022339, 1.8678734302520752, 1.3892850875854492, 1.08064603805542, 0.9187454581260681, 0.8237496018409729, 0.7501221299171448, 0.7096479535102844, 0.6649343371391296, 0.649890124797821, 0.616416871547699, 0.5892125964164734, 0.5756268501281738, 0.5591641068458557, 0.5412600040435791, 0.5375180840492249, 0.5156952142715454, 0.5101777911186218, 0.5029880404472351, 0.4895637631416321, 0.4808964431285858, 0.4612874984741211, 0.4595291316509247, 0.4425363540649414, 0.4464949071407318, 0.4294399619102478, 0.42794954776763916, 0.419241726398468, 0.4080694019794464, 0.40581488609313965, 0.4008600115776062, 0.3956899642944336, 0.3921562135219574, 0.387387216091156, 0.38061609864234924, 0.37333983182907104, 0.37482982873916626, 0.3641678988933563, 0.35804736614227295, 0.35333871841430664, 0.3450641930103302, 0.34723058342933655], "accuracy": [0.2654867172241211, 0.4858010709285736, 0.5679566860198975, 0.6192048788070679, 0.6708492636680603, 0.7077004313468933, 0.7269845604896545, 0.7437590956687927, 0.7572315335273743, 0.7648923397064209, 0.7771760821342468, 0.793950617313385, 0.7893276810646057, 0.7965922355651855, 0.806630551815033, 0.8087438941001892, 0.8146876096725464, 0.8171972036361694, 0.8238013386726379, 0.8239334225654602, 0.8302733898162842, 0.8381983637809753, 0.8337075710296631, 0.841500461101532, 0.841500461101532, 0.8502179384231567, 0.8471800088882446, 0.8507462739944458, 0.8552370667457581, 0.8533879518508911, 0.8540483713150024, 0.8562937378883362, 0.8634262084960938, 0.8658037185668945, 0.8619733452796936, 0.8683133125305176, 0.8663320541381836, 0.8730682730674744, 0.8725399374961853, 0.8737286925315857, 0.8775591254234314, 0.8772949576377869], "val_loss": [2.0371856689453125, 1.5093892812728882, 1.0471901893615723, 0.847074568271637, 0.7654861807823181, 0.7074564099311829, 0.6649778485298157, 0.6343739628791809, 0.6061553359031677, 0.5870908498764038, 0.5643104910850525, 0.5489891171455383, 0.5363653898239136, 0.5225261449813843, 0.5121031999588013, 0.506590723991394, 0.4918985962867737, 0.48433002829551697, 0.47564366459846497, 0.4686610996723175, 0.46051016449928284, 0.46059301495552063, 0.44988754391670227, 0.43984848260879517, 0.44122156500816345, 0.43425434827804565, 0.4298461079597473, 0.4248282015323639, 0.423526406288147, 0.4155944287776947, 0.41204914450645447, 0.4102863371372223, 0.4120663106441498, 0.4039136469364166, 0.4008999764919281, 0.39707109332084656, 0.3944130539894104, 0.3919084370136261, 0.3906420171260834, 0.3890024423599243, 0.3944445848464966, 0.3824176490306854], "val_accuracy": [0.5536666512489319, 0.6456666588783264, 0.6693333387374878, 0.6970000267028809, 0.7213333249092102, 0.7440000176429749, 0.7513333559036255, 0.762333333492279, 0.7763333320617676, 0.7910000085830688, 0.7983333468437195, 0.79666668176651, 0.8080000281333923, 0.8143333196640015, 0.8159999847412109, 0.8173333406448364, 0.8259999752044678, 0.8273333311080933, 0.8293333053588867, 0.8330000042915344, 0.8363333344459534, 0.8356666564941406, 0.8403333425521851, 0.8410000205039978, 0.8420000076293945, 0.8420000076293945, 0.8413333296775818, 0.8483333587646484, 0.8429999947547913, 0.8506666421890259, 0.8516666889190674, 0.8500000238418579, 0.846666693687439, 0.8546666502952576, 0.8553333282470703, 0.8583333492279053, 0.8616666793823242, 0.8533333539962769, 0.8586666584014893, 0.8606666922569275, 0.8516666889190674, 0.8610000014305115]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 7, 0, 4, 5, 7, 3], [0, 4, 5, 4, 2], [0], [1], [0], [2], [0]], "fitness": -0.829714298248291, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(tf.math.pow(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), tf.math.add(grad, tf.math.multiply(grad, beta)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5688879489898682, 0.9136398434638977, 0.7487283945083618, 0.6652849316596985, 0.6443371176719666, 0.6133589148521423, 0.5657881498336792, 0.5522886514663696, 0.5199209451675415, 0.5122170448303223, 0.5185785293579102, 0.5749749541282654, 0.5525957942008972, 0.5532048940658569, 0.5350201725959778, 0.5580043792724609, 0.5364224910736084, 0.5200148820877075], "accuracy": [0.499009370803833, 0.6910579800605774, 0.7312111854553223, 0.7539294958114624, 0.7564390301704407, 0.7812706232070923, 0.7898560166358948, 0.7924976944923401, 0.8043851256370544, 0.8113855719566345, 0.8127063512802124, 0.8020076751708984, 0.8067626357078552, 0.8087438941001892, 0.8115176558494568, 0.806630551815033, 0.8128384351730347, 0.8186501264572144], "val_loss": [1.0268582105636597, 0.7482955455780029, 0.6357700824737549, 0.5762736201286316, 0.5543014407157898, 0.538138747215271, 0.5499412417411804, 0.5198509693145752, 0.5426355004310608, 0.5211595296859741, 0.5273045897483826, 0.5167973041534424, 0.5584405660629272, 0.5609580278396606, 0.58231520652771, 0.5843638777732849, 0.5724853277206421, 0.5649988651275635], "val_accuracy": [0.6586666703224182, 0.7316666841506958, 0.7756666541099548, 0.7903333306312561, 0.8113333582878113, 0.8246666789054871, 0.8119999766349792, 0.8206666707992554, 0.8259999752044678, 0.8336666822433472, 0.8273333311080933, 0.8316666483879089, 0.8423333168029785, 0.8326666951179504, 0.8236666917800903, 0.8376666903495789, 0.8320000171661377, 0.8316666483879089]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 12, 7, 5, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 5, 7, 7, 6, 6, 5], [0, 1, 5, 2, 4], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8288571238517761, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.math.square(grad)), beta), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292722463607788, 2.1893672943115234, 1.7782841920852661, 1.356109380722046, 1.0831760168075562, 0.9239073395729065, 0.8469760417938232, 0.8146898150444031, 0.763090193271637, 0.7484458684921265, 0.7003292441368103, 0.678676426410675, 0.6577268838882446, 0.6254466772079468, 0.6020622253417969, 0.6013370752334595, 0.5821846723556519, 0.5623381733894348, 0.555614709854126, 0.5480571389198303, 0.5384789109230042, 0.5300105810165405, 0.5153131484985352, 0.5046184659004211, 0.4979543387889862, 0.47909486293792725, 0.483837753534317, 0.46887218952178955, 0.44943955540657043, 0.44781917333602905, 0.4335536062717438, 0.4352182149887085, 0.4390701353549957, 0.41730499267578125, 0.4151173233985901, 0.40796607732772827, 0.4050362706184387, 0.39968353509902954, 0.39366117119789124, 0.39447110891342163, 0.3908185660839081, 0.3663485646247864, 0.37448686361312866, 0.36930564045906067, 0.3606841266155243, 0.3490813672542572, 0.353838711977005, 0.36136460304260254, 0.3499411642551422], "accuracy": [0.12812046706676483, 0.32399946451187134, 0.43666622042655945, 0.5418042540550232, 0.6284506916999817, 0.6705851554870605, 0.6869634389877319, 0.7030775547027588, 0.7054550051689148, 0.7162858247756958, 0.7359662055969238, 0.7411174178123474, 0.7464007139205933, 0.7621186375617981, 0.7691190242767334, 0.7685906887054443, 0.7796856164932251, 0.7835160493850708, 0.7854973077774048, 0.7905164361000061, 0.7881389260292053, 0.7952714562416077, 0.8016114234924316, 0.805177628993988, 0.8117818236351013, 0.8146876096725464, 0.8203672170639038, 0.819442629814148, 0.8301413059234619, 0.8325188159942627, 0.8337075710296631, 0.8379341959953308, 0.8367455005645752, 0.837537944316864, 0.8374059200286865, 0.8453308939933777, 0.8424250483512878, 0.8507462739944458, 0.8486329317092896, 0.8479725122451782, 0.8449346423149109, 0.8504821062088013, 0.8557654023170471, 0.8614450097084045, 0.8548408150672913, 0.8650112152099609, 0.8628978729248047, 0.8594637513160706, 0.8640866279602051], "val_loss": [2.246340274810791, 2.020742416381836, 1.141499638557434, 0.8473724126815796, 0.7552369832992554, 0.7087196707725525, 0.688327968120575, 0.6566040515899658, 0.6377034783363342, 0.6114113926887512, 0.5871840119361877, 0.5442728996276855, 0.5254060626029968, 0.5223960876464844, 0.5062363147735596, 0.4960883855819702, 0.48928508162498474, 0.4772897958755493, 0.47564294934272766, 0.47239866852760315, 0.47014787793159485, 0.4614775478839874, 0.45187240839004517, 0.4467258155345917, 0.4477687180042267, 0.4375378489494324, 0.4291134476661682, 0.42963746190071106, 0.41986995935440063, 0.41660183668136597, 0.4191529154777527, 0.4198741018772125, 0.4121200442314148, 0.4121054410934448, 0.42005062103271484, 0.40664172172546387, 0.4095832407474518, 0.40915265679359436, 0.4036397337913513, 0.4031970202922821, 0.39497557282447815, 0.4005506634712219, 0.3914151191711426, 0.3920132517814636, 0.3940000832080841, 0.4019661843776703, 0.4028495252132416, 0.39334118366241455, 0.383067786693573], "val_accuracy": [0.4126666784286499, 0.4776666760444641, 0.6420000195503235, 0.6976666450500488, 0.734333336353302, 0.7436666488647461, 0.7429999709129333, 0.768666684627533, 0.7726666927337646, 0.7736666798591614, 0.7766666412353516, 0.7976666688919067, 0.7976666688919067, 0.8016666769981384, 0.8046666383743286, 0.8116666674613953, 0.8166666626930237, 0.8203333616256714, 0.8236666917800903, 0.8303333520889282, 0.8276666402816772, 0.8320000171661377, 0.8413333296775818, 0.8413333296775818, 0.8463333249092102, 0.8473333120346069, 0.8550000190734863, 0.8569999933242798, 0.8606666922569275, 0.8600000143051147, 0.8610000014305115, 0.8576666712760925, 0.8573333621025085, 0.862333357334137, 0.862333357334137, 0.8656666874885559, 0.8613333106040955, 0.8703333139419556, 0.8666666746139526, 0.8706666827201843, 0.8759999871253967, 0.8706666827201843, 0.8776666522026062, 0.878333330154419, 0.8740000128746033, 0.871999979019165, 0.8703333139419556, 0.8706666827201843, 0.875333309173584]}, "mapping_values": [1, 10, 5, 5, 3, 12, 7, 5, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 16}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 3, 0, 3], [0, 0, 0, 2, 2], [39, 39, 27], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 2, 4, 6], [0, 2, 0, 3, 1, 0, 3], [16, 16, 93], [0, 1], [0], [0], [99], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 0, 8, 2, 8], [0, 0, 1, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), tf.math.divide_no_nan(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3034117221832275, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}, "mapping_values": [1, 10, 5, 5, 3, 15, 8, 7, 3, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 16}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 5, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 3, 3], [16, 22], [0, 1], [0], [0], [50], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 3, 4, 1, 4, 2, 8], [0, 0, 0, 0, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 7, 4, 3, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3043150901794434, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [37, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 0, 5, 6, 6], [0, 2, 0, 3, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [6, 4, 4, 6, 0, 1, 4, 1, 4, 2, 8, 4, 4, 2, 4, 2, 0, 2, 5, 5], [0, 4, 0, 3, 0, 0, 3, 3, 4, 4, 5, 0, 7, 1, 3, 3], [16, 99, 53, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 13, 8, 5, 2, 2, 1, 1, 1, 36, 20, 16, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(beta)), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma), tf.math.sqrt(tf.math.pow(sigma, grad)))))), tf.math.pow(tf.math.add(tf.math.pow(grad, grad), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(grad), alpha))), tf.math.add(tf.math.square(sigma), tf.math.square(sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 2, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 8, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 40, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 1, 2, 1, 1, 0, 20, 11, 9, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.sqrt(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.add(grad, tf.constant(1.0, shape=shape, dtype=tf.float32))))), sigma)), alpha), tf.math.sqrt(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}]