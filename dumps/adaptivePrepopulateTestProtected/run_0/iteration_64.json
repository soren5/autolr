[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.871999979019165, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2241647243499756, 1.8714990615844727, 1.3920938968658447, 1.1018105745315552, 0.9424757361412048, 0.8283764123916626, 0.7684571146965027, 0.7219940423965454, 0.6758261322975159, 0.6421693563461304, 0.6229637265205383, 0.6025305986404419, 0.583750307559967, 0.5596389174461365, 0.5522958636283875, 0.5379718542098999, 0.5223056077957153, 0.5080698728561401, 0.4958271384239197, 0.48386111855506897, 0.48179396986961365, 0.4773530662059784, 0.46748679876327515, 0.45763781666755676, 0.44292813539505005, 0.44207102060317993, 0.42206403613090515, 0.41728657484054565, 0.4109649360179901, 0.40414509177207947, 0.399625688791275, 0.3962533473968506, 0.37998393177986145, 0.3822298049926758, 0.3792402744293213, 0.36652159690856934, 0.3692198097705841, 0.3554493486881256, 0.34424760937690735, 0.34639739990234375, 0.3409729599952698, 0.3416641652584076, 0.33869612216949463, 0.3273608088493347, 0.3307786285877228, 0.3090292513370514, 0.3080344796180725, 0.30198049545288086, 0.3033468425273895, 0.29674604535102844, 0.2876836955547333, 0.2888382375240326, 0.2808552384376526, 0.27743127942085266, 0.2788645923137665, 0.2688174545764923, 0.27396926283836365, 0.2623234689235687, 0.25782686471939087, 0.2579101622104645], "accuracy": [0.2826575040817261, 0.4939902126789093, 0.5692775249481201, 0.6184123754501343, 0.6639809608459473, 0.7030775547027588, 0.7202483415603638, 0.7378153204917908, 0.7503632307052612, 0.763439416885376, 0.7680623531341553, 0.7733456492424011, 0.7889314293861389, 0.7947431206703186, 0.7972526550292969, 0.8070268034934998, 0.8123101592063904, 0.8183859586715698, 0.8183859586715698, 0.824329674243927, 0.8227446675300598, 0.8298771381378174, 0.8269713521003723, 0.8337075710296631, 0.8412362933158875, 0.842028796672821, 0.8474441766738892, 0.8485008478164673, 0.846387505531311, 0.8536521196365356, 0.8564258217811584, 0.8590674996376038, 0.8642187118530273, 0.8621054291725159, 0.8628978729248047, 0.8679170608520508, 0.8660678863525391, 0.8728041052818298, 0.8771628737449646, 0.8693699836730957, 0.876370370388031, 0.874389111995697, 0.8833707571029663, 0.8824461698532104, 0.8823140859603882, 0.8902390599250793, 0.8870691061019897, 0.8914278149604797, 0.8877294659614563, 0.8939374089241028, 0.8948619961738586, 0.893541157245636, 0.8967111110687256, 0.9014661312103271, 0.8996169567108154, 0.9026548862457275, 0.9026548862457275, 0.9001452922821045, 0.9062210917472839, 0.9031832218170166], "val_loss": [2.0416500568389893, 1.521447777748108, 1.0504628419876099, 0.8501531481742859, 0.7624881863594055, 0.7025658488273621, 0.6594245433807373, 0.6281010508537292, 0.6025715470314026, 0.5828706622123718, 0.5647971034049988, 0.5597601532936096, 0.5398982763290405, 0.5257908701896667, 0.5171868205070496, 0.5045261979103088, 0.497443288564682, 0.4837806522846222, 0.47843822836875916, 0.4740495979785919, 0.46807974576950073, 0.4636386036872864, 0.4564288258552551, 0.45005038380622864, 0.4451703727245331, 0.4362027645111084, 0.4326091408729553, 0.42640775442123413, 0.42378735542297363, 0.4264239966869354, 0.4256121814250946, 0.4137115776538849, 0.4092291295528412, 0.40512824058532715, 0.40505558252334595, 0.4038935899734497, 0.4004965126514435, 0.3960703909397125, 0.3982180058956146, 0.3940703272819519, 0.391654372215271, 0.39573371410369873, 0.3846500515937805, 0.3863476514816284, 0.38452550768852234, 0.3831552267074585, 0.38199830055236816, 0.38214969635009766, 0.3763013482093811, 0.3830694258213043, 0.3789253234863281, 0.3802732229232788, 0.3779127895832062, 0.3744919002056122, 0.3722302317619324, 0.378055214881897, 0.3759330213069916, 0.37507855892181396, 0.3771705627441406, 0.37651386857032776], "val_accuracy": [0.5276666879653931, 0.6433333158493042, 0.6769999861717224, 0.6993333101272583, 0.7243333458900452, 0.7350000143051147, 0.7506666779518127, 0.7639999985694885, 0.7739999890327454, 0.7833333611488342, 0.7919999957084656, 0.7860000133514404, 0.8043333292007446, 0.8063333630561829, 0.8059999942779541, 0.8166666626930237, 0.8209999799728394, 0.8223333358764648, 0.8270000219345093, 0.8320000171661377, 0.8276666402816772, 0.8330000042915344, 0.8343333601951599, 0.8363333344459534, 0.8410000205039978, 0.843666672706604, 0.8429999947547913, 0.8460000157356262, 0.8496666550636292, 0.8493333458900452, 0.8450000286102295, 0.8523333072662354, 0.8539999723434448, 0.8546666502952576, 0.8539999723434448, 0.8539999723434448, 0.8576666712760925, 0.859666645526886, 0.8579999804496765, 0.8650000095367432, 0.8603333234786987, 0.8576666712760925, 0.862666666507721, 0.8656666874885559, 0.859000027179718, 0.8676666617393494, 0.8663333058357239, 0.8659999966621399, 0.8673333525657654, 0.8676666617393494, 0.8679999709129333, 0.8693333268165588, 0.8700000047683716, 0.8676666617393494, 0.871666669845581, 0.8703333139419556, 0.8676666617393494, 0.8690000176429749, 0.8696666955947876, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1, 1], [0, 2], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8479999899864197, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2934563159942627, 2.1897618770599365, 1.780367374420166, 1.357469916343689, 1.0745131969451904, 0.9307423830032349, 0.8363420963287354, 0.8225744366645813, 0.7586548924446106, 0.733371913433075, 0.7123562097549438, 0.6723580360412598, 0.6514114737510681, 0.6254127025604248, 0.6138842105865479, 0.5995725393295288, 0.5831578969955444, 0.5638668537139893, 0.5615562796592712, 0.5581662058830261, 0.545823872089386, 0.5341395139694214, 0.5177112817764282, 0.5148577094078064, 0.509697675704956, 0.4973319172859192, 0.48452121019363403, 0.4814995527267456, 0.47361189126968384, 0.45570874214172363, 0.45507192611694336, 0.44130468368530273, 0.43939000368118286, 0.43316689133644104, 0.4296092391014099, 0.43000873923301697, 0.4196374714374542, 0.41588547825813293, 0.3994198739528656, 0.39266690611839294, 0.403948575258255, 0.39542847871780396, 0.38779592514038086], "accuracy": [0.13380002975463867, 0.32743361592292786, 0.43825122714042664, 0.5336151123046875, 0.6312243938446045, 0.6679434776306152, 0.6884163022041321, 0.7010962963104248, 0.7096816897392273, 0.7197200059890747, 0.7345132827758789, 0.737022876739502, 0.7481178045272827, 0.7651565074920654, 0.7648923397064209, 0.7695152759552002, 0.7770439982414246, 0.7796856164932251, 0.7815347909927368, 0.7891955971717834, 0.7901201844215393, 0.7926297783851624, 0.8059701323509216, 0.8064984679222107, 0.8067626357078552, 0.81112140417099, 0.8152159452438354, 0.8187822103500366, 0.8186501264572144, 0.8261788487434387, 0.8249900937080383, 0.8323867321014404, 0.8330471515655518, 0.8421608805656433, 0.8393871188163757, 0.8374059200286865, 0.844010055065155, 0.8425571322441101, 0.8442742228507996, 0.8491612672805786, 0.8527275323867798, 0.8515387773513794, 0.8494254350662231], "val_loss": [2.2448153495788574, 2.01688289642334, 1.1337089538574219, 0.8923208713531494, 0.7758418917655945, 0.726809024810791, 0.7007365822792053, 0.6697260141372681, 0.6550381779670715, 0.6218883991241455, 0.5764124393463135, 0.5606253147125244, 0.5507978796958923, 0.5462441444396973, 0.5319119691848755, 0.5197374820709229, 0.5079478621482849, 0.503283679485321, 0.4957456886768341, 0.4961165487766266, 0.4937131702899933, 0.4778374135494232, 0.4802459180355072, 0.46981367468833923, 0.465628057718277, 0.4604650139808655, 0.46342048048973083, 0.45053794980049133, 0.45090967416763306, 0.44268104434013367, 0.44043979048728943, 0.4294052720069885, 0.45037585496902466, 0.438609778881073, 0.42021483182907104, 0.4221932291984558, 0.4304022192955017, 0.4214463233947754, 0.4164448380470276, 0.42705729603767395, 0.42372363805770874, 0.4196453392505646, 0.4254850745201111], "val_accuracy": [0.42933332920074463, 0.453000009059906, 0.6496666669845581, 0.687333345413208, 0.7143333554267883, 0.722000002861023, 0.7323333621025085, 0.7536666393280029, 0.7613333463668823, 0.7646666765213013, 0.7696666717529297, 0.7846666574478149, 0.7873333096504211, 0.7913333177566528, 0.8016666769981384, 0.8053333163261414, 0.8106666803359985, 0.8106666803359985, 0.8149999976158142, 0.8180000185966492, 0.8073333501815796, 0.8273333311080933, 0.8256666660308838, 0.8289999961853027, 0.8353333473205566, 0.8256666660308838, 0.8349999785423279, 0.8366666436195374, 0.82833331823349, 0.8370000123977661, 0.843666672706604, 0.843999981880188, 0.8460000157356262, 0.8473333120346069, 0.8523333072662354, 0.8516666889190674, 0.8543333411216736, 0.8546666502952576, 0.8536666631698608, 0.8523333072662354, 0.8526666760444641, 0.8506666421890259, 0.8546666502952576]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 8], [0], [0], [1], [0], [2], [0]], "fitness": -0.8251428604125977, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4823412895202637, 0.7873016595840454, 0.6586055755615234, 0.6248819231987, 0.6139798164367676, 0.588509738445282, 0.6200183629989624, 0.5405511856079102, 0.5402917265892029, 0.5224957466125488, 0.5207979083061218, 0.527101993560791, 0.5131954550743103, 0.5337985754013062, 0.576807975769043, 0.5747842788696289], "accuracy": [0.47866860032081604, 0.7206445932388306, 0.7574957013130188, 0.7712323069572449, 0.7799497842788696, 0.7849689722061157, 0.780610203742981, 0.8057059645652771, 0.8050455451011658, 0.8131026029586792, 0.8127063512802124, 0.8100647330284119, 0.81112140417099, 0.8183859586715698, 0.8191784620285034, 0.8033285140991211], "val_loss": [0.7323142290115356, 0.5785991549491882, 0.5206629037857056, 0.5237172842025757, 0.5389401316642761, 0.5691813826560974, 0.5397316813468933, 0.48942098021507263, 0.5197237133979797, 0.5905717611312866, 0.5005198121070862, 0.4932438135147095, 0.5044865608215332, 0.5699408650398254, 0.6038077473640442, 0.5441541075706482], "val_accuracy": [0.7459999918937683, 0.7940000295639038, 0.8050000071525574, 0.7943333387374878, 0.8063333630561829, 0.778333306312561, 0.8163333535194397, 0.8256666660308838, 0.812666654586792, 0.8266666531562805, 0.8429999947547913, 0.8299999833106995, 0.8203333616256714, 0.8336666822433472, 0.8299999833106995, 0.8133333325386047]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [2, 2, 3, 8, 3, 7, 1, 2, 0, 6, 6, 8, 3, 7, 3, 9], [0, 2, 0, 2, 2, 2, 2, 3, 2, 3, 1, 3], [83, 22, 27], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 3, 2, 8, 0], [0, 2, 2, 3], [9, 23], [0, 1], [0], [0], [0], [1, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 28, 16, 12, 3, 2, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.math.add(tf.math.negative(grad), grad), tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.sqrt(grad)), tf.math.multiply(grad, tf.math.add(grad, tf.math.multiply(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))))))), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0], [9, 1, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [2], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 0, 3, 6, 8, 6, 4, 8, 4, 2, 8], [0, 0, 1, 3, 0, 0, 3, 1, 2, 2], [16, 99, 96, 99, 61, 91]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 10, 6, 4, 2, 2, 1, 1, 0, 16, 9, 7, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(alpha, sigma))), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 0], [16, 16, 83], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 3], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 91, 1]], "fitness": -0.09200000017881393, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 3, 2, 1, 1, 1, 22, 12, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), sigma)))), tf.math.add(tf.math.sqrt(tf.math.multiply(alpha, beta)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.30891752243042, 2.311431407928467, 2.3103530406951904, 2.3100974559783936, 2.3096964359283447, 2.3107030391693115], "accuracy": [0.09206181764602661, 0.09034473448991776, 0.09113723784685135, 0.09087307006120682, 0.09549596905708313, 0.09126931428909302], "val_loss": [2.308924436569214, 2.308976173400879, 2.3090147972106934, 2.309044599533081, 2.3090715408325195, 2.309095621109009], "val_accuracy": [0.09266666322946548, 0.09233333170413971, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393, 0.09200000017881393]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 4, 8, 6, 5], [2, 0, 1, 0, 2, 0], [83, 99, 27], [0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [0], [0, 1], [0], [0], [35], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 2, 4, 1, 4, 3, 8], [1, 6, 3, 6, 6, 2, 3, 0, 2, 7], [0]], "fitness": -0.0917142853140831, "mapping_values": [1, 15, 9, 6, 3, 2, 1, 1, 1, 2, 1, 1, 1, 21, 11, 10, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(alpha, tf.math.pow(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.square(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.multiply(tf.math.add(tf.math.sqrt(grad), tf.math.add(tf.math.pow(sigma, grad), tf.math.subtract(grad, tf.math.pow(beta, sigma)))), tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.sqrt(beta), grad))", "other_info": {"loss": [2.310410499572754, 2.3117411136627197, 2.3104910850524902, 2.3097705841064453, 2.3109331130981445, 2.31048321723938], "accuracy": [0.09655263274908066, 0.09153348207473755, 0.09192973375320435, 0.09153348207473755, 0.09245806187391281, 0.09087307006120682], "val_loss": [2.3087942600250244, 2.3087942600250244, 2.3087942600250244, 2.3087942600250244, 2.3087942600250244, 2.3087942600250244], "val_accuracy": [0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816, 0.09166666865348816]}}]