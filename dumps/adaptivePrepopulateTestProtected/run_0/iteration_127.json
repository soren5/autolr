[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8485714197158813, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2239990234375, 1.8690727949142456, 1.3873522281646729, 1.1067644357681274, 0.9431290030479431, 0.8453916907310486, 0.7825637459754944, 0.7290196418762207, 0.6997143030166626, 0.6705435514450073, 0.6403646469116211, 0.6112343072891235, 0.5940827131271362, 0.5642825961112976, 0.5572217106819153, 0.5487348437309265, 0.5261886119842529, 0.5258551239967346, 0.5067079663276672, 0.4930803179740906, 0.48085495829582214, 0.47289514541625977, 0.4683203399181366, 0.4583544433116913, 0.44765719771385193, 0.44300925731658936, 0.43425825238227844, 0.4327705204486847, 0.41285446286201477, 0.4192940890789032, 0.41196396946907043, 0.4041937589645386, 0.3974085748195648, 0.38530221581459045, 0.38560280203819275, 0.3745032846927643, 0.3718702495098114, 0.3716733455657959, 0.3670039474964142, 0.35895201563835144, 0.3450717329978943, 0.3469342291355133, 0.34418627619743347, 0.34130340814590454, 0.33476924896240234, 0.3289313018321991, 0.32093366980552673, 0.3201294541358948, 0.3187779486179352, 0.31186380982398987, 0.305269330739975, 0.29937809705734253, 0.2997514009475708, 0.2888804078102112, 0.29416754841804504, 0.28227609395980835, 0.2831616997718811, 0.27165845036506653, 0.27741923928260803, 0.2740308344364166, 0.2717131972312927], "accuracy": [0.2715625464916229, 0.4880464971065521, 0.5786554217338562, 0.6209219098091125, 0.6629242897033691, 0.7012283802032471, 0.724210798740387, 0.7404569983482361, 0.7535332441329956, 0.7581561207771301, 0.7703077793121338, 0.778232753276825, 0.7872143983840942, 0.7959318161010742, 0.7952714562416077, 0.8026680946350098, 0.8105930685997009, 0.811649739742279, 0.8153480291366577, 0.8260467648506165, 0.8302733898162842, 0.8284242749214172, 0.8314621448516846, 0.8381983637809753, 0.8360850811004639, 0.8455950617790222, 0.8453308939933777, 0.8471800088882446, 0.8518029451370239, 0.8533879518508911, 0.852331280708313, 0.8548408150672913, 0.8627657890319824, 0.8580108284950256, 0.8654074668884277, 0.8673887252807617, 0.8704266548156738, 0.867520809173584, 0.871879518032074, 0.8684453964233398, 0.876370370388031, 0.8795403242111206, 0.8772949576377869, 0.8815215826034546, 0.8791441321372986, 0.8787478804588318, 0.887201189994812, 0.8849557638168335, 0.8879936337471008, 0.8889182209968567, 0.8919561505317688, 0.8906353116035461, 0.8943336606025696, 0.898428201675415, 0.8961827754974365, 0.9002773761749268, 0.8993527889251709, 0.9064852595329285, 0.9031832218170166, 0.9030511379241943, 0.9010698795318604], "val_loss": [2.0423970222473145, 1.521428108215332, 1.048283338546753, 0.8416073322296143, 0.750290036201477, 0.6884294152259827, 0.6508756279945374, 0.6060117483139038, 0.5785273313522339, 0.5542187690734863, 0.5403814315795898, 0.5255191326141357, 0.5048381686210632, 0.49498239159584045, 0.49061617255210876, 0.4738138020038605, 0.4628259241580963, 0.4613000452518463, 0.4519370198249817, 0.44573843479156494, 0.4410495162010193, 0.43296298384666443, 0.42722177505493164, 0.4181487560272217, 0.41518083214759827, 0.40984195470809937, 0.4088289439678192, 0.4063939154148102, 0.40062153339385986, 0.4040311574935913, 0.39906564354896545, 0.3920300602912903, 0.386972576379776, 0.3836185038089752, 0.38109853863716125, 0.38000378012657166, 0.3760451674461365, 0.3751818835735321, 0.3779112994670868, 0.36881908774375916, 0.37092289328575134, 0.36847060918807983, 0.3607729971408844, 0.36621183156967163, 0.36180540919303894, 0.36321207880973816, 0.3602956533432007, 0.35578280687332153, 0.35365554690361023, 0.3548556864261627, 0.35257670283317566, 0.35140326619148254, 0.3500579297542572, 0.3531413972377777, 0.347281277179718, 0.3488011062145233, 0.3424049913883209, 0.34563174843788147, 0.3437961935997009, 0.3402433395385742, 0.34689420461654663], "val_accuracy": [0.5256666541099548, 0.6553333401679993, 0.6779999732971191, 0.6933333277702332, 0.7336666584014893, 0.7513333559036255, 0.7576666474342346, 0.7763333320617676, 0.7943333387374878, 0.7950000166893005, 0.7993333339691162, 0.8169999718666077, 0.8206666707992554, 0.8243333101272583, 0.8193333148956299, 0.8383333086967468, 0.8403333425521851, 0.8370000123977661, 0.8423333168029785, 0.8450000286102295, 0.8403333425521851, 0.846666693687439, 0.8516666889190674, 0.8579999804496765, 0.8569999933242798, 0.8610000014305115, 0.8569999933242798, 0.8616666793823242, 0.8600000143051147, 0.8583333492279053, 0.8613333106040955, 0.8636666536331177, 0.8636666536331177, 0.8679999709129333, 0.8706666827201843, 0.8706666827201843, 0.8709999918937683, 0.874666690826416, 0.8669999837875366, 0.8730000257492065, 0.8706666827201843, 0.8736666440963745, 0.875333309173584, 0.878333330154419, 0.8766666650772095, 0.875333309173584, 0.8786666393280029, 0.8793333172798157, 0.8803333044052124, 0.8793333172798157, 0.875, 0.8813333511352539, 0.8813333511352539, 0.8809999823570251, 0.8833333253860474, 0.8856666684150696, 0.8836666941642761, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634, 0.8809999823570251]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.829714298248291, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5907496213912964, 0.823701024055481, 0.6856932640075684, 0.5922570824623108, 0.5585773587226868, 0.539191722869873, 0.506028413772583, 0.47352051734924316, 0.4332287907600403, 0.45127564668655396, 0.43547892570495605, 0.46114155650138855, 0.4773273766040802, 0.49138274788856506, 0.4894173741340637], "accuracy": [0.46770572662353516, 0.7017567157745361, 0.7504953145980835, 0.7824593782424927, 0.7913089394569397, 0.8025360107421875, 0.8182538747787476, 0.8276317715644836, 0.8408400416374207, 0.8438779711723328, 0.8429533839225769, 0.830669641494751, 0.8430854678153992, 0.8323867321014404, 0.8249900937080383], "val_loss": [0.7980801463127136, 0.6418634653091431, 0.5827490091323853, 0.5307261347770691, 0.5213653445243835, 0.5021587014198303, 0.4750252962112427, 0.4717763662338257, 0.4911278784275055, 0.4938095808029175, 0.5000469088554382, 0.5307788252830505, 0.5655533075332642, 0.5315415859222412, 0.4916542172431946], "val_accuracy": [0.7213333249092102, 0.768666684627533, 0.7906666398048401, 0.8050000071525574, 0.8149999976158142, 0.8389999866485596, 0.8346666693687439, 0.8399999737739563, 0.8489999771118164, 0.8493333458900452, 0.8463333249092102, 0.8486666679382324, 0.8270000219345093, 0.8453333377838135, 0.840666651725769]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8165714144706726, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294217109680176, 2.191679000854492, 1.7792329788208008, 1.3544371128082275, 1.1156585216522217, 0.9370507001876831, 0.8457345962524414, 0.8509379029273987, 0.7548666596412659, 0.7519570589065552, 0.6973727941513062, 0.6872372031211853, 0.6546264886856079, 0.6340243816375732, 0.6163909435272217, 0.600846529006958, 0.5894599556922913, 0.5777333378791809, 0.5681058764457703, 0.5470868349075317, 0.5441228747367859, 0.5186572074890137, 0.514847457408905, 0.5026345252990723, 0.483953595161438, 0.48763564229011536, 0.47538214921951294, 0.45241641998291016, 0.451164186000824, 0.43290483951568604, 0.42837902903556824, 0.4246235489845276, 0.415195494890213, 0.40096476674079895, 0.39782947301864624, 0.39701005816459656, 0.37977099418640137, 0.3744267523288727, 0.37250351905822754, 0.361831396818161, 0.358066201210022, 0.35389938950538635, 0.3471161723136902, 0.35127007961273193, 0.34111279249191284, 0.32371199131011963, 0.3449787199497223], "accuracy": [0.12679962813854218, 0.3271694481372833, 0.44485536217689514, 0.54655921459198, 0.6289790272712708, 0.6489235162734985, 0.6841896772384644, 0.685510516166687, 0.7084929347038269, 0.7137762308120728, 0.7329282760620117, 0.7376832365989685, 0.7479857206344604, 0.757099449634552, 0.7540615797042847, 0.7660810947418213, 0.7794214487075806, 0.7786290049552917, 0.7852331399917603, 0.7930260300636292, 0.7895918488502502, 0.802800178527832, 0.8009510040283203, 0.8068947196006775, 0.8094043135643005, 0.8109893202781677, 0.8206313848495483, 0.833179235458374, 0.8202351331710815, 0.8325188159942627, 0.8370096683502197, 0.8393871188163757, 0.8418967127799988, 0.8436138033866882, 0.8433496356010437, 0.8482366800308228, 0.8560295701026917, 0.8549728989601135, 0.860652506351471, 0.8615770936012268, 0.8594637513160706, 0.8625016212463379, 0.8648791313171387, 0.8585391640663147, 0.8642187118530273, 0.8734645247459412, 0.867520809173584], "val_loss": [2.2469735145568848, 2.0270187854766846, 1.1523100137710571, 0.8996751308441162, 0.8074149489402771, 0.7331715226173401, 0.7233779430389404, 0.6658234596252441, 0.6632641553878784, 0.6347755789756775, 0.5881119966506958, 0.578309953212738, 0.5567149519920349, 0.5552664995193481, 0.5437748432159424, 0.5253785252571106, 0.5290130376815796, 0.515199601650238, 0.508794367313385, 0.5111651420593262, 0.49771711230278015, 0.49285954236984253, 0.4781767725944519, 0.46922361850738525, 0.4596484899520874, 0.4577547311782837, 0.44775643944740295, 0.4386320114135742, 0.4393267333507538, 0.4378986060619354, 0.4313206374645233, 0.42660441994667053, 0.41868627071380615, 0.4257621169090271, 0.419352263212204, 0.4058932960033417, 0.4139576852321625, 0.4004051089286804, 0.40219029784202576, 0.4099712371826172, 0.39812374114990234, 0.3901151418685913, 0.39053332805633545, 0.40379178524017334, 0.3954467475414276, 0.3908710479736328, 0.4055734872817993], "val_accuracy": [0.43033334612846375, 0.4560000002384186, 0.6483333110809326, 0.6840000152587891, 0.6940000057220459, 0.7129999995231628, 0.7353333234786987, 0.7426666617393494, 0.7473333477973938, 0.7509999871253967, 0.7696666717529297, 0.7670000195503235, 0.7883333563804626, 0.7833333611488342, 0.7896666526794434, 0.7956666946411133, 0.7983333468437195, 0.809333324432373, 0.8096666932106018, 0.8096666932106018, 0.8119999766349792, 0.8213333487510681, 0.8306666612625122, 0.8246666789054871, 0.8223333358764648, 0.8270000219345093, 0.8339999914169312, 0.8393333554267883, 0.8389999866485596, 0.8393333554267883, 0.8476666808128357, 0.8536666631698608, 0.8523333072662354, 0.8473333120346069, 0.8573333621025085, 0.859333336353302, 0.856333315372467, 0.8616666793823242, 0.8566666841506958, 0.8583333492279053, 0.8553333282470703, 0.8663333058357239, 0.8650000095367432, 0.8640000224113464, 0.8629999756813049, 0.8556666374206543, 0.862666666507721]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 0], [39, 39, 93], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 5, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 3, 4, 2, 0], [0, 0, 0, 4, 0, 4, 3, 1, 2, 0], [88, 97, 73, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 8, 5, 3, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(grad, tf.math.multiply(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454, 0.10499999672174454]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 6, 3, 1], [0, 2, 0, 3, 5, 2, 5], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 0, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 15, 8, 7, 2, 2, 1, 1, 1, 20, 10, 10, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.subtract(grad, beta)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, alpha), tf.math.add(beta, grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 4, 0, 0, 3], [0, 0, 2, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2, 9, 2, 1, 7, 8, 4], [0, 0, 2, 0, 3, 1, 0, 2, 4, 4], [76, 16, 27, 74, 16], [0, 1, 1], [4], [0, 1], [0], [1], [0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 24, 14, 10, 5, 3, 1, 2, 1, 1, 0, 1, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.sqrt(tf.math.pow(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3039424419403076, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 6], [0, 1, 0, 2, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 5, 9], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [52], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [6, 3, 3, 0, 8, 1, 4, 1, 4, 2, 8, 1, 9, 3, 6, 6, 1, 0, 1, 3], [2, 0, 0, 3, 0, 0, 3, 1, 2, 0, 2, 7, 1, 1, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.09142857044935226, "mapping_values": [1, 11, 6, 5, 2, 10, 7, 3, 2, 2, 1, 1, 1, 35, 20, 15, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))))))), alpha), tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(beta, tf.math.subtract(tf.math.negative(tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.multiply(beta, grad))), alpha)), alpha), grad))", "other_info": {"loss": [2.3100454807281494, 2.309377908706665, 2.3090264797210693, 2.3102786540985107, 2.3082051277160645, 2.3108670711517334], "accuracy": [0.08691058307886124, 0.09074098616838455, 0.09496764093637466, 0.09272222965955734, 0.09932637959718704, 0.09166556596755981], "val_loss": [2.308741807937622, 2.308741807937622, 2.308741807937622, 2.308741807937622, 2.308741807937622, 2.308741807937622], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]