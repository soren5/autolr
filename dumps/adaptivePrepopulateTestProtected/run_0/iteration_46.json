[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8614285588264465, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224895477294922, 1.8710238933563232, 1.3991358280181885, 1.095288872718811, 0.9416096806526184, 0.8395400047302246, 0.7819454073905945, 0.7276772856712341, 0.6986606121063232, 0.6630081534385681, 0.6368852853775024, 0.6178564429283142, 0.5985368490219116, 0.585768461227417, 0.5682533383369446, 0.5492448806762695, 0.5369886159896851, 0.5299956798553467, 0.5112690329551697, 0.5044761896133423, 0.4888591170310974, 0.4791271388530731, 0.47613388299942017, 0.459352046251297, 0.4599725008010864, 0.44607266783714294, 0.44119760394096375, 0.43088698387145996, 0.42273709177970886, 0.4139755368232727, 0.41872844099998474, 0.41085585951805115, 0.400869756937027, 0.3953990042209625, 0.39238858222961426, 0.38734182715415955, 0.377470999956131, 0.371680349111557, 0.36768803000450134, 0.3609970510005951, 0.35302549600601196, 0.35237786173820496, 0.3469986617565155, 0.34326884150505066, 0.3442578613758087, 0.33742839097976685, 0.33176389336586, 0.31760889291763306], "accuracy": [0.27116629481315613, 0.48870691657066345, 0.5703341960906982, 0.6172236204147339, 0.6597543358802795, 0.7004358768463135, 0.7166820764541626, 0.7333245277404785, 0.7432307600975037, 0.7567031979560852, 0.7619865536689758, 0.7795535326004028, 0.7854973077774048, 0.7932901978492737, 0.7903843522071838, 0.8035926818847656, 0.8061022162437439, 0.8087438941001892, 0.8149517774581909, 0.8187822103500366, 0.8278959393501282, 0.829216718673706, 0.8315942287445068, 0.8350284099578857, 0.8383304476737976, 0.8418967127799988, 0.844010055065155, 0.8467837572097778, 0.8490291833877563, 0.850350022315979, 0.8545766472816467, 0.8541803956031799, 0.8543124794960022, 0.8614450097084045, 0.8589354157447815, 0.8602562546730042, 0.863029956817627, 0.8654074668884277, 0.8701624870300293, 0.871879518032074, 0.8746532797813416, 0.8747853636741638, 0.8726720213890076, 0.8770307898521423, 0.8758420348167419, 0.8815215826034546, 0.8811253309249878, 0.8850878477096558], "val_loss": [2.0416908264160156, 1.5245544910430908, 1.0449656248092651, 0.846797525882721, 0.7524065971374512, 0.6941580176353455, 0.6534608602523804, 0.6211148500442505, 0.5964131355285645, 0.573320746421814, 0.5560587048530579, 0.5382451415061951, 0.5280964970588684, 0.5143756866455078, 0.5030623078346252, 0.49493148922920227, 0.4885256290435791, 0.47853681445121765, 0.4674234092235565, 0.4610356390476227, 0.4517481327056885, 0.442326158285141, 0.43785321712493896, 0.4393743574619293, 0.43166282773017883, 0.4230715334415436, 0.41680315136909485, 0.4170580208301544, 0.40963277220726013, 0.4063233733177185, 0.40739762783050537, 0.397918164730072, 0.3991742432117462, 0.39572814106941223, 0.3903534412384033, 0.39037784934043884, 0.39029890298843384, 0.38677123188972473, 0.38101905584335327, 0.3780946135520935, 0.37944847345352173, 0.3737621307373047, 0.37048330903053284, 0.3704712390899658, 0.3728408217430115, 0.3647502362728119, 0.3652891516685486, 0.3587353527545929], "val_accuracy": [0.5059999823570251, 0.6603333353996277, 0.6859999895095825, 0.7139999866485596, 0.7369999885559082, 0.7513333559036255, 0.7609999775886536, 0.7713333368301392, 0.7726666927337646, 0.7926666736602783, 0.7926666736602783, 0.7976666688919067, 0.8036666512489319, 0.8193333148956299, 0.8190000057220459, 0.8236666917800903, 0.8173333406448364, 0.8320000171661377, 0.8360000252723694, 0.8399999737739563, 0.8413333296775818, 0.847000002861023, 0.8479999899864197, 0.8450000286102295, 0.8533333539962769, 0.8556666374206543, 0.8556666374206543, 0.8610000014305115, 0.8653333187103271, 0.8613333106040955, 0.8606666922569275, 0.8653333187103271, 0.8686666488647461, 0.8683333396911621, 0.8700000047683716, 0.8700000047683716, 0.8679999709129333, 0.8723333477973938, 0.871999979019165, 0.8743333220481873, 0.8713333606719971, 0.8709999918937683, 0.8790000081062317, 0.8713333606719971, 0.8726666569709778, 0.8786666393280029, 0.878333330154419, 0.8786666393280029]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 0], [0, 1, 5, 9], [0], [0, 81], [0, 0, 1], [0, 5], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8317142724990845, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2929322719573975, 2.1902568340301514, 1.7774858474731445, 1.369598388671875, 1.0780341625213623, 0.9234954118728638, 0.8463304042816162, 0.808813214302063, 0.7651710510253906, 0.7276632189750671, 0.7040472030639648, 0.67413729429245, 0.6564780473709106, 0.631386935710907, 0.6149058938026428, 0.594285786151886, 0.5798832178115845, 0.5663220286369324, 0.558010458946228, 0.55403733253479, 0.5529350638389587, 0.5486757159233093, 0.5426689386367798, 0.5343862175941467, 0.5183005332946777, 0.49953508377075195, 0.49954554438591003, 0.49693623185157776, 0.4908253848552704, 0.47887274622917175], "accuracy": [0.13274335861206055, 0.32426363229751587, 0.4361378848552704, 0.5291243195533752, 0.6305639743804932, 0.6625280380249023, 0.6873596906661987, 0.702681303024292, 0.6944921612739563, 0.7181349992752075, 0.7338528633117676, 0.7364945411682129, 0.744419515132904, 0.7473253011703491, 0.7602694630622864, 0.7750627398490906, 0.7746664881706238, 0.7866860628128052, 0.789988100528717, 0.787082314491272, 0.785101056098938, 0.7889314293861389, 0.793950617313385, 0.787082314491272, 0.7954035401344299, 0.807158887386322, 0.7955356240272522, 0.8037247657775879, 0.8092722296714783, 0.8058380484580994], "val_loss": [2.2451353073120117, 2.0151185989379883, 1.1304161548614502, 0.8567703366279602, 0.7897107005119324, 0.7164285778999329, 0.6875447630882263, 0.657156229019165, 0.6248024702072144, 0.6083808541297913, 0.5816365480422974, 0.5612918734550476, 0.5508111119270325, 0.5510536432266235, 0.5472935438156128, 0.5280054807662964, 0.5208680033683777, 0.5308821797370911, 0.5253251194953918, 0.5256795883178711, 0.518059492111206, 0.5169134736061096, 0.5047618746757507, 0.4876459240913391, 0.49466457962989807, 0.48758581280708313, 0.48771563172340393, 0.4830617606639862, 0.4896998703479767, 0.4898408055305481], "val_accuracy": [0.45233333110809326, 0.48100000619888306, 0.6493333578109741, 0.6963333487510681, 0.7176666855812073, 0.7336666584014893, 0.7243333458900452, 0.7289999723434448, 0.7580000162124634, 0.7616666555404663, 0.7753333449363708, 0.7730000019073486, 0.7846666574478149, 0.7960000038146973, 0.7876666784286499, 0.8066666722297668, 0.8096666932106018, 0.8063333630561829, 0.8130000233650208, 0.8009999990463257, 0.8073333501815796, 0.809333324432373, 0.8019999861717224, 0.8136666417121887, 0.8243333101272583, 0.8220000267028809, 0.8203333616256714, 0.8243333101272583, 0.8163333535194397, 0.8216666579246521]}, "mapping_values": [1, 10, 5, 5, 3, 5, 4, 1, 2, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8148571252822876, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4683302640914917, 0.7750217914581299, 0.6842346787452698, 0.5766927003860474, 0.5746474266052246, 0.5233610272407532, 0.530852198600769, 0.5033158659934998, 0.5042506456375122, 0.4908381700515747, 0.4674181342124939, 0.4770103394985199, 0.48773834109306335, 0.4890921711921692, 0.462277352809906, 0.49141645431518555, 0.5209006071090698, 0.5256311297416687, 0.560166597366333], "accuracy": [0.4963677227497101, 0.737947404384613, 0.7559106945991516, 0.7857614755630493, 0.7868181467056274, 0.8087438941001892, 0.7985734939575195, 0.8232730031013489, 0.8161405324935913, 0.8247259259223938, 0.8234050869941711, 0.832650899887085, 0.8297450542449951, 0.8309338092803955, 0.832650899887085, 0.8356888294219971, 0.8235371708869934, 0.8341038227081299, 0.8112534880638123], "val_loss": [0.8347161412239075, 0.6280214190483093, 0.5589688420295715, 0.5202100276947021, 0.5031659007072449, 0.49995100498199463, 0.5408735275268555, 0.5206199288368225, 0.5354380011558533, 0.5299054980278015, 0.5322026014328003, 0.5849480628967285, 0.6083419322967529, 0.6128138303756714, 0.6225805878639221, 0.6477094888687134, 0.6690512895584106, 0.7173336744308472, 0.6497002243995667], "val_accuracy": [0.7263333201408386, 0.7699999809265137, 0.8019999861717224, 0.8033333420753479, 0.8180000185966492, 0.8163333535194397, 0.8263333439826965, 0.8169999718666077, 0.8296666741371155, 0.8140000104904175, 0.8320000171661377, 0.8330000042915344, 0.8299999833106995, 0.8349999785423279, 0.8306666612625122, 0.8263333439826965, 0.8320000171661377, 0.8159999847412109, 0.8259999752044678]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 6, 2, 9, 6, 2, 1, 5, 8, 0, 0, 9, 6, 7, 5, 1, 2, 2, 3, 1, 7, 9, 1, 7, 3], [0, 2, 0, 3, 0, 0, 1, 4, 1, 2, 1, 3, 3, 3, 4, 5, 3], [16, 16, 85, 71, 70, 3, 95], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 5, 6, 8, 1, 4, 1, 9, 2, 2], [0, 0, 0, 3, 0, 4, 3, 4, 2, 0], [16, 99, 96, 57, 61, 21]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 47, 30, 17, 7, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.math.square(tf.math.sqrt(grad)), tf.math.negative(tf.math.negative(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.subtract(alpha, grad)), tf.math.add(tf.math.add(tf.math.multiply(alpha, beta), tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), grad))))), tf.math.subtract(tf.math.add(grad, tf.math.multiply(grad, grad)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3036305904388428, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 5], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 2, 3, 0, 3, 5, 2, 1, 9], [0, 2, 0, 3, 4, 4], [16, 16, 1], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 2, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 12, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 2, 15, 9, 6, 3, 2, 1, 1, 1, 10, 5, 5, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.add(tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), sigma), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3037350177764893, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1], [8, 2, 3, 0, 3], [0, 3, 0, 2], [0, 39, 39], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5, 9], [0, 0, 0, 0, 3, 1, 0], [0, 27, 16, 0], [1, 1], [0, 9], [0], [0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0]], "fitness": -0.09371428936719894, "mapping_values": [1, 6, 3, 3, 2, 10, 7, 3, 4, 1, 0, 1, 1, 2, 2, 0, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3095853328704834, 2.309983491897583, 2.3105146884918213, 2.3100645542144775, 2.3107376098632812, 2.309014081954956], "accuracy": [0.0882314071059227, 0.08981640636920929, 0.09259014576673508, 0.09417514503002167, 0.0956280529499054, 0.09457138925790787], "val_loss": [2.3082735538482666, 2.3082735538482666, 2.3082735538482666, 2.3082735538482666, 2.3082735538482666, 2.3082735538482666], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 0], [16, 16, 18], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 2, 2, 1, 4, 2, 8], [0, 2, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.08828571438789368, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.309769630432129, 2.309382200241089, 2.3095521926879883, 2.3099281787872314, 2.309849977493286, 2.3095154762268066], "accuracy": [0.09272222965955734, 0.09430722147226334, 0.09034473448991776, 0.0936468094587326, 0.08757099509239197, 0.09206181764602661], "val_loss": [2.3089072704315186, 2.3089072704315186, 2.3089072704315186, 2.3089072704315186, 2.3089072704315186, 2.3089072704315186], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}, "mapping_values": [1, 9, 5, 4, 2, 9, 5, 4, 3, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18}]