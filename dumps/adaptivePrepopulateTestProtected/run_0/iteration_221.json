[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8742856979370117, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2227118015289307, 1.871200442314148, 1.399245262145996, 1.0888973474502563, 0.9390923380851746, 0.851157546043396, 0.783020555973053, 0.7198792099952698, 0.6850323677062988, 0.6630923748016357, 0.6364331245422363, 0.6112370491027832, 0.5914222598075867, 0.5680091977119446, 0.5609658360481262, 0.542917013168335, 0.5272422432899475, 0.5208325386047363, 0.5035315752029419, 0.4883957803249359, 0.49360257387161255, 0.47718676924705505, 0.4643625319004059, 0.4574027955532074, 0.45392900705337524, 0.43745148181915283, 0.4366361200809479, 0.4274708926677704, 0.41508758068084717, 0.4040597677230835, 0.4119046628475189, 0.40134185552597046, 0.39635181427001953, 0.3959234356880188, 0.3867866098880768, 0.38155093789100647, 0.3704533278942108, 0.36777564883232117, 0.3608005940914154, 0.35128816962242126, 0.34772753715515137, 0.34498223662376404, 0.33465760946273804, 0.33576032519340515, 0.33907169103622437, 0.32969263195991516, 0.33046114444732666, 0.3218260109424591, 0.3139694035053253, 0.3122357428073883, 0.3054676651954651, 0.30946990847587585, 0.29751062393188477, 0.2962407171726227, 0.294193834066391, 0.28807923197746277, 0.2812414765357971, 0.2822765111923218, 0.2810761332511902], "accuracy": [0.28318583965301514, 0.4888390004634857, 0.572579562664032, 0.6206578016281128, 0.6633205413818359, 0.6902654767036438, 0.7102100253105164, 0.7391361594200134, 0.7440232634544373, 0.7506273984909058, 0.7642319202423096, 0.7736098170280457, 0.7853652238845825, 0.7898560166358948, 0.7964601516723633, 0.802800178527832, 0.8059701323509216, 0.8105930685997009, 0.8165367841720581, 0.8222163319587708, 0.8267071843147278, 0.8285563588142395, 0.8318583965301514, 0.8354246616363525, 0.8350284099578857, 0.8449346423149109, 0.8405758738517761, 0.8491612672805786, 0.8502179384231567, 0.8508783578872681, 0.8527275323867798, 0.8527275323867798, 0.8605204224586487, 0.856689989566803, 0.8643507957458496, 0.8668603897094727, 0.8688416481018066, 0.8677849769592285, 0.8702945709228516, 0.8758420348167419, 0.8746532797813416, 0.8805969953536987, 0.8778232932090759, 0.8794082403182983, 0.8805969953536987, 0.8848236799240112, 0.8803328275680542, 0.8837670087814331, 0.8878615498542786, 0.8878615498542786, 0.8910315632820129, 0.8908994793891907, 0.8931449055671692, 0.8967111110687256, 0.8923524022102356, 0.8938053250312805, 0.8977677822113037, 0.8931449055671692, 0.8918240666389465], "val_loss": [2.0439865589141846, 1.525281548500061, 1.0520681142807007, 0.8410353064537048, 0.7431987524032593, 0.6935076713562012, 0.6462650299072266, 0.6093711256980896, 0.5817645788192749, 0.565075695514679, 0.5460190773010254, 0.533443033695221, 0.5150411128997803, 0.5125719308853149, 0.49868759512901306, 0.4884466230869293, 0.47319328784942627, 0.4647097587585449, 0.4591182768344879, 0.44947558641433716, 0.44309407472610474, 0.4351664185523987, 0.4380315840244293, 0.43049389123916626, 0.42409253120422363, 0.4225797653198242, 0.4166453778743744, 0.40827786922454834, 0.4047393500804901, 0.40491047501564026, 0.39922595024108887, 0.392149418592453, 0.4033074975013733, 0.3992336392402649, 0.3848342001438141, 0.38112252950668335, 0.3863334655761719, 0.37502843141555786, 0.37483373284339905, 0.3828001022338867, 0.37444043159484863, 0.3802436590194702, 0.3703135550022125, 0.366039514541626, 0.36556950211524963, 0.3690929412841797, 0.3624304234981537, 0.3636344075202942, 0.3679569959640503, 0.35533586144447327, 0.35521772503852844, 0.35924232006073, 0.35879606008529663, 0.3530234396457672, 0.35303354263305664, 0.3565661907196045, 0.3538948595523834, 0.3591209352016449, 0.3515148162841797], "val_accuracy": [0.531333327293396, 0.6570000052452087, 0.6823333501815796, 0.7166666388511658, 0.7419999837875366, 0.7513333559036255, 0.7673333287239075, 0.7726666927337646, 0.7853333353996277, 0.7923333048820496, 0.7973333597183228, 0.8033333420753479, 0.812666654586792, 0.8059999942779541, 0.8183333277702332, 0.8256666660308838, 0.8246666789054871, 0.8336666822433472, 0.8330000042915344, 0.8423333168029785, 0.8429999947547913, 0.8403333425521851, 0.8393333554267883, 0.8433333039283752, 0.8489999771118164, 0.8486666679382324, 0.8513333201408386, 0.8510000109672546, 0.8543333411216736, 0.8533333539962769, 0.8573333621025085, 0.8576666712760925, 0.8569999933242798, 0.856333315372467, 0.862666666507721, 0.862666666507721, 0.8610000014305115, 0.8656666874885559, 0.8663333058357239, 0.8610000014305115, 0.8616666793823242, 0.8633333444595337, 0.8653333187103271, 0.8683333396911621, 0.8703333139419556, 0.8686666488647461, 0.8696666955947876, 0.8679999709129333, 0.8659999966621399, 0.8736666440963745, 0.8703333139419556, 0.8706666827201843, 0.8730000257492065, 0.874666690826416, 0.8669999837875366, 0.8706666827201843, 0.871999979019165, 0.8700000047683716, 0.874666690826416]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1], [0, 8], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8628571629524231, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293062925338745, 2.188680648803711, 1.7730705738067627, 1.3424296379089355, 1.0745702981948853, 0.9088190793991089, 0.8396502137184143, 0.8149277567863464, 0.7711744904518127, 0.7405685782432556, 0.705382227897644, 0.6797813773155212, 0.6563719511032104, 0.6231980919837952, 0.6234458684921265, 0.5985169410705566, 0.579400897026062, 0.5795890092849731, 0.5518703460693359, 0.5511741042137146, 0.5348320007324219, 0.5293891429901123, 0.5287827849388123, 0.5065904855728149, 0.5049047470092773, 0.47095760703086853, 0.48851484060287476, 0.4645856022834778, 0.46256139874458313, 0.4625082314014435, 0.4336113929748535, 0.4358247220516205, 0.43510326743125916, 0.4178975224494934, 0.4065606892108917, 0.40499207377433777, 0.3954578638076782, 0.3819114863872528, 0.38367214798927307, 0.3783738911151886, 0.37323740124702454, 0.36533111333847046, 0.3570990264415741, 0.3477686643600464, 0.34629300236701965, 0.33108434081077576, 0.3436042368412018, 0.3341151177883148, 0.31825608015060425, 0.3234933018684387, 0.31032663583755493, 0.32012560963630676, 0.30736279487609863, 0.3043549060821533, 0.295210063457489, 0.2931225299835205], "accuracy": [0.13168670237064362, 0.3287544548511505, 0.4383833110332489, 0.5456346869468689, 0.6349227428436279, 0.6671509742736816, 0.6863030195236206, 0.6992471218109131, 0.6985867023468018, 0.7154933214187622, 0.7318716049194336, 0.7428345084190369, 0.7481178045272827, 0.7578919529914856, 0.7581561207771301, 0.7792893648147583, 0.7824593782424927, 0.785101056098938, 0.7938185334205627, 0.7907806038856506, 0.8006868362426758, 0.8012151718139648, 0.7980451583862305, 0.8083476424217224, 0.8109893202781677, 0.8231409192085266, 0.8121780753135681, 0.8267071843147278, 0.8290846943855286, 0.8274996876716614, 0.8376700282096863, 0.8408400416374207, 0.8367455005645752, 0.8421608805656433, 0.8519350290298462, 0.8486329317092896, 0.8519350290298462, 0.8562937378883362, 0.8597279191017151, 0.8632941246032715, 0.8595958352088928, 0.8621054291725159, 0.8688416481018066, 0.867520809173584, 0.8726720213890076, 0.8732003569602966, 0.869502067565918, 0.8722757697105408, 0.8775591254234314, 0.8782195448875427, 0.8786157965660095, 0.8775591254234314, 0.8845595121383667, 0.8821820020675659, 0.8877294659614563, 0.8862766027450562], "val_loss": [2.247493028640747, 2.0190491676330566, 1.1529942750930786, 0.8910427093505859, 0.7844893336296082, 0.7179293632507324, 0.6772991418838501, 0.6604969501495361, 0.6435747146606445, 0.6119595766067505, 0.5902903079986572, 0.5681236386299133, 0.5385329723358154, 0.5344999432563782, 0.5166530609130859, 0.5041946768760681, 0.5122015476226807, 0.5053134560585022, 0.4930376708507538, 0.4861730635166168, 0.478152334690094, 0.4763855040073395, 0.46909651160240173, 0.4548937976360321, 0.45406559109687805, 0.4535372853279114, 0.4566229581832886, 0.44596371054649353, 0.4579623341560364, 0.4337693750858307, 0.4299967586994171, 0.447793573141098, 0.4309115707874298, 0.4281763434410095, 0.436349093914032, 0.4304858446121216, 0.4297788441181183, 0.43720918893814087, 0.42985832691192627, 0.4239390790462494, 0.41802501678466797, 0.421063631772995, 0.4382384419441223, 0.44715890288352966, 0.4406561553478241, 0.4329431653022766, 0.42461758852005005, 0.42556047439575195, 0.4180271029472351, 0.41917797923088074, 0.428937166929245, 0.4411648213863373, 0.4366798400878906, 0.4475511610507965, 0.4761051535606384, 0.4809252917766571], "val_accuracy": [0.41866666078567505, 0.4593333303928375, 0.6389999985694885, 0.6913333535194397, 0.7046666741371155, 0.7356666922569275, 0.7463333606719971, 0.7476666569709778, 0.7613333463668823, 0.7739999890327454, 0.7736666798591614, 0.7796666622161865, 0.7953333258628845, 0.7983333468437195, 0.8056666851043701, 0.8106666803359985, 0.8050000071525574, 0.8086666464805603, 0.8263333439826965, 0.8316666483879089, 0.8220000267028809, 0.8206666707992554, 0.8190000057220459, 0.8323333263397217, 0.8386666774749756, 0.828000009059906, 0.8360000252723694, 0.8433333039283752, 0.8429999947547913, 0.8393333554267883, 0.8453333377838135, 0.8376666903495789, 0.8403333425521851, 0.846666693687439, 0.8476666808128357, 0.8493333458900452, 0.8493333458900452, 0.8500000238418579, 0.8506666421890259, 0.8516666889190674, 0.8506666421890259, 0.8513333201408386, 0.8510000109672546, 0.8550000190734863, 0.8569999933242798, 0.8566666841506958, 0.859000027179718, 0.859000027179718, 0.8576666712760925, 0.8646666407585144, 0.8669999837875366, 0.8656666874885559, 0.8646666407585144, 0.8663333058357239, 0.8669999837875366, 0.8659999966621399]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.829714298248291, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5944527387619019, 0.834266185760498, 0.6824513673782349, 0.6088434457778931, 0.5750499963760376, 0.555838406085968, 0.5393673777580261, 0.5130600333213806, 0.5000804662704468, 0.4840468168258667, 0.48646309971809387, 0.46485331654548645, 0.49761754274368286, 0.49674442410469055, 0.5060657858848572, 0.49347588419914246, 0.49561601877212524, 0.4856976270675659, 0.47568267583847046, 0.4901290535926819, 0.5062789916992188, 0.4790319502353668, 0.516220211982727, 0.5207606554031372], "accuracy": [0.478140264749527, 0.6983225345611572, 0.7458723783493042, 0.7701756954193115, 0.7866860628128052, 0.7984414100646973, 0.8030643463134766, 0.8140271902084351, 0.8261788487434387, 0.8286884427070618, 0.8362171649932861, 0.8321225643157959, 0.8362171649932861, 0.8219521641731262, 0.8339717388153076, 0.8424250483512878, 0.8334434032440186, 0.8290846943855286, 0.833179235458374, 0.8343679904937744, 0.8360850811004639, 0.8367455005645752, 0.8260467648506165, 0.8298771381378174], "val_loss": [0.8014640212059021, 0.6414969563484192, 0.5464531183242798, 0.5218456387519836, 0.5247030854225159, 0.5185658931732178, 0.5161930322647095, 0.5292343497276306, 0.5311181545257568, 0.567487895488739, 0.5095582604408264, 0.5608491897583008, 0.5256780385971069, 0.5243861675262451, 0.6780462265014648, 0.6193547248840332, 0.5493074655532837, 0.586796224117279, 0.5731334090232849, 0.5281593203544617, 0.5506167411804199, 0.6124411225318909, 0.5485419034957886, 0.5506398677825928], "val_accuracy": [0.7149999737739563, 0.7673333287239075, 0.7953333258628845, 0.812666654586792, 0.8029999732971191, 0.8076666593551636, 0.815666675567627, 0.8326666951179504, 0.8236666917800903, 0.8323333263397217, 0.8289999961853027, 0.8266666531562805, 0.8379999995231628, 0.8213333487510681, 0.8423333168029785, 0.8356666564941406, 0.8379999995231628, 0.8373333215713501, 0.8463333249092102, 0.8373333215713501, 0.8349999785423279, 0.8336666822433472, 0.8349999785423279, 0.8360000252723694]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [48], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 6, 4, 1, 4, 2, 8], [1, 0, 0, 3, 4, 0, 3, 4, 1, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.15600000321865082, "mapping_values": [1, 6, 3, 3, 1, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(grad, tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), grad)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, grad))", "other_info": {"loss": [1.272257746795422e+20, 1.4538705914640204e+20, 1.4370658316669524e+20, 2.1865375533506966e+20, 2.8654147224825228e+23, 4.6828143023923705e+27, 1.1939045385165988e+29, 4.986758076049037e+31, 1.469771391579927e+31, NaN, NaN, NaN, NaN], "accuracy": [0.08757099509239197, 0.0866464152932167, 0.08453308790922165, 0.08360850811004639, 0.09509972482919693, 0.11808215826749802, 0.11253467202186584, 0.10210011899471283, 0.10342095047235489, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.3367219376100685e+20, 1.3389038084842272e+20, 1.3197325478204644e+20, 3.281477851583055e+20, 8.252413971592206e+23, 1.2664839112544376e+28, 3.8497553637910686e+30, 1.0036964447674072e+32, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0846666693687439, 0.06333333253860474, 0.052666667848825455, 0.14100000262260437, 0.12133333086967468, 0.09300000220537186, 0.10433333367109299, 0.1586666703224182, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 1, 2], [39, 12], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 6, 0, 3, 8], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 6, 1, 8, 2, 8], [2, 0, 0, 3, 0, 0, 3, 1, 4, 4], [16, 47, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 1, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 11}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 2, 3, 5, 7, 1, 9], [0, 2, 0, 3, 0, 0], [16, 16, 61, 14, 62], [0, 1], [9], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [4, 3, 3, 6, 8, 1, 1, 1, 4, 2, 8, 5], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 97, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 15, 9, 6, 5, 1, 1, 0, 1, 22, 12, 10, 6], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.add(tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.square(alpha)))))), beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 4, 3, 0, 9], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [2, 2, 3, 0, 3, 5], [0, 3, 0, 3, 2], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 2, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 5, 2, 1, 11, 6, 5, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.math.negative(grad), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(beta, sigma))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, alpha))", "other_info": {"loss": [2.303412914276123, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]