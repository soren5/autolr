[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0], [0, 9], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8597142696380615, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2927045822143555, 2.190430164337158, 1.7772729396820068, 1.3579916954040527, 1.0744210481643677, 0.9300601482391357, 0.8647693395614624, 0.8414878249168396, 0.7797920107841492, 0.7654709815979004, 0.7076345086097717, 0.6990388035774231, 0.6590648293495178, 0.6281482577323914, 0.611405611038208, 0.598057210445404, 0.5741425156593323, 0.5727535486221313, 0.5646143555641174, 0.5360205173492432, 0.5363262295722961, 0.5175820589065552, 0.5085293054580688, 0.5010154247283936, 0.4881296455860138, 0.4874781370162964, 0.4628064036369324, 0.45479869842529297, 0.4517326354980469, 0.44850483536720276, 0.429416686296463, 0.4236126244068146, 0.4146770238876343, 0.4061220586299896, 0.3939141035079956, 0.39257532358169556, 0.38858187198638916, 0.37748539447784424, 0.3814396560192108, 0.3598058223724365, 0.37134692072868347, 0.3615458011627197, 0.3557790517807007, 0.33753323554992676, 0.33719906210899353, 0.3327895402908325], "accuracy": [0.12415797263383865, 0.3271694481372833, 0.43785497546195984, 0.5412759184837341, 0.6338660717010498, 0.6536785364151001, 0.6894729733467102, 0.6906617283821106, 0.7083608508110046, 0.7099458575248718, 0.7296261787414551, 0.7318716049194336, 0.743891179561615, 0.7602694630622864, 0.7625148296356201, 0.7754589915275574, 0.7841764688491821, 0.7845727205276489, 0.7878747582435608, 0.8005547523498535, 0.8018755912780762, 0.8020076751708984, 0.8087438941001892, 0.8131026029586792, 0.8161405324935913, 0.8175934553146362, 0.8269713521003723, 0.8276317715644836, 0.8286884427070618, 0.8310658931732178, 0.839519202709198, 0.8430854678153992, 0.8409721255302429, 0.8418967127799988, 0.8437458872795105, 0.8544445633888245, 0.8499537706375122, 0.8545766472816467, 0.8536521196365356, 0.8627657890319824, 0.8557654023170471, 0.8543124794960022, 0.8607845902442932, 0.8661999702453613, 0.8656716346740723, 0.8697662353515625], "val_loss": [2.247204542160034, 2.0254719257354736, 1.1608939170837402, 0.9288406372070312, 0.7763428688049316, 0.7357710003852844, 0.708690345287323, 0.6986023187637329, 0.6673243045806885, 0.6337205171585083, 0.6198319792747498, 0.5996717810630798, 0.5696722269058228, 0.5683390498161316, 0.5479782819747925, 0.529244065284729, 0.524486780166626, 0.5178132057189941, 0.5150923132896423, 0.5051281452178955, 0.49934878945350647, 0.49578532576560974, 0.4888177812099457, 0.4855045676231384, 0.4809153378009796, 0.46981576085090637, 0.4615294635295868, 0.4651571810245514, 0.4635014533996582, 0.45517605543136597, 0.44980359077453613, 0.4445765018463135, 0.4430771470069885, 0.44786229729652405, 0.457047700881958, 0.44604024291038513, 0.44304147362709045, 0.42967668175697327, 0.43563133478164673, 0.4358622133731842, 0.4115881323814392, 0.4024624824523926, 0.4173220992088318, 0.42925891280174255, 0.4220565855503082, 0.4145689010620117], "val_accuracy": [0.41733333468437195, 0.4623333215713501, 0.6420000195503235, 0.6823333501815796, 0.7233333587646484, 0.7416666746139526, 0.7310000061988831, 0.7519999742507935, 0.7593333125114441, 0.7596666812896729, 0.7646666765213013, 0.7816666960716248, 0.7846666574478149, 0.7873333096504211, 0.7929999828338623, 0.8009999990463257, 0.8050000071525574, 0.8046666383743286, 0.8140000104904175, 0.8220000267028809, 0.8183333277702332, 0.8303333520889282, 0.8263333439826965, 0.8323333263397217, 0.8336666822433472, 0.8393333554267883, 0.8389999866485596, 0.840666651725769, 0.8433333039283752, 0.8486666679382324, 0.8496666550636292, 0.8463333249092102, 0.8486666679382324, 0.8523333072662354, 0.8543333411216736, 0.8553333282470703, 0.8533333539962769, 0.8516666889190674, 0.8600000143051147, 0.8586666584014893, 0.8616666793823242, 0.8600000143051147, 0.8616666793823242, 0.8613333106040955, 0.859666645526886, 0.8579999804496765]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 2, 0, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8562856912612915, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2218568325042725, 1.864262342453003, 1.3871042728424072, 1.0849651098251343, 0.9231430292129517, 0.8332796096801758, 0.7586317658424377, 0.7143020629882812, 0.6688799858093262, 0.6395326256752014, 0.6234909296035767, 0.6043140292167664, 0.5884764194488525, 0.569169819355011, 0.5523426532745361, 0.5407539010047913, 0.5278194546699524, 0.5188753008842468, 0.49933576583862305, 0.49196428060531616, 0.4822728931903839, 0.4768713414669037, 0.46740424633026123, 0.4550745487213135, 0.4471626877784729, 0.43887025117874146, 0.4328902065753937, 0.42725786566734314, 0.41470867395401, 0.4123597741127014, 0.40226784348487854, 0.39847278594970703, 0.3994448482990265, 0.3867526054382324, 0.38721343874931335, 0.37702056765556335, 0.37040773034095764, 0.36177119612693787, 0.35694020986557007, 0.35256609320640564, 0.34786173701286316, 0.3440351188182831, 0.3405810594558716, 0.3382338583469391, 0.33087921142578125, 0.32125166058540344, 0.3262632489204407, 0.3198433816432953, 0.312661349773407, 0.3134597837924957, 0.3157566487789154, 0.295667827129364, 0.30135080218315125, 0.294609934091568], "accuracy": [0.2715625464916229, 0.4892352521419525, 0.568220853805542, 0.6275261044502258, 0.6778497099876404, 0.6985867023468018, 0.726192057132721, 0.7384757399559021, 0.7555144429206848, 0.7643640041351318, 0.7733456492424011, 0.7733456492424011, 0.7858935594558716, 0.7910447716712952, 0.8000264167785645, 0.8039889335632324, 0.8080834746360779, 0.8146876096725464, 0.817989706993103, 0.8187822103500366, 0.8255184292793274, 0.8269713521003723, 0.8360850811004639, 0.8391229510307312, 0.8381983637809753, 0.8457271456718445, 0.8481045961380005, 0.845859169960022, 0.8544445633888245, 0.8539162874221802, 0.8527275323867798, 0.8609166741371155, 0.8607845902442932, 0.8642187118530273, 0.8648791313171387, 0.8647470474243164, 0.8640866279602051, 0.8726720213890076, 0.8698983192443848, 0.8786157965660095, 0.8792761564254761, 0.8796724081039429, 0.8786157965660095, 0.8813894987106323, 0.8833707571029663, 0.8845595121383667, 0.882710337638855, 0.8861445188522339, 0.8916919827461243, 0.885219931602478, 0.8877294659614563, 0.8944657444953918, 0.891559898853302, 0.8930128216743469], "val_loss": [2.0350992679595947, 1.5034472942352295, 1.0370326042175293, 0.836217999458313, 0.7507614493370056, 0.6931778788566589, 0.6494609117507935, 0.6155409216880798, 0.5905542373657227, 0.5669698119163513, 0.5499789118766785, 0.5376875996589661, 0.5281380414962769, 0.5139917731285095, 0.5026112198829651, 0.49506619572639465, 0.4816342890262604, 0.47499486804008484, 0.47053831815719604, 0.460048109292984, 0.46135103702545166, 0.44763192534446716, 0.4410298764705658, 0.4368070363998413, 0.432178795337677, 0.42388129234313965, 0.4239177703857422, 0.41810864210128784, 0.4112998843193054, 0.4118107855319977, 0.4086991250514984, 0.4063204228878021, 0.40175119042396545, 0.3969525694847107, 0.3933084011077881, 0.39327359199523926, 0.39021822810173035, 0.38500675559043884, 0.38603758811950684, 0.3828924894332886, 0.3799978792667389, 0.37682226300239563, 0.3802131414413452, 0.3753400444984436, 0.37133899331092834, 0.37355664372444153, 0.37461036443710327, 0.36868149042129517, 0.36347657442092896, 0.36655664443969727, 0.36326614022254944, 0.3628230094909668, 0.3561043441295624, 0.355887770652771], "val_accuracy": [0.5356666445732117, 0.6579999923706055, 0.6796666383743286, 0.7043333053588867, 0.7239999771118164, 0.7459999918937683, 0.7646666765213013, 0.7670000195503235, 0.7856666445732117, 0.7923333048820496, 0.8053333163261414, 0.8056666851043701, 0.8083333373069763, 0.8159999847412109, 0.8223333358764648, 0.8230000138282776, 0.8320000171661377, 0.8320000171661377, 0.8326666951179504, 0.8373333215713501, 0.8353333473205566, 0.8410000205039978, 0.8446666598320007, 0.840666651725769, 0.847000002861023, 0.8486666679382324, 0.8463333249092102, 0.8503333330154419, 0.8566666841506958, 0.856333315372467, 0.8550000190734863, 0.8526666760444641, 0.8600000143051147, 0.8566666841506958, 0.862666666507721, 0.8600000143051147, 0.8613333106040955, 0.862666666507721, 0.8646666407585144, 0.8656666874885559, 0.8669999837875366, 0.8683333396911621, 0.8653333187103271, 0.8676666617393494, 0.8690000176429749, 0.8683333396911621, 0.8696666955947876, 0.8696666955947876, 0.8756666779518127, 0.8743333220481873, 0.8733333349227905, 0.8743333220481873, 0.875333309173584, 0.8733333349227905]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8311428427696228, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.693928837776184, 0.8787899613380432, 0.7005335092544556, 0.6081966757774353, 0.5742824673652649, 0.5395399928092957, 0.5063350796699524, 0.516219437122345, 0.5291550755500793, 0.49838879704475403, 0.5191148519515991, 0.4980279207229614, 0.4681011438369751, 0.4793560802936554], "accuracy": [0.4613657295703888, 0.672170102596283, 0.7397965788841248, 0.7688548564910889, 0.7880068421363831, 0.7979130744934082, 0.8084797263145447, 0.813498854637146, 0.8128384351730347, 0.8150838613510132, 0.819970965385437, 0.819442629814148, 0.833179235458374, 0.8321225643157959], "val_loss": [0.8655295372009277, 0.6037099361419678, 0.5521544814109802, 0.490986168384552, 0.4877041280269623, 0.5086193084716797, 0.5084096193313599, 0.5119892358779907, 0.550595760345459, 0.5012781023979187, 0.5570500493049622, 0.5286610722541809, 0.5417147874832153, 0.5591616034507751], "val_accuracy": [0.6553333401679993, 0.7666666507720947, 0.7996666431427002, 0.8206666707992554, 0.8196666836738586, 0.8246666789054871, 0.82833331823349, 0.8303333520889282, 0.8393333554267883, 0.8346666693687439, 0.8370000123977661, 0.8330000042915344, 0.8373333215713501, 0.8289999961853027]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [3, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 9, 0, 4, 5], [0, 2, 3, 0], [16, 42], [0, 1], [0, 0, 5], [0], [0], [1, 1, 1], [2, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 2], [2]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 4, 3, 1, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303136110305786, 2.30629825592041, 3.9974746704101562, 27.97161102294922, 94.71747589111328, 247.51121520996094], "accuracy": [0.10447761416435242, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.302523136138916, 2.347996473312378, 12.60496997833252, 57.67897415161133, 164.11044311523438, 401.9841613769531], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 1, 3, 1, 0], [0, 0, 1, 0, 1], [83, 99, 67], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 9, 8, 6, 4, 2, 0, 3, 9], [0, 1, 0, 3], [16, 16], [0, 1], [0, 0, 5], [0], [0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 6, 7, 9, 1, 4, 9], [7, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.0925714299082756, "mapping_values": [1, 1, 0, 1, 1, 2, 2, 0, 1, 2, 1, 1, 1, 10, 7, 3, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3110241889953613, 2.3107028007507324, 2.309431791305542, 2.3095149993896484, 2.3103182315826416, 2.309943914413452], "accuracy": [0.0940430611371994, 0.08796724677085876, 0.09377889335155487, 0.09074098616838455, 0.09021265059709549, 0.0952318087220192], "val_loss": [2.3091928958892822, 2.3091928958892822, 2.3091928958892822, 2.3091928958892822, 2.3091928958892822, 2.3091928958892822], "val_accuracy": [0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446, 0.09033333510160446]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 9, 3], [0, 1, 0, 2], [39, 39], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [0, 2, 3, 0, 3, 1], [0, 2, 0, 3], [30, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 0, 6, 2, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.0925714299082756, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 20, 10, 10, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), grad)), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2979219642384384e+16, 2.5981691692580864e+16, 2.6149171794804736e+16, 2.547054119223296e+16, 2.692417287356416e+16, 2.558726551843635e+16], "accuracy": [0.08611807972192764, 0.08598599582910538, 0.08770307898521423, 0.08730682730674744, 0.08875974267721176, 0.08757099509239197], "val_loss": [1.8108243544899584e+16, 1.8108243544899584e+16, 1.8108243544899584e+16, 1.8108243544899584e+16, 1.8108243544899584e+16, 1.8108243544899584e+16], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 0, 1, 4, 1, 4, 2, 8], [2, 0, 4, 3, 4, 0, 2, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.08542857319116592, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.negative(grad), tf.math.subtract(sigma, grad))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(beta, alpha)))", "other_info": {"loss": [2.310255289077759, 2.3086907863616943, 2.310978889465332, 2.309480667114258, 2.3097457885742188, 2.3104934692382812], "accuracy": [0.08994849026203156, 0.09655263274908066, 0.09602430462837219, 0.09113723784685135, 0.09206181764602661, 0.09166556596755981], "val_loss": [2.309016227722168, 2.309016227722168, 2.309016227722168, 2.309016227722168, 2.309016227722168, 2.309016227722168], "val_accuracy": [0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231, 0.08966666460037231]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 16, 8, 8, 2], "tree_depth": 12}]