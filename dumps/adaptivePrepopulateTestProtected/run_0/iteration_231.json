[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8442857265472412, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.654592514038086, 0.8526345491409302, 0.6865193247795105, 0.6255473494529724, 0.5761253237724304, 0.5676470994949341, 0.5352041721343994, 0.5291366577148438, 0.49474969506263733, 0.49344196915626526, 0.5198833346366882, 0.5145703554153442, 0.5161320567131042, 0.5351933240890503, 0.5573461055755615, 0.5837901830673218, 0.5567671656608582, 0.5397703051567078], "accuracy": [0.46810197830200195, 0.7008321285247803, 0.7523444890975952, 0.7572315335273743, 0.7923656105995178, 0.7887993454933167, 0.800818920135498, 0.8035926818847656, 0.8144234418869019, 0.8185180425643921, 0.8241975903511047, 0.8175934553146362, 0.8195747137069702, 0.8140271902084351, 0.8228767514228821, 0.8153480291366577, 0.8095363974571228, 0.8104609847068787], "val_loss": [0.8174195885658264, 0.6194498538970947, 0.5515553951263428, 0.5240240693092346, 0.5064170956611633, 0.5160523056983948, 0.48966944217681885, 0.48852986097335815, 0.4802888035774231, 0.5365646481513977, 0.5766373872756958, 0.5529388189315796, 0.5638942122459412, 0.6073443293571472, 0.63520747423172, 0.5712778568267822, 0.570647656917572, 0.5706461071968079], "val_accuracy": [0.706333339214325, 0.7860000133514404, 0.7933333516120911, 0.8006666898727417, 0.8163333535194397, 0.8270000219345093, 0.8173333406448364, 0.8366666436195374, 0.8320000171661377, 0.8339999914169312, 0.8263333439826965, 0.8366666436195374, 0.8383333086967468, 0.8233333230018616, 0.8316666483879089, 0.8173333406448364, 0.8240000009536743, 0.8216666579246521]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.842285692691803, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224478244781494, 1.8706142902374268, 1.4055129289627075, 1.098975419998169, 0.9385667443275452, 0.8479143381118774, 0.7733936905860901, 0.7255264520645142, 0.681165874004364, 0.6559870839118958, 0.6275654435157776, 0.6010029315948486, 0.575275719165802, 0.5606489777565002, 0.5418516397476196, 0.526437520980835, 0.5150613188743591, 0.49734947085380554, 0.4857615530490875, 0.48210543394088745, 0.46915203332901, 0.4600399434566498, 0.43689727783203125, 0.4369834363460541, 0.43497273325920105, 0.41931405663490295, 0.4159291088581085, 0.4064166843891144, 0.41011741757392883, 0.3987085223197937, 0.3899560868740082, 0.3813558518886566, 0.3744051456451416, 0.3667943477630615, 0.36181744933128357, 0.3659908175468445, 0.3537408411502838, 0.3421986997127533, 0.3388347029685974, 0.3356478214263916, 0.3291640877723694, 0.33038389682769775, 0.3195854723453522, 0.31728801131248474, 0.3134642541408539, 0.3159407377243042, 0.30071353912353516, 0.30416110157966614, 0.29452574253082275, 0.2970625162124634, 0.29555851221084595, 0.2930385172367096, 0.27582108974456787, 0.27613314986228943, 0.2734344005584717, 0.266224205493927, 0.26526179909706116, 0.25864696502685547], "accuracy": [0.26324132084846497, 0.49531105160713196, 0.5583146214485168, 0.6161669492721558, 0.6656980514526367, 0.6973979473114014, 0.7218332886695862, 0.7380794882774353, 0.7543256878852844, 0.7593448758125305, 0.7691190242767334, 0.78113853931427, 0.7889314293861389, 0.7955356240272522, 0.7975168228149414, 0.8041210174560547, 0.8128384351730347, 0.8210275769233704, 0.8206313848495483, 0.8234050869941711, 0.8309338092803955, 0.835160493850708, 0.8453308939933777, 0.8413683772087097, 0.8432175517082214, 0.8511425256729126, 0.8495575189590454, 0.8515387773513794, 0.854708731174469, 0.8595958352088928, 0.8615770936012268, 0.8609166741371155, 0.8643507957458496, 0.8671245574951172, 0.8713511824607849, 0.867520809173584, 0.8697662353515625, 0.8787478804588318, 0.8758420348167419, 0.8771628737449646, 0.8798044919967651, 0.8805969953536987, 0.8829745054244995, 0.884691596031189, 0.8881257176399231, 0.8823140859603882, 0.8932769894599915, 0.887597382068634, 0.8938053250312805, 0.8906353116035461, 0.8945978283882141, 0.8942015767097473, 0.8976356983184814, 0.8967111110687256, 0.902390718460083, 0.9031832218170166, 0.9059569239616394, 0.9037115573883057], "val_loss": [2.036043167114258, 1.5078141689300537, 1.025949478149414, 0.8167499899864197, 0.7211042642593384, 0.6633585691452026, 0.6204999685287476, 0.5932354927062988, 0.5629499554634094, 0.5395827293395996, 0.5263246893882751, 0.504366397857666, 0.4915887415409088, 0.4794798493385315, 0.4689735174179077, 0.46017611026763916, 0.44830942153930664, 0.4445015490055084, 0.4320172071456909, 0.42814120650291443, 0.4190591275691986, 0.4127541482448578, 0.4067283570766449, 0.3999605178833008, 0.4003768861293793, 0.3989458382129669, 0.3918614983558655, 0.38470545411109924, 0.38722050189971924, 0.3805420696735382, 0.3727750778198242, 0.3725115954875946, 0.3694189488887787, 0.36987605690956116, 0.3659682273864746, 0.36018386483192444, 0.35976147651672363, 0.35546454787254333, 0.36132192611694336, 0.35094743967056274, 0.3528038263320923, 0.3508075475692749, 0.34894630312919617, 0.3500526249408722, 0.34783124923706055, 0.3445795178413391, 0.3422781527042389, 0.33747225999832153, 0.341980904340744, 0.3438340127468109, 0.33643993735313416, 0.33795109391212463, 0.33552998304367065, 0.3345465362071991, 0.3337628245353699, 0.3332032561302185, 0.33159661293029785, 0.3318886458873749], "val_accuracy": [0.5736666917800903, 0.6743333339691162, 0.6956666707992554, 0.7286666631698608, 0.7476666569709778, 0.762333333492279, 0.7739999890327454, 0.7799999713897705, 0.7913333177566528, 0.8019999861717224, 0.8059999942779541, 0.8116666674613953, 0.8203333616256714, 0.8299999833106995, 0.8296666741371155, 0.8320000171661377, 0.8396666646003723, 0.8360000252723694, 0.846666693687439, 0.8460000157356262, 0.8573333621025085, 0.8533333539962769, 0.859666645526886, 0.8606666922569275, 0.8569999933242798, 0.8606666922569275, 0.8610000014305115, 0.8676666617393494, 0.8619999885559082, 0.8650000095367432, 0.8696666955947876, 0.871666669845581, 0.8700000047683716, 0.8683333396911621, 0.8690000176429749, 0.8740000128746033, 0.875, 0.8769999742507935, 0.8730000257492065, 0.8799999952316284, 0.8743333220481873, 0.878000020980835, 0.8766666650772095, 0.8756666779518127, 0.8806666731834412, 0.8799999952316284, 0.8836666941642761, 0.8853333592414856, 0.8816666603088379, 0.8840000033378601, 0.8866666555404663, 0.8820000290870667, 0.8886666893959045, 0.8856666684150696, 0.8859999775886536, 0.887666642665863, 0.8859999775886536, 0.8886666893959045]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8417142629623413, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2923989295959473, 2.184642791748047, 1.7581102848052979, 1.3465543985366821, 1.0828393697738647, 0.9200956225395203, 0.8669864535331726, 0.8153465390205383, 0.7662315368652344, 0.7544038891792297, 0.7133487462997437, 0.7070682048797607, 0.659601628780365, 0.6414123177528381, 0.627524733543396, 0.6087946891784668, 0.5895274877548218, 0.587015688419342, 0.5684795379638672, 0.5511900782585144, 0.5309448838233948, 0.5263803601264954, 0.5137000679969788, 0.5048114061355591, 0.5047438740730286, 0.4831574857234955, 0.4746541976928711, 0.4615750312805176, 0.4565846025943756, 0.4465944766998291, 0.43859341740608215, 0.44321465492248535, 0.4274674654006958, 0.4240151345729828, 0.4107285737991333, 0.3992001712322235, 0.4026200771331787, 0.38533028960227966, 0.39529120922088623], "accuracy": [0.1286487877368927, 0.3385286033153534, 0.4373266398906708, 0.5472196340560913, 0.6369040012359619, 0.6674151420593262, 0.6789063811302185, 0.6997754573822021, 0.7067758440971375, 0.7168141603469849, 0.7334566116333008, 0.7351737022399902, 0.7481178045272827, 0.7580240368843079, 0.7626469135284424, 0.7652885913848877, 0.7763835787773132, 0.7815347909927368, 0.7817989587783813, 0.789988100528717, 0.7943468689918518, 0.7971205711364746, 0.8053097128868103, 0.8078193068504333, 0.804649293422699, 0.8140271902084351, 0.8193105459213257, 0.8208954930305481, 0.824329674243927, 0.8230088353157043, 0.8317263126373291, 0.8297450542449951, 0.8368775844573975, 0.8437458872795105, 0.8422929644584656, 0.8473120927810669, 0.8469158411026001, 0.8514066934585571, 0.8496896028518677], "val_loss": [2.244892120361328, 2.0061793327331543, 1.103634238243103, 0.8498302698135376, 0.7290669083595276, 0.6891476511955261, 0.6252962350845337, 0.624561607837677, 0.6265941858291626, 0.599955141544342, 0.5606722235679626, 0.5482305288314819, 0.5468334555625916, 0.5257372260093689, 0.5093438625335693, 0.4944917857646942, 0.4944348633289337, 0.4976258873939514, 0.48139750957489014, 0.4686053991317749, 0.46266427636146545, 0.45316919684410095, 0.44983118772506714, 0.44325023889541626, 0.43808916211128235, 0.42980197072029114, 0.4223243296146393, 0.41930320858955383, 0.42312169075012207, 0.4076257646083832, 0.4072093069553375, 0.42397451400756836, 0.3938724100589752, 0.38700684905052185, 0.4004034698009491, 0.4035293459892273, 0.39631885290145874, 0.4001704156398773, 0.38510146737098694], "val_accuracy": [0.3946666717529297, 0.47566667199134827, 0.6646666526794434, 0.7036666870117188, 0.737666666507721, 0.7390000224113464, 0.7519999742507935, 0.7639999985694885, 0.7649999856948853, 0.7673333287239075, 0.7853333353996277, 0.7776666879653931, 0.8023333549499512, 0.7983333468437195, 0.8029999732971191, 0.8080000281333923, 0.8076666593551636, 0.8090000152587891, 0.8203333616256714, 0.8213333487510681, 0.8213333487510681, 0.8303333520889282, 0.8266666531562805, 0.8360000252723694, 0.8316666483879089, 0.8366666436195374, 0.8443333506584167, 0.8446666598320007, 0.8483333587646484, 0.8523333072662354, 0.8529999852180481, 0.8536666631698608, 0.8619999885559082, 0.8646666407585144, 0.8603333234786987, 0.8513333201408386, 0.8569999933242798, 0.862666666507721, 0.8643333315849304]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 6, 0, 3], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 6, 2, 4, 5, 9, 2, 4, 0, 6, 5, 7, 4, 7, 5, 1, 8, 1, 9, 3, 1, 3, 9, 5, 6], [0, 2, 0, 3, 5, 2, 4, 1, 5, 0, 4, 1, 0, 3, 2, 1], [16, 16, 29, 39, 95, 58, 77], [0, 1], [0], [0], [99], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 23, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 45, 29, 16, 7, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.add(tf.math.pow(tf.math.square(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(tf.math.negative(grad), tf.math.divide_no_nan(beta, grad)), tf.math.square(alpha))), tf.math.add(grad, tf.math.pow(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(tf.math.sqrt(grad), tf.math.subtract(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), alpha)))), tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(grad, beta))), alpha))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 8, 3, 7, 7, 9], [0, 1, 0, 2, 3], [39, 39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 4, 1, 4, 1, 4, 2, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 8, 5, 3, 1, 0, 1, 1, 2, 1, 1, 1, 11, 5, 6, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.303567886352539, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 9], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5, 8], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [65], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 3, 3, 2, 8, 1, 4, 1, 5, 2, 5], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [47, 99, 96, 99, 61, 61]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 5, 2, 2, 11, 7, 4, 1, 2, 1, 1, 1, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.math.square(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma), alpha)", "other_info": {"loss": [2.3029770851135254, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 0], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 2, 5], [0, 2, 2, 3], [95, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), beta), tf.math.add(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303565263748169, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09602430462837219, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]