[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8539999723434448, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2232818603515625, 1.8744795322418213, 1.398110032081604, 1.0889792442321777, 0.940773069858551, 0.8414872884750366, 0.7746686935424805, 0.7180495858192444, 0.6850765943527222, 0.6602963805198669, 0.6292724609375, 0.6135168075561523, 0.5898594856262207, 0.571283757686615, 0.5551162958145142, 0.5359495282173157, 0.5221779346466064, 0.5134004354476929, 0.5068172216415405, 0.4884810149669647, 0.4879108667373657, 0.475525826215744, 0.4736038148403168, 0.45826229453086853, 0.4461558759212494, 0.44052088260650635, 0.43652650713920593, 0.4229790270328522, 0.41887426376342773, 0.41387784481048584, 0.39921239018440247, 0.4103054106235504, 0.39825358986854553, 0.39115139842033386, 0.38753801584243774, 0.38174760341644287, 0.37094447016716003, 0.36283615231513977, 0.358691543340683, 0.35793012380599976, 0.3455868363380432, 0.34685301780700684, 0.3356057107448578, 0.3368699550628662, 0.3259318172931671, 0.32088133692741394, 0.3216007947921753, 0.3173592984676361, 0.31096524000167847, 0.3024117052555084], "accuracy": [0.26482629776000977, 0.4772156774997711, 0.5645225048065186, 0.6166952848434448, 0.6712455153465271, 0.6970016956329346, 0.7246070504188538, 0.7396644949913025, 0.7544577717781067, 0.7617223858833313, 0.7717606425285339, 0.776251494884491, 0.7877426743507385, 0.7952714562416077, 0.8031964302062988, 0.8045172095298767, 0.8088759779930115, 0.8153480291366577, 0.8241975903511047, 0.8231409192085266, 0.821820080280304, 0.8240655064582825, 0.8310658931732178, 0.8411042094230652, 0.8407079577445984, 0.8451988101005554, 0.8445383906364441, 0.8479725122451782, 0.8486329317092896, 0.8512746095657349, 0.8574824929237366, 0.8544445633888245, 0.8568220734596252, 0.8602562546730042, 0.8632941246032715, 0.8638224601745605, 0.8673887252807617, 0.8702945709228516, 0.8730682730674744, 0.8750495314598083, 0.876370370388031, 0.8751816153526306, 0.8808611631393433, 0.8819178342819214, 0.8820499181747437, 0.884691596031189, 0.8837670087814331, 0.8831065893173218, 0.8874653577804565, 0.8905032277107239], "val_loss": [2.0402932167053223, 1.5134145021438599, 1.0352022647857666, 0.8231226205825806, 0.7326897978782654, 0.6778047680854797, 0.6338739395141602, 0.5959373712539673, 0.569003164768219, 0.5532209277153015, 0.5300730466842651, 0.5187132954597473, 0.5000116229057312, 0.48834672570228577, 0.48014917969703674, 0.4709189534187317, 0.460198312997818, 0.4578773081302643, 0.4462595582008362, 0.4387460947036743, 0.4379693269729614, 0.4310503602027893, 0.426736980676651, 0.41760820150375366, 0.4129980206489563, 0.41062304377555847, 0.4091970920562744, 0.4020330309867859, 0.3983210027217865, 0.3963521420955658, 0.3932957351207733, 0.38787731528282166, 0.39018046855926514, 0.38731250166893005, 0.38276079297065735, 0.3775765299797058, 0.37512508034706116, 0.378289133310318, 0.37387174367904663, 0.3687564730644226, 0.3699382245540619, 0.36670833826065063, 0.36750349402427673, 0.36737170815467834, 0.36364468932151794, 0.361531138420105, 0.3576096296310425, 0.3552238643169403, 0.35592249035835266, 0.3569965362548828], "val_accuracy": [0.5450000166893005, 0.6700000166893005, 0.6913333535194397, 0.7120000123977661, 0.7409999966621399, 0.7586666941642761, 0.7666666507720947, 0.7786666750907898, 0.7846666574478149, 0.7993333339691162, 0.8033333420753479, 0.8063333630561829, 0.8116666674613953, 0.8203333616256714, 0.8203333616256714, 0.8220000267028809, 0.8309999704360962, 0.8253333568572998, 0.8330000042915344, 0.8363333344459534, 0.8346666693687439, 0.8363333344459534, 0.840666651725769, 0.8453333377838135, 0.846666693687439, 0.8479999899864197, 0.8479999899864197, 0.847000002861023, 0.8523333072662354, 0.8493333458900452, 0.8539999723434448, 0.8546666502952576, 0.856333315372467, 0.8566666841506958, 0.8566666841506958, 0.8586666584014893, 0.8603333234786987, 0.8569999933242798, 0.8629999756813049, 0.8636666536331177, 0.8659999966621399, 0.8636666536331177, 0.8659999966621399, 0.8643333315849304, 0.8709999918937683, 0.8669999837875366, 0.8700000047683716, 0.8686666488647461, 0.8709999918937683, 0.8703333139419556]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0], [0, 9], [0], [0], [0, 0, 0, 1, 1, 1], [0, 2, 4], [0, 4, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8488571643829346, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2948617935180664, 2.1947784423828125, 1.7968028783798218, 1.3801531791687012, 1.0687174797058105, 0.9311812520027161, 0.8635956048965454, 0.8364429473876953, 0.7895464897155762, 0.7647546529769897, 0.7191300392150879, 0.7077784538269043, 0.6782217025756836, 0.6560148000717163, 0.626364529132843, 0.6315340399742126, 0.5955924391746521, 0.5932943820953369, 0.5791500806808472, 0.5690788626670837, 0.5583441853523254, 0.554542064666748, 0.5350939631462097, 0.5222576856613159, 0.5122674107551575, 0.4981989562511444, 0.4924602508544922, 0.4862167537212372, 0.47491729259490967, 0.463921457529068, 0.459726482629776, 0.4525229334831238, 0.45816582441329956, 0.43977898359298706, 0.43149203062057495, 0.4443548619747162, 0.43054884672164917, 0.42382460832595825, 0.39772000908851624, 0.4035242795944214, 0.3935074806213379, 0.3815290033817291, 0.38726264238357544, 0.3688344657421112, 0.3762693703174591, 0.3627178966999054, 0.36010974645614624, 0.35252436995506287, 0.3510194718837738, 0.3442443311214447], "accuracy": [0.12310130894184113, 0.3249240517616272, 0.43230748176574707, 0.5237088799476624, 0.6306960582733154, 0.6557918190956116, 0.6791704893112183, 0.6907938122749329, 0.6973979473114014, 0.7024171352386475, 0.7235503792762756, 0.7264562249183655, 0.7421740889549255, 0.7465327978134155, 0.7510236501693726, 0.748778223991394, 0.7681944370269775, 0.7755910754203796, 0.7729493975639343, 0.7816668748855591, 0.7887993454933167, 0.7881389260292053, 0.796328067779541, 0.7984414100646973, 0.7979130744934082, 0.809140145778656, 0.8117818236351013, 0.8145555257797241, 0.8148196935653687, 0.8183859586715698, 0.8239334225654602, 0.829216718673706, 0.8227446675300598, 0.8330471515655518, 0.837537944316864, 0.829216718673706, 0.8319904804229736, 0.8383304476737976, 0.8486329317092896, 0.842028796672821, 0.844010055065155, 0.8536521196365356, 0.8529917001724243, 0.8504821062088013, 0.8499537706375122, 0.8631620407104492, 0.868049144744873, 0.8654074668884277, 0.8598600029945374, 0.8697662353515625], "val_loss": [2.2482454776763916, 2.036101818084717, 1.175141453742981, 0.8633185029029846, 0.7770355343818665, 0.7345886826515198, 0.6822766661643982, 0.6817276477813721, 0.6853880286216736, 0.6445506811141968, 0.6039096117019653, 0.5868863463401794, 0.5731403231620789, 0.5690708160400391, 0.5630124807357788, 0.5508428812026978, 0.5371406078338623, 0.527370274066925, 0.5261369347572327, 0.5339117646217346, 0.5218566656112671, 0.5045778751373291, 0.5065558552742004, 0.503318727016449, 0.4920845627784729, 0.48148152232170105, 0.4692348539829254, 0.46225684881210327, 0.472321093082428, 0.4785187840461731, 0.4656752645969391, 0.45889297127723694, 0.4534856677055359, 0.47434937953948975, 0.4682495892047882, 0.4570787847042084, 0.4549733102321625, 0.4561409652233124, 0.45611029863357544, 0.4364854395389557, 0.43967947363853455, 0.4658055901527405, 0.4461905062198639, 0.43653565645217896, 0.4510188698768616, 0.4784083962440491, 0.46510183811187744, 0.45654743909835815, 0.45941948890686035, 0.47164902091026306], "val_accuracy": [0.4176666736602783, 0.45766666531562805, 0.652999997138977, 0.7066666483879089, 0.7203333377838135, 0.7263333201408386, 0.7490000128746033, 0.7440000176429749, 0.7250000238418579, 0.7630000114440918, 0.7670000195503235, 0.7746666669845581, 0.7756666541099548, 0.7789999842643738, 0.7900000214576721, 0.7943333387374878, 0.8026666641235352, 0.8019999861717224, 0.8076666593551636, 0.8046666383743286, 0.8113333582878113, 0.812333345413208, 0.8050000071525574, 0.8116666674613953, 0.8220000267028809, 0.8220000267028809, 0.8259999752044678, 0.8370000123977661, 0.8356666564941406, 0.8339999914169312, 0.8360000252723694, 0.840666651725769, 0.8413333296775818, 0.8363333344459534, 0.8453333377838135, 0.8393333554267883, 0.843666672706604, 0.8423333168029785, 0.8476666808128357, 0.8516666889190674, 0.8510000109672546, 0.8543333411216736, 0.8543333411216736, 0.8506666421890259, 0.8579999804496765, 0.8533333539962769, 0.8516666889190674, 0.8516666889190674, 0.8496666550636292, 0.8579999804496765]}, "mapping_values": [1, 10, 5, 5, 3, 2, 2, 0, 1, 6, 3, 3, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8308571577072144, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4667950868606567, 0.7545151710510254, 0.6689490675926208, 0.6067402958869934, 0.5755610466003418, 0.5747458934783936, 0.5523052215576172, 0.5498097538948059, 0.5181441307067871, 0.485159307718277, 0.4901654124259949, 0.4645446240901947, 0.4749526381492615, 0.4813643991947174, 0.45791730284690857, 0.4766119420528412, 0.5233335494995117, 0.4971144199371338, 0.4742925763130188, 0.47920283675193787, 0.4934318959712982, 0.5145718455314636, 0.5046072006225586, 0.4628053307533264, 0.508969247341156, 0.5005409717559814], "accuracy": [0.5021793842315674, 0.7400607466697693, 0.7518161535263062, 0.7695152759552002, 0.7877426743507385, 0.793950617313385, 0.7979130744934082, 0.8014793395996094, 0.8070268034934998, 0.8173292875289917, 0.8272355198860168, 0.8304054737091064, 0.8308017253875732, 0.8391229510307312, 0.8432175517082214, 0.8360850811004639, 0.8226125836372375, 0.8297450542449951, 0.8466516733169556, 0.833179235458374, 0.8338396549224854, 0.8358209133148193, 0.8318583965301514, 0.8432175517082214, 0.8318583965301514, 0.8354246616363525], "val_loss": [0.7540566325187683, 0.6491134166717529, 0.5816352367401123, 0.5875268578529358, 0.6145079135894775, 0.5598093271255493, 0.5733435750007629, 0.5540446639060974, 0.5445631742477417, 0.5618168115615845, 0.507996678352356, 0.5406529307365417, 0.538306474685669, 0.5864678025245667, 0.6303897500038147, 0.5976647734642029, 0.6180905699729919, 0.5926501750946045, 0.6686074137687683, 0.5946430563926697, 0.7215856313705444, 0.6978601813316345, 0.7048966288566589, 0.7582237720489502, 0.7807943224906921, 0.6770914793014526], "val_accuracy": [0.734000027179718, 0.7676666378974915, 0.781000018119812, 0.7896666526794434, 0.7829999923706055, 0.8166666626930237, 0.8133333325386047, 0.8066666722297668, 0.8209999799728394, 0.8339999914169312, 0.8276666402816772, 0.8296666741371155, 0.8360000252723694, 0.8370000123977661, 0.828000009059906, 0.8223333358764648, 0.8216666579246521, 0.8376666903495789, 0.8416666388511658, 0.8333333134651184, 0.8429999947547913, 0.8356666564941406, 0.8376666903495789, 0.8203333616256714, 0.8149999976158142, 0.8423333168029785]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 8, 3, 9], [0, 2, 0, 3], [62, 16], [0, 1, 1], [2], [0, 5], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 3, 3, 0, 8, 1, 4, 1, 4, 6, 8], [0, 3, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 17, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 1, 0, 1, 1, 3, 1, 2, 1, 12, 7, 5, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.subtract(sigma, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 2], [0, 1, 0, 2, 0], [13, 39, 86], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 1, 8], [0, 2, 0, 2, 0], [0, 58, 82], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 8, 5, 8, 1, 4, 1, 4, 2, 6], [1, 3, 2, 1, 7, 4, 1, 1, 4, 0], [3, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 12, 7, 5, 3, 2, 1, 1, 1, 8, 5, 3, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), alpha), tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.math.sqrt(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(alpha), sigma), tf.math.square(tf.math.sqrt(beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 5, 3, 8], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [8, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [1, 5, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [18026891264.0, 4462506147840.0, 89398595026944.0, 691066479050752.0, 3167727359361024.0, 1.0858576046194688e+16], "accuracy": [0.09615638852119446, 0.10698718577623367, 0.10011887550354004, 0.0956280529499054, 0.09853387624025345, 0.10117553919553757], "val_loss": [224231211008.0, 17649572511744.0, 214738348802048.0, 1246336829620224.0, 4846565650857984.0, 1.465651684179968e+16], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 3, 1, 3], [1, 1, 0, 1, 2], [83, 24, 27], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 0, 1, 5, 9, 2, 3], [0, 3, 5, 3, 5], [27, 58, 80], [0, 1], [0], [0], [99], [0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 6], [0]], "fitness": -0.09057142585515976, "mapping_values": [1, 7, 4, 3, 1, 4, 2, 2, 1, 2, 1, 1, 1, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.subtract(alpha, alpha), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, grad)", "other_info": {"loss": [2.310007095336914, 2.3094065189361572, 2.309847593307495, 2.308997392654419, 2.3106844425201416, 2.3094348907470703], "accuracy": [0.09311848133802414, 0.09351472556591034, 0.0944393053650856, 0.09708096832036972, 0.08875974267721176, 0.09232597798109055], "val_loss": [2.3083817958831787, 2.3083817958831787, 2.3083817958831787, 2.3083817958831787, 2.3083817958831787, 2.3083817958831787], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]