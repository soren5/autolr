[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8582857251167297, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2248518466949463, 1.8765665292739868, 1.397214651107788, 1.0943360328674316, 0.9371188282966614, 0.8427161574363708, 0.784271240234375, 0.7345054149627686, 0.6926320195198059, 0.660058856010437, 0.649917483329773, 0.6245867609977722, 0.6026661396026611, 0.580589234828949, 0.5694482326507568, 0.564215898513794, 0.5524129271507263, 0.531237781047821, 0.5175537467002869, 0.5037665963172913, 0.4954308867454529, 0.4830055832862854, 0.48626232147216797, 0.4774493873119354, 0.4595697820186615, 0.4567336440086365, 0.4449775815010071, 0.43938279151916504, 0.42780670523643494, 0.425700306892395, 0.42378559708595276, 0.4088117480278015, 0.4038584232330322, 0.39794859290122986, 0.39907515048980713, 0.39469239115715027], "accuracy": [0.26258090138435364, 0.49029189348220825, 0.5634658336639404, 0.6176198720932007, 0.6634526252746582, 0.6970016956329346, 0.717870831489563, 0.7275128960609436, 0.750231146812439, 0.7605336308479309, 0.7597411274909973, 0.7672698497772217, 0.778232753276825, 0.7910447716712952, 0.7968564033508301, 0.7927618622779846, 0.7993659973144531, 0.8117818236351013, 0.8140271902084351, 0.8189142942428589, 0.821820080280304, 0.828820526599884, 0.8271034359931946, 0.828292191028595, 0.8345000743865967, 0.8364813327789307, 0.8400475382804871, 0.8417646288871765, 0.8454629778862, 0.8487650156021118, 0.8492933511734009, 0.8519350290298462, 0.8561616539955139, 0.8560295701026917, 0.8598600029945374, 0.863029956817627], "val_loss": [2.0476109981536865, 1.5371575355529785, 1.0640554428100586, 0.8498967289924622, 0.7614414691925049, 0.7004328370094299, 0.654829204082489, 0.6181538701057434, 0.5948653817176819, 0.5715929269790649, 0.5511000752449036, 0.5369836688041687, 0.5224468111991882, 0.5070128440856934, 0.5065261125564575, 0.4932202994823456, 0.48135173320770264, 0.47185030579566956, 0.4646585285663605, 0.4578876197338104, 0.4478784203529358, 0.44751715660095215, 0.43764805793762207, 0.4332657754421234, 0.4299663007259369, 0.42152902483940125, 0.41569259762763977, 0.41132569313049316, 0.40877223014831543, 0.4023851454257965, 0.3978251814842224, 0.39983224868774414, 0.3953065872192383, 0.3914928436279297, 0.38851049542427063, 0.38983920216560364], "val_accuracy": [0.5246666669845581, 0.6576666831970215, 0.6809999942779541, 0.7053333520889282, 0.7306666374206543, 0.737666666507721, 0.7523333430290222, 0.7663333415985107, 0.7776666879653931, 0.7873333096504211, 0.7960000038146973, 0.8059999942779541, 0.8026666641235352, 0.8176666498184204, 0.8159999847412109, 0.8193333148956299, 0.8206666707992554, 0.8253333568572998, 0.828000009059906, 0.8360000252723694, 0.8366666436195374, 0.8379999995231628, 0.8376666903495789, 0.843999981880188, 0.847000002861023, 0.8503333330154419, 0.8510000109672546, 0.8506666421890259, 0.8463333249092102, 0.8526666760444641, 0.8579999804496765, 0.8556666374206543, 0.8516666889190674, 0.8573333621025085, 0.8536666631698608, 0.8556666374206543]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 1], [0, 8, 1], [0, 0], [0, 99], [0, 0, 0, 1, 0, 1, 1], [0, 0, 7, 4], [0, 6, 3], [0], [0, 1], [0], [1], [0]], "fitness": -0.8557142615318298, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293025493621826, 2.1899619102478027, 1.7634531259536743, 1.3569074869155884, 1.0639902353286743, 0.9183274507522583, 0.8344600796699524, 0.8106011748313904, 0.7386600971221924, 0.7409409880638123, 0.7002980709075928, 0.6709687113761902, 0.6229208111763, 0.6037178635597229, 0.5877709984779358, 0.5772265195846558, 0.5743846297264099, 0.5615823864936829, 0.5581724643707275, 0.5330865383148193, 0.5244474411010742, 0.5152397751808167, 0.5099207162857056, 0.5003049969673157, 0.49485060572624207, 0.47294530272483826, 0.4778769314289093, 0.46348118782043457, 0.448764830827713, 0.4345110058784485, 0.4318215847015381, 0.4055103361606598, 0.41272974014282227, 0.4163357615470886, 0.4040280282497406, 0.39263370633125305, 0.3830699026584625, 0.3753555715084076, 0.3779694736003876, 0.3587660789489746, 0.3521030843257904, 0.3474236726760864, 0.34655600786209106, 0.32955026626586914, 0.3341996669769287, 0.3339937627315521, 0.3294716477394104, 0.33442801237106323, 0.3186951279640198], "accuracy": [0.13155461847782135, 0.32320696115493774, 0.4403645396232605, 0.5388984084129333, 0.6380926966667175, 0.6627922058105469, 0.6939638257026672, 0.7094175219535828, 0.7096816897392273, 0.7098137736320496, 0.7325320243835449, 0.7375511527061462, 0.7691190242767334, 0.774270236492157, 0.769911527633667, 0.7786290049552917, 0.7816668748855591, 0.7824593782424927, 0.7954035401344299, 0.7984414100646973, 0.7993659973144531, 0.7980451583862305, 0.8107251524925232, 0.8127063512802124, 0.8117818236351013, 0.8265751004219055, 0.8208954930305481, 0.8298771381378174, 0.8330471515655518, 0.8381983637809753, 0.8380662798881531, 0.8451988101005554, 0.8471800088882446, 0.8459912538528442, 0.846387505531311, 0.8520671129226685, 0.8578787446022034, 0.8569541573524475, 0.8603883385658264, 0.86118084192276, 0.868049144744873, 0.8684453964233398, 0.8688416481018066, 0.8774270415306091, 0.8787478804588318, 0.8712190985679626, 0.8792761564254761, 0.8673887252807617, 0.8726720213890076], "val_loss": [2.246450901031494, 2.0226690769195557, 1.1462345123291016, 0.8905593156814575, 0.7670542001724243, 0.7066508531570435, 0.6714012622833252, 0.6491020321846008, 0.6601612567901611, 0.6141912341117859, 0.5746603012084961, 0.552275538444519, 0.5481972098350525, 0.54068523645401, 0.5186222195625305, 0.5083098411560059, 0.5041847229003906, 0.4989626109600067, 0.48895928263664246, 0.4763512909412384, 0.473164826631546, 0.4637034833431244, 0.4631088972091675, 0.4620411694049835, 0.46046528220176697, 0.44842198491096497, 0.4395795464515686, 0.43300265073776245, 0.43674343824386597, 0.4277486503124237, 0.4194106459617615, 0.42609521746635437, 0.41428929567337036, 0.41457587480545044, 0.42444536089897156, 0.41251346468925476, 0.4103163778781891, 0.4078570008277893, 0.4103952944278717, 0.4141031801700592, 0.4138622283935547, 0.40509578585624695, 0.3895784616470337, 0.38615158200263977, 0.39149850606918335, 0.4066821336746216, 0.4180646240711212, 0.4242364168167114, 0.4204249978065491], "val_accuracy": [0.4180000126361847, 0.45133334398269653, 0.6433333158493042, 0.6913333535194397, 0.7020000219345093, 0.7266666889190674, 0.7336666584014893, 0.7563333511352539, 0.7436666488647461, 0.7599999904632568, 0.7776666879653931, 0.7910000085830688, 0.7866666913032532, 0.7863333225250244, 0.8003333210945129, 0.7986666560173035, 0.8073333501815796, 0.8040000200271606, 0.8103333115577698, 0.8209999799728394, 0.8193333148956299, 0.8209999799728394, 0.8316666483879089, 0.8293333053588867, 0.8386666774749756, 0.8366666436195374, 0.8460000157356262, 0.8536666631698608, 0.8500000238418579, 0.856333315372467, 0.8536666631698608, 0.8516666889190674, 0.8489999771118164, 0.8536666631698608, 0.859000027179718, 0.8556666374206543, 0.8553333282470703, 0.8633333444595337, 0.8616666793823242, 0.8603333234786987, 0.8633333444595337, 0.8636666536331177, 0.8656666874885559, 0.8676666617393494, 0.8646666407585144, 0.8669999837875366, 0.8653333187103271, 0.862333357334137, 0.8643333315849304]}, "mapping_values": [1, 10, 5, 5, 3, 5, 3, 2, 2, 7, 4, 3, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 1], [0, 1], [0], [1], [0], [2], [0]], "fitness": -0.8354285955429077, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5803087949752808, 0.8563047647476196, 0.7143251299858093, 0.6593613028526306, 0.5895649194717407, 0.5456575751304626, 0.5090041160583496, 0.4894823729991913, 0.4856778681278229, 0.48507410287857056, 0.4806056618690491, 0.4527438282966614, 0.47248387336730957, 0.47394585609436035, 0.5288894772529602, 0.49174928665161133, 0.5282890796661377], "accuracy": [0.460969477891922, 0.698718786239624, 0.7240787148475647, 0.7646281719207764, 0.7792893648147583, 0.8024039268493652, 0.8112534880638123, 0.822348415851593, 0.8277638554573059, 0.829216718673706, 0.8259146809577942, 0.8451988101005554, 0.8297450542449951, 0.8380662798881531, 0.8310658931732178, 0.837141752243042, 0.8206313848495483], "val_loss": [0.9087082743644714, 0.6433355808258057, 0.6532571911811829, 0.5420592427253723, 0.516661524772644, 0.5009928345680237, 0.4704153537750244, 0.4803719222545624, 0.4595803916454315, 0.4989476203918457, 0.4640467166900635, 0.47326985001564026, 0.47463712096214294, 0.509434163570404, 0.5659306049346924, 0.5236234664916992, 0.4838770627975464], "val_accuracy": [0.6736666560173035, 0.750333309173584, 0.7570000290870667, 0.8046666383743286, 0.8086666464805603, 0.8286666870117188, 0.8339999914169312, 0.8423333168029785, 0.8376666903495789, 0.8326666951179504, 0.8420000076293945, 0.8486666679382324, 0.8403333425521851, 0.8426666855812073, 0.843999981880188, 0.8433333039283752, 0.843999981880188]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [4, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [4, 0, 4, 4, 0, 3, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.23685714602470398, "mapping_values": [1, 8, 4, 4, 1, 9, 5, 4, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(grad, alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad", "other_info": {"loss": [2.337519884109497, 2.274388551712036, 2.5048720836639404, 2.3039252758026123, 2.2824954986572266, 2.420236110687256, 2.308464527130127], "accuracy": [0.1970677524805069, 0.1578391194343567, 0.16721701622009277, 0.10249637067317963, 0.12270505726337433, 0.17461365461349487, 0.09734513610601425], "val_loss": [2.271829605102539, 2.2716751098632812, 2.305105209350586, 2.300086498260498, 2.077824831008911, 2.312044382095337, 2.3046793937683105], "val_accuracy": [0.2173333317041397, 0.23800000548362732, 0.10333333164453506, 0.10066666454076767, 0.19633333384990692, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 0, 3, 3, 1, 1, 1, 7, 3, 4, 4], [0, 1, 0, 2, 1, 0, 3, 3, 0, 2, 3, 0, 2], [39, 39, 56, 38, 21], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 36], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 6, 2, 9], [0, 0, 0, 3, 0, 2, 3, 1, 2, 0], [16, 77, 96, 15, 36, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.math.subtract(grad, alpha), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.multiply(grad, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), grad), tf.math.pow(grad, tf.math.pow(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), grad))))))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.pow(beta, sigma)))), alpha), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 28, 15, 13, 5, 1, 0, 1, 1, 2, 1, 1, 1, 22, 12, 10, 6], "tree_depth": 22}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [2], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 8, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 11, 96, 78, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 4, 2, 2, 1, 2, 1, 1, 0, 17, 9, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.subtract(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 2, 0, 0], [39, 39, 87], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5, 3, 7, 5], [0, 2, 0, 3, 2, 1], [16, 16], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [6, 6, 5, 1, 3], [0, 4, 7, 4, 4], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 62, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 15, 9, 6, 2, 10, 5, 5, 1, 16, 8, 8, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(grad), beta))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.math.subtract(grad, tf.math.multiply(grad, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [5.729134185545728e+16, 2.789618229830484e+19, 8.521278869346225e+21, 5.323784526983293e+24, 2.255931137264624e+27, 9.41892995527689e+29], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [6.589294157863322e+17, 2.7849693627268517e+20, 1.1490285030169554e+23, 5.317153614241697e+25, 2.2195951244805076e+28, 9.535725185404225e+30], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]