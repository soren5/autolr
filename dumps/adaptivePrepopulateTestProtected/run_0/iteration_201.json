[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8731428384780884, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223541736602783, 1.8671752214431763, 1.3897285461425781, 1.0983924865722656, 0.9367942810058594, 0.8407150506973267, 0.7755712270736694, 0.7410555481910706, 0.6924746036529541, 0.6710801124572754, 0.648624837398529, 0.6187028288841248, 0.5957598686218262, 0.5844702124595642, 0.5733192563056946, 0.5437179803848267, 0.5330047011375427, 0.5283715128898621, 0.5123726725578308, 0.4942660331726074, 0.4895082414150238, 0.4812684953212738, 0.4721384346485138, 0.45936015248298645, 0.44758716225624084, 0.4394454061985016, 0.43536847829818726, 0.43145254254341125, 0.4262658953666687, 0.42045506834983826, 0.40511342883110046, 0.40778830647468567, 0.396096795797348, 0.3822885751724243, 0.38912254571914673, 0.373629093170166, 0.37496107816696167, 0.36961156129837036, 0.35992297530174255, 0.3615022301673889, 0.3587453067302704, 0.3533613681793213, 0.34309884905815125, 0.3430335819721222, 0.3387471139431, 0.32773640751838684, 0.3293650448322296, 0.32192426919937134, 0.31761860847473145, 0.31050926446914673, 0.3102298974990845, 0.3078692853450775, 0.29996588826179504, 0.29130876064300537, 0.2963009476661682, 0.2828941345214844, 0.2883729040622711, 0.27518293261528015], "accuracy": [0.2716946303844452, 0.49451854825019836, 0.561880886554718, 0.6131290197372437, 0.6672830581665039, 0.6976621150970459, 0.715889573097229, 0.7285695672035217, 0.748249888420105, 0.7586844563484192, 0.767401933670044, 0.7746664881706238, 0.7823272943496704, 0.7898560166358948, 0.7987055778503418, 0.8059701323509216, 0.8086118102073669, 0.8079513907432556, 0.8161405324935913, 0.8238013386726379, 0.8224804997444153, 0.8261788487434387, 0.8297450542449951, 0.837141752243042, 0.834632158279419, 0.844010055065155, 0.844010055065155, 0.8432175517082214, 0.8465195894241333, 0.8532558679580688, 0.8577466607093811, 0.8543124794960022, 0.8597279191017151, 0.863029956817627, 0.86118084192276, 0.8640866279602051, 0.8669924736022949, 0.8667283058166504, 0.8708229064941406, 0.8720116019248962, 0.8693699836730957, 0.872407853603363, 0.8735966086387634, 0.876370370388031, 0.8766345381736755, 0.8813894987106323, 0.8775591254234314, 0.8820499181747437, 0.8883898854255676, 0.8845595121383667, 0.8873332738876343, 0.8878615498542786, 0.8906353116035461, 0.895918607711792, 0.891559898853302, 0.8973715305328369, 0.8912957310676575, 0.89988112449646], "val_loss": [2.0409250259399414, 1.5097283124923706, 1.0324828624725342, 0.8171678185462952, 0.7354879379272461, 0.6775062680244446, 0.6315327286720276, 0.6123712062835693, 0.5753352046012878, 0.5591270923614502, 0.5413439273834229, 0.5293862223625183, 0.5085381865501404, 0.4983447194099426, 0.49161937832832336, 0.4772142469882965, 0.47873303294181824, 0.4672519862651825, 0.4608982801437378, 0.44816944003105164, 0.44305387139320374, 0.4355621635913849, 0.43224331736564636, 0.4221389591693878, 0.4185909032821655, 0.4182034134864807, 0.4109940230846405, 0.41261857748031616, 0.4026070237159729, 0.4020465612411499, 0.3971458673477173, 0.39765864610671997, 0.39119192957878113, 0.388559490442276, 0.3797556161880493, 0.3807999789714813, 0.37618497014045715, 0.3767562806606293, 0.37773600220680237, 0.3715262711048126, 0.370507150888443, 0.3672879934310913, 0.3683181703090668, 0.36675310134887695, 0.3624865710735321, 0.3647397756576538, 0.35857120156288147, 0.3587583899497986, 0.35750141739845276, 0.357636034488678, 0.3549600839614868, 0.3528730571269989, 0.3525960147380829, 0.3524559736251831, 0.3491736650466919, 0.34959009289741516, 0.34820112586021423, 0.345549613237381], "val_accuracy": [0.5230000019073486, 0.6660000085830688, 0.687666654586792, 0.7170000076293945, 0.734333336353302, 0.7516666650772095, 0.7663333415985107, 0.7773333191871643, 0.7889999747276306, 0.7950000166893005, 0.8106666803359985, 0.8040000200271606, 0.8216666579246521, 0.8286666870117188, 0.8220000267028809, 0.8323333263397217, 0.82833331823349, 0.8276666402816772, 0.8306666612625122, 0.8373333215713501, 0.8376666903495789, 0.8370000123977661, 0.8429999947547913, 0.8446666598320007, 0.8479999899864197, 0.8433333039283752, 0.8493333458900452, 0.843666672706604, 0.8489999771118164, 0.8539999723434448, 0.8519999980926514, 0.8513333201408386, 0.8510000109672546, 0.8513333201408386, 0.859000027179718, 0.8586666584014893, 0.8613333106040955, 0.8560000061988831, 0.8566666841506958, 0.8629999756813049, 0.8629999756813049, 0.8643333315849304, 0.8656666874885559, 0.8643333315849304, 0.8659999966621399, 0.8676666617393494, 0.8683333396911621, 0.8663333058357239, 0.8693333268165588, 0.8713333606719971, 0.8686666488647461, 0.8686666488647461, 0.8726666569709778, 0.8696666955947876, 0.871999979019165, 0.8666666746139526, 0.8723333477973938, 0.871666669845581]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0], [0, 9], [0], [0], [0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 7, 4, 2, 0], [0, 3, 7, 6], [0], [0, 1], [0], [1], [0]], "fitness": -0.834857165813446, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(sigma, grad)), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.29343843460083, 2.1919150352478027, 1.7728476524353027, 1.3406953811645508, 1.0771667957305908, 0.896116316318512, 0.8399276733398438, 0.814237117767334, 0.7621045708656311, 0.7438494563102722, 0.7202211022377014, 0.6827210783958435, 0.6515992879867554, 0.6229976415634155, 0.6144788265228271, 0.5860771536827087, 0.583262026309967, 0.5656017065048218, 0.5467774271965027, 0.5496254563331604, 0.5243784785270691, 0.5127783417701721, 0.5097487568855286, 0.49732863903045654, 0.48940885066986084, 0.4792681634426117, 0.47633078694343567, 0.46000978350639343, 0.44754698872566223, 0.4394178092479706, 0.4402815103530884, 0.431063175201416, 0.42334479093551636], "accuracy": [0.12521463632583618, 0.3206973969936371, 0.45132744312286377, 0.5404834151268005, 0.629507303237915, 0.6733588576316833, 0.694360077381134, 0.7067758440971375, 0.7055870890617371, 0.7169462442398071, 0.7292299270629883, 0.7427024245262146, 0.7552502751350403, 0.7607977986335754, 0.7697794437408447, 0.7757231593132019, 0.7779685854911804, 0.7886672616004944, 0.7946110367774963, 0.7864218950271606, 0.796328067779541, 0.8039889335632324, 0.8078193068504333, 0.81112140417099, 0.8119139075279236, 0.8168009519577026, 0.8202351331710815, 0.8333113193511963, 0.8347642421722412, 0.8337075710296631, 0.8370096683502197, 0.8342359066009521, 0.8360850811004639], "val_loss": [2.2470335960388184, 2.026580333709717, 1.1486217975616455, 0.9022475481033325, 0.7613322734832764, 0.7032831907272339, 0.666667640209198, 0.6354950070381165, 0.646775484085083, 0.6040219068527222, 0.5593029260635376, 0.5527822375297546, 0.5149104595184326, 0.5074578523635864, 0.5075352191925049, 0.48959341645240784, 0.481849730014801, 0.48300161957740784, 0.47520002722740173, 0.46414974331855774, 0.46084606647491455, 0.4530697166919708, 0.44795286655426025, 0.44305121898651123, 0.43313494324684143, 0.42625871300697327, 0.42324933409690857, 0.4204939007759094, 0.42434796690940857, 0.41800636053085327, 0.4263726472854614, 0.41683000326156616, 0.4043302536010742], "val_accuracy": [0.4113333225250244, 0.47600001096725464, 0.6423333287239075, 0.6840000152587891, 0.721666693687439, 0.7459999918937683, 0.7446666955947876, 0.7556666731834412, 0.7480000257492065, 0.7726666927337646, 0.7776666879653931, 0.7829999923706055, 0.8073333501815796, 0.7993333339691162, 0.800000011920929, 0.8073333501815796, 0.8096666932106018, 0.8166666626930237, 0.8180000185966492, 0.8166666626930237, 0.8296666741371155, 0.8296666741371155, 0.8256666660308838, 0.8333333134651184, 0.8433333039283752, 0.8463333249092102, 0.8479999899864197, 0.8519999980926514, 0.8429999947547913, 0.8460000157356262, 0.8486666679382324, 0.8500000238418579, 0.8503333330154419]}, "mapping_values": [1, 10, 5, 5, 3, 2, 2, 0, 1, 9, 5, 4, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 8], [0], [0], [1], [0], [2], [0]], "fitness": -0.8271428346633911, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.75238835811615, 1.000489354133606, 0.8205693364143372, 0.7138846516609192, 0.6931654214859009, 0.618717610836029, 0.5963215827941895, 0.5512269735336304, 0.5485183596611023, 0.5082318186759949, 0.5008737444877625, 0.48061317205429077, 0.493600994348526, 0.4885813593864441, 0.5194165706634521, 0.5112740993499756, 0.5365042686462402], "accuracy": [0.474970281124115, 0.6643772125244141, 0.7219653725624084, 0.7477215528488159, 0.7528728246688843, 0.7693831920623779, 0.787082314491272, 0.7998943328857422, 0.7932901978492737, 0.8168009519577026, 0.817989706993103, 0.83119797706604, 0.8227446675300598, 0.8207634687423706, 0.8253863453865051, 0.8230088353157043, 0.8087438941001892], "val_loss": [0.9438425898551941, 0.763738214969635, 0.681076169013977, 0.6444975733757019, 0.5846749544143677, 0.5744889378547668, 0.5775474309921265, 0.5663382411003113, 0.5160911679267883, 0.536757230758667, 0.517133891582489, 0.518240749835968, 0.5675894618034363, 0.5688541531562805, 0.5579320788383484, 0.6123819947242737, 0.5754932761192322], "val_accuracy": [0.6783333420753479, 0.7350000143051147, 0.762666642665863, 0.7866666913032532, 0.7896666526794434, 0.8103333115577698, 0.8086666464805603, 0.8006666898727417, 0.8240000009536743, 0.8339999914169312, 0.8303333520889282, 0.8360000252723694, 0.8246666789054871, 0.8276666402816772, 0.8346666693687439, 0.8183333277702332, 0.8336666822433472]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [6, 6, 6, 0, 3, 6], [0, 1, 0, 2, 1, 0], [39, 39, 98], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [1, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 1, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 3, 0, 3, 1, 2, 0], [16, 99, 96, 17, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 3, 2, 1, 1, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.divide_no_nan(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.pow(sigma, tf.math.subtract(sigma, tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), sigma))), alpha)), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.5748067561383047e+24, NaN, 2.3025851249694824, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [9, 2, 3, 9, 2, 5], [0, 2, 0, 3], [72, 16], [0, 1], [0], [4], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 9, 3, 3, 4, 1, 4, 1, 4, 2, 8], [0, 3, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 1, 1, 0, 1, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3033573627471924, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0], [6, 2, 3, 0, 3, 2, 5, 8, 8, 9], [0, 0, 0, 3, 0], [68, 99, 70, 4, 28], [0, 1], [8], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 4, 0, 0, 4], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 1, 6], [16, 99, 96, 22, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 15, 10, 5, 5, 2, 1, 1, 1, 27, 15, 12, 6], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.square(tf.math.sqrt(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.math.sqrt(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, alpha))))), beta)), tf.math.negative(tf.math.negative(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha)))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 0, 1, 0, 2], [39, 39, 78], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 8, 1, 1, 7, 6], [0, 2, 0, 3, 1], [0, 99], [0, 1], [0, 0, 7, 4], [0], [0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 0], [1, 6, 5, 1, 5, 5, 1, 7, 4, 7], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 11, 6, 5, 2, 2, 1, 1, 1, 22, 12, 10, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.math.square(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(alpha, tf.math.subtract(grad, grad)), tf.math.pow(alpha, tf.math.add(grad, grad)))), alpha), tf.math.sqrt(tf.math.negative(grad))), grad), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]