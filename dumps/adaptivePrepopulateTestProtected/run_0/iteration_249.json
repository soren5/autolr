[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 3, 2, 6, 0, 9, 4, 9], [0, 1, 0, 1], [0, 24, 75, 65], [0, 0, 1, 1], [0, 2], [0, 3], [0], [0, 1], [0], [1], [0]], "fitness": -0.8617143034934998, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), alpha), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2935290336608887, 2.190690279006958, 1.7589982748031616, 1.3603179454803467, 1.0276455879211426, 0.886254608631134, 0.8098798990249634, 0.7684715390205383, 0.7310836911201477, 0.7024978399276733, 0.6725183725357056, 0.6499027013778687, 0.6292409896850586, 0.6038153767585754, 0.5972585678100586, 0.5773612260818481, 0.5547509789466858, 0.5525545477867126, 0.5495787858963013, 0.5429064631462097, 0.5238143801689148, 0.5087498426437378, 0.5019531846046448, 0.49554190039634705, 0.4757915735244751, 0.4713398516178131, 0.4684244394302368, 0.45026904344558716, 0.4419719874858856, 0.43155309557914734, 0.4375751316547394, 0.4277462959289551, 0.4139164090156555, 0.4096370041370392, 0.40764176845550537, 0.39675986766815186, 0.3860894441604614, 0.3875986933708191, 0.3692684471607208, 0.3621346056461334, 0.3524687588214874, 0.3590846359729767, 0.34398171305656433, 0.34752464294433594, 0.3401845395565033, 0.3285652995109558, 0.33733800053596497, 0.32207250595092773, 0.3286387622356415, 0.32483309507369995, 0.31383001804351807, 0.30659598112106323], "accuracy": [0.1270637959241867, 0.3283582031726837, 0.44406285881996155, 0.5494650602340698, 0.6497160196304321, 0.681547999382019, 0.7016246318817139, 0.7226257920265198, 0.713908314704895, 0.7300224304199219, 0.7512878179550171, 0.750759482383728, 0.7617223858833313, 0.7781006693840027, 0.772288978099823, 0.7837802171707153, 0.7832518815994263, 0.7882710099220276, 0.7895918488502502, 0.7884030938148499, 0.7971205711364746, 0.8038568496704102, 0.8072909712791443, 0.805177628993988, 0.8206313848495483, 0.8211596608161926, 0.819442629814148, 0.8253863453865051, 0.8274996876716614, 0.8300092220306396, 0.8341038227081299, 0.8385946154594421, 0.8462554216384888, 0.8441421389579773, 0.8473120927810669, 0.8545766472816467, 0.8524633646011353, 0.8562937378883362, 0.8643507957458496, 0.8610487580299377, 0.863558292388916, 0.8642187118530273, 0.8676528930664062, 0.8650112152099609, 0.868049144744873, 0.8742570281028748, 0.8710870146751404, 0.8786157965660095, 0.8732003569602966, 0.8742570281028748, 0.8757099509239197, 0.8815215826034546], "val_loss": [2.244563102722168, 2.016427755355835, 1.1316584348678589, 0.9022191762924194, 0.7623896598815918, 0.6983956694602966, 0.6844088435173035, 0.668188750743866, 0.6389050483703613, 0.6259195804595947, 0.5904059410095215, 0.5764806270599365, 0.5599710941314697, 0.5603095889091492, 0.5439951419830322, 0.532021701335907, 0.535383939743042, 0.5411539077758789, 0.5194016695022583, 0.5132219195365906, 0.5237649083137512, 0.5254582762718201, 0.5145866870880127, 0.49845215678215027, 0.48802876472473145, 0.483051598072052, 0.47708043456077576, 0.48353254795074463, 0.4780586063861847, 0.46641138195991516, 0.4615474343299866, 0.46653857827186584, 0.4540982246398926, 0.44682615995407104, 0.4447927176952362, 0.447861909866333, 0.42860063910484314, 0.42371007800102234, 0.4161086082458496, 0.4184100031852722, 0.42125675082206726, 0.4195229113101959, 0.4209323823451996, 0.4143522083759308, 0.4225161075592041, 0.41761457920074463, 0.41307660937309265, 0.42842766642570496, 0.44011563062667847, 0.4346427321434021, 0.43153706192970276, 0.436472624540329], "val_accuracy": [0.44600000977516174, 0.4636666774749756, 0.656000018119812, 0.687666654586792, 0.7253333330154419, 0.7366666793823242, 0.750333309173584, 0.7513333559036255, 0.7643333077430725, 0.7680000066757202, 0.7806666493415833, 0.7836666703224182, 0.7853333353996277, 0.7919999957084656, 0.7879999876022339, 0.7896666526794434, 0.7953333258628845, 0.7929999828338623, 0.79666668176651, 0.8103333115577698, 0.8046666383743286, 0.8100000023841858, 0.812666654586792, 0.8183333277702332, 0.8206666707992554, 0.8233333230018616, 0.8276666402816772, 0.8263333439826965, 0.8270000219345093, 0.8373333215713501, 0.8386666774749756, 0.8429999947547913, 0.8443333506584167, 0.8460000157356262, 0.8489999771118164, 0.8513333201408386, 0.8579999804496765, 0.8573333621025085, 0.8600000143051147, 0.8616666793823242, 0.8583333492279053, 0.862333357334137, 0.859666645526886, 0.8666666746139526, 0.8636666536331177, 0.8650000095367432, 0.8726666569709778, 0.8679999709129333, 0.8693333268165588, 0.8673333525657654, 0.8659999966621399, 0.8666666746139526]}, "mapping_values": [1, 10, 5, 5, 3, 13, 9, 4, 4, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 16}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8571428656578064, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222693681716919, 1.8672960996627808, 1.4026683568954468, 1.1027636528015137, 0.9393652081489563, 0.84465491771698, 0.776680588722229, 0.7215161323547363, 0.6841306686401367, 0.6673709154129028, 0.6377675533294678, 0.6132128834724426, 0.5871459245681763, 0.5730303525924683, 0.562474250793457, 0.54359370470047, 0.5402593016624451, 0.5177448987960815, 0.500462532043457, 0.4950125217437744, 0.4836922585964203, 0.4836084246635437, 0.4674180746078491, 0.45939770340919495, 0.4435899257659912, 0.44314080476760864, 0.4306994080543518, 0.42499905824661255, 0.4148838520050049, 0.4129013121128082, 0.4029194712638855, 0.4018166959285736, 0.3985321521759033, 0.3875892162322998, 0.3855815529823303, 0.37794017791748047, 0.3724566400051117, 0.35980314016342163, 0.36109012365341187, 0.35837215185165405, 0.34806230664253235, 0.33849015831947327, 0.3357526659965515, 0.3310416340827942, 0.32890939712524414, 0.32319945096969604, 0.3169995844364166, 0.30956390500068665, 0.30694878101348877, 0.3028899133205414, 0.2968612313270569, 0.29068562388420105, 0.28818896412849426, 0.2822524309158325, 0.28567183017730713, 0.28140929341316223, 0.2710075080394745, 0.2740980088710785, 0.2644203007221222, 0.26495054364204407, 0.259990930557251, 0.2525690197944641, 0.2546274960041046, 0.25094297528266907, 0.24808713793754578, 0.2421119511127472], "accuracy": [0.2744683623313904, 0.4768194556236267, 0.5686171054840088, 0.6151102781295776, 0.6609430909156799, 0.6980583667755127, 0.7187954187393188, 0.7429665923118591, 0.7516840696334839, 0.7584202885627747, 0.7663452625274658, 0.7810064554214478, 0.7895918488502502, 0.7952714562416077, 0.7977809906005859, 0.8025360107421875, 0.7994980812072754, 0.8101968169212341, 0.8185180425643921, 0.8204993009567261, 0.8238013386726379, 0.8235371708869934, 0.8338396549224854, 0.8337075710296631, 0.8355567455291748, 0.8441421389579773, 0.8486329317092896, 0.8450667262077332, 0.8496896028518677, 0.850350022315979, 0.8560295701026917, 0.8577466607093811, 0.8560295701026917, 0.8598600029945374, 0.8598600029945374, 0.8647470474243164, 0.869502067565918, 0.8712190985679626, 0.8708229064941406, 0.8722757697105408, 0.8729361891746521, 0.878879964351654, 0.8813894987106323, 0.8804649114608765, 0.8808611631393433, 0.885219931602478, 0.8864086866378784, 0.889578640460968, 0.8912957310676575, 0.8931449055671692, 0.8916919827461243, 0.8972394466400146, 0.8963148593902588, 0.8992207050323486, 0.9005415439605713, 0.89988112449646, 0.8980319499969482, 0.898428201675415, 0.9025228023529053, 0.9015982151031494, 0.9033153057098389, 0.9072777628898621, 0.9103156924247742, 0.910711944103241, 0.9133535623550415, 0.9134856462478638], "val_loss": [2.041457176208496, 1.5154527425765991, 1.0356016159057617, 0.8226534724235535, 0.7343849539756775, 0.6761232614517212, 0.629747748374939, 0.5901955962181091, 0.5693519115447998, 0.5457484722137451, 0.5268540978431702, 0.5094016790390015, 0.4937507212162018, 0.48436930775642395, 0.47312378883361816, 0.46200937032699585, 0.4569780230522156, 0.4454684555530548, 0.4370064437389374, 0.43254756927490234, 0.42429402470588684, 0.4206920564174652, 0.4222058951854706, 0.40839722752571106, 0.4084749221801758, 0.4029127061367035, 0.39455071091651917, 0.388746976852417, 0.38648340106010437, 0.3840734362602234, 0.384150892496109, 0.37577271461486816, 0.3715563416481018, 0.370360404253006, 0.3713768720626831, 0.36550024151802063, 0.3620262145996094, 0.36719292402267456, 0.36061397194862366, 0.35909220576286316, 0.3565174639225006, 0.35976630449295044, 0.3594251275062561, 0.35096845030784607, 0.35265493392944336, 0.3528653681278229, 0.3461955189704895, 0.3470211625099182, 0.34674161672592163, 0.3444015681743622, 0.346264123916626, 0.34271475672721863, 0.3443373739719391, 0.3424343168735504, 0.34151285886764526, 0.34468087553977966, 0.34072792530059814, 0.3389643430709839, 0.3400202691555023, 0.3368856906890869, 0.33560383319854736, 0.33661890029907227, 0.3367856442928314, 0.3371053636074066, 0.3375885486602783, 0.33712270855903625], "val_accuracy": [0.5306666493415833, 0.6676666736602783, 0.6840000152587891, 0.7099999785423279, 0.7406666874885559, 0.7620000243186951, 0.7713333368301392, 0.7823333144187927, 0.7940000295639038, 0.8003333210945129, 0.8056666851043701, 0.8083333373069763, 0.8153333067893982, 0.8289999961853027, 0.8220000267028809, 0.8256666660308838, 0.8353333473205566, 0.8393333554267883, 0.8456666469573975, 0.8489999771118164, 0.843666672706604, 0.8426666855812073, 0.8420000076293945, 0.8550000190734863, 0.8536666631698608, 0.8523333072662354, 0.8569999933242798, 0.8583333492279053, 0.8616666793823242, 0.8600000143051147, 0.8646666407585144, 0.8653333187103271, 0.8659999966621399, 0.8730000257492065, 0.8650000095367432, 0.8676666617393494, 0.8693333268165588, 0.8736666440963745, 0.8686666488647461, 0.8700000047683716, 0.8740000128746033, 0.8696666955947876, 0.8683333396911621, 0.8759999871253967, 0.8730000257492065, 0.8740000128746033, 0.875, 0.878000020980835, 0.878333330154419, 0.8730000257492065, 0.8799999952316284, 0.8769999742507935, 0.8790000081062317, 0.8773333430290222, 0.8759999871253967, 0.8806666731834412, 0.8809999823570251, 0.8820000290870667, 0.8833333253860474, 0.8870000243186951, 0.8889999985694885, 0.8843333125114441, 0.8809999823570251, 0.8849999904632568, 0.8843333125114441, 0.8846666812896729]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 1, 1], [0, 1, 4], [0, 2, 6], [0], [1], [0], [2], [0]], "fitness": -0.8394285440444946, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6294876337051392, 0.8796277046203613, 0.7265148758888245, 0.63466477394104, 0.5681440830230713, 0.5282543897628784, 0.520781397819519, 0.48999035358428955, 0.5135250091552734, 0.5060670375823975, 0.4846114218235016, 0.5384864211082458, 0.5018770694732666, 0.47553980350494385, 0.47801464796066284, 0.4645702540874481, 0.4906904399394989, 0.5099843740463257, 0.5678757429122925, 0.5424773693084717], "accuracy": [0.45964866876602173, 0.6857746839523315, 0.7347774505615234, 0.7675340175628662, 0.7858935594558716, 0.806630551815033, 0.8021397590637207, 0.8241975903511047, 0.8128384351730347, 0.8256505131721497, 0.821820080280304, 0.8177255392074585, 0.8247259259223938, 0.8327829837799072, 0.8329150676727295, 0.8409721255302429, 0.833179235458374, 0.8338396549224854, 0.8281601071357727, 0.8269713521003723], "val_loss": [0.8895756602287292, 0.657491147518158, 0.5654477477073669, 0.5000548958778381, 0.47899866104125977, 0.47386449575424194, 0.44900381565093994, 0.4678861200809479, 0.48364177346229553, 0.44405850768089294, 0.4940633475780487, 0.49385473132133484, 0.49086499214172363, 0.5088722109794617, 0.5625205636024475, 0.5141130089759827, 0.6356084942817688, 0.6169463992118835, 0.5987167954444885, 0.6702592968940735], "val_accuracy": [0.6663333177566528, 0.7643333077430725, 0.7933333516120911, 0.8153333067893982, 0.8266666531562805, 0.8336666822433472, 0.8339999914169312, 0.8306666612625122, 0.8316666483879089, 0.8433333039283752, 0.8366666436195374, 0.8370000123977661, 0.8360000252723694, 0.8346666693687439, 0.8519999980926514, 0.8339999914169312, 0.8476666808128357, 0.8393333554267883, 0.8393333554267883, 0.8346666693687439]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 3, 3, 6, 3], [0, 0, 2, 0, 2], [83, 99, 27], [0, 1, 1, 1], [0, 7], [0, 4], [16, 16], [0, 1], [0], [5], [99], [0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [59, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 0, 5, 2, 3, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3030340671539307, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 1, 3, 1, 3, 9], [0, 1, 0, 2], [39, 39, 41], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 2, 2], [0, 61], [0, 1], [0], [0], [77], [0, 1], [0], [3, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 3, 10, 6, 4, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(beta, tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [45061672960.0, 6820293246976.0, 116630977773568.0, 829126323732480.0, 3610923155587072.0, 1.1949853147922432e+16], "accuracy": [0.10447761416435242, 0.10091137140989304, 0.1018359512090683, 0.09192973375320435, 0.09774138033390045, 0.09840179979801178], "val_loss": [474464321536.0, 25579531272192.0, 274543922905088.0, 1496821335588864.0, 5606220811468800.0, 1.6532726060417024e+16], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 1, 3, 1, 3, 6, 3, 6, 5, 2, 9, 7, 1, 6, 3, 3, 1, 3, 8, 4, 9, 3, 1, 3, 4, 0, 1, 3], [0, 0, 1, 0, 2, 3, 3, 0, 0, 1, 0, 1, 2, 2, 0, 2, 0, 2, 1, 3, 0], [39, 39, 70, 13, 32, 1, 63, 1, 75, 82], [0, 0, 1, 0, 1], [0, 7, 0], [0, 2, 0, 3], [0], [0, 1], [0], [4], [99], [0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 5, 3, 2, 1, 2, 1, 1, 0, 3, 1, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303675413131714, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09655263274908066, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 1], [16, 96], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 5, 4, 2, 8, 3, 3, 7, 6, 2, 5, 6, 0, 3], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 1, 0, 5, 2, 3, 7], [16, 99, 96, 86, 61, 1, 64]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 7, 4, 3, 2, 2, 1, 1, 1, 36, 20, 16, 7], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(sigma, tf.math.add(tf.math.sqrt(tf.math.multiply(alpha, beta)), tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(beta, tf.math.negative(tf.math.multiply(sigma, grad)))))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]