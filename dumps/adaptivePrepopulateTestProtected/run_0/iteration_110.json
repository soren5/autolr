[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8679999709129333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2211825847625732, 1.8604581356048584, 1.393174648284912, 1.0871886014938354, 0.9303480386734009, 0.8445481657981873, 0.7771233916282654, 0.7222239971160889, 0.6831190586090088, 0.6605416536331177, 0.6285610198974609, 0.6132358312606812, 0.5848349332809448, 0.5882817506790161, 0.555382251739502, 0.5393615961074829, 0.527809739112854, 0.5251901149749756, 0.5087453722953796, 0.4942251741886139, 0.48496848344802856, 0.4734266400337219, 0.46821391582489014, 0.45894932746887207, 0.44852277636528015, 0.4367027282714844, 0.43095025420188904, 0.43140456080436707, 0.41967564821243286, 0.4175245761871338, 0.4082500636577606, 0.4064182937145233, 0.39539000391960144, 0.39116597175598145, 0.383004367351532, 0.3728223741054535, 0.37860947847366333, 0.3702731728553772, 0.36855316162109375, 0.3601948022842407, 0.3539377450942993, 0.3466273844242096, 0.3478606045246124, 0.34430426359176636, 0.33669617772102356, 0.3301999866962433, 0.33103153109550476, 0.3274514675140381], "accuracy": [0.2759212851524353, 0.49253731966018677, 0.5626733303070068, 0.6234315037727356, 0.6725663542747498, 0.698190450668335, 0.7207766771316528, 0.7380794882774353, 0.750231146812439, 0.7581561207771301, 0.7718927264213562, 0.7716285586357117, 0.7889314293861389, 0.7821952104568481, 0.7980451583862305, 0.8033285140991211, 0.8125742673873901, 0.8107251524925232, 0.8178576231002808, 0.824329674243927, 0.8256505131721497, 0.8317263126373291, 0.8335754871368408, 0.8355567455291748, 0.8421608805656433, 0.8437458872795105, 0.8457271456718445, 0.8470479249954224, 0.8502179384231567, 0.8510104417800903, 0.8540483713150024, 0.854708731174469, 0.8607845902442932, 0.8615770936012268, 0.8636903762817383, 0.8634262084960938, 0.8632941246032715, 0.867520809173584, 0.868049144744873, 0.8709549307823181, 0.8750495314598083, 0.8751816153526306, 0.8753136992454529, 0.8786157965660095, 0.8794082403182983, 0.8824461698532104, 0.8782195448875427, 0.8864086866378784], "val_loss": [2.0353822708129883, 1.5101803541183472, 1.0398035049438477, 0.8322376012802124, 0.7451634407043457, 0.6950525641441345, 0.6466859579086304, 0.6108466386795044, 0.578757107257843, 0.561204731464386, 0.5413206219673157, 0.5245513916015625, 0.5179893374443054, 0.5004017949104309, 0.49022457003593445, 0.47671565413475037, 0.46313199400901794, 0.45670369267463684, 0.4494636356830597, 0.44114285707473755, 0.4368916153907776, 0.4312126338481903, 0.4261782169342041, 0.4173763692378998, 0.41388821601867676, 0.4081076383590698, 0.4088606834411621, 0.4066935181617737, 0.3994791805744171, 0.39589938521385193, 0.3964574337005615, 0.38921257853507996, 0.3936708867549896, 0.38638460636138916, 0.3802163004875183, 0.3829593062400818, 0.379957914352417, 0.3773668706417084, 0.37628141045570374, 0.372901976108551, 0.370339035987854, 0.37293869256973267, 0.368154376745224, 0.3658478558063507, 0.35868990421295166, 0.3650114834308624, 0.3642103374004364, 0.3565940260887146], "val_accuracy": [0.5419999957084656, 0.6676666736602783, 0.6913333535194397, 0.706333339214325, 0.7300000190734863, 0.7476666569709778, 0.765999972820282, 0.7720000147819519, 0.7856666445732117, 0.796999990940094, 0.8019999861717224, 0.8103333115577698, 0.8146666884422302, 0.8173333406448364, 0.8226666450500488, 0.8363333344459534, 0.843666672706604, 0.8446666598320007, 0.843666672706604, 0.8503333330154419, 0.8519999980926514, 0.8500000238418579, 0.8560000061988831, 0.8529999852180481, 0.8546666502952576, 0.8583333492279053, 0.8600000143051147, 0.859000027179718, 0.8566666841506958, 0.8613333106040955, 0.8610000014305115, 0.8640000224113464, 0.8619999885559082, 0.8659999966621399, 0.8666666746139526, 0.8666666746139526, 0.8643333315849304, 0.8659999966621399, 0.8700000047683716, 0.8696666955947876, 0.8696666955947876, 0.8650000095367432, 0.8743333220481873, 0.8696666955947876, 0.8736666440963745, 0.8686666488647461, 0.8650000095367432, 0.871999979019165]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 3], [0, 2, 3, 0], [0, 32], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8557142615318298, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), tf.math.multiply(grad, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.293220043182373, 2.1891798973083496, 1.7706902027130127, 1.335752010345459, 1.0572595596313477, 0.9052205681800842, 0.8229916095733643, 0.8143067359924316, 0.7545071840286255, 0.7286034822463989, 0.6908935308456421, 0.6787465214729309, 0.6321406960487366, 0.6102505922317505, 0.5893343091011047, 0.5859061479568481, 0.5607017278671265, 0.5588217973709106, 0.5436108708381653, 0.5305749177932739, 0.5074354410171509, 0.5080116391181946, 0.4950665831565857, 0.4852970540523529, 0.48128238320350647, 0.4675009548664093, 0.46009963750839233, 0.45446518063545227, 0.45329931378364563, 0.4417109489440918, 0.4237918555736542, 0.4313553273677826, 0.42362335324287415, 0.4032845199108124, 0.3991444408893585, 0.3942677974700928, 0.38425374031066895, 0.37463295459747314, 0.36549344658851624, 0.36810579895973206, 0.36567261815071106, 0.3563832640647888, 0.35584157705307007, 0.3481922745704651, 0.3425309956073761, 0.3340272903442383, 0.33263862133026123, 0.3477820158004761, 0.3348371684551239], "accuracy": [0.12534672021865845, 0.3331131935119629, 0.44168537855148315, 0.5481442213058472, 0.6453573107719421, 0.672170102596283, 0.6997754573822021, 0.6954167485237122, 0.7124554514884949, 0.7169462442398071, 0.7391361594200134, 0.7360982894897461, 0.7609298825263977, 0.7660810947418213, 0.7701756954193115, 0.7733456492424011, 0.7795535326004028, 0.7795535326004028, 0.791969358921051, 0.7913089394569397, 0.8009510040283203, 0.7980451583862305, 0.807158887386322, 0.8124422430992126, 0.8148196935653687, 0.8178576231002808, 0.8260467648506165, 0.8187822103500366, 0.8257825970649719, 0.8310658931732178, 0.8341038227081299, 0.8297450542449951, 0.8360850811004639, 0.8455950617790222, 0.843481719493866, 0.8430854678153992, 0.852331280708313, 0.8539162874221802, 0.8557654023170471, 0.8576145768165588, 0.8585391640663147, 0.8617091774940491, 0.8615770936012268, 0.8664641380310059, 0.8643507957458496, 0.8691058158874512, 0.872407853603363, 0.8698983192443848, 0.867520809173584], "val_loss": [2.247495651245117, 2.0256009101867676, 1.1607544422149658, 0.9453111290931702, 0.7658814191818237, 0.7288873791694641, 0.6890676021575928, 0.6761707067489624, 0.6621100902557373, 0.6361830830574036, 0.6029614210128784, 0.5888652801513672, 0.5648104548454285, 0.5437725186347961, 0.538518488407135, 0.5207206010818481, 0.5077946782112122, 0.5078266859054565, 0.5038899183273315, 0.4946427345275879, 0.4880857765674591, 0.48525768518447876, 0.48645320534706116, 0.47364574670791626, 0.47295817732810974, 0.4683692157268524, 0.45767754316329956, 0.4575691819190979, 0.45598986744880676, 0.455107182264328, 0.4465656876564026, 0.44659513235092163, 0.4303865432739258, 0.42463353276252747, 0.42322346568107605, 0.4266730844974518, 0.42337048053741455, 0.42310547828674316, 0.42953717708587646, 0.42874404788017273, 0.4253821074962616, 0.4122259020805359, 0.41511669754981995, 0.41786614060401917, 0.4229188561439514, 0.41584131121635437, 0.4258915185928345, 0.42122986912727356, 0.42220208048820496], "val_accuracy": [0.4113333225250244, 0.4463333189487457, 0.6433333158493042, 0.6763333082199097, 0.7193333506584167, 0.721666693687439, 0.7403333187103271, 0.7369999885559082, 0.7423333525657654, 0.762666642665863, 0.7599999904632568, 0.7743333578109741, 0.7770000100135803, 0.7846666574478149, 0.793666660785675, 0.8033333420753479, 0.8066666722297668, 0.8069999814033508, 0.8166666626930237, 0.8199999928474426, 0.8086666464805603, 0.8240000009536743, 0.828000009059906, 0.8259999752044678, 0.8266666531562805, 0.8296666741371155, 0.8343333601951599, 0.8339999914169312, 0.8363333344459534, 0.8346666693687439, 0.8363333344459534, 0.8460000157356262, 0.8483333587646484, 0.8463333249092102, 0.8526666760444641, 0.8556666374206543, 0.8529999852180481, 0.8550000190734863, 0.856333315372467, 0.859000027179718, 0.859333336353302, 0.8606666922569275, 0.8619999885559082, 0.8636666536331177, 0.8586666584014893, 0.8610000014305115, 0.8616666793823242, 0.8533333539962769, 0.8586666584014893]}, "mapping_values": [1, 10, 5, 5, 3, 8, 4, 4, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 4, 1, 5, 0, 0], [0, 7, 5], [0], [1], [0], [2], [0]], "fitness": -0.8325714468955994, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.subtract(tf.math.square(tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))), grad), grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6140210628509521, 0.8646361827850342, 0.6733066439628601, 0.6042712330818176, 0.5615194439888, 0.5205307602882385, 0.4844115674495697, 0.4907420575618744, 0.48993295431137085, 0.5099186897277832, 0.45982593297958374, 0.4742810130119324, 0.46443185210227966, 0.46544188261032104, 0.4705492854118347, 0.48634159564971924, 0.46491149067878723, 0.463689386844635, 0.4594002962112427, 0.4688706398010254], "accuracy": [0.4776119291782379, 0.6976621150970459, 0.7494386434555054, 0.7718927264213562, 0.789988100528717, 0.8063663840293884, 0.8145555257797241, 0.8177255392074585, 0.8245938420295715, 0.8206313848495483, 0.828820526599884, 0.8389908671379089, 0.8298771381378174, 0.832650899887085, 0.8356888294219971, 0.8277638554573059, 0.8391229510307312, 0.8391229510307312, 0.8327829837799072, 0.8325188159942627], "val_loss": [0.9049285650253296, 0.6376339197158813, 0.5813986659049988, 0.5229020714759827, 0.4984663128852844, 0.4730778932571411, 0.4858691692352295, 0.511143684387207, 0.5166518688201904, 0.5363966226577759, 0.5376359820365906, 0.49767953157424927, 0.5343305468559265, 0.5656858086585999, 0.5034428238868713, 0.48965227603912354, 0.5250064730644226, 0.5372000336647034, 0.5232020020484924, 0.5210354924201965], "val_accuracy": [0.6700000166893005, 0.768666684627533, 0.7823333144187927, 0.8033333420753479, 0.8169999718666077, 0.824999988079071, 0.8273333311080933, 0.8309999704360962, 0.828000009059906, 0.8213333487510681, 0.8343333601951599, 0.8343333601951599, 0.8333333134651184, 0.8379999995231628, 0.8483333587646484, 0.843666672706604, 0.8373333215713501, 0.846666693687439, 0.8396666646003723, 0.8246666789054871]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 10, 7, 3, 1, 1, 0, 1, 0], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 6], [0, 2, 0, 3, 4], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 6, 6, 9, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [5, 99, 96, 17, 61, 1, 39, 35]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 11, 6, 5, 2, 2, 1, 1, 1, 25, 15, 10, 8], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), tf.math.add(tf.math.sqrt(alpha), tf.math.divide_no_nan(beta, tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [8, 2, 3, 0, 9], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 9], [0, 0, 0, 3, 0, 0, 1, 3, 2, 2], [16, 99, 96, 89, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 10, 6, 4, 2, 2, 1, 1, 1, 20, 11, 9, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), alpha)))), sigma), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2500743936.0, 2879914240.0, 2881435136.0, 2892405248.0, 2872035328.0, 2908689664.0], "accuracy": [0.10210011899471283, 0.09642054885625839, 0.09734513610601425, 0.09628847241401672, 0.10117553919553757, 0.09734513610601425], "val_loss": [2203988736.0, 2203987456.0, 2203987200.0, 2203987712.0, 2203988736.0, 2203986432.0], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [9, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 4, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 3, 6, 3, 1, 4, 8, 4, 2, 8], [1, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 60], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 2, 1, 1, 6, 3, 8, 2, 9, 6, 1], [0, 2, 0, 3, 2, 3, 0, 5], [16, 16, 42, 9], [0, 1], [0], [0], [0], [1], [0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0]], "fitness": -0.09142857044935226, "mapping_values": [1, 6, 3, 3, 2, 19, 11, 8, 4, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.subtract(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(beta, grad), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3095645904541016, 2.311028480529785, 2.311077117919922, 2.3103551864624023, 2.3089661598205566, 2.310382604598999], "accuracy": [0.09259014576673508, 0.09206181764602661, 0.08466517180204391, 0.09245806187391281, 0.09034473448991776, 0.0878351628780365], "val_loss": [2.3096892833709717, 2.3096892833709717, 2.3096892833709717, 2.3096892833709717, 2.3096892833709717, 2.3096892833709717], "val_accuracy": [0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024, 0.09066666662693024]}}]