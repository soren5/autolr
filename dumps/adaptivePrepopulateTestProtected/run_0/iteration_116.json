[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8568571209907532, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2212541103363037, 1.8625150918960571, 1.3697365522384644, 1.0742450952529907, 0.9196241497993469, 0.8309928178787231, 0.7692306637763977, 0.7268848419189453, 0.6880268454551697, 0.6582949757575989, 0.6307501196861267, 0.6223785281181335, 0.5944339036941528, 0.5828914046287537, 0.5637454986572266, 0.5468243956565857, 0.5419167876243591, 0.5357835292816162, 0.5220454931259155, 0.5073255896568298, 0.49258825182914734, 0.4790169596672058, 0.4720252752304077, 0.47161534428596497, 0.46154889464378357, 0.45134595036506653, 0.4377078413963318, 0.43168333172798157, 0.42567747831344604, 0.4223014712333679, 0.41022196412086487, 0.4062987267971039, 0.3988223373889923, 0.3867376148700714, 0.38722479343414307, 0.3833034932613373, 0.37236493825912476, 0.3759286403656006, 0.3651328980922699, 0.35569092631340027, 0.3552144169807434, 0.35026422142982483, 0.34441375732421875, 0.3373081684112549], "accuracy": [0.27182671427726746, 0.4928014874458313, 0.5797120332717896, 0.627129852771759, 0.6699247360229492, 0.703209638595581, 0.722229540348053, 0.7325320243835449, 0.7477215528488159, 0.7614582180976868, 0.7683265209197998, 0.7732135653495789, 0.7841764688491821, 0.7841764688491821, 0.7981772422790527, 0.8026680946350098, 0.804649293422699, 0.8158763647079468, 0.8182538747787476, 0.819442629814148, 0.8257825970649719, 0.8293488025665283, 0.8313300609588623, 0.8330471515655518, 0.8372738361358643, 0.8392550349235535, 0.8438779711723328, 0.8445383906364441, 0.8475762605667114, 0.8529917001724243, 0.8537842035293579, 0.8533879518508911, 0.8576145768165588, 0.8593316674232483, 0.8622375130653381, 0.8651432991027832, 0.868049144744873, 0.8651432991027832, 0.8696341514587402, 0.8714832663536072, 0.8681812286376953, 0.8750495314598083, 0.873860776424408, 0.8766345381736755], "val_loss": [2.0343785285949707, 1.5053455829620361, 1.0322288274765015, 0.830824613571167, 0.7404075264930725, 0.6807092428207397, 0.640128493309021, 0.600758969783783, 0.5747918486595154, 0.5516906976699829, 0.5356430411338806, 0.5200828313827515, 0.5023499727249146, 0.49255606532096863, 0.483440637588501, 0.46696439385414124, 0.46246516704559326, 0.450519859790802, 0.4418826401233673, 0.4358232915401459, 0.42464762926101685, 0.41884440183639526, 0.4188942611217499, 0.4079272150993347, 0.403786301612854, 0.3946255147457123, 0.3983900547027588, 0.3851760923862457, 0.3825337588787079, 0.3780336081981659, 0.37403398752212524, 0.37676066160202026, 0.3668416738510132, 0.36422231793403625, 0.3604836165904999, 0.35603711009025574, 0.3569950461387634, 0.3523920178413391, 0.34777987003326416, 0.3478715419769287, 0.34780585765838623, 0.34385937452316284, 0.3433392345905304, 0.3395421504974365], "val_accuracy": [0.5506666898727417, 0.6620000004768372, 0.6903333067893982, 0.7149999737739563, 0.746999979019165, 0.7603333592414856, 0.7663333415985107, 0.7839999794960022, 0.7876666784286499, 0.79666668176651, 0.8053333163261414, 0.8069999814033508, 0.8193333148956299, 0.8240000009536743, 0.8243333101272583, 0.8323333263397217, 0.831333339214325, 0.8366666436195374, 0.8423333168029785, 0.8420000076293945, 0.8456666469573975, 0.8479999899864197, 0.8483333587646484, 0.8500000238418579, 0.8513333201408386, 0.8603333234786987, 0.8500000238418579, 0.8646666407585144, 0.8573333621025085, 0.8603333234786987, 0.859333336353302, 0.8550000190734863, 0.8693333268165588, 0.8690000176429749, 0.8643333315849304, 0.8706666827201843, 0.8673333525657654, 0.8706666827201843, 0.8733333349227905, 0.871999979019165, 0.8709999918937683, 0.8693333268165588, 0.8693333268165588, 0.8686666488647461]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0], [0, 9], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8411428332328796, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292598247528076, 2.187727451324463, 1.7671011686325073, 1.3454340696334839, 1.0773907899856567, 0.9277232885360718, 0.8546350598335266, 0.8244504332542419, 0.7749937176704407, 0.739579975605011, 0.7148839235305786, 0.6796116828918457, 0.6441579461097717, 0.6176618933677673, 0.5994229912757874, 0.591620683670044, 0.5773797035217285, 0.5605083107948303, 0.5529199838638306, 0.5409498810768127, 0.5326447486877441, 0.5262863636016846, 0.5116795897483826, 0.49507206678390503, 0.49200543761253357, 0.4862252175807953, 0.47237804532051086, 0.4650070071220398, 0.4574976861476898, 0.43840762972831726, 0.43504247069358826, 0.4305950403213501, 0.41111528873443604, 0.4085001051425934, 0.40066447854042053, 0.40182778239250183, 0.3968762457370758, 0.38451048731803894, 0.3811670243740082, 0.37446627020835876, 0.3697012662887573, 0.3641032874584198, 0.3596879243850708, 0.35762858390808105, 0.35782667994499207], "accuracy": [0.1282525360584259, 0.3249240517616272, 0.43785497546195984, 0.548540472984314, 0.6342623233795166, 0.6598864197731018, 0.687887966632843, 0.700171709060669, 0.7037379741668701, 0.7215691208839417, 0.7269845604896545, 0.7408532500267029, 0.7543256878852844, 0.7668735980987549, 0.7643640041351318, 0.7751948237419128, 0.7798177003860474, 0.7815347909927368, 0.7903843522071838, 0.7975168228149414, 0.8012151718139648, 0.8001585006713867, 0.8063663840293884, 0.8113855719566345, 0.809140145778656, 0.8117818236351013, 0.8191784620285034, 0.8253863453865051, 0.8251221776008606, 0.8289526104927063, 0.8318583965301514, 0.8374059200286865, 0.8444063067436218, 0.8459912538528442, 0.8411042094230652, 0.8441421389579773, 0.8518029451370239, 0.8551049828529358, 0.8557654023170471, 0.8556333184242249, 0.8552370667457581, 0.8622375130653381, 0.863558292388916, 0.8636903762817383, 0.8665962219238281], "val_loss": [2.245720624923706, 2.0109612941741943, 1.1249263286590576, 0.8870898485183716, 0.7591018080711365, 0.7297289967536926, 0.68900066614151, 0.6580471396446228, 0.6371278166770935, 0.6078882217407227, 0.5806085467338562, 0.5547199845314026, 0.5425792336463928, 0.528447687625885, 0.5130226016044617, 0.5009223222732544, 0.4950500428676605, 0.4903910458087921, 0.48442715406417847, 0.4880770742893219, 0.4701760709285736, 0.46368762850761414, 0.46124526858329773, 0.45427021384239197, 0.44481998682022095, 0.4350467026233673, 0.4451127052307129, 0.439705491065979, 0.43008318543434143, 0.4224090278148651, 0.4286482036113739, 0.42015016078948975, 0.42279306054115295, 0.4107896387577057, 0.419175386428833, 0.4115413427352905, 0.4065228998661041, 0.40154480934143066, 0.4028370678424835, 0.39767220616340637, 0.4053460359573364, 0.41064876317977905, 0.4028710424900055, 0.3956482708454132, 0.41268450021743774], "val_accuracy": [0.40700000524520874, 0.4466666579246521, 0.6546666622161865, 0.6943333148956299, 0.718999981880188, 0.7360000014305115, 0.737333357334137, 0.7536666393280029, 0.7526666522026062, 0.768666684627533, 0.7820000052452087, 0.7839999794960022, 0.7876666784286499, 0.7946666479110718, 0.7976666688919067, 0.8026666641235352, 0.8086666464805603, 0.8190000057220459, 0.8173333406448364, 0.8180000185966492, 0.8230000138282776, 0.8299999833106995, 0.8333333134651184, 0.831333339214325, 0.8299999833106995, 0.8403333425521851, 0.8413333296775818, 0.8453333377838135, 0.8503333330154419, 0.8473333120346069, 0.843666672706604, 0.8500000238418579, 0.8529999852180481, 0.859666645526886, 0.8556666374206543, 0.8640000224113464, 0.8629999756813049, 0.8643333315849304, 0.8629999756813049, 0.8646666407585144, 0.8629999756813049, 0.8603333234786987, 0.8600000143051147, 0.8636666536331177, 0.8616666793823242]}, "mapping_values": [1, 10, 5, 5, 3, 2, 2, 0, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1], [0, 5], [0], [0], [1], [0], [2], [0]], "fitness": -0.831428587436676, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5301133394241333, 0.8534281849861145, 0.6732547283172607, 0.5944283604621887, 0.5819754004478455, 0.5225189328193665, 0.5016506314277649, 0.49242639541625977, 0.49659496545791626, 0.5155228972434998, 0.4797074496746063, 0.487779825925827], "accuracy": [0.4839519262313843, 0.7003037929534912, 0.7491744756698608, 0.7786290049552917, 0.7882710099220276, 0.8025360107421875, 0.8121780753135681, 0.8239334225654602, 0.8267071843147278, 0.822348415851593, 0.8284242749214172, 0.8277638554573059], "val_loss": [1.0033704042434692, 0.6472246050834656, 0.5952216982841492, 0.554632306098938, 0.5485127568244934, 0.5340787768363953, 0.5425488948822021, 0.5438539385795593, 0.537625253200531, 0.5753563642501831, 0.5956044793128967, 0.5772059559822083], "val_accuracy": [0.6660000085830688, 0.7590000033378601, 0.7876666784286499, 0.8076666593551636, 0.8169999718666077, 0.8190000057220459, 0.831333339214325, 0.8236666917800903, 0.8286666870117188, 0.8259999752044678, 0.8299999833106995, 0.8289999961853027]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 5, 4, 3, 2], [2, 1, 0, 2, 3], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 9, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 5, 8, 1, 4, 1, 4, 2, 8, 0], [3, 0, 2, 3, 3, 0, 3, 1, 2, 0], [75, 99, 96, 87, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 1, 5, 4, 1, 1, 2, 1, 1, 1, 21, 12, 9, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.pow(grad, alpha)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(sigma, tf.math.square(tf.math.sqrt(tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.pow(beta, sigma))))), tf.math.subtract(sigma, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.negative(alpha)))))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09470347315073013, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506, 0.10333333164453506]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 1, 1], [9, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 9, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3035526275634766, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 9], [0, 1, 0, 2], [39, 58, 32], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 74], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 1, 6, 2, 3, 5, 1, 5, 2, 3, 1, 7, 1, 2, 5, 9, 4, 9, 5, 5, 1, 1, 2, 5, 1, 6, 5, 1, 9, 7, 0, 5, 7, 8, 3, 6, 2, 7, 2, 1, 9, 0, 6, 2], [0, 0, 0, 3, 0, 0, 3, 1, 2, 1, 0, 4, 6, 0, 3, 5, 2, 7, 6, 2, 0, 6, 3, 0, 3, 6, 5, 3, 1, 4, 1, 0, 7, 4], [6, 99, 96, 99, 10, 1, 10, 32, 34, 70, 57, 88, 19, 15]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 6, 3, 3, 10, 6, 4, 2, 2, 1, 1, 1, 88, 54, 34, 14], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.subtract(tf.math.divide_no_nan(sigma, alpha), tf.math.add(tf.math.multiply(tf.math.square(tf.math.subtract(beta, tf.math.square(alpha))), tf.math.add(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad), tf.math.subtract(tf.math.add(grad, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(tf.math.square(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, grad)), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.square(tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.square(tf.math.subtract(tf.math.divide_no_nan(tf.math.square(tf.math.subtract(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), grad), tf.math.add(grad, beta))), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), grad), tf.math.square(tf.math.add(tf.math.sqrt(sigma), tf.math.multiply(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(tf.math.add(grad, grad), tf.math.subtract(sigma, alpha))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))))))))))))), tf.math.negative(grad))), tf.math.divide_no_nan(alpha, tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), grad))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 2, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 6, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.pow(sigma, grad), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.math.pow(alpha, tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]