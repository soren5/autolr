[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8668571710586548, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221466064453125, 1.864475965499878, 1.3883154392242432, 1.0793654918670654, 0.9276084899902344, 0.8328683376312256, 0.7628752589225769, 0.7121771574020386, 0.6832984685897827, 0.6577656269073486, 0.6300244331359863, 0.6054097414016724, 0.5842204689979553, 0.5758509635925293, 0.5645161867141724, 0.5433547496795654, 0.5329113006591797, 0.517304539680481, 0.5071239471435547, 0.496055543422699, 0.4740569293498993, 0.4811033308506012, 0.46415984630584717, 0.4557633697986603, 0.4552290141582489, 0.4379732012748718, 0.4296070635318756, 0.4191676080226898, 0.41447654366493225, 0.40625855326652527, 0.39966845512390137, 0.39514270424842834, 0.3998566269874573, 0.38261955976486206, 0.3759012222290039, 0.37731286883354187, 0.36572885513305664, 0.3643976151943207, 0.35005247592926025, 0.3475387692451477, 0.3412174582481384, 0.34602591395378113, 0.3312249183654785, 0.3342341184616089, 0.3261672556400299], "accuracy": [0.278959184885025, 0.4975564777851105, 0.5683529376983643, 0.6250165104866028, 0.6699247360229492, 0.6983225345611572, 0.7240787148475647, 0.7423061728477478, 0.7432307600975037, 0.7619865536689758, 0.7736098170280457, 0.7765156626701355, 0.7887993454933167, 0.7895918488502502, 0.7961959838867188, 0.8039889335632324, 0.8063663840293884, 0.8087438941001892, 0.8149517774581909, 0.8148196935653687, 0.8272355198860168, 0.8277638554573059, 0.830669641494751, 0.8304054737091064, 0.835160493850708, 0.8426892161369324, 0.8446704745292664, 0.8507462739944458, 0.8531237840652466, 0.8537842035293579, 0.8570862412452698, 0.8558974862098694, 0.8560295701026917, 0.8632941246032715, 0.8683133125305176, 0.8667283058166504, 0.8706908226013184, 0.8689737319946289, 0.8778232932090759, 0.8732003569602966, 0.8754457831382751, 0.876370370388031, 0.8840311765670776, 0.8816536664962769, 0.8813894987106323], "val_loss": [2.0354015827178955, 1.504167914390564, 1.02586030960083, 0.8159459829330444, 0.7277283668518066, 0.6796612739562988, 0.6356192827224731, 0.5988446474075317, 0.5761115550994873, 0.5516072511672974, 0.534784197807312, 0.5205808281898499, 0.5095731019973755, 0.4939723312854767, 0.4918610155582428, 0.47797879576683044, 0.46945610642433167, 0.45982983708381653, 0.45347750186920166, 0.4474022090435028, 0.4425496757030487, 0.4349657893180847, 0.430571973323822, 0.4267089366912842, 0.42184412479400635, 0.4128543734550476, 0.4094533622264862, 0.4053923487663269, 0.40004390478134155, 0.3964727520942688, 0.39540210366249084, 0.39141422510147095, 0.38815706968307495, 0.3847101330757141, 0.3819082975387573, 0.3784260153770447, 0.3768964409828186, 0.37764301896095276, 0.3728269040584564, 0.37119635939598083, 0.36952435970306396, 0.3671380579471588, 0.36634862422943115, 0.36754098534584045, 0.3609469532966614], "val_accuracy": [0.546999990940094, 0.6690000295639038, 0.6916666626930237, 0.7239999771118164, 0.7419999837875366, 0.762333333492279, 0.7666666507720947, 0.777999997138977, 0.7883333563804626, 0.7990000247955322, 0.8066666722297668, 0.8103333115577698, 0.8153333067893982, 0.8236666917800903, 0.8163333535194397, 0.8266666531562805, 0.8286666870117188, 0.8339999914169312, 0.8403333425521851, 0.846666693687439, 0.8450000286102295, 0.8489999771118164, 0.8503333330154419, 0.8516666889190674, 0.8510000109672546, 0.8586666584014893, 0.859666645526886, 0.8606666922569275, 0.862666666507721, 0.8653333187103271, 0.8633333444595337, 0.8653333187103271, 0.8650000095367432, 0.8679999709129333, 0.8690000176429749, 0.8703333139419556, 0.8709999918937683, 0.8726666569709778, 0.871666669845581, 0.8743333220481873, 0.8726666569709778, 0.8726666569709778, 0.871999979019165, 0.8706666827201843, 0.8736666440963745]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 0, 0, 1, 1, 1], [0, 3, 1, 7], [0, 5, 2, 1], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8514285683631897, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(grad, beta), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2941131591796875, 2.191699743270874, 1.775894284248352, 1.3347110748291016, 1.083487868309021, 0.9362388849258423, 0.8586029410362244, 0.8277517557144165, 0.7742927670478821, 0.7604543566703796, 0.7092714309692383, 0.691807746887207, 0.6530329585075378, 0.6188357472419739, 0.6164633631706238, 0.6075109839439392, 0.5909731388092041, 0.571212649345398, 0.5662704110145569, 0.5460297465324402, 0.5265995264053345, 0.5306105017662048, 0.5113056302070618, 0.49556925892829895, 0.4956388473510742, 0.4829261302947998, 0.4752179980278015, 0.46219998598098755, 0.4503503143787384, 0.457287073135376, 0.432522177696228, 0.4267975687980652, 0.4227057099342346, 0.413862407207489, 0.4228719472885132, 0.41201305389404297, 0.4061795175075531, 0.3899002969264984, 0.3847835958003998, 0.37932145595550537, 0.3740634024143219, 0.3791322708129883, 0.36552539467811584, 0.3818672299385071, 0.35686254501342773, 0.3500232398509979, 0.3462883532047272, 0.34181731939315796, 0.33795052766799927, 0.32959386706352234, 0.329898864030838, 0.32056307792663574, 0.3144264221191406], "accuracy": [0.12891295552253723, 0.31501781940460205, 0.43508124351501465, 0.5493329763412476, 0.6365077495574951, 0.6613393425941467, 0.6910579800605774, 0.693831741809845, 0.7079645991325378, 0.7107383608818054, 0.7338528633117676, 0.737947404384613, 0.7466648817062378, 0.7622507214546204, 0.7593448758125305, 0.7730814814567566, 0.7750627398490906, 0.78113853931427, 0.7903843522071838, 0.7882710099220276, 0.7979130744934082, 0.8020076751708984, 0.804649293422699, 0.8115176558494568, 0.8088759779930115, 0.8149517774581909, 0.8131026029586792, 0.8277638554573059, 0.8267071843147278, 0.8210275769233704, 0.8297450542449951, 0.8396512866020203, 0.8437458872795105, 0.8436138033866882, 0.8376700282096863, 0.8462554216384888, 0.845859169960022, 0.8544445633888245, 0.8551049828529358, 0.8615770936012268, 0.8614450097084045, 0.8529917001724243, 0.8539162874221802, 0.8621054291725159, 0.8664641380310059, 0.8658037185668945, 0.8642187118530273, 0.8665962219238281, 0.8676528930664062, 0.8712190985679626, 0.8705587387084961, 0.8713511824607849, 0.8753136992454529], "val_loss": [2.246199607849121, 2.02040696144104, 1.13332200050354, 0.8574314713478088, 0.7673912644386292, 0.7250525951385498, 0.6668179035186768, 0.641767144203186, 0.6337829828262329, 0.6290449500083923, 0.5857334733009338, 0.568923830986023, 0.5554647445678711, 0.5350012183189392, 0.5210700631141663, 0.5225099325180054, 0.5095779895782471, 0.5107131600379944, 0.4997290074825287, 0.4992929697036743, 0.4871503412723541, 0.4869157671928406, 0.46692922711372375, 0.46254414319992065, 0.45720767974853516, 0.4566654562950134, 0.45935291051864624, 0.45211678743362427, 0.4391864836215973, 0.4365426301956177, 0.4272853136062622, 0.42329859733581543, 0.4287881553173065, 0.42903953790664673, 0.4243823289871216, 0.41984739899635315, 0.4239305853843689, 0.41433367133140564, 0.4143719971179962, 0.421430379152298, 0.4052242338657379, 0.393124520778656, 0.42108407616615295, 0.42083150148391724, 0.3913494944572449, 0.38808736205101013, 0.39716044068336487, 0.42344173789024353, 0.42355677485466003, 0.4299545884132385, 0.4286849796772003, 0.41601815819740295, 0.42759406566619873], "val_accuracy": [0.414000004529953, 0.4699999988079071, 0.6623333096504211, 0.7083333134651184, 0.722000002861023, 0.7350000143051147, 0.7476666569709778, 0.7680000066757202, 0.7593333125114441, 0.765999972820282, 0.781333327293396, 0.7739999890327454, 0.7796666622161865, 0.7979999780654907, 0.8036666512489319, 0.8003333210945129, 0.8109999895095825, 0.8136666417121887, 0.8140000104904175, 0.8183333277702332, 0.8196666836738586, 0.8270000219345093, 0.8336666822433472, 0.8339999914169312, 0.8336666822433472, 0.8299999833106995, 0.8366666436195374, 0.8393333554267883, 0.8373333215713501, 0.8389999866485596, 0.8446666598320007, 0.8513333201408386, 0.8453333377838135, 0.8460000157356262, 0.8476666808128357, 0.847000002861023, 0.8526666760444641, 0.8519999980926514, 0.8553333282470703, 0.8573333621025085, 0.856333315372467, 0.8583333492279053, 0.8566666841506958, 0.8560000061988831, 0.8659999966621399, 0.8656666874885559, 0.8669999837875366, 0.8696666955947876, 0.8696666955947876, 0.8633333444595337, 0.8629999756813049, 0.8676666617393494, 0.862666666507721]}, "mapping_values": [1, 10, 5, 5, 3, 8, 4, 4, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8305714130401611, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6560289859771729, 0.8588396310806274, 0.6906253695487976, 0.6285502910614014, 0.5776079297065735, 0.5536301732063293, 0.5097544193267822, 0.5316776633262634, 0.5238338112831116, 0.48247140645980835, 0.502088725566864], "accuracy": [0.45608243346214294, 0.6950204968452454, 0.7430986762046814, 0.7646281719207764, 0.7817989587783813, 0.7987055778503418, 0.8195747137069702, 0.804649293422699, 0.8128384351730347, 0.8150838613510132, 0.8195747137069702], "val_loss": [0.9086417555809021, 0.6512665748596191, 0.6066334843635559, 0.5628830790519714, 0.5517277121543884, 0.5074204802513123, 0.5122586488723755, 0.5666223764419556, 0.5621360540390015, 0.561957597732544, 0.5426042675971985], "val_accuracy": [0.6869999766349792, 0.7620000243186951, 0.7766666412353516, 0.7940000295639038, 0.8026666641235352, 0.8299999833106995, 0.8223333358764648, 0.8289999961853027, 0.8169999718666077, 0.8206666707992554, 0.8169999718666077]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 9], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 1, 8], [0, 0, 4, 2, 0, 0, 3, 4, 2, 0], [16, 99, 96, 33, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 5, 2, 2, 10, 6, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(beta)), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.304011106491089, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 1, 0, 3], [0, 1, 0, 2], [0, 39, 39], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 2, 6, 3, 7, 2, 1], [4, 0, 4, 0, 3, 1, 0, 5, 1], [0, 27, 16, 0], [1, 1], [0], [0], [0], [1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [2], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 18, 9, 9, 3, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.103257894515991, 18.520172119140625, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20604939758777618, 0.12838461995124817, 0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.4765498638153076, 3.1114697456359863, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09600000083446503, 0.0976666659116745, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [5, 3, 3, 6, 6, 1, 6, 1, 4, 2, 0, 0, 1, 8, 8, 8, 1, 0], [4, 0, 0, 3, 0, 0, 3, 1, 2, 0, 2, 4], [16, 66, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 10, 6, 4, 2, 2, 1, 1, 1, 30, 18, 12, 5], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), tf.math.negative(tf.math.negative(alpha))))), beta)), tf.math.subtract(tf.math.sqrt(tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), beta)))), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [4, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 5, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [8, 3, 3, 6, 8, 1, 4, 1, 6, 8, 8, 6], [0, 0, 0, 1, 0, 4, 3, 1, 3, 0], [16, 99, 96, 52, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 21, 12, 9, 4], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), grad))), sigma)), tf.math.sqrt(tf.math.divide_no_nan(alpha, sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]