[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8691428303718567, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2258315086364746, 1.875048041343689, 1.402042031288147, 1.1228704452514648, 0.9484161138534546, 0.8517040610313416, 0.7803817391395569, 0.7274637818336487, 0.7011584043502808, 0.6700348258018494, 0.6462756991386414, 0.6210120320320129, 0.6040476560592651, 0.5823578834533691, 0.5698373913764954, 0.5627934336662292, 0.551944375038147, 0.5268182158470154, 0.5269747376441956, 0.5146490931510925, 0.4952971339225769, 0.4941317141056061, 0.4798658490180969, 0.4678637981414795, 0.45731353759765625, 0.45375943183898926, 0.43892401456832886, 0.43240830302238464, 0.4288589060306549, 0.4285735785961151, 0.40960609912872314, 0.4064454138278961, 0.4043187201023102, 0.4020451009273529, 0.3984612226486206, 0.38407790660858154, 0.37925803661346436, 0.37938740849494934, 0.3683759570121765, 0.3632711172103882, 0.34777647256851196, 0.3626304864883423, 0.3498844802379608, 0.34107479453086853, 0.339832603931427, 0.3330962061882019, 0.33412280678749084, 0.3314516842365265, 0.3293035626411438, 0.319534033536911, 0.3116430342197418, 0.3025071620941162, 0.3067285716533661, 0.29710718989372253, 0.2912389636039734, 0.28864189982414246, 0.2930968999862671, 0.2859583795070648, 0.2786964476108551, 0.275840163230896, 0.2797442376613617, 0.27036911249160767, 0.26487720012664795, 0.260177880525589, 0.26029229164123535, 0.25498977303504944], "accuracy": [0.2705058753490448, 0.4920089840888977, 0.5612204670906067, 0.611940324306488, 0.6580372452735901, 0.693831741809845, 0.7131158113479614, 0.7378153204917908, 0.7387399077415466, 0.7530049085617065, 0.7626469135284424, 0.7738739848136902, 0.77677983045578, 0.7847048044204712, 0.7906485199928284, 0.7931581139564514, 0.793950617313385, 0.8113855719566345, 0.8055738806724548, 0.8120459914207458, 0.8204993009567261, 0.8202351331710815, 0.8248580098152161, 0.8256505131721497, 0.8304054737091064, 0.8333113193511963, 0.8401796221733093, 0.841500461101532, 0.8409721255302429, 0.842028796672821, 0.852859616279602, 0.8486329317092896, 0.8545766472816467, 0.8535200357437134, 0.8525954484939575, 0.8614450097084045, 0.8610487580299377, 0.8569541573524475, 0.8658037185668945, 0.869502067565918, 0.8751816153526306, 0.86553955078125, 0.8713511824607849, 0.8737286925315857, 0.872407853603363, 0.876370370388031, 0.8770307898521423, 0.880729079246521, 0.8803328275680542, 0.8813894987106323, 0.8833707571029663, 0.889578640460968, 0.8869370222091675, 0.8889182209968567, 0.8919561505317688, 0.8924844861030579, 0.8920882344245911, 0.8945978283882141, 0.8956544995307922, 0.8989565372467041, 0.8949940800666809, 0.8997490406036377, 0.9027869701385498, 0.9051644206047058, 0.9046360850334167, 0.9037115573883057], "val_loss": [2.046266555786133, 1.5279746055603027, 1.0553430318832397, 0.8529272675514221, 0.7646098732948303, 0.7007473707199097, 0.6589203476905823, 0.6216109395027161, 0.5970343947410583, 0.5773710012435913, 0.5563915967941284, 0.5425431132316589, 0.5307400226593018, 0.5164728760719299, 0.503061056137085, 0.49369508028030396, 0.48638251423835754, 0.4743020832538605, 0.4764200448989868, 0.4652641713619232, 0.45639169216156006, 0.4477282762527466, 0.44547975063323975, 0.43903857469558716, 0.4312010407447815, 0.42823493480682373, 0.42344969511032104, 0.4196431338787079, 0.4151264727115631, 0.4138173460960388, 0.4099164605140686, 0.4039980471134186, 0.40154406428337097, 0.40488606691360474, 0.39939579367637634, 0.3969581425189972, 0.3960833251476288, 0.39442798495292664, 0.38991618156433105, 0.3895370662212372, 0.40053850412368774, 0.39006128907203674, 0.3828640282154083, 0.38263294100761414, 0.3791525363922119, 0.37684565782546997, 0.3821367919445038, 0.3719455897808075, 0.3825637102127075, 0.38138672709465027, 0.3778771460056305, 0.3710199296474457, 0.3697246015071869, 0.3683096468448639, 0.3693104386329651, 0.3699485957622528, 0.3693649172782898, 0.3669222891330719, 0.3676459491252899, 0.36605098843574524, 0.3636757433414459, 0.3687361776828766, 0.3707924485206604, 0.3632885813713074, 0.36882784962654114, 0.3645345866680145], "val_accuracy": [0.5516666769981384, 0.6506666541099548, 0.6803333163261414, 0.6943333148956299, 0.7193333506584167, 0.7386666536331177, 0.753333330154419, 0.7680000066757202, 0.7763333320617676, 0.7736666798591614, 0.8016666769981384, 0.8026666641235352, 0.800000011920929, 0.8096666932106018, 0.8180000185966492, 0.8209999799728394, 0.8266666531562805, 0.8296666741371155, 0.8356666564941406, 0.8376666903495789, 0.8379999995231628, 0.8426666855812073, 0.8423333168029785, 0.8453333377838135, 0.8496666550636292, 0.8489999771118164, 0.8516666889190674, 0.8483333587646484, 0.8510000109672546, 0.8569999933242798, 0.8569999933242798, 0.8629999756813049, 0.8610000014305115, 0.8610000014305115, 0.8633333444595337, 0.862333357334137, 0.8653333187103271, 0.8633333444595337, 0.8656666874885559, 0.8676666617393494, 0.862666666507721, 0.8700000047683716, 0.8679999709129333, 0.8676666617393494, 0.8706666827201843, 0.8723333477973938, 0.8696666955947876, 0.8696666955947876, 0.8646666407585144, 0.8693333268165588, 0.875, 0.871999979019165, 0.874666690826416, 0.8736666440963745, 0.8736666440963745, 0.8759999871253967, 0.875333309173584, 0.875333309173584, 0.8769999742507935, 0.875333309173584, 0.8776666522026062, 0.8763333559036255, 0.875333309173584, 0.8776666522026062, 0.8776666522026062, 0.8773333430290222]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 2], [0, 2], [0], [0, 0, 1], [0, 5], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8577142953872681, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2931103706359863, 2.1902267932891846, 1.7765967845916748, 1.3569926023483276, 1.101452350616455, 0.9358360767364502, 0.8593226671218872, 0.8377976417541504, 0.7874143123626709, 0.7485695481300354, 0.7055246829986572, 0.681555449962616, 0.6489940285682678, 0.6301952004432678, 0.6021202206611633, 0.5872905254364014, 0.5797245502471924, 0.5463807582855225, 0.5462207198143005, 0.5343703627586365, 0.5312981009483337, 0.514302134513855, 0.5129578709602356, 0.4948669970035553, 0.48953959345817566, 0.4753550589084625, 0.4609355628490448, 0.46127060055732727, 0.4564727246761322, 0.44821175932884216, 0.4391661584377289, 0.42568618059158325, 0.41348907351493835, 0.4173421561717987, 0.4140602946281433, 0.40526312589645386, 0.3920231759548187, 0.399141788482666, 0.38137000799179077, 0.38329654932022095, 0.3747200667858124, 0.3681291341781616, 0.36474716663360596, 0.3619001805782318, 0.3665427565574646, 0.3590398132801056, 0.33917903900146484, 0.3402881324291229], "accuracy": [0.1298375427722931, 0.3288865387439728, 0.43468499183654785, 0.5419363379478455, 0.6192048788070679, 0.6653017997741699, 0.6900013089179993, 0.6935675740242004, 0.700700044631958, 0.7166820764541626, 0.7308149337768555, 0.7390040755271912, 0.7530049085617065, 0.7592127919197083, 0.7701756954193115, 0.7741381525993347, 0.7733456492424011, 0.7897239327430725, 0.7927618622779846, 0.7979130744934082, 0.7959318161010742, 0.8020076751708984, 0.7991018295288086, 0.8030643463134766, 0.8125742673873901, 0.8145555257797241, 0.8146876096725464, 0.8158763647079468, 0.8187822103500366, 0.8244617581367493, 0.8305375576019287, 0.833179235458374, 0.837537944316864, 0.8362171649932861, 0.842028796672821, 0.8385946154594421, 0.8421608805656433, 0.8404437899589539, 0.8508783578872681, 0.8508783578872681, 0.8520671129226685, 0.8543124794960022, 0.8565579056739807, 0.8568220734596252, 0.8558974862098694, 0.8544445633888245, 0.8638224601745605, 0.8664641380310059], "val_loss": [2.2465837001800537, 2.0159904956817627, 1.121370553970337, 0.8324519991874695, 0.7586070895195007, 0.6805851459503174, 0.6416963934898376, 0.6238831281661987, 0.6061685681343079, 0.5688540935516357, 0.5087523460388184, 0.4991243779659271, 0.5005366802215576, 0.48542216420173645, 0.4701145887374878, 0.4686821401119232, 0.4651314318180084, 0.45208504796028137, 0.4440123438835144, 0.433176189661026, 0.43723300099372864, 0.43574413657188416, 0.41887539625167847, 0.42530614137649536, 0.41530388593673706, 0.42647773027420044, 0.41791093349456787, 0.41358253359794617, 0.395436555147171, 0.40167438983917236, 0.39820247888565063, 0.4095316231250763, 0.40445494651794434, 0.4015664756298065, 0.39919906854629517, 0.3792954981327057, 0.3888375759124756, 0.37408220767974854, 0.38858309388160706, 0.3821121156215668, 0.37467318773269653, 0.36967211961746216, 0.36741742491722107, 0.36742061376571655, 0.36661165952682495, 0.36394792795181274, 0.38082703948020935, 0.3789469301700592], "val_accuracy": [0.43533334136009216, 0.4569999873638153, 0.6656666398048401, 0.7056666612625122, 0.7326666712760925, 0.7559999823570251, 0.765666663646698, 0.7516666650772095, 0.7746666669845581, 0.777999997138977, 0.8059999942779541, 0.8136666417121887, 0.8066666722297668, 0.8116666674613953, 0.8263333439826965, 0.8263333439826965, 0.8293333053588867, 0.8373333215713501, 0.828000009059906, 0.840666651725769, 0.840666651725769, 0.8333333134651184, 0.8453333377838135, 0.8410000205039978, 0.8556666374206543, 0.8453333377838135, 0.8573333621025085, 0.8500000238418579, 0.8600000143051147, 0.8550000190734863, 0.8606666922569275, 0.8560000061988831, 0.8683333396911621, 0.871666669845581, 0.8693333268165588, 0.862666666507721, 0.8646666407585144, 0.8696666955947876, 0.875, 0.8786666393280029, 0.8763333559036255, 0.8773333430290222, 0.8809999823570251, 0.8809999823570251, 0.8733333349227905, 0.878333330154419, 0.875333309173584, 0.8733333349227905]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 7, 7, 4, 5, 5, 9, 2, 8, 9], [0, 1, 4], [0, 46, 35], [1], [0], [2], [0]], "fitness": -0.8268571496009827, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.pow(tf.math.square(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.sqrt(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5891647338867188, 1.044418215751648, 0.7847195863723755, 0.6701852679252625, 0.6245085597038269, 0.5948614478111267, 0.5946476459503174, 0.5835492610931396, 0.5580692291259766, 0.6160947680473328, 0.5903711318969727, 0.5723111033439636, 0.5573802590370178, 0.6611259579658508, 0.6284451484680176], "accuracy": [0.44525161385536194, 0.6741513609886169, 0.7153612375259399, 0.7520803213119507, 0.7638356685638428, 0.7711002230644226, 0.7854973077774048, 0.7928939461708069, 0.7993659973144531, 0.8062343001365662, 0.7943468689918518, 0.7861577272415161, 0.8012151718139648, 0.7898560166358948, 0.7790252566337585], "val_loss": [0.967272937297821, 0.7133607864379883, 0.6185901761054993, 0.5975428223609924, 0.5798435807228088, 0.5659188032150269, 0.5613986849784851, 0.5015887022018433, 0.5230111479759216, 0.5921373963356018, 0.5418519973754883, 0.5278741121292114, 0.5163569450378418, 0.5476872324943542, 0.599435031414032], "val_accuracy": [0.6473333239555359, 0.75, 0.7796666622161865, 0.7826666831970215, 0.7766666412353516, 0.7916666865348816, 0.8023333549499512, 0.8306666612625122, 0.8220000267028809, 0.8336666822433472, 0.8180000185966492, 0.8273333311080933, 0.8240000009536743, 0.8133333325386047, 0.8270000219345093]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 13, 10, 3, 3, 1, 0, 1, 0], "tree_depth": 16}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 53], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 2, 4, 0, 3, 5, 8], [0, 2, 0, 3], [0, 16], [0, 1], [0], [1], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 2, 0, 3, 0, 1, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 11, 7, 4, 2, 2, 1, 1, 0, 14, 7, 7, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.sqrt(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(beta), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(alpha, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [91, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 1, 0, 1, 1], [0, 2, 6], [0, 3, 1], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 6, 3, 3, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 0, 8], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [8], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 4], [52, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 7, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.math.pow(alpha, tf.math.add(tf.math.negative(beta), grad))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 7], [0, 1, 0, 2, 3], [39, 62], [0, 0, 0, 1, 1, 1, 1], [3, 2, 3, 0, 3, 5], [5, 0, 5, 4], [16, 16], [1, 1], [0], [2], [0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 8, 4, 2, 2, 0, 6, 0], [0, 7, 0, 3, 0, 0, 3, 1, 2, 0], [0, 93, 64, 65]], "fitness": -0.09142857044935226, "mapping_values": [1, 11, 6, 5, 2, 7, 3, 4, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.math.add(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), grad))), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), grad), lambda shape,  alpha, beta, sigma, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3100619316101074, 2.309365749359131, 2.3104562759399414, 2.3089957237243652, 2.309640407562256, 2.3102540969848633], "accuracy": [0.0870426595211029, 0.09206181764602661, 0.09430722147226334, 0.09800554811954498, 0.09140139818191528, 0.08875974267721176], "val_loss": [2.3091089725494385, 2.3091089725494385, 2.3091089725494385, 2.3091089725494385, 2.3091089725494385, 2.3091089725494385], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]