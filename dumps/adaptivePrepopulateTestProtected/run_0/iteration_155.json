[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8788571357727051, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223778247833252, 1.869816780090332, 1.3854763507843018, 1.0877859592437744, 0.9313703775405884, 0.8305619955062866, 0.7596983313560486, 0.7178841233253479, 0.678885817527771, 0.6427952647209167, 0.6314711570739746, 0.6065253019332886, 0.5803450345993042, 0.5689871311187744, 0.5544987320899963, 0.5336046814918518, 0.5189152956008911, 0.5142802596092224, 0.4972553849220276, 0.48589378595352173, 0.4789123237133026, 0.47044631838798523, 0.45680922269821167, 0.4485171139240265, 0.45258986949920654, 0.44318363070487976, 0.4277282655239105, 0.42588117718696594, 0.4205707907676697, 0.4097837805747986, 0.4017646610736847, 0.3997235894203186, 0.39143604040145874, 0.3813983201980591, 0.3799765408039093, 0.3789656162261963, 0.36794283986091614, 0.3624574840068817, 0.35929128527641296, 0.35348811745643616, 0.3508596420288086, 0.34113216400146484, 0.3462033271789551, 0.33102670311927795, 0.330086886882782, 0.32165828347206116, 0.3163209855556488, 0.31816115975379944, 0.30683767795562744, 0.30308493971824646, 0.3014288544654846, 0.2991333305835724, 0.3007844388484955, 0.29286450147628784, 0.28524908423423767, 0.28070855140686035, 0.2784059941768646, 0.26981455087661743, 0.2657836079597473, 0.26673373579978943, 0.2612868845462799, 0.2518042027950287, 0.25471100211143494, 0.24872227013111115, 0.2470250278711319, 0.2423699051141739, 0.2363964468240738, 0.2331322431564331, 0.2366485893726349, 0.22393356263637543, 0.22837325930595398, 0.218330517411232, 0.21717983484268188, 0.21057762205600739, 0.20735885202884674, 0.2054237574338913, 0.20540645718574524, 0.19891852140426636, 0.19594213366508484, 0.20225878059864044, 0.1904907077550888, 0.18262125551700592, 0.18921315670013428, 0.18402932584285736, 0.18388424813747406, 0.18099281191825867, 0.17825645208358765, 0.1715107411146164], "accuracy": [0.2751287817955017, 0.47906485199928284, 0.5712587237358093, 0.6231673359870911, 0.6653017997741699, 0.7033417224884033, 0.7341170310974121, 0.7374191284179688, 0.7518161535263062, 0.7711002230644226, 0.7761194109916687, 0.783119797706604, 0.7940827012062073, 0.7932901978492737, 0.8016114234924316, 0.8078193068504333, 0.8191784620285034, 0.8201030492782593, 0.8281601071357727, 0.8253863453865051, 0.8310658931732178, 0.8338396549224854, 0.8387266993522644, 0.8429533839225769, 0.8429533839225769, 0.8430854678153992, 0.8474441766738892, 0.8525954484939575, 0.8488970994949341, 0.8557654023170471, 0.8605204224586487, 0.8562937378883362, 0.8647470474243164, 0.8679170608520508, 0.8650112152099609, 0.867520809173584, 0.870030403137207, 0.8725399374961853, 0.8734645247459412, 0.8730682730674744, 0.8811253309249878, 0.8813894987106323, 0.8728041052818298, 0.8854840993881226, 0.8800686597824097, 0.885219931602478, 0.8873332738876343, 0.8868049383163452, 0.8886540532112122, 0.8912957310676575, 0.8923524022102356, 0.8920882344245911, 0.8905032277107239, 0.8961827754974365, 0.895918607711792, 0.8968431949615479, 0.8986923694610596, 0.9041078090667725, 0.9021265506744385, 0.902390718460083, 0.9058248400688171, 0.9096552729606628, 0.908730685710907, 0.9115044474601746, 0.9109761118888855, 0.9133535623550415, 0.9162594079971313, 0.9157310724258423, 0.9140139818191528, 0.9169198274612427, 0.9167877435684204, 0.9225993752479553, 0.9235239624977112, 0.9220710396766663, 0.9252410531044006, 0.9272223114967346, 0.9260335564613342, 0.9299960136413574, 0.9298639297485352, 0.9265618920326233, 0.9314489364624023, 0.9351472854614258, 0.930788516998291, 0.9344868659973145, 0.9322414398193359, 0.935279369354248, 0.9355435371398926, 0.9375247359275818], "val_loss": [2.043229818344116, 1.5252792835235596, 1.059319019317627, 0.8622859120368958, 0.7739511728286743, 0.712826669216156, 0.6653242111206055, 0.6353532075881958, 0.6145880818367004, 0.588234007358551, 0.5718778371810913, 0.5557640790939331, 0.5459425449371338, 0.525135338306427, 0.5168591141700745, 0.5053482055664062, 0.4997932016849518, 0.48488402366638184, 0.47919487953186035, 0.4703822433948517, 0.47141027450561523, 0.46116748452186584, 0.453118234872818, 0.44784554839134216, 0.44718751311302185, 0.43445050716400146, 0.4359551668167114, 0.42782077193260193, 0.42837169766426086, 0.4202001988887787, 0.41962215304374695, 0.41002556681632996, 0.40663206577301025, 0.40764692425727844, 0.40263956785202026, 0.3989400267601013, 0.3960455060005188, 0.39371103048324585, 0.3923947811126709, 0.3929206430912018, 0.3917257487773895, 0.3840952217578888, 0.3808329403400421, 0.3817606270313263, 0.37890157103538513, 0.37521520256996155, 0.3746592700481415, 0.3713971674442291, 0.3694106936454773, 0.36994099617004395, 0.36911842226982117, 0.3693079352378845, 0.36807316541671753, 0.3690676987171173, 0.36612769961357117, 0.36626964807510376, 0.36125749349594116, 0.3628350496292114, 0.36928442120552063, 0.3606704771518707, 0.35772624611854553, 0.3617168664932251, 0.3560544550418854, 0.3591160476207733, 0.35777518153190613, 0.35627302527427673, 0.3584086000919342, 0.3570273518562317, 0.3526735305786133, 0.35380101203918457, 0.3530525863170624, 0.35500773787498474, 0.35798314213752747, 0.3571338653564453, 0.35494470596313477, 0.35568180680274963, 0.3550068438053131, 0.35418087244033813, 0.3578505516052246, 0.3490322232246399, 0.35165348649024963, 0.3594669997692108, 0.3573257327079773, 0.35076624155044556, 0.35436558723449707, 0.35485583543777466, 0.35399290919303894, 0.3549942970275879], "val_accuracy": [0.5046666860580444, 0.6439999938011169, 0.6753333210945129, 0.6893333196640015, 0.7256666421890259, 0.7400000095367432, 0.7566666603088379, 0.7670000195503235, 0.7730000019073486, 0.7876666784286499, 0.7906666398048401, 0.7986666560173035, 0.8033333420753479, 0.8163333535194397, 0.8180000185966492, 0.8203333616256714, 0.8183333277702332, 0.82833331823349, 0.8303333520889282, 0.8323333263397217, 0.8263333439826965, 0.8370000123977661, 0.8410000205039978, 0.8399999737739563, 0.8399999737739563, 0.847000002861023, 0.843666672706604, 0.8476666808128357, 0.8493333458900452, 0.8533333539962769, 0.8493333458900452, 0.8579999804496765, 0.859000027179718, 0.8556666374206543, 0.8600000143051147, 0.862333357334137, 0.8613333106040955, 0.8606666922569275, 0.8610000014305115, 0.8673333525657654, 0.8650000095367432, 0.8603333234786987, 0.8673333525657654, 0.8690000176429749, 0.8700000047683716, 0.8703333139419556, 0.8726666569709778, 0.8713333606719971, 0.8700000047683716, 0.871666669845581, 0.874666690826416, 0.8733333349227905, 0.8733333349227905, 0.871666669845581, 0.8756666779518127, 0.874666690826416, 0.8759999871253967, 0.878000020980835, 0.8740000128746033, 0.8766666650772095, 0.8790000081062317, 0.8813333511352539, 0.8849999904632568, 0.8820000290870667, 0.8849999904632568, 0.8823333382606506, 0.8833333253860474, 0.8853333592414856, 0.8853333592414856, 0.8856666684150696, 0.8846666812896729, 0.8889999985694885, 0.8843333125114441, 0.8866666555404663, 0.887333333492279, 0.890999972820282, 0.8893333077430725, 0.8859999775886536, 0.8886666893959045, 0.8926666378974915, 0.890333354473114, 0.887333333492279, 0.8933333158493042, 0.8920000195503235, 0.8913333415985107, 0.890999972820282, 0.8916666507720947, 0.890666663646698]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8731428384780884, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221757650375366, 1.859739899635315, 1.3923598527908325, 1.102774739265442, 0.9489856958389282, 0.8496267795562744, 0.7693139314651489, 0.7329519391059875, 0.6924088597297668, 0.6670063138008118, 0.6454275846481323, 0.6192790865898132, 0.5918964743614197, 0.5766761302947998, 0.5570330023765564, 0.5447111129760742, 0.5347265005111694, 0.5191184878349304, 0.5116093158721924, 0.5044801831245422, 0.49336469173431396, 0.4817945063114166, 0.4786815047264099, 0.4648487865924835, 0.4555234909057617, 0.44170376658439636, 0.43446269631385803, 0.4308513402938843, 0.42129600048065186, 0.4180629253387451, 0.40456855297088623, 0.3974982500076294, 0.39597129821777344, 0.39205044507980347, 0.3904888927936554, 0.3811741769313812, 0.3779793679714203, 0.3709448277950287, 0.3701880872249603, 0.3623214662075043, 0.35475319623947144, 0.3551669418811798, 0.34599679708480835, 0.342434287071228, 0.340362012386322, 0.3417671322822571, 0.33191147446632385, 0.3263864815235138, 0.31565168499946594, 0.31153666973114014, 0.3026745617389679, 0.30812913179397583, 0.2968626618385315, 0.2976519465446472, 0.29003670811653137, 0.2898431718349457, 0.28405097126960754], "accuracy": [0.2748646140098572, 0.4916127324104309, 0.5635979175567627, 0.6164311170578003, 0.659490168094635, 0.6930392384529114, 0.7235503792762756, 0.7309470176696777, 0.7460044622421265, 0.7547219395637512, 0.7623828053474426, 0.7736098170280457, 0.7794214487075806, 0.7882710099220276, 0.7948752045631409, 0.802271842956543, 0.8012151718139648, 0.8109893202781677, 0.8133667707443237, 0.813498854637146, 0.8177255392074585, 0.826310932636261, 0.8226125836372375, 0.8317263126373291, 0.8345000743865967, 0.8411042094230652, 0.8418967127799988, 0.8453308939933777, 0.8471800088882446, 0.8486329317092896, 0.8520671129226685, 0.8569541573524475, 0.8573504090309143, 0.8593316674232483, 0.8585391640663147, 0.8685774803161621, 0.8614450097084045, 0.8652753829956055, 0.8697662353515625, 0.8710870146751404, 0.8696341514587402, 0.8712190985679626, 0.8691058158874512, 0.8770307898521423, 0.874389111995697, 0.8734645247459412, 0.8813894987106323, 0.8784837126731873, 0.884691596031189, 0.8885219693183899, 0.8898428082466125, 0.887201189994812, 0.8883898854255676, 0.8893144726753235, 0.8942015767097473, 0.8956544995307922, 0.8953903317451477], "val_loss": [2.037429094314575, 1.5120654106140137, 1.0353002548217773, 0.8277702927589417, 0.7368767857551575, 0.6776832938194275, 0.6275594830513, 0.5976855158805847, 0.5729488730430603, 0.5482006072998047, 0.53682941198349, 0.5150001049041748, 0.5019857883453369, 0.4872362017631531, 0.47805851697921753, 0.4666503071784973, 0.4564233422279358, 0.4505784809589386, 0.44979044795036316, 0.4431712329387665, 0.4271315038204193, 0.42296817898750305, 0.42117980122566223, 0.41187840700149536, 0.40369489789009094, 0.401568204164505, 0.3946700990200043, 0.392932653427124, 0.38653355836868286, 0.38942667841911316, 0.3777402341365814, 0.3800594210624695, 0.3770301043987274, 0.3756738603115082, 0.36776190996170044, 0.3697351813316345, 0.36037829518318176, 0.3634093403816223, 0.35816454887390137, 0.35331347584724426, 0.35701969265937805, 0.3538288474082947, 0.35311010479927063, 0.35128089785575867, 0.3535824120044708, 0.3448944091796875, 0.3507388234138489, 0.3443067967891693, 0.3415021300315857, 0.33969953656196594, 0.3399600088596344, 0.33613601326942444, 0.3366447389125824, 0.3369462788105011, 0.3348020017147064, 0.3293834924697876, 0.3300207555294037], "val_accuracy": [0.5146666765213013, 0.659333348274231, 0.6909999847412109, 0.7120000123977661, 0.7363333106040955, 0.7486666440963745, 0.7636666893959045, 0.7646666765213013, 0.7896666526794434, 0.79666668176651, 0.8059999942779541, 0.8146666884422302, 0.8186666369438171, 0.8286666870117188, 0.8296666741371155, 0.8333333134651184, 0.8356666564941406, 0.8396666646003723, 0.8339999914169312, 0.8356666564941406, 0.8550000190734863, 0.8519999980926514, 0.8516666889190674, 0.859000027179718, 0.8629999756813049, 0.859666645526886, 0.8629999756813049, 0.8650000095367432, 0.8656666874885559, 0.8633333444595337, 0.8673333525657654, 0.8690000176429749, 0.8676666617393494, 0.8640000224113464, 0.8726666569709778, 0.8713333606719971, 0.8736666440963745, 0.8769999742507935, 0.8733333349227905, 0.8773333430290222, 0.8740000128746033, 0.874666690826416, 0.8766666650772095, 0.8766666650772095, 0.8813333511352539, 0.8786666393280029, 0.874666690826416, 0.8809999823570251, 0.8826666474342346, 0.8823333382606506, 0.8803333044052124, 0.8856666684150696, 0.8799999952316284, 0.8833333253860474, 0.8856666684150696, 0.8846666812896729, 0.8840000033378601]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1], [0, 1, 9], [0], [0, 73], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], [0, 5, 1, 1, 3, 4, 2, 7, 0, 8, 0], [0, 6, 1, 7, 5, 0, 6], [0, 5], [0, 1], [0], [1], [0]], "fitness": -0.8522857427597046, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.math.pow(tf.math.add(tf.math.add(grad, tf.math.negative(alpha)), tf.math.sqrt(grad)), grad), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2942934036254883, 2.1931679248809814, 1.7730509042739868, 1.3419724702835083, 1.0743521451950073, 0.9162502288818359, 0.8419538140296936, 0.8164727687835693, 0.7691829204559326, 0.7406853437423706, 0.7106152176856995, 0.695320188999176, 0.6552711725234985, 0.6400803923606873, 0.6174302697181702, 0.6058319807052612, 0.5934721827507019, 0.5879403352737427, 0.5690158009529114, 0.5596835613250732, 0.5422364473342896, 0.530825674533844, 0.5184611678123474, 0.5146167874336243, 0.4949268400669098, 0.48634254932403564, 0.47990289330482483, 0.48088157176971436, 0.4689314663410187, 0.45616593956947327, 0.45242372155189514, 0.4368439018726349, 0.4428420662879944, 0.4250306785106659, 0.40679875016212463, 0.4152460992336273, 0.39890924096107483, 0.4030654728412628, 0.39301764965057373, 0.39064639806747437, 0.3803037405014038, 0.37190350890159607, 0.3738245368003845, 0.3651275932788849, 0.3634323179721832, 0.3472675681114197, 0.34304380416870117, 0.34165966510772705, 0.3337177336215973, 0.3347386419773102, 0.33964478969573975, 0.3334912657737732], "accuracy": [0.12521463632583618, 0.32465988397598267, 0.4410249590873718, 0.5457667708396912, 0.6350548267364502, 0.6528860330581665, 0.6917183995246887, 0.6954167485237122, 0.6977941989898682, 0.7123233675956726, 0.7334566116333008, 0.7321357727050781, 0.7481178045272827, 0.7592127919197083, 0.7540615797042847, 0.7701756954193115, 0.7721568942070007, 0.7728173136711121, 0.7821952104568481, 0.7902522683143616, 0.7928939461708069, 0.7984414100646973, 0.7960638999938965, 0.800818920135498, 0.8070268034934998, 0.8162726163864136, 0.8170651197433472, 0.8181217908859253, 0.8228767514228821, 0.8252542614936829, 0.828292191028595, 0.8368775844573975, 0.8350284099578857, 0.842028796672821, 0.8442742228507996, 0.8459912538528442, 0.8469158411026001, 0.8404437899589539, 0.850350022315979, 0.8553691506385803, 0.8568220734596252, 0.8533879518508911, 0.8539162874221802, 0.8537842035293579, 0.8584070801734924, 0.8665962219238281, 0.8689737319946289, 0.8654074668884277, 0.8676528930664062, 0.868049144744873, 0.8684453964233398, 0.8685774803161621], "val_loss": [2.2462258338928223, 2.025383710861206, 1.1507750749588013, 0.8717520236968994, 0.7602601647377014, 0.7414368391036987, 0.6494466066360474, 0.6416239142417908, 0.6286088824272156, 0.6163434982299805, 0.5697401165962219, 0.5441671013832092, 0.5381597280502319, 0.5244690179824829, 0.5097743272781372, 0.49829840660095215, 0.513202428817749, 0.495792955160141, 0.4920809864997864, 0.4874633848667145, 0.4677511751651764, 0.47342267632484436, 0.4649779200553894, 0.45029252767562866, 0.4475347399711609, 0.4533355236053467, 0.424295574426651, 0.41825178265571594, 0.41977953910827637, 0.41375309228897095, 0.4125155508518219, 0.40704768896102905, 0.4037436544895172, 0.4040586054325104, 0.4005473554134369, 0.4068843126296997, 0.4025218188762665, 0.4049544334411621, 0.400639146566391, 0.3935738205909729, 0.3938109874725342, 0.3918995261192322, 0.3908105492591858, 0.3955513536930084, 0.39620068669319153, 0.39149489998817444, 0.39316731691360474, 0.39188459515571594, 0.3864116072654724, 0.3887019753456116, 0.3923606872558594, 0.3941754102706909], "val_accuracy": [0.4243333339691162, 0.46533334255218506, 0.6516666412353516, 0.6966666579246521, 0.7226666808128357, 0.7250000238418579, 0.746999979019165, 0.7513333559036255, 0.7540000081062317, 0.7763333320617676, 0.7803333401679993, 0.7823333144187927, 0.7903333306312561, 0.7996666431427002, 0.8013333082199097, 0.8040000200271606, 0.7923333048820496, 0.8036666512489319, 0.8056666851043701, 0.8090000152587891, 0.8163333535194397, 0.8166666626930237, 0.824999988079071, 0.8366666436195374, 0.8353333473205566, 0.8236666917800903, 0.8410000205039978, 0.846666693687439, 0.8489999771118164, 0.8506666421890259, 0.8529999852180481, 0.8543333411216736, 0.8576666712760925, 0.8543333411216736, 0.859000027179718, 0.8579999804496765, 0.8533333539962769, 0.8536666631698608, 0.8616666793823242, 0.8603333234786987, 0.8656666874885559, 0.8616666793823242, 0.8603333234786987, 0.859666645526886, 0.8640000224113464, 0.8706666827201843, 0.8723333477973938, 0.8586666584014893, 0.862666666507721, 0.8673333525657654, 0.8683333396911621, 0.8690000176429749]}, "mapping_values": [1, 10, 5, 5, 3, 4, 3, 1, 2, 18, 11, 7, 2, 2, 1, 1, 0], "tree_depth": 21}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 1], [0, 6, 9, 8], [0], [0, 64], [1], [0], [2], [0]], "fitness": -0.8377143144607544, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6063731908798218, 0.8660618662834167, 0.7679901123046875, 0.6603457927703857, 0.6339393854141235, 0.6083437204360962, 0.5718761682510376, 0.5542511940002441, 0.5580627918243408, 0.5369145274162292, 0.5287045836448669, 0.5303758382797241, 0.5595170855522156, 0.5319327116012573, 0.535805881023407, 0.5045431852340698, 0.5106014013290405, 0.5268308520317078, 0.5246623158454895, 0.479759156703949, 0.5100995302200317, 0.5272976160049438, 0.547164261341095, 0.5658802390098572, 0.563628613948822], "accuracy": [0.45845991373062134, 0.6976621150970459, 0.7313432693481445, 0.7535332441329956, 0.7602694630622864, 0.7726852297782898, 0.7749306559562683, 0.8013472557067871, 0.7947431206703186, 0.8012151718139648, 0.802271842956543, 0.8088759779930115, 0.7946110367774963, 0.8078193068504333, 0.8096684813499451, 0.817461371421814, 0.8173292875289917, 0.8193105459213257, 0.8076872229576111, 0.8327829837799072, 0.8219521641731262, 0.8220842480659485, 0.8109893202781677, 0.7977809906005859, 0.8013472557067871], "val_loss": [0.8230602741241455, 0.7282838821411133, 0.6119037866592407, 0.5864877700805664, 0.5700918436050415, 0.5532768368721008, 0.5316169261932373, 0.5583266019821167, 0.531609833240509, 0.49330729246139526, 0.5143806338310242, 0.5784415006637573, 0.5642869472503662, 0.4825229048728943, 0.5220339894294739, 0.5156304240226746, 0.5279656648635864, 0.5309073328971863, 0.513356626033783, 0.5024119019508362, 0.5789806246757507, 0.5222089290618896, 0.5530665516853333, 0.5895078778266907, 0.5415037274360657], "val_accuracy": [0.7083333134651184, 0.7616666555404663, 0.7776666879653931, 0.7863333225250244, 0.7919999957084656, 0.7956666946411133, 0.8190000057220459, 0.8169999718666077, 0.8176666498184204, 0.8270000219345093, 0.8233333230018616, 0.8303333520889282, 0.8140000104904175, 0.8203333616256714, 0.8389999866485596, 0.8273333311080933, 0.8320000171661377, 0.8356666564941406, 0.8460000157356262, 0.8503333330154419, 0.840666651725769, 0.8316666483879089, 0.8240000009536743, 0.8180000185966492, 0.8276666402816772]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 5, 4, 1, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [6, 2, 3, 0, 9, 5], [0, 2, 0, 3], [16, 38, 62], [1, 1], [0], [4], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 3, 3, 6, 4, 1, 8, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 8, 5, 3, 3, 1, 0, 1, 0, 13, 6, 7, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma))", "other_info": {"loss": [2.3109805583953857, 2.3255808353424072, 2.3597264289855957, 2.419705867767334, 2.5494720935821533, 2.9764468669891357, 7.666945457458496, 15592.5615234375, 25903746.0, 2.3135857582092285, 2.3249053955078125], "accuracy": [0.09166556596755981, 0.07951393723487854, 0.07185312360525131, 0.07158895581960678, 0.07436270266771317, 0.08466517180204391, 0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.318150758743286, 2.344236135482788, 2.3903088569641113, 2.4755496978759766, 2.6900644302368164, 3.657140016555786, 30.068204879760742, 197356032.0, 2.3101465702056885, 2.3194479942321777, 2.333622932434082], "val_accuracy": [0.09000000357627869, 0.09099999815225601, 0.08966666460037231, 0.09466666728258133, 0.09833333641290665, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [65, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 57], [0, 1, 1], [1], [0, 3], [48], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 3, 1, 2, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [13, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 9, 2, 0, 3, 3], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 4, 4, 2, 8, 6], [0, 2, 0, 3, 4, 0, 3, 4, 2, 0, 6], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 2, 0, 1, 2, 1, 1, 1, 23, 12, 11, 4], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.pow(beta, tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.sqrt(tf.math.divide_no_nan(grad, beta)))), tf.constant(1.0, shape=shape, dtype=tf.float32)), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 8, 0, 3], [0, 1, 0, 2], [64, 39], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 1, 0], [0, 1, 9], [3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 2, 1, 4, 2, 8, 6, 0, 2, 4, 1, 1, 7, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 2, 2, 6, 4, 2, 7], [16, 99, 96, 99, 84, 72]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 1, 0, 1, 1, 4, 3, 1, 1, 35, 19, 16, 6], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(alpha), beta))))))), tf.math.add(tf.math.pow(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), beta), beta)), tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.negative(grad), grad), beta), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091, 0.10533333569765091]}}]