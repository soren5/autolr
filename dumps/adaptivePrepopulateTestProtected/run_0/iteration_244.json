[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8722857236862183, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2230212688446045, 1.8672086000442505, 1.3907347917556763, 1.0830100774765015, 0.9469724893569946, 0.8439319133758545, 0.7849341630935669, 0.7290077209472656, 0.6901453733444214, 0.6639882922172546, 0.6456466317176819, 0.6270190477371216, 0.603431224822998, 0.5900676250457764, 0.566764771938324, 0.5582588911056519, 0.5401577949523926, 0.5303605198860168, 0.5129159688949585, 0.5034637451171875, 0.49532490968704224, 0.48207274079322815, 0.47568461298942566, 0.4643944799900055, 0.45610958337783813, 0.44847601652145386, 0.4422537386417389, 0.42971035838127136, 0.4364778399467468, 0.4223044812679291, 0.42048460245132446, 0.41766485571861267, 0.40450626611709595, 0.39872416853904724, 0.3970595896244049, 0.3902587592601776, 0.3839831054210663, 0.38081324100494385, 0.3741947412490845, 0.36707961559295654, 0.3639906942844391, 0.3613869547843933, 0.35482484102249146, 0.35375145077705383, 0.3508383333683014, 0.3398071229457855, 0.3412923514842987, 0.327608197927475, 0.32368335127830505], "accuracy": [0.27724209427833557, 0.4939902126789093, 0.5672962665557861, 0.6256769299507141, 0.6647734642028809, 0.7034738063812256, 0.7186633348464966, 0.7405890822410583, 0.7548540234565735, 0.7574957013130188, 0.7713643908500671, 0.7725531458854675, 0.7844406366348267, 0.7857614755630493, 0.7943468689918518, 0.7997622489929199, 0.8067626357078552, 0.8057059645652771, 0.8138951063156128, 0.8239334225654602, 0.8232730031013489, 0.8231409192085266, 0.828292191028595, 0.8359529972076416, 0.8379341959953308, 0.8400475382804871, 0.8424250483512878, 0.8471800088882446, 0.847840428352356, 0.850350022315979, 0.848368763923645, 0.848368763923645, 0.8521991968154907, 0.8582749962806702, 0.8590674996376038, 0.8632941246032715, 0.8618412613868713, 0.8650112152099609, 0.8650112152099609, 0.8658037185668945, 0.8729361891746521, 0.8716153502464294, 0.8710870146751404, 0.8741249442100525, 0.8757099509239197, 0.8750495314598083, 0.876370370388031, 0.8829745054244995, 0.8861445188522339], "val_loss": [2.042490243911743, 1.526869297027588, 1.064033031463623, 0.8536350131034851, 0.7625378966331482, 0.7077973484992981, 0.656320333480835, 0.6167452931404114, 0.5894945859909058, 0.5645716190338135, 0.5467749834060669, 0.534385621547699, 0.5086941719055176, 0.4999609887599945, 0.4862472712993622, 0.4759353697299957, 0.46111994981765747, 0.45274800062179565, 0.44764989614486694, 0.43810808658599854, 0.4306449294090271, 0.4184069335460663, 0.41450420022010803, 0.41098520159721375, 0.40491142868995667, 0.3991842567920685, 0.39373165369033813, 0.393584281206131, 0.39211633801460266, 0.3842301368713379, 0.3802618682384491, 0.3775410056114197, 0.3731546998023987, 0.36537569761276245, 0.36868906021118164, 0.3678889274597168, 0.3594112992286682, 0.3573589324951172, 0.361304372549057, 0.35395166277885437, 0.3496891260147095, 0.35050463676452637, 0.3473472595214844, 0.34424832463264465, 0.34265801310539246, 0.347190260887146, 0.3436988592147827, 0.3366779386997223, 0.337361216545105], "val_accuracy": [0.5339999794960022, 0.6520000100135803, 0.6743333339691162, 0.6970000267028809, 0.7266666889190674, 0.737666666507721, 0.7590000033378601, 0.7713333368301392, 0.7773333191871643, 0.7896666526794434, 0.7940000295639038, 0.8016666769981384, 0.8186666369438171, 0.8183333277702332, 0.8203333616256714, 0.8209999799728394, 0.8306666612625122, 0.8320000171661377, 0.8386666774749756, 0.8366666436195374, 0.8429999947547913, 0.8473333120346069, 0.8473333120346069, 0.8476666808128357, 0.8513333201408386, 0.8489999771118164, 0.8573333621025085, 0.8513333201408386, 0.8600000143051147, 0.8560000061988831, 0.859333336353302, 0.8576666712760925, 0.8573333621025085, 0.8616666793823242, 0.8600000143051147, 0.8656666874885559, 0.862333357334137, 0.862666666507721, 0.8653333187103271, 0.8683333396911621, 0.8690000176429749, 0.862666666507721, 0.8676666617393494, 0.8723333477973938, 0.8659999966621399, 0.8636666536331177, 0.8676666617393494, 0.8703333139419556, 0.8690000176429749]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 1], [0, 5, 2], [0, 0], [0, 2], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.840571403503418, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294604539871216, 2.1926145553588867, 1.7786957025527954, 1.3471399545669556, 1.1009840965270996, 0.9208006858825684, 0.846237301826477, 0.806377649307251, 0.7524055242538452, 0.7387002110481262, 0.7043451070785522, 0.6917938590049744, 0.6621896028518677, 0.6293157935142517, 0.5977268815040588, 0.5917074680328369, 0.5927614569664001, 0.5849116444587708, 0.5603154897689819, 0.555540144443512, 0.545634925365448, 0.532635509967804, 0.5218855142593384, 0.5126436948776245, 0.5070570707321167, 0.48294636607170105, 0.4929548501968384, 0.4789750576019287, 0.4786621034145355, 0.44985324144363403, 0.4473775327205658, 0.43441829085350037, 0.43792209029197693, 0.425615519285202, 0.42244160175323486], "accuracy": [0.12574297189712524, 0.32664114236831665, 0.44327038526535034, 0.5406154990196228, 0.6296393871307373, 0.6621318459510803, 0.6897371411323547, 0.7017567157745361, 0.7078325152397156, 0.7152291536331177, 0.7279091477394104, 0.7308149337768555, 0.7416457533836365, 0.7548540234565735, 0.7637035846710205, 0.776251494884491, 0.7810064554214478, 0.774270236492157, 0.7865539789199829, 0.7885351777076721, 0.7957997918128967, 0.791969358921051, 0.800818920135498, 0.8035926818847656, 0.804649293422699, 0.8185180425643921, 0.813498854637146, 0.8156121969223022, 0.8152159452438354, 0.8259146809577942, 0.8251221776008606, 0.8294808864593506, 0.8272355198860168, 0.8313300609588623, 0.8327829837799072], "val_loss": [2.247628688812256, 2.0313639640808105, 1.170724630355835, 0.9219895601272583, 0.7908849120140076, 0.7369393706321716, 0.6993822455406189, 0.684951663017273, 0.6690823435783386, 0.6393029093742371, 0.5940172076225281, 0.5914627909660339, 0.5688498616218567, 0.5688220262527466, 0.5594333410263062, 0.5528767704963684, 0.5536549687385559, 0.5391513109207153, 0.5393978953361511, 0.5155869722366333, 0.5164196491241455, 0.5076757669448853, 0.5163924098014832, 0.5004429817199707, 0.5069350004196167, 0.5027557015419006, 0.4942243695259094, 0.46887317299842834, 0.46220889687538147, 0.4640873074531555, 0.46829110383987427, 0.4542306363582611, 0.4431821405887604, 0.438401460647583, 0.4429915249347687], "val_accuracy": [0.4233333468437195, 0.46966665983200073, 0.6320000290870667, 0.6796666383743286, 0.7166666388511658, 0.7226666808128357, 0.7393333315849304, 0.746999979019165, 0.7456666827201843, 0.7556666731834412, 0.7710000276565552, 0.7573333382606506, 0.778333306312561, 0.7803333401679993, 0.7816666960716248, 0.7916666865348816, 0.7903333306312561, 0.7950000166893005, 0.7963333129882812, 0.8023333549499512, 0.8190000057220459, 0.8223333358764648, 0.8109999895095825, 0.8259999752044678, 0.8206666707992554, 0.8169999718666077, 0.8190000057220459, 0.82833331823349, 0.8346666693687439, 0.8443333506584167, 0.8320000171661377, 0.8323333263397217, 0.8443333506584167, 0.8396666646003723, 0.843999981880188]}, "mapping_values": [1, 10, 5, 5, 3, 5, 3, 2, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.484282374382019, 0.7991762757301331, 0.6625303030014038, 0.6225089430809021, 0.5745111107826233, 0.5355846881866455, 0.47774243354797363, 0.5089136958122253, 0.4914473593235016, 0.4833260476589203, 0.49157655239105225, 0.47472918033599854], "accuracy": [0.4785365164279938, 0.7217012047767639, 0.7621186375617981, 0.7672698497772217, 0.7893276810646057, 0.7977809906005859, 0.8182538747787476, 0.8235371708869934, 0.8238013386726379, 0.8178576231002808, 0.8191784620285034, 0.8305375576019287], "val_loss": [0.8297455906867981, 0.6333863139152527, 0.5879599452018738, 0.5514097213745117, 0.5329434871673584, 0.49877241253852844, 0.48442354798316956, 0.5803238749504089, 0.5350375175476074, 0.5465277433395386, 0.5278379917144775, 0.5295554399490356], "val_accuracy": [0.7183333039283752, 0.7803333401679993, 0.7886666655540466, 0.8029999732971191, 0.8233333230018616, 0.8220000267028809, 0.8420000076293945, 0.8349999785423279, 0.82833331823349, 0.8366666436195374, 0.8336666822433472, 0.8413333296775818]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [6, 8, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 4, 3, 6, 8, 1, 4, 6, 4, 2, 8], [0, 0, 0, 3, 0, 3, 3, 1, 2, 0], [16, 48, 96, 99, 66, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 10, 5, 5, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3032729625701904, 2.3025851249694824, 2.3025851249694824, 2.3025853633880615, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10038304328918457, 0.1006472036242485, 0.09826971590518951, 0.10210011899471283, 0.09826971590518951, 0.09893012791872025], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025848865509033], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.09733333438634872, 0.10133333504199982, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 8, 0, 3, 5], [0, 2, 1, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 3, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 6, 4, 2, 1, 2, 1, 1, 1, 18, 9, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), sigma)", "other_info": {"loss": [2.3110344409942627, 2.3113739490509033, 2.3113319873809814, 2.311854600906372, 2.3158557415008545, 2.3187098503112793, 2.321040391921997, 2.326528310775757, 2.32316517829895], "accuracy": [0.09391097724437714, 0.09047681838274002, 0.0956280529499054, 0.09721305221319199, 0.09721305221319199, 0.09126931428909302, 0.09945846349000931, 0.10091137140989304, 0.10513802617788315], "val_loss": [2.3093535900115967, 2.309525489807129, 2.309638500213623, 2.3097357749938965, 2.309964895248413, 2.3105132579803467, 2.311570882797241, 2.3133139610290527, 2.3158750534057617], "val_accuracy": [0.09966666996479034, 0.10066666454076767, 0.10100000351667404, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0], [0, 2, 3, 1, 9, 3, 8, 2, 4, 2, 0, 9, 1, 7, 9, 8], [0, 3, 2, 0, 3, 1, 3, 3, 4], [0, 27, 16, 0, 46, 59], [0, 0, 0, 1, 1, 1], [0, 6, 5], [0, 7, 2], [0, 48], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0], [2, 3, 3, 0, 8, 1, 6, 1, 4, 2, 8], [2, 6, 6, 3, 2, 1, 4, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 2, 8, 5, 3, 2, 5, 3, 2, 1, 11, 6, 5, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(beta, grad), tf.math.negative(tf.math.sqrt(grad))), tf.math.subtract(sigma, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [87, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 0, 3], [16, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 28, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 0, 16, 8, 8, 5], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.3320634365081787, 2.6385498046875, 3.572227954864502, 5.360367774963379, 8.332110404968262, 10.463946342468262], "accuracy": [0.09932637959718704, 0.0940430611371994, 0.10051512718200684, 0.10157178342342377, 0.09628847241401672, 0.09853387624025345], "val_loss": [2.356194257736206, 2.7188456058502197, 3.7487175464630127, 5.935321807861328, 7.629261016845703, 5.534722805023193], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]