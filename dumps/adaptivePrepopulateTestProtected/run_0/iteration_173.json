[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8674286007881165, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.224836826324463, 1.8730125427246094, 1.407572627067566, 1.096535325050354, 0.9431145191192627, 0.8415631651878357, 0.7871997952461243, 0.7319297194480896, 0.6901727318763733, 0.6665769219398499, 0.6384019255638123, 0.6142231822013855, 0.5960513949394226, 0.5878011584281921, 0.567048192024231, 0.5518262386322021, 0.53794264793396, 0.5150712728500366, 0.503534197807312, 0.49746671319007874, 0.4913106858730316, 0.48083242774009705, 0.468075692653656, 0.4568089544773102, 0.4641816318035126, 0.44144949316978455, 0.43539759516716003, 0.4307643473148346, 0.4158009886741638, 0.4145278334617615, 0.40710633993148804, 0.39964544773101807, 0.3921540379524231, 0.3891274034976959, 0.3837967813014984, 0.37900814414024353, 0.3680696189403534, 0.37627631425857544, 0.3568260967731476, 0.3525046408176422, 0.3483096957206726, 0.3424299955368042, 0.34006085991859436, 0.3336203396320343, 0.32737836241722107, 0.32506614923477173, 0.31846970319747925, 0.310303658246994, 0.3017266094684601, 0.3018946647644043, 0.2947271764278412, 0.2935018837451935, 0.295543909072876, 0.29355624318122864, 0.28389427065849304, 0.2820185720920563, 0.2742125988006592, 0.26702558994293213, 0.26507246494293213, 0.2625194489955902, 0.25955018401145935, 0.2592218816280365, 0.25446078181266785, 0.24598237872123718, 0.24201837182044983, 0.24557256698608398, 0.2343471348285675, 0.23266342282295227, 0.23581179976463318, 0.23315151035785675, 0.2298794537782669, 0.21853774785995483, 0.22002209722995758, 0.21887940168380737, 0.2113221436738968, 0.21200565993785858, 0.21372011303901672, 0.20307068526744843], "accuracy": [0.2665433883666992, 0.47906485199928284, 0.5589750409126282, 0.6145819425582886, 0.6664905548095703, 0.6963412761688232, 0.7191916704177856, 0.7321357727050781, 0.7485140562057495, 0.7581561207771301, 0.769911527633667, 0.7784969210624695, 0.7814027070999146, 0.7902522683143616, 0.7965922355651855, 0.7998943328857422, 0.8087438941001892, 0.8133667707443237, 0.8248580098152161, 0.8245938420295715, 0.8232730031013489, 0.8247259259223938, 0.8354246616363525, 0.8363492488861084, 0.8345000743865967, 0.8428213000297546, 0.8469158411026001, 0.8449346423149109, 0.8536521196365356, 0.8539162874221802, 0.856689989566803, 0.8605204224586487, 0.863029956817627, 0.8578787446022034, 0.8632941246032715, 0.8638224601745605, 0.8730682730674744, 0.8636903762817383, 0.8768987059593201, 0.8755778670310974, 0.8765024542808533, 0.8787478804588318, 0.8792761564254761, 0.8829745054244995, 0.8821820020675659, 0.8803328275680542, 0.8878615498542786, 0.8898428082466125, 0.8882578015327454, 0.8882578015327454, 0.8967111110687256, 0.8918240666389465, 0.8914278149604797, 0.8923524022102356, 0.8948619961738586, 0.8976356983184814, 0.89988112449646, 0.9084665179252625, 0.9051644206047058, 0.9062210917472839, 0.9062210917472839, 0.9058248400688171, 0.9088627696037292, 0.9128252267837524, 0.9120327830314636, 0.9125610589981079, 0.9141460657119751, 0.9116365313529968, 0.9108440279960632, 0.9152027368545532, 0.9178444147109985, 0.9253731369972229, 0.9186369180679321, 0.9223352074623108, 0.9228635430335999, 0.9249768853187561, 0.9218068718910217, 0.927882730960846], "val_loss": [2.0448648929595947, 1.521533489227295, 1.043082356452942, 0.8239428997039795, 0.733277440071106, 0.6830350160598755, 0.6351205706596375, 0.6031275391578674, 0.574215292930603, 0.5553333163261414, 0.5356588363647461, 0.523414134979248, 0.5087576508522034, 0.496743768453598, 0.48742449283599854, 0.4751773178577423, 0.46439576148986816, 0.4609176814556122, 0.44974276423454285, 0.4460665285587311, 0.43763619661331177, 0.4309751093387604, 0.43268710374832153, 0.4260377287864685, 0.41464143991470337, 0.41954734921455383, 0.40719282627105713, 0.4027339220046997, 0.4013844430446625, 0.3953791558742523, 0.392835408449173, 0.39354321360588074, 0.39260855317115784, 0.3853004276752472, 0.38978245854377747, 0.380435049533844, 0.37604662775993347, 0.3797743022441864, 0.37344619631767273, 0.37005868554115295, 0.36631810665130615, 0.36657291650772095, 0.3675452768802643, 0.3640190362930298, 0.35896721482276917, 0.36286434531211853, 0.3601490557193756, 0.359518826007843, 0.3546673655509949, 0.35304170846939087, 0.3588971495628357, 0.35674911737442017, 0.3537595272064209, 0.35020390152931213, 0.35090067982673645, 0.34712865948677063, 0.356383353471756, 0.35262495279312134, 0.3547512888908386, 0.34681379795074463, 0.3542425036430359, 0.3481617867946625, 0.3455478549003601, 0.34821370244026184, 0.347705602645874, 0.3479694426059723, 0.34951257705688477, 0.34640225768089294, 0.34619155526161194, 0.34833812713623047, 0.3492656946182251, 0.3456484079360962, 0.34726908802986145, 0.3488169014453888, 0.3452262878417969, 0.3518379032611847, 0.34793293476104736, 0.3449206054210663], "val_accuracy": [0.543666660785675, 0.6576666831970215, 0.6869999766349792, 0.7120000123977661, 0.7406666874885559, 0.7576666474342346, 0.7673333287239075, 0.7776666879653931, 0.7860000133514404, 0.7963333129882812, 0.7979999780654907, 0.8056666851043701, 0.8100000023841858, 0.8173333406448364, 0.8220000267028809, 0.8216666579246521, 0.8266666531562805, 0.8256666660308838, 0.8330000042915344, 0.8316666483879089, 0.8373333215713501, 0.8413333296775818, 0.8393333554267883, 0.840666651725769, 0.8460000157356262, 0.8453333377838135, 0.8513333201408386, 0.8526666760444641, 0.8529999852180481, 0.8500000238418579, 0.8550000190734863, 0.8556666374206543, 0.8529999852180481, 0.859333336353302, 0.8576666712760925, 0.859000027179718, 0.862666666507721, 0.8610000014305115, 0.8646666407585144, 0.8616666793823242, 0.8663333058357239, 0.8696666955947876, 0.8666666746139526, 0.8676666617393494, 0.871999979019165, 0.8690000176429749, 0.871999979019165, 0.871666669845581, 0.8730000257492065, 0.8736666440963745, 0.8723333477973938, 0.8733333349227905, 0.8740000128746033, 0.8743333220481873, 0.8773333430290222, 0.875333309173584, 0.8730000257492065, 0.8730000257492065, 0.8706666827201843, 0.8790000081062317, 0.8703333139419556, 0.8756666779518127, 0.878333330154419, 0.8816666603088379, 0.8756666779518127, 0.8776666522026062, 0.878333330154419, 0.8740000128746033, 0.8820000290870667, 0.8799999952316284, 0.8790000081062317, 0.8790000081062317, 0.8840000033378601, 0.8816666603088379, 0.8809999823570251, 0.8790000081062317, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8571428656578064, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294372320175171, 2.1900100708007812, 1.7687383890151978, 1.3333723545074463, 1.051518201828003, 0.8844670653343201, 0.8221256136894226, 0.7979440093040466, 0.7529982328414917, 0.7274014949798584, 0.6888515949249268, 0.6738826036453247, 0.6345847249031067, 0.6168893575668335, 0.5966521501541138, 0.5732458829879761, 0.5540679097175598, 0.5543472766876221, 0.5461640954017639, 0.5199167728424072, 0.514646589756012, 0.5077840685844421, 0.5032496452331543, 0.49404624104499817, 0.48205068707466125, 0.4791277050971985, 0.4633059501647949, 0.45697927474975586, 0.44398337602615356, 0.4352070391178131, 0.43464726209640503, 0.4125467836856842, 0.4149835705757141, 0.416028767824173, 0.4021182060241699, 0.38804328441619873, 0.380570650100708, 0.38773295283317566, 0.3748232126235962, 0.36460158228874207, 0.34969761967658997, 0.35994425415992737, 0.34505125880241394, 0.3423442244529724, 0.3362589478492737, 0.3425913155078888, 0.31484463810920715, 0.30954527854919434, 0.30493760108947754, 0.3089852035045624, 0.30266720056533813, 0.3010789453983307, 0.30531901121139526, 0.2969111502170563, 0.2802750766277313, 0.2838718891143799, 0.27681052684783936, 0.27513760328292847, 0.27979207038879395, 0.29619717597961426], "accuracy": [0.12495046854019165, 0.32967904210090637, 0.4399682879447937, 0.5523709058761597, 0.6468101739883423, 0.6763967871665955, 0.7045304179191589, 0.7041342258453369, 0.7113987803459167, 0.7190595865249634, 0.7411174178123474, 0.7387399077415466, 0.7598732113838196, 0.7687227725982666, 0.7734777331352234, 0.7799497842788696, 0.7893276810646057, 0.7853652238845825, 0.791441023349762, 0.7992339134216309, 0.7956677079200745, 0.8050455451011658, 0.809140145778656, 0.8104609847068787, 0.8109893202781677, 0.8202351331710815, 0.8183859586715698, 0.8248580098152161, 0.8309338092803955, 0.8341038227081299, 0.8321225643157959, 0.8376700282096863, 0.8411042094230652, 0.8378021121025085, 0.844010055065155, 0.8536521196365356, 0.8507462739944458, 0.8470479249954224, 0.8532558679580688, 0.8625016212463379, 0.8652753829956055, 0.8597279191017151, 0.86118084192276, 0.8665962219238281, 0.8709549307823181, 0.863558292388916, 0.876370370388031, 0.8815215826034546, 0.8802007436752319, 0.8774270415306091, 0.8782195448875427, 0.8780874609947205, 0.8802007436752319, 0.882710337638855, 0.8902390599250793, 0.8916919827461243, 0.8927486538887024, 0.8928807377815247, 0.8910315632820129, 0.8776912093162537], "val_loss": [2.246259927749634, 2.020188808441162, 1.1225461959838867, 0.8382483124732971, 0.7457455992698669, 0.6922778487205505, 0.6477065086364746, 0.6409636735916138, 0.6361032724380493, 0.5937918424606323, 0.5528081655502319, 0.5408274531364441, 0.5303142070770264, 0.5251879692077637, 0.509611964225769, 0.4975663125514984, 0.4877620339393616, 0.48226073384284973, 0.4813983142375946, 0.4729357957839966, 0.4703826606273651, 0.4711793065071106, 0.4558221697807312, 0.4520251452922821, 0.44588902592658997, 0.446570485830307, 0.43121492862701416, 0.4281257688999176, 0.4377536475658417, 0.429352730512619, 0.4190044701099396, 0.425049751996994, 0.42524293065071106, 0.41807615756988525, 0.40952035784721375, 0.4062676727771759, 0.40983301401138306, 0.39755305647850037, 0.3914596736431122, 0.39523839950561523, 0.4126838743686676, 0.4001041352748871, 0.4014207422733307, 0.3961106836795807, 0.39275112748146057, 0.39348554611206055, 0.3973256051540375, 0.40142157673835754, 0.3939676582813263, 0.39483654499053955, 0.39142856001853943, 0.3987853527069092, 0.4100751578807831, 0.40825706720352173, 0.4179359972476959, 0.42263859510421753, 0.41198593378067017, 0.4242077171802521, 0.4214481711387634, 0.4170088768005371], "val_accuracy": [0.42233332991600037, 0.4580000042915344, 0.656000018119812, 0.7043333053588867, 0.734000027179718, 0.7443333268165588, 0.7459999918937683, 0.7599999904632568, 0.7606666684150696, 0.7666666507720947, 0.7866666913032532, 0.793666660785675, 0.7946666479110718, 0.7996666431427002, 0.8036666512489319, 0.8086666464805603, 0.812333345413208, 0.8159999847412109, 0.8106666803359985, 0.8256666660308838, 0.8273333311080933, 0.8223333358764648, 0.8276666402816772, 0.8309999704360962, 0.8410000205039978, 0.8426666855812073, 0.8376666903495789, 0.8433333039283752, 0.8456666469573975, 0.8476666808128357, 0.8493333458900452, 0.8463333249092102, 0.8460000157356262, 0.8483333587646484, 0.8553333282470703, 0.8606666922569275, 0.8569999933242798, 0.862666666507721, 0.8643333315849304, 0.8603333234786987, 0.8636666536331177, 0.8579999804496765, 0.8616666793823242, 0.8656666874885559, 0.8669999837875366, 0.8656666874885559, 0.8659999966621399, 0.8653333187103271, 0.8686666488647461, 0.862666666507721, 0.8669999837875366, 0.8700000047683716, 0.8733333349227905, 0.8743333220481873, 0.8769999742507935, 0.8743333220481873, 0.8769999742507935, 0.8703333139419556, 0.8726666569709778, 0.8706666827201843]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8254285454750061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.488832950592041, 0.7741509079933167, 0.6653425097465515, 0.5962157249450684, 0.5712531208992004, 0.553842306137085, 0.5352107882499695, 0.5230491757392883, 0.5301380157470703, 0.5370767116546631, 0.5007338523864746, 0.4915572702884674, 0.49169212579727173, 0.49807316064834595, 0.4847233295440674, 0.45302659273147583, 0.47598370909690857, 0.45954737067222595, 0.5216720700263977, 0.5020885467529297, 0.5022163391113281, 0.5240347981452942], "accuracy": [0.47510236501693726, 0.7317395210266113, 0.755118191242218, 0.7845727205276489, 0.7921014428138733, 0.8006868362426758, 0.8038568496704102, 0.8153480291366577, 0.8117818236351013, 0.8034605979919434, 0.8222163319587708, 0.8273676037788391, 0.8297450542449951, 0.8156121969223022, 0.8239334225654602, 0.8354246616363525, 0.8342359066009521, 0.8379341959953308, 0.8274996876716614, 0.8257825970649719, 0.8249900937080383, 0.8206313848495483], "val_loss": [0.8216091990470886, 0.6114113330841064, 0.5316864252090454, 0.5509262681007385, 0.4855237603187561, 0.48410269618034363, 0.47816407680511475, 0.480677992105484, 0.4981035888195038, 0.4679979681968689, 0.5010237693786621, 0.49106428027153015, 0.49269071221351624, 0.4496730864048004, 0.44924333691596985, 0.4908394515514374, 0.4813809394836426, 0.5320713520050049, 0.5409643054008484, 0.5203534960746765, 0.5239349603652954, 0.5252265334129333], "val_accuracy": [0.734000027179718, 0.7770000100135803, 0.8100000023841858, 0.8036666512489319, 0.82833331823349, 0.8253333568572998, 0.8276666402816772, 0.8240000009536743, 0.8173333406448364, 0.840666651725769, 0.8356666564941406, 0.8389999866485596, 0.8236666917800903, 0.8316666483879089, 0.8453333377838135, 0.8393333554267883, 0.8533333539962769, 0.8343333601951599, 0.8410000205039978, 0.8270000219345093, 0.8349999785423279, 0.8333333134651184]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [46], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 4, 3, 0, 0, 2, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), beta)))), alpha), tf.math.add(tf.math.sqrt(grad), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 1, 0, 1, 1, 21, 11, 10, 5], "tree_depth": 17}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1], [2, 2, 8, 1, 3, 5], [0, 0, 1, 0, 2], [39, 39, 78], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [4, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 9], [0], [0, 98, 50], [1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 15, 8, 7, 3, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(grad, tf.constant(0.0, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [90849544.0, 1770179200.0, 8200694784.0, 22950834176.0, 48775782400.0, 90660593664.0], "accuracy": [0.10685510188341141, 0.10460969805717468, 0.09959053993225098, 0.09747721254825592, 0.10236428678035736, 0.09298639744520187], "val_loss": [418526272.0, 3347224576.0, 11295796224.0, 26773972992.0, 52291440640.0, 90358038528.0], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 1, 2, 5, 2, 2], [0, 0, 1, 0, 2, 0, 0], [0, 39, 39, 33, 75], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3, 5], [0, 0, 2, 0, 3, 1, 0], [16, 16], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 6, 4, 7, 3, 6, 0, 5, 9, 1, 7, 2, 9, 7, 3, 9, 1], [0, 4, 6, 5, 4, 6, 1, 0, 7, 4], [99, 21, 70, 95, 13], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 6, 6, 8, 1, 4, 1, 4, 6, 8], [2, 0, 1, 0, 0, 5, 6, 7, 1, 0], [0, 46, 7, 20]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 8, 7, 5, 7, 4, 3, 2, 26, 17, 9, 5, 21, 11, 10, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(grad, tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.square(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, tf.math.add(tf.math.add(grad, grad), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), grad), grad), tf.math.add(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(beta, tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha)), tf.math.pow(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), grad)))), grad), tf.math.sqrt(grad)), alpha), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 8], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [0, 3, 7, 5, 8, 1, 2, 6, 4, 7, 6, 6, 9, 0, 9], [0, 5, 7, 7, 1, 0, 7, 0], [99, 81, 15, 95, 32], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 2, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 3, 10, 6, 4, 2, 23, 15, 8, 5, 12, 6, 6, 4], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.square(tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, grad)), tf.math.add(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), grad))), tf.math.negative(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]