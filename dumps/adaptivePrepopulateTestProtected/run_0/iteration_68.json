[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8548571467399597, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2236487865448, 1.871852993965149, 1.4035446643829346, 1.1034369468688965, 0.9553561806678772, 0.8488410115242004, 0.787837028503418, 0.736838161945343, 0.699255108833313, 0.670689582824707, 0.648027777671814, 0.6235136985778809, 0.6107637286186218, 0.5849810242652893, 0.5733804106712341, 0.5495153069496155, 0.5389697551727295, 0.5219340920448303, 0.5142868757247925, 0.5037940740585327, 0.4943731427192688, 0.48029038310050964, 0.4784088134765625, 0.46578139066696167, 0.45810726284980774, 0.45007210969924927, 0.4410802721977234, 0.43433550000190735, 0.42284199595451355, 0.4213283956050873, 0.4071545898914337, 0.40863388776779175, 0.4029124677181244, 0.3963211178779602, 0.38181886076927185, 0.3799969553947449, 0.3759373426437378, 0.3672120273113251, 0.3602451682090759, 0.3567672073841095, 0.3567391037940979, 0.3457680642604828, 0.33966419100761414, 0.34283316135406494, 0.33325013518333435, 0.3295075297355652, 0.31981879472732544, 0.32166916131973267, 0.3189631998538971, 0.3168596923351288], "accuracy": [0.27420419454574585, 0.4799894392490387, 0.5610883831977844, 0.6155065298080444, 0.6610751748085022, 0.6951525807380676, 0.7172104120254517, 0.7294940948486328, 0.7449478507041931, 0.7524765729904175, 0.7671377658843994, 0.7740060687065125, 0.7814027070999146, 0.7835160493850708, 0.7913089394569397, 0.7994980812072754, 0.8064984679222107, 0.8125742673873901, 0.8162726163864136, 0.8191784620285034, 0.8241975903511047, 0.8260467648506165, 0.8318583965301514, 0.8297450542449951, 0.8345000743865967, 0.8408400416374207, 0.8424250483512878, 0.8445383906364441, 0.8510104417800903, 0.8515387773513794, 0.8532558679580688, 0.8531237840652466, 0.8578787446022034, 0.858671247959137, 0.8632941246032715, 0.8636903762817383, 0.868049144744873, 0.8664641380310059, 0.8737286925315857, 0.870030403137207, 0.8735966086387634, 0.8750495314598083, 0.8778232932090759, 0.8754457831382751, 0.8836349248886108, 0.8804649114608765, 0.8844274282455444, 0.8854840993881226, 0.8849557638168335, 0.8845595121383667], "val_loss": [2.0382559299468994, 1.5095125436782837, 1.0345507860183716, 0.8177040815353394, 0.7297991514205933, 0.6757400035858154, 0.6253001689910889, 0.5905982851982117, 0.5660626888275146, 0.5444945693016052, 0.5288501977920532, 0.5121634602546692, 0.4982386827468872, 0.48774927854537964, 0.4733210802078247, 0.46244776248931885, 0.4560287594795227, 0.4464350640773773, 0.436248242855072, 0.43155795335769653, 0.42372846603393555, 0.4179016053676605, 0.418781578540802, 0.41042864322662354, 0.40324315428733826, 0.39811840653419495, 0.3940882980823517, 0.39454084634780884, 0.387611985206604, 0.38374292850494385, 0.3794386088848114, 0.38290056586265564, 0.376532644033432, 0.37310442328453064, 0.37211450934410095, 0.36557504534721375, 0.364795446395874, 0.3624510169029236, 0.3599225580692291, 0.35849446058273315, 0.35692888498306274, 0.3527281880378723, 0.3548911511898041, 0.34999194741249084, 0.3491848409175873, 0.350277841091156, 0.34958720207214355, 0.3509877920150757, 0.34134891629219055, 0.34264346957206726], "val_accuracy": [0.5463333129882812, 0.6646666526794434, 0.687666654586792, 0.7160000205039978, 0.7360000014305115, 0.753333330154419, 0.7606666684150696, 0.7770000100135803, 0.7876666784286499, 0.7996666431427002, 0.8036666512489319, 0.8130000233650208, 0.8113333582878113, 0.8236666917800903, 0.8293333053588867, 0.8346666693687439, 0.840666651725769, 0.8373333215713501, 0.8460000157356262, 0.8500000238418579, 0.8489999771118164, 0.8533333539962769, 0.8486666679382324, 0.8566666841506958, 0.8569999933242798, 0.8583333492279053, 0.8586666584014893, 0.8600000143051147, 0.862666666507721, 0.8633333444595337, 0.8646666407585144, 0.862333357334137, 0.8646666407585144, 0.8679999709129333, 0.8669999837875366, 0.8690000176429749, 0.8676666617393494, 0.8693333268165588, 0.8713333606719971, 0.8733333349227905, 0.8683333396911621, 0.8709999918937683, 0.8690000176429749, 0.8736666440963745, 0.8763333559036255, 0.8756666779518127, 0.8759999871253967, 0.8743333220481873, 0.8763333559036255, 0.8763333559036255]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 3, 6, 6, 2, 8, 4, 1, 6, 7, 3, 6, 0, 8, 1, 9, 5, 8, 2, 4, 3, 8, 6, 2], [0, 1, 1, 5, 4, 7, 0, 6, 0, 6, 7, 1, 1, 7, 7, 2], [0, 65, 27, 95], [0, 1], [0], [1], [0]], "fitness": -0.842285692691803, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.pow(tf.math.subtract(tf.math.divide_no_nan(alpha, alpha), tf.math.add(tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))))), tf.math.sqrt(grad)), tf.math.add(tf.math.pow(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad), tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), grad)))), grad)), tf.math.sqrt(tf.math.divide_no_nan(alpha, tf.math.add(alpha, grad))))), grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.29377818107605, 2.1904447078704834, 1.7627148628234863, 1.3508230447769165, 1.069993495941162, 0.91470867395401, 0.8392002582550049, 0.8236642479896545, 0.7721517086029053, 0.7444511651992798, 0.7199036478996277, 0.68427574634552, 0.6543328166007996, 0.6257116198539734, 0.6112063527107239, 0.5896679759025574, 0.5681350827217102, 0.5661342144012451, 0.5573748350143433, 0.54718416929245, 0.5320579409599304, 0.5295521020889282, 0.5118194222450256, 0.5095553994178772, 0.49723315238952637, 0.4858521521091461, 0.4694381058216095, 0.45079320669174194, 0.45502182841300964, 0.4528067708015442, 0.4398193657398224, 0.4372183680534363, 0.4239092469215393, 0.42261871695518494, 0.4046602249145508, 0.40462884306907654, 0.39360377192497253, 0.3927391469478607, 0.39386457204818726, 0.3679443597793579, 0.36992067098617554, 0.36167392134666443, 0.35038992762565613, 0.34890154004096985, 0.34442776441574097, 0.3322947025299072, 0.3369557559490204, 0.3238540291786194, 0.31815779209136963], "accuracy": [0.1278562992811203, 0.31805574893951416, 0.45132744312286377, 0.547087550163269, 0.6321489810943604, 0.6691322326660156, 0.6954167485237122, 0.700171709060669, 0.6997754573822021, 0.7112666964530945, 0.7331924438476562, 0.7337207794189453, 0.750231146812439, 0.7637035846710205, 0.7734777331352234, 0.7823272943496704, 0.7861577272415161, 0.7800818681716919, 0.783119797706604, 0.7910447716712952, 0.7911768555641174, 0.796328067779541, 0.8055738806724548, 0.8068947196006775, 0.8063663840293884, 0.8158763647079468, 0.8161405324935913, 0.8280280232429504, 0.8267071843147278, 0.8318583965301514, 0.8384625315666199, 0.8300092220306396, 0.8411042094230652, 0.8437458872795105, 0.8441421389579773, 0.8482366800308228, 0.8543124794960022, 0.8524633646011353, 0.8533879518508911, 0.8590674996376038, 0.8565579056739807, 0.8667283058166504, 0.8658037185668945, 0.8672566413879395, 0.8705587387084961, 0.8767666220664978, 0.8696341514587402, 0.8702945709228516, 0.8716153502464294], "val_loss": [2.2454211711883545, 2.0181164741516113, 1.1246999502182007, 0.868355393409729, 0.7699999809265137, 0.7049961090087891, 0.7032245993614197, 0.6749082207679749, 0.657446026802063, 0.6343026757240295, 0.5882654786109924, 0.5750418901443481, 0.5687352418899536, 0.5595695972442627, 0.5430186986923218, 0.5429509878158569, 0.5301579833030701, 0.5255469679832458, 0.5411279797554016, 0.5244281888008118, 0.5217594504356384, 0.5068373084068298, 0.5162233710289001, 0.48783859610557556, 0.4914722144603729, 0.4838384985923767, 0.4687778055667877, 0.45372095704078674, 0.46487048268318176, 0.46653416752815247, 0.4572308659553528, 0.44907522201538086, 0.4489351511001587, 0.44561707973480225, 0.44118207693099976, 0.44583365321159363, 0.4510146975517273, 0.44680777192115784, 0.449920117855072, 0.4562382102012634, 0.450492262840271, 0.4503245949745178, 0.458116739988327, 0.4777989387512207, 0.4637766182422638, 0.45947265625, 0.4380779564380646, 0.4492262303829193, 0.45820966362953186], "val_accuracy": [0.4129999876022339, 0.46166667342185974, 0.6433333158493042, 0.6956666707992554, 0.7179999947547913, 0.7356666922569275, 0.7419999837875366, 0.7366666793823242, 0.7476666569709778, 0.762333333492279, 0.7733333110809326, 0.7763333320617676, 0.784333348274231, 0.7913333177566528, 0.796999990940094, 0.793666660785675, 0.8040000200271606, 0.8003333210945129, 0.79666668176651, 0.7986666560173035, 0.8083333373069763, 0.8119999766349792, 0.8076666593551636, 0.8259999752044678, 0.8216666579246521, 0.8259999752044678, 0.8326666951179504, 0.8416666388511658, 0.8326666951179504, 0.8399999737739563, 0.8376666903495789, 0.8386666774749756, 0.8453333377838135, 0.8460000157356262, 0.8486666679382324, 0.8473333120346069, 0.8450000286102295, 0.8496666550636292, 0.8506666421890259, 0.8506666421890259, 0.8496666550636292, 0.8526666760444641, 0.856333315372467, 0.8583333492279053, 0.8583333492279053, 0.8583333492279053, 0.8546666502952576, 0.8533333539962769, 0.8569999933242798]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 40, 24, 16, 4, 2, 1, 1, 0], "tree_depth": 33}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1], [0, 0, 0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8302857279777527, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4664745330810547, 0.7865393757820129, 0.6619679927825928, 0.6029390692710876, 0.5751866102218628, 0.5285254120826721, 0.554078221321106, 0.5315848588943481, 0.51002037525177, 0.5111100077629089, 0.474448561668396, 0.48898690938949585, 0.45000937581062317, 0.4651365280151367, 0.4566323161125183, 0.478141188621521, 0.4592342674732208, 0.4659457504749298, 0.4782136380672455, 0.4912038743495941, 0.4816969633102417, 0.4859312176704407, 0.5075815320014954], "accuracy": [0.48329150676727295, 0.735041618347168, 0.7561748623847961, 0.7755910754203796, 0.7843085527420044, 0.8158763647079468, 0.7991018295288086, 0.8098005652427673, 0.8129705190658569, 0.8193105459213257, 0.8251221776008606, 0.8273676037788391, 0.8329150676727295, 0.8453308939933777, 0.8422929644584656, 0.8300092220306396, 0.8378021121025085, 0.843481719493866, 0.8409721255302429, 0.8252542614936829, 0.8358209133148193, 0.8310658931732178, 0.8191784620285034], "val_loss": [0.8076598048210144, 0.648617148399353, 0.577794075012207, 0.5341798067092896, 0.5146898031234741, 0.519189715385437, 0.5102877616882324, 0.5253871083259583, 0.4950055480003357, 0.5066633820533752, 0.5107089281082153, 0.5555890202522278, 0.5444769859313965, 0.602824866771698, 0.5493199229240417, 0.5880494117736816, 0.5839766263961792, 0.547049343585968, 0.5540741682052612, 0.5995692014694214, 0.5846339464187622, 0.5714586973190308, 0.626961350440979], "val_accuracy": [0.7233333587646484, 0.7666666507720947, 0.79666668176651, 0.7953333258628845, 0.8090000152587891, 0.8140000104904175, 0.8246666789054871, 0.8296666741371155, 0.8303333520889282, 0.8216666579246521, 0.8176666498184204, 0.8259999752044678, 0.8336666822433472, 0.8320000171661377, 0.8366666436195374, 0.8360000252723694, 0.8306666612625122, 0.840666651725769, 0.8333333134651184, 0.8333333134651184, 0.8306666612625122, 0.8136666417121887, 0.8286666870117188]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 3, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 2, 3, 0, 3, 1, 7, 6, 1, 3, 6, 1, 6, 0, 4, 6, 2, 1, 9, 1, 1, 1, 4, 9], [0, 1, 3, 2, 0, 3, 1, 2, 0, 2, 3, 0, 0, 2, 0, 1, 2, 2], [83, 99, 27, 37, 74, 66, 91, 42], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [31, 14], [0, 1, 1], [4], [6, 0], [99], [1, 1], [0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 42, 24, 18, 8, 6, 3, 3, 2, 3, 1, 2, 1, 1, 0, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)), grad), tf.math.subtract(tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)), grad)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.subtract(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), grad))))), tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), alpha)))), tf.math.pow(grad, grad)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303532123565674, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3, 6, 5], [0, 1, 0, 2, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 5, 2, 8], [0, 1, 0, 3, 0, 4, 4, 2, 2, 0], [16, 99, 84, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 7, 5, 2, 10, 6, 4, 2, 2, 1, 1, 1, 16, 8, 8, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(alpha, tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), grad))), grad), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 3, 3, 6, 4, 3, 9, 1, 4, 2, 8, 7], [0, 0, 0, 1, 0, 0, 3, 1, 2, 0], [16, 99, 96, 84, 61, 14, 60]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))), sigma)), tf.math.sqrt(tf.math.add(alpha, beta))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 22, 12, 10, 7], "tree_depth": 20}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 5, 3, 0, 2], [0, 1, 0, 2], [39, 46], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0], [4, 2, 3, 0, 3, 1, 0, 2, 3, 7, 8, 6, 7, 3, 8, 5, 9], [0, 2, 0, 3, 0, 4, 0, 0, 2, 2, 2], [16, 75, 57, 93, 59, 87], [0, 0, 0, 1, 1, 1], [0, 7, 2], [0, 2, 5], [33], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 3, 5, 8, 6, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 91]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 28, 17, 11, 6, 6, 3, 3, 1, 11, 6, 5, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), grad), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))))), tf.math.divide_no_nan(tf.math.add(tf.math.multiply(beta, tf.math.sqrt(beta)), tf.math.square(beta)), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(sigma, grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]