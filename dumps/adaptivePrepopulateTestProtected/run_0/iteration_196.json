[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8722857236862183, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222358465194702, 1.864669919013977, 1.3871667385101318, 1.0980437994003296, 0.9311902523040771, 0.8380084037780762, 0.7703285217285156, 0.7332710027694702, 0.6922722458839417, 0.6597763895988464, 0.6347624659538269, 0.6120378375053406, 0.5982100367546082, 0.5717356204986572, 0.5651164650917053, 0.5330963730812073, 0.5295356512069702, 0.5173736214637756, 0.5018767714500427, 0.4937163293361664, 0.47259625792503357, 0.4673987627029419, 0.4557307958602905, 0.45604589581489563, 0.4406232237815857, 0.42467305064201355, 0.4196661710739136, 0.41248252987861633, 0.40636298060417175, 0.40196022391319275, 0.3906317949295044, 0.3807046413421631, 0.3788084387779236, 0.37738531827926636, 0.3694062829017639, 0.36097609996795654, 0.35836586356163025, 0.3513210117816925, 0.3459254205226898, 0.33844393491744995, 0.33154889941215515, 0.3260148763656616, 0.32667064666748047, 0.32309240102767944, 0.3162398338317871, 0.3134276866912842, 0.30979159474372864, 0.2982289791107178], "accuracy": [0.2681283950805664, 0.4967639744281769, 0.5680887699127197, 0.6156386137008667, 0.6728305220603943, 0.7037379741668701, 0.7214370369911194, 0.7364945411682129, 0.7540615797042847, 0.7582882046699524, 0.7744023203849792, 0.7808743715286255, 0.7848368883132935, 0.7935543656349182, 0.7943468689918518, 0.7996301651000977, 0.8109893202781677, 0.8140271902084351, 0.8210275769233704, 0.8252542614936829, 0.8341038227081299, 0.8372738361358643, 0.8327829837799072, 0.8388587832450867, 0.8449346423149109, 0.8506141901016235, 0.8519350290298462, 0.8519350290298462, 0.8569541573524475, 0.8519350290298462, 0.8636903762817383, 0.8647470474243164, 0.8687095642089844, 0.8668603897094727, 0.8701624870300293, 0.8735966086387634, 0.8765024542808533, 0.8739928603172302, 0.8825782537460327, 0.8812574148178101, 0.880729079246521, 0.8881257176399231, 0.8882578015327454, 0.885219931602478, 0.8844274282455444, 0.8883898854255676, 0.8878615498542786, 0.89552241563797], "val_loss": [2.035696029663086, 1.5093637704849243, 1.033677101135254, 0.8314781785011292, 0.7506495118141174, 0.6952327489852905, 0.6531249284744263, 0.6122784614562988, 0.5940009951591492, 0.5670734643936157, 0.5494081377983093, 0.5329892635345459, 0.5135143399238586, 0.5002838373184204, 0.48992374539375305, 0.4786688983440399, 0.471699595451355, 0.4635196626186371, 0.45294269919395447, 0.4461803436279297, 0.4382350742816925, 0.43112727999687195, 0.4283011853694916, 0.4198233187198639, 0.4148064851760864, 0.4083627462387085, 0.4039078652858734, 0.40224072337150574, 0.3945157825946808, 0.387900173664093, 0.38697168231010437, 0.38249140977859497, 0.3815351128578186, 0.3768939971923828, 0.377363920211792, 0.3729631304740906, 0.368140310049057, 0.3607316017150879, 0.3618718385696411, 0.3651542663574219, 0.3552109897136688, 0.3554874658584595, 0.3585233688354492, 0.35250720381736755, 0.3572767674922943, 0.35279202461242676, 0.3523125946521759, 0.3471500277519226], "val_accuracy": [0.543666660785675, 0.6586666703224182, 0.6863333582878113, 0.7066666483879089, 0.7329999804496765, 0.7549999952316284, 0.7526666522026062, 0.7730000019073486, 0.7836666703224182, 0.7900000214576721, 0.8053333163261414, 0.8046666383743286, 0.8130000233650208, 0.8246666789054871, 0.8196666836738586, 0.8220000267028809, 0.8306666612625122, 0.8320000171661377, 0.8360000252723694, 0.8373333215713501, 0.8389999866485596, 0.8386666774749756, 0.843666672706604, 0.843999981880188, 0.8533333539962769, 0.8513333201408386, 0.8533333539962769, 0.8536666631698608, 0.859333336353302, 0.8633333444595337, 0.8616666793823242, 0.8619999885559082, 0.862333357334137, 0.8643333315849304, 0.8606666922569275, 0.8666666746139526, 0.8713333606719971, 0.8733333349227905, 0.8703333139419556, 0.8696666955947876, 0.8740000128746033, 0.8740000128746033, 0.874666690826416, 0.8713333606719971, 0.8736666440963745, 0.8743333220481873, 0.874666690826416, 0.871999979019165]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 1, 0, 0, 1], [0, 4, 3, 9, 0], [0, 5], [0, 85], [0, 1], [0], [1], [0]], "fitness": -0.8417142629623413, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2934255599975586, 2.1912028789520264, 1.7697864770889282, 1.3458490371704102, 1.0473847389221191, 0.9147393107414246, 0.8470860123634338, 0.786449134349823, 0.7548877000808716, 0.7270934581756592, 0.6828139424324036, 0.6515042185783386, 0.6084442138671875, 0.597538411617279, 0.5701771378517151, 0.5672577023506165, 0.5572752356529236, 0.5405866503715515, 0.5303001403808594, 0.5174301266670227, 0.5065057873725891, 0.5033673644065857, 0.48974207043647766, 0.4786129891872406, 0.4685327708721161, 0.44881582260131836, 0.4482583999633789, 0.441567987203598, 0.43192237615585327, 0.4141402542591095, 0.4038572311401367, 0.39576926827430725, 0.40312743186950684], "accuracy": [0.12798838317394257, 0.31739532947540283, 0.4352133274078369, 0.5428609251976013, 0.6460176706314087, 0.6659622192382812, 0.6888125538825989, 0.7057191729545593, 0.7053229212760925, 0.7144366502761841, 0.7375511527061462, 0.7456082701683044, 0.7611940503120422, 0.7695152759552002, 0.7741381525993347, 0.7812706232070923, 0.7758552432060242, 0.7865539789199829, 0.791441023349762, 0.7923656105995178, 0.7985734939575195, 0.8029322624206543, 0.8075551390647888, 0.809140145778656, 0.8152159452438354, 0.8222163319587708, 0.8244617581367493, 0.8226125836372375, 0.8256505131721497, 0.8388587832450867, 0.8401796221733093, 0.8455950617790222, 0.8391229510307312], "val_loss": [2.2468068599700928, 2.0266289710998535, 1.1667648553848267, 0.9129961133003235, 0.7706648707389832, 0.7366831302642822, 0.6728109121322632, 0.6789221167564392, 0.6386024355888367, 0.6232854723930359, 0.5841960310935974, 0.5669800639152527, 0.561202883720398, 0.5621268153190613, 0.5499233603477478, 0.5430036783218384, 0.527074933052063, 0.5196245312690735, 0.5119620561599731, 0.5041643381118774, 0.4984833896160126, 0.49272221326828003, 0.49703747034072876, 0.49008500576019287, 0.4788413941860199, 0.4827921688556671, 0.47499728202819824, 0.47593119740486145, 0.4752136170864105, 0.47364726662635803, 0.46958455443382263, 0.4752425253391266, 0.47588518261909485], "val_accuracy": [0.42100000381469727, 0.47099998593330383, 0.6449999809265137, 0.6819999814033508, 0.7233333587646484, 0.7120000123977661, 0.7440000176429749, 0.7506666779518127, 0.7440000176429749, 0.768666684627533, 0.7776666879653931, 0.7846666574478149, 0.7919999957084656, 0.7839999794960022, 0.800000011920929, 0.7943333387374878, 0.8019999861717224, 0.809333324432373, 0.8133333325386047, 0.8163333535194397, 0.8113333582878113, 0.8190000057220459, 0.8149999976158142, 0.8253333568572998, 0.8309999704360962, 0.8349999785423279, 0.8360000252723694, 0.8363333344459534, 0.8306666612625122, 0.828000009059906, 0.8356666564941406, 0.8333333134651184, 0.8349999785423279]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 7, 5, 2, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8337143063545227, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.524530291557312, 0.8144791126251221, 0.6456751823425293, 0.5935301780700684, 0.5867058038711548, 0.5652746558189392, 0.5418702363967896, 0.558006227016449, 0.5266631245613098, 0.48898711800575256, 0.5201530456542969, 0.5249228477478027, 0.5196864604949951, 0.5219708681106567, 0.5153902173042297], "accuracy": [0.478140264749527, 0.7154933214187622, 0.7598732113838196, 0.7853652238845825, 0.791441023349762, 0.7947431206703186, 0.8033285140991211, 0.8000264167785645, 0.8146876096725464, 0.8203672170639038, 0.8197067975997925, 0.8123101592063904, 0.8289526104927063, 0.8215559124946594, 0.8267071843147278], "val_loss": [0.813188374042511, 0.5735993385314941, 0.4827457666397095, 0.5025191903114319, 0.5026671290397644, 0.4756721258163452, 0.47411930561065674, 0.48178336024284363, 0.44952815771102905, 0.49673494696617126, 0.48433080315589905, 0.509885847568512, 0.5276587605476379, 0.5739176273345947, 0.5204401016235352], "val_accuracy": [0.7173333168029785, 0.7893333435058594, 0.8220000267028809, 0.8286666870117188, 0.8159999847412109, 0.8376666903495789, 0.8363333344459534, 0.8393333554267883, 0.840666651725769, 0.8476666808128357, 0.8349999785423279, 0.843999981880188, 0.8433333039283752, 0.8410000205039978, 0.8473333120346069]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 2, 3], [0, 0, 0, 1], [39, 53, 56], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 3], [1, 2, 0, 3], [16, 16], [0, 1], [0], [2], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 6], [0, 0, 0, 3, 0, 0, 3, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 3, 2, 1, 1, 0, 2, 1, 1, 0, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))", "other_info": {"loss": [2.3050122261047363, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [3, 9, 3, 0, 3], [0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 1, 3, 2], [0, 3, 5, 3, 4], [0], [0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 3, 0, 3, 0, 0, 3, 1, 2, 0], [16, 5, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 2, 2, 1, 1, 1, 10, 5, 5, 1, 9, 4, 5, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(sigma, tf.math.add(grad, sigma)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(sigma, tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), sigma)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303102970123291, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.10500594228506088, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.10038304328918457, 0.09998679161071777], "val_loss": [2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 9, 0, 2], [2, 1, 0, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 2, 3, 0, 3, 5, 9], [0, 2, 0, 3], [10, 16, 43], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 5, 8], [0, 0, 0, 4, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 25, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 4, 1, 1, 10, 7, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3037993907928467, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 4], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [40, 48], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [6, 3, 1, 6, 8, 2, 4, 1, 4, 2, 8, 2, 7, 4, 0, 7, 8, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0, 0, 6, 4, 2], [16, 99, 96, 99, 25, 1, 96]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 2, 1, 1, 1, 32, 18, 14, 7], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(grad))))), tf.math.sqrt(beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}]