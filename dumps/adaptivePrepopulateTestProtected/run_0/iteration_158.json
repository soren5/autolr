[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8788571357727051, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223778247833252, 1.869816780090332, 1.3854763507843018, 1.0877859592437744, 0.9313703775405884, 0.8305619955062866, 0.7596983313560486, 0.7178841233253479, 0.678885817527771, 0.6427952647209167, 0.6314711570739746, 0.6065253019332886, 0.5803450345993042, 0.5689871311187744, 0.5544987320899963, 0.5336046814918518, 0.5189152956008911, 0.5142802596092224, 0.4972553849220276, 0.48589378595352173, 0.4789123237133026, 0.47044631838798523, 0.45680922269821167, 0.4485171139240265, 0.45258986949920654, 0.44318363070487976, 0.4277282655239105, 0.42588117718696594, 0.4205707907676697, 0.4097837805747986, 0.4017646610736847, 0.3997235894203186, 0.39143604040145874, 0.3813983201980591, 0.3799765408039093, 0.3789656162261963, 0.36794283986091614, 0.3624574840068817, 0.35929128527641296, 0.35348811745643616, 0.3508596420288086, 0.34113216400146484, 0.3462033271789551, 0.33102670311927795, 0.330086886882782, 0.32165828347206116, 0.3163209855556488, 0.31816115975379944, 0.30683767795562744, 0.30308493971824646, 0.3014288544654846, 0.2991333305835724, 0.3007844388484955, 0.29286450147628784, 0.28524908423423767, 0.28070855140686035, 0.2784059941768646, 0.26981455087661743, 0.2657836079597473, 0.26673373579978943, 0.2612868845462799, 0.2518042027950287, 0.25471100211143494, 0.24872227013111115, 0.2470250278711319, 0.2423699051141739, 0.2363964468240738, 0.2331322431564331, 0.2366485893726349, 0.22393356263637543, 0.22837325930595398, 0.218330517411232, 0.21717983484268188, 0.21057762205600739, 0.20735885202884674, 0.2054237574338913, 0.20540645718574524, 0.19891852140426636, 0.19594213366508484, 0.20225878059864044, 0.1904907077550888, 0.18262125551700592, 0.18921315670013428, 0.18402932584285736, 0.18388424813747406, 0.18099281191825867, 0.17825645208358765, 0.1715107411146164], "accuracy": [0.2751287817955017, 0.47906485199928284, 0.5712587237358093, 0.6231673359870911, 0.6653017997741699, 0.7033417224884033, 0.7341170310974121, 0.7374191284179688, 0.7518161535263062, 0.7711002230644226, 0.7761194109916687, 0.783119797706604, 0.7940827012062073, 0.7932901978492737, 0.8016114234924316, 0.8078193068504333, 0.8191784620285034, 0.8201030492782593, 0.8281601071357727, 0.8253863453865051, 0.8310658931732178, 0.8338396549224854, 0.8387266993522644, 0.8429533839225769, 0.8429533839225769, 0.8430854678153992, 0.8474441766738892, 0.8525954484939575, 0.8488970994949341, 0.8557654023170471, 0.8605204224586487, 0.8562937378883362, 0.8647470474243164, 0.8679170608520508, 0.8650112152099609, 0.867520809173584, 0.870030403137207, 0.8725399374961853, 0.8734645247459412, 0.8730682730674744, 0.8811253309249878, 0.8813894987106323, 0.8728041052818298, 0.8854840993881226, 0.8800686597824097, 0.885219931602478, 0.8873332738876343, 0.8868049383163452, 0.8886540532112122, 0.8912957310676575, 0.8923524022102356, 0.8920882344245911, 0.8905032277107239, 0.8961827754974365, 0.895918607711792, 0.8968431949615479, 0.8986923694610596, 0.9041078090667725, 0.9021265506744385, 0.902390718460083, 0.9058248400688171, 0.9096552729606628, 0.908730685710907, 0.9115044474601746, 0.9109761118888855, 0.9133535623550415, 0.9162594079971313, 0.9157310724258423, 0.9140139818191528, 0.9169198274612427, 0.9167877435684204, 0.9225993752479553, 0.9235239624977112, 0.9220710396766663, 0.9252410531044006, 0.9272223114967346, 0.9260335564613342, 0.9299960136413574, 0.9298639297485352, 0.9265618920326233, 0.9314489364624023, 0.9351472854614258, 0.930788516998291, 0.9344868659973145, 0.9322414398193359, 0.935279369354248, 0.9355435371398926, 0.9375247359275818], "val_loss": [2.043229818344116, 1.5252792835235596, 1.059319019317627, 0.8622859120368958, 0.7739511728286743, 0.712826669216156, 0.6653242111206055, 0.6353532075881958, 0.6145880818367004, 0.588234007358551, 0.5718778371810913, 0.5557640790939331, 0.5459425449371338, 0.525135338306427, 0.5168591141700745, 0.5053482055664062, 0.4997932016849518, 0.48488402366638184, 0.47919487953186035, 0.4703822433948517, 0.47141027450561523, 0.46116748452186584, 0.453118234872818, 0.44784554839134216, 0.44718751311302185, 0.43445050716400146, 0.4359551668167114, 0.42782077193260193, 0.42837169766426086, 0.4202001988887787, 0.41962215304374695, 0.41002556681632996, 0.40663206577301025, 0.40764692425727844, 0.40263956785202026, 0.3989400267601013, 0.3960455060005188, 0.39371103048324585, 0.3923947811126709, 0.3929206430912018, 0.3917257487773895, 0.3840952217578888, 0.3808329403400421, 0.3817606270313263, 0.37890157103538513, 0.37521520256996155, 0.3746592700481415, 0.3713971674442291, 0.3694106936454773, 0.36994099617004395, 0.36911842226982117, 0.3693079352378845, 0.36807316541671753, 0.3690676987171173, 0.36612769961357117, 0.36626964807510376, 0.36125749349594116, 0.3628350496292114, 0.36928442120552063, 0.3606704771518707, 0.35772624611854553, 0.3617168664932251, 0.3560544550418854, 0.3591160476207733, 0.35777518153190613, 0.35627302527427673, 0.3584086000919342, 0.3570273518562317, 0.3526735305786133, 0.35380101203918457, 0.3530525863170624, 0.35500773787498474, 0.35798314213752747, 0.3571338653564453, 0.35494470596313477, 0.35568180680274963, 0.3550068438053131, 0.35418087244033813, 0.3578505516052246, 0.3490322232246399, 0.35165348649024963, 0.3594669997692108, 0.3573257327079773, 0.35076624155044556, 0.35436558723449707, 0.35485583543777466, 0.35399290919303894, 0.3549942970275879], "val_accuracy": [0.5046666860580444, 0.6439999938011169, 0.6753333210945129, 0.6893333196640015, 0.7256666421890259, 0.7400000095367432, 0.7566666603088379, 0.7670000195503235, 0.7730000019073486, 0.7876666784286499, 0.7906666398048401, 0.7986666560173035, 0.8033333420753479, 0.8163333535194397, 0.8180000185966492, 0.8203333616256714, 0.8183333277702332, 0.82833331823349, 0.8303333520889282, 0.8323333263397217, 0.8263333439826965, 0.8370000123977661, 0.8410000205039978, 0.8399999737739563, 0.8399999737739563, 0.847000002861023, 0.843666672706604, 0.8476666808128357, 0.8493333458900452, 0.8533333539962769, 0.8493333458900452, 0.8579999804496765, 0.859000027179718, 0.8556666374206543, 0.8600000143051147, 0.862333357334137, 0.8613333106040955, 0.8606666922569275, 0.8610000014305115, 0.8673333525657654, 0.8650000095367432, 0.8603333234786987, 0.8673333525657654, 0.8690000176429749, 0.8700000047683716, 0.8703333139419556, 0.8726666569709778, 0.8713333606719971, 0.8700000047683716, 0.871666669845581, 0.874666690826416, 0.8733333349227905, 0.8733333349227905, 0.871666669845581, 0.8756666779518127, 0.874666690826416, 0.8759999871253967, 0.878000020980835, 0.8740000128746033, 0.8766666650772095, 0.8790000081062317, 0.8813333511352539, 0.8849999904632568, 0.8820000290870667, 0.8849999904632568, 0.8823333382606506, 0.8833333253860474, 0.8853333592414856, 0.8853333592414856, 0.8856666684150696, 0.8846666812896729, 0.8889999985694885, 0.8843333125114441, 0.8866666555404663, 0.887333333492279, 0.890999972820282, 0.8893333077430725, 0.8859999775886536, 0.8886666893959045, 0.8926666378974915, 0.890333354473114, 0.887333333492279, 0.8933333158493042, 0.8920000195503235, 0.8913333415985107, 0.890999972820282, 0.8916666507720947, 0.890666663646698]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8711428642272949, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.222184658050537, 1.8656514883041382, 1.3868052959442139, 1.0856438875198364, 0.9349006414413452, 0.8417986035346985, 0.7759632468223572, 0.7303534150123596, 0.687110185623169, 0.6622486114501953, 0.6304882764816284, 0.6082575917243958, 0.5918537974357605, 0.5701004266738892, 0.5601513981819153, 0.5476808547973633, 0.5315733551979065, 0.5242933630943298, 0.5143564343452454, 0.49918898940086365, 0.47927427291870117, 0.4729383885860443, 0.46419569849967957, 0.4602849781513214, 0.4431363046169281, 0.44129493832588196, 0.433883398771286, 0.42470040917396545, 0.4176618158817291, 0.41122686862945557, 0.4085175395011902, 0.39854171872138977, 0.39024749398231506, 0.3873988091945648, 0.37904003262519836, 0.37657296657562256, 0.37090519070625305, 0.36774080991744995, 0.35995790362358093, 0.35737478733062744, 0.3541700839996338, 0.34014543890953064, 0.34292668104171753, 0.3325229287147522, 0.3274063169956207, 0.3290492594242096, 0.32457348704338074, 0.31530120968818665, 0.3123363256454468, 0.30471232533454895, 0.3056088089942932, 0.29735979437828064, 0.29422181844711304, 0.2924298346042633, 0.2889118492603302, 0.28347063064575195, 0.2807027995586395, 0.2765122354030609, 0.27977627515792847, 0.2681148946285248, 0.26553815603256226, 0.25674697756767273, 0.25295665860176086, 0.24670331180095673, 0.2498980313539505], "accuracy": [0.2674679756164551, 0.4888390004634857, 0.5595033764839172, 0.6203936338424683, 0.6667547225952148, 0.6975300312042236, 0.7207766771316528, 0.7297582626342773, 0.750759482383728, 0.7601373791694641, 0.7683265209197998, 0.7821952104568481, 0.7861577272415161, 0.791969358921051, 0.7954035401344299, 0.8061022162437439, 0.805177628993988, 0.8117818236351013, 0.8136309385299683, 0.821820080280304, 0.8284242749214172, 0.8323867321014404, 0.8318583965301514, 0.8396512866020203, 0.8392550349235535, 0.839519202709198, 0.8469158411026001, 0.8454629778862, 0.8499537706375122, 0.8549728989601135, 0.8585391640663147, 0.8607845902442932, 0.8582749962806702, 0.8626337051391602, 0.8650112152099609, 0.8598600029945374, 0.8607845902442932, 0.8692378997802734, 0.869502067565918, 0.8697662353515625, 0.8697662353515625, 0.8809932470321655, 0.8771628737449646, 0.882710337638855, 0.878879964351654, 0.884691596031189, 0.8824461698532104, 0.8864086866378784, 0.8840311765670776, 0.889050304889679, 0.886672854423523, 0.8897107243537903, 0.8942015767097473, 0.8924844861030579, 0.8919561505317688, 0.8977677822113037, 0.8965790271759033, 0.9006736278533936, 0.8994848728179932, 0.9017302989959717, 0.9041078090667725, 0.9054285883903503, 0.908730685710907, 0.9068815112113953, 0.9113723635673523], "val_loss": [2.032914161682129, 1.504178762435913, 1.035524606704712, 0.8291458487510681, 0.7445183992385864, 0.688956618309021, 0.6498859524726868, 0.6133731007575989, 0.585874617099762, 0.5650806427001953, 0.5437042117118835, 0.5292984843254089, 0.5156096816062927, 0.5038875937461853, 0.49457406997680664, 0.478536456823349, 0.472760409116745, 0.4727863073348999, 0.4594630002975464, 0.44844281673431396, 0.4419702887535095, 0.4297620356082916, 0.4266863167285919, 0.4207543134689331, 0.4145883023738861, 0.4095301926136017, 0.40911009907722473, 0.407737135887146, 0.40470126271247864, 0.3982534110546112, 0.3973788321018219, 0.39390432834625244, 0.38887688517570496, 0.3829479515552521, 0.3870171308517456, 0.3816394805908203, 0.37681469321250916, 0.3808620870113373, 0.38024404644966125, 0.372402548789978, 0.37200137972831726, 0.3726315498352051, 0.37200647592544556, 0.3660871088504791, 0.36692333221435547, 0.36521244049072266, 0.3663269877433777, 0.36803361773490906, 0.36099955439567566, 0.36062029004096985, 0.3558780550956726, 0.3658756911754608, 0.3549104928970337, 0.36087700724601746, 0.35621747374534607, 0.352877676486969, 0.35689184069633484, 0.357435941696167, 0.34898000955581665, 0.3536940813064575, 0.35247793793678284, 0.3595334589481354, 0.3536820411682129, 0.3569377362728119, 0.3512546420097351], "val_accuracy": [0.5460000038146973, 0.6526666879653931, 0.6896666884422302, 0.7083333134651184, 0.7386666536331177, 0.7559999823570251, 0.7646666765213013, 0.7766666412353516, 0.7879999876022339, 0.7933333516120911, 0.7979999780654907, 0.8090000152587891, 0.8116666674613953, 0.8236666917800903, 0.8243333101272583, 0.8306666612625122, 0.8336666822433472, 0.8270000219345093, 0.8346666693687439, 0.8420000076293945, 0.8423333168029785, 0.846666693687439, 0.8453333377838135, 0.8473333120346069, 0.8519999980926514, 0.8523333072662354, 0.8533333539962769, 0.8543333411216736, 0.8553333282470703, 0.859666645526886, 0.859333336353302, 0.8616666793823242, 0.859666645526886, 0.8636666536331177, 0.8603333234786987, 0.8636666536331177, 0.8656666874885559, 0.8659999966621399, 0.8619999885559082, 0.8643333315849304, 0.8673333525657654, 0.8679999709129333, 0.8656666874885559, 0.8676666617393494, 0.8679999709129333, 0.8703333139419556, 0.8703333139419556, 0.8693333268165588, 0.8726666569709778, 0.8733333349227905, 0.8733333349227905, 0.8723333477973938, 0.8740000128746033, 0.871999979019165, 0.875, 0.875, 0.8730000257492065, 0.874666690826416, 0.8730000257492065, 0.878000020980835, 0.8723333477973938, 0.875, 0.875333309173584, 0.8756666779518127, 0.8743333220481873]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 1, 1], [0, 6, 1], [0, 3, 4], [0], [1], [0], [2], [0]], "fitness": -0.819428563117981, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma), grad)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6760306358337402, 0.9857150316238403, 0.7494015097618103, 0.7088231444358826, 0.6472657918930054, 0.622839629650116, 0.5880590677261353, 0.5743193030357361, 0.553028404712677, 0.5615237951278687, 0.5815825462341309, 0.5670487284660339, 0.5451570749282837, 0.5551756024360657, 0.5417758822441101, 0.5493837594985962, 0.5414749383926392, 0.5465505719184875], "accuracy": [0.48170650005340576, 0.683529257774353, 0.7280412316322327, 0.7473253011703491, 0.7675340175628662, 0.7778365015983582, 0.7948752045631409, 0.7992339134216309, 0.8079513907432556, 0.7994980812072754, 0.8070268034934998, 0.8061022162437439, 0.8088759779930115, 0.804649293422699, 0.8148196935653687, 0.8141592741012573, 0.798309326171875, 0.817989706993103], "val_loss": [1.093922734260559, 0.6946790218353271, 0.5977888703346252, 0.5655054450035095, 0.5330215096473694, 0.5842781066894531, 0.5243862867355347, 0.5896224975585938, 0.5535409450531006, 0.5885289907455444, 0.6003260612487793, 0.5839105844497681, 0.5843405723571777, 0.5148593187332153, 0.5951336026191711, 0.5885542631149292, 0.6642463803291321, 0.6115922927856445], "val_accuracy": [0.7123333215713501, 0.746666669845581, 0.7846666574478149, 0.7940000295639038, 0.8146666884422302, 0.8090000152587891, 0.8113333582878113, 0.8183333277702332, 0.8166666626930237, 0.8140000104904175, 0.8130000233650208, 0.8286666870117188, 0.8320000171661377, 0.8196666836738586, 0.8289999961853027, 0.8130000233650208, 0.8273333311080933, 0.8246666789054871]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 0], [0], [0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 7, 6, 2, 8, 3, 7, 2, 5, 5, 7, 1, 6, 5, 7, 1, 1], [0, 2, 2, 7, 0, 0, 0, 4, 1, 1, 0, 5, 5, 1], [0, 6, 88, 63, 34], [0, 1], [0], [1], [0]], "fitness": -0.7891428470611572, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), beta), tf.math.add(grad, tf.math.sqrt(tf.math.multiply(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.square(tf.math.square(tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.divide_no_nan(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), grad), tf.math.square(alpha))))), tf.math.add(tf.math.subtract(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, grad))), alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2947492599487305, 2.1914565563201904, 1.7750555276870728, 1.3607925176620483, 1.084228515625, 0.9304457306861877, 0.8487069606781006, 0.818744957447052, 0.7814396023750305, 0.742788553237915, 0.6954918503761292, 0.668695867061615, 0.6379241943359375, 0.6273764967918396, 0.6044830083847046, 0.5826467275619507, 0.5678783655166626, 0.575011670589447, 0.548608660697937], "accuracy": [0.12389380484819412, 0.340509831905365, 0.4411570429801941, 0.5390304923057556, 0.6283186078071594, 0.6655659675598145, 0.6882842183113098, 0.7040021419525146, 0.6929071545600891, 0.7185312509536743, 0.7321357727050781, 0.7437590956687927, 0.7523444890975952, 0.7586844563484192, 0.7643640041351318, 0.7777044177055359, 0.7773081660270691, 0.778761088848114, 0.7869502305984497], "val_loss": [2.246474504470825, 2.0260372161865234, 1.1537787914276123, 0.8940047025680542, 0.7777437567710876, 0.7355379462242126, 0.7188199162483215, 0.689881443977356, 0.6577586531639099, 0.6462671160697937, 0.5988965034484863, 0.5896098017692566, 0.5715891718864441, 0.5593494772911072, 0.5569573640823364, 0.5548778772354126, 0.5482624769210815, 0.540437638759613, 0.5405756235122681], "val_accuracy": [0.4256666600704193, 0.46566668152809143, 0.6353333592414856, 0.6890000104904175, 0.7173333168029785, 0.734333336353302, 0.7319999933242798, 0.734000027179718, 0.7423333525657654, 0.7606666684150696, 0.7593333125114441, 0.7606666684150696, 0.7866666913032532, 0.7996666431427002, 0.7963333129882812, 0.7979999780654907, 0.7973333597183228, 0.7983333468437195, 0.7943333387374878]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 32, 18, 14, 5, 2, 1, 1, 0], "tree_depth": 28}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 2, 8], [0, 2, 0, 3, 2], [16, 16], [0, 1, 1], [1], [0, 3], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [8, 3, 3, 6, 8, 1, 4, 1, 0, 1, 8], [0, 0, 0, 3, 0, 0, 2, 1, 2, 0], [16, 97, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 12, 7, 5, 2, 3, 1, 2, 1, 11, 6, 5, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.sqrt(beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [76, 39], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 5], [0, 3, 3, 3], [16, 31], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 2, 1, 3, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 1, 0, 1, 1, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3032658100128174, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 2], [0, 1, 0, 2], [39, 42], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [58, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 5, 6, 1, 4, 2, 8, 7, 1, 4, 6, 7, 2, 5, 0, 9, 6, 5, 1, 7, 5, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 5, 7, 7, 4, 7, 1], [16, 45, 96, 99, 35, 1, 22, 27]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 2, 1, 1, 1, 2, 1, 1, 1, 42, 26, 16, 8], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(tf.math.subtract(sigma, alpha), beta))), tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.square(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), grad)), grad)), grad), grad), tf.math.add(tf.math.square(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad)))), alpha)", "other_info": {"loss": [2.304370641708374, 2.302583932876587, 2.3025825023651123, 2.302582025527954, 2.302581548690796, 2.3025803565979004, 2.302579402923584], "accuracy": [0.09259014576673508, 0.10381719470024109, 0.10157178342342377, 0.09998679161071777, 0.10276053100824356, 0.10447761416435242, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025848865509033, 2.3025853633880615, 2.3025858402252197, 2.302586317062378, 2.302586317062378, 2.3025872707366943], "val_accuracy": [0.0989999994635582, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [68, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 6, 3, 0, 3, 9], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [65], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [2, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.0917142853140831, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 16, 8, 8, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha))))", "other_info": {"loss": [2.3097312450408936, 2.3093032836914062, 2.310030698776245, 2.3101885318756104, 2.3095192909240723, 2.310393810272217], "accuracy": [0.09153348207473755, 0.08968432247638702, 0.09417514503002167, 0.09206181764602661, 0.09536388516426086, 0.09074098616838455], "val_loss": [2.3088550567626953, 2.3088550567626953, 2.3088550567626953, 2.3088550567626953, 2.3088550567626953, 2.3088550567626953], "val_accuracy": [0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186, 0.09300000220537186]}}]