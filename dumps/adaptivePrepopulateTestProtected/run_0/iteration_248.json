[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8582857251167297, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22072434425354, 1.8657715320587158, 1.4002445936203003, 1.0894062519073486, 0.9396164417266846, 0.8330803513526917, 0.7709470987319946, 0.7139155864715576, 0.6772228479385376, 0.6454999446868896, 0.6230202913284302, 0.6022520661354065, 0.5838465094566345, 0.5654959082603455, 0.5469781160354614, 0.5292481780052185, 0.5276651978492737, 0.5120379328727722, 0.49098774790763855, 0.48708948493003845, 0.4759315252304077, 0.46589457988739014, 0.4688607454299927, 0.4510605037212372, 0.4371822774410248, 0.4335177540779114, 0.4273648262023926, 0.4165098965167999, 0.41324499249458313, 0.4093936085700989, 0.3982938230037689, 0.3936847746372223, 0.39226391911506653, 0.3853309750556946, 0.37150660157203674, 0.3745633363723755, 0.3700941503047943, 0.3595578074455261, 0.3520275950431824, 0.34621018171310425, 0.34380874037742615, 0.3393136262893677, 0.33722615242004395, 0.3305986821651459], "accuracy": [0.28899750113487244, 0.48210275173187256, 0.5605600476264954, 0.6207898855209351, 0.6623960137367249, 0.6985867023468018, 0.7252674698829651, 0.7445515990257263, 0.7503632307052612, 0.7594769597053528, 0.7736098170280457, 0.7849689722061157, 0.7878747582435608, 0.7954035401344299, 0.8024039268493652, 0.800818920135498, 0.8080834746360779, 0.8170651197433472, 0.8216879963874817, 0.8219521641731262, 0.8267071843147278, 0.8272355198860168, 0.8341038227081299, 0.8367455005645752, 0.8421608805656433, 0.8479725122451782, 0.846387505531311, 0.8508783578872681, 0.850350022315979, 0.8515387773513794, 0.857218325138092, 0.8632941246032715, 0.8570862412452698, 0.8625016212463379, 0.8665962219238281, 0.8643507957458496, 0.8661999702453613, 0.8681812286376953, 0.8721436858177185, 0.872407853603363, 0.8784837126731873, 0.8771628737449646, 0.8786157965660095, 0.8784837126731873], "val_loss": [2.0358405113220215, 1.5121718645095825, 1.0430442094802856, 0.8363292813301086, 0.7483482956886292, 0.6922362446784973, 0.6447364091873169, 0.6156647801399231, 0.5876289010047913, 0.5670130848884583, 0.5478169918060303, 0.5351136922836304, 0.5211945176124573, 0.5083794593811035, 0.5000989437103271, 0.49999862909317017, 0.4813859760761261, 0.4766106903553009, 0.4675028622150421, 0.4634844660758972, 0.45527127385139465, 0.4484226107597351, 0.44511500000953674, 0.4384557604789734, 0.43573468923568726, 0.43322840332984924, 0.4245639741420746, 0.42578282952308655, 0.41790953278541565, 0.4192377030849457, 0.41440823674201965, 0.4060283303260803, 0.4090198576450348, 0.4116852879524231, 0.40602993965148926, 0.3973875343799591, 0.39867085218429565, 0.3985973298549652, 0.3943554759025574, 0.39552605152130127, 0.396403431892395, 0.3925604522228241, 0.3842276334762573, 0.3859638571739197], "val_accuracy": [0.534333348274231, 0.6553333401679993, 0.687333345413208, 0.7096666693687439, 0.7353333234786987, 0.7513333559036255, 0.765666663646698, 0.7693333625793457, 0.7903333306312561, 0.7903333306312561, 0.8056666851043701, 0.8076666593551636, 0.812666654586792, 0.8213333487510681, 0.8206666707992554, 0.8146666884422302, 0.8323333263397217, 0.8309999704360962, 0.8353333473205566, 0.8363333344459534, 0.8363333344459534, 0.8429999947547913, 0.8456666469573975, 0.8473333120346069, 0.846666693687439, 0.8493333458900452, 0.8550000190734863, 0.8476666808128357, 0.8553333282470703, 0.8579999804496765, 0.8573333621025085, 0.8610000014305115, 0.859333336353302, 0.8583333492279053, 0.8606666922569275, 0.8610000014305115, 0.8629999756813049, 0.862666666507721, 0.8679999709129333, 0.8640000224113464, 0.8616666793823242, 0.8656666874885559, 0.8676666617393494, 0.8659999966621399]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1, 1], [0, 7], [0, 4], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8399999737739563, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2926061153411865, 2.1858084201812744, 1.7650845050811768, 1.3536131381988525, 1.0492037534713745, 0.90742027759552, 0.8570839166641235, 0.8040246367454529, 0.7804307341575623, 0.7527055740356445, 0.706481397151947, 0.679175853729248, 0.6447461843490601, 0.6225205063819885, 0.6054906249046326, 0.596122145652771, 0.577508807182312, 0.5707127451896667, 0.5581211447715759, 0.545443058013916, 0.5442946553230286, 0.5266306400299072, 0.5181823372840881, 0.5246790647506714, 0.49809274077415466, 0.4905702769756317, 0.48072245717048645, 0.4720698595046997, 0.44469597935676575, 0.45482972264289856, 0.43853524327278137, 0.42698338627815247, 0.4243105351924896, 0.4208456873893738, 0.41655483841896057, 0.4061611294746399, 0.41028985381126404, 0.3976594805717468, 0.3959283232688904, 0.3826933801174164], "accuracy": [0.12640337646007538, 0.33258485794067383, 0.43204331398010254, 0.5449742674827576, 0.6421872973442078, 0.6618676781654358, 0.6914542317390442, 0.7038700580596924, 0.6972658634185791, 0.7125874757766724, 0.7191916704177856, 0.7316074371337891, 0.7547219395637512, 0.7565711140632629, 0.7625148296356201, 0.7644960880279541, 0.7697794437408447, 0.7802139520645142, 0.7829877138137817, 0.7878747582435608, 0.7938185334205627, 0.7932901978492737, 0.800818920135498, 0.8009510040283203, 0.8090080618858337, 0.8098005652427673, 0.8162726163864136, 0.816008448600769, 0.8274996876716614, 0.8280280232429504, 0.8321225643157959, 0.8310658931732178, 0.8322546482086182, 0.8354246616363525, 0.8391229510307312, 0.8411042094230652, 0.8412362933158875, 0.8495575189590454, 0.8467837572097778, 0.8524633646011353], "val_loss": [2.2453970909118652, 2.0117082595825195, 1.125181794166565, 0.8733260035514832, 0.7703081965446472, 0.7033339142799377, 0.6771314144134521, 0.6414376497268677, 0.6277807950973511, 0.6066409349441528, 0.5581994652748108, 0.5440915822982788, 0.5240409970283508, 0.5184181332588196, 0.5086777210235596, 0.4832136332988739, 0.4862533509731293, 0.4725531339645386, 0.45934155583381653, 0.46254900097846985, 0.45724478363990784, 0.45182284712791443, 0.457234263420105, 0.4497041702270508, 0.44309282302856445, 0.43318432569503784, 0.43199053406715393, 0.4154929518699646, 0.4047222435474396, 0.4017890691757202, 0.4023406505584717, 0.4005826413631439, 0.40093761682510376, 0.3953644335269928, 0.38166823983192444, 0.38570520281791687, 0.38831615447998047, 0.3842737078666687, 0.38546013832092285, 0.3840886950492859], "val_accuracy": [0.4230000078678131, 0.4516666531562805, 0.640999972820282, 0.6850000023841858, 0.7113333344459534, 0.715666651725769, 0.7273333072662354, 0.7519999742507935, 0.7526666522026062, 0.7680000066757202, 0.7716666460037231, 0.7803333401679993, 0.796999990940094, 0.7950000166893005, 0.8019999861717224, 0.8106666803359985, 0.7990000247955322, 0.8180000185966492, 0.8213333487510681, 0.8140000104904175, 0.8213333487510681, 0.8259999752044678, 0.8293333053588867, 0.8243333101272583, 0.824999988079071, 0.8373333215713501, 0.8343333601951599, 0.8379999995231628, 0.8416666388511658, 0.8516666889190674, 0.8513333201408386, 0.8493333458900452, 0.846666693687439, 0.8539999723434448, 0.8643333315849304, 0.8576666712760925, 0.8546666502952576, 0.8573333621025085, 0.8613333106040955, 0.862666666507721]}, "mapping_values": [1, 10, 5, 5, 3, 4, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8294285535812378, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6062824726104736, 0.8732399940490723, 0.7331517934799194, 0.6581407189369202, 0.6141278743743896, 0.5557642579078674, 0.541141152381897, 0.5170059204101562, 0.509412944316864, 0.4990970492362976, 0.5010818839073181, 0.4761560559272766, 0.4677412211894989, 0.4791535437107086, 0.4862915575504303, 0.5056996941566467, 0.5080881714820862, 0.5278196334838867, 0.5461998581886292, 0.5940283536911011, 0.5951717495918274, 0.5965157151222229, 0.6330609917640686], "accuracy": [0.48051777482032776, 0.7046625018119812, 0.7302865982055664, 0.7531369924545288, 0.7692511081695557, 0.7926297783851624, 0.800818920135498, 0.8059701323509216, 0.8153480291366577, 0.8186501264572144, 0.8280280232429504, 0.8412362933158875, 0.8255184292793274, 0.8429533839225769, 0.8388587832450867, 0.8379341959953308, 0.8249900937080383, 0.8310658931732178, 0.839519202709198, 0.829216718673706, 0.8273676037788391, 0.8017435073852539, 0.8261788487434387], "val_loss": [0.8987182378768921, 0.620164155960083, 0.5703235864639282, 0.5630500912666321, 0.52445387840271, 0.500959038734436, 0.5148688554763794, 0.5384877920150757, 0.5592560172080994, 0.5286257863044739, 0.6280654072761536, 0.4960266947746277, 0.5732736587524414, 0.5597077012062073, 0.5270501971244812, 0.606600821018219, 0.576988935470581, 0.6015665531158447, 0.6741203665733337, 0.7949265241622925, 0.6507944464683533, 0.5981721878051758, 0.7580648064613342], "val_accuracy": [0.7093333601951599, 0.7676666378974915, 0.7856666445732117, 0.784333348274231, 0.7893333435058594, 0.8076666593551636, 0.8116666674613953, 0.8086666464805603, 0.824999988079071, 0.8226666450500488, 0.8196666836738586, 0.8266666531562805, 0.8320000171661377, 0.8386666774749756, 0.8240000009536743, 0.8343333601951599, 0.8333333134651184, 0.8433333039283752, 0.8270000219345093, 0.8253333568572998, 0.8203333616256714, 0.8190000057220459, 0.8196666836738586]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [8, 2, 3, 1, 3, 5], [0, 1, 0, 2, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 2, 0, 3, 5], [0, 0, 2, 0, 3, 1, 0], [16, 16, 81], [0, 0, 0, 0, 1, 1, 0, 1], [8, 4, 1, 0, 0], [0, 4, 3], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [2, 2, 3, 6, 4, 7, 0, 4, 5, 6], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 6, 5, 2, 10, 6, 4, 3, 8, 5, 3, 1, 21, 11, 10, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, tf.math.square(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.pow(tf.math.subtract(tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), grad), tf.math.negative(sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(beta, tf.math.pow(sigma, grad))), tf.math.subtract(grad, tf.math.pow(grad, tf.constant(0.0, shape=shape, dtype=tf.float32))))), grad), tf.math.add(tf.math.sqrt(grad), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 2, 3, 0, 8], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 0], [95, 16, 25], [0, 1], [0], [0], [11], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 4, 4, 8, 5, 4, 1, 4, 1, 8], [0, 0, 0, 3, 3, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 4, 4, 2, 10, 6, 4, 3, 2, 1, 1, 1, 20, 11, 9, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.sqrt(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.math.pow(tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)), sigma), alpha)), tf.math.sqrt(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 1], [25, 99, 27], [1, 1], [0], [0], [0], [0, 1], [0], [0], [2], [0, 1, 0, 1], [7, 0], [1, 5], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.negative(grad))", "other_info": {"loss": [2.3036186695098877, 2.3022406101226807, 2.302859306335449, 2.3058762550354004, 2.322831153869629, 2.5079450607299805], "accuracy": [0.10302469879388809, 0.10474177449941635, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3024463653564453, 2.302527904510498, 2.3032820224761963, 2.309096097946167, 2.3530430793762207, 3.2141427993774414], "val_accuracy": [0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668]}, "mapping_values": [1, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1, 4, 2, 2, 0], "tree_depth": 7}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [39, 39, 76], [0, 1], [0], [0], [16, 16], [0, 0, 1], [0, 5], [0], [99], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 1, 2, 6, 1, 2, 1], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 14, 7, 7, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, alpha), beta), tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.subtract(alpha, tf.math.pow(beta, alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}]