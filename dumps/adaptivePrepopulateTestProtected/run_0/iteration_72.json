[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8562856912612915, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2230708599090576, 1.875835657119751, 1.403289794921875, 1.1013654470443726, 0.9428340196609497, 0.8520418405532837, 0.7771033048629761, 0.7281478047370911, 0.6924716830253601, 0.6605707406997681, 0.6403266787528992, 0.6115335822105408, 0.5927842855453491, 0.5809062123298645, 0.5569595694541931, 0.5482619404792786, 0.5352577567100525, 0.5145055651664734, 0.5089592337608337, 0.509837806224823, 0.48952487111091614, 0.4755321145057678, 0.46236076951026917, 0.45712798833847046, 0.45143142342567444, 0.43262743949890137, 0.4248851239681244, 0.4286259412765503, 0.41262322664260864, 0.39984092116355896, 0.39955615997314453, 0.39091482758522034], "accuracy": [0.2747325301170349, 0.49649980664253235, 0.5609562993049622, 0.6213181614875793, 0.6621318459510803, 0.6888125538825989, 0.7153612375259399, 0.7384757399559021, 0.748249888420105, 0.7589486241340637, 0.7640998363494873, 0.7783648371696472, 0.7862898111343384, 0.7869502305984497, 0.8025360107421875, 0.8041210174560547, 0.8050455451011658, 0.8162726163864136, 0.8142913579940796, 0.8152159452438354, 0.8255184292793274, 0.8309338092803955, 0.8313300609588623, 0.8381983637809753, 0.8383304476737976, 0.8436138033866882, 0.8510104417800903, 0.8529917001724243, 0.8520671129226685, 0.8532558679580688, 0.8605204224586487, 0.8605204224586487], "val_loss": [2.0435779094696045, 1.5303103923797607, 1.0630085468292236, 0.850813627243042, 0.7648433446884155, 0.707313060760498, 0.6713452339172363, 0.6370787024497986, 0.6055153608322144, 0.5876893997192383, 0.5687021017074585, 0.5564910769462585, 0.5396593809127808, 0.5318334698677063, 0.5162253975868225, 0.5096121430397034, 0.5087795853614807, 0.4936504364013672, 0.4899931252002716, 0.4861726760864258, 0.4691716432571411, 0.46915674209594727, 0.461527943611145, 0.4563363790512085, 0.45317256450653076, 0.44505932927131653, 0.4426281750202179, 0.44057852029800415, 0.44029784202575684, 0.42877888679504395, 0.4303242862224579, 0.4292002022266388], "val_accuracy": [0.5213333368301392, 0.668666660785675, 0.6846666932106018, 0.7026666402816772, 0.7263333201408386, 0.7483333349227905, 0.753333330154419, 0.765999972820282, 0.7896666526794434, 0.7870000004768372, 0.7913333177566528, 0.7993333339691162, 0.7973333597183228, 0.8140000104904175, 0.8149999976158142, 0.8136666417121887, 0.8166666626930237, 0.8286666870117188, 0.8270000219345093, 0.8240000009536743, 0.8360000252723694, 0.8330000042915344, 0.8403333425521851, 0.8446666598320007, 0.843666672706604, 0.8429999947547913, 0.8526666760444641, 0.8420000076293945, 0.8446666598320007, 0.8503333330154419, 0.8506666421890259, 0.8496666550636292]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 4, 0, 3, 1, 0], [0, 0, 1, 5], [0, 62], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 6, 6, 8, 6, 1, 9, 7, 1, 7, 8, 8, 5, 8, 9, 0, 8, 3, 8, 1], [0, 5, 1, 5, 1, 7, 0, 4], [0, 23, 17, 23], [0, 1], [0], [1], [0]], "fitness": -0.8257142901420593, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.divide_no_nan(tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.add(grad, alpha), grad), tf.math.sqrt(tf.math.sqrt(tf.math.square(tf.math.sqrt(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))))), tf.math.negative(tf.math.sqrt(tf.math.multiply(alpha, tf.math.sqrt(grad))))))), tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2924914360046387, 2.1899046897888184, 1.7709370851516724, 1.3420147895812988, 1.0577707290649414, 0.9242622256278992, 0.8524838089942932, 0.8200556039810181, 0.7823213934898376, 0.7393181920051575, 0.7061198353767395, 0.6864901185035706, 0.6371780633926392, 0.6286258697509766, 0.6101062297821045, 0.6034863591194153, 0.5829632878303528, 0.5671758055686951, 0.5677167177200317, 0.5487313270568848, 0.5365309119224548, 0.5299618244171143, 0.5111613273620605, 0.5137571096420288, 0.4976169168949127, 0.4946763217449188, 0.49101880192756653, 0.4753511846065521, 0.4688864052295685, 0.4562024474143982, 0.4412105977535248, 0.43791139125823975, 0.42832955718040466, 0.42339780926704407, 0.39667049050331116, 0.4060742259025574, 0.39788031578063965, 0.3950934112071991, 0.3816680908203125, 0.3761002719402313, 0.36972182989120483, 0.36165130138397217, 0.3659551739692688, 0.3488183617591858, 0.35193899273872375, 0.33906760811805725, 0.3363564610481262, 0.3355954587459564, 0.3295392692089081], "accuracy": [0.12891295552253723, 0.32426363229751587, 0.4399682879447937, 0.5416721701622009, 0.6432439684867859, 0.6588297486305237, 0.6876237988471985, 0.7045304179191589, 0.6968696117401123, 0.724210798740387, 0.7306828498840332, 0.7466648817062378, 0.7598732113838196, 0.7597411274909973, 0.7655527591705322, 0.7738739848136902, 0.7770439982414246, 0.7800818681716919, 0.7777044177055359, 0.7897239327430725, 0.7967243194580078, 0.7952714562416077, 0.8068947196006775, 0.809140145778656, 0.8128384351730347, 0.8153480291366577, 0.8108572363853455, 0.821820080280304, 0.8150838613510132, 0.8238013386726379, 0.83119797706604, 0.8315942287445068, 0.8422929644584656, 0.8345000743865967, 0.8510104417800903, 0.8436138033866882, 0.8499537706375122, 0.8470479249954224, 0.852331280708313, 0.8570862412452698, 0.8541803956031799, 0.8568220734596252, 0.858671247959137, 0.8671245574951172, 0.8603883385658264, 0.8603883385658264, 0.8710870146751404, 0.8714832663536072, 0.8735966086387634], "val_loss": [2.2453219890594482, 2.0179190635681152, 1.1319011449813843, 0.8446217179298401, 0.7763252854347229, 0.7341365814208984, 0.7030602097511292, 0.6665090322494507, 0.6489032506942749, 0.6176099181175232, 0.5780870914459229, 0.5645015239715576, 0.5473964214324951, 0.5305542349815369, 0.5194666981697083, 0.5119165182113647, 0.5105895400047302, 0.5132033824920654, 0.5102590918540955, 0.4948921799659729, 0.4927738308906555, 0.48967549204826355, 0.47928938269615173, 0.47269076108932495, 0.46025708317756653, 0.4560190439224243, 0.457986056804657, 0.4524386525154114, 0.4382496774196625, 0.4358515739440918, 0.43768367171287537, 0.43341130018234253, 0.42888665199279785, 0.42268383502960205, 0.4178776144981384, 0.4224494695663452, 0.41579100489616394, 0.4343954622745514, 0.4198574721813202, 0.42022937536239624, 0.4238702654838562, 0.42543286085128784, 0.44088903069496155, 0.4358553886413574, 0.40872836112976074, 0.412364661693573, 0.4167575240135193, 0.43002206087112427, 0.43285030126571655], "val_accuracy": [0.414000004529953, 0.4449999928474426, 0.656000018119812, 0.6953333616256714, 0.6949999928474426, 0.7323333621025085, 0.7300000190734863, 0.7360000014305115, 0.746666669845581, 0.7649999856948853, 0.7733333110809326, 0.7816666960716248, 0.7860000133514404, 0.7906666398048401, 0.7946666479110718, 0.8043333292007446, 0.8019999861717224, 0.8009999990463257, 0.8056666851043701, 0.8153333067893982, 0.8193333148956299, 0.8140000104904175, 0.8223333358764648, 0.8273333311080933, 0.8259999752044678, 0.8339999914169312, 0.8343333601951599, 0.8356666564941406, 0.8429999947547913, 0.8443333506584167, 0.8463333249092102, 0.8489999771118164, 0.847000002861023, 0.8496666550636292, 0.8503333330154419, 0.8550000190734863, 0.859000027179718, 0.8483333587646484, 0.8579999804496765, 0.859333336353302, 0.8503333330154419, 0.8550000190734863, 0.8569999933242798, 0.8610000014305115, 0.8610000014305115, 0.8573333621025085, 0.8579999804496765, 0.859000027179718, 0.8586666584014893]}, "mapping_values": [1, 10, 5, 5, 3, 10, 6, 4, 2, 28, 20, 8, 4, 2, 1, 1, 0], "tree_depth": 26}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0], [0, 9], [0], [0], [1], [0], [2], [0]], "fitness": -0.801714301109314, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6020723581314087, 0.8389272689819336, 0.703619658946991, 0.6056484580039978, 0.5694958567619324, 0.541110634803772, 0.5201840400695801, 0.5054360032081604, 0.5400030016899109, 0.5144028663635254, 0.5001500248908997, 0.45773524045944214, 0.45671385526657104, 0.48649200797080994, 0.5397751927375793, 0.5265123844146729, 0.5020176768302917, 0.49183666706085205, 0.5446200370788574, 0.5462960600852966, 0.5627039074897766, 0.5114288926124573], "accuracy": [0.4707436263561249, 0.7040021419525146, 0.7592127919197083, 0.7753269076347351, 0.7931581139564514, 0.8017435073852539, 0.8035926818847656, 0.8175934553146362, 0.8125742673873901, 0.811649739742279, 0.8166688680648804, 0.829216718673706, 0.8376700282096863, 0.822348415851593, 0.8182538747787476, 0.8124422430992126, 0.8195747137069702, 0.8339717388153076, 0.8095363974571228, 0.8417646288871765, 0.8125742673873901, 0.8284242749214172], "val_loss": [0.836746096611023, 0.6242120265960693, 0.5367143750190735, 0.5190396904945374, 0.5093310475349426, 0.5071383118629456, 0.5032073855400085, 0.5109043717384338, 0.48652851581573486, 0.5204503536224365, 0.49546298384666443, 0.5305021405220032, 0.5448077917098999, 0.55378657579422, 0.5501562356948853, 0.5489093661308289, 0.5931138396263123, 0.5635989308357239, 0.5659701228141785, 0.6300941705703735, 0.5624220967292786, 0.6127355694770813], "val_accuracy": [0.718999981880188, 0.7853333353996277, 0.8059999942779541, 0.8159999847412109, 0.82833331823349, 0.8109999895095825, 0.824999988079071, 0.82833331823349, 0.8379999995231628, 0.8303333520889282, 0.8383333086967468, 0.8396666646003723, 0.8276666402816772, 0.843666672706604, 0.8360000252723694, 0.8309999704360962, 0.843999981880188, 0.8399999737739563, 0.8379999995231628, 0.8256666660308838, 0.8259999752044678, 0.8343333601951599]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [0, 2, 3, 4, 3, 5], [3, 5, 0, 4], [63, 16], [1, 0, 0, 1, 1], [0, 3, 0], [0, 0], [0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 6, 0, 6, 6, 7, 4, 3], [16, 40, 96, 99, 61, 1]], "fitness": -0.16342857480049133, "mapping_values": [1, 6, 3, 3, 2, 1, 0, 1, 0, 1, 0, 1, 1, 3, 1, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.constant(0.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, grad)", "other_info": {"loss": [2.317003850159308e+28, 2.6467548957418882e+28, 2.6043133353320697e+28, 2.5786229533102864e+28, 2.631450178207556e+28, 2.6285055465871626e+28], "accuracy": [0.108440101146698, 0.11055342853069305, 0.10540219396352768, 0.11253467202186584, 0.11253467202186584, 0.11213842034339905], "val_loss": [2.0214680025733875e+28, 2.0214680025733875e+28, 2.0214680025733875e+28, 2.0214680025733875e+28, 2.0214680025733875e+28, 2.0214680025733875e+28], "val_accuracy": [0.15933333337306976, 0.15933333337306976, 0.15933333337306976, 0.15933333337306976, 0.15933333337306976, 0.15933333337306976]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 2, 3, 0, 3], [0, 0, 0, 2], [39, 39, 29], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [8, 7, 5, 1, 4, 1], [0, 2, 0, 2, 0], [16, 16, 74], [0, 1, 0], [3, 9], [0, 6], [99, 84], [0, 1], [0], [1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 3, 5, 3, 2, 1, 3, 2, 1, 2, 2, 1, 1, 0], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3612.370361328125, 504375.0, 8830383.0, 61712728.0, 268065808.0, 891376896.0], "accuracy": [0.09959053993225098, 0.09906221181154251, 0.09417514503002167, 0.10791176557540894, 0.10421344637870789, 0.10249637067317963], "val_loss": [35261.26953125, 1875201.75, 20084660.0, 109417952.0, 409717888.0, 1208332672.0], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 2, 3, 0, 3, 5, 5, 7, 2, 9], [0, 1, 3, 3, 1], [16, 16], [0, 1, 0, 1], [1, 5], [0, 6], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [1, 3, 3, 6, 9, 1, 4, 8, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 82, 99, 61, 95]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 15, 10, 5, 2, 4, 2, 2, 1, 16, 9, 7, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.square(grad)), tf.math.add(grad, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), tf.math.sqrt(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.pow(grad, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [1, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [0, 62], [0, 0, 0, 1, 1], [0, 2, 9], [0, 6], [99, 36], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 4, 4, 0, 4, 3, 7, 1, 0, 6], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 6, 3, 3, 2, 4, 3, 1, 2, 21, 11, 10, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.math.pow(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, tf.math.pow(sigma, grad)))), alpha), tf.math.add(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]