[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 1], [0, 5], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8617143034934998, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2942616939544678, 2.1924877166748047, 1.7854654788970947, 1.3426188230514526, 1.0820664167404175, 0.9242569804191589, 0.8569948077201843, 0.7923901677131653, 0.7645648717880249, 0.7394307851791382, 0.7046480178833008, 0.6845530271530151, 0.6344903707504272, 0.6195226311683655, 0.6071726083755493, 0.5916235446929932, 0.563921332359314, 0.5517072081565857, 0.5474164485931396, 0.5234358310699463, 0.5148988366127014, 0.5141301155090332, 0.5057344436645508, 0.4771864712238312, 0.47307896614074707, 0.473989874124527, 0.4528844356536865, 0.4378657042980194, 0.436475932598114, 0.42474231123924255, 0.41797465085983276, 0.40303492546081543, 0.39709407091140747, 0.38836780190467834, 0.38001489639282227, 0.3741658627986908, 0.3681485950946808, 0.3661377429962158, 0.36235174536705017, 0.3443789482116699, 0.33882635831832886, 0.3362722396850586, 0.3485424816608429, 0.3254850506782532, 0.3222561478614807, 0.31728291511535645, 0.3129585087299347], "accuracy": [0.12138422578573227, 0.3333773612976074, 0.43864747881889343, 0.5469554662704468, 0.6342623233795166, 0.6687359809875488, 0.6872276067733765, 0.7104741930961609, 0.6997754573822021, 0.7223616242408752, 0.735041618347168, 0.7392682433128357, 0.7556465268135071, 0.7586844563484192, 0.7672698497772217, 0.7672698497772217, 0.7835160493850708, 0.7921014428138733, 0.7959318161010742, 0.8039889335632324, 0.8014793395996094, 0.7977809906005859, 0.8107251524925232, 0.8195747137069702, 0.817461371421814, 0.8206313848495483, 0.8247259259223938, 0.8257825970649719, 0.8284242749214172, 0.8362171649932861, 0.8411042094230652, 0.8430854678153992, 0.8508783578872681, 0.8496896028518677, 0.8499537706375122, 0.8576145768165588, 0.8568220734596252, 0.8580108284950256, 0.8638224601745605, 0.8656716346740723, 0.869502067565918, 0.871879518032074, 0.86553955078125, 0.8722757697105408, 0.8734645247459412, 0.8768987059593201, 0.8753136992454529], "val_loss": [2.247565746307373, 2.030639410018921, 1.1728354692459106, 0.9194667339324951, 0.7887736558914185, 0.7221712470054626, 0.691190779209137, 0.6744604110717773, 0.6640043258666992, 0.6369452476501465, 0.5955184698104858, 0.579196035861969, 0.5594252347946167, 0.5512436032295227, 0.5468222498893738, 0.5421703457832336, 0.533804178237915, 0.5243887901306152, 0.5214310884475708, 0.5194336175918579, 0.5252620577812195, 0.5109149813652039, 0.5109241008758545, 0.5157862305641174, 0.49970799684524536, 0.4898865818977356, 0.4923610985279083, 0.4925503432750702, 0.4800330400466919, 0.49880656599998474, 0.48475104570388794, 0.47585636377334595, 0.474635511636734, 0.46835437417030334, 0.47231921553611755, 0.47759607434272766, 0.4744894206523895, 0.47765812277793884, 0.47136279940605164, 0.47984009981155396, 0.4837421774864197, 0.4860253930091858, 0.4815253019332886, 0.49853914976119995, 0.48628124594688416, 0.48995473980903625, 0.5084934234619141], "val_accuracy": [0.42233332991600037, 0.45233333110809326, 0.6380000114440918, 0.6880000233650208, 0.7123333215713501, 0.722000002861023, 0.750333309173584, 0.7269999980926514, 0.75, 0.7710000276565552, 0.7736666798591614, 0.7833333611488342, 0.7929999828338623, 0.7886666655540466, 0.8013333082199097, 0.7996666431427002, 0.7986666560173035, 0.8106666803359985, 0.8159999847412109, 0.8106666803359985, 0.8073333501815796, 0.8226666450500488, 0.8236666917800903, 0.8236666917800903, 0.8220000267028809, 0.8253333568572998, 0.8273333311080933, 0.8263333439826965, 0.8349999785423279, 0.8396666646003723, 0.8349999785423279, 0.8376666903495789, 0.843666672706604, 0.8450000286102295, 0.8446666598320007, 0.8443333506584167, 0.8489999771118164, 0.8473333120346069, 0.8450000286102295, 0.8493333458900452, 0.8500000238418579, 0.8513333201408386, 0.847000002861023, 0.8506666421890259, 0.8506666421890259, 0.8486666679382324, 0.8510000109672546]}, "mapping_values": [1, 10, 5, 5, 3, 3, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8588571548461914, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2257137298583984, 1.8730069398880005, 1.3978509902954102, 1.0944783687591553, 0.9248877763748169, 0.8334645628929138, 0.7738085389137268, 0.7250341176986694, 0.6892182230949402, 0.6567575931549072, 0.6359356641769409, 0.613669216632843, 0.5970092415809631, 0.5748676657676697, 0.5542848110198975, 0.5409578680992126, 0.5298572182655334, 0.5120428204536438, 0.5009371638298035, 0.4934287667274475, 0.48299333453178406, 0.4801008105278015, 0.46043020486831665, 0.44803574681282043, 0.44117647409439087, 0.44090381264686584, 0.4310462772846222, 0.42186346650123596, 0.42311060428619385, 0.4062928557395935, 0.4027557671070099, 0.39996469020843506, 0.3932783901691437, 0.3823847472667694, 0.3892935812473297, 0.3775427043437958, 0.36624234914779663, 0.3601092994213104, 0.35882511734962463], "accuracy": [0.2645621597766876, 0.49768856167793274, 0.5626733303070068, 0.6176198720932007, 0.6690001487731934, 0.7053229212760925, 0.7172104120254517, 0.7341170310974121, 0.7471932172775269, 0.7580240368843079, 0.7713643908500671, 0.776251494884491, 0.7796856164932251, 0.7913089394569397, 0.7921014428138733, 0.8035926818847656, 0.8080834746360779, 0.8169330358505249, 0.8189142942428589, 0.8212917447090149, 0.8226125836372375, 0.826310932636261, 0.8359529972076416, 0.8421608805656433, 0.8426892161369324, 0.8417646288871765, 0.8432175517082214, 0.8482366800308228, 0.8486329317092896, 0.854708731174469, 0.8557654023170471, 0.8581429123878479, 0.86118084192276, 0.86553955078125, 0.8601241707801819, 0.8646149635314941, 0.8716153502464294, 0.8706908226013184, 0.8733324408531189], "val_loss": [2.044422149658203, 1.5160436630249023, 1.0406301021575928, 0.8289663195610046, 0.7339133024215698, 0.6763948202133179, 0.6381444334983826, 0.6073833703994751, 0.5776395797729492, 0.5562350749969482, 0.538529634475708, 0.5197839140892029, 0.5041835308074951, 0.4940398037433624, 0.4797755479812622, 0.46704378724098206, 0.4637601673603058, 0.45355191826820374, 0.44299447536468506, 0.4371505081653595, 0.431349515914917, 0.4212014079093933, 0.419658362865448, 0.40947094559669495, 0.41011425852775574, 0.4027409553527832, 0.39612630009651184, 0.3938322067260742, 0.38825151324272156, 0.3896389305591583, 0.3824656307697296, 0.3771842420101166, 0.37661296129226685, 0.3745190501213074, 0.3694862425327301, 0.36798998713493347, 0.36524084210395813, 0.362797349691391, 0.36443156003952026], "val_accuracy": [0.5440000295639038, 0.6556666493415833, 0.6890000104904175, 0.7110000252723694, 0.7350000143051147, 0.749666690826416, 0.7590000033378601, 0.7693333625793457, 0.7723333239555359, 0.7856666445732117, 0.7876666784286499, 0.8063333630561829, 0.8083333373069763, 0.8146666884422302, 0.8190000057220459, 0.8230000138282776, 0.8293333053588867, 0.8339999914169312, 0.8413333296775818, 0.8353333473205566, 0.8389999866485596, 0.8479999899864197, 0.8500000238418579, 0.8450000286102295, 0.8476666808128357, 0.8526666760444641, 0.8553333282470703, 0.8533333539962769, 0.859333336353302, 0.8556666374206543, 0.8606666922569275, 0.862666666507721, 0.8600000143051147, 0.8679999709129333, 0.8666666746139526, 0.8633333444595337, 0.8650000095367432, 0.8679999709129333, 0.8676666617393494]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 3, 1, 4, 1, 2, 9, 2, 9], [0, 4, 3, 7, 0], [0, 89, 11, 17], [1], [0], [2], [0]], "fitness": -0.8325714468955994, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.subtract(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.subtract(grad, sigma)), tf.math.add(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), grad))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.506224274635315, 0.8152265548706055, 0.6750521063804626, 0.6311937570571899, 0.6281633973121643, 0.5657286643981934, 0.5419597625732422, 0.5392441749572754, 0.5402572154998779, 0.5035598278045654, 0.5172616839408875, 0.5106348395347595, 0.4914228022098541, 0.5060122013092041, 0.45831286907196045, 0.49761033058166504, 0.5069369077682495, 0.511960506439209, 0.5386680960655212, 0.562787652015686, 0.5206372737884521, 0.5859168171882629, 0.5795578956604004], "accuracy": [0.4773477613925934, 0.7166820764541626, 0.752740740776062, 0.7572315335273743, 0.7697794437408447, 0.783119797706604, 0.7950072884559631, 0.8121780753135681, 0.8049134612083435, 0.8235371708869934, 0.8082155585289001, 0.8183859586715698, 0.828820526599884, 0.8297450542449951, 0.8327829837799072, 0.8359529972076416, 0.8232730031013489, 0.829216718673706, 0.8239334225654602, 0.817989706993103, 0.8228767514228821, 0.8145555257797241, 0.8123101592063904], "val_loss": [0.7493535876274109, 0.6331985592842102, 0.5584694147109985, 0.535364031791687, 0.5216530561447144, 0.4645458459854126, 0.4464274048805237, 0.46126776933670044, 0.45576417446136475, 0.4870668947696686, 0.47209903597831726, 0.45472952723503113, 0.4698132872581482, 0.4656634032726288, 0.4749539792537689, 0.48245617747306824, 0.49973300099372864, 0.5718863606452942, 0.5715155601501465, 0.6023267507553101, 0.5898271203041077, 0.5734493136405945, 0.6095021963119507], "val_accuracy": [0.7400000095367432, 0.7699999809265137, 0.7996666431427002, 0.8140000104904175, 0.8036666512489319, 0.8326666951179504, 0.8460000157356262, 0.846666693687439, 0.8453333377838135, 0.8339999914169312, 0.8346666693687439, 0.847000002861023, 0.8483333587646484, 0.8423333168029785, 0.8503333330154419, 0.8510000109672546, 0.8443333506584167, 0.859000027179718, 0.8396666646003723, 0.8389999866485596, 0.831333339214325, 0.8423333168029785, 0.8389999866485596]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 14, 9, 5, 4, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 2, 0, 0], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5, 7, 5, 3, 2, 8, 5, 9, 5], [0, 2, 0, 3, 5, 3], [16, 16, 35], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 5, 2, 8], [0, 0, 2, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 29, 26]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 20, 14, 6, 3, 1, 0, 1, 1, 17, 9, 8, 4], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.square(grad)), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), grad)))), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(beta, sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.0, shape=shape, dtype=tf.float32))))), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 6, 3, 0, 3], [1, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [2, 2, 3, 0, 3, 5], [0, 2, 3, 3, 1], [16, 16], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [1, 8, 6, 3, 8, 7, 9, 4, 9], [0, 1, 3, 0], [99, 3, 76, 30], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 1, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 11, 6, 5, 1, 13, 9, 4, 4, 12, 6, 6, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.subtract(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09391097724437714, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3], [2, 0, 1, 0, 2], [39, 17], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [4, 2, 3, 0, 3, 5, 8, 6, 8], [0, 1, 0, 3, 3, 0], [16, 16, 88], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 1, 0, 5, 0, 4, 5, 7, 0], [0, 5, 1, 4, 7, 7, 0], [39, 6], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 2, 8, 5, 6, 6, 5], [7, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 4, 3, 1, 15, 9, 6, 3, 14, 10, 4, 2, 11, 7, 4, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.square(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad)), tf.math.divide_no_nan(tf.math.sqrt(grad), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.negative(tf.math.square(tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.square(grad), tf.math.add(tf.math.negative(alpha), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.sqrt(grad), tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 4], [0, 2, 0, 3, 0], [16, 30, 13], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 8, 1, 4, 2, 6], [2, 2, 0, 3, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 11, 6, 5, 3, 2, 1, 1, 1, 15, 8, 7, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(beta, tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.subtract(sigma, tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad)))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]