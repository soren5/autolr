[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8668571710586548, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2217044830322266, 1.8684529066085815, 1.3833844661712646, 1.1004393100738525, 0.9414914846420288, 0.8405625820159912, 0.7667246460914612, 0.7293253540992737, 0.6905888319015503, 0.65311199426651, 0.6304982304573059, 0.6190565228462219, 0.5876920223236084, 0.5790958404541016, 0.5549356341362, 0.540797770023346, 0.5355381369590759, 0.5221121907234192, 0.5103501677513123, 0.5019627213478088, 0.48753124475479126, 0.48311248421669006, 0.47906506061553955, 0.46733027696609497, 0.4492989778518677, 0.4513082206249237, 0.4422560930252075, 0.4294649362564087, 0.4228426516056061, 0.42134496569633484, 0.41285842657089233, 0.4080245792865753, 0.39211687445640564, 0.3916909098625183, 0.3868342936038971, 0.3839784264564514, 0.3791617453098297, 0.3754577338695526, 0.37184199690818787, 0.3605964779853821, 0.35719001293182373, 0.3498165011405945, 0.3458213210105896, 0.3452851176261902, 0.32904142141342163, 0.331073522567749, 0.32948946952819824, 0.3204847276210785, 0.3189586102962494, 0.3131004273891449, 0.3076595962047577, 0.3098716139793396, 0.3106028139591217, 0.30127865076065063, 0.2935998737812042, 0.292889267206192, 0.2847919464111328, 0.284171998500824, 0.28582891821861267, 0.2756989300251007, 0.26718178391456604, 0.26841720938682556, 0.2626834511756897, 0.2599319815635681, 0.2659897208213806, 0.2574758529663086, 0.2499391883611679, 0.24428686499595642, 0.24434976279735565, 0.24155133962631226, 0.24192142486572266, 0.2402850091457367, 0.2381267547607422, 0.2284517139196396, 0.2277642786502838, 0.2213263213634491], "accuracy": [0.27724209427833557, 0.486989825963974, 0.5694096088409424, 0.6201294660568237, 0.6653017997741699, 0.693831741809845, 0.7193237543106079, 0.735041618347168, 0.7413815855979919, 0.7604015469551086, 0.7684586048126221, 0.7705719470977783, 0.7864218950271606, 0.7868181467056274, 0.800818920135498, 0.8054417967796326, 0.8038568496704102, 0.8120459914207458, 0.8105930685997009, 0.8190463781356812, 0.8252542614936829, 0.8286884427070618, 0.8272355198860168, 0.8323867321014404, 0.8372738361358643, 0.8383304476737976, 0.8409721255302429, 0.8485008478164673, 0.8525954484939575, 0.8487650156021118, 0.8543124794960022, 0.8529917001724243, 0.8623695969581604, 0.8601241707801819, 0.8622375130653381, 0.8639545440673828, 0.8677849769592285, 0.8652753829956055, 0.8647470474243164, 0.8708229064941406, 0.8705587387084961, 0.8746532797813416, 0.8758420348167419, 0.8728041052818298, 0.8842953443527222, 0.8804649114608765, 0.8786157965660095, 0.8861445188522339, 0.8833707571029663, 0.8897107243537903, 0.889050304889679, 0.8926165699958801, 0.8899748921394348, 0.8899748921394348, 0.8936732411384583, 0.8963148593902588, 0.8968431949615479, 0.89552241563797, 0.8960506916046143, 0.8997490406036377, 0.9039757251739502, 0.9038436412811279, 0.9063531756401062, 0.902390718460083, 0.9010698795318604, 0.9030511379241943, 0.9117686152458191, 0.9153348207473755, 0.9103156924247742, 0.9128252267837524, 0.9074098467826843, 0.9093911051750183, 0.9142781496047974, 0.9146744012832642, 0.9169198274612427, 0.9187690019607544], "val_loss": [2.0353891849517822, 1.5015760660171509, 1.0308582782745361, 0.8213933706283569, 0.7371659278869629, 0.6811278462409973, 0.6375446915626526, 0.6020784974098206, 0.5793501138687134, 0.5556983351707458, 0.5370969176292419, 0.5234352946281433, 0.5053895115852356, 0.4927417039871216, 0.4871274530887604, 0.47508060932159424, 0.4743543565273285, 0.4606952369213104, 0.4515116512775421, 0.4481082856655121, 0.43817105889320374, 0.43572941422462463, 0.4275943338871002, 0.432297945022583, 0.41712483763694763, 0.4124995470046997, 0.4098401665687561, 0.4075894057750702, 0.40139538049697876, 0.3973393142223358, 0.396249383687973, 0.3912731409072876, 0.38795924186706543, 0.3829514682292938, 0.3866456151008606, 0.3814643621444702, 0.382222980260849, 0.3776835799217224, 0.3744494616985321, 0.3782691955566406, 0.3696998655796051, 0.37089771032333374, 0.3695019483566284, 0.36991825699806213, 0.364816814661026, 0.36783480644226074, 0.3640349209308624, 0.3639148771762848, 0.35738426446914673, 0.36020010709762573, 0.36008310317993164, 0.3578568398952484, 0.3532067835330963, 0.35281798243522644, 0.3517085909843445, 0.3556109070777893, 0.35250210762023926, 0.3541901111602783, 0.3493402600288391, 0.3454461991786957, 0.34880387783050537, 0.34876734018325806, 0.3462008833885193, 0.3455337584018707, 0.3473842442035675, 0.3435523808002472, 0.34609439969062805, 0.34271296858787537, 0.34811168909072876, 0.3516920208930969, 0.3443595767021179, 0.3509790003299713, 0.3424282371997833, 0.3518082797527313, 0.34956347942352295, 0.3468514680862427], "val_accuracy": [0.5646666884422302, 0.6753333210945129, 0.6919999718666077, 0.721666693687439, 0.737666666507721, 0.7543333172798157, 0.765999972820282, 0.7730000019073486, 0.7789999842643738, 0.7973333597183228, 0.8040000200271606, 0.8033333420753479, 0.8223333358764648, 0.8213333487510681, 0.8256666660308838, 0.8266666531562805, 0.8236666917800903, 0.8336666822433472, 0.8326666951179504, 0.8379999995231628, 0.8410000205039978, 0.8443333506584167, 0.8453333377838135, 0.8420000076293945, 0.8526666760444641, 0.8560000061988831, 0.8503333330154419, 0.8550000190734863, 0.8560000061988831, 0.8586666584014893, 0.856333315372467, 0.8576666712760925, 0.8583333492279053, 0.859333336353302, 0.8613333106040955, 0.8653333187103271, 0.859666645526886, 0.8640000224113464, 0.8690000176429749, 0.8656666874885559, 0.8669999837875366, 0.8679999709129333, 0.8696666955947876, 0.8693333268165588, 0.8683333396911621, 0.8686666488647461, 0.8693333268165588, 0.8709999918937683, 0.871666669845581, 0.871666669845581, 0.871666669845581, 0.8706666827201843, 0.8769999742507935, 0.8796666860580444, 0.8740000128746033, 0.8769999742507935, 0.8759999871253967, 0.874666690826416, 0.8803333044052124, 0.8806666731834412, 0.875, 0.878333330154419, 0.8769999742507935, 0.8809999823570251, 0.8776666522026062, 0.8786666393280029, 0.8813333511352539, 0.8806666731834412, 0.8813333511352539, 0.8823333382606506, 0.8836666941642761, 0.8773333430290222, 0.8806666731834412, 0.8773333430290222, 0.8813333511352539, 0.8833333253860474]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 4, 6, 6, 4, 9, 2], [0, 6, 1, 5, 0], [0, 1, 46], [1], [0], [2], [0]], "fitness": -0.8351428508758545, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), grad), tf.math.divide_no_nan(tf.math.pow(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.492608904838562, 0.7882043123245239, 0.6788172721862793, 0.6210867166519165, 0.5886505246162415, 0.575751006603241, 0.560074508190155, 0.5308102965354919, 0.545457661151886, 0.5115686058998108, 0.5215309262275696, 0.5426199436187744, 0.5976842045783997, 0.5451846718788147, 0.5245679616928101, 0.5862339735031128], "accuracy": [0.4909523129463196, 0.7217012047767639, 0.7588165402412415, 0.7705719470977783, 0.7783648371696472, 0.7954035401344299, 0.791969358921051, 0.8086118102073669, 0.8107251524925232, 0.817461371421814, 0.8164047002792358, 0.8186501264572144, 0.7928939461708069, 0.8234050869941711, 0.8136309385299683, 0.8109893202781677], "val_loss": [0.8076953887939453, 0.5787276029586792, 0.5446026921272278, 0.5660844445228577, 0.49839916825294495, 0.5138164758682251, 0.4959968328475952, 0.5519524812698364, 0.48996347188949585, 0.5220029950141907, 0.5069437026977539, 0.5445910692214966, 0.55961012840271, 0.5233387351036072, 0.51512211561203, 0.5112854242324829], "val_accuracy": [0.7326666712760925, 0.7960000038146973, 0.8006666898727417, 0.8023333549499512, 0.8216666579246521, 0.8106666803359985, 0.8226666450500488, 0.8323333263397217, 0.8306666612625122, 0.8333333134651184, 0.8389999866485596, 0.8259999752044678, 0.8339999914169312, 0.8226666450500488, 0.8216666579246521, 0.8273333311080933]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 12, 7, 5, 3, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.821142852306366, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292301893234253, 2.1841843128204346, 1.7467173337936401, 1.3541169166564941, 1.0464677810668945, 0.9073414206504822, 0.8211638927459717, 0.8000973463058472, 0.7664821743965149, 0.7438199520111084, 0.7148736715316772, 0.6801192164421082, 0.6547701954841614, 0.6173030138015747, 0.6148462295532227, 0.6004154086112976, 0.5865816473960876, 0.5711265206336975, 0.5660399198532104, 0.5555801391601562, 0.5377375483512878, 0.521789014339447, 0.5201442241668701, 0.500826358795166, 0.49692481756210327, 0.4870932698249817, 0.47887906432151794, 0.4619598984718323, 0.4548948407173157, 0.450823575258255, 0.4387694299221039, 0.4414510428905487, 0.4392079710960388, 0.41528820991516113, 0.40697550773620605, 0.39985552430152893, 0.391963392496109, 0.38590100407600403, 0.37072867155075073, 0.37433069944381714, 0.36386775970458984, 0.35683730244636536, 0.3513300120830536, 0.332756906747818, 0.3388940393924713, 0.32191726565361023, 0.3174162209033966, 0.31581586599349976, 0.31912991404533386, 0.31276658177375793, 0.3063826262950897, 0.29118964076042175, 0.28863412141799927, 0.28667569160461426, 0.27960267663002014, 0.28510385751724243, 0.2890804409980774, 0.2673090994358063], "accuracy": [0.12693171203136444, 0.33483028411865234, 0.4497424364089966, 0.5577862858772278, 0.6409985423088074, 0.6668868064880371, 0.696209192276001, 0.7096816897392273, 0.7059833407402039, 0.7145687341690063, 0.7264562249183655, 0.7337207794189453, 0.7524765729904175, 0.7618544697761536, 0.767930269241333, 0.7696473598480225, 0.7714964747428894, 0.77677983045578, 0.7790252566337585, 0.7854973077774048, 0.7885351777076721, 0.7975168228149414, 0.8057059645652771, 0.8120459914207458, 0.8127063512802124, 0.8171972036361694, 0.8244617581367493, 0.8227446675300598, 0.8249900937080383, 0.8257825970649719, 0.8323867321014404, 0.8374059200286865, 0.8379341959953308, 0.8433496356010437, 0.8462554216384888, 0.8467837572097778, 0.850350022315979, 0.8549728989601135, 0.8555012345314026, 0.8590674996376038, 0.8631620407104492, 0.8626337051391602, 0.8623695969581604, 0.8739928603172302, 0.8746532797813416, 0.8779553771018982, 0.8758420348167419, 0.8841632604598999, 0.8811253309249878, 0.8766345381736755, 0.8790120482444763, 0.8842953443527222, 0.8883898854255676, 0.8860124349594116, 0.8897107243537903, 0.8886540532112122, 0.8911636471748352, 0.8986923694610596], "val_loss": [2.2440924644470215, 2.0024430751800537, 1.1091269254684448, 0.8958324193954468, 0.7523674368858337, 0.7014555931091309, 0.6805852651596069, 0.6534963250160217, 0.6447634696960449, 0.6111499071121216, 0.5871922373771667, 0.566598653793335, 0.5560006499290466, 0.5463851690292358, 0.5412091016769409, 0.5313284397125244, 0.5312477350234985, 0.5234546065330505, 0.5212154388427734, 0.5120831727981567, 0.5038337111473083, 0.5052893161773682, 0.507021427154541, 0.48420262336730957, 0.4885270297527313, 0.48043832182884216, 0.47882455587387085, 0.47432398796081543, 0.46315690875053406, 0.4825747013092041, 0.4725193381309509, 0.4511317014694214, 0.4606189727783203, 0.45779088139533997, 0.44906169176101685, 0.4482913315296173, 0.4456620216369629, 0.4552628695964813, 0.4624366760253906, 0.4525410532951355, 0.4467093050479889, 0.43567514419555664, 0.42520207166671753, 0.4394300580024719, 0.44252604246139526, 0.42489367723464966, 0.435494601726532, 0.4577602446079254, 0.4536578059196472, 0.4526403844356537, 0.43922165036201477, 0.4470919072628021, 0.4328087568283081, 0.4231136739253998, 0.454875648021698, 0.5060053467750549, 0.5105088949203491, 0.4732027053833008], "val_accuracy": [0.42133334279060364, 0.4819999933242798, 0.6639999747276306, 0.6996666789054871, 0.734000027179718, 0.7356666922569275, 0.7473333477973938, 0.762333333492279, 0.7596666812896729, 0.7826666831970215, 0.7723333239555359, 0.7829999923706055, 0.7883333563804626, 0.7973333597183228, 0.7979999780654907, 0.7983333468437195, 0.8033333420753479, 0.8086666464805603, 0.800000011920929, 0.8096666932106018, 0.8306666612625122, 0.8253333568572998, 0.8253333568572998, 0.8376666903495789, 0.8296666741371155, 0.8330000042915344, 0.8383333086967468, 0.840666651725769, 0.8450000286102295, 0.8446666598320007, 0.8479999899864197, 0.8506666421890259, 0.8569999933242798, 0.8516666889190674, 0.8539999723434448, 0.8543333411216736, 0.8573333621025085, 0.859000027179718, 0.8583333492279053, 0.8583333492279053, 0.8616666793823242, 0.8616666793823242, 0.8603333234786987, 0.8579999804496765, 0.862666666507721, 0.8610000014305115, 0.8690000176429749, 0.8669999837875366, 0.8713333606719971, 0.8709999918937683, 0.8696666955947876, 0.8696666955947876, 0.8736666440963745, 0.8726666569709778, 0.8686666488647461, 0.8703333139419556, 0.8736666440963745, 0.8673333525657654]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 6, 3, 6, 3, 0, 4], [0, 1, 0, 2, 1, 3], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [3, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 2, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 86, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.negative(tf.math.pow(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))))", "other_info": {"loss": [2.304307222366333, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918, 0.09399999678134918]}, "mapping_values": [1, 13, 7, 6, 2, 10, 6, 4, 1, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 0, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [47024779264.0, 6768871604224.0, 121165859258368.0, 834299678949376.0, 3700822995107840.0, 1.22909079109632e+16], "accuracy": [0.09642054885625839, 0.09760929644107819, 0.09919429570436478, 0.10249637067317963, 0.10236428678035736, 0.09536388516426086], "val_loss": [475686404096.0, 25646132625408.0, 275277624115200.0, 1500681034792960.0, 5623086611169280.0, 1.6582126774255616e+16], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}, "mapping_values": [1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 6}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 2, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 2, 3, 0, 2, 5, 7, 2, 3, 4, 3, 6, 3, 8, 3, 2, 7, 9, 9, 8, 2, 9], [0, 2, 0, 3, 0, 0, 2, 4, 0, 4, 5, 4], [16, 16, 18, 54, 97, 42, 21, 91], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], [5, 3, 3, 6, 8, 1, 4, 3, 0, 4, 8], [0, 2, 0, 3, 0, 0, 4, 1, 0, 0], [16, 94, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(beta))), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.pow(tf.math.multiply(grad, tf.math.divide_no_nan(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), beta), tf.math.multiply(tf.math.sqrt(tf.math.multiply(grad, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(grad, tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.math.add(grad, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(beta, tf.math.pow(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}, "mapping_values": [1, 6, 4, 2, 1, 34, 22, 12, 8, 2, 1, 1, 1, 13, 7, 6, 4], "tree_depth": 22}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 0, 5], [0, 2, 0, 3], [16, 16], [1, 0], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 5, 2, 8, 8], [2, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 8, 5, 3, 2, 1, 0, 1, 0, 21, 12, 9, 4], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(sigma), tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)))))), sigma)), tf.math.sqrt(tf.math.sqrt(alpha))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}]