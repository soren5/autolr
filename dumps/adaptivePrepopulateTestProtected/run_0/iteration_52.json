[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8614285588264465, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2222390174865723, 1.8599364757537842, 1.3822067975997925, 1.0904120206832886, 0.9230407476425171, 0.8400653004646301, 0.7647020816802979, 0.7300203442573547, 0.6818669438362122, 0.6521826982498169, 0.6223361492156982, 0.6082127094268799, 0.5890728831291199, 0.5770684480667114, 0.5553399920463562, 0.5384778380393982, 0.5263882279396057, 0.5128492712974548, 0.5017530918121338, 0.49312910437583923, 0.4806048572063446, 0.4711914658546448, 0.4607703387737274, 0.45218703150749207, 0.45243918895721436, 0.4440147578716278, 0.4314996004104614, 0.42261913418769836, 0.4125653803348541, 0.4064425528049469, 0.4009034037590027, 0.3953336775302887, 0.39079776406288147, 0.3789936602115631, 0.37813600897789, 0.3757356107234955, 0.37067505717277527, 0.3660094738006592], "accuracy": [0.2785629332065582, 0.49966979026794434, 0.5659754276275635, 0.6141856908798218, 0.6688680648803711, 0.6927750706672668, 0.733060359954834, 0.7338528633117676, 0.7506273984909058, 0.7577598690986633, 0.7712323069572449, 0.7803460359573364, 0.7807422876358032, 0.7890635132789612, 0.8024039268493652, 0.8030643463134766, 0.8050455451011658, 0.8153480291366577, 0.8166688680648804, 0.8156121969223022, 0.8309338092803955, 0.8300092220306396, 0.8339717388153076, 0.8412362933158875, 0.835160493850708, 0.8408400416374207, 0.8426892161369324, 0.8487650156021118, 0.8541803956031799, 0.8516708612442017, 0.8584070801734924, 0.8562937378883362, 0.8619733452796936, 0.86118084192276, 0.8648791313171387, 0.8679170608520508, 0.8701624870300293, 0.8692378997802734], "val_loss": [2.038482666015625, 1.514891266822815, 1.052016019821167, 0.8436055779457092, 0.7503657937049866, 0.6962838768959045, 0.6458439826965332, 0.6099724769592285, 0.5798366069793701, 0.5629811882972717, 0.5359670519828796, 0.5221949219703674, 0.5151790380477905, 0.504833996295929, 0.4926689565181732, 0.47530296444892883, 0.4673195481300354, 0.4560664892196655, 0.45033323764801025, 0.44410350918769836, 0.44210416078567505, 0.4296491742134094, 0.4256943464279175, 0.42205989360809326, 0.4212753176689148, 0.41301384568214417, 0.41021832823753357, 0.4016185700893402, 0.40336620807647705, 0.40160053968429565, 0.39484986662864685, 0.39108577370643616, 0.3847169876098633, 0.3917725086212158, 0.3860999345779419, 0.3831443786621094, 0.3782137930393219, 0.37822917103767395], "val_accuracy": [0.5723333358764648, 0.6433333158493042, 0.6746666431427002, 0.6973333358764648, 0.7276666760444641, 0.7423333525657654, 0.7580000162124634, 0.7646666765213013, 0.7770000100135803, 0.7876666784286499, 0.8009999990463257, 0.7990000247955322, 0.8066666722297668, 0.8146666884422302, 0.8119999766349792, 0.8230000138282776, 0.8339999914169312, 0.8363333344459534, 0.8420000076293945, 0.8373333215713501, 0.840666651725769, 0.8450000286102295, 0.8429999947547913, 0.8493333458900452, 0.8486666679382324, 0.8536666631698608, 0.8496666550636292, 0.856333315372467, 0.8573333621025085, 0.8523333072662354, 0.8553333282470703, 0.856333315372467, 0.8613333106040955, 0.8566666841506958, 0.859000027179718, 0.8576666712760925, 0.8610000014305115, 0.8603333234786987]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 2, 4, 2, 0], [0, 2, 5, 0], [0, 48], [0, 1], [0], [1], [0]], "fitness": -0.8585714101791382, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.291626453399658, 2.19071102142334, 1.7690953016281128, 1.3626803159713745, 1.0820059776306152, 0.9244760274887085, 0.8675334453582764, 0.8330456018447876, 0.768827497959137, 0.7669246792793274, 0.7220688462257385, 0.6896286010742188, 0.6672322154045105, 0.6319048404693604, 0.617249071598053, 0.6031332015991211, 0.5987703800201416, 0.5774962902069092, 0.5674082040786743, 0.5634689331054688, 0.543853759765625, 0.5430582761764526, 0.5245479345321655, 0.5091402530670166, 0.50300133228302, 0.482485294342041, 0.47455495595932007, 0.4587467908859253, 0.46023425459861755, 0.446556955575943, 0.44462767243385315, 0.4325811266899109, 0.43900054693222046, 0.4225194752216339, 0.4263531565666199, 0.410893052816391, 0.40926486253738403, 0.3975777328014374, 0.392034113407135, 0.38716527819633484, 0.36440613865852356, 0.3776561915874481, 0.3739352524280548, 0.3693598508834839, 0.35043928027153015], "accuracy": [0.12996962666511536, 0.3218861520290375, 0.4383833110332489, 0.5386342406272888, 0.6312243938446045, 0.659490168094635, 0.6837934255599976, 0.6913221478462219, 0.7033417224884033, 0.698190450668335, 0.7235503792762756, 0.7318716049194336, 0.7442874312400818, 0.7541936039924622, 0.7585523724555969, 0.7640998363494873, 0.7744023203849792, 0.7769119143486023, 0.7778365015983582, 0.7886672616004944, 0.7853652238845825, 0.7869502305984497, 0.7965922355651855, 0.8035926818847656, 0.8054417967796326, 0.8129705190658569, 0.819970965385437, 0.8272355198860168, 0.8185180425643921, 0.8235371708869934, 0.8273676037788391, 0.8314621448516846, 0.8314621448516846, 0.8372738361358643, 0.8385946154594421, 0.842028796672821, 0.8448025584220886, 0.8485008478164673, 0.8432175517082214, 0.8465195894241333, 0.86118084192276, 0.8593316674232483, 0.8577466607093811, 0.8549728989601135, 0.8618412613868713], "val_loss": [2.246309995651245, 2.015648365020752, 1.1321173906326294, 0.8337021470069885, 0.746769368648529, 0.6931831240653992, 0.6421912312507629, 0.6235699653625488, 0.6286102533340454, 0.5817998051643372, 0.5631043910980225, 0.5437353253364563, 0.529681384563446, 0.5219541788101196, 0.5004486441612244, 0.4982064664363861, 0.4842106103897095, 0.48789724707603455, 0.4725876450538635, 0.4657588601112366, 0.45518237352371216, 0.46568140387535095, 0.4497094452381134, 0.453960120677948, 0.43975040316581726, 0.43781790137290955, 0.44068172574043274, 0.43365001678466797, 0.4292398989200592, 0.4330172538757324, 0.4252989888191223, 0.4226136803627014, 0.4193260073661804, 0.42502719163894653, 0.41296568512916565, 0.4093131124973297, 0.42137759923934937, 0.41291365027427673, 0.40988993644714355, 0.41119804978370667, 0.41888126730918884, 0.41548657417297363, 0.4110146164894104, 0.41164857149124146, 0.42153242230415344], "val_accuracy": [0.42766666412353516, 0.4676666557788849, 0.6496666669845581, 0.7103333473205566, 0.7386666536331177, 0.7336666584014893, 0.7536666393280029, 0.7603333592414856, 0.7616666555404663, 0.7816666960716248, 0.7770000100135803, 0.7953333258628845, 0.7910000085830688, 0.7946666479110718, 0.8106666803359985, 0.8016666769981384, 0.8080000281333923, 0.8069999814033508, 0.8109999895095825, 0.8113333582878113, 0.8366666436195374, 0.8289999961853027, 0.8236666917800903, 0.8299999833106995, 0.840666651725769, 0.8426666855812073, 0.8429999947547913, 0.8486666679382324, 0.8523333072662354, 0.8460000157356262, 0.8546666502952576, 0.8510000109672546, 0.859333336353302, 0.8610000014305115, 0.8513333201408386, 0.8600000143051147, 0.8603333234786987, 0.8673333525657654, 0.8613333106040955, 0.874666690826416, 0.874666690826416, 0.8709999918937683, 0.8579999804496765, 0.8703333139419556, 0.8696666955947876]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 9, 5, 4, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0], [0, 5, 9], [0], [0], [1], [0], [2], [0]], "fitness": -0.828000009059906, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(0.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6523016691207886, 0.9232696890830994, 0.748466968536377, 0.6461188793182373, 0.6068276762962341, 0.5722968578338623, 0.5430057048797607, 0.5170503258705139, 0.48354125022888184, 0.48416993021965027, 0.45989128947257996, 0.44047561287879944, 0.4250320792198181, 0.4149636924266815, 0.43843039870262146, 0.45014679431915283, 0.48786675930023193, 0.500040590763092, 0.5423415899276733, 0.5922306776046753, 0.6051920652389526], "accuracy": [0.45912033319473267, 0.6691322326660156, 0.7145687341690063, 0.7514199018478394, 0.7631752490997314, 0.7931581139564514, 0.7991018295288086, 0.8112534880638123, 0.8260467648506165, 0.8234050869941711, 0.8334434032440186, 0.8359529972076416, 0.8392550349235535, 0.8491612672805786, 0.8477083444595337, 0.8330471515655518, 0.8407079577445984, 0.8304054737091064, 0.8000264167785645, 0.821820080280304, 0.7897239327430725], "val_loss": [0.9289276003837585, 0.6595456600189209, 0.5987874865531921, 0.5444669127464294, 0.531617283821106, 0.5191498398780823, 0.5368449091911316, 0.5096278190612793, 0.49688005447387695, 0.4768781065940857, 0.5054855346679688, 0.5025874972343445, 0.4959060847759247, 0.5086175799369812, 0.5272729396820068, 0.5803196430206299, 0.5662177801132202, 0.5518825054168701, 0.621690571308136, 0.5778331160545349, 0.5975695848464966], "val_accuracy": [0.6623333096504211, 0.7516666650772095, 0.7586666941642761, 0.7870000004768372, 0.8006666898727417, 0.8173333406448364, 0.8276666402816772, 0.8309999704360962, 0.8339999914169312, 0.8403333425521851, 0.8516666889190674, 0.8483333587646484, 0.8460000157356262, 0.8460000157356262, 0.8486666679382324, 0.8519999980926514, 0.8370000123977661, 0.8356666564941406, 0.843999981880188, 0.8360000252723694, 0.8233333230018616]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 3, 3, 0, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 9, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0], [93, 99, 96, 99, 61, 1]], "fitness": -0.33085715770721436, "mapping_values": [1, 9, 5, 4, 2, 4, 2, 2, 1, 2, 1, 1, 1, 16, 9, 7, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), grad)))", "other_info": {"loss": [308538.625, 36188492.0, 148139632.0, 431766464.0, 2293254912.0, 4407684608.0, 42660888576.0, 29685780480.0, 90493747200.0, 111150931968.0, 87181213696.0, 394916167680.0], "accuracy": [0.09919429570436478, 0.1162329912185669, 0.13010171055793762, 0.15255580842494965, 0.13419628143310547, 0.23946638405323029, 0.20512482523918152, 0.30260202288627625, 0.1674811840057373, 0.16338661313056946, 0.18531237542629242, 0.1632545292377472], "val_loss": [644868.1875, 497483072.0, 344404576.0, 99851368.0, 6139238912.0, 37750603776.0, 29290414080.0, 881976960.0, 43477901312.0, 121762725888.0, 802242625536.0, 2973771264.0], "val_accuracy": [0.11166666448116302, 0.05166666582226753, 0.15700000524520874, 0.0820000022649765, 0.22433333098888397, 0.10599999874830246, 0.3343333303928375, 0.1836666613817215, 0.2876666784286499, 0.27433332800865173, 0.10899999737739563, 0.27033331990242004]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 2, 3, 0, 3, 8, 2, 2, 8, 8, 8, 2, 4, 2, 2, 4, 2, 7, 0, 1, 0, 6, 3, 3, 9, 6, 3, 9, 2, 2, 2, 8, 7, 1], [0, 1, 0, 2, 2, 3, 0, 2, 2, 2, 3, 2, 3, 3, 3, 3, 1, 3, 1, 2, 2, 0], [39, 10, 12, 58, 17, 48], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [2, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(alpha), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(grad, tf.math.sqrt(tf.math.sqrt(grad))), tf.math.sqrt(tf.math.add(grad, tf.math.pow(tf.math.add(tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.add(tf.math.negative(grad), tf.math.subtract(grad, tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), grad))), tf.math.add(grad, tf.math.add(grad, grad))), grad)))), grad), tf.math.add(alpha, grad))), tf.math.sqrt(tf.math.add(tf.math.subtract(alpha, grad), grad))), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, alpha)), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}, "mapping_values": [1, 56, 34, 22, 6, 10, 6, 4, 1, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 40}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 8, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 4, 3, 0, 3, 5], [0, 2, 2, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 9, 1, 0, 2, 5, 1, 9, 3, 9], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0, 1], [16, 99, 96, 99, 61, 1, 41, 69, 19]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 6, 3, 3, 1, 2, 1, 1, 1, 30, 19, 11, 9], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.subtract(tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad), alpha), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.math.negative(tf.math.add(tf.math.square(tf.math.subtract(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))))))", "other_info": {"loss": [2.3048884868621826, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.10460969805717468, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025991916656494, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [15, 38], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], [6, 3, 3, 6, 6, 1, 4, 3, 4, 2, 8, 0, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 0], [16, 81, 96, 99, 61, 1, 63]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 24, 13, 11, 7], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.sqrt(alpha)), beta)), tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}]