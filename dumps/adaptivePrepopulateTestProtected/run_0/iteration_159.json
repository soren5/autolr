[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8788571357727051, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.223778247833252, 1.869816780090332, 1.3854763507843018, 1.0877859592437744, 0.9313703775405884, 0.8305619955062866, 0.7596983313560486, 0.7178841233253479, 0.678885817527771, 0.6427952647209167, 0.6314711570739746, 0.6065253019332886, 0.5803450345993042, 0.5689871311187744, 0.5544987320899963, 0.5336046814918518, 0.5189152956008911, 0.5142802596092224, 0.4972553849220276, 0.48589378595352173, 0.4789123237133026, 0.47044631838798523, 0.45680922269821167, 0.4485171139240265, 0.45258986949920654, 0.44318363070487976, 0.4277282655239105, 0.42588117718696594, 0.4205707907676697, 0.4097837805747986, 0.4017646610736847, 0.3997235894203186, 0.39143604040145874, 0.3813983201980591, 0.3799765408039093, 0.3789656162261963, 0.36794283986091614, 0.3624574840068817, 0.35929128527641296, 0.35348811745643616, 0.3508596420288086, 0.34113216400146484, 0.3462033271789551, 0.33102670311927795, 0.330086886882782, 0.32165828347206116, 0.3163209855556488, 0.31816115975379944, 0.30683767795562744, 0.30308493971824646, 0.3014288544654846, 0.2991333305835724, 0.3007844388484955, 0.29286450147628784, 0.28524908423423767, 0.28070855140686035, 0.2784059941768646, 0.26981455087661743, 0.2657836079597473, 0.26673373579978943, 0.2612868845462799, 0.2518042027950287, 0.25471100211143494, 0.24872227013111115, 0.2470250278711319, 0.2423699051141739, 0.2363964468240738, 0.2331322431564331, 0.2366485893726349, 0.22393356263637543, 0.22837325930595398, 0.218330517411232, 0.21717983484268188, 0.21057762205600739, 0.20735885202884674, 0.2054237574338913, 0.20540645718574524, 0.19891852140426636, 0.19594213366508484, 0.20225878059864044, 0.1904907077550888, 0.18262125551700592, 0.18921315670013428, 0.18402932584285736, 0.18388424813747406, 0.18099281191825867, 0.17825645208358765, 0.1715107411146164], "accuracy": [0.2751287817955017, 0.47906485199928284, 0.5712587237358093, 0.6231673359870911, 0.6653017997741699, 0.7033417224884033, 0.7341170310974121, 0.7374191284179688, 0.7518161535263062, 0.7711002230644226, 0.7761194109916687, 0.783119797706604, 0.7940827012062073, 0.7932901978492737, 0.8016114234924316, 0.8078193068504333, 0.8191784620285034, 0.8201030492782593, 0.8281601071357727, 0.8253863453865051, 0.8310658931732178, 0.8338396549224854, 0.8387266993522644, 0.8429533839225769, 0.8429533839225769, 0.8430854678153992, 0.8474441766738892, 0.8525954484939575, 0.8488970994949341, 0.8557654023170471, 0.8605204224586487, 0.8562937378883362, 0.8647470474243164, 0.8679170608520508, 0.8650112152099609, 0.867520809173584, 0.870030403137207, 0.8725399374961853, 0.8734645247459412, 0.8730682730674744, 0.8811253309249878, 0.8813894987106323, 0.8728041052818298, 0.8854840993881226, 0.8800686597824097, 0.885219931602478, 0.8873332738876343, 0.8868049383163452, 0.8886540532112122, 0.8912957310676575, 0.8923524022102356, 0.8920882344245911, 0.8905032277107239, 0.8961827754974365, 0.895918607711792, 0.8968431949615479, 0.8986923694610596, 0.9041078090667725, 0.9021265506744385, 0.902390718460083, 0.9058248400688171, 0.9096552729606628, 0.908730685710907, 0.9115044474601746, 0.9109761118888855, 0.9133535623550415, 0.9162594079971313, 0.9157310724258423, 0.9140139818191528, 0.9169198274612427, 0.9167877435684204, 0.9225993752479553, 0.9235239624977112, 0.9220710396766663, 0.9252410531044006, 0.9272223114967346, 0.9260335564613342, 0.9299960136413574, 0.9298639297485352, 0.9265618920326233, 0.9314489364624023, 0.9351472854614258, 0.930788516998291, 0.9344868659973145, 0.9322414398193359, 0.935279369354248, 0.9355435371398926, 0.9375247359275818], "val_loss": [2.043229818344116, 1.5252792835235596, 1.059319019317627, 0.8622859120368958, 0.7739511728286743, 0.712826669216156, 0.6653242111206055, 0.6353532075881958, 0.6145880818367004, 0.588234007358551, 0.5718778371810913, 0.5557640790939331, 0.5459425449371338, 0.525135338306427, 0.5168591141700745, 0.5053482055664062, 0.4997932016849518, 0.48488402366638184, 0.47919487953186035, 0.4703822433948517, 0.47141027450561523, 0.46116748452186584, 0.453118234872818, 0.44784554839134216, 0.44718751311302185, 0.43445050716400146, 0.4359551668167114, 0.42782077193260193, 0.42837169766426086, 0.4202001988887787, 0.41962215304374695, 0.41002556681632996, 0.40663206577301025, 0.40764692425727844, 0.40263956785202026, 0.3989400267601013, 0.3960455060005188, 0.39371103048324585, 0.3923947811126709, 0.3929206430912018, 0.3917257487773895, 0.3840952217578888, 0.3808329403400421, 0.3817606270313263, 0.37890157103538513, 0.37521520256996155, 0.3746592700481415, 0.3713971674442291, 0.3694106936454773, 0.36994099617004395, 0.36911842226982117, 0.3693079352378845, 0.36807316541671753, 0.3690676987171173, 0.36612769961357117, 0.36626964807510376, 0.36125749349594116, 0.3628350496292114, 0.36928442120552063, 0.3606704771518707, 0.35772624611854553, 0.3617168664932251, 0.3560544550418854, 0.3591160476207733, 0.35777518153190613, 0.35627302527427673, 0.3584086000919342, 0.3570273518562317, 0.3526735305786133, 0.35380101203918457, 0.3530525863170624, 0.35500773787498474, 0.35798314213752747, 0.3571338653564453, 0.35494470596313477, 0.35568180680274963, 0.3550068438053131, 0.35418087244033813, 0.3578505516052246, 0.3490322232246399, 0.35165348649024963, 0.3594669997692108, 0.3573257327079773, 0.35076624155044556, 0.35436558723449707, 0.35485583543777466, 0.35399290919303894, 0.3549942970275879], "val_accuracy": [0.5046666860580444, 0.6439999938011169, 0.6753333210945129, 0.6893333196640015, 0.7256666421890259, 0.7400000095367432, 0.7566666603088379, 0.7670000195503235, 0.7730000019073486, 0.7876666784286499, 0.7906666398048401, 0.7986666560173035, 0.8033333420753479, 0.8163333535194397, 0.8180000185966492, 0.8203333616256714, 0.8183333277702332, 0.82833331823349, 0.8303333520889282, 0.8323333263397217, 0.8263333439826965, 0.8370000123977661, 0.8410000205039978, 0.8399999737739563, 0.8399999737739563, 0.847000002861023, 0.843666672706604, 0.8476666808128357, 0.8493333458900452, 0.8533333539962769, 0.8493333458900452, 0.8579999804496765, 0.859000027179718, 0.8556666374206543, 0.8600000143051147, 0.862333357334137, 0.8613333106040955, 0.8606666922569275, 0.8610000014305115, 0.8673333525657654, 0.8650000095367432, 0.8603333234786987, 0.8673333525657654, 0.8690000176429749, 0.8700000047683716, 0.8703333139419556, 0.8726666569709778, 0.8713333606719971, 0.8700000047683716, 0.871666669845581, 0.874666690826416, 0.8733333349227905, 0.8733333349227905, 0.871666669845581, 0.8756666779518127, 0.874666690826416, 0.8759999871253967, 0.878000020980835, 0.8740000128746033, 0.8766666650772095, 0.8790000081062317, 0.8813333511352539, 0.8849999904632568, 0.8820000290870667, 0.8849999904632568, 0.8823333382606506, 0.8833333253860474, 0.8853333592414856, 0.8853333592414856, 0.8856666684150696, 0.8846666812896729, 0.8889999985694885, 0.8843333125114441, 0.8866666555404663, 0.887333333492279, 0.890999972820282, 0.8893333077430725, 0.8859999775886536, 0.8886666893959045, 0.8926666378974915, 0.890333354473114, 0.887333333492279, 0.8933333158493042, 0.8920000195503235, 0.8913333415985107, 0.890999972820282, 0.8916666507720947, 0.890666663646698]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8679999709129333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220867395401001, 1.8645414113998413, 1.3905036449432373, 1.0888375043869019, 0.9322174787521362, 0.8403867483139038, 0.7742400169372559, 0.7161612510681152, 0.6806232333183289, 0.6581116914749146, 0.6264239549636841, 0.6050825119018555, 0.5847188234329224, 0.5697781443595886, 0.5619127154350281, 0.539695680141449, 0.53013676404953, 0.5126440525054932, 0.5095553398132324, 0.4915368854999542, 0.4871697425842285, 0.4802631437778473, 0.47748082876205444, 0.4561443626880646, 0.4456602931022644, 0.44496506452560425, 0.43661707639694214, 0.42734387516975403, 0.4212234616279602, 0.4080071747303009, 0.40648069977760315, 0.4056861996650696, 0.3895747661590576, 0.3944800794124603, 0.3801700174808502, 0.3736073970794678, 0.36814945936203003, 0.366930216550827, 0.36281898617744446, 0.3537706434726715, 0.3515476584434509, 0.3406800627708435, 0.33831271529197693, 0.34269747138023376, 0.33258286118507385, 0.3368578553199768, 0.329754501581192, 0.32236069440841675, 0.30955594778060913], "accuracy": [0.27684587240219116, 0.48606523871421814, 0.5691454410552979, 0.6250165104866028, 0.6691322326660156, 0.6972658634185791, 0.7217012047767639, 0.7411174178123474, 0.7506273984909058, 0.7604015469551086, 0.770439863204956, 0.7745344042778015, 0.7799497842788696, 0.7927618622779846, 0.7961959838867188, 0.8059701323509216, 0.8074230551719666, 0.8115176558494568, 0.8162726163864136, 0.8257825970649719, 0.8259146809577942, 0.82683926820755, 0.8289526104927063, 0.837537944316864, 0.8400475382804871, 0.8401796221733093, 0.8388587832450867, 0.8469158411026001, 0.8502179384231567, 0.8537842035293579, 0.8576145768165588, 0.8580108284950256, 0.860652506351471, 0.863558292388916, 0.8698983192443848, 0.8708229064941406, 0.869502067565918, 0.8689737319946289, 0.8679170608520508, 0.8753136992454529, 0.8780874609947205, 0.8779553771018982, 0.8779553771018982, 0.8759741187095642, 0.8819178342819214, 0.8779553771018982, 0.8837670087814331, 0.8849557638168335, 0.8906353116035461], "val_loss": [2.037240505218506, 1.5125393867492676, 1.0473657846450806, 0.8450588583946228, 0.7532587647438049, 0.6939375996589661, 0.6499515175819397, 0.608307421207428, 0.5812959671020508, 0.5638677477836609, 0.5429732203483582, 0.5238084197044373, 0.5144047737121582, 0.4986673891544342, 0.48924267292022705, 0.48366427421569824, 0.4720982611179352, 0.46623533964157104, 0.4584987461566925, 0.4537648558616638, 0.45042717456817627, 0.4406891167163849, 0.4333237409591675, 0.4287145137786865, 0.43537580966949463, 0.41953927278518677, 0.41501209139823914, 0.4125520884990692, 0.4073614478111267, 0.40565821528434753, 0.4046555459499359, 0.4009704887866974, 0.396879106760025, 0.3947483003139496, 0.39264073967933655, 0.38926243782043457, 0.3897514343261719, 0.3868474066257477, 0.38311782479286194, 0.379452109336853, 0.3753177225589752, 0.3738515079021454, 0.3757953345775604, 0.37187638878822327, 0.372916579246521, 0.36895427107810974, 0.3709990978240967, 0.36708635091781616, 0.3657582104206085], "val_accuracy": [0.528333306312561, 0.6486666798591614, 0.6836666464805603, 0.7070000171661377, 0.7306666374206543, 0.7509999871253967, 0.7616666555404663, 0.7823333144187927, 0.7883333563804626, 0.7943333387374878, 0.8016666769981384, 0.812333345413208, 0.8146666884422302, 0.8223333358764648, 0.8256666660308838, 0.8263333439826965, 0.8323333263397217, 0.8289999961853027, 0.8353333473205566, 0.8323333263397217, 0.8379999995231628, 0.8389999866485596, 0.8416666388511658, 0.8443333506584167, 0.8399999737739563, 0.8493333458900452, 0.8476666808128357, 0.8516666889190674, 0.8543333411216736, 0.8519999980926514, 0.8513333201408386, 0.8573333621025085, 0.8553333282470703, 0.8583333492279053, 0.8550000190734863, 0.859000027179718, 0.8566666841506958, 0.859666645526886, 0.862666666507721, 0.8619999885559082, 0.8640000224113464, 0.8619999885559082, 0.8643333315849304, 0.8669999837875366, 0.8636666536331177, 0.8666666746139526, 0.8613333106040955, 0.8663333058357239, 0.8656666874885559]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8445714116096497, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2938873767852783, 2.1879000663757324, 1.772176742553711, 1.341609239578247, 1.0508981943130493, 0.9089994430541992, 0.8196232318878174, 0.792475163936615, 0.7437185049057007, 0.7170345783233643, 0.6838454008102417, 0.6467254757881165, 0.6316249966621399, 0.6055119037628174, 0.598316490650177, 0.5881370306015015, 0.5588998198509216, 0.5624967217445374, 0.5364519357681274, 0.5320562720298767, 0.5134034156799316, 0.5132333040237427, 0.4997561275959015, 0.49136435985565186, 0.48931872844696045, 0.4689980447292328, 0.45786696672439575, 0.46065571904182434, 0.45518770813941956, 0.4373336434364319, 0.4301636815071106, 0.4272662103176117, 0.4155433773994446, 0.4168374240398407], "accuracy": [0.1258750557899475, 0.33258485794067383, 0.43323206901550293, 0.5451063513755798, 0.6380926966667175, 0.6691322326660156, 0.7008321285247803, 0.71100252866745, 0.7141724824905396, 0.7239466309547424, 0.7441553473472595, 0.7489103078842163, 0.7552502751350403, 0.7670056819915771, 0.7655527591705322, 0.767930269241333, 0.789459764957428, 0.7895918488502502, 0.7930260300636292, 0.7972526550292969, 0.8004226684570312, 0.8041210174560547, 0.8095363974571228, 0.8170651197433472, 0.8100647330284119, 0.8206313848495483, 0.8285563588142395, 0.8257825970649719, 0.824329674243927, 0.8343679904937744, 0.8384625315666199, 0.8364813327789307, 0.8421608805656433, 0.8343679904937744], "val_loss": [2.245361089706421, 2.016383409500122, 1.1383888721466064, 0.8676591515541077, 0.7485138177871704, 0.7038689255714417, 0.6719240546226501, 0.6363251805305481, 0.6195703744888306, 0.5901346206665039, 0.5608605146408081, 0.5389212369918823, 0.5242027044296265, 0.5252361297607422, 0.5095425248146057, 0.5004783272743225, 0.5008477568626404, 0.49733424186706543, 0.49541759490966797, 0.49241915345191956, 0.48688632249832153, 0.48393335938453674, 0.48802798986434937, 0.47660213708877563, 0.46933016180992126, 0.4692290425300598, 0.47074511647224426, 0.46423739194869995, 0.4502192437648773, 0.4516327977180481, 0.4612303078174591, 0.4547927975654602, 0.4451460838317871, 0.45225510001182556], "val_accuracy": [0.42933332920074463, 0.4659999907016754, 0.6416666507720947, 0.6926666498184204, 0.7173333168029785, 0.7400000095367432, 0.7476666569709778, 0.75, 0.7716666460037231, 0.7739999890327454, 0.7756666541099548, 0.7883333563804626, 0.8103333115577698, 0.7979999780654907, 0.812666654586792, 0.8076666593551636, 0.8083333373069763, 0.8130000233650208, 0.8140000104904175, 0.8119999766349792, 0.8190000057220459, 0.8236666917800903, 0.8223333358764648, 0.8273333311080933, 0.8326666951179504, 0.8360000252723694, 0.8373333215713501, 0.8360000252723694, 0.843999981880188, 0.8420000076293945, 0.8360000252723694, 0.8389999866485596, 0.8420000076293945, 0.8423333168029785]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8294285535812378, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6929776668548584, 0.9303663969039917, 0.7007100582122803, 0.6501846313476562, 0.5945340991020203, 0.5845962762832642, 0.5410565733909607, 0.5192888379096985, 0.5163595080375671, 0.5135356187820435, 0.4672974646091461, 0.4912509620189667, 0.4778013527393341, 0.4761000871658325, 0.5161086916923523, 0.5119063854217529, 0.4925507605075836, 0.46432599425315857], "accuracy": [0.48289525508880615, 0.6872276067733765, 0.7506273984909058, 0.7604015469551086, 0.7810064554214478, 0.7866860628128052, 0.800290584564209, 0.8095363974571228, 0.8127063512802124, 0.811649739742279, 0.8240655064582825, 0.8208954930305481, 0.8300092220306396, 0.8231409192085266, 0.8182538747787476, 0.8195747137069702, 0.8314621448516846, 0.8325188159942627], "val_loss": [0.9115689396858215, 0.7002086639404297, 0.5973849296569824, 0.5799817442893982, 0.5631585121154785, 0.5444404482841492, 0.5239401459693909, 0.5354337692260742, 0.5330066680908203, 0.5573237538337708, 0.5813695788383484, 0.5819666981697083, 0.5580646395683289, 0.5476750731468201, 0.6103218793869019, 0.5198532342910767, 0.6230820417404175, 0.606788158416748], "val_accuracy": [0.690666675567627, 0.762666642665863, 0.7940000295639038, 0.7893333435058594, 0.8026666641235352, 0.8103333115577698, 0.8173333406448364, 0.8169999718666077, 0.8119999766349792, 0.8146666884422302, 0.8106666803359985, 0.8193333148956299, 0.8353333473205566, 0.8209999799728394, 0.8293333053588867, 0.8293333053588867, 0.8353333473205566, 0.8159999847412109]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 3, 0, 3], [2, 0, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 4, 3, 0, 3, 5, 8, 1, 4, 4, 9], [3, 2, 0, 3, 0, 1, 1], [16, 16, 95], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [2, 3, 8, 6, 8, 1, 4, 1, 4, 4, 8], [0, 0, 0, 1, 0, 0, 3, 1, 2, 0], [16, 99, 76, 89, 61, 1]], "fitness": -0.1265714317560196, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.negative(grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.pow(tf.math.multiply(tf.math.negative(grad), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(alpha, alpha), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), alpha)), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.5102913709363692e+19, 6.250745594139116e+18, 4.226778333624402e+18, 3.281393771928879e+18, 3.066670695896318e+18, 2.688365578418127e+18], "accuracy": [0.10830801725387573, 0.11266675591468811, 0.11028926074504852, 0.1138555034995079, 0.10791176557540894, 0.11253467202186584], "val_loss": [5.599900131437576e+18, 3.716618132475871e+18, 2.8602885150720655e+18, 2.378421222007374e+18, 2.129822192723034e+18, 2.0240089045176156e+18], "val_accuracy": [0.13766667246818542, 0.12933333218097687, 0.11933333426713943, 0.109333336353302, 0.09533333033323288, 0.0729999989271164]}, "mapping_values": [1, 9, 5, 4, 2, 18, 11, 7, 3, 2, 1, 1, 1, 11, 6, 5, 4], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 2, 3, 0, 3, 8, 5, 5], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 1, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 0, 0, 3, 0, 3, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 8, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 18, 9, 9, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.square(tf.math.square(grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, sigma))))), alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1], [9, 2, 3, 3, 3], [2, 1, 0, 2], [94, 58], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 8, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1, 0, 1, 1], [2, 6], [0, 7, 7], [99], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [6, 3, 1, 2, 8, 1, 4, 2, 4, 2, 8, 3], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 1], [16, 99, 96, 99, 98, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 10, 6, 4, 2, 5, 2, 3, 1, 23, 12, 11, 6], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.sqrt(tf.math.multiply(alpha, beta)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 9, 6, 0, 3, 5, 9], [0, 1, 0, 2], [39, 39, 72], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 3, 3, 8, 5, 5, 4], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [1, 3, 1, 6, 8, 1, 4, 1, 4, 2, 8], [0, 4, 0, 3, 0, 4, 3, 4, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.09971428662538528, "mapping_values": [1, 9, 7, 2, 3, 11, 7, 4, 1, 2, 1, 1, 1, 5, 2, 3, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.square(tf.math.square(tf.math.pow(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [8.901323244792732e+25, 5.148500919342041, 12.040802001953125, 19.245014190673828, 26.437397003173828, 33.643280029296875], "accuracy": [0.08730682730674744, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.0116400718688965, 9.066581726074219, 16.26839828491211, 23.45685386657715, 30.660404205322266, 37.85866165161133], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]