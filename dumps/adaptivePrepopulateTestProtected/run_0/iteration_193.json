[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8640000224113464, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22070050239563, 1.853951096534729, 1.3685147762298584, 1.087929368019104, 0.9276613593101501, 0.8295852541923523, 0.7693737745285034, 0.7257700562477112, 0.6842927932739258, 0.6555402874946594, 0.6240533590316772, 0.6070946455001831, 0.5912788510322571, 0.5732961893081665, 0.548328161239624, 0.5340847373008728, 0.5219895243644714, 0.5101617574691772, 0.5040278434753418, 0.492814302444458, 0.47729209065437317, 0.47463586926460266, 0.46200358867645264, 0.4517497718334198, 0.4454893171787262, 0.4371127188205719, 0.4302832782268524, 0.4203721284866333, 0.4084068834781647, 0.4075256288051605, 0.39842337369918823, 0.3947898745536804, 0.385511577129364, 0.38013237714767456, 0.38313522934913635, 0.3743007183074951, 0.3710537552833557, 0.350633442401886, 0.35178855061531067, 0.34452056884765625, 0.34265610575675964, 0.33164724707603455, 0.32838016748428345, 0.33377623558044434, 0.3253210186958313, 0.32129448652267456, 0.3152328431606293, 0.30822524428367615, 0.3063243627548218, 0.3060179352760315, 0.2932073771953583, 0.29026907682418823, 0.2846840023994446, 0.2767289876937866, 0.28391385078430176, 0.2758336067199707, 0.27233338356018066, 0.26775476336479187], "accuracy": [0.2759212851524353, 0.49927353858947754, 0.5777308344841003, 0.6260731816291809, 0.6774534583091736, 0.7036058902740479, 0.7277770638465881, 0.7415136694908142, 0.7549861073493958, 0.7619865536689758, 0.7709681391716003, 0.7828556299209595, 0.7891955971717834, 0.7965922355651855, 0.804649293422699, 0.8099326491355896, 0.8133667707443237, 0.8161405324935913, 0.8162726163864136, 0.8269713521003723, 0.833179235458374, 0.8333113193511963, 0.8358209133148193, 0.8409721255302429, 0.8422929644584656, 0.8441421389579773, 0.847840428352356, 0.8455950617790222, 0.8598600029945374, 0.8580108284950256, 0.8578787446022034, 0.8598600029945374, 0.860652506351471, 0.8673887252807617, 0.8617091774940491, 0.8669924736022949, 0.872407853603363, 0.8791441321372986, 0.8798044919967651, 0.8795403242111206, 0.8802007436752319, 0.8838990926742554, 0.8857482671737671, 0.8813894987106323, 0.886672854423523, 0.8870691061019897, 0.8838990926742554, 0.891559898853302, 0.8931449055671692, 0.8928807377815247, 0.8976356983184814, 0.8981640338897705, 0.8969752788543701, 0.8993527889251709, 0.8972394466400146, 0.9030511379241943, 0.90423983335495, 0.9075419306755066], "val_loss": [2.030174732208252, 1.4907467365264893, 1.024377465248108, 0.8334254622459412, 0.7427107691764832, 0.6861280202865601, 0.6432992219924927, 0.6157471537590027, 0.5883352756500244, 0.5647149085998535, 0.5536001920700073, 0.5362899303436279, 0.5218971371650696, 0.5079057216644287, 0.49675920605659485, 0.4879435896873474, 0.4751540422439575, 0.4778495132923126, 0.46490755677223206, 0.4603899419307709, 0.44899919629096985, 0.4443179666996002, 0.4330384135246277, 0.43451637029647827, 0.4262101948261261, 0.426084965467453, 0.42020291090011597, 0.4123823344707489, 0.4145159423351288, 0.40439778566360474, 0.40162768959999084, 0.39454230666160583, 0.399529367685318, 0.38718360662460327, 0.3837437629699707, 0.38620486855506897, 0.37734895944595337, 0.3805544376373291, 0.3715541958808899, 0.3696101903915405, 0.3674798309803009, 0.36895784735679626, 0.3629092574119568, 0.3669514060020447, 0.3618888854980469, 0.3637540638446808, 0.35986319184303284, 0.3565157949924469, 0.3549913465976715, 0.3503358066082001, 0.35065892338752747, 0.35049837827682495, 0.34670165181159973, 0.3557245135307312, 0.343260258436203, 0.34750667214393616, 0.3432552218437195, 0.33934301137924194], "val_accuracy": [0.550000011920929, 0.6643333435058594, 0.6859999895095825, 0.7093333601951599, 0.7300000190734863, 0.7440000176429749, 0.7583333253860474, 0.7643333077430725, 0.7743333578109741, 0.7956666946411133, 0.7963333129882812, 0.8019999861717224, 0.8053333163261414, 0.8183333277702332, 0.8216666579246521, 0.8216666579246521, 0.8323333263397217, 0.8289999961853027, 0.8346666693687439, 0.8379999995231628, 0.8339999914169312, 0.8420000076293945, 0.843999981880188, 0.8453333377838135, 0.846666693687439, 0.8486666679382324, 0.8496666550636292, 0.8543333411216736, 0.8516666889190674, 0.8543333411216736, 0.8539999723434448, 0.8569999933242798, 0.8586666584014893, 0.8569999933242798, 0.8616666793823242, 0.8566666841506958, 0.8659999966621399, 0.8666666746139526, 0.8666666746139526, 0.8629999756813049, 0.8659999966621399, 0.8693333268165588, 0.8666666746139526, 0.8693333268165588, 0.8693333268165588, 0.8656666874885559, 0.8709999918937683, 0.8730000257492065, 0.8706666827201843, 0.874666690826416, 0.871666669845581, 0.871999979019165, 0.8803333044052124, 0.8683333396911621, 0.878333330154419, 0.878333330154419, 0.8786666393280029, 0.8766666650772095]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 7, 3, 6, 8, 6, 3, 6, 4, 7, 1, 1, 6, 7, 6, 7, 7, 0, 9, 4, 0, 1, 9, 7, 9, 2, 4, 0, 9, 1, 0, 3, 5, 3, 3, 9], [0, 7, 2, 1, 6, 5, 7, 6, 7, 6, 6, 5, 5, 5, 6, 4, 3, 0, 2, 3], [0, 65, 66, 99, 80, 62, 97], [0, 1], [0], [1], [0]], "fitness": -0.8371428847312927, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, beta)), tf.math.multiply(tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.subtract(tf.math.subtract(alpha, grad), tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(grad, grad), grad), tf.math.add(grad, tf.math.add(tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.pow(tf.math.negative(tf.math.subtract(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), grad)), grad)), tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(grad, tf.math.negative(grad)), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, grad)), tf.math.negative(sigma))), tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(tf.math.multiply(beta, sigma), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.292416572570801, 2.185314178466797, 1.7545795440673828, 1.3286174535751343, 1.0657801628112793, 0.9124258160591125, 0.8569362759590149, 0.8293561339378357, 0.7862876653671265, 0.7379460334777832, 0.6965121030807495, 0.6658521890640259, 0.6525434851646423, 0.6197081804275513, 0.6004210114479065, 0.601292073726654, 0.5770255923271179, 0.5737206935882568, 0.5681517720222473, 0.5474042296409607, 0.5326512455940247, 0.5234897136688232, 0.5134822130203247, 0.5129044055938721, 0.5000659823417664, 0.4937213957309723, 0.4893439710140228, 0.48444807529449463, 0.45743808150291443, 0.45791095495224, 0.4511071741580963, 0.43670108914375305], "accuracy": [0.12996962666511536, 0.3271694481372833, 0.43983620405197144, 0.5460308790206909, 0.6302998065948486, 0.6653017997741699, 0.6872276067733765, 0.6925109028816223, 0.6977941989898682, 0.7172104120254517, 0.7327961921691895, 0.7454761862754822, 0.7436270117759705, 0.7614582180976868, 0.7687227725982666, 0.7685906887054443, 0.7790252566337585, 0.77677983045578, 0.7868181467056274, 0.7877426743507385, 0.7907806038856506, 0.7913089394569397, 0.7998943328857422, 0.8030643463134766, 0.8025360107421875, 0.8058380484580994, 0.8132346868515015, 0.8152159452438354, 0.8181217908859253, 0.8232730031013489, 0.822348415851593, 0.8264430165290833], "val_loss": [2.2450129985809326, 2.0089783668518066, 1.128301739692688, 0.9051546454429626, 0.7804530262947083, 0.7161686420440674, 0.6862451434135437, 0.6546167135238647, 0.6369871497154236, 0.6072091460227966, 0.5741349458694458, 0.558026909828186, 0.5473320484161377, 0.5310004949569702, 0.5228977203369141, 0.519180417060852, 0.5140169858932495, 0.4966157078742981, 0.48879021406173706, 0.4749107360839844, 0.4834425747394562, 0.4774738848209381, 0.4872659146785736, 0.4627515971660614, 0.45589694380760193, 0.46611079573631287, 0.4446031153202057, 0.4429311454296112, 0.4379866123199463, 0.4401105046272278, 0.4274330139160156, 0.4248562753200531], "val_accuracy": [0.42899999022483826, 0.44699999690055847, 0.6499999761581421, 0.6833333373069763, 0.7076666951179504, 0.7319999933242798, 0.7223333120346069, 0.7523333430290222, 0.749666690826416, 0.768666684627533, 0.765666663646698, 0.7723333239555359, 0.7839999794960022, 0.7873333096504211, 0.7900000214576721, 0.7929999828338623, 0.7996666431427002, 0.8036666512489319, 0.8083333373069763, 0.8130000233650208, 0.8056666851043701, 0.812666654586792, 0.8203333616256714, 0.8266666531562805, 0.8253333568572998, 0.8203333616256714, 0.8433333039283752, 0.8373333215713501, 0.8339999914169312, 0.8296666741371155, 0.8410000205039978, 0.8370000123977661]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 56, 36, 20, 7, 2, 1, 1, 0], "tree_depth": 28}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.8274285793304443, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5120116472244263, 0.8061554431915283, 0.6349741220474243, 0.6206074953079224, 0.5664618015289307, 0.5382898449897766, 0.5664581656455994, 0.5250303149223328, 0.543245792388916, 0.5843070149421692, 0.5363258123397827, 0.5236960053443909, 0.5583854913711548, 0.5285162329673767, 0.5329001545906067, 0.5296401381492615], "accuracy": [0.4858010709285736, 0.7091533541679382, 0.7588165402412415, 0.7633073329925537, 0.7814027070999146, 0.7988376617431641, 0.7902522683143616, 0.8062343001365662, 0.8098005652427673, 0.7980451583862305, 0.8113855719566345, 0.8132346868515015, 0.8096684813499451, 0.8212917447090149, 0.8132346868515015, 0.8164047002792358], "val_loss": [0.8108073472976685, 0.5906652212142944, 0.5403708219528198, 0.5080102682113647, 0.48177027702331543, 0.5014216303825378, 0.5229582786560059, 0.5165848731994629, 0.5409616827964783, 0.5641974210739136, 0.5199963450431824, 0.5779635310173035, 0.5240856409072876, 0.5587373971939087, 0.551817774772644, 0.5490628480911255], "val_accuracy": [0.7049999833106995, 0.7846666574478149, 0.7943333387374878, 0.8116666674613953, 0.8213333487510681, 0.8206666707992554, 0.8299999833106995, 0.8276666402816772, 0.8216666579246521, 0.8276666402816772, 0.8363333344459534, 0.8190000057220459, 0.828000009059906, 0.8320000171661377, 0.8323333263397217, 0.8163333535194397]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 1, 0, 1, 5], [0, 2, 0, 3], [16, 16], [0, 0, 0, 0, 1, 1], [0, 1, 9, 6], [0, 2], [99, 4], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 4, 3, 1, 2, 0], [39, 99, 96, 99, 61, 1]], "fitness": -0.10114285349845886, "mapping_values": [1, 9, 5, 4, 2, 1, 0, 1, 1, 6, 4, 2, 2, 16, 8, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), grad))), sigma), alpha)", "other_info": {"loss": [2.4502495678709105e+18, 2.9398321340277064e+18, 2.954648328089895e+18, 8.002945466104807e+18, 5.430353239411261e+18, 1.554614553821787e+19], "accuracy": [0.09470347315073013, 0.0948355570435524, 0.09311848133802414, 0.09536388516426086, 0.09126931428909302, 0.09655263274908066], "val_loss": [2.6337151775932416e+18, 2.633693187360686e+18, 2.637551923418366e+18, 2.641400214115582e+18, 2.6471998630741934e+18, 2.65627853058474e+18], "val_accuracy": [0.0976666659116745, 0.0976666659116745, 0.09733333438634872, 0.09733333438634872, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 8, 6, 0, 0], [0, 1, 0, 2, 3], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 6, 0], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 6, 2, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 2, 1, 4, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 9, 5, 2, 10, 6, 4, 2, 2, 1, 1, 1, 17, 8, 9, 5], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))), tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), sigma), tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, alpha))), grad)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 6, 0, 3, 5, 4, 2, 8, 8, 1, 7], [0, 2, 0, 3, 0, 4, 2, 4], [16, 16, 5], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 9, 3, 6, 8, 1, 6, 1, 4, 2, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 20, 12, 8, 3, 2, 1, 1, 1, 21, 12, 9, 6], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.math.square(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), grad))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(sigma, tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), sigma)))), tf.math.add(tf.math.sqrt(alpha), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [1, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 1, 4], [0, 2, 0, 3, 3, 3], [16, 16], [0, 1, 1], [1], [4, 6], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 5, 2, 8], [0, 4, 0, 3, 0, 4, 3, 1, 1, 0], [16, 35, 96, 42, 61, 1]], "fitness": -0.08857142925262451, "mapping_values": [1, 9, 5, 4, 1, 13, 7, 6, 2, 3, 1, 2, 0, 12, 6, 6, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(grad, tf.math.pow(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(grad, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), sigma)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), grad)", "other_info": {"loss": [2.3099570274353027, 2.3096354007720947, 2.309591770172119, 2.311835765838623, 2.309159517288208, 2.310054063796997], "accuracy": [0.09179764986038208, 0.08955223858356476, 0.09351472556591034, 0.08968432247638702, 0.09259014576673508, 0.08770307898521423], "val_loss": [2.309387445449829, 2.309387445449829, 2.309387445449829, 2.309387445449829, 2.309387445449829, 2.309387445449829], "val_accuracy": [0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869, 0.09000000357627869]}}]