[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8611428737640381, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2243001461029053, 1.8736622333526611, 1.3922719955444336, 1.085006594657898, 0.9124624133110046, 0.8250401020050049, 0.7596368789672852, 0.7135574817657471, 0.6806737780570984, 0.6430932879447937, 0.622149646282196, 0.6030232906341553, 0.5817744731903076, 0.5626475811004639, 0.5407096147537231, 0.5217081308364868, 0.5141303539276123, 0.5097419619560242, 0.5014124512672424, 0.47898080945014954, 0.4673272371292114, 0.464526504278183, 0.44731423258781433, 0.4391516447067261, 0.43548426032066345, 0.4301608204841614, 0.4226124882698059, 0.41743314266204834, 0.40039321780204773, 0.3947175145149231, 0.39789581298828125, 0.3877066969871521, 0.38020071387290955], "accuracy": [0.270109623670578, 0.4896314740180969, 0.5633337497711182, 0.624620258808136, 0.677189290523529, 0.7014925479888916, 0.7306828498840332, 0.7423061728477478, 0.7514199018478394, 0.7631752490997314, 0.774798572063446, 0.7769119143486023, 0.7854973077774048, 0.7969884872436523, 0.8010830879211426, 0.8076872229576111, 0.8082155585289001, 0.8141592741012573, 0.8191784620285034, 0.8276317715644836, 0.8285563588142395, 0.8305375576019287, 0.8372738361358643, 0.8408400416374207, 0.8396512866020203, 0.8461233377456665, 0.8457271456718445, 0.8473120927810669, 0.8532558679580688, 0.8594637513160706, 0.8543124794960022, 0.8580108284950256, 0.859199583530426], "val_loss": [2.047255754470825, 1.5364412069320679, 1.0656921863555908, 0.8563673496246338, 0.7655655145645142, 0.7147930264472961, 0.6710624098777771, 0.6348942518234253, 0.6111201643943787, 0.5927053093910217, 0.5765217542648315, 0.5574953556060791, 0.5476254820823669, 0.5268312096595764, 0.5200732946395874, 0.5072191953659058, 0.49772173166275024, 0.4906378984451294, 0.48334240913391113, 0.4745132327079773, 0.4704953134059906, 0.4607011377811432, 0.4547288119792938, 0.45119792222976685, 0.4456223249435425, 0.4439602196216583, 0.44535887241363525, 0.4357864260673523, 0.4315315783023834, 0.4285109341144562, 0.4261273741722107, 0.4265004098415375, 0.4232994019985199], "val_accuracy": [0.5406666398048401, 0.6386666893959045, 0.6819999814033508, 0.7009999752044678, 0.7266666889190674, 0.7383333444595337, 0.7519999742507935, 0.7649999856948853, 0.778333306312561, 0.7683333158493042, 0.7943333387374878, 0.79666668176651, 0.7906666398048401, 0.8113333582878113, 0.8173333406448364, 0.8176666498184204, 0.8209999799728394, 0.824999988079071, 0.8273333311080933, 0.8353333473205566, 0.8296666741371155, 0.8389999866485596, 0.8426666855812073, 0.8393333554267883, 0.8473333120346069, 0.8489999771118164, 0.8433333039283752, 0.8533333539962769, 0.8476666808128357, 0.8463333249092102, 0.8519999980926514, 0.8496666550636292, 0.8493333458900452]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.831428587436676, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2931768894195557, 2.188236713409424, 1.7670706510543823, 1.3544737100601196, 1.0580285787582397, 0.9251082539558411, 0.872432291507721, 0.8320206999778748, 0.7789101004600525, 0.7496589422225952, 0.6989613771438599, 0.661465048789978, 0.6313674449920654, 0.6183823347091675, 0.6220945715904236, 0.5836054086685181, 0.579711377620697, 0.5788263082504272, 0.5626128911972046, 0.5374847054481506, 0.5220024585723877, 0.5244227051734924, 0.5138335227966309, 0.49069005250930786, 0.49439331889152527, 0.4789976477622986, 0.4710952341556549, 0.4593365490436554, 0.44341811537742615, 0.4404698610305786, 0.44600701332092285], "accuracy": [0.12930920720100403, 0.3263769745826721, 0.43864747881889343, 0.5480121374130249, 0.6347906589508057, 0.6651697158813477, 0.6767930388450623, 0.6931713223457336, 0.6991150379180908, 0.7164179086685181, 0.7345132827758789, 0.7449478507041931, 0.7602694630622864, 0.7629110813140869, 0.7633073329925537, 0.7803460359573364, 0.7753269076347351, 0.7749306559562683, 0.787082314491272, 0.7906485199928284, 0.7971205711364746, 0.8020076751708984, 0.8050455451011658, 0.8161405324935913, 0.8146876096725464, 0.8169330358505249, 0.8239334225654602, 0.8265751004219055, 0.830669641494751, 0.8321225643157959, 0.8277638554573059], "val_loss": [2.246807336807251, 2.017751693725586, 1.1414324045181274, 0.8628292083740234, 0.7556987404823303, 0.7315545082092285, 0.6553781628608704, 0.6423259377479553, 0.6281178593635559, 0.6289790272712708, 0.5788816809654236, 0.5520430207252502, 0.5269098877906799, 0.506243109703064, 0.5015485286712646, 0.49600106477737427, 0.49141454696655273, 0.4755900204181671, 0.47841960191726685, 0.4674608111381531, 0.4639816880226135, 0.4598287045955658, 0.44724124670028687, 0.44306129217147827, 0.441087931394577, 0.4410107433795929, 0.4413447976112366, 0.4335620105266571, 0.4320155382156372, 0.4314461350440979, 0.42825525999069214], "val_accuracy": [0.41100001335144043, 0.4560000002384186, 0.6496666669845581, 0.6963333487510681, 0.7329999804496765, 0.7379999756813049, 0.7486666440963745, 0.7636666893959045, 0.7636666893959045, 0.7680000066757202, 0.7706666588783264, 0.7856666445732117, 0.7986666560173035, 0.8109999895095825, 0.8083333373069763, 0.8109999895095825, 0.8173333406448364, 0.8136666417121887, 0.8266666531562805, 0.824999988079071, 0.8273333311080933, 0.8366666436195374, 0.8383333086967468, 0.8443333506584167, 0.8443333506584167, 0.8516666889190674, 0.8489999771118164, 0.8516666889190674, 0.846666693687439, 0.8426666855812073, 0.8503333330154419]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 4, 4, 0, 1, 0, 4, 5, 3], [0, 5, 0, 6, 7, 6], [0, 12], [1], [0], [2], [0]], "fitness": -0.8031428456306458, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(grad, tf.math.negative(tf.math.subtract(tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.square(tf.math.multiply(grad, grad)))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6896699666976929, 0.8401094675064087, 0.7123613953590393, 0.6323692202568054, 0.5997056365013123, 0.5491981506347656, 0.5380315780639648, 0.5301572680473328, 0.5054540634155273, 0.5067854523658752, 0.4775061309337616, 0.4737572968006134, 0.49038204550743103, 0.46986252069473267, 0.4750141501426697, 0.4843675196170807, 0.44812947511672974, 0.4828915297985077, 0.4853507876396179, 0.5071250796318054, 0.507329523563385, 0.4868657886981964, 0.5256771445274353, 0.4943488836288452, 0.5169240236282349, 0.5445491671562195], "accuracy": [0.4842160940170288, 0.695813000202179, 0.7432307600975037, 0.7685906887054443, 0.776251494884491, 0.7987055778503418, 0.7981772422790527, 0.8165367841720581, 0.8157442808151245, 0.8140271902084351, 0.829216718673706, 0.8269713521003723, 0.8245938420295715, 0.8247259259223938, 0.8227446675300598, 0.8219521641731262, 0.8457271456718445, 0.8277638554573059, 0.8302733898162842, 0.8297450542449951, 0.8227446675300598, 0.8384625315666199, 0.8298771381378174, 0.822348415851593, 0.8273676037788391, 0.8173292875289917], "val_loss": [0.7871085405349731, 0.6397413015365601, 0.5511707067489624, 0.5031580924987793, 0.473268061876297, 0.47356945276260376, 0.46585962176322937, 0.48736894130706787, 0.45709896087646484, 0.46145951747894287, 0.4749372601509094, 0.4812343716621399, 0.47181203961372375, 0.4425174593925476, 0.435391366481781, 0.468555212020874, 0.4731610417366028, 0.4550764560699463, 0.47216275334358215, 0.47842350602149963, 0.4961588680744171, 0.4574772119522095, 0.47947803139686584, 0.4913308620452881, 0.48150700330734253, 0.5067747831344604], "val_accuracy": [0.7080000042915344, 0.7743333578109741, 0.7946666479110718, 0.7986666560173035, 0.8190000057220459, 0.8140000104904175, 0.8216666579246521, 0.8370000123977661, 0.8389999866485596, 0.8379999995231628, 0.8240000009536743, 0.8399999737739563, 0.8376666903495789, 0.8446666598320007, 0.843666672706604, 0.8420000076293945, 0.8473333120346069, 0.840666651725769, 0.8399999737739563, 0.8510000109672546, 0.8519999980926514, 0.8346666693687439, 0.8379999995231628, 0.8420000076293945, 0.8333333134651184, 0.8330000042915344]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 15, 9, 6, 2, 1, 0, 1, 0], "tree_depth": 19}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 3, 1, 3], [0, 1, 0, 0, 1], [39, 39, 83], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 2, 5, 1, 8, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 5], [16, 99, 96, 99, 61, 1, 77]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 3, 10, 6, 4, 2, 2, 1, 1, 1, 27, 16, 11, 7], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.math.add(tf.math.square(tf.math.subtract(tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), grad)))", "other_info": {"loss": [2.309107780456543, 2.30336594581604, 2.3025636672973633, 47.10496520996094, 14099.56640625, 2539437.75, 457015840.0, 80895279104.0], "accuracy": [0.09311848133802414, 0.10513802617788315, 0.1014397069811821, 0.10434553027153015, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3062987327575684, 2.3025877475738525, 2.303635597229004, 627.0516967773438, 123460.96875, 22144816.0, 3969004288.0, 700896509952.0], "val_accuracy": [0.07466666400432587, 0.0976666659116745, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 0, 1, 0, 2], [39, 39], [0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [0], [1, 1], [0], [0, 7, 2, 0, 4, 0, 7, 5, 5], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [1, 0, 1, 7, 3, 4, 7, 3, 6, 4], [0]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 2, 1, 1, 1, 1, 0, 1, 1, 21, 11, 10, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(alpha, grad))), tf.math.subtract(sigma, tf.math.pow(grad, grad)))), sigma), tf.math.add(tf.math.sqrt(grad), grad))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [2, 2, 3, 0, 3, 6, 8], [0, 1, 0, 2, 2, 2], [39, 39], [0, 1], [0], [0], [16, 16], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 5, 4, 0, 9, 5, 1], [0, 4], [11, 21], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 9, 8], [0, 0, 0, 3, 0, 0, 1, 1, 2, 0], [16, 99, 96, 87, 88, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 7, 6, 2, 2, 1, 1, 1, 6, 5, 1, 2, 18, 10, 8, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), tf.math.sqrt(grad)), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.pow(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), alpha)))), alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 33], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 2, 4, 0, 3, 6], [0, 2, 2, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 24, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 9, 5, 4, 1, 2, 1, 1, 1, 20, 10, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.pow(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0940430611371994, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}]