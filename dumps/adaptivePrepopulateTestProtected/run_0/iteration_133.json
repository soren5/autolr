[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8562856912612915, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2197179794311523, 1.8602122068405151, 1.393522024154663, 1.1071605682373047, 0.9523083567619324, 0.8487708568572998, 0.7915841341018677, 0.7305817008018494, 0.6958376169204712, 0.6720821261405945, 0.6510136723518372, 0.619266152381897, 0.6075302958488464, 0.5894029140472412, 0.5669877529144287, 0.5526017546653748, 0.5480104684829712, 0.5152631402015686, 0.5194555521011353, 0.5049458742141724, 0.49250462651252747, 0.4764886200428009, 0.4736664891242981, 0.46788713335990906, 0.452018678188324, 0.4494129419326782, 0.43936994671821594, 0.43418896198272705, 0.4335566461086273, 0.4275944232940674, 0.4118524193763733, 0.40572577714920044, 0.4011004865169525, 0.39306291937828064, 0.38599273562431335, 0.38042059540748596, 0.3744868040084839, 0.3716629147529602, 0.36608412861824036, 0.3649842441082001, 0.35356345772743225, 0.3548792004585266, 0.34419527649879456, 0.33857035636901855, 0.3434447646141052, 0.3298281729221344, 0.3288421332836151, 0.320555716753006, 0.3120807409286499, 0.31267213821411133, 0.3183116316795349, 0.3098562955856323, 0.2971758544445038, 0.2981918752193451], "accuracy": [0.27380794286727905, 0.4904239773750305, 0.5661075115203857, 0.6164311170578003, 0.6660943031311035, 0.6983225345611572, 0.7103421092033386, 0.7312111854553223, 0.7440232634544373, 0.7547219395637512, 0.7660810947418213, 0.778232753276825, 0.7804781198501587, 0.7827235460281372, 0.7991018295288086, 0.7976489067077637, 0.800290584564209, 0.8152159452438354, 0.8074230551719666, 0.8136309385299683, 0.821820080280304, 0.8308017253875732, 0.8305375576019287, 0.834632158279419, 0.8366134166717529, 0.8368775844573975, 0.8455950617790222, 0.842028796672821, 0.8469158411026001, 0.8450667262077332, 0.8556333184242249, 0.8573504090309143, 0.8557654023170471, 0.8595958352088928, 0.8628978729248047, 0.8648791313171387, 0.8654074668884277, 0.8665962219238281, 0.8676528930664062, 0.8658037185668945, 0.8710870146751404, 0.8704266548156738, 0.8799365758895874, 0.8813894987106323, 0.8768987059593201, 0.8776912093162537, 0.8794082403182983, 0.8840311765670776, 0.8870691061019897, 0.8849557638168335, 0.8837670087814331, 0.8911636471748352, 0.8883898854255676, 0.889578640460968], "val_loss": [2.0332510471343994, 1.5033297538757324, 1.04143226146698, 0.841304361820221, 0.7531327605247498, 0.6975510120391846, 0.6511865258216858, 0.6139587163925171, 0.5830759406089783, 0.5666071772575378, 0.5476323366165161, 0.525687575340271, 0.5164017677307129, 0.501894474029541, 0.48810312151908875, 0.483853280544281, 0.46958425641059875, 0.4636375308036804, 0.4578835964202881, 0.4494680166244507, 0.4427938163280487, 0.43636080622673035, 0.4335559904575348, 0.4268295168876648, 0.4287131726741791, 0.4138837158679962, 0.41505011916160583, 0.41511231660842896, 0.4189475476741791, 0.4063322842121124, 0.3971409499645233, 0.3926728367805481, 0.38803282380104065, 0.3854614198207855, 0.38503193855285645, 0.38250353932380676, 0.3761182129383087, 0.3752405047416687, 0.37483105063438416, 0.37798625230789185, 0.3733495771884918, 0.37368854880332947, 0.3698287904262543, 0.36837899684906006, 0.36454707384109497, 0.36789798736572266, 0.3602592647075653, 0.35635823011398315, 0.3566700518131256, 0.36254239082336426, 0.35839223861694336, 0.36001455783843994, 0.35973039269447327, 0.34895026683807373], "val_accuracy": [0.5246666669845581, 0.659333348274231, 0.6783333420753479, 0.7089999914169312, 0.7303333282470703, 0.734000027179718, 0.7620000243186951, 0.7760000228881836, 0.7829999923706055, 0.7900000214576721, 0.7950000166893005, 0.8100000023841858, 0.8080000281333923, 0.8183333277702332, 0.8206666707992554, 0.8259999752044678, 0.8370000123977661, 0.8326666951179504, 0.8426666855812073, 0.8456666469573975, 0.8433333039283752, 0.8489999771118164, 0.8516666889190674, 0.8526666760444641, 0.8523333072662354, 0.859666645526886, 0.8566666841506958, 0.8506666421890259, 0.8500000238418579, 0.8619999885559082, 0.8673333525657654, 0.8659999966621399, 0.8663333058357239, 0.8703333139419556, 0.8703333139419556, 0.8686666488647461, 0.8740000128746033, 0.8743333220481873, 0.871666669845581, 0.8713333606719971, 0.8723333477973938, 0.874666690826416, 0.8766666650772095, 0.8759999871253967, 0.8709999918937683, 0.8773333430290222, 0.8796666860580444, 0.8796666860580444, 0.8830000162124634, 0.8790000081062317, 0.878333330154419, 0.878000020980835, 0.8786666393280029, 0.878333330154419]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 0, 0], [0, 2, 9, 8, 9], [0], [0, 69], [1], [0], [2], [0]], "fitness": -0.834857165813446, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.4621710777282715, 0.7481441497802734, 0.6434685587882996, 0.5814571976661682, 0.5590136051177979, 0.5313190221786499, 0.526374101638794, 0.4817897379398346, 0.46786633133888245, 0.4661414623260498, 0.4761594533920288, 0.4954434633255005, 0.46253547072410583, 0.48753371834754944, 0.4884550869464874, 0.5088205337524414, 0.5010948181152344, 0.5722577571868896, 0.5077478885650635], "accuracy": [0.5068022608757019, 0.737022876739502, 0.7619865536689758, 0.7873464822769165, 0.8016114234924316, 0.8105930685997009, 0.8169330358505249, 0.8197067975997925, 0.8341038227081299, 0.8335754871368408, 0.8333113193511963, 0.8341038227081299, 0.8376700282096863, 0.837141752243042, 0.8404437899589539, 0.8247259259223938, 0.8338396549224854, 0.8230088353157043, 0.837537944316864], "val_loss": [0.7265293002128601, 0.5893998742103577, 0.5035075545310974, 0.49875277280807495, 0.49613362550735474, 0.4951004981994629, 0.4695626497268677, 0.4697207808494568, 0.46302247047424316, 0.486287921667099, 0.5093393325805664, 0.5114862322807312, 0.5071446895599365, 0.5130255818367004, 0.5046883225440979, 0.5185460448265076, 0.5978929400444031, 0.559243381023407, 0.5566301941871643], "val_accuracy": [0.7446666955947876, 0.7670000195503235, 0.812333345413208, 0.8216666579246521, 0.8193333148956299, 0.8243333101272583, 0.8336666822433472, 0.8376666903495789, 0.8463333249092102, 0.8429999947547913, 0.8360000252723694, 0.8426666855812073, 0.8443333506584167, 0.8483333587646484, 0.8370000123977661, 0.8446666598320007, 0.8450000286102295, 0.8353333473205566, 0.8320000171661377]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 5, 5, 0, 2, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1, 1], [0, 2], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.8220000267028809, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2928898334503174, 2.1865358352661133, 1.76535964012146, 1.3503977060317993, 1.061038851737976, 0.8983331918716431, 0.8181145787239075, 0.7872283458709717, 0.7587319016456604, 0.7379906177520752, 0.6830931901931763, 0.6739971041679382, 0.6464027166366577, 0.6166660189628601, 0.5958526134490967, 0.5923684239387512, 0.575685977935791, 0.5642175674438477, 0.544677197933197, 0.5322215557098389, 0.5281217694282532, 0.5182027816772461, 0.514877200126648, 0.4947457015514374, 0.4965638518333435, 0.48209941387176514, 0.485450804233551, 0.47949087619781494, 0.46178916096687317, 0.45399710536003113, 0.4392165541648865, 0.4239143431186676, 0.421578586101532, 0.4149867594242096, 0.4047999382019043, 0.40081334114074707, 0.3961833119392395, 0.3843386173248291, 0.38538211584091187, 0.36357933282852173, 0.36944493651390076, 0.3556331396102905, 0.3505902886390686, 0.3544997572898865, 0.35216405987739563, 0.3573662042617798, 0.33801499009132385, 0.3409416377544403, 0.3366799056529999, 0.3457487225532532, 0.33724504709243774, 0.3381649851799011, 0.331703245639801, 0.32038506865501404, 0.32531124353408813, 0.3004011809825897], "accuracy": [0.1258750557899475, 0.33179235458374023, 0.42689210176467896, 0.5431250929832458, 0.6342623233795166, 0.6668868064880371, 0.698718786239624, 0.7042662501335144, 0.7045304179191589, 0.71100252866745, 0.7395324110984802, 0.7413815855979919, 0.7534011602401733, 0.7585523724555969, 0.7725531458854675, 0.7734777331352234, 0.7775723338127136, 0.7812706232070923, 0.7877426743507385, 0.7923656105995178, 0.7988376617431641, 0.8031964302062988, 0.7984414100646973, 0.804649293422699, 0.8043851256370544, 0.8153480291366577, 0.8152159452438354, 0.8145555257797241, 0.8158763647079468, 0.822348415851593, 0.8322546482086182, 0.8335754871368408, 0.8333113193511963, 0.8411042094230652, 0.8430854678153992, 0.8409721255302429, 0.8445383906364441, 0.8508783578872681, 0.8533879518508911, 0.8536521196365356, 0.8515387773513794, 0.8614450097084045, 0.8613129258155823, 0.8568220734596252, 0.8647470474243164, 0.8573504090309143, 0.8681812286376953, 0.8677849769592285, 0.8647470474243164, 0.8556333184242249, 0.8676528930664062, 0.8710870146751404, 0.868049144744873, 0.8749174475669861, 0.8726720213890076, 0.8770307898521423], "val_loss": [2.245185613632202, 2.0092952251434326, 1.123206377029419, 0.8340396285057068, 0.7597322463989258, 0.6947556734085083, 0.6465213298797607, 0.6401199698448181, 0.61549973487854, 0.5847070813179016, 0.5530045032501221, 0.5325109362602234, 0.528379499912262, 0.5079856514930725, 0.5005913376808167, 0.501984715461731, 0.4942913353443146, 0.483255535364151, 0.48057419061660767, 0.4811953008174896, 0.46949994564056396, 0.47160694003105164, 0.470897376537323, 0.4742978513240814, 0.46333399415016174, 0.4687303602695465, 0.46205297112464905, 0.45746558904647827, 0.44838565587997437, 0.4483870565891266, 0.43924471735954285, 0.4343482553958893, 0.41897252202033997, 0.4286942481994629, 0.4244494140148163, 0.42876777052879333, 0.4297645390033722, 0.4239311218261719, 0.41925936937332153, 0.4121551811695099, 0.4163847267627716, 0.41721752285957336, 0.4234318435192108, 0.41743049025535583, 0.408683180809021, 0.40659669041633606, 0.41769513487815857, 0.4218131899833679, 0.40874341130256653, 0.4341543912887573, 0.41826021671295166, 0.4253126084804535, 0.4078204035758972, 0.4277951717376709, 0.43436726927757263, 0.4376521706581116], "val_accuracy": [0.43666666746139526, 0.46700000762939453, 0.6589999794960022, 0.7046666741371155, 0.7303333282470703, 0.7413333058357239, 0.7586666941642761, 0.7630000114440918, 0.7639999985694885, 0.7776666879653931, 0.7820000052452087, 0.7896666526794434, 0.7940000295639038, 0.8100000023841858, 0.800000011920929, 0.8103333115577698, 0.812666654586792, 0.815666675567627, 0.8206666707992554, 0.8183333277702332, 0.815666675567627, 0.8306666612625122, 0.8276666402816772, 0.8199999928474426, 0.8316666483879089, 0.8296666741371155, 0.8416666388511658, 0.8423333168029785, 0.8389999866485596, 0.831333339214325, 0.8423333168029785, 0.8423333168029785, 0.8513333201408386, 0.8450000286102295, 0.8523333072662354, 0.8510000109672546, 0.8560000061988831, 0.859666645526886, 0.859666645526886, 0.8573333621025085, 0.859000027179718, 0.862666666507721, 0.8583333492279053, 0.8573333621025085, 0.859333336353302, 0.8606666922569275, 0.8683333396911621, 0.8653333187103271, 0.8613333106040955, 0.862333357334137, 0.8723333477973938, 0.8650000095367432, 0.8713333606719971, 0.8669999837875366, 0.8696666955947876, 0.8676666617393494]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 0, 1], [0, 8, 6, 0, 7], [0, 1, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 0, 0, 0, 3, 1, 0], [16, 16, 76, 86], [0, 1], [0, 0], [0], [0], [1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [12, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 4, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302936553955078, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 1, 1, 4, 1, 4, 2, 8], [4, 0, 4, 3, 0, 2, 3, 1, 2, 0], [16, 86, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 6, 4, 2, 1, 2, 1, 1, 1, 11, 5, 6, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.divide_no_nan(sigma, tf.math.subtract(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), beta)))))", "other_info": {"loss": [2.3040366172790527, 2.3025853633880615, 2.3025853633880615, 2.3025851249694824, 2.3025853633880615, 2.3025853633880615], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025848865509033, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10066666454076767, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 2, 3, 0, 3, 7, 2, 0], [0, 0, 1, 0, 2, 1], [83, 99, 27], [0, 0], [0, 9], [0, 2, 0, 3], [0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 2, 2, 4, 6, 4, 4, 9, 5], [0, 3, 0, 5, 5, 2], [0, 52, 67], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 8, 2, 8, 7, 0, 5, 2, 7, 6, 5, 3, 7, 4, 8, 6, 3, 7, 1], [1, 6, 4, 3, 2, 4, 0, 4, 3, 0, 5, 5, 7, 2, 4, 2, 3, 4, 0, 5], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 8, 6, 3, 2, 2, 0, 1, 15, 9, 6, 3, 46, 26, 20, 3], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), alpha), tf.math.add(tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(sigma, tf.math.pow(tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), grad)), grad)), tf.math.square(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.multiply(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.sqrt(tf.math.add(tf.math.sqrt(tf.math.add(tf.math.negative(grad), sigma)), tf.math.square(tf.math.add(tf.math.add(tf.math.divide_no_nan(beta, grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.square(grad))))), sigma), tf.math.multiply(tf.math.add(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.math.divide_no_nan(tf.math.multiply(grad, grad), beta)), tf.math.add(grad, beta))), tf.math.subtract(sigma, grad))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 3, 8], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 0, 3, 3, 3, 5, 5, 9], [0, 3, 0, 3], [16, 2, 33], [0, 1, 0, 1], [6, 5], [4, 1], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 1, 3, 1, 8, 1, 4, 1, 4, 2, 8], [2, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 56]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 6, 4, 2, 11, 8, 3, 3, 4, 2, 2, 0, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.square(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(grad, tf.math.square(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(beta, tf.math.subtract(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}]