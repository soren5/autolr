[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8574285507202148, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.225863218307495, 1.871604561805725, 1.398819088935852, 1.105836033821106, 0.9379026889801025, 0.8426438570022583, 0.7773968577384949, 0.7321497201919556, 0.6897107362747192, 0.6585898399353027, 0.6353251338005066, 0.6183556318283081, 0.587650716304779, 0.5788956880569458, 0.5560045838356018, 0.5422162413597107, 0.5284790396690369, 0.5224663615226746, 0.5079936981201172, 0.49303656816482544, 0.4823726713657379, 0.46885010600090027, 0.46847134828567505, 0.45041877031326294, 0.44632962346076965, 0.4363393783569336, 0.42913326621055603, 0.4250764548778534, 0.4263571798801422, 0.40714031457901, 0.40399491786956787, 0.39659273624420166, 0.389713317155838, 0.38789477944374084, 0.3814634084701538, 0.3707970976829529, 0.37227943539619446, 0.3562145531177521, 0.35883593559265137, 0.35229766368865967, 0.3455723524093628, 0.34055477380752563, 0.3273482918739319, 0.3323291838169098, 0.32986724376678467], "accuracy": [0.2502971887588501, 0.49266940355300903, 0.5651829242706299, 0.618280291557312, 0.6650376319885254, 0.6985867023468018, 0.7160216569900513, 0.7327961921691895, 0.7536653280258179, 0.7637035846710205, 0.7757231593132019, 0.770439863204956, 0.7849689722061157, 0.7887993454933167, 0.7973847389221191, 0.8010830879211426, 0.8082155585289001, 0.8105930685997009, 0.813498854637146, 0.8171972036361694, 0.8255184292793274, 0.8301413059234619, 0.8338396549224854, 0.8364813327789307, 0.843481719493866, 0.8444063067436218, 0.8433496356010437, 0.8471800088882446, 0.8475762605667114, 0.8549728989601135, 0.8541803956031799, 0.8589354157447815, 0.860652506351471, 0.8628978729248047, 0.867520809173584, 0.8669924736022949, 0.8676528930664062, 0.8720116019248962, 0.8716153502464294, 0.8735966086387634, 0.8771628737449646, 0.8775591254234314, 0.8835028409957886, 0.8833707571029663, 0.8828424215316772], "val_loss": [2.043961524963379, 1.5282773971557617, 1.0549284219741821, 0.8421352505683899, 0.7536424398422241, 0.6978189945220947, 0.6539934277534485, 0.6160205006599426, 0.5889308452606201, 0.5627956390380859, 0.5445969104766846, 0.5310448408126831, 0.5171087384223938, 0.500472903251648, 0.486238569021225, 0.4773356020450592, 0.47126835584640503, 0.4569292664527893, 0.453421413898468, 0.44626933336257935, 0.4404957592487335, 0.4300452470779419, 0.4235033392906189, 0.4201655685901642, 0.41041505336761475, 0.4105893671512604, 0.40356287360191345, 0.4020135998725891, 0.39922162890434265, 0.3909881114959717, 0.3915669322013855, 0.3855740427970886, 0.3855268657207489, 0.3785598576068878, 0.3815235495567322, 0.3793082535266876, 0.3733844459056854, 0.3724028766155243, 0.368866890668869, 0.3683100640773773, 0.3708215355873108, 0.3677704930305481, 0.36247313022613525, 0.36437979340553284, 0.3656662106513977], "val_accuracy": [0.515666663646698, 0.6549999713897705, 0.6899999976158142, 0.7173333168029785, 0.7333333492279053, 0.750333309173584, 0.7703333497047424, 0.7760000228881836, 0.7833333611488342, 0.7953333258628845, 0.8063333630561829, 0.8019999861717224, 0.8173333406448364, 0.8223333358764648, 0.8296666741371155, 0.8330000042915344, 0.8349999785423279, 0.8399999737739563, 0.8399999737739563, 0.8433333039283752, 0.8496666550636292, 0.8483333587646484, 0.8560000061988831, 0.8556666374206543, 0.8606666922569275, 0.8569999933242798, 0.8600000143051147, 0.859333336353302, 0.8613333106040955, 0.8636666536331177, 0.8636666536331177, 0.8669999837875366, 0.8659999966621399, 0.8673333525657654, 0.8669999837875366, 0.8690000176429749, 0.8686666488647461, 0.8709999918937683, 0.8679999709129333, 0.8743333220481873, 0.8713333606719971, 0.8679999709129333, 0.8740000128746033, 0.8730000257492065, 0.8696666955947876]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 1, 0, 0, 1, 1], [0, 8, 2, 7, 0], [0, 0, 3], [0, 25], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8391428589820862, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2937843799591064, 2.190619945526123, 1.7737717628479004, 1.3594955205917358, 1.0736494064331055, 0.9125150442123413, 0.8487544655799866, 0.801768958568573, 0.7527258992195129, 0.7289916276931763, 0.699485182762146, 0.668549656867981, 0.6357816457748413, 0.6204525828361511, 0.6054083704948425, 0.6041059494018555, 0.58343505859375, 0.5768348574638367, 0.5719702243804932, 0.5517497062683105, 0.5443804264068604, 0.533947229385376, 0.5205509662628174, 0.519258975982666, 0.5044233202934265, 0.48750436305999756, 0.4843503534793854, 0.4790501594543457, 0.4624845087528229, 0.45984402298927307, 0.4514806568622589, 0.45641598105430603, 0.43066340684890747, 0.43651461601257324, 0.41299811005592346, 0.4043308198451996, 0.40426313877105713, 0.37909331917762756, 0.3884832561016083, 0.3654719293117523, 0.3674658238887787, 0.37203526496887207, 0.366849422454834], "accuracy": [0.1270637959241867, 0.32624489068984985, 0.44327038526535034, 0.5408796668052673, 0.6287148594856262, 0.6674151420593262, 0.6881521344184875, 0.7036058902740479, 0.7124554514884949, 0.7209087014198303, 0.7321357727050781, 0.7442874312400818, 0.7506273984909058, 0.7613261342048645, 0.7625148296356201, 0.7746664881706238, 0.778232753276825, 0.774798572063446, 0.7771760821342468, 0.7902522683143616, 0.7907806038856506, 0.7944789528846741, 0.7961959838867188, 0.7987055778503418, 0.8063663840293884, 0.8144234418869019, 0.8117818236351013, 0.8193105459213257, 0.8191784620285034, 0.8252542614936829, 0.8274996876716614, 0.8278959393501282, 0.8318583965301514, 0.8358209133148193, 0.8448025584220886, 0.8450667262077332, 0.8403117060661316, 0.8552370667457581, 0.8512746095657349, 0.8552370667457581, 0.8610487580299377, 0.8521991968154907, 0.8508783578872681], "val_loss": [2.2465429306030273, 2.026614189147949, 1.1463544368743896, 0.8815950751304626, 0.7687459588050842, 0.710200846195221, 0.6733739972114563, 0.6385224461555481, 0.6245245933532715, 0.6046115159988403, 0.573573887348175, 0.5493640303611755, 0.5418753027915955, 0.5291004776954651, 0.5308259129524231, 0.5137355327606201, 0.5222520232200623, 0.5025254487991333, 0.5086231231689453, 0.4992632567882538, 0.4884659945964813, 0.48810192942619324, 0.47825887799263, 0.4579930007457733, 0.4520222246646881, 0.4502958059310913, 0.4450910985469818, 0.44304826855659485, 0.4266607165336609, 0.41999998688697815, 0.4279417395591736, 0.41357508301734924, 0.42647549510002136, 0.41175979375839233, 0.4068765938282013, 0.40368151664733887, 0.39570704102516174, 0.3961522579193115, 0.40572404861450195, 0.395473837852478, 0.39459228515625, 0.39438652992248535, 0.39984455704689026], "val_accuracy": [0.4243333339691162, 0.4546666741371155, 0.6483333110809326, 0.6983333230018616, 0.7223333120346069, 0.7306666374206543, 0.7390000224113464, 0.7663333415985107, 0.765666663646698, 0.7730000019073486, 0.7770000100135803, 0.7879999876022339, 0.7913333177566528, 0.8026666641235352, 0.7940000295639038, 0.7983333468437195, 0.7990000247955322, 0.8090000152587891, 0.812666654586792, 0.8203333616256714, 0.815666675567627, 0.8043333292007446, 0.8360000252723694, 0.8386666774749756, 0.8370000123977661, 0.8393333554267883, 0.8460000157356262, 0.8413333296775818, 0.8473333120346069, 0.8569999933242798, 0.8506666421890259, 0.8573333621025085, 0.8483333587646484, 0.8576666712760925, 0.8573333621025085, 0.8586666584014893, 0.8643333315849304, 0.8653333187103271, 0.8619999885559082, 0.862666666507721, 0.8640000224113464, 0.8616666793823242, 0.8579999804496765]}, "mapping_values": [1, 10, 5, 5, 3, 8, 5, 3, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 1], [0], [0], [0], [1], [0], [2], [0]], "fitness": -0.822857141494751, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5931488275527954, 0.8882160186767578, 0.7192248702049255, 0.6582766771316528, 0.6027212142944336, 0.586941659450531, 0.5789381265640259, 0.5239026546478271, 0.5127171277999878, 0.5025140643119812, 0.4931884706020355, 0.48649850487709045, 0.46873798966407776, 0.4707893431186676, 0.5034838914871216, 0.48913857340812683, 0.4891883134841919, 0.5068493485450745], "accuracy": [0.45528993010520935, 0.6911900639533997, 0.7483819723129272, 0.7701756954193115, 0.7800818681716919, 0.7866860628128052, 0.7921014428138733, 0.8079513907432556, 0.8131026029586792, 0.821820080280304, 0.8255184292793274, 0.8356888294219971, 0.826310932636261, 0.8352925777435303, 0.8277638554573059, 0.8261788487434387, 0.8391229510307312, 0.8315942287445068], "val_loss": [0.8365180492401123, 0.6540298461914062, 0.5881361365318298, 0.5267407894134521, 0.5367029905319214, 0.5240405201911926, 0.5502646565437317, 0.5350258946418762, 0.557959794998169, 0.5912562012672424, 0.5632039904594421, 0.5600053071975708, 0.5863294005393982, 0.6688073873519897, 0.5678542256355286, 0.6725777387619019, 0.7085798978805542, 0.6283903121948242], "val_accuracy": [0.7046666741371155, 0.7733333110809326, 0.7873333096504211, 0.8146666884422302, 0.8059999942779541, 0.8193333148956299, 0.8213333487510681, 0.8153333067893982, 0.8276666402816772, 0.8320000171661377, 0.8353333473205566, 0.8330000042915344, 0.8393333554267883, 0.8356666564941406, 0.8263333439826965, 0.8379999995231628, 0.8333333134651184, 0.8379999995231628]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 4, 5, 2], [0, 2, 0, 3, 0], [16, 16, 99], [0, 1], [0], [0], [49], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 2, 6, 8, 3, 4, 1, 4, 2, 8, 9], [0, 1, 0, 3, 0, 0, 3, 0, 2, 0], [16, 99, 96, 99, 61, 72]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 12, 7, 5, 3, 2, 1, 1, 1, 21, 12, 9, 6], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.square(beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad))), tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(tf.math.sqrt(sigma), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.constant(1.0, shape=shape, dtype=tf.float32)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [41.39871597290039, 82.61119842529297, 105.73304748535156, 123.20238494873047, 137.50502014160156, 149.90394592285156], "accuracy": [0.10051512718200684, 0.10011887550354004, 0.09985470771789551, 0.09998679161071777, 0.09985470771789551, 0.1002509593963623], "val_loss": [71.13567352294922, 98.05438232421875, 117.36904907226562, 132.86660766601562, 146.00326538085938, 157.51463317871094], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 0, 2, 1], [39, 39], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 4, 8, 1, 9], [0, 2], [16, 16], [0, 1], [0], [0], [99], [0, 0, 1, 0, 0, 1], [1, 8, 8, 0], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0, 53]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 1, 8, 6, 2, 2, 2, 1, 1, 1, 6, 4, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.sqrt(tf.constant(0.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.negative(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 6, 5], [0, 2, 0, 3], [45, 30], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 2, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.0908571407198906, "mapping_values": [1, 9, 5, 4, 1, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(beta, sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.309842824935913, 2.3098948001861572, 2.3087403774261475, 2.3108835220336914, 2.309407949447632, 2.309814214706421], "accuracy": [0.09417514503002167, 0.09021265059709549, 0.09853387624025345, 0.09087307006120682, 0.09060890227556229, 0.09232597798109055], "val_loss": [2.308847188949585, 2.308847188949585, 2.308847188949585, 2.308847188949585, 2.308847188949585, 2.308847188949585], "val_accuracy": [0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763, 0.09333333373069763]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 8, 3], [0, 1, 0, 1], [39, 39], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 2, 8, 0, 3, 5], [0, 2, 1, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 0, 1, 4, 5, 8], [0, 2, 0, 3, 0, 0, 3, 1, 2, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.09057142585515976, "mapping_values": [1, 9, 5, 4, 2, 5, 3, 2, 1, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.sqrt(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(beta, tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)))), sigma)), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), alpha)", "other_info": {"loss": [2.3110506534576416, 2.3104546070098877, 2.3108949661254883, 2.3102872371673584, 2.309481143951416, 2.309497117996216], "accuracy": [0.09100515395402908, 0.09470347315073013, 0.09087307006120682, 0.09351472556591034, 0.09232597798109055, 0.09298639744520187], "val_loss": [2.3082783222198486, 2.3082783222198486, 2.3082783222198486, 2.3082783222198486, 2.3082783222198486, 2.3082783222198486], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}]