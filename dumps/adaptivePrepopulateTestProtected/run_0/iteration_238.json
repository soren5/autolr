[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8705714344978333, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2218897342681885, 1.8665000200271606, 1.401564359664917, 1.0899057388305664, 0.9407793283462524, 0.8484516739845276, 0.7959999442100525, 0.7445777654647827, 0.7074429988861084, 0.6692683100700378, 0.6489472389221191, 0.6304372549057007, 0.6073889136314392, 0.5888095498085022, 0.5822800397872925, 0.5662540197372437, 0.5526443123817444, 0.5401571989059448, 0.5253464579582214, 0.5185117721557617, 0.5025051236152649, 0.4939800798892975, 0.49066776037216187, 0.4790254831314087, 0.4706352651119232, 0.4668011963367462, 0.458972305059433, 0.44815486669540405, 0.44746652245521545, 0.42936578392982483, 0.4261736273765564, 0.41858676075935364, 0.41600343585014343, 0.40374821424484253, 0.4093886613845825, 0.4025188088417053, 0.39296990633010864, 0.3845236897468567, 0.37800708413124084, 0.36982670426368713, 0.3689129948616028, 0.3630828857421875, 0.35342055559158325, 0.3529050648212433, 0.3484031856060028, 0.34064316749572754, 0.3365163207054138, 0.33399173617362976, 0.3317418694496155, 0.32573938369750977, 0.3149019479751587, 0.315581738948822, 0.31218987703323364, 0.30895134806632996, 0.2969454228878021, 0.2945593595504761, 0.29736730456352234, 0.28596872091293335, 0.28168821334838867, 0.28219741582870483, 0.27111735939979553, 0.2759091258049011, 0.2719423770904541, 0.2686972916126251], "accuracy": [0.2654867172241211, 0.4839519262313843, 0.5569937825202942, 0.6210539937019348, 0.6653017997741699, 0.6996433734893799, 0.7132478952407837, 0.7297582626342773, 0.7452120184898376, 0.7553823590278625, 0.7619865536689758, 0.7724210619926453, 0.7804781198501587, 0.785629391670227, 0.787082314491272, 0.7979130744934082, 0.8024039268493652, 0.8090080618858337, 0.8115176558494568, 0.811649739742279, 0.8189142942428589, 0.8230088353157043, 0.8245938420295715, 0.8277638554573059, 0.8333113193511963, 0.8345000743865967, 0.8358209133148193, 0.8421608805656433, 0.8384625315666199, 0.8488970994949341, 0.848368763923645, 0.852859616279602, 0.8527275323867798, 0.8564258217811584, 0.8548408150672913, 0.8560295701026917, 0.8623695969581604, 0.8597279191017151, 0.8671245574951172, 0.8673887252807617, 0.8692378997802734, 0.8664641380310059, 0.8733324408531189, 0.8706908226013184, 0.874389111995697, 0.8784837126731873, 0.8798044919967651, 0.8776912093162537, 0.8805969953536987, 0.8858803510665894, 0.887201189994812, 0.8883898854255676, 0.8862766027450562, 0.8903711438179016, 0.8922203183174133, 0.896446943283081, 0.8916919827461243, 0.8989565372467041, 0.8990886211395264, 0.8961827754974365, 0.9005415439605713, 0.8996169567108154, 0.9025228023529053, 0.902390718460083], "val_loss": [2.0356662273406982, 1.5025571584701538, 1.0400683879852295, 0.8340824246406555, 0.7478315234184265, 0.6927691102027893, 0.6543359160423279, 0.6203866600990295, 0.5864567756652832, 0.563601553440094, 0.5428531765937805, 0.5305534601211548, 0.5122908353805542, 0.5006332993507385, 0.491496741771698, 0.4796192944049835, 0.47177401185035706, 0.4607900083065033, 0.4563038647174835, 0.4486607313156128, 0.44113579392433167, 0.4396745264530182, 0.4316418468952179, 0.4254635274410248, 0.4209806025028229, 0.42014041543006897, 0.4118492007255554, 0.41288790106773376, 0.4037380516529083, 0.4002376198768616, 0.3978966176509857, 0.3932940661907196, 0.3890167772769928, 0.3867948353290558, 0.3867643177509308, 0.38640332221984863, 0.38217097520828247, 0.3774445652961731, 0.37402722239494324, 0.37204232811927795, 0.3682258725166321, 0.367262601852417, 0.36429134011268616, 0.3634484112262726, 0.36609089374542236, 0.3609336018562317, 0.3608610928058624, 0.35923901200294495, 0.3582502007484436, 0.3557873070240021, 0.3531155288219452, 0.35533228516578674, 0.35029077529907227, 0.35293012857437134, 0.3496118187904358, 0.3472219705581665, 0.34913620352745056, 0.3466784656047821, 0.34058183431625366, 0.33947205543518066, 0.34331515431404114, 0.34204548597335815, 0.339785635471344, 0.34226730465888977], "val_accuracy": [0.5063333511352539, 0.6586666703224182, 0.67166668176651, 0.7056666612625122, 0.731333315372467, 0.7453333139419556, 0.7609999775886536, 0.7606666684150696, 0.7803333401679993, 0.7856666445732117, 0.79666668176651, 0.796999990940094, 0.812333345413208, 0.8159999847412109, 0.8226666450500488, 0.8220000267028809, 0.8306666612625122, 0.8339999914169312, 0.8353333473205566, 0.8396666646003723, 0.8363333344459534, 0.8410000205039978, 0.8420000076293945, 0.8420000076293945, 0.846666693687439, 0.8450000286102295, 0.8526666760444641, 0.8476666808128357, 0.8546666502952576, 0.8546666502952576, 0.8543333411216736, 0.859000027179718, 0.859333336353302, 0.8573333621025085, 0.8603333234786987, 0.8600000143051147, 0.8603333234786987, 0.8583333492279053, 0.8603333234786987, 0.8659999966621399, 0.8653333187103271, 0.8696666955947876, 0.8693333268165588, 0.8669999837875366, 0.8636666536331177, 0.8700000047683716, 0.8659999966621399, 0.8700000047683716, 0.8713333606719971, 0.8733333349227905, 0.871666669845581, 0.871999979019165, 0.874666690826416, 0.8740000128746033, 0.875, 0.8756666779518127, 0.8713333606719971, 0.875, 0.8826666474342346, 0.878333330154419, 0.8776666522026062, 0.8816666603088379, 0.8786666393280029, 0.8790000081062317]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1, 0], [0, 7, 9], [0], [0, 34], [0, 1], [0], [1], [0]], "fitness": -0.8471428751945496, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2929842472076416, 2.190810441970825, 1.7761807441711426, 1.3475368022918701, 1.0684305429458618, 0.9263921976089478, 0.8505374789237976, 0.8315540552139282, 0.7795654535293579, 0.7506638169288635, 0.7182822823524475, 0.7040887475013733, 0.6618883609771729, 0.6328532695770264, 0.623020350933075, 0.6188600659370422, 0.592034101486206, 0.5858314037322998, 0.569764256477356, 0.555521547794342, 0.5345006585121155, 0.5266651511192322, 0.5116562843322754, 0.5098997354507446, 0.49874186515808105, 0.48862382769584656, 0.4675637185573578, 0.47969645261764526, 0.4580593705177307, 0.4478009045124054, 0.44810807704925537, 0.43125706911087036, 0.44090503454208374, 0.41494330763816833, 0.41734445095062256, 0.39887091517448425, 0.39193642139434814], "accuracy": [0.12851670384407043, 0.32439571619033813, 0.4319112300872803, 0.5455026030540466, 0.6353189945220947, 0.6618676781654358, 0.6814159154891968, 0.6929071545600891, 0.702681303024292, 0.7088891863822937, 0.724739134311676, 0.7312111854553223, 0.7495707273483276, 0.7664773464202881, 0.7646281719207764, 0.7667415142059326, 0.7734777331352234, 0.7778365015983582, 0.7906485199928284, 0.7902522683143616, 0.8018755912780762, 0.8001585006713867, 0.7993659973144531, 0.8049134612083435, 0.8115176558494568, 0.8129705190658569, 0.8215559124946594, 0.8170651197433472, 0.8300092220306396, 0.8284242749214172, 0.8300092220306396, 0.8362171649932861, 0.8360850811004639, 0.8441421389579773, 0.8418967127799988, 0.845859169960022, 0.8508783578872681], "val_loss": [2.2464473247528076, 2.0213732719421387, 1.1361252069473267, 0.9089036583900452, 0.7717522978782654, 0.7275046110153198, 0.6895448565483093, 0.6545209288597107, 0.6613595485687256, 0.6287628412246704, 0.5917186737060547, 0.5620743036270142, 0.5505682229995728, 0.5475785136222839, 0.5391141176223755, 0.5254157185554504, 0.5119181871414185, 0.5044207572937012, 0.5025815367698669, 0.4868178367614746, 0.48645952343940735, 0.4848094582557678, 0.4761945903301239, 0.47014713287353516, 0.4695852994918823, 0.4581727385520935, 0.4465705156326294, 0.43775033950805664, 0.43330395221710205, 0.4332796633243561, 0.42587369680404663, 0.42272111773490906, 0.42471110820770264, 0.4188292324542999, 0.4181193709373474, 0.43045690655708313, 0.4339717626571655], "val_accuracy": [0.4266666769981384, 0.4416666626930237, 0.6416666507720947, 0.6926666498184204, 0.7026666402816772, 0.7083333134651184, 0.737666666507721, 0.7443333268165588, 0.7559999823570251, 0.7509999871253967, 0.7670000195503235, 0.7760000228881836, 0.7820000052452087, 0.781000018119812, 0.7919999957084656, 0.7960000038146973, 0.800000011920929, 0.8026666641235352, 0.8040000200271606, 0.812333345413208, 0.8183333277702332, 0.8180000185966492, 0.8270000219345093, 0.831333339214325, 0.8266666531562805, 0.8306666612625122, 0.8360000252723694, 0.8416666388511658, 0.8486666679382324, 0.8463333249092102, 0.8536666631698608, 0.856333315372467, 0.8539999723434448, 0.8493333458900452, 0.8493333458900452, 0.8493333458900452, 0.8546666502952576]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 4, 3, 1, 2, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0], [0, 9], [0], [0], [1], [0], [2], [0]], "fitness": -0.8222857117652893, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5088928937911987, 0.8182134032249451, 0.6482750773429871, 0.593162477016449, 0.5516062378883362, 0.5320088267326355, 0.5196052193641663, 0.48859646916389465, 0.4691588878631592, 0.48514673113822937, 0.512938380241394, 0.4831201434135437, 0.49825626611709595, 0.4661613404750824, 0.42941856384277344, 0.4782930016517639, 0.452715665102005, 0.4864039719104767, 0.4471611976623535, 0.4709700047969818, 0.4554273188114166, 0.46403050422668457, 0.48224616050720215, 0.5195592641830444], "accuracy": [0.4737815260887146, 0.7119271159172058, 0.7619865536689758, 0.7795535326004028, 0.8010830879211426, 0.8047813773155212, 0.8107251524925232, 0.8228767514228821, 0.83119797706604, 0.826310932636261, 0.817461371421814, 0.8372738361358643, 0.8345000743865967, 0.8368775844573975, 0.8359529972076416, 0.842028796672821, 0.8379341959953308, 0.8421608805656433, 0.8428213000297546, 0.832650899887085, 0.8444063067436218, 0.8417646288871765, 0.8393871188163757, 0.837537944316864], "val_loss": [0.761976420879364, 0.5909860730171204, 0.5086537003517151, 0.48013997077941895, 0.4553988575935364, 0.45424649119377136, 0.437171071767807, 0.4469890594482422, 0.4591677188873291, 0.49956071376800537, 0.5046033263206482, 0.5808805227279663, 0.5225359797477722, 0.5080353021621704, 0.5426703095436096, 0.5101650953292847, 0.5146795511245728, 0.518513023853302, 0.5450969338417053, 0.5133190155029297, 0.62834632396698, 0.5756665468215942, 0.5519258379936218, 0.5690884590148926], "val_accuracy": [0.7106666564941406, 0.7820000052452087, 0.8073333501815796, 0.8309999704360962, 0.8336666822433472, 0.8423333168029785, 0.8410000205039978, 0.8453333377838135, 0.8453333377838135, 0.8379999995231628, 0.8410000205039978, 0.8416666388511658, 0.8479999899864197, 0.8453333377838135, 0.8503333330154419, 0.8446666598320007, 0.8476666808128357, 0.8513333201408386, 0.8533333539962769, 0.8510000109672546, 0.8383333086967468, 0.8396666646003723, 0.8403333425521851, 0.8383333086967468]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 6, 3, 0, 6], [0, 2, 0, 2], [39, 39], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 9, 4, 3, 5], [0, 2, 0, 3], [16, 22], [0, 1], [0], [0], [99], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 2, 1, 7, 8, 1], [0, 0, 0, 3, 0, 0, 4, 1, 2, 0, 5, 7, 6, 2], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 4, 3, 1, 2, 2, 1, 1, 1, 30, 16, 14, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.math.add(tf.math.subtract(tf.math.add(tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad), grad), tf.math.subtract(grad, beta)))))", "other_info": {"loss": [2.3099629878997803, 2.310300588607788, 2.311366319656372, 2.3105404376983643, 2.311483383178711, 2.3117141723632812, 2.311213970184326, 2.3108885288238525, 2.311739206314087, 2.3119935989379883, 2.311819553375244, 2.3135690689086914, 2.3147804737091064, 2.315298557281494, 2.314490556716919, 2.317035675048828, 2.317206382751465, 2.3202109336853027, 2.3221819400787354, 2.3244762420654297, 2.324584484100342, 2.326458692550659, 2.33306622505188, 2.336276054382324], "accuracy": [0.09232597798109055, 0.09417514503002167, 0.09206181764602661, 0.08928807079792023, 0.09259014576673508, 0.09074098616838455, 0.09126931428909302, 0.09140139818191528, 0.09047681838274002, 0.08796724677085876, 0.09589222073554993, 0.09496764093637466, 0.08757099509239197, 0.0886276587843895, 0.09628847241401672, 0.09219389408826828, 0.09100515395402908, 0.09642054885625839, 0.09853387624025345, 0.09126931428909302, 0.0956280529499054, 0.1014397069811821, 0.10289261490106583, 0.10157178342342377], "val_loss": [2.308182716369629, 2.3082590103149414, 2.3083834648132324, 2.308551788330078, 2.3087575435638428, 2.3090035915374756, 2.3092939853668213, 2.3096189498901367, 2.3099656105041504, 2.3103489875793457, 2.310756206512451, 2.311185121536255, 2.3116769790649414, 2.312220335006714, 2.3128280639648438, 2.313479423522949, 2.3141815662384033, 2.314873456954956, 2.315683364868164, 2.316413164138794, 2.317070960998535, 2.317225694656372, 2.3145153522491455, 2.311645746231079], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.09000000357627869, 0.08966666460037231, 0.09099999815225601, 0.09133332967758179, 0.09166666865348816, 0.09266666322946548, 0.09233333170413971, 0.09300000220537186, 0.09399999678134918, 0.09533333033323288, 0.09566666930913925, 0.09666666388511658, 0.09733333438634872, 0.0976666659116745, 0.0976666659116745, 0.0976666659116745, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [8, 1, 3, 1, 3], [0, 1, 0, 2, 0], [83, 99, 27], [0, 0, 1], [0, 0], [0, 2, 0, 3], [16, 16], [1, 1], [0], [0], [99], [0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [93, 15]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 3, 2, 1, 1, 1, 0, 1, 1, 3, 1, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.0, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3030123710632324, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 2, 3, 0, 3, 5], [2, 2, 0, 3], [16, 45], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 3, 4, 0, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.0925714299082756, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 1, 2, 1, 1, 1, 20, 11, 9, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.multiply(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.negative(tf.math.sqrt(beta)))", "other_info": {"loss": [2.3098349571228027, 2.309234142303467, 2.3087291717529297, 2.309924364089966, 2.3103489875793457, 2.31022572517395], "accuracy": [0.0870426595211029, 0.08902391046285629, 0.0948355570435524, 0.0940430611371994, 0.09206181764602661, 0.09192973375320435], "val_loss": [2.3082001209259033, 2.3082001209259033, 2.3082001209259033, 2.3082001209259033, 2.3082001209259033, 2.3082001209259033], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 40], [1, 0, 1], [0, 0], [0, 2, 0, 3], [16, 16], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1], [6, 4, 7, 7, 2, 6, 0, 5, 6, 0, 2, 5, 8], [0, 2, 1, 4, 2, 2, 3, 3, 4], [0, 83], [0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0, 47]], "fitness": -0.0917142853140831, "mapping_values": [1, 7, 4, 3, 2, 1, 0, 1, 1, 22, 13, 9, 1, 3, 1, 2, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.negative(beta), tf.math.square(tf.math.divide_no_nan(alpha, grad))), beta), beta), sigma)), tf.math.negative(tf.math.add(tf.math.square(tf.math.sqrt(sigma)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3099119663238525, 2.308627128601074, 2.3103599548339844, 2.310431480407715, 2.3102593421936035, 2.309929847717285], "accuracy": [0.09351472556591034, 0.09615638852119446, 0.08902391046285629, 0.09074098616838455, 0.09074098616838455, 0.09602430462837219], "val_loss": [2.3088409900665283, 2.3088409900665283, 2.3088409900665283, 2.3088409900665283, 2.3088409900665283, 2.3088409900665283], "val_accuracy": [0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654, 0.08933333307504654]}}]