[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8759999871253967, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2236225605010986, 1.8709490299224854, 1.4076590538024902, 1.0998390913009644, 0.9381199479103088, 0.8387465476989746, 0.7668468952178955, 0.7257328033447266, 0.6919852495193481, 0.6617295742034912, 0.6355358362197876, 0.6122910976409912, 0.5961391925811768, 0.5819308757781982, 0.558939516544342, 0.5493749380111694, 0.5294162034988403, 0.5206496715545654, 0.5072692632675171, 0.4886460304260254, 0.4886263906955719, 0.4740596115589142, 0.47279298305511475, 0.45531976222991943, 0.4527096152305603, 0.4495372772216797, 0.43709444999694824, 0.4311201870441437, 0.42482051253318787, 0.40819379687309265, 0.4077300727367401, 0.3995402753353119, 0.38638290762901306, 0.3944515585899353, 0.38605692982673645, 0.38623398542404175, 0.37883806228637695, 0.37504902482032776, 0.370917409658432, 0.3624010682106018, 0.35553911328315735, 0.34923383593559265, 0.3505864143371582, 0.34041014313697815, 0.3314487338066101, 0.3292008638381958, 0.32659912109375, 0.3199702203273773, 0.3136928081512451, 0.31142565608024597, 0.313093900680542, 0.30527135729789734, 0.2929692268371582, 0.29651689529418945, 0.29332658648490906, 0.2878652513027191, 0.2851572036743164, 0.2793372869491577, 0.2746475338935852], "accuracy": [0.2767137885093689, 0.47629112005233765, 0.5596354603767395, 0.6185444593429565, 0.6642451286315918, 0.6993792057037354, 0.7238145470619202, 0.735569953918457, 0.7475894689559937, 0.7586844563484192, 0.767930269241333, 0.7802139520645142, 0.7819310426712036, 0.7887993454933167, 0.7964601516723633, 0.8004226684570312, 0.8090080618858337, 0.8150838613510132, 0.8161405324935913, 0.8201030492782593, 0.82683926820755, 0.8315942287445068, 0.8315942287445068, 0.8388587832450867, 0.8428213000297546, 0.8381983637809753, 0.8482366800308228, 0.8465195894241333, 0.8508783578872681, 0.858671247959137, 0.8578787446022034, 0.8557654023170471, 0.8601241707801819, 0.8622375130653381, 0.8659358024597168, 0.8672566413879395, 0.86553955078125, 0.8683133125305176, 0.8725399374961853, 0.870030403137207, 0.8745211958885193, 0.874389111995697, 0.8733324408531189, 0.8761062026023865, 0.8809932470321655, 0.8799365758895874, 0.8840311765670776, 0.8873332738876343, 0.8902390599250793, 0.8878615498542786, 0.8898428082466125, 0.8942015767097473, 0.8973715305328369, 0.8961827754974365, 0.8957865834236145, 0.8977677822113037, 0.895918607711792, 0.9010698795318604, 0.9029190540313721], "val_loss": [2.038757562637329, 1.5152872800827026, 1.0369486808776855, 0.8189232349395752, 0.732554018497467, 0.684153139591217, 0.6397718787193298, 0.6042868494987488, 0.582814633846283, 0.5648890733718872, 0.5421420931816101, 0.5300295352935791, 0.5166798233985901, 0.5052489638328552, 0.4936463236808777, 0.4838869571685791, 0.47502100467681885, 0.46538808941841125, 0.4607691168785095, 0.4540422260761261, 0.44688737392425537, 0.43899109959602356, 0.4353633522987366, 0.4294688403606415, 0.4249115288257599, 0.4191763997077942, 0.4117801785469055, 0.4132827818393707, 0.4056246876716614, 0.4021150767803192, 0.39909815788269043, 0.395041823387146, 0.3936225473880768, 0.3899325430393219, 0.38926827907562256, 0.38333988189697266, 0.3826158046722412, 0.38159042596817017, 0.38597020506858826, 0.3764806389808655, 0.3747989237308502, 0.37314024567604065, 0.3718354105949402, 0.367514044046402, 0.3689022660255432, 0.3668490946292877, 0.36598899960517883, 0.3642975986003876, 0.35998478531837463, 0.3562052845954895, 0.359646737575531, 0.35835719108581543, 0.3613726794719696, 0.3554033935070038, 0.35737621784210205, 0.3536303639411926, 0.3485070466995239, 0.35388249158859253, 0.3515031337738037], "val_accuracy": [0.5536666512489319, 0.652999997138977, 0.6886666417121887, 0.718666672706604, 0.7403333187103271, 0.7506666779518127, 0.7603333592414856, 0.7676666378974915, 0.7863333225250244, 0.7853333353996277, 0.7973333597183228, 0.7986666560173035, 0.8086666464805603, 0.8166666626930237, 0.8159999847412109, 0.8180000185966492, 0.8286666870117188, 0.8309999704360962, 0.8276666402816772, 0.8263333439826965, 0.8363333344459534, 0.8410000205039978, 0.8420000076293945, 0.8423333168029785, 0.843999981880188, 0.8460000157356262, 0.8443333506584167, 0.8453333377838135, 0.8506666421890259, 0.8486666679382324, 0.8510000109672546, 0.8506666421890259, 0.8513333201408386, 0.8569999933242798, 0.8573333621025085, 0.8583333492279053, 0.859333336353302, 0.859666645526886, 0.8566666841506958, 0.859333336353302, 0.8619999885559082, 0.8600000143051147, 0.8629999756813049, 0.862666666507721, 0.8659999966621399, 0.8653333187103271, 0.8663333058357239, 0.8659999966621399, 0.8700000047683716, 0.8709999918937683, 0.8693333268165588, 0.8703333139419556, 0.8696666955947876, 0.8743333220481873, 0.8709999918937683, 0.871666669845581, 0.8730000257492065, 0.8740000128746033, 0.8726666569709778]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1, 0, 0, 0, 1], [0, 6, 0, 0, 0], [0, 5], [0], [0, 1], [0], [1], [0]], "fitness": -0.842285692691803, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2946693897247314, 2.188994884490967, 1.7718477249145508, 1.3566616773605347, 1.069665789604187, 0.9146095514297485, 0.8311190009117126, 0.8153789043426514, 0.7642878890037537, 0.7297490835189819, 0.7114128470420837, 0.6815150380134583, 0.6544629335403442, 0.636520266532898, 0.6108436584472656, 0.5978341698646545, 0.5889231562614441, 0.572763979434967, 0.5679249167442322, 0.5511955618858337, 0.5552240014076233, 0.5342483520507812, 0.5167204141616821, 0.5021355748176575, 0.5029599070549011, 0.49521586298942566, 0.4872250556945801, 0.47913625836372375, 0.46206802129745483, 0.45376548171043396, 0.4599630534648895, 0.4448447823524475, 0.43895214796066284, 0.414045125246048, 0.42031848430633545, 0.39793598651885986, 0.4003828763961792, 0.40034082531929016, 0.4021228551864624, 0.3920769691467285, 0.3840070366859436], "accuracy": [0.12402588874101639, 0.32782986760139465, 0.4278166592121124, 0.5418042540550232, 0.6379606127738953, 0.6583014130592346, 0.6959450244903564, 0.7025492191314697, 0.6997754573822021, 0.7234182953834534, 0.7346453666687012, 0.7442874312400818, 0.7510236501693726, 0.761590301990509, 0.7670056819915771, 0.7750627398490906, 0.7779685854911804, 0.7843085527420044, 0.7828556299209595, 0.789459764957428, 0.7889314293861389, 0.7907806038856506, 0.8037247657775879, 0.8005547523498535, 0.8009510040283203, 0.8109893202781677, 0.8165367841720581, 0.8123101592063904, 0.8206313848495483, 0.8245938420295715, 0.8212917447090149, 0.8314621448516846, 0.835160493850708, 0.8432175517082214, 0.8384625315666199, 0.8504821062088013, 0.8496896028518677, 0.8491612672805786, 0.8465195894241333, 0.848368763923645, 0.8527275323867798], "val_loss": [2.2454326152801514, 2.0189054012298584, 1.156038522720337, 0.9059613347053528, 0.7794011831283569, 0.7235432267189026, 0.6810704469680786, 0.6588800549507141, 0.6518204808235168, 0.6261705756187439, 0.610625684261322, 0.6016063094139099, 0.5905250906944275, 0.5675910115242004, 0.5587198734283447, 0.5604214072227478, 0.5558433532714844, 0.546221137046814, 0.5450860857963562, 0.5521178245544434, 0.5457338094711304, 0.5396327376365662, 0.5336775779724121, 0.5198860764503479, 0.5114530920982361, 0.529087245464325, 0.5093750953674316, 0.5056458711624146, 0.49448323249816895, 0.48403728008270264, 0.4677833616733551, 0.4631716310977936, 0.46566179394721985, 0.4718685746192932, 0.46151524782180786, 0.46961796283721924, 0.4634630084037781, 0.4742453694343567, 0.47075992822647095, 0.45543867349624634, 0.46074190735816956], "val_accuracy": [0.42133334279060364, 0.4676666557788849, 0.6363333463668823, 0.6766666769981384, 0.7226666808128357, 0.7260000109672546, 0.7379999756813049, 0.7423333525657654, 0.7603333592414856, 0.7703333497047424, 0.762333333492279, 0.7823333144187927, 0.7789999842643738, 0.7749999761581421, 0.7916666865348816, 0.7860000133514404, 0.7950000166893005, 0.7973333597183228, 0.7916666865348816, 0.79666668176651, 0.8050000071525574, 0.8096666932106018, 0.8106666803359985, 0.8149999976158142, 0.8173333406448364, 0.8109999895095825, 0.8196666836738586, 0.8226666450500488, 0.8333333134651184, 0.8296666741371155, 0.8370000123977661, 0.8479999899864197, 0.8473333120346069, 0.8429999947547913, 0.8503333330154419, 0.8539999723434448, 0.8503333330154419, 0.8460000157356262, 0.8486666679382324, 0.8536666631698608, 0.8496666550636292]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 7, 5, 2, 1, 2, 1, 1, 0], "tree_depth": 13}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 4], [0, 3], [0], [1], [0], [2], [0]], "fitness": -0.8254285454750061, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.595281720161438, 0.9403083920478821, 0.7173648476600647, 0.6181488633155823, 0.5924426913261414, 0.5534569621086121, 0.5462523698806763, 0.5373303294181824, 0.5444380640983582, 0.513379693031311, 0.5513313412666321, 0.5696296691894531, 0.5964967608451843], "accuracy": [0.47668737173080444, 0.6859067678451538, 0.7473253011703491, 0.7788931727409363, 0.7790252566337585, 0.8006868362426758, 0.8074230551719666, 0.8034605979919434, 0.7996301651000977, 0.822348415851593, 0.8121780753135681, 0.8049134612083435, 0.8076872229576111], "val_loss": [0.8423715829849243, 0.5808054804801941, 0.5200563669204712, 0.4935382604598999, 0.4674004316329956, 0.46040478348731995, 0.48097968101501465, 0.47541773319244385, 0.4716852903366089, 0.4979625344276428, 0.5535410046577454, 0.5756760835647583, 0.5570411682128906], "val_accuracy": [0.7009999752044678, 0.7770000100135803, 0.8063333630561829, 0.8100000023841858, 0.8286666870117188, 0.8336666822433472, 0.8373333215713501, 0.8386666774749756, 0.8330000042915344, 0.8289999961853027, 0.8230000138282776, 0.8256666660308838, 0.8330000042915344]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 2, 3, 0, 3, 6, 6, 0, 1, 5, 4, 3, 1, 1, 9, 3, 7, 1, 5, 3, 5, 0], [0, 1, 0, 2, 3, 1, 0, 0, 1, 1, 0, 2, 2, 2], [39, 39, 94, 66, 37, 77], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 6, 5, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 0, 6, 8, 1, 4, 1, 4, 2, 8], [0, 3, 0, 3, 0, 0, 3, 1, 2, 0], [16, 58, 96, 99, 43, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 36, 22, 14, 6, 10, 6, 4, 2, 2, 1, 1, 1, 17, 9, 8, 4], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(grad, tf.math.square(tf.math.pow(tf.math.multiply(tf.math.subtract(grad, tf.math.subtract(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), alpha))), tf.math.subtract(tf.math.square(alpha), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))))), tf.math.multiply(tf.math.square(grad), grad)))), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(sigma, tf.math.pow(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma)))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 2, 3, 2, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 5, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 1, 1, 4, 6, 8, 8, 2, 5], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0, 0], [16, 99, 96, 99, 61, 11, 29]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 8, 5, 3, 2, 2, 1, 1, 1, 25, 14, 11, 7], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.math.pow(tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(alpha)), beta), tf.math.add(tf.math.square(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [2.3050484657287598, 12.617520332336426, 87.10343170166016, 278.8413391113281, 653.1737060546875, 1266.7838134765625], "accuracy": [0.09708096832036972, 0.1026284471154213, 0.09879804402589798, 0.1006472036242485, 0.10500594228506088, 0.09959053993225098], "val_loss": [2.3740897178649902, 31.8984375, 132.62002563476562, 347.5868225097656, 727.3960571289062, 1321.571044921875], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [2], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 1, 8, 8, 2, 8], [0, 0, 0, 2, 0, 0, 3, 1, 0, 4], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(beta, tf.constant(1.0, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [8.787327766418457, 72.57830047607422, 354.1875, 2362.562255859375, 5725.02490234375, 7266.0029296875], "accuracy": [0.10394927859306335, 0.1018359512090683, 0.09853387624025345, 0.1022322028875351, 0.1022322028875351, 0.09919429570436478], "val_loss": [25.802640914916992, 79.18688201904297, 1556.955322265625, 4139.19580078125, 6260.083984375, 7384.48583984375], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}, "mapping_values": [1, 1, 0, 1, 1, 10, 6, 4, 2, 2, 1, 1, 0, 14, 7, 7, 5], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1], [4, 2, 3, 0, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 5, 4, 7, 7, 6, 2, 5, 1, 5], [0, 2, 0, 3, 3, 5, 5, 1], [16, 16], [0, 1], [0], [0, 6], [99], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 7, 3, 2, 4, 5, 7, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [0, 82, 61, 88, 79]], "fitness": -0.0925714299082756, "mapping_values": [1, 8, 4, 4, 3, 9, 5, 4, 2, 2, 1, 1, 1, 3, 2, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.pow(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3108553886413574, 2.3102352619171143, 2.308912754058838, 2.309154987335205, 2.3106849193573, 2.3106753826141357], "accuracy": [0.09047681838274002, 0.09509972482919693, 0.09351472556591034, 0.09417514503002167, 0.09338264167308807, 0.09232597798109055], "val_loss": [2.3089759349823, 2.3089759349823, 2.3089759349823, 2.3089759349823, 2.3089759349823, 2.3089759349823], "val_accuracy": [0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548, 0.09266666322946548]}}]