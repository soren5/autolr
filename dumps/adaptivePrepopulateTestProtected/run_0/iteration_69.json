[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8785714507102966, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.22385311126709, 1.8689895868301392, 1.3921784162521362, 1.09282648563385, 0.943203330039978, 0.8380605578422546, 0.7783129811286926, 0.7317649722099304, 0.697516679763794, 0.6667935848236084, 0.6370715498924255, 0.6119930148124695, 0.597540020942688, 0.585638165473938, 0.5669749975204468, 0.5510876774787903, 0.5321505069732666, 0.528533399105072, 0.5092916488647461, 0.5203198194503784, 0.49983617663383484, 0.48847419023513794, 0.48181167244911194, 0.46785861253738403, 0.4670261740684509, 0.4507957398891449, 0.44654130935668945, 0.4353342354297638, 0.42720916867256165, 0.4178202748298645, 0.4137081205844879, 0.4128495752811432, 0.417216032743454, 0.39360734820365906, 0.39136654138565063, 0.3920917809009552, 0.3843253552913666, 0.3787577748298645, 0.36371058225631714, 0.35812604427337646, 0.36053144931793213, 0.3547873795032501, 0.3530988097190857, 0.3457549214363098, 0.3456178307533264, 0.33321312069892883, 0.33248311281204224, 0.3293883204460144, 0.3254311978816986, 0.31505241990089417, 0.3130646049976349, 0.30993208289146423, 0.3013964593410492, 0.2993669807910919, 0.2997386157512665, 0.29056525230407715, 0.2877940833568573, 0.29028749465942383, 0.28097987174987793, 0.28064799308776855, 0.2704039216041565, 0.268941193819046, 0.26596739888191223, 0.26158997416496277, 0.2584567368030548, 0.25905969738960266, 0.25384601950645447, 0.24113249778747559, 0.24394433200359344, 0.2416629046201706, 0.24062906205654144, 0.2293824404478073, 0.22863131761550903, 0.2209962159395218, 0.22504355013370514], "accuracy": [0.2763175368309021, 0.4807819426059723, 0.5597675442695618, 0.6222427487373352, 0.6719059348106384, 0.698190450668335, 0.7252674698829651, 0.7397965788841248, 0.748778223991394, 0.7617223858833313, 0.7697794437408447, 0.7804781198501587, 0.7837802171707153, 0.7882710099220276, 0.7976489067077637, 0.806630551815033, 0.8121780753135681, 0.8109893202781677, 0.8157442808151245, 0.8182538747787476, 0.822348415851593, 0.8245938420295715, 0.8285563588142395, 0.835160493850708, 0.8368775844573975, 0.8433496356010437, 0.844010055065155, 0.844010055065155, 0.8514066934585571, 0.8512746095657349, 0.8576145768165588, 0.8514066934585571, 0.8527275323867798, 0.8625016212463379, 0.863029956817627, 0.8595958352088928, 0.8627657890319824, 0.863029956817627, 0.8713511824607849, 0.8728041052818298, 0.8733324408531189, 0.8746532797813416, 0.8721436858177185, 0.8745211958885193, 0.8758420348167419, 0.8816536664962769, 0.8799365758895874, 0.8835028409957886, 0.8845595121383667, 0.8908994793891907, 0.8902390599250793, 0.8873332738876343, 0.8928807377815247, 0.8928807377815247, 0.8918240666389465, 0.8949940800666809, 0.8960506916046143, 0.8957865834236145, 0.8982961177825928, 0.9005415439605713, 0.9022586345672607, 0.902390718460083, 0.9038436412811279, 0.9063531756401062, 0.901862382888794, 0.9063531756401062, 0.9083344340324402, 0.9126931428909302, 0.9105798602104187, 0.9157310724258423, 0.910711944103241, 0.9126931428909302, 0.9167877435684204, 0.9220710396766663, 0.9181085824966431], "val_loss": [2.0362961292266846, 1.5109721422195435, 1.0366545915603638, 0.8216940760612488, 0.7334108352661133, 0.6752658486366272, 0.6272311210632324, 0.5901768207550049, 0.565755307674408, 0.5454519987106323, 0.5303096771240234, 0.5078737735748291, 0.49619564414024353, 0.4870852828025818, 0.477031409740448, 0.46416130661964417, 0.45332321524620056, 0.45065897703170776, 0.4499213993549347, 0.43400630354881287, 0.42278340458869934, 0.42549237608909607, 0.4191504716873169, 0.406779408454895, 0.4038170576095581, 0.39954128861427307, 0.39287909865379333, 0.386243611574173, 0.3859941065311432, 0.38023167848587036, 0.3832986652851105, 0.38317835330963135, 0.37083789706230164, 0.37188199162483215, 0.3707095682621002, 0.36467626690864563, 0.35694506764411926, 0.3572940230369568, 0.35267552733421326, 0.35352417826652527, 0.34998568892478943, 0.3500393331050873, 0.3457832932472229, 0.3445078134536743, 0.34039610624313354, 0.3432251811027527, 0.3378094434738159, 0.3373914062976837, 0.33233195543289185, 0.33655405044555664, 0.3316599130630493, 0.3272864520549774, 0.3274107575416565, 0.3278765380382538, 0.3250201344490051, 0.32743147015571594, 0.3283940255641937, 0.3233192265033722, 0.32683950662612915, 0.32519635558128357, 0.3187567889690399, 0.3262876868247986, 0.317158967256546, 0.3196517527103424, 0.31830424070358276, 0.31782957911491394, 0.3168559968471527, 0.31806766986846924, 0.3201530873775482, 0.3147178888320923, 0.31271007657051086, 0.3128334879875183, 0.3134373426437378, 0.3189963698387146, 0.3166082501411438], "val_accuracy": [0.49900001287460327, 0.6556666493415833, 0.684333324432373, 0.7089999914169312, 0.7406666874885559, 0.7543333172798157, 0.765333354473114, 0.7803333401679993, 0.7916666865348816, 0.8043333292007446, 0.7990000247955322, 0.8119999766349792, 0.8173333406448364, 0.8199999928474426, 0.8276666402816772, 0.8273333311080933, 0.8343333601951599, 0.8306666612625122, 0.8356666564941406, 0.8433333039283752, 0.8483333587646484, 0.8420000076293945, 0.847000002861023, 0.8500000238418579, 0.8489999771118164, 0.8513333201408386, 0.8550000190734863, 0.8566666841506958, 0.8579999804496765, 0.859666645526886, 0.8613333106040955, 0.8569999933242798, 0.8640000224113464, 0.8619999885559082, 0.8600000143051147, 0.862666666507721, 0.8683333396911621, 0.8676666617393494, 0.8709999918937683, 0.8683333396911621, 0.8703333139419556, 0.8696666955947876, 0.8709999918937683, 0.8740000128746033, 0.875, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8790000081062317, 0.878000020980835, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8813333511352539, 0.8826666474342346, 0.8776666522026062, 0.8809999823570251, 0.8830000162124634, 0.8796666860580444, 0.8823333382606506, 0.8836666941642761, 0.8813333511352539, 0.8849999904632568, 0.8863333463668823, 0.8889999985694885, 0.8830000162124634, 0.8853333592414856, 0.8856666684150696, 0.8883333206176758, 0.8899999856948853, 0.8856666684150696, 0.8896666765213013, 0.8880000114440918, 0.8866666555404663, 0.8853333592414856]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.868571400642395, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220952033996582, 1.8605694770812988, 1.3840992450714111, 1.0812880992889404, 0.9204604029655457, 0.8224503397941589, 0.7675275802612305, 0.7205001711845398, 0.6843926906585693, 0.6464993953704834, 0.6104024052619934, 0.5964212417602539, 0.5755261778831482, 0.5623791813850403, 0.5520747303962708, 0.5324838161468506, 0.5212476849555969, 0.5029423236846924, 0.49704980850219727, 0.4821051359176636, 0.4698684513568878, 0.4615153670310974, 0.45655104517936707, 0.44983235001564026, 0.43591275811195374, 0.4254402816295624, 0.4243694245815277, 0.4168550372123718, 0.4022447168827057, 0.4009881317615509, 0.39319491386413574, 0.3927077651023865, 0.3914056718349457, 0.3781209886074066, 0.3730919063091278, 0.3621506094932556, 0.3636579215526581, 0.357896625995636, 0.3471904695034027, 0.34811410307884216, 0.3449143171310425, 0.339387446641922, 0.33898845314979553, 0.3313244581222534, 0.3256436288356781, 0.3259020447731018, 0.31562918424606323, 0.30617329478263855, 0.3027859032154083, 0.30348101258277893, 0.2946409583091736, 0.290791779756546, 0.2891179025173187, 0.28222331404685974, 0.28424328565597534, 0.27593281865119934, 0.27089160680770874, 0.2671969532966614], "accuracy": [0.28661999106407166, 0.48474442958831787, 0.5641262531280518, 0.6260731816291809, 0.6692643165588379, 0.7063795924186707, 0.7234182953834534, 0.7310791015625, 0.7523444890975952, 0.7588165402412415, 0.7729493975639343, 0.7769119143486023, 0.7881389260292053, 0.7944789528846741, 0.798309326171875, 0.8053097128868103, 0.8128384351730347, 0.8220842480659485, 0.8169330358505249, 0.8241975903511047, 0.8274996876716614, 0.8300092220306396, 0.8354246616363525, 0.8366134166717529, 0.839519202709198, 0.8455950617790222, 0.8469158411026001, 0.8499537706375122, 0.8614450097084045, 0.8573504090309143, 0.858671247959137, 0.857218325138092, 0.8581429123878479, 0.8644828796386719, 0.8671245574951172, 0.8698983192443848, 0.8681812286376953, 0.8708229064941406, 0.8732003569602966, 0.8750495314598083, 0.8768987059593201, 0.8782195448875427, 0.8786157965660095, 0.8812574148178101, 0.8816536664962769, 0.8829745054244995, 0.8849557638168335, 0.8869370222091675, 0.894069492816925, 0.8914278149604797, 0.8918240666389465, 0.89552241563797, 0.8936732411384583, 0.8981640338897705, 0.894069492816925, 0.8985602855682373, 0.9037115573883057, 0.9038436412811279], "val_loss": [2.0374839305877686, 1.4998326301574707, 1.0265473127365112, 0.8204602003097534, 0.7350018620491028, 0.6753909587860107, 0.6314399242401123, 0.5944891571998596, 0.5658731460571289, 0.5485671162605286, 0.5259554982185364, 0.5078858137130737, 0.49766096472740173, 0.4902123212814331, 0.4760541319847107, 0.4682265520095825, 0.4545080065727234, 0.4529908299446106, 0.4424111247062683, 0.43527865409851074, 0.4303106963634491, 0.42390862107276917, 0.4189777970314026, 0.4185245633125305, 0.404786080121994, 0.4008522927761078, 0.3987833559513092, 0.39376986026763916, 0.3900305926799774, 0.3892526924610138, 0.38452252745628357, 0.3810941278934479, 0.3763234317302704, 0.37500667572021484, 0.3718036413192749, 0.36837297677993774, 0.3670368790626526, 0.36460238695144653, 0.36061376333236694, 0.35803768038749695, 0.3531971871852875, 0.36067789793014526, 0.35091134905815125, 0.3526335060596466, 0.3478093147277832, 0.34810611605644226, 0.34405985474586487, 0.3432443141937256, 0.3419073820114136, 0.3400139808654785, 0.3386160731315613, 0.3339453637599945, 0.33123621344566345, 0.3344229757785797, 0.3317742943763733, 0.3305515646934509, 0.32925698161125183, 0.33281803131103516], "val_accuracy": [0.54666668176651, 0.6693333387374878, 0.6953333616256714, 0.7149999737739563, 0.7360000014305115, 0.7536666393280029, 0.765666663646698, 0.7770000100135803, 0.784333348274231, 0.7946666479110718, 0.8033333420753479, 0.8130000233650208, 0.8096666932106018, 0.8090000152587891, 0.8236666917800903, 0.8266666531562805, 0.8333333134651184, 0.8323333263397217, 0.8393333554267883, 0.8393333554267883, 0.8393333554267883, 0.8443333506584167, 0.8473333120346069, 0.8503333330154419, 0.8546666502952576, 0.8539999723434448, 0.8569999933242798, 0.859000027179718, 0.8579999804496765, 0.8613333106040955, 0.8666666746139526, 0.8619999885559082, 0.8666666746139526, 0.8673333525657654, 0.8713333606719971, 0.8679999709129333, 0.8706666827201843, 0.8736666440963745, 0.875, 0.875, 0.874666690826416, 0.875333309173584, 0.8806666731834412, 0.8769999742507935, 0.871666669845581, 0.878000020980835, 0.8813333511352539, 0.875, 0.8803333044052124, 0.8826666474342346, 0.8799999952316284, 0.8833333253860474, 0.887333333492279, 0.8806666731834412, 0.8840000033378601, 0.8820000290870667, 0.8859999775886536, 0.8833333253860474]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.854285717010498, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2954375743865967, 2.1931514739990234, 1.7969324588775635, 1.3357892036437988, 1.1026400327682495, 0.9103090763092041, 0.8224104642868042, 0.7911399602890015, 0.7390027046203613, 0.7152798771858215, 0.6970422863960266, 0.6682460308074951, 0.651150643825531, 0.6212397217750549, 0.5961782336235046, 0.5903862118721008, 0.5822132229804993, 0.5641356110572815, 0.5491905212402344, 0.5466046929359436, 0.5301642417907715, 0.5157942771911621, 0.5053235292434692, 0.5026341676712036, 0.4923347532749176, 0.4858868420124054, 0.4714837670326233, 0.46161434054374695, 0.454195499420166, 0.4534156024456024, 0.4369713068008423, 0.4439079761505127, 0.4319983124732971, 0.4280519187450409, 0.4280535578727722, 0.41045835614204407, 0.42049381136894226, 0.40875664353370667, 0.4045780301094055, 0.4010336995124817, 0.3866690993309021, 0.36995530128479004], "accuracy": [0.12481838464736938, 0.32967904210090637, 0.4239862561225891, 0.5414080023765564, 0.6242240071296692, 0.6625280380249023, 0.6933034062385559, 0.7036058902740479, 0.71100252866745, 0.7186633348464966, 0.7331924438476562, 0.7401928305625916, 0.7478536367416382, 0.7640998363494873, 0.7647602558135986, 0.7695152759552002, 0.7791573405265808, 0.7786290049552917, 0.7857614755630493, 0.7868181467056274, 0.7972526550292969, 0.8012151718139648, 0.7967243194580078, 0.7996301651000977, 0.8103289008140564, 0.809140145778656, 0.8204993009567261, 0.813498854637146, 0.8208954930305481, 0.8182538747787476, 0.8265751004219055, 0.83119797706604, 0.8280280232429504, 0.8296129703521729, 0.8321225643157959, 0.8381983637809753, 0.8363492488861084, 0.834632158279419, 0.8416325449943542, 0.8449346423149109, 0.8477083444595337, 0.8525954484939575], "val_loss": [2.2470145225524902, 2.0306451320648193, 1.1643136739730835, 0.8643655776977539, 0.750098466873169, 0.695062518119812, 0.6444629430770874, 0.6265339255332947, 0.6144260168075562, 0.5962815880775452, 0.5650388598442078, 0.5431376099586487, 0.526196300983429, 0.5157132744789124, 0.5100628137588501, 0.5108174681663513, 0.5088450312614441, 0.5044776797294617, 0.500863790512085, 0.4941464066505432, 0.48565351963043213, 0.4803026020526886, 0.4770011901855469, 0.4756714701652527, 0.4691962003707886, 0.45818325877189636, 0.46385425329208374, 0.4560411870479584, 0.4587605893611908, 0.4423450529575348, 0.4414559602737427, 0.44262662529945374, 0.43204906582832336, 0.43630659580230713, 0.42666757106781006, 0.4438689053058624, 0.42086881399154663, 0.41488972306251526, 0.4156057834625244, 0.421266108751297, 0.4218243360519409, 0.4159955382347107], "val_accuracy": [0.4243333339691162, 0.45899999141693115, 0.6386666893959045, 0.6953333616256714, 0.718999981880188, 0.7463333606719971, 0.7590000033378601, 0.7570000290870667, 0.7639999985694885, 0.7739999890327454, 0.7706666588783264, 0.7876666784286499, 0.7893333435058594, 0.7943333387374878, 0.8056666851043701, 0.8046666383743286, 0.8066666722297668, 0.8173333406448364, 0.8073333501815796, 0.8196666836738586, 0.8206666707992554, 0.8146666884422302, 0.8159999847412109, 0.8246666789054871, 0.8240000009536743, 0.831333339214325, 0.8343333601951599, 0.8360000252723694, 0.8366666436195374, 0.846666693687439, 0.8456666469573975, 0.8463333249092102, 0.843666672706604, 0.8426666855812073, 0.8550000190734863, 0.8450000286102295, 0.8583333492279053, 0.8506666421890259, 0.8546666502952576, 0.8583333492279053, 0.8493333458900452, 0.8569999933242798]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 1, 1], [0, 1], [0, 2], [0], [1], [0], [2], [0]], "fitness": -0.8122857213020325, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5844730138778687, 0.8407822251319885, 0.6998866200447083, 0.6438228487968445, 0.5978692770004272, 0.5461496114730835, 0.5389120578765869, 0.4955669045448303, 0.47267431020736694, 0.45976364612579346, 0.4330900311470032, 0.413995623588562, 0.42209336161613464, 0.4643823504447937, 0.4234580993652344, 0.4151460528373718, 0.41228431463241577, 0.4457511901855469, 0.45377734303474426, 0.45718586444854736, 0.4655269682407379, 0.4843076169490814], "accuracy": [0.462950736284256, 0.7100779414176941, 0.7404569983482361, 0.7611940503120422, 0.7866860628128052, 0.7998943328857422, 0.8029322624206543, 0.8191784620285034, 0.8239334225654602, 0.8321225643157959, 0.8445383906364441, 0.8491612672805786, 0.8504821062088013, 0.8430854678153992, 0.8507462739944458, 0.8565579056739807, 0.8618412613868713, 0.852859616279602, 0.8515387773513794, 0.8564258217811584, 0.8383304476737976, 0.8618412613868713], "val_loss": [0.873469889163971, 0.6513863801956177, 0.5852469801902771, 0.5809535980224609, 0.5312782526016235, 0.49771663546562195, 0.4958552122116089, 0.48312443494796753, 0.509112536907196, 0.48088932037353516, 0.4753171503543854, 0.46814677119255066, 0.5139380097389221, 0.4699898362159729, 0.5305792093276978, 0.5031143426895142, 0.5287081599235535, 0.5059751272201538, 0.6446782946586609, 0.5297670364379883, 0.5985085368156433, 0.5930826663970947], "val_accuracy": [0.6956666707992554, 0.7543333172798157, 0.7853333353996277, 0.7870000004768372, 0.8096666932106018, 0.8153333067893982, 0.8243333101272583, 0.8213333487510681, 0.8216666579246521, 0.8330000042915344, 0.8370000123977661, 0.8353333473205566, 0.843666672706604, 0.8463333249092102, 0.8463333249092102, 0.8463333249092102, 0.8489999771118164, 0.8460000157356262, 0.843666672706604, 0.8336666822433472, 0.8473333120346069, 0.8460000157356262]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 8, 6, 0, 1], [0, 2, 0, 2], [39, 39], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 2, 3, 0, 8, 5, 7, 6, 7, 7, 5, 5], [0, 3, 0, 3, 0, 0, 5], [16, 16, 80, 25], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 4, 2, 0], [16, 99, 96, 99, 42, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 4, 2, 1, 19, 12, 7, 4, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.square(grad))), tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.square(grad), tf.math.square(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), sigma)))), grad), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [3, 1, 0, 0, 3], [0, 1, 0, 2, 3], [83, 99, 27], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [0, 3], [0, 1], [0], [0, 1, 1, 5, 4, 7, 0, 6, 0, 6, 7, 1, 1, 7, 7, 2], [0, 65, 27, 95], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 8, 2, 2, 2, 2, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 3, 3, 2, 6, 3, 3, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), beta), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3034474849700928, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 2, 2], [64, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 3, 2, 3, 5], [0, 2, 0, 3, 1], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 3], [0, 1, 0, 3, 0, 0, 3, 1, 2, 0, 7], [5, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 11, 6, 5, 2, 2, 1, 1, 1, 22, 11, 11, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(alpha, tf.constant(1.0, shape=shape, dtype=tf.float32))), sigma)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.subtract(tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma), alpha), tf.math.add(tf.math.multiply(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), grad)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [78, 33], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0], [2, 3, 8, 4, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 3, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 7, 96, 59, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 6, 3, 3, 2, 2, 1, 1, 1, 16, 8, 8, 5], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(beta)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(sigma, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, alpha)))))", "other_info": {"loss": [2.303912401199341, 2.302590847015381, 2.3025920391082764, 2.302588939666748, 2.3025870323181152, 2.302586793899536], "accuracy": [0.09377889335155487, 0.09879804402589798, 0.09642054885625839, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3025810718536377, 2.302581548690796, 2.302581787109375, 2.302581310272217, 2.302581787109375, 2.302581787109375], "val_accuracy": [0.10066666454076767, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]