[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8768571615219116, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2201931476593018, 1.8582675457000732, 1.3775687217712402, 1.0770102739334106, 0.9314761161804199, 0.8342631459236145, 0.7582412362098694, 0.7193092107772827, 0.6834708452224731, 0.658380389213562, 0.6287319660186768, 0.6062895059585571, 0.5922892689704895, 0.573413610458374, 0.5695248246192932, 0.5476924777030945, 0.542055070400238, 0.5221478939056396, 0.5143100023269653, 0.508291482925415, 0.48962900042533875, 0.48720452189445496, 0.4676869511604309, 0.4650377333164215, 0.4550701379776001, 0.44794943928718567, 0.44392549991607666, 0.43483150005340576, 0.4378933608531952, 0.4150461256504059, 0.41104522347450256, 0.4126226007938385, 0.40352147817611694, 0.3936876356601715, 0.3918972313404083, 0.3836611211299896, 0.3829050064086914, 0.3707563877105713, 0.3658818304538727, 0.36015522480010986, 0.3501761555671692, 0.35140153765678406, 0.345133900642395, 0.33632057905197144, 0.3413974344730377, 0.3282955288887024, 0.3313305974006653, 0.31790491938591003, 0.3144773542881012, 0.3107621967792511, 0.3096715211868286, 0.3030807077884674, 0.29643669724464417], "accuracy": [0.28503501415252686, 0.4865935742855072, 0.5674283504486084, 0.6238277554512024, 0.6674151420593262, 0.6944921612739563, 0.7265883088111877, 0.7371549606323242, 0.7537974119186401, 0.7569673657417297, 0.7675340175628662, 0.7817989587783813, 0.7852331399917603, 0.7905164361000061, 0.7935543656349182, 0.8000264167785645, 0.8024039268493652, 0.8128384351730347, 0.8152159452438354, 0.8182538747787476, 0.822348415851593, 0.8281601071357727, 0.8329150676727295, 0.8308017253875732, 0.8422929644584656, 0.8407079577445984, 0.8446704745292664, 0.8469158411026001, 0.8422929644584656, 0.8500858545303345, 0.8504821062088013, 0.8481045961380005, 0.8521991968154907, 0.858671247959137, 0.8602562546730042, 0.8595958352088928, 0.8652753829956055, 0.868049144744873, 0.8689737319946289, 0.8702945709228516, 0.8794082403182983, 0.8714832663536072, 0.878351628780365, 0.8796724081039429, 0.876370370388031, 0.8873332738876343, 0.8862766027450562, 0.8865407705307007, 0.884691596031189, 0.8864086866378784, 0.8901069760322571, 0.8927486538887024, 0.8971073627471924], "val_loss": [2.0413851737976074, 1.514105200767517, 1.0583677291870117, 0.8592707514762878, 0.7740457653999329, 0.7172911763191223, 0.6743237972259521, 0.6404489874839783, 0.614373505115509, 0.5918430685997009, 0.5752889513969421, 0.5584949254989624, 0.5479799509048462, 0.5390009880065918, 0.5211682915687561, 0.5125229358673096, 0.5044872760772705, 0.4917721450328827, 0.48122870922088623, 0.475556880235672, 0.4712534248828888, 0.4650847315788269, 0.45749378204345703, 0.45077529549598694, 0.4485456645488739, 0.43812140822410583, 0.43533560633659363, 0.4419502317905426, 0.4264795780181885, 0.42416590452194214, 0.416115403175354, 0.41724878549575806, 0.4114464521408081, 0.40648531913757324, 0.40609610080718994, 0.4034130871295929, 0.40232929587364197, 0.3971997797489166, 0.3952208161354065, 0.3917807936668396, 0.39195799827575684, 0.38465777039527893, 0.38516414165496826, 0.38803353905677795, 0.38440990447998047, 0.37906694412231445, 0.38201355934143066, 0.3792774975299835, 0.37492623925209045, 0.37350574135780334, 0.3698744773864746, 0.36938032507896423, 0.3728252649307251], "val_accuracy": [0.5429999828338623, 0.6499999761581421, 0.6696666479110718, 0.6946666836738586, 0.7226666808128357, 0.7366666793823242, 0.7570000290870667, 0.7676666378974915, 0.7710000276565552, 0.7879999876022339, 0.7919999957084656, 0.7933333516120911, 0.8043333292007446, 0.7976666688919067, 0.8166666626930237, 0.8159999847412109, 0.8220000267028809, 0.824999988079071, 0.8323333263397217, 0.8296666741371155, 0.8336666822433472, 0.8333333134651184, 0.8376666903495789, 0.8399999737739563, 0.8426666855812073, 0.843999981880188, 0.8479999899864197, 0.8413333296775818, 0.8526666760444641, 0.8513333201408386, 0.8543333411216736, 0.8533333539962769, 0.8546666502952576, 0.8550000190734863, 0.8600000143051147, 0.856333315372467, 0.862666666507721, 0.862666666507721, 0.8613333106040955, 0.8673333525657654, 0.8629999756813049, 0.8676666617393494, 0.8679999709129333, 0.8636666536331177, 0.8616666793823242, 0.8679999709129333, 0.8653333187103271, 0.8713333606719971, 0.8706666827201843, 0.8700000047683716, 0.8713333606719971, 0.8683333396911621, 0.8676666617393494]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 0, 1, 1], [0, 3], [0, 3], [0], [0, 1], [0], [1], [0]], "fitness": -0.843999981880188, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.294257164001465, 2.1941463947296143, 1.7848483324050903, 1.3708359003067017, 1.097275733947754, 0.9376547336578369, 0.8690415620803833, 0.8153565526008606, 0.7557389140129089, 0.738682746887207, 0.70261549949646, 0.6843888759613037, 0.6373437643051147, 0.6179272532463074, 0.5953109860420227, 0.5991204380989075, 0.5697866082191467, 0.5686816573143005, 0.554648220539093, 0.5346018075942993, 0.5365322828292847, 0.5099217891693115, 0.5087613463401794, 0.5021399855613708, 0.4872349202632904, 0.4586297273635864, 0.46034637093544006, 0.4592335820198059, 0.44929468631744385, 0.4375367760658264, 0.4311061203479767, 0.42866647243499756, 0.4134845733642578, 0.40142232179641724, 0.3971969187259674, 0.38202691078186035, 0.38593590259552, 0.3706066310405731, 0.3653605878353119, 0.37448105216026306, 0.34990257024765015, 0.3659224510192871, 0.3477189838886261, 0.3489347994327545, 0.34861794114112854, 0.3380000591278076, 0.3340017795562744, 0.33565419912338257, 0.3258102238178253, 0.3168950080871582, 0.3081831932067871, 0.31728482246398926], "accuracy": [0.12996962666511536, 0.32122573256492615, 0.43785497546195984, 0.5386342406272888, 0.6383568644523621, 0.6598864197731018, 0.684982180595398, 0.6992471218109131, 0.7173424959182739, 0.718399167060852, 0.735569953918457, 0.7382115721702576, 0.7602694630622864, 0.7664773464202881, 0.769911527633667, 0.7726852297782898, 0.7854973077774048, 0.7869502305984497, 0.7882710099220276, 0.7938185334205627, 0.7977809906005859, 0.8070268034934998, 0.8078193068504333, 0.8115176558494568, 0.8142913579940796, 0.8255184292793274, 0.8274996876716614, 0.8277638554573059, 0.8301413059234619, 0.8338396549224854, 0.8376700282096863, 0.8409721255302429, 0.8455950617790222, 0.8433496356010437, 0.8486329317092896, 0.8543124794960022, 0.8541803956031799, 0.8581429123878479, 0.8602562546730042, 0.8569541573524475, 0.86118084192276, 0.8672566413879395, 0.8664641380310059, 0.8659358024597168, 0.8728041052818298, 0.8753136992454529, 0.8708229064941406, 0.8750495314598083, 0.8753136992454529, 0.873860776424408, 0.8825782537460327, 0.8838990926742554], "val_loss": [2.2474167346954346, 2.026702880859375, 1.1487319469451904, 0.9055814743041992, 0.7565335035324097, 0.7215526700019836, 0.6603029370307922, 0.6330780386924744, 0.6309732794761658, 0.5871906280517578, 0.5509329438209534, 0.5296494364738464, 0.5228728652000427, 0.4991506338119507, 0.50022292137146, 0.4855409264564514, 0.4800012707710266, 0.478227823972702, 0.4693589210510254, 0.4592348635196686, 0.45356982946395874, 0.4408835172653198, 0.4421551823616028, 0.4330503046512604, 0.42367786169052124, 0.41807013750076294, 0.4168664216995239, 0.41235995292663574, 0.4110938012599945, 0.41335535049438477, 0.40306949615478516, 0.4007072448730469, 0.4054570198059082, 0.4060037136077881, 0.40200284123420715, 0.3963770270347595, 0.3951353430747986, 0.3874887228012085, 0.3852378726005554, 0.381243497133255, 0.3833407759666443, 0.3837602436542511, 0.3902117609977722, 0.38878974318504333, 0.3958425223827362, 0.3879237473011017, 0.39112618565559387, 0.40359026193618774, 0.38973963260650635, 0.39867398142814636, 0.4027460217475891, 0.4256006181240082], "val_accuracy": [0.43700000643730164, 0.48533332347869873, 0.6489999890327454, 0.675000011920929, 0.7149999737739563, 0.7253333330154419, 0.7453333139419556, 0.7559999823570251, 0.7486666440963745, 0.7739999890327454, 0.7766666412353516, 0.7903333306312561, 0.8019999861717224, 0.8066666722297668, 0.8066666722297668, 0.8153333067893982, 0.8190000057220459, 0.8140000104904175, 0.8199999928474426, 0.8209999799728394, 0.8286666870117188, 0.8299999833106995, 0.8316666483879089, 0.8399999737739563, 0.8429999947547913, 0.846666693687439, 0.8516666889190674, 0.8543333411216736, 0.8539999723434448, 0.8606666922569275, 0.8569999933242798, 0.8583333492279053, 0.8553333282470703, 0.8600000143051147, 0.8629999756813049, 0.8603333234786987, 0.859666645526886, 0.8703333139419556, 0.8646666407585144, 0.8669999837875366, 0.8713333606719971, 0.8700000047683716, 0.871999979019165, 0.875333309173584, 0.8703333139419556, 0.8763333559036255, 0.8813333511352539, 0.875, 0.8803333044052124, 0.8733333349227905, 0.8799999952316284, 0.875]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0], [0, 9], [0], [0], [1], [0], [2], [0]], "fitness": -0.8259999752044678, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.6444900035858154, 0.8987694978713989, 0.7171507477760315, 0.6557784080505371, 0.6211984753608704, 0.5637423396110535, 0.5716395974159241, 0.5368286371231079, 0.5209383368492126, 0.5178247094154358, 0.5085836052894592, 0.49672895669937134, 0.5095859169960022, 0.5102869868278503, 0.5829195976257324, 0.5513278841972351, 0.5994151830673218, 0.623245894908905, 0.6484508514404297, 0.6831416487693787, 0.7828466296195984], "accuracy": [0.47549861669540405, 0.6859067678451538, 0.7387399077415466, 0.7494386434555054, 0.7729493975639343, 0.7932901978492737, 0.7927618622779846, 0.8033285140991211, 0.8055738806724548, 0.8079513907432556, 0.8158763647079468, 0.8297450542449951, 0.8234050869941711, 0.8062343001365662, 0.8062343001365662, 0.811649739742279, 0.8150838613510132, 0.8100647330284119, 0.7828556299209595, 0.7887993454933167, 0.7662131786346436], "val_loss": [0.9052894115447998, 0.6110712289810181, 0.5407393574714661, 0.5030461549758911, 0.4882839322090149, 0.4818479120731354, 0.4637727737426758, 0.5079305768013, 0.47613757848739624, 0.5078076720237732, 0.48916366696357727, 0.5392876267433167, 0.5559908151626587, 0.5844744443893433, 0.5441067218780518, 0.4830852746963501, 0.5392742156982422, 0.5637456774711609, 0.622910737991333, 0.5481664538383484, 0.7914242148399353], "val_accuracy": [0.6703333258628845, 0.7670000195503235, 0.7919999957084656, 0.8076666593551636, 0.8199999928474426, 0.8253333568572998, 0.8263333439826965, 0.8180000185966492, 0.8330000042915344, 0.8289999961853027, 0.8336666822433472, 0.8386666774749756, 0.8353333473205566, 0.82833331823349, 0.8333333134651184, 0.8450000286102295, 0.8370000123977661, 0.8259999752044678, 0.8289999961853027, 0.8180000185966492, 0.8159999847412109]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 14}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 8], [0, 2, 0, 2], [39, 53], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 1, 2, 3, 5], [0, 2, 0, 3], [16, 63], [0, 1], [0], [0], [29], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 2, 8, 1, 4, 1, 4, 0, 2], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 96, 85, 61, 33]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 5, 3, 2, 1, 0, 1, 1, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), tf.math.sqrt(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), grad)), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.subtract(tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), alpha), tf.math.negative(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 2, 3, 2, 3, 6], [0, 1, 0, 2, 3, 0], [39, 39, 75], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 1, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8, 9], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 68, 89, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 6, 6, 3, 2, 1, 1, 1, 2, 1, 1, 1, 21, 12, 9, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.divide_no_nan(grad, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, tf.math.add(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), sigma), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11768590658903122, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [2, 1, 0, 2], [39, 39], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [2, 2, 3, 0, 2, 5], [0, 2, 0, 3], [16, 16], [0, 1, 1], [1], [0, 3], [42], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [6, 5, 3, 6, 8, 1, 0, 1, 4, 2, 6], [0, 0, 1, 3, 2, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 1, 8, 4, 4, 2, 3, 1, 2, 1, 11, 6, 5, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(grad), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha))), tf.math.subtract(sigma, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [58, 16], [0, 1], [0], [4], [99], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 4, 0, 3, 4, 2, 0], [16, 96, 96, 99, 61, 1]], "fitness": -0.09142857044935226, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 0, 16, 8, 8, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), sigma)), grad), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, grad)))", "other_info": {"loss": [2.309591293334961, 2.3097875118255615, 2.310518503189087, 2.3107216358184814, 2.309530735015869, 2.310192346572876], "accuracy": [0.09126931428909302, 0.09285431355237961, 0.09272222965955734, 0.09192973375320435, 0.09681680053472519, 0.09140139818191528], "val_loss": [2.309264659881592, 2.309264659881592, 2.309264659881592, 2.309264659881592, 2.309264659881592, 2.309264659881592], "val_accuracy": [0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862, 0.08833333104848862]}}]