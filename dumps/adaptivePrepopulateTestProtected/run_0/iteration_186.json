[{"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8805714249610901, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.221585988998413, 1.8659464120864868, 1.3939106464385986, 1.0966308116912842, 0.9349022507667542, 0.8419743776321411, 0.7695197463035583, 0.729751467704773, 0.6897091865539551, 0.6576535105705261, 0.6359990835189819, 0.6094067096710205, 0.589935839176178, 0.5596274733543396, 0.5528120398521423, 0.5393894910812378, 0.5281672477722168, 0.5202223062515259, 0.5057564377784729, 0.5040625333786011, 0.48261573910713196, 0.46983885765075684, 0.4574008584022522, 0.454408198595047, 0.4424269199371338, 0.42842501401901245, 0.42894208431243896, 0.42616719007492065, 0.41881483793258667, 0.4155913293361664, 0.4008829891681671, 0.39691162109375, 0.38997870683670044, 0.38351768255233765, 0.37681254744529724, 0.3729562759399414, 0.36148902773857117, 0.362969309091568, 0.3563940227031708, 0.3505782186985016, 0.35241496562957764, 0.34010687470436096, 0.3387279510498047, 0.3343537747859955, 0.3285624086856842, 0.32427793741226196, 0.319965660572052, 0.3122166097164154, 0.30889007449150085, 0.3045063316822052], "accuracy": [0.2694492042064667, 0.48870691657066345, 0.568220853805542, 0.6156386137008667, 0.6696605682373047, 0.6963412761688232, 0.7223616242408752, 0.7312111854553223, 0.750759482383728, 0.7600052952766418, 0.7696473598480225, 0.7761194109916687, 0.787082314491272, 0.7985734939575195, 0.7980451583862305, 0.8045172095298767, 0.8121780753135681, 0.8125742673873901, 0.8178576231002808, 0.8191784620285034, 0.8251221776008606, 0.8322546482086182, 0.8356888294219971, 0.8359529972076416, 0.8389908671379089, 0.846387505531311, 0.8451988101005554, 0.8454629778862, 0.848368763923645, 0.8531237840652466, 0.8598600029945374, 0.854708731174469, 0.8605204224586487, 0.8609166741371155, 0.86553955078125, 0.8639545440673828, 0.8689737319946289, 0.8706908226013184, 0.873860776424408, 0.872407853603363, 0.8710870146751404, 0.8776912093162537, 0.8792761564254761, 0.8824461698532104, 0.882710337638855, 0.8811253309249878, 0.887597382068634, 0.887597382068634, 0.8906353116035461, 0.8911636471748352], "val_loss": [2.0369274616241455, 1.5092171430587769, 1.0378726720809937, 0.8372371196746826, 0.7430018186569214, 0.693951427936554, 0.6459794044494629, 0.6065753698348999, 0.5836796760559082, 0.5591391324996948, 0.5475665926933289, 0.5286199450492859, 0.5111508965492249, 0.49807658791542053, 0.4888598918914795, 0.4807276725769043, 0.4732670187950134, 0.46291399002075195, 0.4651739001274109, 0.44972753524780273, 0.44051307439804077, 0.4300120174884796, 0.42833927273750305, 0.4226953983306885, 0.42076465487480164, 0.41008231043815613, 0.40701472759246826, 0.4087570011615753, 0.3987274467945099, 0.39754143357276917, 0.3908216655254364, 0.39351579546928406, 0.3876643180847168, 0.3835429251194, 0.3747929334640503, 0.37449854612350464, 0.3731365501880646, 0.3678072988986969, 0.3718084394931793, 0.3737613260746002, 0.36592888832092285, 0.3612542748451233, 0.3634853661060333, 0.3576800525188446, 0.35225361585617065, 0.35540124773979187, 0.35645702481269836, 0.3527815639972687, 0.3493586778640747, 0.349461168050766], "val_accuracy": [0.5453333258628845, 0.6666666865348816, 0.6899999976158142, 0.7136666774749756, 0.737666666507721, 0.7523333430290222, 0.765666663646698, 0.7816666960716248, 0.7886666655540466, 0.7976666688919067, 0.7953333258628845, 0.8090000152587891, 0.8193333148956299, 0.8209999799728394, 0.8233333230018616, 0.8309999704360962, 0.8243333101272583, 0.843666672706604, 0.8333333134651184, 0.840666651725769, 0.846666693687439, 0.8569999933242798, 0.8533333539962769, 0.8556666374206543, 0.8533333539962769, 0.8613333106040955, 0.8636666536331177, 0.8616666793823242, 0.8659999966621399, 0.862333357334137, 0.8683333396911621, 0.8663333058357239, 0.871999979019165, 0.8673333525657654, 0.8763333559036255, 0.878000020980835, 0.8756666779518127, 0.878000020980835, 0.8756666779518127, 0.8756666779518127, 0.8790000081062317, 0.8776666522026062, 0.8809999823570251, 0.8813333511352539, 0.8833333253860474, 0.8796666860580444, 0.8826666474342346, 0.8826666474342346, 0.8823333382606506, 0.8830000162124634]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 0, 1, 0, 2], [83, 99, 27], [0, 1], [0], [0], [0], [0, 1], [0], [0], [0], [0, 1], [0], [1], [0]], "fitness": -0.8545714020729065, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(1.0, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2928307056427, 2.1913671493530273, 1.7917717695236206, 1.3405365943908691, 1.1001999378204346, 0.9364126920700073, 0.8533380031585693, 0.8236818909645081, 0.7595068216323853, 0.7455233335494995, 0.7171653509140015, 0.6882250905036926, 0.6579455137252808, 0.6227515339851379, 0.616167426109314, 0.5857982039451599, 0.5848509073257446, 0.5637708902359009, 0.5470007061958313, 0.5503659248352051, 0.5407349467277527, 0.5169092416763306, 0.518777072429657, 0.5076774954795837, 0.49475300312042236, 0.47187986969947815, 0.47179824113845825, 0.46934208273887634, 0.45559820532798767, 0.4491081237792969, 0.43832847476005554, 0.42394715547561646, 0.41523754596710205, 0.4160766303539276, 0.4048861563205719, 0.3993885815143585, 0.3977985084056854, 0.37805604934692383, 0.3705151379108429, 0.36453455686569214, 0.364696204662323, 0.35866114497184753, 0.3567659556865692, 0.3436247408390045, 0.35133135318756104, 0.34530454874038696, 0.32976266741752625, 0.3298911154270172, 0.32453835010528564], "accuracy": [0.1262712925672531, 0.32743361592292786, 0.42570334672927856, 0.5395588278770447, 0.6322810649871826, 0.6576409935951233, 0.691850483417511, 0.7008321285247803, 0.7053229212760925, 0.7073041796684265, 0.7260599732398987, 0.7341170310974121, 0.7469290494918823, 0.7611940503120422, 0.7622507214546204, 0.774798572063446, 0.7771760821342468, 0.7799497842788696, 0.7897239327430725, 0.7926297783851624, 0.7973847389221191, 0.8035926818847656, 0.8074230551719666, 0.8035926818847656, 0.8079513907432556, 0.8195747137069702, 0.821820080280304, 0.8232730031013489, 0.8249900937080383, 0.8334434032440186, 0.8322546482086182, 0.8437458872795105, 0.8442742228507996, 0.8448025584220886, 0.8422929644584656, 0.8469158411026001, 0.8494254350662231, 0.8570862412452698, 0.856689989566803, 0.8593316674232483, 0.8625016212463379, 0.8590674996376038, 0.8574824929237366, 0.8618412613868713, 0.86118084192276, 0.8652753829956055, 0.8722757697105408, 0.8693699836730957, 0.8747853636741638], "val_loss": [2.2482547760009766, 2.0313968658447266, 1.1692343950271606, 0.9091692566871643, 0.7803206443786621, 0.73909991979599, 0.6982950568199158, 0.6846687197685242, 0.670233428478241, 0.6455382704734802, 0.6290590763092041, 0.590219259262085, 0.589083731174469, 0.5682938098907471, 0.5494974255561829, 0.5338942408561707, 0.5263871550559998, 0.5253816843032837, 0.5243104696273804, 0.5201951861381531, 0.5063660740852356, 0.5081109404563904, 0.4961777627468109, 0.4831198453903198, 0.47488468885421753, 0.4810134768486023, 0.4760725200176239, 0.4592326581478119, 0.45352548360824585, 0.45140552520751953, 0.44666051864624023, 0.44567036628723145, 0.44325292110443115, 0.4391651153564453, 0.43956539034843445, 0.4378451406955719, 0.43177729845046997, 0.42696696519851685, 0.4205722510814667, 0.4343593418598175, 0.4291495680809021, 0.4231685400009155, 0.4258921444416046, 0.41680169105529785, 0.43549588322639465, 0.43428492546081543, 0.4351944029331207, 0.43747061491012573, 0.4245477020740509], "val_accuracy": [0.40166667103767395, 0.48533332347869873, 0.6346666812896729, 0.6940000057220459, 0.7200000286102295, 0.7350000143051147, 0.7409999966621399, 0.7356666922569275, 0.7526666522026062, 0.7566666603088379, 0.7613333463668823, 0.7743333578109741, 0.7749999761581421, 0.7756666541099548, 0.7860000133514404, 0.7940000295639038, 0.7983333468437195, 0.8006666898727417, 0.8003333210945129, 0.8063333630561829, 0.8096666932106018, 0.8076666593551636, 0.8140000104904175, 0.8173333406448364, 0.8256666660308838, 0.8236666917800903, 0.824999988079071, 0.8349999785423279, 0.8410000205039978, 0.8416666388511658, 0.8446666598320007, 0.843666672706604, 0.8456666469573975, 0.8519999980926514, 0.8506666421890259, 0.8556666374206543, 0.8506666421890259, 0.8489999771118164, 0.8533333539962769, 0.8550000190734863, 0.859333336353302, 0.8556666374206543, 0.859666645526886, 0.862333357334137, 0.8583333492279053, 0.859333336353302, 0.8619999885559082, 0.8616666793823242, 0.8583333492279053]}, "mapping_values": [1, 10, 5, 5, 3, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 12}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 2, 3, 0, 3], [0, 1, 0, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 0, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 8], [0, 0, 0, 3, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.8537142872810364, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma)))), alpha), tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2223548889160156, 1.8609716892242432, 1.393649935722351, 1.098339319229126, 0.9375613927841187, 0.8418760299682617, 0.7701900005340576, 0.7308720946311951, 0.69645756483078, 0.6700806617736816, 0.6377179622650146, 0.6243612766265869, 0.5964446663856506, 0.5736841559410095, 0.5698173642158508, 0.5549808144569397, 0.5306507349014282, 0.5239008665084839, 0.5113908648490906, 0.49793773889541626, 0.4865671694278717, 0.4768751263618469, 0.465015709400177, 0.4653433561325073, 0.4582282304763794, 0.44579240679740906, 0.43634897470474243, 0.4265073239803314, 0.41936516761779785, 0.42281123995780945, 0.4126979410648346, 0.4043557047843933, 0.3881371021270752, 0.3876836895942688, 0.383409708738327, 0.38092637062072754, 0.37055981159210205, 0.3643248975276947, 0.3565916419029236, 0.3541908860206604, 0.3478877544403076, 0.34419161081314087, 0.34241512417793274, 0.3306560814380646, 0.33376920223236084, 0.32416832447052], "accuracy": [0.27460044622421265, 0.48514068126678467, 0.5604279637336731, 0.6190727949142456, 0.6671509742736816, 0.7012283802032471, 0.7213049530982971, 0.7320036888122559, 0.7454761862754822, 0.7564390301704407, 0.7705719470977783, 0.7703077793121338, 0.7847048044204712, 0.791969358921051, 0.7956677079200745, 0.800290584564209, 0.8105930685997009, 0.8125742673873901, 0.8156121969223022, 0.8191784620285034, 0.8238013386726379, 0.8273676037788391, 0.8333113193511963, 0.8334434032440186, 0.8364813327789307, 0.8412362933158875, 0.8448025584220886, 0.8494254350662231, 0.8475762605667114, 0.8520671129226685, 0.850350022315979, 0.857218325138092, 0.8617091774940491, 0.8632941246032715, 0.863029956817627, 0.8628978729248047, 0.8623695969581604, 0.8710870146751404, 0.8704266548156738, 0.8701624870300293, 0.8758420348167419, 0.8749174475669861, 0.8792761564254761, 0.880729079246521, 0.8829745054244995, 0.8842953443527222], "val_loss": [2.0378427505493164, 1.505448579788208, 1.0349810123443604, 0.8320810794830322, 0.7394691705703735, 0.6800004839897156, 0.638070821762085, 0.6023632884025574, 0.578813910484314, 0.5573400259017944, 0.5375666618347168, 0.5221344232559204, 0.5086202025413513, 0.496711790561676, 0.4863678514957428, 0.48010921478271484, 0.4631929099559784, 0.4569343328475952, 0.4502381980419159, 0.4392399191856384, 0.4357621371746063, 0.43051183223724365, 0.4273964762687683, 0.41993847489356995, 0.41605591773986816, 0.41065841913223267, 0.4056216776371002, 0.39956527948379517, 0.39919060468673706, 0.3938879072666168, 0.3939284682273865, 0.3864257037639618, 0.3832365870475769, 0.3834190368652344, 0.3812513053417206, 0.3790282905101776, 0.3741287291049957, 0.3740282356739044, 0.368531733751297, 0.36616837978363037, 0.36395883560180664, 0.36441972851753235, 0.36333635449409485, 0.3625001907348633, 0.36044660210609436, 0.36634522676467896], "val_accuracy": [0.5683333277702332, 0.6576666831970215, 0.6926666498184204, 0.7153333425521851, 0.7379999756813049, 0.7556666731834412, 0.7683333158493042, 0.7770000100135803, 0.7923333048820496, 0.8009999990463257, 0.8053333163261414, 0.8103333115577698, 0.8233333230018616, 0.8166666626930237, 0.828000009059906, 0.8270000219345093, 0.8356666564941406, 0.840666651725769, 0.8410000205039978, 0.8450000286102295, 0.8453333377838135, 0.8506666421890259, 0.8483333587646484, 0.8510000109672546, 0.8533333539962769, 0.8553333282470703, 0.8576666712760925, 0.8633333444595337, 0.8610000014305115, 0.862333357334137, 0.8583333492279053, 0.8669999837875366, 0.8650000095367432, 0.8653333187103271, 0.8646666407585144, 0.8676666617393494, 0.8723333477973938, 0.8673333525657654, 0.8696666955947876, 0.871999979019165, 0.8759999871253967, 0.8723333477973938, 0.8700000047683716, 0.8740000128746033, 0.8756666779518127, 0.8700000047683716]}, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 2, 2, 1, 1, 1, 21, 11, 10, 6], "tree_depth": 18}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 2, 3, 1, 3, 5], [0, 0, 1, 0, 2], [0, 39, 39], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 3, 1, 6, 3, 8, 2], [0, 0, 2, 0, 3, 1, 0], [0, 27, 16, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 3, 3, 0, 1, 2, 4, 9], [0, 3, 4, 0, 3], [0, 51, 71], [1], [0], [2], [0]], "fitness": -0.8374285697937012, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(0.0, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), sigma), tf.math.negative(tf.math.subtract(tf.math.add(tf.math.pow(grad, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), sigma)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.5056471824645996, 0.8886048793792725, 0.7070791721343994, 0.6310861706733704, 0.5946421027183533, 0.535864531993866, 0.5077855587005615, 0.4752615690231323, 0.4667980670928955, 0.46481385827064514, 0.45984509587287903, 0.4290218651294708, 0.44750383496284485, 0.43410295248031616, 0.4290609359741211, 0.43461713194847107, 0.4379268288612366], "accuracy": [0.4924052357673645, 0.700171709060669, 0.7429665923118591, 0.7619865536689758, 0.7798177003860474, 0.8001585006713867, 0.8157442808151245, 0.8220842480659485, 0.8298771381378174, 0.8341038227081299, 0.8334434032440186, 0.8426892161369324, 0.837141752243042, 0.8512746095657349, 0.8508783578872681, 0.8500858545303345, 0.8481045961380005], "val_loss": [0.8650757670402527, 0.597976803779602, 0.5924225449562073, 0.5348069071769714, 0.5054197907447815, 0.4861658215522766, 0.4633643329143524, 0.4720240831375122, 0.48198550939559937, 0.5198495388031006, 0.5311980247497559, 0.5085980296134949, 0.48570898175239563, 0.4954095482826233, 0.5530183911323547, 0.5774403810501099, 0.5671274662017822], "val_accuracy": [0.7009999752044678, 0.7833333611488342, 0.7860000133514404, 0.7946666479110718, 0.8086666464805603, 0.8259999752044678, 0.8330000042915344, 0.8410000205039978, 0.8330000042915344, 0.843999981880188, 0.8293333053588867, 0.8496666550636292, 0.8433333039283752, 0.8356666564941406, 0.8486666679382324, 0.8496666550636292, 0.8479999899864197]}, "mapping_values": [1, 11, 6, 5, 3, 15, 8, 7, 4, 13, 8, 5, 3, 1, 0, 1, 0], "tree_depth": 16}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 3, 1, 3], [0, 1, 0, 2, 2], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [8, 2, 3, 0, 3, 5], [0, 3, 0, 3], [0, 20], [1, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 9, 8, 1], [0, 0, 0, 4, 0, 4, 3, 1, 2, 0], [16, 99, 96, 99, 61, 71]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 5, 5, 2, 10, 6, 4, 2, 1, 0, 1, 1, 21, 12, 9, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(0.0, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.0, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.0, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(grad, tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), grad)), sigma), tf.math.sqrt(tf.math.subtract(alpha, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 8, 3, 0, 3, 6, 0], [0, 1, 0, 2], [39, 83], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 2, 3, 0, 3, 5, 6, 7, 0, 6, 5], [0, 2, 0, 3, 2, 5, 5], [71, 16], [0, 1], [0], [0], [99], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 3, 2, 6, 8, 1, 1, 1, 4, 2, 8], [0, 0, 0, 4, 0, 0, 3, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.negative(tf.math.divide_no_nan(beta, tf.math.square(grad))))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303741931915283, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 11, 7, 4, 2, 18, 11, 7, 2, 2, 1, 1, 1, 1, 0, 1, 1], "tree_depth": 21}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 9, 2, 0, 3], [3, 0, 1, 0, 2], [39, 39], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 2, 3, 0, 3, 5, 9], [0, 0, 0, 3], [0, 79, 88, 24], [0, 1], [0], [3], [99], [0, 1], [0], [1], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 1, 1, 0, 10, 7, 3, 4, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(0.0, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.math.square(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 3, 8, 3], [0, 1, 0, 1], [39, 39], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 3, 0, 3, 5], [0, 2, 3, 3], [16, 16], [0, 1], [0], [0], [99], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [6, 3, 3, 6, 8, 1, 4, 1, 4, 2, 5, 3, 8, 4, 6, 1, 8], [2, 0, 0, 3, 4, 0, 3, 1, 2, 0, 2, 1, 2, 0], [16, 99, 96, 99, 61, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 5, 4, 2, 10, 6, 4, 1, 2, 1, 1, 1, 31, 17, 14, 5], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.math.multiply(tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), beta), tf.math.multiply(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.0, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.0, shape=shape, dtype=tf.float32), sigma))), tf.math.subtract(grad, tf.math.pow(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), sigma), tf.math.square(tf.math.multiply(alpha, beta)))))), tf.constant(1.0, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(tf.math.divide_no_nan(tf.math.subtract(beta, alpha), tf.math.sqrt(beta)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925, 0.09566666930913925]}}]